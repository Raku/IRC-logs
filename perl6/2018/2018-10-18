[00:00] <Zoffix> .tell nige I recall you offering trademark smoketest? This is the current list of proposals I got: https://gist.github.com/zoffixznet/f18842f7c7e051b8c2fcdc265e40bd15   No pressure if you can't/don't wanna smoketest anything.

[00:00] <yoleaux> Zoffix: I'll pass your message to nige.

[00:00] <Zoffix> Thank you robot, you're most kind.

[00:00] <Zoffix> .botsnack

[00:00] <yoleaux> :D

[00:04] <TimToady> Zoffix: while impatience is certainly a virtue, I don't entirely appreciate this nudging the timeline up; I've been deliberating with the intent to make a decision by Nov 1 as originally stipulated, and I do intend to be the decider (because cultural hacks are what I do), so a straw poll will (at best) be relatively meaningless

[00:05] <Zoffix> \o/

[00:05] <Zoffix> TimToady: awesome. 

[00:05] <Zoffix> TimToady: no nudging, Nov 1 is still good. I just wasn't sure if you were gonna respond at all

[00:06] <TimToady> my wife will tell you I go way too quiet when I'm thinking :)

[00:06] <Zoffix> OK, sorry :)

[00:06] <Zoffix> .tell nige never mind. Turns out we won't need any polls

[00:06] <yoleaux> Zoffix: I'll pass your message to nige.

[00:07] <holyghost> Zoffix: I've uploaded again, the errors should be out now, note that it's perl 6.c that's probably why it does not show up

[00:08] <Zoffix> holyghost: what do you mean "it's perl 6.c"?

[00:08] <holyghost> the json section "perl" is "6.c"

[00:09] <Zoffix> holyghost: that's fine. That section indicates the minimum language version your module supports. 6.c is the current version (until next month). 

[00:09] <holyghost> ok

[00:10] <buggable> New CPAN upload: Bayes-Learn-0.1.6.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Bayes-Learn-0.1.6.tar.gz

[00:10] <buggable> New CPAN upload: Game-Markov-0.1.4.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Game-Markov-0.1.4.tar.gz

[00:12] <Zoffix> holyghost: what did you fix? It still has an error? The bayes learn one

[00:12] <Zoffix> Missing quotes -> "depends" : [ Mathx::Stat ],

[00:12] <Zoffix> And same error still exists in the other one

[00:17] <holyghost> Zoffix: fixed and uploaded, thanks

[00:17] <holyghost> eco: Mathx::Stat

[00:17] <buggable> holyghost, Mathx::Stat 'Statistics package unto Correlation Dimension.': http://modules.perl6.org/dist/Mathx::Stat:cpan:HOLYGHOST

[00:17] <Zoffix> \o/

[00:18] <holyghost> coolness

[00:18] <holyghost> my code has been mirrored :-)

[00:18] <Zoffix> :)

[00:22] <holyghost> (__)

[00:22] <holyghost> oo  )

[00:22] <holyghost> |_/\

[00:22] <holyghost> moooh!

[00:24] *** itaipu left
[00:30] <buggable> New CPAN upload: Bayes-Learn-0.1.7.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Bayes-Learn-0.1.7.tar.gz

[00:30] <buggable> New CPAN upload: Game-Markov-0.1.5.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Game-Markov-0.1.5.tar.gz

[00:34] <holyghost> eco: Bayes::Learn

[00:34] <buggable> holyghost, Nothing found

[00:35] <Zoffix> up to ~1hr

[00:35] <Zoffix> Loading META file from dists-from-CPAN/id/H/HO/HOLYGHOST/Perl6/AI-Markov-0.1.1.meta

[00:35] <Zoffix> [error] Failed to parse: JSON error: , or } expected while parsing object/hash, at character offset 393 (before ""AI::Markov::" : "HM...") at /home/modules.perl6.org/perl5/perlbrew/perls/perl-5.26.1/lib/site_perl/5.26.1/JSON/Meth.pm line 34.

[00:36] <holyghost> it's Game::Markov not AI::Markov

[00:36] <Zoffix> holyghost: but I'm saying AI::Markov is also broken.

[00:36] <Zoffix> You didn't re-upload that one

[00:37] <holyghost> AI::Markov will disappear

[00:37] <holyghost> I had to change the name

[00:37] <Zoffix> ok

[00:37] <holyghost> it's not even indexed so that should be ok

[00:37] *** lizmat left
[00:37] <holyghost> Eventually, I'll try to make a game myself and put it on CPAN

[00:38] <Geth> ¬¶ modules.perl6.org: f917d34665 | (Zoffix Znet)++ (committed using GitHub Web editor) | use-me-for-commit-triggers

[00:38] <Geth> ¬¶ modules.perl6.org: [NEWDB] Flush old CPAN dists

[00:38] <Geth> ¬¶ modules.perl6.org: 

[00:38] <Geth> ¬¶ modules.perl6.org: Due to https://github.com/perl6/modules.perl6.org/issues/97

[00:38] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/f917d34665

[00:41] <Zoffix> .tell samcv FYI: https://github.com/samcv/perl6-Git-Log/pull/1

[00:41] <yoleaux> Zoffix: I'll pass your message to samcv.

[00:45] *** mattp_ joined
[00:46] *** p6bannerbot sets mode: +v mattp_

[00:47] <Geth> ¬¶ modules.perl6.org: b5ee05aa0d | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder/Dist/PostProcessor/p30METAChecker.pm

[00:47] <Geth> ¬¶ modules.perl6.org: Bail out from META checker if we ain't got distro sauce URL

[00:47] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/b5ee05aa0d

[00:49] *** lizmat joined
[00:49] *** p6bannerbot sets mode: +v lizmat

[00:53] <Geth> ¬¶ modules.perl6.org: 44db231bf3 | (Zoffix Znet)++ | lib/ModulesPerl6/DbBuilder/Dist/Source/GitLab.pm

[00:53] <Geth> ¬¶ modules.perl6.org: Fill dist sauce URL for GitLab dists

[00:53] <Geth> ¬¶ modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/44db231bf3

[00:54] *** Zoffix left
[01:02] <holyghost> eco: Bayes::Learn

[01:02] <buggable> holyghost, Nothing found

[01:08] <Xliff> What's the best way to write a call back with a pointer to a double?

[01:08] <Xliff> Will "&handler (gdouble $returnable is rw)" work?

[01:08] <Xliff> Err...

[01:08] <Xliff> Will "&handler (num64 $returnable is rw)", actually.

[01:08] <timotimo> i would expect that to work

[01:09] <timotimo> if the syntax is right

[01:09] <Xliff> Thanks.

[01:10] <Xliff> Here's another question. How do I assign a value to a Pointer[num64] from a num64?

[01:11] <timotimo> doesn't assigning into it work?

[01:11] <Xliff> m: use NativeCall; my $p = Pointer[num64]; $p = 1000e0;

[01:11] <camelia> rakudo-moar 4bf55b1ef: ( no output )

[01:11] <timotimo> needs a .new

[01:11] <Xliff> m: use NativeCall; my $p = Pointer[num64].new; $p = 1000e0;

[01:11] <camelia> rakudo-moar 4bf55b1ef: ( no output )

[01:11] <Xliff> m: use NativeCall; my $p = Pointer[num64].new; $p = 1000e0; say $p;

[01:11] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´1000‚ê§¬ª

[01:11] <Xliff> m: use NativeCall; my $p = Pointer[num64].new; $p = 1000e0; say $p; say $p.^name

[01:11] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´1000‚ê§Num‚ê§¬ª

[01:12] <timotimo> and i'd expect you'll have to bind

[01:12] <Xliff> m: use NativeCall; my $p := Pointer[num64].new; $p = 1000e0; say $p; say $p.^name

[01:12] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´Cannot assign to an immutable value‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:12] <Xliff> ^^ That's what I was expecting.

[01:12] <Xliff> m: use NativeCall; my $p := Pointer[num64].new; $p.deref = 1000e0; say $p; say $p.^name

[01:12] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´Can't dereference a Null Pointer‚ê§  in method deref at /home/camelia/rakudo-m-inst-1/share/perl6/sources/51E302443A2C8FF185ABC10CA1E5520EFEE885A1 (NativeCall::Types) line 58‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:12] <Xliff> m: use NativeCall; my $p = Pointer[num64].new; $p.deref = 1000e0; say $p; say $p.^name

[01:12] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´Can't dereference a Null Pointer‚ê§  in method deref at /home/camelia/rakudo-m-inst-1/share/perl6/sources/51E302443A2C8FF185ABC10CA1E5520EFEE885A1 (NativeCall::Types) line 58‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:12] <Xliff> m: use NativeCall; my $p = Pointer[num64].new; say $p;

[01:12] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´NativeCall::Types::Pointer[num64]<NULL>‚ê§¬ª

[01:12] <timotimo> m: use NativeCall; my $p = Pointer[num64].new; $p[0] = 1000e0; say $p.perl;

[01:13] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´(signal SEGV)¬ª

[01:13] <timotimo> haha

[01:13] <Xliff> LOL

[01:13] <timotimo> m: use NativeCall; my $p = Pointer[num64].new(1000e0); $p[0] = 1000e0; say $p.perl;

[01:13] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´Default constructor for 'NativeCall::Types::Pointer[num64]' only takes named arguments‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[01:13] <timotimo> in that case you'll also have to create a CArray

[01:13] <timotimo> or use malloc

[01:13] <Xliff> m: use NativeCall; my $p = CArray[num64].new; $p[0] = 1000e0; say $p; say $p[0]

[01:13] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´NativeCall::Types::CArray[num64].new‚ê§1000‚ê§¬ª

[01:14] <Xliff> OK. That will work, for now.

[01:18] *** kent\n joined
[01:18] *** p6bannerbot sets mode: +v kent\n

[01:21] *** Calibellus joined
[01:22] *** p6bannerbot sets mode: +v Calibellus

[01:25] *** Calibellus left
[01:25] *** cognominal-p6 left
[01:25] *** cognominal-p6 joined
[01:26] *** p6bannerbot sets mode: +v cognominal-p6

[01:27] *** Calibellus joined
[01:27] *** jameslenz joined
[01:27] *** p6bannerbot sets mode: +v Calibellus

[01:28] *** p6bannerbot sets mode: +v jameslenz

[01:29] *** jameslen_ joined
[01:29] *** jameslenz left
[01:30] *** p6bannerbot sets mode: +v jameslen_

[01:30] *** vrurg joined
[01:30] *** p6bannerbot sets mode: +v vrurg

[01:37] *** Bucciarati left
[01:37] *** avar left
[01:37] *** avar joined
[01:37] *** avar left
[01:37] *** avar joined
[01:37] *** p6bannerbot sets mode: +v avar

[01:37] *** Bucciarati joined
[01:38] *** p6bannerbot sets mode: +v avar

[01:38] *** p6bannerbot sets mode: +v Bucciarati

[01:39] *** mattp_ left
[01:39] *** kurahaupo left
[01:40] *** kurahaupo joined
[01:40] *** jameslen_ left
[01:41] *** p6bannerbot sets mode: +v kurahaupo

[01:49] *** cognominal-p6 left
[01:51] *** kurahaupo left
[01:52] *** kurahaupo joined
[01:53] *** p6bannerbot sets mode: +v kurahaupo

[01:57] *** mattp_ joined
[01:58] *** p6bannerbot sets mode: +v mattp_

[02:03] *** mattp_ left
[02:18] *** ufobat_ joined
[02:19] *** p6bannerbot sets mode: +v ufobat_

[02:22] *** ufobat___ left
[02:32] *** finanalyst joined
[02:33] *** p6bannerbot sets mode: +v finanalyst

[02:40] *** kurahaupo left
[02:43] *** kurahaupo joined
[02:43] *** p6bannerbot sets mode: +v kurahaupo

[02:52] *** rbt_ left
[02:55] *** atweiden-air joined
[02:56] *** p6bannerbot sets mode: +v atweiden-air

[02:57] *** imcsk8 joined
[02:58] *** p6bannerbot sets mode: +v imcsk8

[03:26] *** rbt_ joined
[03:27] *** p6bannerbot sets mode: +v rbt_

[03:29] *** Sgeo__ left
[03:31] *** Sgeo joined
[03:32] *** Calibellus left
[03:32] *** p6bannerbot sets mode: +v Sgeo

[03:35] *** finanalyst left
[03:37] *** jameslenz joined
[03:38] *** p6bannerbot sets mode: +v jameslenz

[03:42] *** jameslenz left
[03:57] *** Ven` joined
[03:57] *** p6bannerbot sets mode: +v Ven`

[04:01] *** Ven` left
[04:05] *** Bucciarati left
[04:07] *** Bucciarati joined
[04:07] *** p6bannerbot sets mode: +v Bucciarati

[04:08] *** AlexDaniel left
[04:09] *** ravioli_ joined
[04:09] *** p6bannerbot sets mode: +v ravioli_

[04:09] *** AlexDaniel joined
[04:09] <ravioli_> hi guys I'd like to ask about perl6 oneliner here

[04:09] <ravioli_> p6: say 3

[04:09] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´3‚ê§¬ª

[04:10] *** p6bannerbot sets mode: +v AlexDaniel

[04:12] <SmokeMachine> Hi ravioli_

[04:12] <ravioli_> hi SmokeMachine

[04:13] *** fake_space_whale joined
[04:14] *** p6bannerbot sets mode: +v fake_space_whale

[04:15] *** kurahaupo left
[04:16] *** kurahaupo joined
[04:16] *** p6bannerbot sets mode: +v kurahaupo

[04:17] <ravioli_> suppose I get string like ' wawa29792479429283" '

[04:18] <ravioli_> so I match it with /wawa.+?((\")**1)/

[04:19] <ravioli_> but how could I append [[ on the beginning of the matched string and add )) on the end of the string?

[04:21] <ravioli_> on sed the &h on s/aaa/&h/g means add h after aaa, is there something similar on perl6?

[04:27] <Geth> ¬¶ doc: 09e227e216 | (Richard Hainsworth)++ (committed using GitHub Web editor) | doc/Language/modules.pod6

[04:27] <Geth> ¬¶ doc: Update modules.pod6

[04:27] <Geth> ¬¶ doc: 

[04:27] <Geth> ¬¶ doc: An extra clarification about how to use a resources file inside a module.

[04:27] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/09e227e216

[04:27] <synopsebot> Link: https://doc.perl6.org/language/modules

[04:29] <AlexDaniel> m: my $x = "aaabbbccc"; $x ~~ s/(aaa)/$0h/; say $x

[04:29] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´aaahbbbccc‚ê§¬ª

[04:29] <AlexDaniel> ravioli_: you mean something like this? ‚Üë

[04:33] *** molaf joined
[04:34] *** p6bannerbot sets mode: +v molaf

[04:37] <ravioli_> AlexDaniel: ah close! thanks I didn't know $0 before

[04:39] *** atweiden-air left
[04:45] *** cognominal-p6 joined
[04:46] *** p6bannerbot sets mode: +v cognominal-p6

[04:50] *** mniip_ is now known as mniip

[04:51] <ravioli_> AlexDaniel: I'm using command: perl6 -pe 's:g/wawa.+?((\")**1)/$0h/' test.txt but the command removes the matched string. Any idea?

[04:52] <ravioli_> AlexDaniel: the command: perl6 -pe 's:g/wawa.+?((\")**1)/$0h/' test.txt

[04:52] <AlexDaniel> ravioli_: what about S:g (with capital S)

[04:53] <AlexDaniel> ravioli_: ah sorry, that's not the issue

[04:53] <ravioli_> AlexDaniel: It makes no replacement at all

[04:54] *** molaf left
[04:54] <AlexDaniel> it should be s:g/(wawa.+?[[\"]**1])/$0h/

[04:54] <AlexDaniel> so we want to capture the whole thing, and the other bits don't need to be captured (so we can use [] instead of () )

[04:55] <ravioli_> AlexDaniel: thanks for your help, but it still removes the matched string and add 'h'

[04:57] <ravioli_> AlexDaniel: sorry I typed it manually and forget the parentheses, it did work! Thanks a lot!

[04:57] <AlexDaniel> \o/

[04:57] <ravioli_> AlexDaniel: I'm so sorry (again)

[04:57] <AlexDaniel> ravioli_: no problem, I'm glad to help!

[04:58] *** cognominal-p6 left
[04:58] *** cognominal-p6 joined
[05:00] <AlexDaniel> ravioli_: ah, I just remembered that you can also use just $/ if you want to get the whole thing

[05:00] *** troys left
[05:00] <AlexDaniel> ravioli_: so this works too: s:g/wawa.+?[[\"]**1]/$/h/

[05:00] *** p6bannerbot sets mode: +v cognominal-p6

[05:00] <AlexDaniel> although it looks weird because of $/ :)

[05:00] *** Sgeo_ joined
[05:00] <ravioli_> AlexDaniel: one more question if you don't mind, the current regex also matches a double quote after wawa{somerandomcharacter}, how can I insert something after {somerandomcharacter} and before a double quote?

[05:00] <ravioli_> AlexDaniel: yeah I'm sorry this is too hard

[05:00] *** p6bannerbot sets mode: +v Sgeo_

[05:01] <ravioli_> AlexDaniel: thanks for the additional tips

[05:02] *** Sgeo left
[05:03] <AlexDaniel> ravioli_: perl6 -pe 's:g| wawa.+? )> [\"]**1|$/h|' <<< "wawa29792479429283\""

[05:03] <AlexDaniel> will produce this: wawa29792479429283h"

[05:03] <AlexDaniel> is that what you wanted?

[05:08] <AlexDaniel> I hope it is, because I have to get some sleep now

[05:08] <AlexDaniel> have a nice day!

[05:09] *** cognominal-p6 left
[05:14] <ravioli_> AlexDaniel: Thanks a lot a lot a lot!!!!! You're so smart, kind, and awesome!!!!

[05:19] *** Bucciarati left
[05:19] *** dct left
[05:20] *** imcsk8 left
[05:21] *** avar left
[05:28] *** Bucciarati joined
[05:28] *** avar joined
[05:28] *** avar left
[05:28] *** avar joined
[05:28] *** p6bannerbot sets mode: +v avar

[05:28] *** imcsk8 joined
[05:28] *** p6bannerbot sets mode: +v Bucciarati

[05:28] *** p6bannerbot sets mode: +v avar

[05:29] *** p6bannerbot sets mode: +v imcsk8

[05:38] *** jameslenz joined
[05:39] *** p6bannerbot sets mode: +v jameslenz

[05:42] *** jameslenz left
[06:09] *** domidumont joined
[06:10] *** p6bannerbot sets mode: +v domidumont

[06:11] *** kensanata joined
[06:11] *** p6bannerbot sets mode: +v kensanata

[06:12] *** HaraldJoerg joined
[06:13] *** p6bannerbot sets mode: +v HaraldJoerg

[06:17] <ravioli_> Hi guys I'd like to ask again

[06:17] <ravioli_> how to implement lookbehind in perl 6 regex?

[06:19] <ravioli_> based on this command: user@localhost: $ perl6 -pe 's:g| \.\.\/wawa.+? )> [\"]**1|zzz$/zzz|' <<< "../wawa29792479429283\"irfirifrj\"dkjdkfj\""

[06:20] <ravioli_> Now I'd like to implement lookbehind in .. on string ../wawa29792479429283\"irfirifrj\"dkjdkfj\"

[06:24] *** fnux left
[06:24] *** fnux joined
[06:25] *** kurahaupo left
[06:25] *** p6bannerbot sets mode: +v fnux

[06:25] *** imcsk8 left
[06:26] *** kurahaupo joined
[06:27] *** imcsk8 joined
[06:27] *** fake_space_whale left
[06:27] *** p6bannerbot sets mode: +v kurahaupo

[06:27] *** p6bannerbot sets mode: +v imcsk8

[06:37] <tobs> ravioli_: it's fittingly called <?after ...>

[06:37] <tobs> m: say "../test" ~~ /<?after '..'>\/(.*)/

[06:37] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´ÔΩ¢/testÔΩ£‚ê§ 0 => ÔΩ¢testÔΩ£‚ê§¬ª

[06:37] *** nightfro` joined
[06:37] <tobs> m: say "/etc/test" ~~ /<?after '..'>\/(.*)/

[06:37] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´Nil‚ê§¬ª

[06:38] *** p6bannerbot sets mode: +v nightfro`

[06:38] *** nightfrog left
[06:38] *** nightfro` is now known as nightfrog

[06:38] *** abraxxa joined
[06:39] *** p6bannerbot sets mode: +v abraxxa

[06:51] <Xliff> m: my @a = (^10); say @a.grep(* != 5).say

[06:51] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´(0 1 2 3 4 6 7 8 9)‚ê§True‚ê§¬ª

[06:51] <Xliff> m: my @a = (^10); say @a.grep(*.Str ne "5").say

[06:51] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´(0 1 2 3 4 6 7 8 9)‚ê§True‚ê§¬ª

[06:52] <ravioli_> never mind I already know the answer thanks guys for all the help!

[07:03] *** robertle joined
[07:04] *** p6bannerbot sets mode: +v robertle

[07:10] <CIAvash> TimToady: I wrote this last night but deleted it and didn't send it "I think when TimToady is quiet, it means he is thinking. But who knows :)" I guess I was right üòÄ

[07:12] <ravioli_> tobs: thanks a lot sorry I just noticed your help now

[07:18] <tobs> ravioli_: no problem. It's better to have found it yourself, isn't it? :)

[07:18] <ravioli_> tobs: Yes I agree :)

[07:19] <Xliff> CIAvash: Did TimToady say something?

[07:19] <Xliff> Or is he still thinking? :)

[07:19] <Xliff> m: 'üòÄ'.uniname.say

[07:19] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: ¬´GRINNING FACE‚ê§¬ª

[07:20] *** avuserow left
[07:20] <Xliff> Hexchat needs better unicode support. :p

[07:22] <CIAvash> Xliff: http://colabti.org/irclogger/irclogger_log/perl6?date=2018-10-18#l6

[07:24] <Xliff> CIAvash: LOL! I was active an hour and 38 minutes later. The one thing this should tell you? I should scour my scrollback more dutifully.

[07:28] *** dakkar joined
[07:29] *** p6bannerbot sets mode: +v dakkar

[07:29] <Geth> ¬¶ Pod-To-HTML: finanalyst++ created pull request #47: Modify to use templates

[07:29] <Geth> ¬¶ Pod-To-HTML: review: https://github.com/perl6/Pod-To-HTML/pull/47

[07:29] *** zakharyas joined
[07:30] *** avuserow joined
[07:30] *** p6bannerbot sets mode: +v zakharyas

[07:31] <masak> I know `ff` stands for "flip-flop"... but what does the third "f" in `fff` stand for? :)

[07:31] *** p6bannerbot sets mode: +v avuserow

[07:31] *** Xliff_ joined
[07:32] *** p6bannerbot sets mode: +v Xliff_

[07:34] *** Xliff_ left
[07:35] *** Xliff_ joined
[07:35] *** p6bannerbot sets mode: +v Xliff_

[07:37] <Xliff_> Thanks.

[07:38] <Xliff_> I'm trying out a new IRC client that's has better unicode support than HexChat.

[07:38] <Xliff_> Unfortunately, the look and feel is too mIRC-like for me. ;(

[07:39] *** jameslenz joined
[07:40] *** p6bannerbot sets mode: +v jameslenz

[07:43] *** jameslenz left
[07:48] *** Xliff_ left
[07:49] *** kurahaupo_ joined
[07:50] *** p6bannerbot sets mode: +v kurahaupo_

[07:50] <ravioli_> Hi guys I

[07:50] *** kurahaupo left
[07:51] *** kurahaupo_ left
[07:51] *** kurahaupo joined
[07:51] <ravioli_> I'd like to ask again, the 'sed' command modify a file, how can I make perl 6 modify a file in command line instead of output to stdout?

[07:52] *** p6bannerbot sets mode: +v kurahaupo

[07:53] *** cpage_ joined
[07:53] *** p6bannerbot sets mode: +v cpage_

[07:55] *** cpage left
[07:55] *** cpage_ is now known as cpage

[07:56] *** scimon joined
[07:57] *** p6bannerbot sets mode: +v scimon

[08:04] *** zakharyas left
[08:05] *** zakharyas joined
[08:05] *** cognominal-p6 joined
[08:06] *** p6bannerbot sets mode: +v zakharyas

[08:06] *** p6bannerbot sets mode: +v cognominal-p6

[08:06] *** cognominal-p6 left
[08:07] *** cognominal-p6 joined
[08:07] *** p6bannerbot sets mode: +v cognominal-p6

[08:08] *** rindolf joined
[08:09] *** p6bannerbot sets mode: +v rindolf

[08:11] <lizmat> .

[08:17] *** pecastro joined
[08:18] *** p6bannerbot sets mode: +v pecastro

[08:25] <kensanata> ravioli_: Looking at the output of perl6 --help makes me think that no such thing exists.

[08:26] *** Ven` joined
[08:26] <ravioli_> kensanata: thanks for responding! I think I'll just use bash for that

[08:27] *** p6bannerbot sets mode: +v Ven`

[08:28] <kensanata> ravioli_: burn! ü§£

[08:28] <ravioli_> kensanata: sorry if it hurts cause I didn't mean to

[08:28] <kensanata> ravioli_: No worries, I laughed.

[08:29] *** cognominal-p6 left
[08:29] <kurahaupo> ravioli_: ¬´ sed -i ¬ª is an attractive nuisance that seduces people into thinking sed is a file editor. It's a stream99,99 editor that can read one file and write another. The -i just means it moves the new file over the old one, regardless of whether any changes were made, and without necessarily keeping ownership or permissions correct. And definitely not keeping hard links.

[08:32] <ravioli_> kurahaupo: thanks for the info, unfortunately sed has different regex syntax with perl 6

[08:33] *** leont joined
[08:34] *** p6bannerbot sets mode: +v leont

[08:34] <kurahaupo> ravioli_:  Well, perl5 has perl -i$suffix that mimics sed -i - so maybe perl6 does the same?

[08:35] <masak> `perl6` doesn't have an -i flag currently

[08:35] <masak> but it feels like it should be possible to build a standalone command that does what -i does

[08:35] <masak> should even be possible to build it in Perl 6 :)

[08:35] <masak> man, if I had infinite time I would do that and then blog about it ;)

[08:36] <masak> somebody feel free to task-steal that if they want

[08:37] *** Actualeyes joined
[08:38] *** p6bannerbot sets mode: +v Actualeyes

[08:38] <masak> ISTR implementing -i correctly is a fun challenge

[08:39] <masak> you're not meant to actually replace the old file until you've correctly finished writing the new one

[08:50] *** cognominal-p6 joined
[08:51] *** cognominal-p6 left
[08:51] *** cognominal-p6 joined
[08:52] *** p6bannerbot sets mode: +v cognominal-p6

[08:54] <kurahaupo> masak: for added bonus points, get it to maintain multiple hard links‚Ä¶

[08:54] <masak> guessing Perl 5's -i does that out of the box

[08:55] <kurahaupo> ‚Ä¶ without truncating the file while it's in use?

[08:56] <masak> oh dear

[08:56] <kurahaupo> Mumble Linux mmap()+ splice() syscalls

[08:58] <kurahaupo> (It's hard alright)

[09:04] <leont> AFAIK its not that hard, write to a tempfile, and then replace at the end

[09:20] <kurahaupo> leont: and make sure the resulting file has the same hard links as the original ?

[09:27] <El_Che> tmp-file > orig-file 

[09:27] <El_Che> not moving but overwriting so the ownerships stays correct

[09:30] <kurahaupo> And doing that atomically, so that the orig-file isn't momentarily truncated, nor a blended mix of old and new ? And doesn't leave a broken file if the fs runs out of space?

[09:30] <kurahaupo> It might be possible to meet all these, but it's not nearly as obvious as it seems.

[09:33] <leont> I definitely can't think of a way to do all those things atomically

[09:34] <leont> That would require a transactional filesystem

[09:39] <kurahaupo> leont: indeed I don't think there exists a posixish answer.

[09:40] *** jameslenz joined
[09:40] *** p6bannerbot sets mode: +v jameslenz

[09:43] <ilmari> istr reiserfs was touting transactions back in the day

[09:44] *** jameslenz left
[09:46] *** tobs` joined
[09:47] *** p6bannerbot sets mode: +v tobs`

[09:57] *** isBEKaml joined
[09:57] *** p6bannerbot sets mode: +v isBEKaml

[10:01] *** isBEKaml left
[10:04] *** [particle]1 joined
[10:04] *** [particle] left
[10:05] *** p6bannerbot sets mode: +v [particle]1

[10:14] *** ravioli_ left
[10:24] *** Actualeyes left
[11:03] *** kurahaupo left
[11:04] *** kurahaupo joined
[11:04] *** p6bannerbot sets mode: +v kurahaupo

[11:05] <nige> o/ 

[11:05] <yoleaux> 00:00Z <Zoffix> nige: I recall you offering trademark smoketest? This is the current list of proposals I got: https://gist.github.com/zoffixznet/f18842f7c7e051b8c2fcdc265e40bd15   No pressure if you can't/don't wanna smoketest anything.

[11:05] <yoleaux> 00:06Z <Zoffix> nige: never mind. Turns out we won't need any polls

[11:05] <nige> that's great news - always hoped TimToady would come up with a cultural hack ;-)

[11:06] *** zakharyas left
[11:06] <nige> TimToady, I'd be happy to help with trade mark smoke testing - it that's useful

[11:06] <nige> s/it/if/

[11:08] *** Bucciarati left
[11:08] *** Bucciarati joined
[11:09] *** p6bannerbot sets mode: +v Bucciarati

[11:10] <Altreus> How do I stop a race condition when a promise sets data? I have methods on objects that return promises because the first time it's run it fetches the data, but it seems to me that if I run it twice I have a race condition so whichever promise completes last gets to set the data in perpetuity (since once it's set, the promise just resolves immediately)

[11:10] *** rbt_ left
[11:10] *** rbt_ joined
[11:11] <Altreus> This is a problem because if I receive an event through another channel that patches the data, I'm going to go and fetch the data, and then patch it - but if someone else happens to fetch the data and trigger the race condition, my patch will be lost

[11:11] *** p6bannerbot sets mode: +v rbt_

[11:13] <Altreus> I feel like the method should always return the same promise if there's an extant promise

[11:13] <Altreus> is there a way of doing that built into promises?

[11:13] <Altreus> or indeed p6

[11:15] <timotimo> Altreus: you'll probably have to create the promise at object creation, or have one lock per instance to guard against creating promises more than once

[11:15] *** Ven` left
[11:16] <Altreus> That's true - I don't actually need a property to hold the fetched data, but I could use a property to hold the promise for it

[11:17] <Altreus> And I can clear the property when the promise is kept

[11:17] <jnthn> Yeah, holding a Promise instead is how I typically do such things

[11:17] <jnthn> Well, I always keep the promise around anyway

[11:17] <jnthn> And always ask for the data via it

[11:17] <jnthn> It's cheap to ask for data form an already kept promise (doesn't even need to do a lock acquisition)

[11:18] <Altreus> So I could create it once and just always return it

[11:19] <jnthn> Yes

[11:19] <timotimo> hm, you may have to create two promises, so that you only run the code to generate the value once, since a promise doesn't have an extra state for that

[11:20] <jnthn> Yeah, if you want to be lazy about triggering it

[11:20] <Altreus> Not sure I follow that, sorry

[11:20] *** lizmat left
[11:20] <Altreus> Do you mean if I ask for the value again it will re-run it? :x

[11:21] <jnthn> No

[11:21] <jnthn> timotimo's point was that if you do something like `has $!promise = start { ...blah work... };` then it will start the work at object construction time

[11:21] <jnthn> Not on first request

[11:22] <Altreus> If I call the method twice in quick succession and therefore await the same incomplete promise, will it run twice?

[11:22] <jnthn> No

[11:22] <Altreus> that's magic

[11:22] <timotimo> you can have a promise that the work immediately awaits

[11:22] <timotimo> if you have "use 6.d.PREVIEW" it won't tie up a thread

[11:22] <jnthn> lunch &

[11:23] <Altreus> the promise I'm creating is awaiting a promise from Cro anyway

[11:26] <Altreus> ah, no, now I have another question - how do I mutate this value? :)

[11:27] <Altreus> The User object must promise its list of guilds, but the websocket can tell me that the user has joined a guild. Rather than dirtying that list, it would be better simply to add the new guild to the list

[11:28] <Altreus> eh that's an optimisation for the future

[11:34] <Altreus> lunch &

[11:35] *** sena_kun joined
[11:35] *** p6bannerbot sets mode: +v sena_kun

[11:40] *** jameslenz joined
[11:40] *** Ven` joined
[11:41] *** p6bannerbot sets mode: +v jameslenz

[11:41] *** p6bannerbot sets mode: +v Ven`

[11:44] <AlexDaniel> kensanata: stream what? :) https://screenshots.firefox.com/qCg2hhg49OpKSWg5/null

[11:44] <yoleaux> 09:17Z <lizmat> AlexDaniel: I think I've logged all of my changes

[11:44] <AlexDaniel> .tell lizmat Awesome!! Thank you!

[11:44] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[11:45] *** jameslenz left
[11:59] *** kurahaupo is now known as IHateNickMutatio

[12:00] <eiro> hello people

[12:01] <eiro> i remember someone started to write a configuration manager or something like that in perl6. i'm searching for a project that has .name ~~¬†/do$/

[12:01] <eiro> any idea ?

[12:01] <leont> sparrowdo?

[12:04] *** IHateNickMutatio is now known as kurahaupo

[12:07] <eiro> leont, that's it! thanks

[12:30] *** random_yanek left
[12:31] *** random_yanek joined
[12:31] *** random_yanek left
[12:32] *** zakharyas joined
[12:33] *** p6bannerbot sets mode: +v zakharyas

[12:40] <Geth> ¬¶ doc: MorayJ++ created pull request #2390: Supply fix

[12:40] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2390

[12:47] *** zakharyas left
[12:49] *** random_yanek joined
[12:49] *** random_yanek left
[12:49] *** zakharyas joined
[12:49] *** p6bannerbot sets mode: +v zakharyas

[12:55] *** leont left
[13:12] <Geth> ¬¶ doc/modules-pod-fix: 5 commits pushed by MorayJ++

[13:12] <Geth> ¬¶ doc/modules-pod-fix: ce68a6d53d | Clarifies done and quit callbacks on taps

[13:12] <Geth> ¬¶ doc/modules-pod-fix: 7bbf18f2d5 | Clarifies why all suppliers being done triggers done

[13:12] <Geth> ¬¶ doc/modules-pod-fix: b602d3c9a2 | Merge branch 'master' of https://github.com/perl6/doc into supply-fix

[13:12] <Geth> ¬¶ doc/modules-pod-fix: bfa76195f4 | Adds return markers

[13:12] <Geth> ¬¶ doc/modules-pod-fix: 88381ad449 | Fix syntax error on modules.pod6

[13:12] <Geth> ¬¶ doc/modules-pod-fix: review: https://github.com/perl6/doc/compare/ce68a6d53d4d^...88381ad44916

[13:15] *** random_yanek joined
[13:15] *** pmurias joined
[13:15] *** p6bannerbot sets mode: +v pmurias

[13:16] *** p6bannerbot sets mode: +v random_yanek

[13:17] <tyil> eiro: if you're looking to get started with sparrowdo, I wrote a blog post a while ago, it should still work as described in there https://www.tyil.nl/post/2018/05/07/sparrowdo-getting-started/

[13:22] <Geth> ¬¶ doc: MorayJ++ created pull request #2391: Remove extra =end item

[13:22] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/2391

[13:28] *** AlexDaniel left
[13:28] *** AlexDaniel joined
[13:29] *** lichtkind joined
[13:29] *** p6bannerbot sets mode: +v AlexDaniel

[13:29] *** p6bannerbot sets mode: +v lichtkind

[13:41] *** jameslenz joined
[13:42] *** p6bannerbot sets mode: +v jameslenz

[13:46] *** jameslenz left
[13:50] *** pmurias left
[13:52] *** pmurias joined
[13:52] *** p6bannerbot sets mode: +v pmurias

[13:55] *** telex left
[13:56] *** telex joined
[13:57] *** p6bannerbot sets mode: +v telex

[14:01] <SmokeMachine> jnthn: I trying to fix the issue about the role stub do not checking the attribute handles... I made the RoleToClassApplier.apply return a list of not yet implemented stubs and on ClassHOW.compose I get it and test it again after the attribute composition and die if its not implemented yet... does that make sense? Im not sure if make apply return a list of stubs is a good idea...

[14:03] *** Zoffix joined
[14:03] *** p6bannerbot sets mode: +v Zoffix

[14:03] <jnthn> SmokeMachine: We'll need to do something like that I guess. It's kinda icky from an API perspective, is all

[14:03] <Zoffix> R#2345

[14:03] <synopsebot> R#2345 [open]: https://github.com/rakudo/rakudo/issues/2345 [regression][‚ö† blocker ‚ö†] Post-2018.09 module install failures

[14:03] <Zoffix> err

[14:03] *** Zoffix left
[14:03] <jnthn> Ah, right :)

[14:05] <SmokeMachine> jnthn: ok, thanks! :)

[14:07] *** pmurias left
[14:09] <Geth> ¬¶ doc: bab4347c74 | MorayJ++ | doc/Language/modules.pod6

[14:09] <Geth> ¬¶ doc: Remove extra =end item

[14:09] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/bab4347c74

[14:09] <Geth> ¬¶ doc: 1c00ac5f1f | (Juan Juli√°n Merelo Guerv√≥s)++ (committed using GitHub Web editor) | doc/Language/modules.pod6

[14:09] <Geth> ¬¶ doc: Merge pull request #2391 from MorayJ/modules-pod-fix

[14:09] <synopsebot> Link: https://doc.perl6.org/language/modules

[14:09] <Geth> ¬¶ doc: 

[14:09] <Geth> ¬¶ doc: Remove extra =end item

[14:09] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/1c00ac5f1f

[14:16] *** pmurias joined
[14:16] *** p6bannerbot sets mode: +v pmurias

[14:21] *** kurahaupo left
[14:21] *** kurahaupo joined
[14:22] *** kurahaupo left
[14:23] *** kurahaupo joined
[14:23] *** p6bannerbot sets mode: +v kurahaupo

[14:35] *** molaf joined
[14:35] *** p6bannerbot sets mode: +v molaf

[14:39] <Geth> ¬¶ doc/master: 6 commits pushed by MorayJ++

[14:39] <Geth> ¬¶ doc/master: ce68a6d53d | Clarifies done and quit callbacks on taps

[14:39] <Geth> ¬¶ doc/master: 7bbf18f2d5 | Clarifies why all suppliers being done triggers done

[14:39] <Geth> ¬¶ doc/master: b602d3c9a2 | Merge branch 'master' of https://github.com/perl6/doc into supply-fix

[14:39] <Geth> ¬¶ doc/master: bfa76195f4 | Adds return markers

[14:39] <Geth> ¬¶ doc/master: 2b5d57d14f | Merge branch 'master' of https://github.com/perl6/doc into supply-fix

[14:39] <Geth> ¬¶ doc/master: df915216eb | Merge pull request #2390 from MorayJ/supply-fix

[14:39] *** pmurias left
[14:39] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/1c00ac5f1fb9...df915216ebfa

[14:49] *** irco left
[14:54] *** pmurias joined
[14:54] *** p6bannerbot sets mode: +v pmurias

[14:54] <eiro> tyil, well ... maybe i'll try it in few days. thanks for sharing

[14:54] *** pmurias left
[14:59] *** pmurias joined
[14:59] *** p6bannerbot sets mode: +v pmurias

[15:01] *** pmurias left
[15:02] <SmokeMachine> how can I create a hash from nqp?

[15:03] *** rbt_ left
[15:04] *** gregf_ left
[15:06] <jnthn> An NQP-level hash? The literal is nqp::hash('key', $value)

[15:06] *** pmurias joined
[15:06] *** p6bannerbot sets mode: +v pmurias

[15:06] <jnthn> Or just `my %h := nqp::hash(); %h<foo> := $value` etc.

[15:06] <SmokeMachine> jnthn: thanks

[15:07] <SmokeMachine> nqp::hash('key1', $value1, 'key2', $value2)?

[15:09] <jnthn> Yes

[15:09] *** sno left
[15:09] <SmokeMachine> thanks!

[15:10] *** troys joined
[15:11] *** p6bannerbot sets mode: +v troys

[15:12] *** fake_space_whale joined
[15:13] *** p6bannerbot sets mode: +v fake_space_whale

[15:15] <SmokeMachine> \o/ https://www.irccloud.com/pastebin/VK6OimoN/

[15:16] <SmokeMachine> now i need to make that for multi methods

[15:18] <timotimo> m: my int $foo = 1; my int $bar = 2; for ^100_000 -> int $_ { $foo++ if $_ %% $bar }; say now - ENTER now

[15:18] <camelia> rakudo-moar 49bb6cf41: OUTPUT: ¬´0.01979857‚ê§¬ª

[15:18] <timotimo> m: my int $foo = 1; my int $bar = 2; for ^1_000_000 -> int $_ { $foo++ if $_ %% $bar }; say now - ENTER now

[15:18] <camelia> rakudo-moar 49bb6cf41: OUTPUT: ¬´0.2545966‚ê§¬ª

[15:18] <timotimo> m: my int $foo = 1; my int $bar = 2; for ^5_000_000 -> int $_ { $foo++ if $_ %% $bar }; say now - ENTER now

[15:18] <camelia> rakudo-moar 49bb6cf41: OUTPUT: ¬´0.774169333‚ê§¬ª

[15:18] <timotimo> c: 2018.09 my int $foo = 1; my int $bar = 2; for ^5_000_000 -> int $_ { $foo++ if $_ %% $bar }; say now - ENTER now

[15:18] <committable6> timotimo, ¬¶2018.09: ¬´2.1200323‚ê§¬ª

[15:18] <timotimo> c: HEAD my int $foo = 1; my int $bar = 2; for ^5_000_000 -> int $_ { $foo++ if $_ %% $bar }; say now - ENTER now

[15:18] <committable6> timotimo, ¬¶HEAD(7d7aaf0): ¬´0.67359971‚ê§¬ª

[15:20] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Cordova-0.0.17.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::VSTS::YAML::Cordova:cpan:MELEZHIK

[15:22] *** domidumont left
[15:27] *** b2gills left
[15:33] <SmokeMachine> is there a way to handles create a multi method?

[15:33] <Altreus> sparrowdo is surely a pun on something

[15:34] <SmokeMachine> m: say class :: { has Int $.a handles <is-prime> }.^lookup("is-prime")

[15:34] <camelia> rakudo-moar 7d7aaf0c1: OUTPUT: ¬´is-prime‚ê§¬ª

[15:35] <SmokeMachine> m: say class :: { has Int $.a handles <is-prime> }.^lookup("is-prime").multi

[15:35] <camelia> rakudo-moar 7d7aaf0c1: OUTPUT: ¬´False‚ê§¬ª

[15:36] <SmokeMachine> jnthn: should that change be made only for only stubs?

[15:37] <jnthn> SmokeMachine: Which change?

[15:38] <SmokeMachine> to "recheck" if the stub was implemented after the attribute composition

[15:38] <jnthn> SmokeMachine: Ah, yes

[15:38] <jnthn> What else would it apply to?

[15:39] <SmokeMachine> to multi stubs?

[15:39] <SmokeMachine> but I don't know if it's possible to a `handles` create a multi method...

[15:39] <jnthn> Oh, I see. But no, I don't think it's possible for that to happen.

[15:40] <SmokeMachine> ok! so I think it's working!!! :) running the spec tests...

[15:41] *** b2gills joined
[15:41] *** p6bannerbot sets mode: +v b2gills

[15:42] *** jameslenz joined
[15:43] *** p6bannerbot sets mode: +v jameslenz

[15:44] *** leont joined
[15:45] *** p6bannerbot sets mode: +v leont

[15:46] <SmokeMachine> what's the envvar to make spec test run in parallel?

[15:46] *** jameslenz left
[15:47] *** b2gills left
[15:47] <moritz> TEST_JOBS=4

[15:47] <Geth> ¬¶ doc: a9df6b550f | (ƒ∞smail Arƒ±lƒ±k)++ (committed using GitHub Web editor) | doc/Language/classtut.pod6

[15:47] <Geth> ¬¶ doc: Add missing method call to first introspection example

[15:47] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/a9df6b550f

[15:47] <synopsebot> Link: https://doc.perl6.org/language/classtut

[15:48] *** vrurg left
[15:48] <SmokeMachine> moritz: thanks!

[15:49] *** ExtraCrispy joined
[15:49] *** p6bannerbot sets mode: +v ExtraCrispy

[15:50] <SmokeMachine> a lot of dubious tests... :(

[15:52] *** b2gills joined
[15:52] *** sno joined
[15:52] *** p6bannerbot sets mode: +v b2gills

[15:52] *** p6bannerbot sets mode: +v sno

[16:01] *** Zoffix joined
[16:01] *** p6bannerbot sets mode: +v Zoffix

[16:01] <Zoffix> SmokeMachine: by default, spectest already runs in parallel, defaulting to 6 jobs

[16:01] <Zoffix> (unless you ask it to use P6 harness, which still uses 1 job)

[16:06] <SmokeMachine> Zoffix: thanks!

[16:07] *** robertle left
[16:08] <Geth> ¬¶ whateverable: d3230c935b | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Whateverable/Running.pm6

[16:08] <Geth> ¬¶ whateverable: Add :wipe named parameter in run-smth

[16:08] <Geth> ¬¶ whateverable: 

[16:08] <Geth> ¬¶ whateverable: As well as another helper method to avoid run-smth altogether. This

[16:08] <Geth> ¬¶ whateverable: allows heavy parallelization of things that need to use the same

[16:08] <Geth> ¬¶ whateverable: build at the same time. Quotable, Benchable and Project Blin can

[16:08] <Geth> ¬¶ whateverable: benefit from that. Note that if you use that you'll have to remove

[16:08] *** sno left
[16:08] <Geth> ¬¶ whateverable: unpacked builds yourself (the location of them is returned by

[16:09] <Geth> ¬¶ whateverable: run-smth-build-path).

[16:09] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/d3230c935b

[16:17] *** scimon left
[16:23] *** raynold_ joined
[16:23] *** p6bannerbot sets mode: +v raynold_

[16:23] *** raynold_ left
[16:25] *** Ven` left
[16:28] *** pmurias left
[16:30] *** tobs` left
[16:33] *** pmurias joined
[16:33] *** p6bannerbot sets mode: +v pmurias

[16:34] *** vrurg joined
[16:35] *** p6bannerbot sets mode: +v vrurg

[16:35] <SmokeMachine> there are 3 test files with error for me... but it doesn't look anything to do with my change... :(

[16:38] <Zoffix> SmokeMachine: what are they?

[16:39] <SmokeMachine> Zoffix: t/spec/MISC/bug-coverage.t, t/spec/S17-supply/watch-path.t and t/spec/S32-str/utf8-c8.t

[16:40] <Zoffix> SmokeMachine: the t/spec/MISC/bug-coverage.t one is likely you're missing latest commit in rakudo.   What's the output of:   t/fudgeandrun t/spec/S17-supply/watch-path.t t/spec/S32-str/utf8-c8.t

[16:40] <SmokeMachine> Zoffix: and t/spec/S11-modules/nested.t broke on spec test but I run it by hand and that worked...

[16:40] <Zoffix> That one flops

[16:42] <SmokeMachine> Zoffix https://www.irccloud.com/pastebin/vgL2Nr2z/

[16:42] <SmokeMachine> I di√¢nt copy the last one, sorry...

[16:43] <SmokeMachine> s/di√¢nt/didn't/

[16:43] <SmokeMachine> https://www.irccloud.com/pastebin/h0SMLPr8/

[16:45] <SmokeMachine> Zoffix: even with the last commits, t/spec/MISC/bug-coverage.t is broken...

[16:46] <SmokeMachine> https://www.irccloud.com/pastebin/3z45n9DD/

[16:47] <Zoffix> SmokeMachine: no, you don't have the last commit. Or you didn't rebuild your rakudo correctly (it was a MoarVM bump)

[16:47] <SmokeMachine> write! I got the commit but didn't make... sorry!

[16:47] <SmokeMachine> s/write/right/

[16:48] <Zoffix> SmokeMachine: no idea about the other ones.

[16:48] <Zoffix> My stresstest is clean.

[16:48] *** dakkar left
[16:49] <SmokeMachine> :(

[16:51] *** Zoffix left
[16:55] *** domidumont joined
[16:55] *** p6bannerbot sets mode: +v domidumont

[16:56] *** molaf left
[17:00] <SmokeMachine> when I stash my changes it gives the same errors...

[17:02] *** zakharyas left
[17:03] *** zakharyas joined
[17:04] *** p6bannerbot sets mode: +v zakharyas

[17:14] *** robertle joined
[17:15] *** p6bannerbot sets mode: +v robertle

[17:15] *** noganex_ left
[17:16] *** noganex joined
[17:17] *** p6bannerbot sets mode: +v noganex

[17:18] *** Sauvin left
[17:21] *** kensanata left
[17:22] <SmokeMachine> I think the error was a wrong version of MoarVM or nqp...

[17:28] <tony-o> hmm

[17:33] <xinming> for a list, How do we take several items as group and iterating over these groups?

[17:33] <xinming> for example,   for 1 .. Inf { }     <--- For this list, we group 500 numbers as a group and process them.

[17:33] <tony-o> is this a bug in nqp, nqp::p6bindattrinvres not finding the attribute that was added or should i be using some other mechanism ? https://gist.github.com/tony-o/c7e08d5bed8077616430a55177e5fcf8

[17:35] <Geth> ¬¶ doc: d7f8c617f8 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Any.pod6

[17:35] <Geth> ¬¶ doc: Mark .toggle as experimental as it's not making 6.d

[17:35] <Geth> ¬¶ doc: 

[17:35] <Geth> ¬¶ doc: https://github.com/rakudo/rakudo/issues/2089

[17:35] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d7f8c617f8

[17:35] <synopsebot> Link: https://doc.perl6.org/type/Any

[17:36] <xinming> m: for (1 .. Inf).head(5)  -> @a { @a.perl.say; }

[17:36] <camelia> rakudo-moar b50aa51e0: OUTPUT: ¬´Type check failed in binding to parameter '@a'; expected Positional but got Int (1)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:38] <xinming> m: for (1 .. Inf).head(5) -> *@a { @a.perl.say; }

[17:38] <camelia> rakudo-moar b50aa51e0: OUTPUT: ¬´[1]‚ê§[2]‚ê§[3]‚ê§[4]‚ê§[5]‚ê§¬ª

[17:39] *** zakharyas left
[17:39] <tobs> xinming: List.rotor is what you're looking for

[17:39] <xinming> Thanks

[17:40] <tobs> m: for (^1000).rotor(200) -> *@a { say sum @a }

[17:40] <camelia> rakudo-moar b50aa51e0: OUTPUT: ¬´19900‚ê§59900‚ê§99900‚ê§139900‚ê§179900‚ê§¬ª

[17:41] <tobs> actually, you can drop the * in *@a

[17:41] <tobs> m: for (^12).rotor(3) -> @a { say @a }

[17:41] <camelia> rakudo-moar b50aa51e0: OUTPUT: ¬´(0 1 2)‚ê§(3 4 5)‚ê§(6 7 8)‚ê§(9 10 11)‚ê§¬ª

[17:43] *** jameslenz joined
[17:43] <SmokeMachine> I cloned rakudo again, and now only 2 test files break...

[17:44] *** p6bannerbot sets mode: +v jameslenz

[17:48] *** jameslenz left
[17:48] <pmurias> tony-o: what is $new-model?

[17:50] *** aa joined
[17:50] *** p6bannerbot sets mode: +v aa

[17:50] <pmurias> tony-o: with nqp::p6bindattrinvres you are trying to get the private attribute @!columns that's declared *in* Array

[17:50] *** aa is now known as Guest54177

[17:50] *** Guest54177 left
[17:51] <pmurias> like class Array {has @!columns}; class Foo is Array {}; nqp::p6bindattinvres(Foo.new, Array, '@!columns', @columns)

[17:51] *** vrurg left
[17:54] *** AlexDaniel left
[17:55] *** AlexDaniel joined
[17:55] *** p6bannerbot sets mode: +v AlexDaniel

[18:03] *** Zoffix joined
[18:03] *** p6bannerbot sets mode: +v Zoffix

[18:04] <Zoffix> xinming: note that rotor will by default throw away remaining elements if they don't make an exact batch. There's also .batch method

[18:04] <Zoffix> tony-o: RE "should i be using some other mechanism"... FWIW nqp is not user-supported. You should not be using it at all.

[18:09] <xinming> Zoffix: Ok, Thanks. Will use batch method. :-)\

[18:11] *** kent\n left
[18:13] <SmokeMachine> I don't know what to do... master is breaking on my machine... but I'd like to PR this commit (https://github.com/FCO/rakudo/commit/fd5d5bdfb97930cfae1f9b2572d2ab6eea7ca92f) but its breaking the same tests that it breaks on master on my machine...

[18:14] <AlexDaniel> treegrep: release/01-basic.t

[18:14] <greppable6> AlexDaniel, https://gist.github.com/30c64fa23afcbba179dfeff13cc9ea52

[18:14] *** ryn1x joined
[18:14] *** kent\n joined
[18:14] *** p6bannerbot sets mode: +v kent\n

[18:14] <AlexDaniel> treegrep: ‚Äòrelease/01-basic.t‚Äô

[18:14] <greppable6> AlexDaniel, https://gist.github.com/cc92b416cd0cc9315764031ba4cb9ea7

[18:15] *** p6bannerbot sets mode: +v ryn1x

[18:15] <Zoffix> SmokeMachine: if the tests are broken even without your commit, I think it's fairly safe to PR.

[18:16] <SmokeMachine> Zoffix: ok, Ill do that... (and we'll see if jenkis finds the same errors)

[18:18] <Zoffix> .oO( who's Jenkins )

[18:18] <Zoffix> travis doesn't run roast

[18:19] *** ryn1x left
[18:19] *** ryn1x_ joined
[18:19] <SmokeMachine> sorry, travis

[18:19] *** holyghost left
[18:19] <SmokeMachine> :(

[18:19] <SmokeMachine> https://github.com/rakudo/rakudo/pull/2390

[18:19] *** p6bannerbot sets mode: +v ryn1x_

[18:19] *** holyghost joined
[18:20] *** p6bannerbot sets mode: +v holyghost

[18:23] <Geth> ¬¶ ecosystem: c0d4254580 | tony-o++ (committed using GitHub Web editor) | META.list

[18:23] <Geth> ¬¶ ecosystem: Change name of database ORM to Xoo so we're not vulgar in arabic

[18:23] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/c0d4254580

[18:24] <tony-o> @pmurias that seemed to work prior about a month ago, $new-model is anonymous class in this instance class :: { }

[18:25] <tony-o> the way i originally tried seems to work now, though with finding the attribute and calling .set_value

[18:25] <tony-o> pmurias++

[18:25] <tony-o> Zoffix: that isn't really helpful

[18:25] <Zoffix> tony-o: I'm just stating facts.

[18:26] *** noganex_ joined
[18:27] *** sno joined
[18:27] <pmurias> tony-o: what are you writing?

[18:27] <Zoffix> Especially extops. They are going away.

[18:27] *** p6bannerbot sets mode: +v noganex_

[18:27] *** p6bannerbot sets mode: +v sno

[18:27] <tony-o> pmurias: it's composing anonymous ORM classes from YAML so you can define your model classes in plain-ish text

[18:28] <Zoffix> So it is helpful, because when they're removed without any notice because there's no user support for NQP your code will break.

[18:28] *** Zoffix left
[18:28] <pmurias> tony-o: you should avoid using nqp:: stuff in modules

[18:29] <tony-o> Zoffix: you're welcome to your opinion but it didn't help get any closer to solution, it didn't do any harm, either - which isn't the same as being helpful

[18:29] <xinming> m:  perl6 -e 'for (1 .. 10) -> $i { my $t = $i; FIRST { $t = 0; }; $t.say; }'

[18:29] <camelia> rakudo-moar b50aa51e0: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Two terms in a row‚ê§at <tmp>:1‚ê§------> 3perl6 -e7‚èè5 'for (1 .. 10) -> $i { my $t = $i; FIRS‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement‚Ä¶¬ª

[18:29] <xinming> m:  for (1 .. 10) -> $i { my $t = $i; FIRST { $t = 0; }; $t.say; }

[18:29] <camelia> rakudo-moar b50aa51e0: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§¬ª

[18:30] <tony-o> pmurias: composing an ORM model class from YAML that looks like this https://github.com/tony-o/perl6-xoo/blob/master/t/models/customer.yaml

[18:30] <xinming> Why will this exmample, the $t won't be initialized to 0?

[18:30] *** noganex left
[18:30] <xinming> m:  for (1 .. 3) -> $i { my $t = $i; FIRST { $t = 0; }; $t.say; }

[18:30] <camelia> rakudo-moar b50aa51e0: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§¬ª

[18:31] <tony-o> m:  for (1 .. 10) -> $i { my $t = $i; FIRST { 't=0'.say; $t = 0; }; $t.say; }

[18:31] <camelia> rakudo-moar b50aa51e0: OUTPUT: ¬´t=0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§¬ª

[18:31] <tony-o> t is assigned in FIRST prior to `my $t = $i;` is executed

[18:32] <xinming> hmm, what is the right way to do this if I want to init the $t to 0 for the first loop?

[18:32] <pmurias> tony-o: Zoffix is right in that the nqp:: ops are just exposed rakudo internals and the rakudo devs can change/remove them without prior notice

[18:32] *** lichtkind left
[18:33] *** sno left
[18:33] <tony-o> m:  for (0 .. 10) -> $i { my $t = $i; $t.say; }

[18:33] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´0‚ê§1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§¬ª

[18:33] <tony-o> no argument there pmurias

[18:34] <xinming> tony-o: i mean the use of FIRST

[18:34] *** ryn1x_ left
[18:34] <tony-o> xinming: do you want 0,2,3,4,5 ?

[18:34] *** ryn1x_ joined
[18:34] <xinming> m:  my $t; for (1 .. 10) -> $i { $t = $i; FIRST { $t = 0 }; $t.say; }

[18:34] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´1‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§¬ª

[18:34] <xinming> tony-o: I don't.

[18:35] <xinming> but I think I understand the logic now.

[18:35] <xinming> I can't do it with FIRST

[18:35] *** p6bannerbot sets mode: +v ryn1x_

[18:35] *** domidumont left
[18:35] <xinming> I'm thinking wether there is a phaser which will be run in order for the FIRST loop.

[18:35] <tony-o> m:  for (1 .. 10) -> $i { $t.say; qw<do stuff here with t=0>; my $t = $i; FIRST { $t = 0; }; qw<now do stuff with $t=1>; $t.say; }

[18:35] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$t' is not declared‚ê§at <tmp>:1‚ê§------> 3for (1 .. 10) -> $i { 7‚èè5$t.say; qw<do stuff here with t=0>; my $‚ê§¬ª

[18:35] <tony-o> m:  for (1 .. 10) -> $i { my $t; $t.say; qw<do stuff here with t=0>; my $t = $i; FIRST { $t = 0; }; qw<now do stuff with $t=1>; $t.say; }

[18:35] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´Potential difficulties:‚ê§    Redeclaration of symbol '$t'‚ê§    at <tmp>:1‚ê§    ------> 3t.say; qw<do stuff here with t=0>; my $t7‚èè5 = $i; FIRST { $t = 0; }; qw<now do stuf‚ê§0‚ê§1‚ê§(Any)‚ê§2‚ê§(Any)‚ê§3‚ê§(Any)‚ê§4‚ê§(Any)‚ê§5‚ê§(Any)‚ê§6‚ê§‚Ä¶¬ª

[18:35] <tony-o> m:  for (1 .. 10) -> $i { my $t; $t.say; qw<do stuff here with t=0>; $t = $i; FIRST { $t = 0; }; qw<now do stuff with $t=1>; $t.say; }

[18:35] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´0‚ê§1‚ê§(Any)‚ê§2‚ê§(Any)‚ê§3‚ê§(Any)‚ê§4‚ê§(Any)‚ê§5‚ê§(Any)‚ê§6‚ê§(Any)‚ê§7‚ê§(Any)‚ê§8‚ê§(Any)‚ê§9‚ê§(Any)‚ê§10‚ê§¬ª

[18:36] <tony-o> gah

[18:37] <xinming> m:  my $t; for (1 .. 10) -> $i { $t.say; $t = $i; FIRST { $t = 0; }; $t.say; }

[18:37] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´0‚ê§1‚ê§1‚ê§2‚ê§2‚ê§3‚ê§3‚ê§4‚ê§4‚ê§5‚ê§5‚ê§6‚ê§6‚ê§7‚ê§7‚ê§8‚ê§8‚ê§9‚ê§9‚ê§10‚ê§¬ª

[18:48] *** bdmatatu joined
[18:48] *** p6bannerbot sets mode: +v bdmatatu

[19:04] *** zakharyas joined
[19:04] *** p6bannerbot sets mode: +v zakharyas

[19:07] *** bdmatatu left
[19:09] *** Zoffix joined
[19:09] *** p6bannerbot sets mode: +v Zoffix

[19:10] <Zoffix> xinming: the position of the phaser in code pretty much doesn't matter (it only affects implicit return value of the block). You could use `once` statement for your thing

[19:10] <Zoffix> m: my $t; for (1 .. 10) -> $i { $t = $i; once $t = 0; $t.say; }

[19:10] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´0‚ê§2‚ê§3‚ê§4‚ê§5‚ê§6‚ê§7‚ê§8‚ê§9‚ê§10‚ê§¬ª

[19:11] *** Zoffix left
[19:18] *** sno joined
[19:19] *** p6bannerbot sets mode: +v sno

[19:23] *** grumble left
[19:26] *** grumble joined
[19:26] *** p6bannerbot sets mode: +v grumble

[19:32] *** ryn1x_ left
[19:43] *** ExtraCrispy left
[19:43] *** ExtraCrispy joined
[19:43] *** p6bannerbot sets mode: +v ExtraCrispy

[19:44] *** jameslenz joined
[19:44] *** p6bannerbot sets mode: +v jameslenz

[19:46] *** ExtraCrispy left
[19:48] *** jameslenz left
[19:55] *** irco joined
[19:56] *** p6bannerbot sets mode: +v irco

[19:59] <xinming> ZofBot: Thanks, that's what I want. :-)

[20:03] *** ufobat_ left
[20:14] *** zakharyas left
[20:23] <xinming> Will 'take' do "return" for the block?

[20:23] <xinming> or, I need another return after 'take'

[20:25] <AlexDaniel> xinming: no, take does not return

[20:25] <AlexDaniel> why do you want to return?

[20:26] <xinming> I try to rewrite a recursive function to use gather and take

[20:28] <AlexDaniel> xinming: well, it depends, but it can be recursive *and* use take at the same time

[20:28] <xinming> Yes, So, still thinking on how to make it work

[20:28] <AlexDaniel> related doc ticket: https://github.com/perl6/doc/issues/2388

[20:28] <AlexDaniel> m: sub foo { take 42; foo }; my $x = gather foo; for @$x { .say; last if $++ > 10 }

[20:28] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´42‚ê§42‚ê§42‚ê§42‚ê§42‚ê§42‚ê§42‚ê§42‚ê§42‚ê§42‚ê§42‚ê§42‚ê§¬ª

[20:29] <AlexDaniel> here it does infinite recursion but that's not a problem (well, unless you go very deep because then things start to slow down)

[20:29] <xinming> Thanks.

[20:30] <xinming> will try

[20:31] *** pmurias left
[20:32] <AlexDaniel> xinming: fwiw you can also write `return take 42` if you need that

[20:32] <AlexDaniel> maybe I'll be able to tell more if you can show some code :)

[20:37] *** sno left
[20:37] <xinming> AlexDaniel: http://termbin.com/hnvw

[20:37] <xinming> AlexDaniel: This is the recursive function I'm trying to write. going to use lazy list features in perl6

[20:38] <xinming> I wrote it yesterday, Still need time to figure how lazy lists can be handled like this.

[20:40] *** leont left
[20:41] <xinming> It's just a recursive function which when we meet the array/list, We "duplicate" config

[20:41] <xinming> Since if the config is large, It'll take a while to do that

[20:42] <AlexDaniel> xinming: what's the expected result?

[20:44] *** sftp left
[20:44] *** sftp joined
[20:44] *** p6bannerbot sets mode: +v sftp

[20:44] <xinming> for example,   { :a<a>, :b(1,2,3,4,5) }   It'll inflate to  { :a<a>, :b(1) },   { :a<a>, :b(2) },   { :a<c>, :b(3) } ....

[20:44] <xinming> AlexDaniel: Something like this

[20:45] *** sena_kun left
[20:46] *** sena_kun joined
[20:46] *** sena_kun left
[20:53] <AlexDaniel> xinming: it's pretty cool :)

[20:54] <SmokeMachine> xinming: something like this? https://www.irccloud.com/pastebin/OReK55oH/

[20:54] <SmokeMachine> hum! hashes! sorry

[20:55] <Xliff> m: my @a = <A B C a b c>; say @a.first(*  eq 'a', :k)

[20:55] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´3‚ê§¬ª

[20:55] <Xliff> m: my @a = <A B C a b c>; say @a.first(* eq 'a', :k)

[20:55] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´3‚ê§¬ª

[20:55] <Xliff> m: my @a = <A B C a b c>; say @a.first(* eq 'B', :k)

[20:55] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´1‚ê§¬ª

[20:55] <Xliff> m: my @a = <A B C a b c>; say @a.first(* eq 'Z', :k)

[20:55] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´Nil‚ê§¬ª

[20:56] <xinming> SmokeMachine: It'll try to inflate to hashes.

[20:56] <xinming> My code does work. It's just don't do gather/take.

[20:56] <xinming> It's pure old school way to write something like that.

[20:56] <AlexDaniel> yeah

[20:57] <SmokeMachine> sorry, I had it understood wrong

[20:57] <AlexDaniel> (yeah to ‚Äúit does work‚Äù)

[20:58] <xinming> If a array is a lazy list, Is it ok to do something like  @lazy_list == 1 ?

[20:58] <xinming> to test the lenth.

[20:58] <moritz> if you do, it reifies the list

[21:00] <AlexDaniel> I don't think you can even .elems a lazy list

[21:00] <AlexDaniel> ehhh well‚Ä¶ it depends

[21:00] <moritz> m: my @a := gather { take $_ for ^200 }; say @a.lazy; say @a.elems

[21:00] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´Type check failed in binding; expected Positional but got Seq ($((0, 1, 2, 3, 4, 5, ...)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:00] <moritz> m: my @a = gather { take $_ for ^200 }; say @a.lazy; say @a.elems

[21:00] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´(...)‚ê§200‚ê§¬ª

[21:00] <moritz> m: my @a = gather { take $_ for ^200 }; say @a.is-lazy; say @a.elems

[21:01] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´False‚ê§200‚ê§¬ª

[21:01] <moritz> m: my @a = ^Inf; say @a.is-lazy; say @a.elems

[21:01] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´True‚ê§Cannot .elems a lazy list‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:02] <xinming> gather for sub-containers-take -> $item { take $item }

[21:02] <xinming>  for gather sub-containers-take -> $item { take $item }

[21:02] <xinming> Are these 2 the same?

[21:02] <xinming> For now, I'm using the latter one

[21:03] <SmokeMachine> m: my @a = lazy gather { take $_ for ^200 }; say @a.is-lazy; say @a.elems

[21:03] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´True‚ê§Cannot .elems a lazy list‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[21:04] <AlexDaniel> xinming: I'm not even sure what the second one does, the first one is like gather { for sub-containers-take -> $item { take $item } }, I think

[21:05] <xinming> AlexDaniel: Thanks for the clarification.

[21:05] <xinming> then first one is what I want.

[21:10] <buggable> New CPAN upload: Sparrowdo-0.0.41.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo:cpan:MELEZHIK

[21:11] <xinming> AlexDaniel: The for gather sub-containers-take { take blabla }    does something required in some case

[21:15] <Xliff> \o

[21:16] <Xliff> Anyone have any ideas on the best way to cut this code down to size? 

[21:16] <Xliff> https://github.com/Xliff/p6-GtkPlus/blob/master/lib/GTK/Roles/Signals/Widget.pm6

[21:17] <AlexDaniel> xinming: heh I look at the code and don't quite follow it‚Ä¶ also a bit busy with something else. I guess I can't help

[21:17] <xinming> AlexDaniel: Thanks for your time anyway. I'm almost there.

[21:18] <AlexDaniel> xinming: but from when you call that sub it should be like my @res = gather inflate-config(%config);

[21:18] <AlexDaniel> xinming: so basically the question is how to get the topmost call to `take` instead of `return`, I think‚Ä¶ but I'm not sure

[21:18] <xinming> Now trying to make lazy list work.

[21:19] <xinming> I have a version which is already working.

[21:19] <xinming> I'm trying to make it lazy list.

[21:19] <xinming> http://termbin.com/9ymk

[21:21] <xinming> But with some bug

[21:26] <xinming> @res.push: |(gather inflate-config(%cloned));       <--- What is the right way to merge multiple gather list please?

[21:26] <xinming> the @res will also   doing something like    take $_ for @res;

[21:27] <xinming> This is the most tricky part I met in this problem

[21:28] *** sftp left
[21:34] *** sftp joined
[21:34] *** p6bannerbot sets mode: +v sftp

[21:36] <xinming> for gather inflate-config(%cloned) { take $_ }

[21:36] <xinming> finally make everything set.

[21:37] <Geth> ¬¶ doc: 7b38d71a3f | Coke++ | 2 files

[21:37] <Geth> ¬¶ doc: whitespace

[21:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7b38d71a3f

[21:37] <Geth> ¬¶ doc: 97ad92f257 | Coke++ | doc/Language/classtut.pod6

[21:37] <Geth> ¬¶ doc: Don't use WHAT

[21:37] <Geth> ¬¶ doc: 

[21:37] <synopsebot> Link: https://doc.perl6.org/language/classtut

[21:37] <Geth> ¬¶ doc: It's mentioned elsewhere in this file, but doesn't add anything

[21:37] <Geth> ¬¶ doc: in particular to this example which already has .^name

[21:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/97ad92f257

[21:44] *** jameslenz joined
[21:45] <Geth> ¬¶ doc: 168463f07c | Coke++ | doc/Language/modules.pod6

[21:45] <Geth> ¬¶ doc: unindent paragraph (otherwise it's implicit code)

[21:45] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/168463f07c

[21:45] <Geth> ¬¶ doc: ba42f5d7b2 | Coke++ | doc/Language/modules.pod6

[21:45] <Geth> ¬¶ doc: Fix incorrect 'e.g.'

[21:45] <synopsebot> Link: https://doc.perl6.org/language/modules

[21:45] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ba42f5d7b2

[21:45] *** p6bannerbot sets mode: +v jameslenz

[21:46] *** agentzh joined
[21:46] *** agentzh left
[21:46] *** agentzh joined
[21:46] *** p6bannerbot sets mode: +v agentzh

[21:47] *** regreg__ left
[21:47] *** p6bannerbot sets mode: +v agentzh

[21:48] <Geth> ¬¶ doc: 40416b382f | Coke++ | doc/Language/modules.pod6

[21:48] <Geth> ¬¶ doc: whitespace

[21:48] <Geth> ¬¶ doc: 

[21:48] <Geth> ¬¶ doc: While both are valid POD6, this passes the finicky links test.

[21:48] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/40416b382f

[21:48] <synopsebot> Link: https://doc.perl6.org/language/modules

[21:49] *** jameslenz left
[21:51] <xinming> What is the best way to check an item is in an array?

[21:51] <xinming> m: my @a = (1 .. 5); (@a ~~ 1).perl.say;

[21:51] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´Bool::False‚ê§¬ª

[21:51] <xinming> m: my @a = (1 .. 5); (1 ~~ @a).perl.say;

[21:51] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´Bool::False‚ê§¬ª

[21:52] <xinming> m: my @a = ('a' .. 'c'); ('a' ~~ @a).perl.say;

[21:52] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´Bool::False‚ê§¬ª

[21:52] <xinming> m: my @a = ('a' .. 'c'); (@a ~~ 'a').perl.say;

[21:52] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´Bool::False‚ê§¬ª

[21:52] <Geth> ¬¶ whateverable: 2909f0a932 | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Whateverable/Output.pm6

[21:52] <Geth> ¬¶ whateverable: SIGKILL if it doesn't terminate by itself

[21:52] <Geth> ¬¶ whateverable: 

[21:52] <Geth> ¬¶ whateverable: I don't know if this is going to help much, but I'm seeing something

[21:52] <Geth> ¬¶ whateverable: and it might.

[21:52] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/2909f0a932

[21:53] <xinming> m: my @a = ('a' .. 'c'); @a.Set{'a'}.perl.say;

[21:53] <camelia> rakudo-moar 3c0b01bc5: OUTPUT: ¬´Bool::True‚ê§¬ª

[21:55] *** george joined
[21:55] *** p6bannerbot sets mode: +v george

[22:01] *** hamhu3 joined
[22:02] *** p6bannerbot sets mode: +v hamhu3

[22:05] *** alpha left
[22:07] *** hamhu3 left
[22:12] *** vrurg joined
[22:12] *** p6bannerbot sets mode: +v vrurg

[22:14] *** alpha joined
[22:15] *** p6bannerbot sets mode: +v alpha

[22:17] *** rindolf left
[22:18] <AlexDaniel> what's the difference between modules and distributions on CPAN?

[22:20] *** sno joined
[22:21] *** p6bannerbot sets mode: +v sno

[22:30] *** pecastro left
[22:31] *** Voldenet left
[22:32] <[Coke]> xinming: grep?

[22:32] <[Coke]> or, better: .first ?

[22:33] <xinming> [Coke]: .Set{'a'}   is good enough.

[22:33] <xinming> I just need .Set{'a'} in my case

[22:34] *** fake_space_whale left
[22:35] <timotimo> i'd personally go with (elem) for this

[22:41] *** hamhu3 joined
[22:41] *** hamhu3 left
[23:02] *** cognominal-p6 left
[23:10] <Geth> ¬¶ doc: 233cfa5657 | (Zoffix Znet)++ | doc/Type/Str.pod6

[23:10] <Geth> ¬¶ doc: [v6.d REVIEW] Document :count on `lines` as deprecated

[23:10] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/233cfa5657

[23:10] <synopsebot> Link: https://doc.perl6.org/type/Str

[23:21] *** george left
[23:26] *** HaraldJoerg left
[23:33] <SmokeMachine> could someone take a look at https://github.com/rakudo/rakudo/pull/2390? I want to merge it, but Im not sure if its good enough...

[23:38] <timotimo> i wonder how jnthn would feel about changing the api of apply to accept an optional parameter that it would push the @stubs to if it was passed

[23:38] <timotimo> perhaps that's better than returning it

[23:43] <SmokeMachine> timotimo: i agree that would be better...

[23:45] *** jameslenz joined
[23:46] *** Voldenet joined
[23:46] *** Voldenet left
[23:46] *** Voldenet joined
[23:46] *** p6bannerbot sets mode: +v Voldenet

[23:46] *** p6bannerbot sets mode: +v jameslenz

[23:46] <timotimo> maybe, or maybe it's just fine the way it is already

[23:47] *** p6bannerbot sets mode: +v Voldenet

[23:50] *** jameslenz left
