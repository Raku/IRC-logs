[00:02] <MasterDuke> timotimo: what are you working on?

[00:05] *** mcmillhj joined
[00:06] *** w_richard_w joined
[00:09] *** mcmillhj left
[00:10] *** simpleseeker left
[00:11] <timotimo> debugserver stuff

[00:11] <timotimo> have you looked at that at all yet?

[00:12] <MasterDuke> i sort of followed your session with Zoffix, haven't used it yet, but plan to

[00:12] *** comborico1611 joined
[00:13] <timotimo> OK

[00:13] <timotimo> then if i explained, it wouldn't make terribly much sense

[00:13] <timotimo> but here goes

[00:13] <comborico1611> say ~$/ if "abcdef" ~~ / bc.e / # Is ~ concatenating anything or is it being overloaded to another task?

[00:13] <evalable6> comborico1611, rakudo-moar 79ed89ba4: OUTPUT: ¬´bcde‚ê§¬ª

[00:13] <timotimo> whenever moar mentions an object to you, it will allocate a handler, which is just an integer that you can use to refer to the given object

[00:13] <timotimo> however, you can't tell if two handles are actually the same object underneath

[00:14] <timotimo> so i'm implementing a command that'll give you a list of lists of handles that point at the same object

[00:14] <timotimo> comborico1611: ~ and ~~ are two different operators

[00:14] <tobs> comborico1611: it coerces $/ to a string

[00:14] <timotimo> oh, you mean ~ in front of $/ there?

[00:14] <timotimo> yes, what tobs said

[00:14] <comborico1611> timotimo: Yes

[00:15] <MasterDuke> timotimo: is that handler ever visible in HLL-land (without using the debugserver)?

[00:15] <comborico1611> tobs: Thanks!

[00:17] *** mcmillhj joined
[00:18] <timotimo> nope

[00:18] <timotimo> better to call it handle than handler

[00:18] <timotimo> since it's a passive thing, whereas handler sounds more active

[00:20] <MasterDuke> related to MVMFrameHandler?

[00:22] *** simpleseeker joined
[00:22] *** mcmillhj left
[00:23] <timotimo> nope

[00:23] <timotimo> it's literally just a 64bit integer

[00:24] <timotimo> associated with any MVMObject that was part of some response from the debugserver

[00:27] *** wamba left
[00:28] <MasterDuke> cool. i'm trying to profile compiling the core setting during a jvm build with visualvm. however, i've never used it before, so i have no idea what i'm doing

[00:29] <timotimo> oof, yeah, that's a lot to learn at once i bet

[00:29] <timotimo> the output from "all lex" is much nicer now that handle numbers are coalesced

[00:34] *** pharv left
[00:34] *** pharv joined
[00:35] *** mcmillhj joined
[00:39] *** pharv left
[00:40] *** mcmillhj left
[00:42] *** pharv joined
[00:42] *** zachk left
[00:46] *** pharv left
[00:50] *** mcmillhj joined
[00:51] *** xi- left
[00:52] *** xi- joined
[00:55] *** mcmillhj left
[00:59] *** comborico1611 left
[01:03] *** mcmillhj joined
[01:08] *** mcmillhj left
[01:13] *** w_richard_w left
[01:13] *** w_richard_w joined
[01:14] *** simpleseeker left
[01:20] *** mcmillhj joined
[01:22] *** Zoffix joined
[01:22] *** mcmillhj_ joined
[01:25] *** mcmillhj left
[01:25] *** athenot left
[01:26] *** mcmillhj joined
[01:26] *** athenot joined
[01:27] *** mcmillhj_ left
[01:30] *** mcmillhj left
[01:31] *** mcmillhj joined
[01:31] *** mcmillhj left
[01:32] *** mcmillhj joined
[01:36] *** mcmillhj left
[01:36] *** mcmillhj joined
[01:37] *** mcmillhj left
[01:38] *** mcmillhj joined
[01:38] *** mcmillhj left
[01:39] *** mcmillhj joined
[01:39] <buggable> New CPAN upload: ArrayHash-0.3.tar.gz by HANENKAMP https://cpan.metacpan.org/authors/id/H/HA/HANENKAMP/Perl6/ArrayHash-0.3.tar.gz

[01:40] *** mcmillhj left
[01:40] *** mcmillhj joined
[01:42] *** mcmillhj_ joined
[01:42] *** mcmillhj_ left
[01:43] *** mcmillhj_ joined
[01:43] *** mcmillhj_ left
[01:43] *** mcmillhj_ joined
[01:43] *** mcmillhj_ left
[01:44] *** mcmillhj_ joined
[01:44] *** mcmillhj_ left
[01:45] *** mcmillhj_ joined
[01:45] *** mcmillhj_ left
[01:45] *** mcmillhj left
[01:46] *** ilbot3 left
[01:47] * Zoffix üëÇüìåüíß

[01:47] *** w_richard_w left
[01:48] <Zoffix> So quiet :)

[01:48] <Zoffix> Listen to this woman's beautiful singing: https://youtu.be/SAB0hlaPgFc?t=1m18s

[01:49] *** MilkmanDan left
[01:49] <buggable> New CPAN upload: DOM-Tiny-0.4.0.tar.gz by HANENKAMP https://cpan.metacpan.org/authors/id/H/HA/HANENKAMP/Perl6/DOM-Tiny-0.4.0.tar.gz

[01:49] *** w_richard_w joined
[01:51] *** MilkmanDan joined
[01:56] *** ilbot3 joined
[01:56] *** ChanServ sets mode: +v ilbot3

[02:02] *** w_richard_w left
[02:02] *** w_richard_w joined
[02:05] *** skids left
[02:35] *** athenot left
[02:36] *** athenot joined
[02:44] <Geth> ¬¶ perl6.org/bs4: 78cdf936be | (Zoffix Znet)++ | templates/home.html.ep

[02:44] <Geth> ¬¶ perl6.org/bs4: Add "Lazy Evaluation" to slides

[02:44] <Geth> ¬¶ perl6.org/bs4: review: https://github.com/perl6/perl6.org/commit/78cdf936be

[03:39] *** ChoHag joined
[03:39] *** khisanth__ left
[03:50] *** eliasr left
[03:51] *** khw left
[03:53] *** khisanth__ joined
[04:22] *** jmerelo joined
[04:22] <jmerelo> releasable6: status

[04:22] <releasable6> jmerelo, Next release will happen when it's ready. 0 blockers. 266 out of 266 commits logged

[04:42] <samcv> jmerelo: should be releasing MoarVM imminently

[04:45] <jmerelo> samcv: great news and great job.

[04:45] <samcv> thanks :)

[04:45] <samcv> lots of stuff in the changelog for MoarVM at least

[04:45] <jmerelo> samcv++

[04:45] <samcv> probably in rakudo as well though i haven't followed it super closely :)

[04:46] <samcv> always so much going on :)

[04:46] <jmerelo> samcv: including pull requests in github/linguist :-)

[04:48] *** curan joined
[04:50] *** sauvin joined
[05:06] *** ufobat_ joined
[05:08] <Geth> ¬¶ perl6-pod-to-bigpage: 165791cf05 | (JJ Merelo)++ | t/render.t

[05:08] <Geth> ¬¶ perl6-pod-to-bigpage: Adds test for render refs #14

[05:08] <Geth> ¬¶ perl6-pod-to-bigpage: review: https://github.com/perl6/perl6-pod-to-bigpage/commit/165791cf05

[05:09] *** pharv joined
[05:10] *** xtreak joined
[05:10] <zostay> m: class F { ... }; class F:ver<1> { }; say F.^ver

[05:10] <camelia> rakudo-moar 79ed89ba4: OUTPUT: ¬´(Mu)‚ê§¬ª

[05:10] <zostay> m: class F:ver<1> { ... }; class F { }; say F.^ver

[05:10] <camelia> rakudo-moar 79ed89ba4: OUTPUT: ¬´v1‚ê§¬ª

[05:12] <zostay> apparently, it's important to make sure the first reference to a class as the adverbs set, even if it's a stub

[05:19] <buggable> New CPAN upload: HTTP-Headers-0.1.tar.gz by HANENKAMP https://cpan.metacpan.org/authors/id/H/HA/HANENKAMP/Perl6/HTTP-Headers-0.1.tar.gz

[05:29] <buggable> New CPAN upload: Hash-MultiValue-0.5.tar.gz by HANENKAMP https://cpan.metacpan.org/authors/id/H/HA/HANENKAMP/Perl6/Hash-MultiValue-0.5.tar.gz

[05:31] *** ChoHag left
[05:54] *** domidumont joined
[05:55] <Geth> ¬¶ perl6-pod-to-bigpage: JJ++ created pull request #22: Eliminates anchors for indexed terms

[05:55] <Geth> ¬¶ perl6-pod-to-bigpage: review: https://github.com/perl6/perl6-pod-to-bigpage/pull/22

[05:55] *** ChoHag joined
[05:59] *** domidumont left
[06:00] *** domidumont joined
[06:03] *** pharv left
[06:18] *** pharv joined
[06:21] *** pharv left
[06:24] *** ChoHag left
[06:24] *** ChoHag joined
[06:31] *** robertle joined
[06:34] *** ChoHag left
[06:35] *** ChoHag joined
[06:35] *** ChoHag left
[06:43] *** pharv joined
[06:46] *** darutoko joined
[06:50] *** pharv left
[06:52] <jmerelo> 177 perl6 & rakudo & parrot users in StackOverflow. https://t.co/UecHGtGwFf Sigh

[06:53] <jmerelo> Actually, 179 if we include parrot. 

[06:55] *** wamba joined
[06:57] <jmerelo> For the sake of comparison, there are 40596 for perl. To be fair, a few of that will be for perl6. I'll add that tag if I find them. Anyway.

[07:01] <moritz> and by "users" you mean "people who asked questions", right?

[07:01] <moritz> 'cause I'm a perl 6 user on stackoverflow, but don't show up there

[07:02] <jmerelo> moritz: I've tried to find the way to include people to answer. There should be one...

[07:04] <jmerelo> Hm, there's a Comment table

[07:04] <moritz> jmerelo: it's an OK metric; just want to be clear on what you mean by "users"

[07:10] <El_Che> :hi

[07:17] <moritz> \o El_Che 

[07:18] <El_Che> mmm, zsh does not set a $SHELL parameter it seems

[07:18] <El_Che> I wanted to provide a script to set the path for perl6

[07:19] <El_Che> not does sh

[07:19] <El_Che> nor

[07:19] <donpdonp> mycomputer$ echo $SHELL

[07:19] <donpdonp> /usr/bin/zsh

[07:20] <El_Che> donpdonp: I suspect it's set by the OS. A Ubuntu container leaves it empty if you just type "zsh"

[07:20] <El_Che> maybe it must be the login shell

[07:20] <donpdonp> hmm ok

[07:20] <El_Che> (however, zsh overrides the $SHELL set by bash, by removing it)

[07:22] <El_Che> and other way is of course to look what files are in a users home

[07:33] *** xiaomiao joined
[07:36] *** domidumont1 joined
[07:36] *** domidumont left
[07:55] *** wamba left
[08:08] *** rindolf joined
[08:09] *** mspo left
[08:13] *** dakkar joined
[08:15] *** xtreak left
[08:22] *** zakharyas joined
[08:30] *** zakharyas left
[08:31] *** zakharyas joined
[08:35] *** darutoko left
[08:38] *** wamba joined
[08:38] *** brrt joined
[08:41] *** zakharyas left
[08:42] *** zakharyas joined
[08:56] *** epony left
[09:00] *** epony joined
[09:11] *** xtreak joined
[09:15] *** epony left
[09:19] *** parv joined
[09:28] *** epony joined
[09:30] *** epony left
[09:31] *** epony joined
[09:36] *** xtreak left
[09:37] *** jhill_ joined
[09:37] <Geth> ¬¶ doc: fb56305876 | (Jonas Kramer)++ | doc/Type/Any.pod6

[09:37] <Geth> ¬¶ doc: Fix link.

[09:37] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/fb56305876

[09:37] <synopsebot> Link: https://doc.perl6.org/type/Any

[09:38] *** xtreak joined
[09:40] *** xtreak left
[09:44] *** zakharyas left
[09:46] *** zakharyas joined
[09:53] *** darutoko joined
[09:55] *** w_richard_w left
[09:59] *** wamba left
[10:11] *** domidumont1 left
[10:19] *** markong joined
[10:23] *** scimon joined
[10:28] *** eliasr joined
[10:32] *** parv left
[10:37] *** brrt left
[10:49] <Geth> ¬¶ doc: 55210f24c2 | ÈôàÊ¢ìÁ´ã++ (committed using GitHub Web editor) | META6.json

[10:49] <Geth> ¬¶ doc: Update META6.json

[10:49] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/55210f24c2

[10:49] <Geth> ¬¶ doc: a065a6b1b6 | ÈôàÊ¢ìÁ´ã++ (committed using GitHub Web editor) | META6.json

[10:49] <Geth> ¬¶ doc: Update META6.json

[10:49] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/a065a6b1b6

[10:58] *** zakharyas left
[10:59] *** zakharyas joined
[11:06] <Zoffix> With people doing constantly doing `release: status` I wonder if we should add a `release` alert level to alerts.perl6.org and post releases to it. That way people can sub to it through RSS

[11:06] <moritz> I see alert.perl6.org mostly as a tool for users

[11:07] <moritz> whereas the release status, especially before a planned release, is more of interest to developers

[11:07] <jmerelo> So, somebody answered my question in StackOverflow. What a surprise :-)

[11:08] <jmerelo> Here's the query that includes answers and comments https://data.stackexchange.com/stackoverflow/query/844618/number-of-questions-answers-and-comments-per-user-per-tag-set There are 459 persons participating in such questions.

[11:08] <Zoffix> moritz: I don't follow. A new release of the compiler is surely of interest to users. Especially since the date of it isn't very predictable.

[11:09] *** zakharyas left
[11:09] <Zoffix> Also, downstream packagers are users.

[11:09] <jmerelo> Zoffix: putting it in p6alerts can't hurt. But don't take away our lovely releasable6 bot from us.

[11:10] <AlexDaniel> well, they can also subscribe to the mailing list right now

[11:11] <AlexDaniel> Zoffix: but maybe we should only issue alerts for rakudo star?

[11:11] <AlexDaniel> or both

[11:11] <moritz> those sound like notifications, not alerts

[11:12] <moritz> if we say that alerts.perl6.org should serve for general notifications, not just alerts, I'm fine with that

[11:12] <moritz> just saying that this seems like a bit of a departure from the original goals (which might be fine too)

[11:13] <Zoffix> moritz: right. good point.

[11:13] <Zoffix> And fo Rakudo Star there's already an RSS feed from rakudo.org's posts feed

[11:14] <Zoffix> (which isn't linked to from anywhere ATM https://github.com/perl6/rakudo.org/issues/4 )

[11:16] <stmuk> "severity" doesn't really match with a release notification (unless the release is a security fix)

[11:17] *** brrt joined
[11:20] <lizmat> weekly: https://data.stackexchange.com/stackoverflow/query/844618/number-of-questions-answers-and-comments-per-user-per-tag-set 

[11:20] <notable6> lizmat, Noted!

[11:20] <AlexDaniel> weekly: clear

[11:20] <notable6> AlexDaniel, Moved existing notes to ‚Äúweekly_2018-04-25T11:20:50Z‚Äù

[11:20] <AlexDaniel> weekly: https://data.stackexchange.com/stackoverflow/query/844618/number-of-questions-answers-and-comments-per-user-per-tag-set 

[11:20] <notable6> AlexDaniel, Noted!

[11:21] <AlexDaniel> (had some notes from the previous week)

[11:21] <lizmat> AlexDaniel++

[11:25] <robertle> shameless plug for short blog post: https://www.linkedin.com/pulse/less-stern-look-disapproval-robert-lemmen/

[11:27] <AlexDaniel> you can plug it yourself:

[11:27] <AlexDaniel> weekly: https://www.linkedin.com/pulse/less-stern-look-disapproval-robert-lemmen/

[11:27] <notable6> AlexDaniel, Noted!

[11:27] <AlexDaniel> :)

[11:29] <AlexDaniel> robertle: so why didn't you make a perl¬†6 module? :)

[11:30] <robertle> this isn't javascript, right? ;)

[11:30] <AlexDaniel> what do you mean?

[11:30] <Zoffix> robertle: well, we could do the same thing ether did and test how well our ecosystem supports it.

[11:31] <Zoffix> Unless the Hebrew 666 module is still in the ecosystem...

[11:31] *** Luna521 joined
[11:32] <robertle> AlexDaniel: that 3-line modules may not be the way to go.

[11:32] <AlexDaniel> ah, that thing

[11:32] <robertle> perhaps if they actually do something useful

[11:32] <AlexDaniel> I don't think it's a problem for Acme::*

[11:34] <Zoffix> doesn't look like it's still in there

[11:43] <Zoffix> Lots of easy rakudo tickets to fix: https://github.com/rakudo/rakudo/issues?q=is%3Aissue+is%3Aopen+label%3ALHF

[11:43] <Zoffix> Step right up \o/ Be a hero :)

[11:44] <Zoffix> huggable: zscript

[11:44] <huggable> Zoffix, Helper script for Rakudo Perl 6 core development: https://github.com/zoffixznet/z

[11:46] <El_Che> Ik have been bitten a zillion times by this:

[11:46] <El_Che> m: class Result { has $.latest is rw; }; my $r = Result.new; $r.latest("Foo"); say $r;

[11:46] <camelia> rakudo-moar 79ed89ba4: OUTPUT: ¬´Too many positionals passed; expected 1 argument but got 2‚ê§  in method latest at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[11:46] <Zoffix> ^ it doesn't know how to handle forks when `z init`; but just run it and afterwards do `git remote remove origin; git remote add origin https://github.com/YOUR-USER/rakudo` and the same for all the other repos

[11:46] <El_Che> m: class Result { has $.latest is rw; }; my $r = Result.new; $r.latest = "Foo"; say $r;

[11:46] <camelia> rakudo-moar 79ed89ba4: OUTPUT: ¬´Result.new(latest => "Foo")‚ê§¬ª

[11:47] <El_Che> the . notation make the method syntax more natural for me

[11:47] <El_Che> Am I talking crazy?

[11:47] <AlexDaniel> well, not crazy for sure

[11:48] <AlexDaniel> but what about

[11:48] <AlexDaniel> m: class Result { has $.latest is rw; }; my $r = Result.new(latest => "Foo"); say $r;

[11:48] <camelia> rakudo-moar 79ed89ba4: OUTPUT: ¬´Result.new(latest => "Foo")‚ê§¬ª

[11:48] *** raynold left
[11:48] <AlexDaniel> m: class Result { has $.latest is rw; }; my $r = Result.new: :latest("Foo"); say $r;

[11:48] <camelia> rakudo-moar 79ed89ba4: OUTPUT: ¬´Result.new(latest => "Foo")‚ê§¬ª

[11:49] <El_Che> AlexDaniel: constructors are OK. It mostly for values written after

[11:49] <AlexDaniel> right

[11:51] <Zoffix> El_Che: maybe invent some mnemonic to remember it easier? **A**ttributes are **A**ssigned into. Or "you use `$!foo = "bar"` inside the class; and outside it's the same"

[11:52] <Zoffix> To me it makes more sense to assign into them than call them as a method. Makes the whole "we auto-gen a method for you" thing that much more hidden.

[11:52] <El_Che> yeah, I wish the compiler would change the error to "El_Che, what are you doing, bro?"

[11:52] <Zoffix> I wonder if CommaIDE would be able to detect this sort of stuff

[11:53] <Zoffix> weekly: Lots of easy rakudo tickets to fix: https://github.com/rakudo/rakudo/issues?q=is%3Aissue+is%3Aopen+label%3ALHF  Talk to devs in #perl6-dev if you need assistance in fixing them: https://webchat.freenode.net/?channels=#perl6-dev

[11:53] <notable6> Zoffix, Noted!

[11:53] <Zoffix> Thank you, robot.

[11:53] <El_Che> Zoffix: maybe the wording on the doc page is confusing: "While there is no such thing as a public (or even protected) attribute, there is a way to have accessor methods generated automatically: replace the ! twigil with the . twigil (the . should remind you of a method call)."

[11:53] <Zoffix> botsnack

[11:53] <Zoffix> .botsnack

[11:53] <yoleaux> :D

[11:53] <El_Che> method all over the place

[11:54] <Zoffix> El_Che: you got a commit bit. Fix it! :) https://github.com/perl6/doc

[11:54] * Zoffix &

[11:54] *** Zoffix left
[11:54] <El_Che> Fixing is not the issue. I am wondering if others find the wording troublesome

[11:57] *** Luna521 left
[12:02] <stmuk> El_Che: the sentence is probably too long as for your original $r.latest("Foo") I probably made the same error first time

[12:03] *** zakharyas joined
[12:03] *** zakharyas left
[12:05] <El_Che> stmuk: the problem is that whenever I am away from perl6 I make the error again

[12:05] <El_Che> :)

[12:06] *** zakharyas joined
[12:13] *** avalenn left
[12:13] <jkramer> What does this mean? MoarVM panic: Internal error: Unwound entire stack and missed handler

[12:14] *** domidumont joined
[12:14] *** mcmillhj joined
[12:15] <jkramer> Ah looks like it's caused by doing a 'return' in a whenever-block

[12:18] *** kent\n left
[12:22] <jnthn> Yeah, that wants a better error for sure

[12:23] <jnthn> Should probably say the handler is not in dynamic scope

[12:23] *** dakkar left
[12:23] *** MilkmanDan left
[12:23] *** jtpalmer left
[12:23] *** tobs left
[12:23] *** ingy left
[12:23] *** syntaxman left
[12:24] <jnthn> Well, when that's the case at least.

[12:25] <jnthn> Not quite sure if we should go so far as trying to make it magically DWIM

[12:25] <jnthn> At least, in the cases where that makes any sense

[12:25] <jnthn> Probably not

[12:26] *** dakkar joined
[12:26] *** MilkmanDan joined
[12:26] *** jtpalmer joined
[12:26] *** tobs joined
[12:26] *** ingy joined
[12:26] *** syntaxman joined
[12:26] *** avar joined
[12:26] *** perlawhirl joined
[12:26] *** tony-o joined
[12:26] *** statisfiable6 left
[12:26] *** squashable6 left
[12:26] *** releasable6 left
[12:26] *** benchable6 left
[12:26] *** committable6 left
[12:26] *** bloatable6 left
[12:26] *** coverable6 left
[12:26] *** quotable6 left
[12:27] *** Ven`` joined
[12:27] <jkramer> I kinda assumed it would implicity do a "done;" and return from the sub the react-block was in, but crashing is also fine :)

[12:27] <Ven``> o/

[12:27] *** dpk left
[12:27] *** evalable6 left
[12:27] *** greppable6 left
[12:28] <jnthn> jkramer: The whenever can be running on another thread from the one waiting for the react block, though, and yes, it would need to arrange to make the `done` work

[12:28] *** dpk joined
[12:29] <jnthn> jkramer: I think that's all do-able, but what does give me a bit of pause for thought is that react today is implemented in terms of supply, and `return` can never work there, so it'd introduce a difference there

[12:29] <jnthn> That may be reasonable, but I'd at least want to think it through a bit more :)

[12:31] <jkramer> jnthn: I wasn't sarcastic, I really think crashing is fine in this case :) 

[12:31] <jkramer> I just had different expectations but it makes sense

[12:32] *** kent\n joined
[12:32] <Ven``> if magic is involved it could maybe be detected at compile-time

[12:33] <jnthn> Ven``: Indeed, given return works lexically

[12:33] <jnthn> In fact, if it is doomed to not work, it can also be detected lexically :)

[12:33] <Ven``> sounds like an interesting thing to try and implement!

[12:33] <jnthn> It's not unreasonable to want to `return` out of a `react`, I don't think.

[12:35] <Ven``> so it'd convert return to e.g. my $return-after-react; react { $return-after-react = True; done; }; return if $return-after-react;?

[12:36] *** ZofBot left
[12:38] *** ZofBot joined
[12:38] *** ChanServ sets mode: +v ZofBot

[12:40] <jnthn> Something like that, I guess

[12:40] <jnthn> Though return is a control exception so another way is to handle that

[12:42] <Ven``> that sounds quite a bit harder than forbidding it

[12:42] <Ven``> .oO( How very Perl 6-y, blood sweat and tears from the impl. to allow things the user to do everything they'd want to )

[12:44] *** releasable6 joined
[12:45] <Ven``> s/things//

[12:53] *** skids joined
[12:58] *** committable6 joined
[12:58] *** ChanServ sets mode: +v committable6

[13:02] *** Ven`` left
[13:03] *** zakharyas left
[13:03] <jkramer> Is this how it's supposed to be?

[13:03] <jkramer> m: sub lol(Str $foo?) { say "lol: --$foo--" if $foo.defined }; say "haha" ~ lol ~ "this is not supposed to be an argument for lol()"

[13:03] <camelia> rakudo-moar eb67e6d05: OUTPUT: ¬´lol: --this is not supposed to be an argument for lol()--‚ê§hahaTrue‚ê§¬ª

[13:04] *** zakharyas joined
[13:04] <timotimo> it is

[13:04] <jkramer> I guess lol ~ "..." could be interpreted as lol with "..." as argument coerced to Str with ~

[13:04] <timotimo> sub calls gobble up until the end of the line if they can

[13:04] <timotimo> what you want here is a term, not a sub

[13:13] *** jmerelo left
[13:16] <Geth> ¬¶ perl6-most-wanted: 5b9f571cac | (Jonas Kramer)++ (committed using GitHub Web editor) | most-wanted/modules.md

[13:16] <Geth> ¬¶ perl6-most-wanted: WIP: Proc::InvokeEditor

[13:16] <Geth> ¬¶ perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/5b9f571cac

[13:23] *** quotable6 joined
[13:23] *** ChanServ sets mode: +v quotable6

[13:23] *** benchable6 joined
[13:23] *** evalable6 joined
[13:23] *** coverable6 joined
[13:23] *** greppable6 joined
[13:23] *** bloatable6 joined
[13:23] *** ChanServ sets mode: +v greppable6

[13:23] *** ChanServ sets mode: +v bloatable6

[13:29] *** athenot left
[13:30] *** athenot joined
[13:57] <donpdonp> my code has "use BlkMeV::Util; BlkMeV::Util::int32Buf(1);"

[13:57] <donpdonp> how can I redo that so i can call int32Buf(1) without specifying the module part

[13:59] <jkramer> Is anyone using mi6 for releasing to CPAN?

[14:02] *** Zoffix joined
[14:02] <Zoffix> donpdonp: just export it in the module. sub int32Buf (...) is export {... }

[14:03] <Zoffix> jkramer: yes, some people are using it.

[14:03] *** curan left
[14:04] <jkramer> Zoffix: Any idea what ~/.pause is supposed to look like? Can't find docs for that

[14:04] <donpdonp> Zoffix: ok thx

[14:05] <donpdonp> is it possible to do a partial name "Util::int32Buf(1);"

[14:05] <Zoffix> jkramer: https://gist.github.com/zoffixznet/60452b30efe49e9b970412073b5605c3

[14:06] <jkramer> Zoffix: Thanks!

[14:09] *** Kaiepi left
[14:10] <Zoffix> donpdonp: this would be one way of doing it: package BlkMeV { module Util is export { our sub int32Buf (int $x) { Buf.new: $x; } } }

[14:11] <jkramer> Hmpf "599 Internal Exception, https://pause.perl.org/pause/authenquery"

[14:11] <donpdonp> Zoffix: i think thats just what I wanted, thx.

[14:12] <Zoffix> This is another way (cuts down on indents a bit): sub EXPORT { { 'Util' => ::('BlkMeV::Util') } }; unit module BlkMeV::Util; our sub int32Buf (int $x) { Buf.new: $x }

[14:13] <donpdonp> o^O the first way is more reable

[14:13] <Zoffix> :)

[14:14] <donpdonp> readable. esp to a p6 newb :)

[14:16] *** pilne left
[14:19] <Zoffix> jkramer: dunno. Site works with the web interface. You could try installing this Perl 5 script and seeing if it is happy with your ~/.pause (e.g. run `pause ls` and see if it errors out the same): https://metacpan.org/pod/distribution/App-pause/script/pause

[14:21] <jkramer> Zoffix: Uploaded it manually now. 599 seems like an internal error code of HTTP::Tinyish and not from the upload server/site, but I can't be bothered to debug it now

[14:25] <Zoffix> FWIW HTTP::Tinyish needs curl installed. Do you have it?

[14:25] <jkramer> Yes

[14:25] * Zoffix shrugs

[14:25] <jkramer> BTW how does CPAN keep p5/p6 modules apart? Is there a p6 section on CPAN somewhere or is that modules.perl6.org?

[14:26] <Zoffix> jkramer: how did you manually upload?

[14:26] <Zoffix> ('cause if you done it right, it'd kinda answer that question :P)

[14:27] <Zoffix> Did you select "Perl6" directory in the box?

[14:27] <jkramer> Zoffix: Like in the olden times with p5 modules (https://pause.perl.org/pause/authenquery?ACTION=add_uri) just with "Perl6" in that directory field.

[14:28] <jkramer> As per your instrucations here :) http://blogs.perl.org/users/zoffix_znet/2017/10/cpan6-is-here.html

[14:28] <Zoffix> Right. So that's how it keeps it apart. All Perl 6 modules are in the user's Perl 6 dir: https://www.cpan.org/authors/id/J/JK/JKRAMER/Perl6/

[14:29] <Zoffix> And Perl 5 tools ignore that dir

[14:29] <jkramer> Well my question was more about: can I select "perl 6" on search.cpan.org/metacpan to find P6 modules or is it just modules.perl6.org?

[14:29] <buggable> New CPAN upload: Proc-Editor-0.0.1.tar.gz by JKRAMER https://cpan.metacpan.org/authors/id/J/JK/JKRAMER/Perl6/Proc-Editor-0.0.1.tar.gz

[14:29] <scimon> So I was thinking of using Concurrent::Queue to build a DBIish Connection Pool module. 

[14:29] <Zoffix> jkramer: just modules.perl6.org

[14:29] <jkramer> Ok :)

[14:29] <jkramer> Hey, here we go \o/

[14:30] <scimon> jkramer: So what does that do?

[14:30] <Zoffix> jkramer: the module schemes are inherently incompatible. We can have multiple authors having the same version name and multiple modules having same version but different APIs, and metacpan/search.cpan.org don't support that

[14:31] <Zoffix> *multiple authors having the same module name

[14:31] <jkramer> scimon: Run an editor, much like Proc::InvokeEditor (was on the most-wanted-modules list so I just gave it a shot)

[14:31] <scimon> https://github.com/Scimon/p6-Proc-InvokeEditor I probably should have updated the most wanted modules list.

[14:31] <jkramer> Oops :)

[14:31] <scimon> (Also I should probably finish this. There's a few things I'd like it to do it doesn't).

[14:32] <Zoffix> jkramer: now that it's in ecosystem, you should remove it from most wanted. The WIP tag is really to avoid multiple authors working on the same thing when the thing isn't listed on the ecosystem

[14:32] <scimon> No problemo, the more the merrier. 

[14:32] <Zoffix> Yeah, like that ^ ^_^

[14:32] <scimon> My fault.

[14:32] <Zoffix> hehe

[14:32] <jkramer> Zoffix: Yup, was just about to do that :)

[14:33] <Geth> ¬¶ perl6-most-wanted: 19c19180d6 | (Jonas Kramer)++ (committed using GitHub Web editor) | most-wanted/modules.md

[14:33] <Geth> ¬¶ perl6-most-wanted: Removed Proc::InvokeEditor.

[14:33] <Geth> ¬¶ perl6-most-wanted: review: https://github.com/perl6/perl6-most-wanted/commit/19c19180d6

[14:33] <scimon> Mine currently has zip windows support because whilst I could get Rakudo star installed in Windows I couldn't get zef to install anything. 

[14:33] <scimon> Also it currently only uses hard coded paths, plan was to add PATH checking but I'd not done it yet. 

[14:34] <Zoffix> scimon: is there a bug report for that zef unable to install anything?

[14:34] *** Kaiepi joined
[14:35] <scimon> Well the problem isn't zef it's that zef can't unzip files but then I start hitting the "Why the hell am I developing in Windows?" point and go back to playing games.

[14:35] <jkramer> scimon: Those are things I want to add too. Currently it checks $VISUAL and $EDITOR plus some defaults and just runs them, if running them fails it tries the next one

[14:35] <Zoffix> scimon: well that's weird innit, 'cause Windows comes with unzipper...

[14:36] <scimon> I'll try running it (probably tomorrow I'm out tonight) and put a note here. I went with rakudo star msi installer. 

[14:36] <Zoffix> Hm, looks like it's only in GUI mode, I guess. No built in command-line utility: https://stackoverflow.com/questions/1021557/how-to-unzip-a-file-using-the-command-line

[14:37] <scimon> jkramer: I check the file exists and is executable :) 

[14:37] <scimon> Windows Commandline is so painful. 

[14:37] <Zoffix> yeah

[14:41] *** mcmillhj left
[14:42] <scimon> Anyway, two different modules doing very similar things... isn't that what all the cool languages do? We should probably have given them dumb names. 

[14:42] *** mcmillhj joined
[14:42] *** zakharyas left
[14:46] <stmuk> scimon: I usually test zef on windows before shipping the MSI. Which module(s) couldn't you install?

[14:46] *** zakharyas joined
[14:48] *** timeless left
[14:49] *** timeless joined
[14:51] *** chansen_ left
[14:52] *** chansen_ joined
[14:54] <scimon> stmuk: I can't remember it was a few weeks ago and I've paged the memory to /dev/null. I'll try again tomorrow evening and actually ask questions here. (And possibly on Stack Overflow (before anyone says anything))

[14:54] <Geth> ¬¶ doc: zoffixznet++ created pull request #1961: Post release 2018.04

[14:54] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/1961

[14:54] <Geth> ¬¶ doc/master: 10 commits pushed by (Zoffix Znet)++

[14:54] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/a065a6b1b687...3459efe2f74d

[14:55] <scimon> Like I say I don't think the issue is zef it's more you need some stuff setup in windows in order to use it that don't come as standard.

[14:55] <scimon> (I think I had to install curl for instance. I managed that.)

[14:56] <stmuk> scimon: well you will need windows git if the module isn't on CPAN and Strawberry's Perl gcc if its nativecall

[14:56] <scimon> Yeah I had to install git.

[14:57] <scimon> (My Windows box is mostly for games, though it recently got Unity because I felt that way inclined). 

[14:57] <stmuk> scimon: if you are talking about the last release of Star then there was an issue in the version of zef (recommended to upgrade on all platforms)

[14:57] <scimon> Well I'll try when I get home (in the office on a real computer :) )

[14:58] *** vcv_ joined
[15:01] *** domidumont left
[15:01] *** dakkar left
[15:01] *** MilkmanDan left
[15:01] *** jtpalmer left
[15:01] *** tobs left
[15:01] *** ingy left
[15:01] *** syntaxman left
[15:01] *** avar left
[15:01] *** perlawhirl left
[15:01] *** tony-o left
[15:01] *** unclechu left
[15:01] *** robertle left
[15:01] *** khisanth__ left
[15:01] *** ilbot3 left
[15:01] *** |oLa| left
[15:01] *** Actualeyes left
[15:01] *** andrzejku left
[15:01] *** eater left
[15:01] *** andrewalker left
[15:01] *** colomon left
[15:01] *** stux|RC left
[15:01] *** maettu left
[15:01] *** ribasushi left
[15:01] *** stmuk left
[15:01] *** klapperl left
[15:01] *** rindolf left
[15:01] *** sauvin left
[15:01] *** Sgeo_ left
[15:01] *** japanoise left
[15:01] *** [particle]1 left
[15:01] *** Ulti left
[15:01] *** xinming left
[15:01] *** mingdao left
[15:01] *** cpup left
[15:01] *** scovit left
[15:01] *** bartolin left
[15:01] *** obfusk left
[15:01] *** huf left
[15:01] *** rindolf joined
[15:01] *** sauvin joined
[15:01] *** Sgeo_ joined
[15:01] *** japanoise joined
[15:01] *** [particle]1 joined
[15:01] *** Ulti joined
[15:01] *** xinming joined
[15:01] *** mingdao joined
[15:01] *** cpup joined
[15:01] *** scovit joined
[15:01] *** bartolin joined
[15:01] *** obfusk joined
[15:01] *** huf joined
[15:01] *** kini joined
[15:01] *** Mithaldu joined
[15:01] *** emeric joined
[15:01] *** Celelibi joined
[15:01] *** nine joined
[15:01] *** jdv79 joined
[15:03] *** dakkar joined
[15:03] *** MilkmanDan joined
[15:03] *** jtpalmer joined
[15:03] *** tobs joined
[15:03] *** ingy joined
[15:03] *** syntaxman joined
[15:03] *** avar joined
[15:03] *** perlawhirl joined
[15:03] *** tony-o joined
[15:03] *** releasable6 left
[15:04] *** robertle joined
[15:04] *** khisanth__ joined
[15:04] *** ilbot3 joined
[15:04] *** |oLa| joined
[15:04] *** Actualeyes joined
[15:04] *** andrzejku joined
[15:04] *** eater joined
[15:04] *** andrewalker joined
[15:04] *** colomon joined
[15:04] *** stux|RC joined
[15:04] *** maettu joined
[15:04] *** stmuk joined
[15:04] *** klapperl joined
[15:04] *** verne.freenode.net sets mode: +v ilbot3

[15:04] *** stux|RC left
[15:04] *** stux|RC-- joined
[15:04] *** wictory[m] left
[15:04] *** mack[m] left
[15:04] *** ilmari[m] left
[15:04] *** tadzik left
[15:04] *** elcaro[m] left
[15:04] *** CIAvash[m] left
[15:04] *** mienaikage left
[15:04] *** AlexDaniel` left
[15:05] *** mirlur[m] left
[15:05] *** Garland_g[m] left
[15:05] *** Matthew[m] left
[15:05] *** SCHAPiE left
[15:05] *** benchable6 left
[15:05] *** evalable6 left
[15:05] *** coverable6 left
[15:05] *** squashable6 joined
[15:05] <jkramer> scimon: Not having dumb names is one of the best things in the perl ecosystem IMO. :) If you need a module that does X you just search for X and you'll find a bunch, ie. "template" gives you all the Template:: stuff.

[15:05] *** jmerelo joined
[15:06] <jmerelo> O/

[15:06] <jkramer> I remember once I had to use Java. How do you find a templating framework called "velocity"?! :)

[15:06] *** ribasushi joined
[15:06] <El_Che> jkramer: it's slow as hell :)

[15:07] <jkramer> El_Che: Yep, and annoying to use too AFAIR (it's been a long time since then)

[15:07] <El_Che> jkramer: it's slow as hell :)

[15:07] <El_Che> oops

[15:07] <El_Che> :)

[15:08] <scimon> jkramer: I was (as is often my way) of course joking. Ruby and Node modules have the most bonkers names ever. 

[15:09] <jkramer> scimon: Yeah I got that, I just wanted to use the opportunity to praise the perl ecosystem :)

[15:09] <scimon> Indeed :)

[15:12] <TEttinger> jkramer: you find it like you live in the 21st century. https://www.google.com/search?hl=en&q=java%20templating%20framework

[15:14] *** SCHAPiE joined
[15:15] *** ilbelkyr left
[15:19] *** FROGGS joined
[15:19] <TEttinger> how vulnerable is cpan or whatever cpan equivalent is used for perl6 to leftpad-like situations? I doubt that perl authors are doing things as stupid as leftpad dependencies (and dependencies on "libs" like is-even) just because that's an unusually reckless thing for any ecosystem to do, but could a popular lib cease to exist?

[15:20] <jkramer> TEttinger: That's kinda cheating and it's still difficult to get a good overview of available libs :)

[15:20] *** caasih left
[15:20] <FROGGS> o7

[15:21] *** caasih joined
[15:21] <TEttinger> if google is cheating you need to reexamine the world around you

[15:21] <Zoffix> TEttinger: not a lot. We have a regularly cloned version of all github-hosted repos and CPAN-hosted dists are backed by Backpan

[15:22] <jkramer> TEttinger: I mean that you can't compare a google search with a directory like CPAN

[15:23] <TEttinger> jkramer: Template is also an overloaded term. if I just blindly added a dependency to "template" I could get templating engines, C++ template library interop, a blank template for an app...

[15:23] <jkramer> How do you know you're not missing an awesome framework because its authors are not good at/don't care about SEO?

[15:24] <TEttinger> well mostly because as you said, velocity isn't awesome

[15:25] <jkramer> What I meant is that it's hard to find with that name, compared to modules organized in namespaces in a directory like CPAN

[15:26] <TEttinger> in that google search about half of the results were direct links to projects for me, the other half were suggestions/ratings for libs

[15:26] <AlexDaniel> TEttinger: there was a case when one guy pulled out most of his repos, which created a tiny chain reaction with a few other modules. I simply restored removed modules by putting them on https://github.com/perl6-community-modules

[15:27] <TEttinger> nice AlexDaniel

[15:27] <Geth> ¬¶ doc: 21e290b5c3 | (JJ Merelo)++ | doc/Language/syntax.pod6

[15:27] <Geth> ¬¶ doc: Adds example of multi-line comments closes #1944

[15:27] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/21e290b5c3

[15:27] <synopsebot> Link: https://doc.perl6.org/language/syntax

[15:28] <AlexDaniel> Zoffix: by regularly cloned version of github-hoster repos you mean perl6-all-modules? That thing includes CPAN also!

[15:28] <AlexDaniel> d*

[15:30] <TEttinger> also hilariously I just realized the start of the convo regarding poor names was about a project named "zef"

[15:30] *** brrt left
[15:30] <AlexDaniel> TEttinger: what convo?

[15:31] <AlexDaniel> ah, here

[15:31] <TEttinger> zef wasn't even remarked as bad

[15:31] <TEttinger> but how would I even know what it is from that name...

[15:31] <Zoffix> .oO( pointless arguments )

[15:31] *** Zoffix left
[15:31] <AlexDaniel> btw whateverables are called like this for a similar reason

[15:32] <TEttinger> the able thing is good

[15:32] <AlexDaniel> there was a discussion a few years ago and someone suggested that bots be named as *able depending on their function

[15:32] <TEttinger> I like that better than the IWhatever convention in C#/.NET, or the complete chaos of the JVM

[15:33] <AlexDaniel> I loved the idea very much, and it's definitely good looking now at 17 existing bots in the suite :)

[15:34] *** Spot_ joined
[15:35] *** robertle left
[15:39] *** pmurias joined
[15:40] <El_Che> rakudo i386 fails 2 tests :(

[15:41] <pmurias> TEttinger: meaningless names obviously suck but for a things like webframeworks they sort of make sense because there isn't a obvious way to call them

[15:42] <timotimo> how come we notice that an hour after the release? :\

[15:44] <AlexDaniel> El_Che: ok, which tests?

[15:45] <lizmat> [17:39:19]  <El_Che>	t/hll/06-sprintf.t ..................... Failed 2/286 subtests

[15:45] <lizmat> [17:39:33]  <El_Che>	Failed tests:  111-112

[15:45] <AlexDaniel> timotimo: not enough people testing on different platforms, especially those that are used less frequently

[15:45] <AlexDaniel> e.g. I wouldn't be surprised if somebody came and said that something doesn't work on arm or whatever

[15:46] <AlexDaniel> i386 is a bit more unfortunate though

[15:46] <timotimo> these tests are already automated, though

[15:48] <AlexDaniel> yeah but to notice that people creating packages should test non-release versions, I can't blame them for not doing that

[15:49] <buggable> New CPAN upload: IO-Glob-0.4.tar.gz by HANENKAMP https://cpan.metacpan.org/authors/id/H/HA/HANENKAMP/Perl6/IO-Glob-0.4.tar.gz

[15:50] *** zakharyas left
[15:53] <Geth> ¬¶ doc: c5191f6e29 | (Timo Paulssen)++ | doc/Type/Promise.pod6

[15:53] <Geth> ¬¶ doc: Add factory methods "kept" and "broken" to Promise

[15:53] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/c5191f6e29

[15:53] <synopsebot> Link: https://doc.perl6.org/type/Promise

[15:58] <jmerelo> timotimo: there is a release? I was afraid to ask releasable6 again...

[15:58] <timotimo> like an hour ago

[15:58] <lizmat> jmerelo: yeah, there's a release  :-)

[15:59] <lizmat> and some post release merges already  :-)

[15:59] <buggable> New CPAN upload: Template-Anti-0.4.3.tar.gz by HANENKAMP https://cpan.metacpan.org/authors/id/H/HA/HANENKAMP/Perl6/Template-Anti-0.4.3.tar.gz

[16:01] *** releasable6 joined
[16:01] *** evalable6 joined
[16:02] *** iviv_ joined
[16:04] <jmerelo> lizmat: The rakudo star not yet, right? perl6.org banner still flaunts 2018.01

[16:04] *** jcallen_ joined
[16:05] <lizmat> jmerelo: just the compiler release at this time

[16:05] *** ilmari_ joined
[16:05] *** comborico1611 joined
[16:06] *** jferrero_ joined
[16:06] <jmerelo> Hum. Who has @perl6 in Twitter?

[16:07] <comborico1611> El_Che: You around?  Looking for that link to new Rakudo README.  I'm on a different computer, and Github is not showing my comment I left.  So I can't find it.

[16:08] *** statisfiable6 joined
[16:08] <jmerelo> Well, humility is a great virtue. But really, I can't find an announcement of the new Rakudo version in Twitter. However, Perl Group is announcing Open House tonight! In Brooklyn!

[16:09] *** aeruder_ joined
[16:09] *** Circlepuller joined
[16:09] *** reu_ joined
[16:09] *** daxim_ joined
[16:10] *** reu left
[16:10] *** ilmari left
[16:10] *** daxim left
[16:11] *** ilmari_ is now known as ilmari

[16:11] *** Circlepuller is now known as TeamBlast

[16:11] *** iviv_ is now known as iviv

[16:11] *** ilmari left
[16:11] *** ilmari joined
[16:11] *** brrt joined
[16:11] *** mephinet joined
[16:11] <AlexDaniel> jmerelo: from what I can see there will be a point release also :)

[16:12] *** tadzik joined
[16:12] *** raydiak joined
[16:12] *** statisfiable6 left
[16:12] *** releasable6 left
[16:12] *** squashable6 left
[16:13] <comborico1611> El_Che: Nevermind.  Found it

[16:13] *** irco left
[16:14] *** a3r0 left
[16:15] <jmerelo> AlexDaniel: but something should be said about the new version. Somewhere. Really. 

[16:15] *** a3r0 joined
[16:16] <AlexDaniel> jmerelo: well, it does say here: https://www.nntp.perl.org/group/perl.perl6.compiler/

[16:16] <AlexDaniel> and you can subscribe to the mailing list: https://perl6.org/archive/lists/

[16:16] <AlexDaniel> (btw the mail is not rendered properly because that thing doesn't understand signed messages or something)

[16:17] <AlexDaniel> jmerelo: but generally we tend to have slighly louder announcements for rakudo Star, which is what we expect most users to use

[16:18] <jmerelo> AlexDaniel: OK, I'll put it in Twitter.

[16:18] <AlexDaniel> yea that's ok

[16:24] <jmerelo> Here you go https://twitter.com/jjmerelo/status/989177823737843718

[16:28] *** scimon left
[16:29] <buggable> New CPAN upload: Hash-Util-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/Hash-Util-0.0.1.tar.gz

[16:29] <buggable> New CPAN upload: Bailador-Plugin-NamedQueries-0.1001.tar.gz by MZIESCHA http://modules.perl6.org/dist/Bailador::Plugin::NamedQueries:cpan:MZIESCHA

[16:30] <lizmat> and another CPAN Butterfly Plan module hits the Net: Hash::Util

[16:31] <lizmat> giving you restricted hashes, either for the whole hash (a la Map), or for a set of keys, or just the values

[16:31] <jmerelo> lizmat++

[16:33] <jkramer> lizmat: Is there a list of butterfly plan modules that need to be implemented?

[16:34] <jkramer> I might like to give it a go as practice :)

[16:34] <lizmat> jkramer: well, there's the Most Wanted list

[16:34] <lizmat> but what I do is target modules that have a large number of reverse dependencies on metacpan.org

[16:35] <lizmat> I don't have a specific list

[16:35] <jkramer> Ah, good idea :)

[16:35] <lizmat> I also target what I think is doable within a few days

[16:36] <Geth> ¬¶ doc: 6db737d6ab | (JJ Merelo)++ | 2 files

[16:36] <Geth> ¬¶ doc: De-dups compunit and increment, refs #1912

[16:36] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/6db737d6ab

[16:36] <Geth> ¬¶ doc: 93ace4c770 | (JJ Merelo)++ | doc/Language/control.pod6

[16:36] <Geth> ¬¶ doc: deduped control ops refs #1912

[16:36] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/93ace4c770

[16:36] <synopsebot> Link: https://doc.perl6.org/language/control

[16:36] <jkramer> Already went through the most-wanted list and most of the wanted modules don't seem particularly useful/interesting to me 

[16:36] *** dakkar left
[16:37] <lizmat> also: a  module that takes adds some missing functionality to Perl 6 would also be appreciated

[16:37] <lizmat> which is one of the reasons I took on Hash::Util

[16:39] <buggable> New CPAN upload: Proc-Editor-0.0.2.tar.gz by JKRAMER http://modules.perl6.org/dist/Proc::Editor:cpan:JKRAMER

[16:40] * lizmat is looking forward to a long list of module updates in the P6W next week  :-)

[16:43] <jkramer> lizmat: Is that reverse dependency list somewhere on metacpan or did you make it yourself using the API or something?

[16:43] <lizmat> it's listed on a right hand side of a module, if there are any

[16:44] <lizmat> e.g. https://metacpan.org/pod/Hash::Util

[16:44] <lizmat> follow: Reverse dependencies

[16:44] <lizmat> you wind up at: https://metacpan.org/requires/module/Hash::Util?sort=[[2,1]]

[16:45] <jkramer> Oh so you're just going threw modules manually? I thought there was some auto-generated list sorted by reverse dependencies :)

[16:48] <lizmat> I asked the question on #metacpan, but apparently not so simple

[16:49] <lizmat> [10:40:53]  <mickey>	lizmat: this is a hard one :) even for a single distribution it involves 3 separate ES queries as we don't (atm) have an index of reverse dependencies to pre-process this data. having said that, you could query a map of *all* (latest) releases to their direct dependencies in a single ES query and build the rev-dep map in your script.

[16:49] <lizmat> [10:41:02]  <haarg>	curl 'https://fastapi.metacpan.org/v1/distribution/_search?sort=river.total:desc&size=20'

[16:49] <lizmat> [10:41:46]  <haarg>	or s/total/immediate/

[16:49] <buggable> New CPAN upload: P5caller-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5caller:cpan:ELIZABETH

[16:50] <lizmat> jkramer: if you would want to set your teeth in that, that would be brill  :-)

[16:50] *** domidumont joined
[16:53] <jkramer> lizmat: I might just do that :)

[16:59] <buggable> New CPAN upload: P5each-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5each:cpan:ELIZABETH

[16:59] <buggable> New CPAN upload: P5fc-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5fc:cpan:ELIZABETH

[17:01] *** robertle joined
[17:01] *** comborico1611 left
[17:10] *** telex left
[17:11] *** ilmari[m] joined
[17:11] *** Matthew[m] joined
[17:11] *** wictory[m] joined
[17:11] *** mack[m] joined
[17:11] *** CIAvash[m] joined
[17:11] *** AlexDaniel` joined
[17:11] *** unclechu joined
[17:11] *** mirlur[m] joined
[17:11] *** elcaro[m] joined
[17:11] *** Garland_g[m] joined
[17:11] *** mienaikage joined
[17:12] *** telex joined
[17:13] <ufobat_> jkramer, i think there is no sereal for perl6 :p if you wanna practis this :p

[17:17] <El_Che> jkramer: I would like to have App::Fatpacker

[17:19] <buggable> New CPAN upload: P5lc-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5lc:cpan:ELIZABETH

[17:19] <buggable> New CPAN upload: P5lcfirst-0.0.5.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5lcfirst:cpan:ELIZABETH

[17:19] <buggable> New CPAN upload: P5reverse-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5reverse:cpan:ELIZABETH

[17:19] <buggable> New CPAN upload: List-AllUtils-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/List::AllUtils:cpan:ELIZABETH

[17:19] <buggable> New CPAN upload: List-MoreUtils-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/List::MoreUtils:cpan:ELIZABETH

[17:19] <buggable> New CPAN upload: List-SomeUtils-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/List::SomeUtils:cpan:ELIZABETH

[17:21] *** andrzejku left
[17:22] <jkramer> lizmat: curl -sS 'https://fastapi.metacpan.org/v1/release/_search' -d '{ "aggs": { "dependency": { "terms": { "field": "dependency.module", "size": 0 } } }, "size": 0 }' | jq -r '.aggregations.dependency.buckets | map((.doc_count | tostring) + " " + .key) | join("\n")' 

[17:22] <jkramer> (Or just look at the result here: https://gist.github.com/jkramer/bca08ec7431b7a79ba3c2bc9b2563d4c)

[17:23] <jkramer> :)

[17:23] <lizmat> whee!

[17:23] <jkramer> It only coveres direct dependencies, but I guess it's good enough :)

[17:24] <lizmat> yeah, that's a great start  :-)

[17:25] <jkramer> That's enough for today, I'll go through the list tomorrow and see if there's something fun to implement for me :)

[17:25] <lizmat> jkramer++  :-)

[17:25] <jkramer> Have a nice evening everyone o/

[17:25] <lizmat> you too!

[17:29] <buggable> New CPAN upload: List-Util-0.0.6.tar.gz by ELIZABETH http://modules.perl6.org/dist/List::Util:cpan:ELIZABETH

[17:31] *** xinming_ joined
[17:35] *** xinming left
[17:36] *** brrt left
[17:39] <buggable> New CPAN upload: List-UtilsBy-0.0.2.tar.gz by ELIZABETH http://modules.perl6.org/dist/List::UtilsBy:cpan:ELIZABETH

[17:39] <buggable> New CPAN upload: Scalar-Util-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/Scalar::Util:cpan:ELIZABETH

[17:39] <buggable> New CPAN upload: Sub-Name-0.0.6.tar.gz by ELIZABETH http://modules.perl6.org/dist/Sub::Name:cpan:ELIZABETH

[17:39] <buggable> New CPAN upload: Sub-Util-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/Sub::Util:cpan:ELIZABETH

[17:42] *** espadrine_ joined
[17:48] *** coverable6 joined
[17:49] <buggable> New CPAN upload: Sys-Hostname-0.0.5.tar.gz by ELIZABETH http://modules.perl6.org/dist/Sys::Hostname:cpan:ELIZABETH

[18:04] <jmerelo> Wow, lizmat++ You're hyper-productive. 

[18:27] *** sauvin left
[18:31] *** khw joined
[18:33] <lizmat> jmerelo: no, not really, just fixing copy-pasto's basically :-(

[18:43] <ufobat_> how would a good seral implementation for perl6 look like? for me the benefit of sereal over json::xs (in perl5) is, that its faster 

[18:44] <lizmat> ufobat_: a Sereal implementation would be high on my list

[18:44] <lizmat> it would help getting Perl 6 adopted in some Perl 5 houses  :-)

[18:44] <ufobat_> the perl5 sereal impelmentation is partially in XS, right?

[18:45] <lizmat> afaik, completely in XS

[18:45] <timotimo> .o( i like messagepack )

[18:47] <ufobat_> would a perl6 implementation be written in nqp?

[18:47] <lizmat> I would go for a PP6 implementation first

[18:48] <ufobat_> if you considder starting, lizmat, i'd love to help and contribute!

[18:48] <lizmat> Sereal is deeply embedded in the P5 way of representing values (SV NV IV etc)

[18:48] <lizmat> and I'm not sure how that would work in a Perl 6 world  :-)

[18:48] <ufobat_> exactly1

[18:48] <lizmat> I guess now that we have things like IntStr it should be better possible

[18:49] <ufobat_> i'd love to have a rust implementation as well. but well...

[18:49] *** Kuraz joined
[18:49] <buggable> New CPAN upload: Sys-Hostname-0.0.6.tar.gz by ELIZABETH http://modules.perl6.org/dist/Sys::Hostname:cpan:ELIZABETH

[18:49] <buggable> New CPAN upload: Tie-Array-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/Tie::Array:cpan:ELIZABETH

[18:49] <buggable> New CPAN upload: Tie-Hash-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/Tie::Hash:cpan:ELIZABETH

[18:49] <buggable> New CPAN upload: Tie-StdArray-0.0.3.tar.gz by ELIZABETH http://modules.perl6.org/dist/Tie::StdArray:cpan:ELIZABETH

[18:49] <buggable> New CPAN upload: Tie-StdHash-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/Tie::StdHash:cpan:ELIZABETH

[18:49] <Kuraz> Hello

[18:50] <timotimo> greetings

[18:50] <lizmat> ufobat_: I guess way would be familiarize yourself with https://github.com/Sereal/Sereal/blob/master/sereal_spec.pod

[18:52] <ufobat_> jup, i've read throuh it 

[18:52] <Kuraz> The error is normal? "Variable `'@ARGV' is not declared"` when I'm running `.say for @ARGV;` :/

[18:53] <jmerelo> Kuraz: Yep. That would be perl5. @*ARGS in perl6

[18:53] <jmerelo> p6: .say for @*ARGS

[18:53] <camelia> rakudo-moar 93baa2901: ( no output )

[18:54] <Kuraz> Oh so much for me, thanks

[18:54] <jmerelo> (at least it does not say it's not declared) :-)

[18:54] <jmerelo> Kuraz: no problem. If you also ask the question in stackoverflow, much appreciated

[18:56] *** kt_ joined
[18:59] <jmerelo> lizmat: still. Lot of (great) work. 

[19:06] *** domidumont left
[19:11] *** jmerelo left
[19:13] *** squashable6 joined
[19:13] *** Kuraz left
[19:15] *** |Sno| left
[19:28] *** sno joined
[19:29] *** releasable6 joined
[19:41] <Geth> ¬¶ doc: ronaldxs assigned to moritz Issue Document S05 treatment of alternations as atoms for ratchet https://github.com/perl6/doc/issues/1962

[19:42] *** huggable left
[19:42] *** ZofBot left
[19:42] *** buggable left
[19:45] *** huggable joined
[19:45] *** ChanServ sets mode: +v huggable

[19:45] *** ZofBot joined
[19:45] *** ChanServ sets mode: +v ZofBot

[19:46] *** buggable joined
[19:46] *** ChanServ sets mode: +v buggable

[19:47] *** darutoko left
[19:51] *** pecastro left
[19:51] <timotimo> the docs should probably not say "creates a promise that runs the given code object"

[19:51] <timotimo> on the promise page

[19:56] <buggable> New CPAN upload: JSON-Pointer-1.0.tar.gz by JNTHN http://modules.perl6.org/dist/JSON::Pointer:cpan:JNTHN

[19:56] <buggable> New CPAN upload: P5fc-0.0.4.tar.gz by ELIZABETH http://modules.perl6.org/dist/P5fc:cpan:ELIZABETH

[19:57] *** comborico1611 joined
[19:57] <Geth> ¬¶ doc: ronaldxs unassigned from moritz Issue Document S05 treatment of alternations as atoms for ratchet https://github.com/perl6/doc/issues/1962

[20:00] *** pecastro joined
[20:00] *** mcmillhj left
[20:02] <Geth> ¬¶ doc: 5d4fa6f589 | (Moritz Lenz)++ | doc/Language/regexes.pod6

[20:02] <Geth> ¬¶ doc: Regexes: backtracking vs alternation

[20:02] <Geth> ¬¶ doc: 

[20:02] <Geth> ¬¶ doc: for #1962

[20:02] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/5d4fa6f589

[20:02] <synopsebot> Link: https://doc.perl6.org/language/regexes

[20:15] *** zachk joined
[20:16] *** zachk left
[20:16] *** zachk joined
[20:32] *** athenot left
[20:39] *** ilbelkyr joined
[20:45] *** mcmillhj joined
[20:45] *** robertle left
[20:46] <buggable> New CPAN upload: OpenAPI-Model-1.0.tar.gz by JNTHN https://cpan.metacpan.org/authors/id/J/JN/JNTHN/Perl6/OpenAPI-Model-1.0.tar.gz

[20:54] *** mcmillhj left
[21:04] *** skids left
[21:06] <buggable> New CPAN upload: OpenAPI-Schema-Validate-1.0.tar.gz by JNTHN https://cpan.metacpan.org/authors/id/J/JN/JNTHN/Perl6/OpenAPI-Schema-Validate-1.0.tar.gz

[21:18] *** pilne joined
[21:22] *** benchable6 joined
[21:26] <buggable> New CPAN upload: P5chdir-0.0.1.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5chdir-0.0.1.tar.gz

[21:27] <lizmat> specifically chdir() is different in P5 from Perl 6

[21:32] *** espadrine_ left
[21:36] <buggable> New CPAN upload: P5built-ins-0.0.8.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5built-ins-0.0.8.tar.gz

[22:06] <buggable> New CPAN upload: Cro-OpenAPI-RoutesFromDefinition-1.0.tar.gz by JNTHN https://cpan.metacpan.org/authors/id/J/JN/JNTHN/Perl6/Cro-OpenAPI-RoutesFromDefinition-1.0.tar.gz

[22:13] *** giraffe left
[22:18] *** |oLa| left
[22:19] *** |oLa| joined
[22:21] *** Geth left
[22:21] *** Geth joined
[22:21] *** ChanServ sets mode: +v Geth

[22:22] *** Geth left
[22:22] *** Geth joined
[22:22] *** ChanServ sets mode: +v Geth

[22:28] *** giraffe joined
[22:37] *** dct joined
[22:54] *** pmurias left
[22:59] <Herby_> o/

[23:00] <timotimo> \o

[23:07] <comborico1611> Question: say "yup $/" if "A12B34D50" ~~ / (\D) {say ~$0} \d \d$/ # Wondering why parens needed for \D.

[23:08] <timotimo> if you don't capture with parenthesis, no $0 exists

[23:10] <comborico1611> Thanks!

[23:11] *** Zoffix joined
[23:12] <Zoffix> lizmat: FWIW we also have &*chdir that actually changes the working directory rather than changing $*CWD to a new value

[23:12] <Zoffix> (dunno which one is more appropriate for p5's chdirt)

[23:12] <Zoffix> s/.$//;

[23:12] <Zoffix> )

[23:14] <Zoffix> m: use NativeCall; sub system (Str) is native {}; system 'pwd'; chdir '/tmp'; system 'pwd'; &*chdir('/tmp'); system 'pwd';

[23:14] <camelia> rakudo-moar 6c1983a97: OUTPUT: ¬´/home/camelia‚ê§/home/camelia‚ê§/tmp‚ê§¬ª

[23:27] <kt_> in testing async sockets the client is getting this error "Unhandled exception in code scheduled on thread 7, No such method 'throw' for invocant of type 'Str'", then the server stops acceptig connections. How can I trap more details on the error? 

[23:30] *** zachk left
[23:31] <Zoffix> kt_: don't know if it'd help, but you could add --ll-exception flag to perl6 executable.    perl6 --ll-exception your-program.p6

[23:34] <kt_> Unhandled exception in code scheduled on thread 4 No such method 'throw' for invocant of type 'Str'   in method throw at SETTING::src/core/Exception.pm line 57   in block  at SETTING::src/core/Supply.pm line 90   in method run-catch at SETTING::src/core/Supply.pm line 1890   in any  at /opt/rakudo-star-2018.01/share/perl6/runtime/CORE.setting.moarvm line 1   in method throw at SETTING::src/core/Exception.pm line 54   in block  at SETTING

[23:38] <kt_> last two lines are   in method run-one at SETTING::src/core/ThreadPoolScheduler.pm line 230   in block  at SETTING::src/core/ThreadPoolScheduler.pm line 293

[23:39] *** skids joined
[23:43] *** markong left
[23:43] <Zoffix> kt_: what perl6 version are you on?    perl6 -v

[23:43] <Zoffix> Also, are you able to share the code that throws that error?

[23:46] <kt_> perl6 -v This is Rakudo Star version 2018.01 built on MoarVM version 2018.01 implementing Perl 6.c.

[23:47] <kt_> yes, I can share the code, where would be a good place?

[23:47] <Zoffix> kt_: https://gist.github.com/ is good

[23:47] <Zoffix> or anywhere really

[23:48] <kt_> it's the chatserver sample code and a client that open 100's of concurrent connections

[23:48] *** |oLa| left
[23:52] *** mcmillhj joined
[23:54] *** Luna521 joined
[23:56] <kt_> here is the gist: https://gist.github.com/ktown007/2af8aa40fa9b0867d6065fc6fbc7337a

[23:56] * Zoffix looks

[23:57] <kt_> If I start the client side two or three times it will eventually die. 

