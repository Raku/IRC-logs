[00:02] <MasterDuke> heh. i bet this is the culprit https://github.com/rakudo/rakudo/blob/master/src/core/Int.pm#L422-L424

[00:08] *** comborico1611 left
[00:28] <japhb> RT#128655

[00:28] <synopsebot> RT#128655 [open]: https://rt.perl.org/Ticket/Display.html?id=128655 [OPTIMIZER] Mixup in candidates through optimizer

[00:30] *** MasterDuke left
[00:30] <japhb> Seems like that one's do for a re-look.

[00:30] *** aindilis` joined
[00:30] <japhb> With jnthn++ working on optimization, I wonder if that's LHF for him now ...

[00:30] *** cdg joined
[00:34] *** aindilis left
[00:35] *** cdg left
[00:42] *** charsbar left
[00:43] *** charsbar joined
[00:48] *** charsbar left
[00:48] *** charsbar joined
[01:10] *** Rawriful left
[01:14] *** xenotrope left
[01:16] *** xenotrope joined
[01:20] *** aindilis` left
[01:24] *** lookatme joined
[01:25] *** MasterDuke joined
[01:26] *** DrForr left
[01:27] *** DrForr joined
[01:31] *** wamba joined
[01:32] *** aindilis joined
[01:33] *** wamba left
[01:53] *** char_var[buffer] left
[01:57] <Geth> ¬¶ doc/edits: 5758cc236a | (Antonio Quinonez)++ | doc/Language/operators.pod6

[01:57] <Geth> ¬¶ doc/edits: Adjust some grammar

[01:57] <Geth> ¬¶ doc/edits: review: https://github.com/perl6/doc/commit/5758cc236a

[02:07] *** cheese__ joined
[02:09] *** cheese__ left
[02:14] *** travis-ci joined
[02:14] <travis-ci> Doc build passed. Antonio Quinonez 'Adjust some grammar'

[02:14] <travis-ci> https://travis-ci.org/perl6/doc/builds/346107439 https://github.com/perl6/doc/commit/5758cc236a92

[02:14] *** travis-ci left
[02:22] *** cdg joined
[02:26] *** cdg left
[02:33] *** pierre joined
[02:45] *** ilbot3 left
[02:47] *** wamba joined
[02:56] *** pochi left
[02:58] *** ilbot3 joined
[02:58] *** ChanServ sets mode: +v ilbot3

[02:59] *** pochi joined
[03:06] *** kurahaupo left
[03:06] *** kurahaupo joined
[03:10] *** aindilis left
[03:16] *** martinp2 joined
[03:22] *** martinp2 left
[03:29] *** shinobi-cl joined
[03:29] *** martinp2 joined
[03:32] *** dct_ joined
[03:34] *** Zoffix joined
[03:34] *** Zoffix left
[03:40] *** cdg joined
[03:42] *** webstrand left
[03:46] *** webstrand joined
[03:46] *** webstrand left
[03:47] *** webstrand joined
[03:48] *** webstrand left
[03:48] *** cdg left
[03:48] *** webstrand joined
[03:49] *** cdg joined
[03:49] *** webstrand left
[03:50] <shinobi-cl> Hi all...

[03:51] <shinobi-cl> m: class C { has $!empty = "-"; multi sub trait_mod:<is>(Variable:D, :$default!) { $!empty = $default; } has @.data; method new(@data) { self.bless(data=>@data); } }; my $c is default ('N/A') = C.new([1,Nil,3,4]); say $c.perl;

[03:51] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable $!empty used where no 'self' is available‚ê§at <tmp>:1‚ê§------> 3d:<is>(Variable:D, :$default!) { $!empty7‚èè5 = $default; } has @.data; method new(@d‚ê§¬ª

[03:51] <shinobi-cl> m: class C { has $empty = "-"; has @.data; method new(@data) { self.bless(data=>@data); } }; my $c is default ('N/A') = C.new([1,Nil,3,4]); say $c.perl;

[03:51] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Signatures as constraints on variables not yet implemented. Sorry.‚ê§at <tmp>:1‚ê§------> 3a=>@data); } }; my $c is default ('N/A')7‚èè5 = C.new([1,Nil,3,4]); say $c.perl;‚ê§¬ª

[03:52] <shinobi-cl> i understand that the error says that is not implemented. i just wonder if that would be the right way to call is default when creating an object.....

[03:53] *** cdg left
[03:56] *** martinp2 left
[04:01] *** webstrand joined
[04:02] *** webstrand left
[04:06] *** webstrand joined
[04:08] *** webstrand left
[04:09] *** webstrand joined
[04:09] *** webstrand left
[04:11] <shinobi-cl> the idea is to be able to pass a default value for empty elements to my class without using a parameter to the constructor but instead using the trait syntax... does that makes sense? 

[04:11] *** webstrand joined
[04:11] *** webstrand left
[04:12] *** webstrand joined
[04:14] *** char_var[buffer] joined
[04:15] *** Zoffix joined
[04:16] <Zoffix> shinobi-cl: the error is just because you've used too many spaces

[04:16] <Zoffix> m: class C { has $empty = "-"; has @.data; method new(@data) { self.bless(data=>@data); } }; my $c is default('N/A') = C.new([1,Nil,3,4]); say $c.perl;

[04:16] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´C.new(data => [1, Any, 3, 4])‚ê§¬ª

[04:16] <Zoffix> m: class C { has $empty = "-"; has @.data; method new(@data) { self.bless(data=>@data); } }; my $c is default('N/A') = C.new([1,Nil,3,4]); say $c.perl; $c = Nil; say $c.perl

[04:16] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´C.new(data => [1, Any, 3, 4])‚ê§"N/A"‚ê§¬ª

[04:17] <Zoffix> shinobi-cl: you want the `is default` that's applied on $c to function as the default for empty cells? So it comes out as `[1, 'N/A', 3, 4]`? I don't think that'll work, as it's constructed before it ever gets to the variable.

[04:20] <Zoffix> shinobi-cl: and another mistake you're making is `[1,Nil,3,4]`. That never arrives as a `Nil` to your class, but as an `Any`

[04:21] <Zoffix> It's using the `is default` of the Array and the default default is Any

[04:21] <Zoffix> m: dd [1,Nil,3,4]

[04:21] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´[1, Any, 3, 4]‚ê§¬ª

[04:21] <Zoffix> m: dd (1,Nil,3,4)

[04:21] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´(1, Nil, 3, 4)‚ê§¬ª

[04:21] *** xi- left
[04:24] *** xi- joined
[04:24] <Zoffix> shinobi-cl: what I said on reddit is for you to return Lists with Nils in them so that the receiver of data would be able to use is default on their arrays

[04:25] <shinobi-cl> basically. im tryin to use "is default" to populate a private variable that will be used to fill 'empty' cells. Those empty cells dont come from the original data, but instead from the construction process inside my class. 

[04:26] <shinobi-cl> Yes, i changed all the Anys to Nils by your suggestion :)

[04:28] <shinobi-cl> crudely, the idea is something like this: m: class C { my $empty = "-"; multi sub trait_mod:<is>(:$default!) { $empty = $default; }; has @.data; method new(@d) { my @r; for @d {push @r, ($_ % 2 == 0)??$_!!$empty}; self.bless(data=>@r)} }; my $c  = C.new([1,2 ,3,4]); say $c.perl; my $c2 is default('N/A') = C.new([1,2 ,3,4]); say $c2.perl;

[04:28] <shinobi-cl> m: class C { my $empty = "-"; multi sub trait_mod:<is>(:$default!) { $empty = $default; }; has @.data; method new(@d) { my @r; for @d {push @r, ($_ % 2 == 0)??$_!!$empty}; self.bless(data=>@r)} }; my $c  = C.new([1,2 ,3,4]); say $c.perl; my $c2 is default('N/A') = C.new([1,2 ,3,4]); say $c2.perl;

[04:28] <camelia> rakudo-moar : OUTPUT: ¬´Cannot allocate memory¬ª

[04:28] <shinobi-cl> oops

[04:28] <Zoffix> Right, the information from `is default` on $c is not available inside your constructor. It doesn't even know whether you're going to store it into a variable

[04:28] <Zoffix> (without hacks)

[04:30] <shinobi-cl> oh, i see. well,, just wanted to see it that was possible :) I added more functinality based on your suggestions, btw. https://github.com/shinobi/Data-StaticTable/wiki/Data::StaticTable#method-new   Thanks again for the feedback

[04:35] <Zoffix> m: class C { has $.empty = "-"; has @.data; method new(@data, \SELF) { SELF = self.bless: :@data, :empty(SELF.VAR.default); } }; C.new: [1,Nil,3,4], my $c is default('N/A'); say $c.perl

[04:35] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´C.new(empty => "N/A", data => [1, Any, 3, 4])‚ê§¬ª

[04:35] <Zoffix> that works, but is a really weird interface :)

[04:41] <shinobi-cl> so this would work for any trait then :) ?   what's so special about "trait_mod" ?

[04:42] *** AlexDaniel joined
[04:43] <Zoffix> trait_mod is just a category of subs that let you add new candidates to traits

[04:44] <shinobi-cl> and then what's the use of them if you can't modify internal variables in your own class? how would i then implement my own traits?

[04:45] <Zoffix> You can, you just never called your traits

[04:46] <Zoffix> m: class C { my $empty = "-"; multi sub trait_mod:<is>(Variable:D, :$default!) is export { $empty = $default; nextsame }; has @.data; method new(@d) { my @r; for @d {push @r, ($_ % 2 == 0)??$_!!$empty}; self.bless(data=>@r)} }; import C; my $c is default('N/A') = C.new([1,2 ,3,4]); say $c.perl

[04:46] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´C.new(data => ["-", 2, "-", 4])‚ê§¬ª

[04:47] <Zoffix> Don't use that though. It'd affect `$empty` for all instances of your class and it'd affect them any time someone uses `is default`, even for purposes other than instantiating your class

[04:48] <Zoffix> Just take a named param to the constructor.

[04:50] <shinobi-cl> i see. thanks Zoffix++

[04:54] *** Cabanossi left
[04:55] *** Cabanossi joined
[04:56] *** jeromelanteri joined
[05:02] *** wamba left
[05:02] *** pierre left
[05:07] *** pierre joined
[05:12] *** pierre left
[05:13] *** dct_ left
[05:13] *** dct_ joined
[05:17] *** eliasr left
[05:18] *** kurahaupo_ joined
[05:19] *** skids left
[05:21] *** kurahaupo_ left
[05:21] *** kurahaupo_ joined
[05:21] *** kurahaupo left
[05:26] *** xinming left
[05:28] *** xinming joined
[05:33] *** lookatme left
[05:34] *** lookatme joined
[05:38] *** dct_ left
[05:42] *** dct_ joined
[05:43] *** pierre joined
[05:46] *** khw left
[06:03] *** wamba joined
[06:05] *** troys left
[06:09] *** wamba left
[06:12] *** wamba joined
[06:13] *** reportable6 left
[06:13] *** reportable6 joined
[06:13] *** ChanServ sets mode: +v reportable6

[06:14] *** ufobat joined
[06:16] *** reportable6 left
[06:16] *** reportable6 joined
[06:21] *** xenotrope left
[06:22] *** dct_ left
[06:22] *** dct_ joined
[06:23] *** xenotrope joined
[06:31] *** eroux left
[06:40] *** wamba left
[06:41] *** reportable6 left
[06:41] *** reportable6 joined
[06:41] *** jast left
[06:53] *** wamba joined
[06:55] *** Zoffix left
[07:04] *** wamba left
[07:14] *** robertle left
[07:15] *** dct_ left
[07:23] *** wamba joined
[07:28] *** someuser joined
[07:31] *** espadrine left
[07:43] <Geth> ¬¶ whateverable: 1c8633d6e7 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 5 files

[07:43] <Geth> ¬¶ whateverable: Added a sneak peek for quotable

[07:43] <Geth> ¬¶ whateverable: 

[07:43] <Geth> ¬¶ whateverable: It will now print something like:

[07:43] <Geth> ¬¶ whateverable: ‚Äú12 messages (2010-01-27‚åÅ2016-01-21): https://‚Ä¶‚Äù

[07:43] <Geth> ¬¶ whateverable: 

[07:43] <Geth> ¬¶ whateverable: Also removed hardcoded ‚ÄòFound nothing!‚Äô message from perl6-grep (and

[07:43] <Geth> ¬¶ whateverable: added tests for both greppable and quotable that were using this sub).

[07:43] <Geth> ¬¶ whateverable: review: https://github.com/perl6/whateverable/commit/1c8633d6e7

[07:44] *** greppable6 left
[07:44] *** quotable6 left
[07:44] *** quotable6 joined
[07:44] *** greppable6 joined
[07:44] *** ChanServ sets mode: +v greppable6

[07:45] *** KDr2 joined
[07:47] *** wamba left
[07:54] *** wamba joined
[07:58] *** rindolf joined
[07:59] *** domidumont joined
[08:07] *** domidumont left
[08:08] *** domidumont joined
[08:15] <Geth> ¬¶ doc/master: 9 commits pushed by (Luca Ferrari)++

[08:15] <Geth> ¬¶ doc/master: f3c2bbd0b3 | Add anchro for $?NL in 'other compile time variables'.

[08:15] <Geth> ¬¶ doc/master: 49438e90cf | Placed the link to the newline pragma outside the table.

[08:15] <Geth> ¬¶ doc/master: c315b0c068 | Reword: signifies -> means.

[08:15] <Geth> ¬¶ doc/master: 6b9286ae1a | Reword "\n" -> vertical newline.

[08:15] <Geth> ¬¶ doc/master: 996d02bf8d | Reword $?ENC meaning.

[08:15] <Geth> ¬¶ doc/master: 271710274d | Move the 'other compile time variables' section to the right position.

[08:15] <Geth> ¬¶ doc/master: d79a5611d2 | Improve the &?ROUTINE section also with recursion example.

[08:15] <Geth> ¬¶ doc/master: 280d3532fd | Separate &?BLOCK and &?ROUTINE sections.

[08:15] <Geth> ¬¶ doc/master: 4276eb2fc5 | Introduction to compile time variables.

[08:15] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/55f79aba96fb...4276eb2fc571

[08:20] *** shinobi-cl left
[08:21] *** shinobi-cl joined
[08:21] *** robertle joined
[08:26] *** zakharyas joined
[08:29] *** zakharyas left
[08:30] *** zakharyas joined
[08:31] *** pierre left
[08:33] *** lookatme left
[08:33] *** lookatme joined
[08:38] *** pierre joined
[08:38] <Geth> ¬¶ doc: ae94bbea71 | (Luca Ferrari)++ | doc/Language/regexes.pod6

[08:38] <Geth> ¬¶ doc: Better explaination of a \n meaning in regular expression.

[08:38] <Geth> ¬¶ doc: 

[08:38] <Geth> ¬¶ doc: Partially due to the issue #1790.

[08:38] <Geth> ¬¶ doc: I guess the original author's intent was to specify that \r\n can be

[08:38] <synopsebot> Link: https://doc.perl6.org/language/regexes

[08:38] <Geth> ¬¶ doc: either mangled thru a regex or an IO operation.

[08:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/ae94bbea71

[08:42] *** pierre left
[08:43] *** pierre joined
[08:45] *** kurahaupo_ is now known as kurahaupo

[08:50] <timotimo> MasterDuke: there's an int,int --> int and an Int:D,Int:D --> Int:D candidate for &infix:<%>, though

[08:55] *** zakharyas left
[08:56] *** zakharyas joined
[09:03] *** shinobi-cl left
[09:06] *** kurahaupo_ joined
[09:06] *** pmurias joined
[09:09] *** kurahaupo left
[09:11] *** kurahaupo_ is now known as kurahaupo

[09:23] *** dakkar joined
[09:25] *** robo6 joined
[09:26] *** robo6 left
[09:28] *** pmurias left
[10:17] *** Blackraider joined
[10:21] *** Blackraider left
[10:21] *** SyrupThinker joined
[10:24] *** aindilis joined
[10:29] *** cdg joined
[10:31] *** lookatme left
[10:31] *** lookatme joined
[10:31] *** natrys joined
[10:33] *** cdg left
[10:52] *** jantore left
[10:53] *** jantore joined
[10:58] *** zakharyas left
[10:58] <Geth> ¬¶ doc: 912e133a3e | (Luca Ferrari)++ | doc/Type/Mu.pod6

[10:58] <Geth> ¬¶ doc: Split sub defined and method defined.

[10:58] <Geth> ¬¶ doc: 

[10:58] <Geth> ¬¶ doc: Fix issue #1800.

[10:58] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/912e133a3e

[10:58] <synopsebot> Link: https://doc.perl6.org/type/Mu

[10:59] *** agwind left
[11:14] *** aindilis left
[11:18] *** pierre left
[11:19] *** pierre joined
[11:19] *** lalitmee joined
[11:23] *** pierre left
[11:25] *** agwind joined
[11:26] *** zakharyas joined
[11:40] *** zakharyas left
[11:42] *** sena_kun joined
[12:01] *** pierre joined
[12:07] *** pierre left
[12:07] *** raschipi joined
[12:07] *** pierre joined
[12:08] *** aindilis joined
[12:12] *** pierre left
[12:33] <tyil> .tell zoffix Thanks for the headsup, I've pushed https://github.com/scriptkitties/perl6-app-assixt/pull/2

[12:33] <yoleaux> 25 Feb 2018 07:18Z <Zoffix> tyil: you have several bugs in your Appsixt module. Variables inside ¬´¬ª gets split on spaces within their values so, say, spaces in paths will break the path into separate args (`my $source = 'bar ber'.IO; dd ¬´foo {$source.IO.path}¬ª;`): https://gist.github.com/Whateverable/576bc17fe1eb2c081819a4e13e4a7f26

[12:33] <yoleaux> tyil: I'll pass your message to zoffix.

[12:36] <AlexDaniel> tyil: this doesn't make much sense tbh: say "tar czf \"$output\" {@tar-flags} .";

[12:36] <tyil> why?

[12:36] <AlexDaniel> because paths can contain double quotes :) I know it's just something to show to the user but‚Ä¶ eh‚Ä¶

[12:36] <tyil> paths can contain pretty much anything, so I have to pick something

[12:37] <AlexDaniel> iirc you only have to ‚Äúescape‚Äù single quotes when using single quotes

[12:37] <tyil> I don't want to waste too much effort on something that's just logging output, since it already makes the intent clear

[12:38] <tyil> yes, but what if the path contains a single quote then ;)

[12:39] <jkramer> AlexDaniel: If you escape single quotes you'll also need to escape the escape character ;)

[12:39] <AlexDaniel> jkramer: it's not escaping, it's ‚Äúescaping‚Äù :)

[12:39] <AlexDaniel> you can't escape *anything* in single quotes

[12:39] <jkramer> Although it's trivial and I'm sure there's a good shell-quote module :)

[12:40] <AlexDaniel> there's non IIRC

[12:40] <AlexDaniel> none*

[12:40] <tyil> it's in a say, so it's not like the shell is being called there

[12:40] <tyil> it still shows the intent, which is what I intended it to do

[12:42] <jkramer> Huh weird, I always you could escape single quotes with '\ in a '' in shells

[12:42] <jkramer> *thought

[12:43] <ilmari> you need to do '\''

[12:43] <AlexDaniel> tyil: that's k, but I think you can also call .perl on it

[12:43] <AlexDaniel> ilmari: or '"'"' if you want everyone to freak out

[12:44] <ilmari> AlexDaniel: yeah, that's prettier, but more confusing

[12:44] <tyil> hmm, doing a .perl could work

[12:44] <jkramer> tyil: I usually use <...> when dumping values for logs, it's visually pleasing and </> are unlikely to show up in most kinds of values :)

[12:45] <tyil> but < ... > doesn't show the value of vars in them, do they?

[12:45] *** dalek left
[12:46] <tyil> m: my $foo = "a"; dd < some $foo >

[12:46] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´("some", "\$foo")‚ê§¬ª

[12:46] <tyil> m: my $foo = "a"; dd << some $foo >>

[12:46] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´("some", "a")‚ê§¬ª

[12:46] <jkramer> tyil: No I mean in output, like say "foo=<this>, bar=<that>, ..."

[12:47] <masak> m: my $file = "name-with-a-quo'te"; say $file.subst(:g, /"'"/, "'\\''")

[12:47] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´name-with-a-quo'\''te‚ê§¬ª

[12:48] <tyil> masak: .perl seems simpler then :p

[12:48] <masak> doesn't target the shell-quoting problem though, does it?

[12:49] <masak> mostly I meant to show that a shell quoting library could very well start as that one-liner there ;)

[12:49] <tyil> ah

[12:49] <masak> s/target/address/ -- my English is rusty :P

[12:49] <tyil> I mean, it's still just output, not a shell command, so I don't really consider is a shell quoting problem

[12:49] <jkramer> masak: Needs more quotes though :)

[12:50] <jkramer> m: my $file = "name-with-a-quo'te"; say "'" ~ $file.subst(:g, /"'"/, "'\\''") ~ "'"

[12:50] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´'name-with-a-quo'\''te'‚ê§¬ª

[12:50] <masak> aye, that's better :)

[12:50] <masak> &safe-single-quote

[12:50] * masak .oO( ship it )

[12:51] * moritz dives into the wonderful world of Angular development

[12:51] <jkramer> m: my $file = "name-with-a-quo'te"; say $file.subst(:g, /"'"/, "'\\''").subst(:g, /^|$/, "'")

[12:51] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´'name-with-a-quo'\''te'‚ê§¬ª

[12:51] <tyil> having done angular for school, I must say I find it one of the least nice js frameworks in existence

[12:56] <jkramer> m: use MONKEY-TYPING; augment class Str { method quote { .subst(:g, /"'"/, "'\\''").subst(:g, /^|$/, "'") } }; "quo'te".quote.say

[12:56] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´No such method 'subst' for invocant of type 'Any'‚ê§  in method quote at <tmp> line 1‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:56] <jkramer> m: use MONKEY-TYPING; augment class Str { method quote { $.subst(:g, /"'"/, "'\\''").subst(:g, /^|$/, "'") } }; "quo'te".quote.say

[12:56] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´'quo'\''te'‚ê§¬ª

[12:57] *** Lynx_ left
[12:57] <moritz> it's also quite the mindset shift. "ng new foo; du -sch foo" comes back with nearly 600MB

[12:58] <jkramer> m: use MONKEY-TYPING; augment class Str { method quote { $.subst(:g, /"'"/, "'\\''").subst(:g, /^|$/, "'") } }; augment class Mu { method quote { $.Str.quote } }; IO::Path.new("foo/'bar").quote.say

[12:58] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´IO::Path is disallowed in restricted setting‚ê§  in sub restricted at src/RESTRICTED.setting line 1‚ê§  in method new at src/RESTRICTED.setting line 32‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[12:58] *** p6lert left
[12:59] *** Lynx_ joined
[12:59] <jkramer> m: use MONKEY-TYPING; augment class Str { method quote { $.subst(:g, /"'"/, "'\\''").subst(:g, /^|$/, "'") } }; augment class Mu { method quote { $.Str.quote } }; Hash.new(lol => 123, bar => 'baz').quote.say

[12:59] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´No such method 'quote' for invocant of type 'Hash'. Did you mean any of these?‚ê§    note‚ê§    quote‚ê§‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:00] *** pierre_ joined
[13:01] <jkramer> Are augmented methods not inherited?

[13:05] <lizmat> jkramer: they are, sort of

[13:05] <lizmat> you would need to actually also augment any child classes

[13:06] <lizmat> m: use MONKEY; augment class Cool { method foo { "foo" } }; say 42.foo

[13:06] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´No such method 'foo' for invocant of type 'Int'. Did you mean 'foo'?‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:07] <lizmat> m: use MONKEY; augment class Cool { method foo { "foo" } }; augment class Int {}; say 42.foo

[13:07] <camelia> rakudo-moar 7c1a6cac7: OUTPUT: ¬´foo‚ê§¬ª

[13:07] <Geth> ¬¶ doc: 15034eedf4 | (Will "Coke" Coleda)++ | doc/Type/IO/CatHandle.pod6

[13:07] <Geth> ¬¶ doc: fix typo

[13:07] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/15034eedf4

[13:07] <synopsebot> Link: https://doc.perl6.org/type/IO::CatHandle

[13:07] *** Lynx_ left
[13:07] <lizmat> jkramer: this is basically a result of child classes knowing about their parents, but parent classes not knowing about their children

[13:09] <jkramer> Ah

[13:09] *** Lynx_ joined
[13:09] <jkramer> Hmm, so I guess there's also not Mu.give-me-all-child-classes-so-i-can-augment-them-all

[13:10] *** zakharyas joined
[13:10] <[Coke]> can probably get a list of all classess in the current scope and work up.

[13:10] *** zakharyas1 joined
[13:11] <jkramer> Ah nevermind, I just wanted to play with the quote thing a bit :)

[13:14] *** zakharyas left
[13:20] <Geth> ¬¶ doc/master: 4 commits pushed by (Luca Ferrari)++

[13:20] <Geth> ¬¶ doc/master: ae9efa5670 | Document Range.clone-with-op.

[13:20] <Geth> ¬¶ doc/master: 0879253003 | Another example of Range.clone-with-op.

[13:20] <Geth> ¬¶ doc/master: f01928efbb | Little rewording of Range.clone-with-op.

[13:20] <Geth> ¬¶ doc/master: 8bc1a357b6 | Merge branch 'master' of github.com:perl6/doc

[13:20] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/15034eedf4b4...8bc1a357b616

[13:21] *** tt_ joined
[13:29] <masak> moritz: I see what they are aiming for with Angular. I think it's not a bad design per se, but I've yet to work on a big-enough project where investing in all that DI and infrastructure pays off.

[13:30] <masak> meanwhile, React has kind of convinced me that a few well-chosen primitives and some FP-think can get you very far.

[13:30] <masak> if I were to go for an opinionated framework, I'd probably try out Ember (which isn't a majority choice, but seems very well-thought-out)

[13:30] <masak> (end of unsolicited opinion)

[13:31] <masak> moritz: what are you building? :)

[13:33] <moritz> masak: so far I'm just trying to learn it :) Then I'll be building a web frontend for our CMDB

[13:33] <moritz> which already exists as a hybrid between angularjs 1.* and angular 4

[13:35] <masak> moritz: I've been doing some Angular consulting lately. but I find that to a large extent it consists of teaching JavaScript and TypeScript. ;)

[13:41] *** aindilis left
[13:41] <moritz> masak: I hope I'll be learning that along the way too :-)

[13:43] <masak> TypeScript is perhaps the nicest aspect of the new Angular ;)

[13:46] *** wamba left
[13:50] *** notable6 left
[13:50] *** notable6 joined
[13:51] *** wamba joined
[13:53] *** xinming left
[13:53] *** mcmillhj joined
[13:54] *** cdg joined
[13:56] *** cdg left
[13:56] *** cdg joined
[13:58] *** lalitmee left
[14:08] *** scimon joined
[14:15] *** someuser left
[14:20] *** vcv joined
[14:21] *** athenot joined
[14:22] *** wamba left
[14:25] *** pierre_ left
[14:30] *** pierre_ joined
[14:38] *** raschipi left
[14:41] *** natrys left
[14:43] *** cdg left
[14:45] *** pierre_ left
[14:45] *** zakharyas1 left
[14:46] *** jeromelanteri left
[14:47] *** zakharyas joined
[14:50] *** comborico1611 joined
[14:54] <Geth> ¬¶ doc: antquinonez++ created pull request #1801: Adjust grammar.

[14:54] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/pull/1801

[14:55] <Geth> ¬¶ doc: 24a20d44f2 | (Antonio Quinonez)++ (committed by Moritz Lenz) | doc/Language/operators.pod6

[14:55] <Geth> ¬¶ doc: Adjust grammar.

[14:55] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/24a20d44f2

[14:55] <synopsebot> Link: https://doc.perl6.org/language/operators

[14:59] <AlexDaniel> I think https://github.com/perl6/doc/pull/1801 needs a review from a native English sprecher :)

[14:59] <AlexDaniel> ah, it was merged already

[14:59] <AlexDaniel> okay

[14:59] *** skids joined
[15:00] <moritz> I checked a few samples, and found the changes to be improvements

[15:05] *** wamba joined
[15:10] *** natrys joined
[15:11] *** wamba left
[15:13] *** khw joined
[15:15] *** pierre_ joined
[15:19] *** pierre_ left
[15:35] *** wamba joined
[15:36] *** troys joined
[15:43] *** MilkmanDan left
[15:44] *** MilkmanDan joined
[15:46] *** zakharyas left
[15:47] *** zakharyas joined
[15:48] *** wamba left
[15:54] *** konsolebox joined
[15:56] *** cdg joined
[15:56] *** wamba joined
[15:57] *** cdg left
[15:58] *** facetious left
[15:58] *** domidumont left
[15:59] *** pierre_ joined
[15:59] *** cdg joined
[16:00] *** cdg_ joined
[16:01] *** wamba left
[16:01] *** khisanth_ left
[16:03] *** pierre_ left
[16:04] *** cdg left
[16:06] *** _fran_ joined
[16:08] *** zakharyas left
[16:14] *** khisanth_ joined
[16:18] <_fran_> I built rakudo-star-2018.01 with gcc on debian on termux on android 6.0.1. Invocation of perl6 or perl6-m in interactive repl-mode gives "Bus Error", but only after modules are built. Rakudo binary from debian is working. I suspect Linenoise to be responsible. Is it autoloaded and how to prevent that?

[16:25] <jkramer> Bus error sounds familiar :)

[16:25] <jkramer> https://github.com/rakudo/rakudo/issues/1554

[16:32] *** mcmillhj left
[16:33] *** mcmillhj joined
[16:34] *** pierre_ joined
[16:37] *** SyrupThinker left
[16:39] *** pierre_ left
[16:41] <stmuk> _fran_: http://bet.github.io/perl6-android-gnuroot.txt may help

[16:42] *** kaare_ joined
[16:42] <stmuk> note I havn't yet tried it yet but I met someone in a restaurant who said his friend built ok on android :)

[16:48] *** aindilis joined
[16:49] *** vike left
[16:51] *** vike joined
[16:55] <Geth> ¬¶ doc: d311d565ab | (Luca Ferrari)++ | doc/Type/Mu.pod6

[16:55] <Geth> ¬¶ doc: Change 'defined' to 'declared' when documenting method signatures.

[16:55] <Geth> ¬¶ doc: 

[16:55] <Geth> ¬¶ doc: Applies to Mu.defined.

[16:55] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/d311d565ab

[16:55] <synopsebot> Link: https://doc.perl6.org/type/Mu

[16:55] <Geth> ¬¶ doc: 97e2a9fe92 | (Luca Ferrari)++ | doc/Type/Mu.pod6

[16:55] <Geth> ¬¶ doc: Move routine 'defined' after documentation of method Mu.defined.

[16:55] <Geth> ¬¶ doc: 

[16:56] <Geth> ¬¶ doc: Could be a fix to issue #1800 ?

[16:56] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/97e2a9fe92

[16:57] <Geth> ¬¶ doc: 1bf8646a4d | (Luca Ferrari)++ | doc/Type/Mu.pod6

[16:57] <Geth> ¬¶ doc: Reword 'Defined as' to 'Declared as' in Mu.Capture.

[16:57] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/1bf8646a4d

[16:58] *** mcmillhj left
[17:00] *** zakharyas joined
[17:02] *** mcmillhj joined
[17:02] *** cdg joined
[17:05] *** cdg left
[17:06] *** cdg joined
[17:06] *** cdg_ left
[17:07] *** mcmillhj left
[17:07] *** eliasr joined
[17:08] *** kurahaupo left
[17:11] *** wamba joined
[17:20] *** cdg_ joined
[17:21] *** mcmillhj joined
[17:22] *** raschipi joined
[17:24] *** cdg left
[17:30] *** dakkar left
[17:32] *** scimon left
[17:34] *** comborico1611 left
[17:36] *** raschipi left
[17:38] *** raschipi joined
[17:39] *** sftp left
[17:42] *** kybr left
[17:47] *** sftp joined
[17:49] *** synopsebot left
[17:53] *** sergot left
[17:53] *** SourceBaby left
[17:53] *** psch left
[17:53] *** Geth left
[17:54] *** Util left
[17:54] *** dalek joined
[17:54] *** ChanServ sets mode: +v dalek

[17:54] *** synopsebot joined
[17:54] *** Geth joined
[17:54] *** ChanServ sets mode: +v synopsebot

[17:54] *** ChanServ sets mode: +v Geth

[17:54] *** SourceBaby joined
[17:54] *** ChanServ sets mode: +v SourceBaby

[17:56] *** SyrupThinker joined
[17:58] *** cdg_ left
[17:58] *** pm5 left
[18:01] *** ab5tract_ left
[18:03] *** domidumont joined
[18:05] *** robertle left
[18:05] *** cdg joined
[18:20] *** cdg left
[18:26] *** _fran_ left
[18:32] *** Manifest0 left
[18:37] *** pierre_ joined
[18:38] *** AlexDaniel left
[18:38] *** Manifest0 joined
[18:39] *** domidumont left
[18:41] *** xinming joined
[18:41] *** pierre_ left
[18:43] *** xenotrope left
[18:44] *** xenotrope joined
[18:57] *** zakharyas left
[19:04] *** Util joined
[19:14] *** comborico1611 joined
[19:33] *** cdg joined
[19:33] *** robertle joined
[19:37] *** cdg left
[19:38] *** domidumont joined
[19:42] *** Kaypie left
[19:45] *** Kaiepi joined
[19:49] *** espadrine joined
[19:53] *** sena_kun left
[19:56] *** sena_kun joined
[19:57] *** domidumont left
[20:05] *** sergot joined
[20:11] *** mcmillhj left
[20:11] *** mcmillhj joined
[20:12] *** natrys left
[20:21] *** raschipi left
[20:26] *** kurahaupo joined
[20:30] *** rindolf left
[20:34] *** pierre_ joined
[20:39] *** pierre_ left
[20:44] <buggable> New CPAN upload: App-Assixt-0.1.4.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/App-Assixt-0.1.4.tar.gz

[20:44] *** |oLa| joined
[20:44] *** novichok joined
[20:46] *** konsolebox left
[20:53] *** konsolebox joined
[20:54] *** freeberz joined
[20:55] *** cdg joined
[20:59] *** cdg left
[21:01] <hahainternet> in a code golf stack overflow post from last week, there's a snippet of code: `.rotate(set(0,+?.[0],-?.[4]).pick)` what's going on with `+?.[0]`

[21:02] <lizmat> m: say +"42"

[21:02] <camelia> rakudo-moar 838782b7d: OUTPUT: ¬´42‚ê§¬ª

[21:02] <lizmat> m: say +?"42"

[21:02] <camelia> rakudo-moar 838782b7d: OUTPUT: ¬´1‚ê§¬ª

[21:02] <lizmat> I think it's just that: making sure you get a 0 or 1 ?

[21:03] <hahainternet> hmm, i'd like to find it in the docs if you know where lizmat 

[21:04] <hahainternet> ah, symbolic unary precedence section

[21:04] <hahainternet> cheers :)

[21:05] <lizmat> hahainternet++

[21:06] *** geospeck joined
[21:06] *** wamba left
[21:06] *** geospeck left
[21:08] *** SyrupThinker left
[21:10] *** |oLa| left
[21:11] *** SyrupThinker joined
[21:14] *** Rawriful joined
[21:19] *** cdg joined
[21:20] *** SyrupThinker left
[21:21] *** Manifest0 left
[21:26] *** SyrupThinker joined
[21:36] *** Kaiepi left
[21:37] *** Kaypie joined
[21:46] *** Kaypie left
[21:48] *** notable6 left
[21:48] *** notable6 joined
[21:48] *** ChanServ sets mode: +v notable6

[21:48] *** Kaiepi joined
[21:50] <lizmat> And another Perl 6 Weekly hits the Net: https://p6weekly.wordpress.com/2018/02/26/2018-09-say-cheese-d/

[22:00] *** someuser joined
[22:00] *** someuser left
[22:03] *** SyrupThinker left
[22:06] <MasterDuke> timotimo: not sure what you mean. i made all variables ints and the int,int candidate wasn't being called

[22:07] *** jast joined
[22:07] *** mcmillhj left
[22:07] <MasterDuke> and the reason i believe is that +< and +&, which were used in all the expressions that also had a %, don't currently have a int,int candidates

[22:08] *** vcv left
[22:10] <MasterDuke> however, what's even odder, is that i uncommented the int,int candidates for +< and +& and the profile is still showing the Int,Int versions of everything

[22:11] *** cdg left
[22:11] *** cdg joined
[22:12] *** skids left
[22:30] *** comborico1611 left
[22:34] *** pierre_ joined
[22:35] *** thundergnat joined
[22:36] *** AlexDaniel joined
[22:36] <thundergnat> \o perl6

[22:38] <thundergnat> I have a perl 6 script for a Rosettacode task that reliably works under 2017.11 and earlier but reliably fails under 2017.12 and later.

[22:38] <thundergnat> I've spent the last few days feebly trying to figure out what has changed to cause the failure but am not having much luck. 

[22:39] *** pierre_ left
[22:39] *** sena_kun left
[22:39] <thundergnat> The weird thing is it doesn't fail right away, it succeeds for about 200 iterations and _then_ fails.

[22:40] <thundergnat> (It is downloading revisions for the various rosettacode tasks to find the first revision.)

[22:41] <thundergnat> Anyway if anyone wants to take a look and see if they may have any suggestions, I would be grateful.

[22:41] <thundergnat> Gist of the failing script: (cut down a bit) https://gist.github.com/thundergnat/d7059671ff35fbf3aee851ffe0b24639

[22:42] <thundergnat> I'm not online very much but I read the logs pretty regularly.

[22:43] <El_Che> thundergnat: there is a bot that to .tell $nick that can remember the answer until you come back

[22:43] <thundergnat> El_Che Yeah, I know... but thanks.

[22:45] <El_Che> thundergnat: I am pretty sure someone will know more, as there is only a difference of 2 releases

[22:45] <El_Che> thundergnat: alternatively, you could raise an issue as it may be a regression

[22:45] <thundergnat> The script doesn't seem to fail due to the version of HTTP::UserAgent or JSON::Fast loaded. (I tried rolling each back separately) Only the compiler version seems to affect it. 

[22:46] <El_Che> https://github.com/rakudo/rakudo/issues

[22:46] <thundergnat> El_Che Yeah, it seems to be a regression, but there is a distinct possibility I am doing something stupid too.

[22:48] <El_Che> it would be strange that the stupid part wasn't that stupid 2 releases ago :)

[22:51] <AlexDaniel> hello

[22:51] <thundergnat> \o

[22:51] <AlexDaniel> let's bisect it maybe

[22:52] <AlexDaniel> it depends on HTTP::UserAgent which is not cool, but still can be done :)

[22:52] <AlexDaniel> let's see‚Ä¶

[22:53] <thundergnat> I tried various versions of HTTP::UserAgent and JSON::Fast and they don't seem to affect it. Only the compiler makes a difference.

[22:54] *** releasable6 left
[22:54] *** releasable6 joined
[22:54] *** ChanServ sets mode: +v releasable6

[22:57] <thundergnat> Though I should have mentioned... the failure shows up as a fault in HTTP::UserAgent - Too few positionals passed; expected 2 arguments but got 1 in method get-proxy (HTTP::UserAgent) line 384 

[22:58] <thundergnat> Thats with H::U ver 1.1.38. It gets the same fault (though with different line numbers ) with different versions of HTTP:UserAgent.

[22:59] <thundergnat> Changing the compiler to 2017.11, it works with both UA 1.1.38 and 1.1.37. (That's all I tested.)

[23:04] *** _fran_ joined
[23:08] <timotimo> thundergnat: if it only breaks after a certain number of iterations, try setting the MVM_SPESH_DISABLE in the environment and see if it keeps working

[23:09] <thundergnat> set MVM_SPESH_DIABLE=TRUE or some such?

[23:09] <thundergnat> ^S

[23:09] <AlexDaniel> c: 2017.11 https://gist.githubusercontent.com/AlexDaniel/c4952b367297bb0b2f615e0669c83170/raw/83b5837f6172e08372b0107f1cb1bdec2dfb1943/rc-authors.p6

[23:09] <committable6> AlexDaniel, Successfully fetched the code from the provided URL.

[23:09] <committable6> AlexDaniel, ¬¶2017.11: ¬´TERM environment variable not set.‚ê§The spawned command 'clear' exited unsuccessfully (exit code: 1)‚ê§  in block <unit> at /tmp/hfOZ70j3LF line 32‚ê§‚ê§ ¬´exit code = 1¬ª¬ª

[23:09] <AlexDaniel> errr?

[23:10] <thundergnat> You may need to remove / comment out line 20

[23:10] <AlexDaniel> c: HEAD https://gist.githubusercontent.com/AlexDaniel/c4952b367297bb0b2f615e0669c83170/raw/43b4379dd1e5767c059dea7cec8cc4c7a6c54203/rc-authors.p6

[23:10] <committable6> AlexDaniel, Successfully fetched the code from the provided URL.

[23:10] <committable6> AlexDaniel, ¬¶HEAD(838782b): ¬´TERM environment variable not set.‚ê§The spawned command 'clear' exited unsuccessfully (exit code: 1)‚ê§  in block <unit> at /tmp/TAi1LurDZN line 32‚ê§‚ê§ ¬´exit code = 1¬ª¬ª

[23:10] <timotimo> thundergnat: can be anything, except the empty string

[23:10] <timotimo> i usually set it to "yes"

[23:10] <AlexDaniel> c: 2017.11 https://gist.githubusercontent.com/AlexDaniel/c4952b367297bb0b2f615e0669c83170/raw/19ddd904bc1702311a2b15476fb10776152d8738/rc-authors.p6

[23:10] <committable6> AlexDaniel, Successfully fetched the code from the provided URL.

[23:11] <committable6> AlexDaniel, ¬¶2017.11: ¬´Retreiving task information...‚ê§1 Task:  File input/output‚ê§¬´timed out after 10 seconds¬ª ¬´exit signal = SIGHUP (1)¬ª¬ª

[23:11] <AlexDaniel> gah!

[23:11] <thundergnat> Unfortunately, it takes about 30 seconds to fault

[23:12] <_fran_> RAKUDO_LINE_EDITOR=none perl6 will start without Linenoise or Readline. Without that I get "Bus Error".

[23:13] *** _fran_ left
[23:14] <MasterDuke> timotimo: catch my comments earlier?

[23:15] <timotimo> yeah. don't know what's up with that :(

[23:16] *** novichok left
[23:16] *** freeberz left
[23:16] <MasterDuke> i even added prints in the native versions, they're definitely not getting hit

[23:16] <MasterDuke> which seems crazy

[23:17] <AlexDaniel> thundergnat: sorry, what's the output when it fails?

[23:17] <thundergnat> AlexDaniel: Setting MVM_SPESH_DISABLE true doesn't seem to change anything.

[23:18] <AlexDaniel> https://gist.github.com/Whateverable/f0acca29d3a3929c31755ad524806477 this?

[23:18] <thundergnat> AlexDaniel: yes

[23:20] <thundergnat> AlexDaniel: It varies failing on task 202 to 209, so it isn't a specific request that does it. 

[23:21] <timotimo> that is a big relief

[23:23] *** athenot left
[23:23] *** Actualeyes left
[23:25] *** comborico1611 joined
[23:28] *** robertle left
[23:29] *** g- left
[23:48] *** cdg left
[23:49] *** noganex left
[23:51] *** committable6 left
[23:51] *** committable6 joined
[23:51] *** ChanServ sets mode: +v committable6

[23:53] <AlexDaniel> Geth: ver https://github.com/rakudo/rakudo/commit/f78fd7c17

[23:53] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/perl6/nqp/compare/2017.11-20-g8dbaec7a4...2017.11-37-gf1b2692

[23:53] <AlexDaniel> Geth: ver https://github.com/perl6/nqp/commit/f1b269296c31f083b968f1a9d5575c11012303cb

[23:53] <Geth> AlexDaniel, version bump brought in these changes: https://github.com/MoarVM/MoarVM/compare/2017.11-20-gd23f5ca16...2017.11-27-gfac2999

[23:54] *** comborico1611 left
[23:56] <AlexDaniel> thundergnat: what about MVM_SPESH_INLINE_DISABLE=1

[23:56] <thundergnat> AlexDaniel: Let me give it a try.

[23:56] <AlexDaniel> oh, you already tried with MVM_SPESH_DIABLE ‚Ä¶ then it should be same

[23:57] <AlexDaniel> thundergnat: see, I bisected it: https://gist.github.com/Whateverable/5fb5b791011b1d4c80dfed05e797f959

[23:57] <AlexDaniel> that took a bit of human labour :)

[23:58] <AlexDaniel> thundergnat: so it's bad on f78fd7c17 but good on its parent

[23:58] <AlexDaniel> thundergnat: can you file a ticket please?

[23:58] <thundergnat> MVM_SPESH_INLINE_DISABLE=1 results in the same failure mode. (slower, but same failure)

[23:59] <AlexDaniel> weird

[23:59] <AlexDaniel> but okay

[23:59] <thundergnat> AlexDaniel: Sure. Thanks for looking into this for me.

