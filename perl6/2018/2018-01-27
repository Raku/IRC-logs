[00:05] <buggable> New CPAN upload: P5built-ins-0.0.2.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5built-ins-0.0.2.tar.gz

[00:05] *** rindolf left
[00:19] *** cdg joined
[00:19] *** cdg left
[00:21] *** astj joined
[00:22] *** cdg_ left
[00:23] *** patrickz left
[00:25] *** Geth left
[00:25] *** astj left
[00:26] *** Geth joined
[00:26] *** ChanServ sets mode: +v Geth

[00:41] *** mahafyi left
[00:42] *** shinobi-cl joined
[00:45] *** markong left
[00:55] *** japhb left
[01:01] *** japhb joined
[01:02] *** Guest18 joined
[01:07] *** mspo left
[01:07] *** mspo joined
[01:34] *** espadrine_ left
[01:37] *** wamba left
[01:45] *** Actualeyes left
[01:49] *** Actualeyes joined
[01:50] *** vike1 is now known as vike

[02:31] *** araraloren joined
[02:43] *** cdg joined
[02:46] *** ilbot3 left
[02:46] *** TeamBlast left
[02:48] *** cdg left
[02:57] *** ilbot3 joined
[02:57] *** ChanServ sets mode: +v ilbot3

[03:15] *** araraloren left
[03:19] *** cdg joined
[03:24] *** cdg left
[03:34] *** BuildTheRobots left
[03:35] *** Actualeyes left
[03:46] *** TeamBlast joined
[03:52] *** Actualeyes joined
[04:28] *** Cabanossi left
[04:29] *** Cabanoss- joined
[04:29] *** Cabanoss- is now known as Cabanossi

[04:38] *** khw left
[04:56] *** shinobi-cl left
[05:07] *** Guest18 left
[05:28] *** Guest18 joined
[05:48] *** ChoHag left
[05:50] *** cdg joined
[05:54] *** lisbeths is now known as johnnymacs

[05:55] *** cdg left
[06:00] *** troys left
[06:14] *** chakli_ left
[06:14] *** chakli left
[06:15] *** ckraniak joined
[06:59] <Geth> ¦ doc: 517c494bea | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/List.pod6

[06:59] <Geth> ¦ doc: Fix URL to sub

[06:59] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/517c494bea

[06:59] <synopsebot> Link: https://doc.perl6.org/type/List

[07:01] <Geth> ¦ doc: 028cc3eb92 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/List.pod6

[07:01] <Geth> ¦ doc: Fixup roundrobin docs

[07:01] <Geth> ¦ doc: 

[07:01] <Geth> ¦ doc: - It ain't a method, but a sub

[07:01] <Geth> ¦ doc:     Closes https://github.com/rakudo/rakudo/issues/1447

[07:01] <Geth> ¦ doc: - Tweak description: lists *can* be of equal length if the number of

[07:01] <Geth> ¦ doc:     items is the same

[07:01] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/028cc3eb92

[07:15] *** evalable6 left
[07:15] *** evalable6 joined
[07:29] *** Guest18 left
[07:39] *** parv joined
[07:52] *** cdg joined
[07:53] *** darutoko joined
[07:53] *** Ven`` joined
[07:57] *** Ven`` left
[07:58] *** cdg left
[08:01] <AlexDaniel> committable6: uptime

[08:01] <committable6> AlexDaniel, 15 hours, 53 minutes, and 11 seconds, 255.550781MiB maxrss. This is Rakudo version 2018.01-29-ga2499c90f built on MoarVM version 2018.01 implementing Perl 6.c.

[08:01] <AlexDaniel> timotimo: I think the memory leak is gone

[08:05] *** espadrine_ joined
[08:05] *** dj_goku left
[08:06] *** shinobi-cl joined
[08:37] *** |oLa| joined
[08:38] <Geth> ¦ whateverable: dbd6821bc9 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 5 files

[08:38] <Geth> ¦ whateverable: Adapt “Failed to resolve” tests to rakudo changes

[08:38] <Geth> ¦ whateverable: 

[08:38] <Geth> ¦ whateverable: The message is simply different now. It is clearly LTA so see this

[08:38] <Geth> ¦ whateverable: rakudo issue: https://github.com/rakudo/rakudo/issues/1449

[08:38] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/dbd6821bc9

[08:47] *** |oLa| left
[08:56] <shinobi-cl> Hi! I want to make a class X which purpose is to serve as a helper object to other class, lets call it A. But, i want to avoid having a public new method for this class X, so is not possible to create a X object directly. I still need, though, to create it from my class A.

[08:57] <shinobi-cl> this should be possible:    my A $a = A.new(); my X $x = $a.createX();

[08:58] <shinobi-cl> this should not: my X $x = X.new();

[09:00] <lizmat> shinobi-cl: class X { method new { die } }

[09:01] <shinobi-cl> lizmat: Then, how should i write this?      class A {  method createX() {   #---> how do i create my X here? without a X.new? <-----#   }  }

[09:03] <shinobi-cl> i know that the new() is only an arbitrary name, but the problem is how to make this new() (or whatever name it has) only callable from inside A. Or A's package.

[09:04] <shinobi-cl> Or make it only callable from A's source file.

[09:06] *** evalable6 left
[09:06] *** evalable6 joined
[09:06] *** ChanServ sets mode: +v evalable6

[09:07] *** shinobicl joined
[09:07] <shinobicl> or instead of callable, make new() fail or die if it is called from outside A. (this might be saner, since one kind of expects to have a new, making it fail with a "how to use this: " message)

[09:08] *** imcsk8 left
[09:08] *** imcsk8 joined
[09:10] *** Guest18 joined
[09:11] *** shinobi-cl left
[09:17] *** domidumont joined
[09:18] *** rindolf joined
[09:22] *** sjoshi joined
[09:23] <lizmat> https://docs.perl6.org/routine/bless  # shinobicl 

[09:24] *** domidumont left
[09:24] <shinobicl> mmmm, i see. Thanks lizmat++

[09:25] *** domidumont joined
[09:26] <gfldex> shinobicl: method lookup always happens at runtime. So hiding new doesnt get you much. The best way is to keep the helper class as a whole private.

[09:27] <Geth> ¦ whateverable: 2ae0d7012c | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Whateverable.pm6

[09:27] <Geth> ¦ whateverable: Preserve trailing newlines in some cases

[09:27] <Geth> ¦ whateverable: 

[09:27] <Geth> ¦ whateverable: So that evalable acts more like camelia

[09:27] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/2ae0d7012c

[09:28] <shinobicl> The helper class is actually an Index (likt the one you create on a database table). The table is an immutable object, however, for speedy search, you can create other indexes. So the indexes have to live outside the immutable table object, that's why i need to have the helper index type available outside.

[09:31] <shinobicl> my TableObj $t1 = TableObj.new(); # $t1 is immutable    my TableObj::Index $index = $t1.createIndex("field1"); #... You can use $index later for other stuff related to $t1

[09:32] *** Guest18 left
[09:32] <shinobicl> but having new "hidden" is not actually a requirement, i was just wondering if it was possible, for example, using introspection to know form which package i am actually calling TableObj::Index::new.  

[09:32] <shinobicl> know from*

[09:35] <Geth> ¦ whateverable: 63a813d448 | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/quotable.t

[09:35] <Geth> ¦ whateverable: Test for “OK, working on it” message

[09:35] <Geth> ¦ whateverable: 

[09:35] <Geth> ¦ whateverable: The change was done long time ago and the test file was bitrotted. Now

[09:35] <Geth> ¦ whateverable: these tests should pass.

[09:35] <Geth> ¦ whateverable: 

[09:35] <Geth> ¦ whateverable: Maybe this message should be sent privately, I'm not sure yet. See

[09:35] <Geth> ¦ whateverable: issue #190.

[09:35] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/63a813d448

[09:41] *** bart__ joined
[09:41] *** bart__ is now known as brrt

[09:44] *** wamba joined
[09:54] *** cdg joined
[09:59] *** cdg left
[10:04] *** konsolebox left
[10:05] *** committable6 left
[10:05] *** committable6 joined
[10:05] *** ChanServ sets mode: +v committable6

[10:06] *** konsolebox joined
[10:06] *** |oLa|1 joined
[10:13] *** nine joined
[10:13] *** brrt left
[10:14] *** camelia joined
[10:16] *** ChanServ sets mode: +v camelia

[10:26] *** jeromelanteri joined
[10:26] *** markong joined
[10:30] *** dogbert17 left
[10:31] *** dogbert17 joined
[10:48] *** eliasr joined
[10:55] *** cdg joined
[11:01] *** cdg left
[11:01] *** jeromelanteri left
[11:03] <Geth> ¦ whateverable: 367ce10b14 | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Whateverable.pm6

[11:03] <Geth> ¦ whateverable: Make $GIST-LIMIT ours

[11:03] <Geth> ¦ whateverable: 

[11:03] <Geth> ¦ whateverable: Just to be consistent with other things

[11:03] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/367ce10b14

[11:03] <Geth> ¦ whateverable: 6e23eeacbf | (Aleks-Daniel Jakimenko-Aleksejev)++ | lib/Whateverable.pm6

[11:03] <Geth> ¦ whateverable: Return instead of grumbling

[11:03] <Geth> ¦ whateverable: 

[11:03] <Geth> ¦ whateverable: Otherwise Quotable quits too early if one of the channels has no

[11:03] <Geth> ¦ whateverable: messages matching the regex.

[11:03] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/6e23eeacbf

[11:04] *** andrzejku joined
[11:15] *** andrzejku left
[11:20] *** rindolf left
[11:45] *** setty1 joined
[11:57] *** cdg joined
[12:01] *** cdg left
[12:02] *** espadrine_ left
[12:03] *** espadrine_ joined
[12:10] *** xi- left
[12:10] *** hankache joined
[12:10] *** xi- joined
[12:11] *** rindolf joined
[12:13] <hankache> hello #perl6

[12:22] *** aindilis` left
[12:24] <AlexDaniel> o/

[12:31] <DrForr> Afternoon.

[12:38] *** khisanth__ joined
[12:40] *** bisectable6 left
[12:41] *** bisectable6 joined
[12:41] *** ChanServ sets mode: +v bisectable6

[12:41] *** khisanth_ left
[12:46] *** sjoshi left
[12:50] *** BuildTheRobots joined
[12:57] *** cdg joined
[12:59] *** parv left
[13:02] *** cdg left
[13:16] *** shinobicl left
[13:26] *** shinobi-cl joined
[13:31] *** mr_ron left
[13:44] *** hankache left
[13:50] *** leah2 left
[13:50] *** Harzilein joined
[13:50] <Harzilein> hi

[13:50] *** Harzilein left
[13:53] <DrForr> Wow, that was quick.

[14:04] *** leah2 joined
[14:27] *** bisectable6 left
[14:27] *** bisectable6 joined
[14:42] *** bisectable6 left
[14:42] *** bisectable6 joined
[14:54] *** itaipu joined
[14:58] *** cdg joined
[15:05] *** ckraniak left
[15:09] <titsuki> Hi #perl6. I have a question.

[15:09] <titsuki> Is there any way to do the following with META6.json and zef automatically?:

[15:10] <titsuki> I want to install a patched version of term::termios when installing Terminal::Getpass.

[15:11] <AlexDaniel> titsuki: I don't think there's an easy built-in way for that, but any chance to get your changes upstream?

[15:12] <AlexDaniel> I see there's a pull request

[15:13] <AlexDaniel> .seen krunen

[15:13] <yoleaux> I saw krunen 9 Jan 2016 16:24Z in #perl6: <krunen> [Coke]: (re moving Rakudo release tags) I thought I only said it was talked about at some point, but confused discussion happened. Sorry.

[15:13] <titsuki> He seems busy and doesn't have time to review my PR.

[15:13] <AlexDaniel> I see…

[15:15] <AlexDaniel> titsuki: well, you can fork it…

[15:15] <AlexDaniel> at least temporarily

[15:15] <AlexDaniel> Terminal::Getpass::Termios maybe

[15:16] <titsuki> AlexDaniel: Thanks! I'll create that one.

[15:29] *** BuildTheRobots left
[15:30] *** john_parr left
[15:31] *** unicodable6 joined
[16:03] *** itaipu left
[16:04] *** john_parr joined
[16:08] *** khw joined
[16:10] *** itaipu joined
[16:11] *** john_parr left
[16:17] *** john_parr joined
[16:17] *** cdg left
[16:27] *** zakharyas joined
[16:27] *** zakharyas left
[16:28] *** zakharyas joined
[16:28] *** zakharyas left
[16:29] *** setty1 left
[16:34] *** espadrine_ left
[16:34] *** zakharyas joined
[16:38] *** Rawriful joined
[16:45] *** zakharyas left
[16:48] *** zakharyas joined
[16:49] *** natrys joined
[16:50] *** BuildTheRobots joined
[16:55] *** sivoais left
[17:02] *** softmoth joined
[17:02] <japhb> Isn't that what having auth be a part of the module full name is for?

[17:03] <japhb> So that you can refer to your own fork of the original repo, both at install and use time?

[17:05] <japhb> Well, *one* of the uses of it, at least

[17:05] <AlexDaniel> japhb: I guess you're right

[17:05] <AlexDaniel> titsuki ↑

[17:05] <AlexDaniel> although I don't know what's going to happen if you “zef install Some::Module”

[17:05] <AlexDaniel> will it ask you to choose a specific one?

[17:06] *** joy left
[17:11] *** colomon joined
[17:12] <titsuki> Is it a recommended way to use auth field?

[17:12] <titsuki> It seems that it will confuse users.

[17:16] <mst> titsuki: the whole point of the auth field is to be able to have your own version of something that doesn't interfere with the original version

[17:18] <titsuki> mst: Then if there are two "Some::Module", how does "zef install Some::Module" behave? 

[17:28] *** Guest18 joined
[17:30] <japhb> titsuki: You say 'zef install Some::Module:auth<foo>', IIRC

[17:32] <titsuki> japhb: So, zef always requires auth feald if there are two modules that have the same name?

[17:33] <titsuki> *field

[17:33] <japhb> titsuki: I haven't tried it recently myself.  ugexe would know.

[17:33] <japhb> But yeah, ISTR that.

[17:34] <titsuki> japhb: I see. Thanks!

[17:46] *** joy joined
[17:51] *** zakharyas left
[17:59] *** Guest18 left
[18:00] *** Guest18 joined
[18:25] <buggable> New CPAN upload: Term-termios-0.0.1.tar.gz by TITSUKI https://cpan.metacpan.org/authors/id/T/TI/TITSUKI/Perl6/Term-termios-0.0.1.tar.gz

[18:28] *** Kaiepi left
[18:32] *** softmoth left
[18:33] <Geth> ¦ whateverable: da0d62a309 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[18:33] <Geth> ¦ whateverable: Disable tests that are causing SEGVs

[18:33] <Geth> ¦ whateverable: 

[18:33] <Geth> ¦ whateverable: See issue #24 and rakudo/rakudo#1259

[18:33] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/da0d62a309

[18:33] <Geth> ¦ whateverable: 9c0364268d | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/evalable.t

[18:33] <Geth> ¦ whateverable: Fix test descriptions

[18:33] <synopsebot> RAKUDO#1259 [open]: https://github.com/rakudo/rakudo/issues/1259 [SEGV][regression] SEGV when running whateverable tests

[18:33] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/9c0364268d

[18:33] <Geth> ¦ whateverable: a06d59d35e | (Aleks-Daniel Jakimenko-Aleksejev)++ | 3 files

[18:33] <Geth> ¦ whateverable: Add trailing newlines to tests

[18:33] <Geth> ¦ whateverable: 

[18:33] <Geth> ¦ whateverable: Adapting tests to the new behavior, see this commit:

[18:33] <Geth> ¦ whateverable: 2ae0d7012caf0e57a548d6983adc05939ce651b9

[18:34] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/a06d59d35e

[18:35] <Geth> ¦ whateverable: 14d3fceff5 | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/bisectable.t

[18:35] <Geth> ¦ whateverable: Fix bisectable tests by increasing the timeouts

[18:35] <Geth> ¦ whateverable: 

[18:35] <Geth> ¦ whateverable: Because now the commits that it is hitting are in long-term storage

[18:35] <Geth> ¦ whateverable: mode, so it takes a bit more time to do everything.

[18:35] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/14d3fceff5

[18:37] *** cdg joined
[18:41] *** zakharyas joined
[18:45] <Geth> ¦ whateverable: 692ab52fb6 | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Reportable.p6

[18:45] <Geth> ¦ whateverable: Avoid parens

[18:45] <Geth> ¦ whateverable: 

[18:45] <Geth> ¦ whateverable: Just to be consistent with other code in that project.

[18:45] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/692ab52fb6

[18:45] <Geth> ¦ whateverable: 1c08f45f8b | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Reportable.p6

[18:45] <Geth> ¦ whateverable: Await for the snapshot

[18:45] <Geth> ¦ whateverable: 

[18:45] <Geth> ¦ whateverable: To be honest, I no longer remember why I did this change. According to

[18:46] <Geth> ¦ whateverable: the code it should work either way. There must be a good reason, but I

[18:46] <Geth> ¦ whateverable: can't remember it now.

[18:46] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/1c08f45f8b

[18:46] *** darutoko- joined
[18:49] *** darutoko left
[18:49] <AlexDaniel> I guess the lesson here is to commit your changes immediately :D

[18:50] <AlexDaniel> sometimes I like things to be battle-tested, but then I look like an idiot when I do that ↑

[18:52] <moritz> you can always commit on a branch that's not master

[18:52] <moritz> and if the battle-testing doesn't work out, go back to master

[18:54] *** darutoko- left
[18:56] <AlexDaniel> moritz: that sounds about right, but then this stuff is on the server…

[18:56] <AlexDaniel> and if I commit there, it'll work actually but not entirely right?

[18:56] <AlexDaniel> like no signing and everything

[18:57] <AlexDaniel> so I guess it'll be easier to commit locally, then just throw the files to the server…

[18:58] <AlexDaniel> OK let's admit it, looking like an idiot is an easier solution

[19:01] <Geth> ¦ whateverable: 397a2776a2 | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Reportable.p6

[19:01] <Geth> ¦ whateverable: Monkey patch the PATH env var to make things work

[19:01] <Geth> ¦ whateverable: 

[19:01] <Geth> ¦ whateverable: There's no perl6 in the PATH when these are running as a systemd

[19:01] <Geth> ¦ whateverable: service. There's probably a better way to do it, but right now this

[19:01] <Geth> ¦ whateverable: works. 🙈

[19:01] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/397a2776a2

[19:10] *** BuildTheRobots left
[19:22] *** domidumont left
[20:01] *** colomon_ joined
[20:03] *** colomon left
[20:03] *** colomon_ is now known as colomon

[20:06] <b2gills> m: class A { my class X {} }; X.new # shinobi-cl You can hide a class definition from being visible from the outside by using `my` instead of the default `our`

[20:06] <camelia> rakudo-moar a9a9e1c97: OUTPUT: «You cannot create an instance of this type (X)␤  in block <unit> at <tmp> line 1␤␤»

[20:07] <geekosaur> that's a bad example, you;re getting the X::... exceptions

[20:28] *** Kaiepi joined
[20:29] *** Guest18 left
[20:39] *** Kaiepi left
[20:39] *** cdg left
[21:00] *** cdg joined
[21:00] *** releasable6 left
[21:00] *** releasable6 joined
[21:05] *** cdg left
[21:08] <Geth> ¦ whateverable: ca05e7c185 | (Aleks-Daniel Jakimenko-Aleksejev)++ | services/whateverable@.service

[21:08] <Geth> ¦ whateverable: Precomp files don't need to be writable

[21:08] <Geth> ¦ whateverable: 

[21:08] <Geth> ¦ whateverable: As long as these are generated by something else. Or so it seems. The

[21:08] <Geth> ¦ whateverable: fact that files at these paths are used at all is LTA and this will be

[21:08] <Geth> ¦ whateverable: addressed later.

[21:08] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/ca05e7c185

[21:08] <Geth> ¦ whateverable: f7ed6883c0 | (Aleks-Daniel Jakimenko-Aleksejev)++ | 2 files

[21:09] <Geth> ¦ whateverable: Temporarily point to github blockers

[21:09] <Geth> ¦ whateverable: 

[21:09] <Geth> ¦ whateverable: Until zoffixznet/r6#11 is resolved, or something else comes up…

[21:09] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/f7ed6883c0

[21:13] *** nativecallable6 left
[21:13] *** nativecallable6 joined
[21:13] *** ChanServ sets mode: +v nativecallable6

[21:18] *** nativecallable6 left
[21:19] *** setty1 joined
[21:24] *** coverable6 left
[21:34] *** quotable6 left
[21:38] *** natrys left
[21:52] *** zakharyas left
[21:54] *** zakharyas joined
[22:01] *** cdg joined
[22:06] *** cdg left
[22:06] *** colomon left
[22:12] *** espadrine_ joined
[22:14] *** nativecallable6 joined
[22:19] *** coverable6 joined
[22:25] *** quotable6 joined
[22:25] *** ChanServ sets mode: +v quotable6

[22:26] <SmokeMachine> m: class C {has $.a; has $.b = .Str with $!a} # should this work?

[22:26] <camelia> rakudo-moar a9a9e1c97: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Variable $!a used where no 'self' is available␤at <tmp>:1␤------> 3lass C {has $.a; has $.b = .Str with $!a7⏏5} # should this work?␤»

[22:27] <SmokeMachine> m: class C {has $.a; has $.b = $!a.defined ?? $!a.Str !! Str}

[22:27] <camelia> rakudo-moar a9a9e1c97: ( no output )

[22:35] *** epony left
[22:35] *** epony joined
[22:40] *** Kaiepi joined
[22:49] *** zakharyas left
[22:53] <timotimo> m: class C {has $.a; has $.b = do .Str with $!a}

[22:53] <camelia> rakudo-moar a9a9e1c97: ( no output )

[22:53] <timotimo> SmokeMachine: does that do what you want?

[22:54] <SmokeMachine> timotimo: that makes sense!!! I was conditionally declaring the attr... thanks!

[22:54] *** Kyo9142 joined
[22:56] <gfldex> m: class C {has $.a; has $.b = { .Str with $!a }() }; dd C.new(:a<42>); 

[22:56] <camelia> rakudo-moar a9a9e1c97: OUTPUT: «C.new(a => IntStr.new(42, "42"), b => "42")␤»

[22:56] * gfldex .oO( In Perl 6 you can do without do … )

[22:57] *** Kyo9142 is now known as Kyo91`

[22:57] *** Kyo91` left
[22:57] *** Kyo91 joined
[22:58] <timotimo> m: class C {has $.a; has $.b = ( .Str with $!a ) }; dd C.new(:a<42>);

[22:58] <camelia> rakudo-moar a9a9e1c97: OUTPUT: «C.new(a => IntStr.new(42, "42"), b => "42")␤»

[22:58] <timotimo> you don't have to curl up and cry, either

[22:58] <timotimo> that pun didn't work at all :|

[22:58] <SmokeMachine> Sorry, but I was thinking...As in cat of the hat, thing 1 and thing 2 can be called thing b and thing a... that shows that the thing 1 isn’t more important than thing 2, as thing a isn’t more important than thing b... would it make sense if we did something similar to the Perl languages? Call Perl 5 and Perl 6 of Perl A and Perl B? Or something like that?

[22:59] <timotimo> but then who gets the A?

[22:59] <timotimo> i'd say we call them Perl E and Perl 6

[22:59] <timotimo> what's more important, the letter or the number? neither!

[22:59] <teatime> SmokeMachine: really you have the same problem with A and B as 1 and 2

[22:59] <timotimo> alternatively Perl 5 and Perl F, of course

[22:59] <teatime> you'd need like Perl Red and Perl Blue :)

[22:59] <teatime> timotimo's is fun too

[23:00] <teatime> when my MMO raiding guild got big enough to have two raid teams, I chose to named them Team 1 and Team A

[23:00] <SmokeMachine> teatime: is, but the more “important” on letters is less “important” on numbers, and vice-versa

[23:00] <teatime> nobody wants to be on the B-team

[23:01] <teatime> SmokeMachine: perhaps

[23:02] <SmokeMachine> The one on the b-team is also on the team #1...

[23:02] *** cdg joined
[23:03] <SmokeMachine> As who is on a-team is on team #2 too...

[23:03] <SmokeMachine> But I’m sorry... I was just thinking...

[23:04] <teatime> later, I quit the MMO guild because no one appreciates volunteer work.

[23:04] <teatime> perhaps there's a lesson in there.

[23:06] <SmokeMachine> I was thinking about it because I bought 2 T-shirt’s for my 2 dotters 1 of thong 1 and the other one of thing 2... so which one should I give to what dotter?

[23:06] *** cdg left
[23:10] *** sivoais joined
[23:16] <gfldex> how about Perl Win and Perl Awesome?

[23:16] * gfldex .oO( use Awesome.d; )

[23:18] <timotimo> i'd like to -1 on red and blue

[23:18] *** R0b0t1 left
[23:20] *** R0b0t1 joined
[23:20] <gfldex> indeed, wouldn't work for colour-blind folk :->

[23:20] *** softmoth joined
[23:20] <teatime> timotimo: it was definitely not a sincere suggestion.

[23:21] *** softmoth left
[23:24] *** setty1 left
[23:25] *** awaaa joined
[23:25] *** awaaa left
[23:25] *** rindolf left
[23:27] *** colomon joined
[23:34] <timotimo> while red vs blue got a few chuckles out of me back in the day, nowadays it has connotations that i'd like to keep as far away as possible

[23:43] <SmokeMachine> timotimo: do you mean Pokémon?

[23:44] *** softmoth joined
[23:45] *** softmoth left
[23:46] *** softmoth joined
[23:46] *** softmoth left
[23:47] *** softmoth joined
[23:48] *** softmoth left
[23:49] <timotimo> we can only do pokemon allegory if we also have a third one

[23:51] <TEttinger> Perl Pearl and Perl Diamond

[23:53] <timotimo> and pearl emerald will be ruby implemented on the nqp stack

[23:53] <timotimo> perl emerald*

[23:53] <timotimo> also, our new version of perlmonks will be called the perl mistery dungoen

[23:53] <timotimo> dungeon*

[23:53] <TEttinger> misery dungeon

[23:53] <timotimo> mystery*

[23:54] <TEttinger> perlemon, gotta grep em all

[23:54] <timotimo> m)

[23:55] <TEttinger> perl funk and perl jazz

[23:55] <timotimo> google search for "perler" ;)

[23:55] <timotimo> perl zig and perl zag

[23:55] <TEttinger> perler or pearling?

[23:56] <TEttinger> one of them is a rather painful wikipedia article

[23:56] <teatime> I am going to pretend they're both about knitting, and not look.

[23:56] <TEttinger> that's for the best

[23:56] <TEttinger> except that's purl

[23:57] <timotimo> teatime: "perler" is the art you make with these little plastic tubes that you stick on a board of little spikes and later melt together with an iron

[23:59] <TEttinger> pearling involves russian prisons and is in the body modification category on wikipedia

