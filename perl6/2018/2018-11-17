[00:04] *** vike1 left
[00:06] *** dalek left
[00:07] *** vike1 joined
[00:08] *** p6bannerbot sets mode: +v vike1

[00:10] *** pecastro left
[00:14] *** jeek joined
[00:15] *** p6bannerbot sets mode: +v jeek

[00:29] *** rindolf left
[00:30] *** cydf left
[00:30] *** w_richard_w joined
[00:30] *** p6bannerbot sets mode: +v w_richard_w

[00:38] *** w_richard_w left
[00:43] <SmokeMachine> timotimo: im sorry for boring you with it, but now Red (on a specific branch) creates CASE/WHEN selects :) https://www.irccloud.com/pastebin/I1tlJXWM/

[01:30] *** warriors joined
[01:30] *** p6bannerbot sets mode: +v warriors

[01:38] *** leont joined
[01:39] *** p6bannerbot sets mode: +v leont

[01:40] *** Kaiepi left
[01:45] <timotimo> bore? no way, that shit is cool :)

[01:45] <timotimo> i just don't have a good use case for it yet

[01:59] *** MasterDuke joined
[01:59] *** p6bannerbot sets mode: +v MasterDuke

[01:59] *** MasterDuke left
[01:59] *** MasterDuke joined
[01:59] *** herbert.freenode.net sets mode: +v MasterDuke

[01:59] *** p6bannerbot sets mode: +v MasterDuke

[02:18] *** ryn1x joined
[02:19] *** p6bannerbot sets mode: +v ryn1x

[02:26] <SmokeMachine> timotimo: https://github.com/FCO/Red/wiki/Case-When

[02:28] <timotimo> freaky.

[02:30] <timotimo> will there be a trait on classes (models, really) that makes every column "not null" unless specified individually? or will that all be with :D constraints on the attributes?

[02:31] <SmokeMachine> timotimo: you can use `:D` or `is column{ :!nullable }`

[02:31] <timotimo> mhm

[02:32] <SmokeMachine> timotimo: I'm  not sure, but I was thinking that `is required` should do it too...

[02:32] <timotimo> ah, yes

[02:34] <SmokeMachine> but it's not done yet...

[02:36] <timotimo> that's fine

[02:37] * SmokeMachine have to continue writing his advent calendar post...

[02:39] <timotimo> i have to come up with a topic

[02:39] <holyghost> .

[02:40] <mst> for a database system, if it doesn't default to not null, it's wrong.

[02:40] <timotimo> i do believe you can put "is required" on a class itself, too

[02:41] *** ryn1x left
[02:41] <mst> I said 'default' for a reason

[02:41] <timotimo> yes, indeed

[02:41] <timotimo> it's better than putting it on every column individually

[02:41] <timotimo> but default would indeed be better

[02:41] <mst> note also that doesn't mean that the object needs to be

[02:42] <mst> because having a partially constructed object, setting field values, then inserting it, can be useful

[02:42] <timotimo> that the object needs to be what?

[02:42] <timotimo> that's also true

[02:42] <mst> but the database tables -must- be not-null-unless-asked-for

[02:42] <mst> otherwise you're rapidly into InactiveRipcord territory

[02:42] <mst> (aka the rails "ORM")

[02:44] <warriors> mst finally converted to Perl6 :)

[02:44] <mst> nah

[02:45] <mst> I'm just here to reduce the odds of you re-making mistakes I/we did

[02:46] <mst> hence e.g. my advocating for the creation of TWEAK because it seemed wrong to me that there were things that were 5x as much typing in perl6 OO as Moo

[02:46] <warriors> :) thank you for help Perl6 being better 

[02:47] <mst> I'm still seriously considering writing hybrid apps

[02:48] <mst> but it's getting very hard to get support on the perl5 side for that due to lizmat's continued attacks on the perl5 community

[02:48] <warriors> liz is the best

[02:48] *** molaf left
[02:48] <warriors> continue liz  .. ATTTAAACK

[02:49] <warriors> :)

[02:49] <mst> giving a lightning talk called "perl5 is the new perl4", then publishing a perl.com article that says "perl5 should stop all feature development to port to moarvm" (which I reckon put back the chances of perl5 on MoarVM by five years, which I'm sad about)

[02:50] <mst> and her causing massive drama over the sister language narrative, when it's ten years old and acked by everybody and basically just makes her sound like the old perl5 assholes attacking perl6 except in reverse because now *she* can't accept a ten year old decision

[02:50] <mst> makes it hugely difficult for me to get perl5 people to agree with me that a perl5/perl6 hybrid approach is the right thing for the project

[02:51] <mst> I'm still trying to explore how I thread that needle community wise in spite of her overt and public hostility

[02:52] <mst> I mean, I still want to write perl5/perl6 hybrid apps because I love unix and perl5 lives in unix way more than perl6, but I also love perl6 grammars, is totally going to happen

[02:53] <mst> I just wish visible perl6 contributors would stop being a colossal asshole to perl5 in a way that makes it incredibly hard for me to get any perl5 people on board with the idea

[02:54] <mst> I love her dearly as a human being but she's seriously damaging a bunch of co-operative principles between the two communities I've spent ten years of my life fostering, and I'm frustrated

[02:55] <SmokeMachine> I forgot, how can I say that the default for the attributes is :D?

[02:56] <mst> lizmat: ^^ I've been trying to not be publically grumpy about this but since I just have been I'm pinging you so hopefully you first realise just how annoyed and am from me. Seems only fair.

[02:58] <mst> warriors: note https://twitter.com/shadowcat_mst/status/1059859981921607682 applies to me as well as everybody else

[03:00] *** w_richard_w joined
[03:01] *** molaf joined
[03:01] *** p6bannerbot sets mode: +v w_richard_w

[03:01] *** p6bannerbot sets mode: +v molaf

[03:02] *** w_richard_w left
[03:04] <SmokeMachine> now (using `use attributes :D`) it defaults to NOT NULL... https://www.irccloud.com/pastebin/ofzplAXR/

[03:04] <timotimo> SmokeMachine: can you do something about having only the columns "not null" and the attributes be undefined?

[03:04] <timotimo> so that you can build up objects before the constraint is enforced?

[03:05] <SmokeMachine> timotimo: not yet...

[03:05] <timotimo> use Red :nulldefault

[03:05] <timotimo> vs the default of just "use Red" which would make "not null" the default

[03:05] <SmokeMachine> timotimo: sorry, that's not true... `is column{ :!nullable }` do not implies anything to the object...

[03:06] <SmokeMachine> timotimo: that makes sense...

[03:06] <SmokeMachine> Ill do that tomorrow!

[03:06] <timotimo> cool :)

[03:06] <SmokeMachine> good night!

[03:06] <timotimo> mst is a good source of wisdom here

[03:07] <timotimo> having made an orm that i hear is kind of popular or something :P

[03:07] <mst> and also having a vast list of mistakes, mostly ones I made myself, to share and help other people avoid

[03:09] *** ryn1x joined
[03:10] *** p6bannerbot sets mode: +v ryn1x

[03:10] *** ufobat___ joined
[03:11] *** p6bannerbot sets mode: +v ufobat___

[03:14] *** ufobat_ left
[03:15] <SmokeMachine> mst: id love to have more of your help with Red!

[03:16] <mst> SmokeMachine: feel free to ask me questions, I'm happy to tell you what I did, what worked, what didn't, and why I hate the decisions that turned out to be a problem

[03:16] <mst> I'm currently working on a new perl5 SQL metaprogramming thing

[03:17] <SmokeMachine> Really?! Is it published anywhere?

[03:17] <timotimo> what will it do? what kind of meta does it provide?

[03:18] <SmokeMachine> mst: had you taken a look at Red?

[03:18] <mst> I haven't, yet, it depends on a refactored SQL::Abstract and I've been experimenting

[03:18] <mst> but

[03:19] <mst> it looks something like http://sherlock.scsys.co.uk/~matthewt/test3

[03:20] *** w_richard_w joined
[03:20] <mst> note that during the DBIC drama ribasushi attempted to blackmail shadowcat to get me to stop publically disagreeing with him technically, so I've been a little careful about releasing stuff until it's fully baked

[03:20] <timotimo> is a Dwarn kind of like a Dwarf?

[03:21] <SmokeMachine> mst: would you mind if I ask you what you think about Red? (http://github.com/FCO/Red) any critical problem you see?

[03:21] *** p6bannerbot sets mode: +v w_richard_w

[03:21] <mst> though also the new SQLA dataformat is likely portable (or ideas therefrom stealable which also rocks)

[03:21] <timotimo> sql alchemy?

[03:21] <mst> SQL::Abstract

[03:21] <timotimo> ah

[03:21] <mst> main perl5 SQL generation library

[03:22] <mst> SmokeMachine: ok, so, it's 03:21 here *but* if you catch me and remind me earlier in a day if I'm not in the middle of anything, sure, I'll happily tell you if I spot anything that I did that seemed like a mistake in hindsight and why :)

[03:22] <timotimo> how do you do "silly" joins like >= instead of =?

[03:23] <mst> in DBIC, you don't yet

[03:24] <SmokeMachine> mst: sure! Sorry! I’ll call you tomorrow! Thanks!

[03:24] <mst> in Quark, you do ->on('left.thing' => { '>=', 'right.thing' })

[03:24] <timotimo> is there an escape hatch?

[03:25] <timotimo> oh, huh, i'm using == in some places and = in others for the "on" clause in joins

[03:25] <timotimo> but it seems like both work the same way?

[03:26] <mst> no, => so if the RHS of a pair is a scalar, for a where clause it gets interpreted as '= ?' and for an on clause '= <ident>'

[03:27] <mst> I have some ideas about operator overloading and extending the grammar lexically but those are strictly optional so I'm trying to get the baseline to work first

[03:27] <timotimo> that's fair

[03:27] <timotimo> Red exports a whole bunch of operators, then runs the code you pass to the map method and it inspects what is done to the column objects

[03:28] <timotimo> but defining custom operators in perl6 is basically "extending the grammar lexically" :)

[03:28] <mst> well that's kinda what I can do with Babble - guess what I was inspired by :)

[03:29] <timotimo> looking at the name it's probably babel :)

[03:30] <mst> well, babel, but also perl6 in general

[03:30] <timotimo> will you also have a Sibble or a Tribble?

[03:30] <mst> like I'm aiming for babel *and* lexical grammer modifications

[03:31] <mst> a Tribble? it's 2018, Trump and Boris Johnson are enough tribbles for me

[03:31] <timotimo> i wouldn't call them tribbles. tribbles are adorable, fluffy, and the sounds they emit soothe the mind and soul

[03:36] *** ryn1x left
[04:23] *** animcogn16 joined
[04:24] *** p6bannerbot sets mode: +v animcogn16

[04:28] *** animcogn16 left
[04:29] *** holyghost left
[04:37] *** lizmat left
[05:18] *** Sgeo_ left
[05:18] *** Sgeo joined
[05:19] *** leont left
[05:19] *** p6bannerbot sets mode: +v Sgeo

[05:20] *** lizmat joined
[05:20] *** p6bannerbot sets mode: +v lizmat

[05:41] *** kerframil joined
[05:41] *** p6bannerbot sets mode: +v kerframil

[05:46] *** bdodd15 joined
[05:47] *** bdodd15 left
[06:32] *** robertle joined
[06:32] *** ChrisMorrisOrg15 joined
[06:32] *** p6bannerbot sets mode: +v robertle

[06:33] *** ChrisMorrisOrg15 left
[06:41] *** w_richard_w left
[06:41] *** sauvin joined
[06:41] *** p6bannerbot sets mode: +v sauvin

[06:45] *** Bucciarati left
[06:45] *** Bucciarati joined
[06:46] *** p6bannerbot sets mode: +v Bucciarati

[06:55] *** jmerelo joined
[06:56] *** p6bannerbot sets mode: +v jmerelo

[07:28] *** ufobat___ left
[07:30] *** Bucciarati left
[07:33] *** hami joined
[07:33] *** p6bannerbot sets mode: +v hami

[07:42] *** robertle left
[07:46] *** Bucciarati joined
[07:47] *** p6bannerbot sets mode: +v Bucciarati

[07:49] *** hami left
[07:52] *** thundergnat left
[08:05] *** andrzejku_ joined
[08:05] *** parv joined
[08:06] *** andrzejku left
[08:06] *** andrzejku_ is now known as andrzejku

[08:06] *** p6bannerbot sets mode: +v andrzejku

[08:06] *** p6bannerbot sets mode: +v parv

[08:24] <El_Che> your metaphore is broken, but I get the sentiment

[08:27] *** Marcool joined
[08:28] *** p6bannerbot sets mode: +v Marcool

[08:29] <Marcool> Hi all, I'm trying to install Cro::HTTP::Client on a mac os high sierra laptop, and getting a test failure: https://framabin.org/p/?20b9220c5e854640#V6xpiTG6/uGcPx3JvJthCKCbb8ojLXYiiYiT/3fqJOU=

[08:29] <yoleaux> 18 Jun 2018 13:23Z <MasterDuke> Marcool: if you edit the AUR package for MoarVM to add the `--debug=3` flag to Configure.pl, then perl6-gdb-m and perl6-valgrind-m will give you some useful info when trying to run your script

[08:30] <Marcool> It's OpenSSL that's failing, basically with this error as reported on the github issue tracker for that package: https://github.com/sergot/openssl/issues/63

[08:32] <Marcool> Any clues how to resolve this? Should I just force install without tests? Is this possibly a version mismatch issue between openssl? openssl version shows: "LibreSSL 2.6.4"

[08:39] *** haukex joined
[08:39] *** p6bannerbot sets mode: +v haukex

[08:44] *** haukex left
[08:47] *** ExtraCrispy joined
[08:47] *** p6bannerbot sets mode: +v ExtraCrispy

[08:55] *** L0j1k20 joined
[08:56] *** L0j1k20 left
[08:56] *** cydf joined
[08:56] *** p6bannerbot sets mode: +v cydf

[09:05] *** AlexDaniel left
[09:08] *** rindolf joined
[09:09] *** p6bannerbot sets mode: +v rindolf

[09:19] *** warriors left
[09:35] *** domidumont joined
[09:35] *** p6bannerbot sets mode: +v domidumont

[09:36] *** kerframil left
[09:50] *** thundergnat joined
[09:50] *** p6bannerbot sets mode: +v thundergnat

[09:56] *** Geth left
[09:57] *** delon left
[10:02] *** sena_kun joined
[10:02] *** p6bannerbot sets mode: +v sena_kun

[10:19] *** Marcool left
[10:40] *** kudzo_ left
[10:53] *** pmurias joined
[10:53] *** p6bannerbot sets mode: +v pmurias

[11:53] *** squashable6 left
[11:53] *** releasable6 left
[11:53] *** statisfiable6 left
[11:53] *** reportable6 left
[11:53] *** bisectable6 left
[11:53] *** unicodable6 left
[11:53] *** bloatable6 left
[11:53] *** undersightable6 left
[11:53] *** shareable6 left
[11:53] *** greppable6 left
[11:53] *** nativecallable6 left
[11:53] *** evalable6 left
[11:53] *** committable6 left
[11:53] *** notable6 left
[11:53] *** quotable6 left
[11:53] *** benchable6 left
[11:53] *** coverable6 left
[11:53] *** nativecallable6 joined
[11:53] *** ChanServ sets mode: +v nativecallable6

[11:53] *** quotable6 joined
[11:53] *** notable6 joined
[11:53] *** greppable6 joined
[11:53] *** ChanServ sets mode: +v notable6

[11:53] *** ChanServ sets mode: +v greppable6

[11:53] *** committable6 joined
[11:53] *** evalable6 joined
[11:53] *** coverable6 joined
[11:53] *** bloatable6 joined
[11:53] *** ChanServ sets mode: +v coverable6

[11:53] *** ChanServ sets mode: +v bloatable6

[11:53] *** bisectable6 joined
[11:53] *** benchable6 joined
[11:53] *** benchable6 left
[11:53] *** bisectable6 left
[11:53] *** committable6 left
[11:53] *** evalable6 left
[11:53] *** quotable6 left
[11:53] *** releasable6 joined
[11:53] *** reportable6 joined
[11:53] *** unicodable6 joined
[11:53] *** ChanServ sets mode: +v releasable6

[11:53] *** ChanServ sets mode: +v reportable6

[11:53] *** ChanServ sets mode: +v unicodable6

[11:53] *** releasable6 left
[11:53] *** reportable6 left
[11:53] *** unicodable6 left
[11:53] *** coverable6 left
[11:53] *** bloatable6 left
[11:53] *** notable6 left
[11:53] *** greppable6 left
[11:53] *** nativecallable6 left
[11:54] *** p6bannerbot left
[11:54] *** p6bannerbot joined
[11:54] *** ChanServ sets mode: +o p6bannerbot

[12:07] *** poohman joined
[12:07] *** p6bannerbot sets mode: +v poohman

[12:07] <poohman> m: say "Hello"

[12:07] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «Hello␤»

[12:08] <poohman> hello all,

[12:08] <poohman> is there a way to use nativecall for .net libraries?

[12:09] <poohman> trying to use Microsoft.Office.Interop.Excel 

[12:09] *** rurban joined
[12:09] <poohman> right now am writing the logic bits in perl6 and then using c# only for the excel interop

[12:10] *** rurban left
[12:10] <El_Che> poohman: I think NativeCall is a C interop

[12:10] <sena_kun> poohman, I doubt so. .net uses CLR and isn't tied to C libs. Or if it is, you may use those dlls.

[12:10] <El_Che> poohman: I think that even C++ does not work

[12:10] <poohman> i thought it had a dll 

[12:10] <poohman> let me check

[12:11] <poohman> oh ok

[12:16] *** pecastro joined
[12:16] *** p6bannerbot sets mode: +v pecastro

[12:29] *** pecastro left
[12:31] *** pecastro joined
[12:31] *** p6bannerbot sets mode: +v pecastro

[12:40] *** Kaiepi joined
[12:41] *** p6bannerbot sets mode: +v Kaiepi

[12:49] *** andrzejku_ joined
[12:49] *** p6bannerbot sets mode: +v andrzejku_

[12:51] *** andrzejku left
[12:51] *** andrzejku_ is now known as andrzejku

[12:59] *** lichtkind joined
[12:59] *** p6bannerbot sets mode: +v lichtkind

[13:23] *** dogbert2_ left
[13:25] *** leont joined
[13:25] *** p6bannerbot sets mode: +v leont

[13:37] <lichtkind> is there a way to check how many args an anon block expects?

[13:39] <sena_kun> m: my &a = { $^a + $^b }; say &a(2, 3); say &a.arity;

[13:39] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «5␤2␤»

[13:39] <sena_kun> lichtkind, ^

[13:52] <lichtkind> sena_kun, thank you vary much

[13:52] <lichtkind> very :)

[13:52] <sena_kun> you are welcome. :)

[13:55] <Summertime> bless test suites

[13:55] <SmokeMachine> mst: are you busy?

[13:55] <Summertime> not for the fact they test things, but the fact that they make amazing documentation replacements

[13:56] <Summertime> but I'm also seeing that the sub MAIN documentation is pretty bare compared to what it can do :<

[14:00] *** kurahaupo left
[14:00] *** kurahaupo joined
[14:01] *** p6bannerbot sets mode: +v kurahaupo

[14:16] *** parv left
[14:23] *** dogbert2_ joined
[14:24] *** p6bannerbot sets mode: +v dogbert2_

[14:43] *** koto joined
[14:44] *** p6bannerbot sets mode: +v koto

[14:45] *** sena_kun left
[14:54] *** uzl joined
[14:55] *** p6bannerbot sets mode: +v uzl

[14:56] <uzl> m: my @gifts = <book bicycle perl6>; (sub (@gifts) { .say for @gifts })(@gifts); (sub (*@gifts) { .say for @gifts })(@gifts)

[14:56] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «book␤bicycle␤perl6␤book␤bicycle␤perl6␤»

[14:58] <uzl> If all I'm passing is an array to do something with its items, what's the different between using '@array' and '*@array' in the sub signature?

[15:01] <koto> m: sub a(*@a) { say @a; }; say a(<1 2 3>); say a(<1 2 3>, <1 2 3>, 3, 12); sub b(@a) { say @a }; say b(<1 2 3>); say b(<1 2 3>, <1 2 3>);

[15:01] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «[1 2 3]␤Too many positionals passed; expected 1 argument but got 2␤  in sub b at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤True␤[1 2 3 1 2 3 3 12]␤True␤(1 2 3)␤True␤»

[15:01] <jnthn> @array will bind the original array, *@array will copy the elements into a new one

[15:07] <uzl> m: my @a = 1, 2; my @b = 1, 2; sub change-original(@a) { $_++ for @a }; sub change-copy(*@a) { $_++ for @a }; change-original(@a); change-copy(@b); say @a, @b;

[15:07] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «[2 3][1 2]␤»

[15:10] *** robertle joined
[15:11] *** p6bannerbot sets mode: +v robertle

[15:12] <uzl> Oh I see. But why isn't the 'is rw' trait necessary to make array container writable here? 

[15:13] *** leah2 left
[15:15] <lizmat> mst: re "giving a lightning talk called "perl5 is the new perl4", then publishing a perl.com article that says "perl5 should stop all feature development to port to moarvm" 

[15:15] <lizmat> you forgot to mention that there's about 6 years between those two events

[15:16] <lizmat> mst: re "I just wish visible perl6 contributors would stop being a colossal asshole to perl5"  Does that include my Perl 5 to Perl 6 articles on opensource.com ?

[15:18] <lizmat> also: asshole may be in the eye of the beholder

[15:19] <lizmat> now /me is grumpy

[15:19] *** lucasb joined
[15:19] *** p6bannerbot sets mode: +v lucasb

[15:20] *** marmor joined
[15:21] *** p6bannerbot sets mode: +v marmor

[15:28] *** leah2 joined
[15:29] *** p6bannerbot sets mode: +v leah2

[15:32] *** Sound joined
[15:32] *** p6bannerbot sets mode: +v Sound

[15:36] *** uzl left
[15:38] <pmurias> lizmat: re Perl 5 to Perl 6 articles it doesn't seem so to me

[15:41] *** rfold joined
[15:42] *** p6bannerbot sets mode: +v rfold

[15:46] <pmurias> lizmat: some of the othe

[15:46] <pmurias> sorry

[15:47] <lizmat> ?

[15:47] <pmurias> lizmat: accidently pressed enter before I decided what I want to write ;)

[15:47] <lizmat> no pb....  

[15:50] <pmurias> lizmat: for the more "controversial" blog post I feel some of them contained stuff that tangetially related to the main point but potentially offensive to some Perl 5 people if interpreted a particular way

[15:51] <pmurias> like "stopping new Perl 5 features" being connected to "porting Perl 5 to a cooler VM would be a good idea"

[15:52] <lizmat> well, the thing is that I'm not the only one who thinks that p5p is endangering the single remaining Unique Selling Point of Perl 5 (as implemented by p5p)

[15:52] <lizmat> backward compatibiity

[15:53] <lizmat> some of them are very vocal about it (such as Reini Urban)

[15:53] <lizmat> but i've heard this from people at non-perl open source conferences a *lot*

[15:53] <lizmat> and some of that on Perl conferences

[15:55] <lizmat> also: I've never said anything about stopping development on Perl modules

[15:55] <lizmat> (Perl 5)

[15:55] <xinming> What is the best way to "return" from the block?

[15:55] <yoleaux> 31 Oct 2018 01:25Z <MasterDuke> xinming: what code were you running to create the heap snapshot that caused the unbox error?

[15:55] <timotimo> xinming: replace it with an anonymous sub :)

[15:55] <timotimo> since "leave" is not yet implemented (or is it?)

[15:55] <lizmat> in fact, I recently voted in favour of a Perl 5 module grant for developing more async options in Perl 5

[15:56] <xinming> So, leave is not implemented?

[15:56] <xinming> Let me try

[15:56] <pmurias> lizmat: I fully agree that backward compatiblity is crucial for Perl 5 (I wasn't offended by the blog post myself)

[15:57] <xinming> 'leave is not implemented' sorry

[15:57] <xinming> Now, We can't do return, and have no leave..

[15:58] <xinming> I'll wrap a sub { }()   around the codes

[15:59] <xinming> It's amazing that perl6 supports something like   sub { ... }()   :-)

[15:59] <xinming> in js, it'll at least be (sub { })()    

[16:00] <pmurias> lizmat: I even feel that the people who are a lot of the time the most offended are more reacting to unintended similiarites to things they heard before like "migrate your Perl 5 code to Python" etc. then to the technical points

[16:02] <lizmat> In a way I'm flattered that there are people who think that I'm the reason for all the marketing problems of Perl 5

[16:03] <lizmat> and it's really ironic considering there aren't a lot of people who do booths at open source conferences to promote Perl 5 *and* 6

[16:03] <lizmat> and I have been one of those few people

[16:03] <pmurias> lizmat: I'm not sure if anybody thinks that tho ;)

[16:04] <lizmat> well, according to mst, I'm the reason people who are used to working with Perl 5 don't want to work with Perl 6

[16:05] <lizmat> it's also ironic that my mentioning "A should be done" puts back "A" by at least 5 years

[16:05] <lizmat> *doing A

[16:05] <pmurias> lizmat: not trying to attack/offend you just pointing what I think annoys some people

[16:05] <lizmat> yeah, you're right, I shouldn't be on IRC when grumpy

[16:07] <lizmat> :-)

[16:08] *** ryn1x joined
[16:09] *** p6bannerbot sets mode: +v ryn1x

[16:10] <mst> lizmat: it's not "ironic", it's an inevitable consequence of your ham fisted and hostile delivery of the idea.

[16:10] <mst> it's bloody unfortunate, certainly, but ironic it isn't.

[16:11] <mst> on the upside, given basically you're trashing in-community collaboration because you won't accept a decade old naming decision

[16:11] <mst> you really have turned perl6 into the new perl5, just in terms of dysfunction rather than technology

[16:13] *** kdr22 joined
[16:13] <mst> and, no, what you did was linked "A should be done" to *killing perl5* in the minds of all the perl5 people who *should* have been in favour of A, and quite possibly won't be now

[16:14] *** p6bannerbot sets mode: +v kdr22

[16:14] <mst> you're 100% not responsible for 'all the marketing problems of perl5' though, that's just silly and hyperbolic

[16:16] *** kdr21 left
[16:17] <mst> lizmat: I think exactly one person complained about the opensource.com articles to me, and I told them in no uncertain terms that if they didn't like that they should offer to write some perl5 focused articles and otherwise quit whining

[16:18] <lizmat> indeed...  they welcome *anybody* writing for them...  How do you think they've accepted me ?  :-)

[16:19] *** zakharyas joined
[16:20] *** p6bannerbot sets mode: +v zakharyas

[16:20] <pmurias> a perl 6 to perl 5 guide going the other direction could be potentially interesting ;)

[16:20] <mst> I could publish a blog post that just has <h1>Abandon Hope</h1> repeated 100 times? :)

[16:20] <lizmat> .oO( just read my articles backward :-)

[16:21] <mst> lizmat: not really, the perl5 in them is terrible :P

[16:21] <mst> I actually got asked by somebody if you were intentionally making the perl5 code ugly

[16:21] *** zakharyas left
[16:22] *** zakharyas joined
[16:22] <mst> note: I didn't mention this previous because for the articles' pedagogical goals it's more than close enough

[16:22] <lizmat> I tried to be as simple / non linenoisy as possible

[16:22] <lizmat> which BTW, also goes for the Perl 6 code

[16:23] <mst> I don't believe I'm qualified to have an opinion on the perl6 code

[16:23] *** p6bannerbot sets mode: +v zakharyas

[16:24] <lizmat> In any case, if someone has comments about my Perl 5 code, please post them as comments on the site

[16:24] <lizmat> I know some people have done that, and I have answered them

[16:24] <mst> honestly, by "terrible :P" I mean that you kept to the bare minimum of perl5 features etc. in a way that doesn't seem to me to be wrong given the purpose of the article

[16:25] <mst> but obviously wasn't how we'd teach idiomatic perl5

[16:26] <lizmat> TIMTOWTDI  :-)

[16:26] <mst> yeah, but yours is wrong :-)

[16:26] <lizmat> TINP  (This Is Not Python)

[16:27] <mst> seriously though I had a think about it, concluded for the purposes of the article it was fine, and convinced the person asking that that was the case, otherwise I'd've already /msg'ed you with suggestions

[16:28] <mst> what perl5 people are currently actually upset about in terms of articles is that perl.com has an article on "how to use CGI.pm" which in 2018 is just *augh*

[16:30] <mst> but given dnmfarrell (sp) supported Brian "nazis are left wing" Foy driving off /r/perl's one german moderator for banning an alt-right troll

[16:30] <mst> I somehow don't expect him to listen to reason about anything else

[16:32] <lizmat> well, it took me some convincing but dnmfarrell finally caved in and published the CGI article to get the heat off of me

[16:32] <mst> hahahahahahaha

[16:32] *** aindilis left
[16:33] <mst> honestly though my thoughts on the CGI.pm article is "clearly I need to make people submit better things"

[16:41] *** marmor left
[16:44] *** AlexDaniel joined
[16:44] *** p6bannerbot sets mode: +v AlexDaniel

[16:45] *** aindilis joined
[16:46] *** p6bannerbot sets mode: +v aindilis

[16:49] <bonsaikitten> ooh, I missed some 'false left-right dichotomy' drama

[16:52] <mst> I'm mostly just impressed at the balls to brain cells ratio required to lecture a german about the nazis

[16:53] <AlexDaniel> mst: hmmm bots seem to be banned?

[16:54] <huf> remember kids, when the state does stuff, that's socialism. and the more stuff the state does, the more socialist it is.

[16:55] <mst> AlexDaniel: eh?

[16:55] <mst> huf: use more 'orange';

[16:56] <AlexDaniel> mst: committable6test You are banned from this server- Please do not …

[16:57] <mst> augh

[16:59] <mst> AlexDaniel: will look shortly, still half awake, sorry

[17:31] <mst> AlexDaniel: hm. you did a restart about five hours ago?

[17:34] *** zakharyas left
[17:40] <AlexDaniel> mst: maybe they did reconnect by themselves for some reason, I don't know

[17:40] *** Sgeo_ joined
[17:41] *** p6bannerbot sets mode: +v Sgeo_

[17:42] <AlexDaniel> yeah, bots were killed because of watchdog timeout

[17:42] *** Sgeo left
[17:42] <mst> right, and now I've had the connection limits increased for you

[17:42] <mst> it became slightly obvious that you don't have join throttling built in

[17:43] <AlexDaniel> should I have it?

[17:43] <AlexDaniel> I can probably implement it if it's needed

[17:44] <mst> yes. joining 10+ nicks at once from a single IP address got you k-lined

[17:44] <AlexDaniel> :)

[17:45] <mst> I confess I do wonder why you have so many bots instead of one that can take commands

[17:46] *** virtualsue joined
[17:46] <timotimo> maybe more fine-grained failure states %)

[17:47] <AlexDaniel> it's quite common for people to talk to the bot directly, without trying to remember the right command. I do agree though that some of them can be merged

[17:47] *** p6bannerbot sets mode: +v virtualsue

[17:47] *** virtualsue left
[17:50] *** bisectable6 joined
[17:50] *** ChanServ sets mode: +v bisectable6

[17:51] *** p6bannerbot sets mode: +v bisectable6

[17:51] *** committable6 joined
[17:51] *** ChanServ sets mode: +v committable6

[17:51] <mst> AlexDaniel: ok. k-line lifted but be careful.

[17:51] *** evalable6 joined
[17:51] *** ChanServ sets mode: +v evalable6

[17:51] *** lucasb left
[17:51] <AlexDaniel> mst: thank you

[17:51] *** p6bannerbot sets mode: +v committable6

[17:52] <mst> AlexDaniel: basically, if they all rejoin at once again, expect sigyn to eat them again currently

[17:52] *** p6bannerbot sets mode: +v evalable6

[17:52] <AlexDaniel> mst: OK, I see

[17:52] <mst> I can arrange for a bit more protection

[17:52] <AlexDaniel> I'll try to fix it, though likely after the release…

[17:52] <mst> but, really, you shouldn't be joining 10 bots in 10 seconds

[17:52] *** notable6 joined
[17:52] *** ChanServ sets mode: +v notable6

[17:53] *** reportable6 joined
[17:53] *** ChanServ sets mode: +v reportable6

[17:53] <timotimo> you can just flock a little file or something

[17:53] *** p6bannerbot sets mode: +v notable6

[17:53] <timotimo> have a little server that does nothing but accepts connections and close a connection 10s after the previous connection was closed

[17:53] *** p6bannerbot sets mode: +v reportable6

[17:53] <timotimo> and then the bots can try to connect to it, if it responds they wait for the connection to be closed, if not ... i guess sleep for a random amount of time?

[17:53] *** unicodable6 joined
[17:53] *** ChanServ sets mode: +v unicodable6

[17:54] <timotimo> sleep for a random amount of time might be good enough anyway

[17:54] *** releasable6 joined
[17:54] <AlexDaniel> timotimo: another dumb solution is to just sleep for a random amount of time when starting :)

[17:54] *** p6bannerbot sets mode: +v unicodable6

[17:54] *** p6bannerbot sets mode: +v releasable6

[17:55] <timotimo> that's what i meant by that last one

[17:56] <AlexDaniel> ok just did that

[17:56] *** ExtraCrispy left
[17:57] <Summertime> the chance that a bunch wake up within a certain time range would be a somewhat notable chance?

[17:57] <El_Che> On other news, there is a new pugs ticket: https://github.com/perl6/Pugs.hs/issues/32

[17:58] <AlexDaniel> Summertime: yeah, we can start a party if that happens

[17:58] <AlexDaniel> with free klines

[17:58] <timotimo> yeah, if you use the "wrong" probability distribution... :)

[17:58] *** quotable6 joined
[17:58] *** ChanServ sets mode: +v quotable6

[17:58] <timotimo> but something like atomic decay isn't useful either, since that means the last bot may start only in like a year or two

[17:59] <Summertime> even more fun, place bets on how many re-connect cycles it'll be before it happens

[17:59] *** p6bannerbot sets mode: +v quotable6

[18:00] *** xinming left
[18:02] *** benchable6 joined
[18:02] *** ChanServ sets mode: +v benchable6

[18:02] <AlexDaniel> mst: I added a dumb `rand × 300` delay, hope it's good enough until I do something better

[18:02] <mst> AlexDaniel: hopefully.

[18:02] *** p6bannerbot sets mode: +v benchable6

[18:02] <timotimo> hm, is that what we want, though? then the mid range of time will be most common

[18:05] <AlexDaniel> m: .say for (rand × 300) xx 17

[18:05] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «156.83966459995548␤72.45519603056583␤17.452177274343896␤244.76447171712095␤294.3915364432218␤152.68554170150327␤169.3105060114897␤49.9147474009394␤131.43213413352294␤88.16712524686614␤79.58401734941873␤91.68746622576803␤256.286…»

[18:05] <AlexDaniel> m: .say for ((rand × 300) xx 17).sort

[18:05] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «78.37266103910257␤94.14225398166617␤99.02118344680324␤108.59663474467013␤115.97512491047108␤122.07800998295998␤130.9925127752341␤132.29476172009495␤186.30474524820647␤189.907101893607␤199.57648427497762␤235.506901899008␤245.616…»

[18:05] <timotimo> mhh, it's far enough apart i suppose

[18:06] <timotimo> m: .round(0.1).say for ((rand × 300) xx 17).sort

[18:06] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «3.6␤3.7␤4.1␤50.9␤72.6␤79.6␤96.2␤97.7␤107.2␤128.1␤175␤192.1␤258.2␤258.2␤262.3␤289␤289.9␤»

[18:06] <AlexDaniel> hah, well… could be better I guess

[18:06] <mst> note, if necessary I can just boot sigyn back out, but I like the fact that she's k-lining spammers

[18:06] <timotimo> m: .round(0.1).say for ((300.rand) xx 17).sort

[18:06] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «3.1␤28.2␤42.7␤56.2␤70.1␤79␤104.7␤147.1␤161.7␤165.7␤172␤196.7␤249.5␤250.3␤262.7␤275.3␤292.1␤»

[18:06] <AlexDaniel> we can also hash the nickname of the bot so that the delay is not random!

[18:07] <timotimo> that's a little bit more evenly distributed

[18:07] *** kurahaupo left
[18:09] *** kurahaupo joined
[18:10] <Summertime> hash and take the lowest byte unsigned? all bots will be in by 255 seconds

[18:10] *** p6bannerbot sets mode: +v kurahaupo

[18:14] *** bloatable6 joined
[18:14] *** ChanServ sets mode: +v bloatable6

[18:14] <mst> I was wondering about something hashing based

[18:15] *** p6bannerbot sets mode: +v bloatable6

[18:16] *** coverable6 joined
[18:16] *** ChanServ sets mode: +v coverable6

[18:17] *** p6bannerbot sets mode: +v coverable6

[18:18] *** greppable6 joined
[18:19] *** p6bannerbot sets mode: +v greppable6

[18:20] *** zakharyas joined
[18:20] *** squashable6 joined
[18:20] *** p6bannerbot sets mode: +v zakharyas

[18:21] *** p6bannerbot sets mode: +v squashable6

[18:21] *** shareable6 joined
[18:22] *** p6bannerbot sets mode: +v shareable6

[18:24] *** Kaiepi left
[18:24] *** zakharyas left
[18:25] *** Kaiepi joined
[18:26] *** p6bannerbot sets mode: +v Kaiepi

[18:27] *** zakharyas joined
[18:27] <buggable> New CPAN upload: PDF-Class-0.3.0.tar.gz by WARRINGD http://modules.perl6.org/dist/PDF::Class:cpan:WARRINGD

[18:28] *** p6bannerbot sets mode: +v zakharyas

[18:33] *** statisfiable6 joined
[18:33] *** ChanServ sets mode: +v statisfiable6

[18:34] *** p6bannerbot sets mode: +v statisfiable6

[18:37] *** nativecallable6 joined
[18:38] *** p6bannerbot sets mode: +v nativecallable6

[18:48] *** lucasb joined
[18:49] *** p6bannerbot sets mode: +v lucasb

[18:50] *** undersightable6 joined
[18:50] *** ChanServ sets mode: +v undersightable6

[18:51] *** p6bannerbot sets mode: +v undersightable6

[18:51] *** natrys joined
[18:52] *** p6bannerbot sets mode: +v natrys

[19:00] <lucasb> m: my \a = 10; a := 20  # any reason to not be able to rebind a sigil-less var?

[19:00] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Cannot use bind operator with this left-hand side␤at <tmp>:1␤------> 3 not be able to rebind a sigil-less var?7⏏5<EOL>␤»

[19:02] <lizmat> lucasb: afaik, it's a syntax thing

[19:02] <lizmat> m: use nqp; my \a = 10; nqp::bind(a,20); say a

[19:02] <camelia> rakudo-moar 86ce4f4eb: OUTPUT: «20␤»

[19:03] <lucasb> ah, thanks lizmat

[19:06] *** Sound left
[19:11] *** leah2 left
[19:17] <El_Che> AlexDaniel: I find figuring out which bot to use as confusing as knowing which cmd to run.

[19:22] *** warriors joined
[19:22] *** p6bannerbot sets mode: +v warriors

[19:22] *** leah2 joined
[19:23] *** p6bannerbot sets mode: +v leah2

[19:25] *** lucasb left
[19:30] <moritz> masak: I'm sure you remember the November wiki, right? I subscribed to the november mailing list back in the days, and created a rule in gmail to automatically label and move mails with "[november]" in the subject...

[19:31] <moritz> masak: now it seems that gmail has started to ignore the brackets, and moves everything with November in the subject in that old, old folder for the mailing list :-)

[19:32] <moritz> isn't it funny how remnants of such old projects rise from the dead?

[19:34] *** zakharyas left
[19:35] *** MasterDuke left
[19:39] <El_Che> Maybe this is applicable? https://help.github.com/articles/archiving-a-github-repository/

[19:39] <El_Che> in case some want to hack on it, they just need to fork it

[19:39] *** molaf left
[19:41] *** domidumont left
[19:46] <AlexDaniel> El_Che: what about https://github.com/perl6/whateverable/wiki ?

[19:47] <AlexDaniel> I've added some short descriptions

[19:47] <AlexDaniel> maybe we need a flowchart? :P

[19:47] <El_Che> AlexDaniel: that's not my point

[19:47] <AlexDaniel> yeah I get it

[19:47] <El_Che> AlexDaniel: my point is that different bots is not clearer that subcommands :)

[19:47] <El_Che> it may be clearer if you have around 2 or something :)

[19:48] <AlexDaniel> we had two!

[19:48] <AlexDaniel> and then they multiplied

[19:48] <AlexDaniel> a few times

[19:49] <El_Che> yeah, you feed them after midnight

[19:55] *** andrzejku_ joined
[19:55] *** p6bannerbot sets mode: +v andrzejku_

[19:57] *** andrzejku left
[19:57] *** andrzejku_ is now known as andrzejku

[20:03] *** jmerelo left
[20:08] *** rfold left
[20:11] *** lizmat left
[20:13] *** lizmat joined
[20:13] *** p6bannerbot sets mode: +v lizmat

[20:16] *** mattp_ left
[20:25] *** mattp_ joined
[20:26] *** p6bannerbot sets mode: +v mattp_

[21:02] *** TreyHarris left
[21:03] *** domidumont joined
[21:03] *** TreyHarris joined
[21:03] *** p6bannerbot sets mode: +v TreyHarris

[21:03] *** p6bannerbot sets mode: +v domidumont

[21:13] <masak> moritz: :)

[21:13] <masak> moritz: it is, indeed.

[21:14] <masak> also, software rot is a very real thing. that rule was fine until the underlying engine chose to interpret it differently.

[21:16] *** nige left
[21:18] <pmurias> mst: re "A should be done", do you think it's likely even likely that Perl 5 the language will be ported to other VMs?

[21:19] <El_Che> pmurias: I don't think that's what mst is referring

[21:20] *** domidumont left
[21:24] <mst> pmurias: I think if we hit a point where MoarVM is running rakudo fast enough to beat the perl5 VM in benchmarks people might seriously consider it

[21:24] <mst> (I know that there's the odd case where that's already true, but not a compelling number yet)

[21:25] <mst> honestly though I'm happy to let that decision shake out on a technical basis, and if people associate it with killing the language that's going to interfere with any discussion of the technical merits

[21:31] *** kensanata joined
[21:31] *** p6bannerbot sets mode: +v kensanata

[21:54] *** xinming joined
[21:54] *** p6bannerbot sets mode: +v xinming

[22:07] *** koto left
[22:12] *** natrys left
[22:17] *** sena_kun joined
[22:17] *** p6bannerbot sets mode: +v sena_kun

[22:19] <pmurias> mst: graalvm seems a more promising/exiting target to me

[22:20] * pmurias should look how Perlito5 java backend is doing and if it can be influenced in that direction ;)

[22:20] <mst> pmurias: I'm not really competent to follow its progress

[22:22] <El_Che> pmurias: their webpage reads like "we're parrot"

[22:22] <pmurias> I haven't looked at it in a long time

[22:22] <pmurias> El_Che: you mean grallvm?

[22:22] <El_Che> yes, polyglot vm

[22:22] <pmurias> El_Che: it's a parrot vm that doesn't suck

[22:24] <pmurias> El_Che: also Oracles attempt to take over everything

[22:25] <El_Che> Oracle has a worst reputation problem than Perl :)

[22:26] <pmurias> dunno, evil beats dead everyday ;)

[22:27] *** koto joined
[22:27] <El_Che> pmurias: https://www.graalvm.org/docs/faq/ <-- their license info is fishy

[22:28] *** p6bannerbot sets mode: +v koto

[22:28] <leont> Parrot was so dumb that this had got to be better

[22:28] <El_Che> https://github.com/oracle/graal/blob/master/LICENSE, seems gpl2 + classpath exception

[22:29] <El_Che> leont: handsigh 20/20?

[22:29] <leont> No

[22:29] <leont> Whomever was dumb enough to write a VM in the 21st century that wasn't thread-safe from the ground up, should not be in the business of writing a VM.

[22:29] *** sena_kun left
[22:30] <pmurias> leont: wasn't the design heavily oriented to run the traditional sort of scripting languages?

[22:31] <pmurias> which traditionally aren't very thready

[22:31] <leont> For p5 it is a hhindsight issue. In the early 90s we didn't understand how important threads would be.

[22:32] <leont> But in the early 2000s we very much did.

[22:32] <El_Che> leont: I think python is in that boat today, despite its popularity

[22:33] <leont> perl6 RFC1 was "Implementation of Threads in Perl"

[22:33] <El_Che> I saw this recently, by ESR, a huge python fan: http://esr.ibiblio.org/?p=8161

[22:33] <leont> It's abstract: "Perl 6 should be built around threads from the beginning"

[22:33] <leont> *Its

[22:34] * El_Che plugs a "now you have 2 problems" joke

[22:34] <pmurias> El_Che: re licence they have an open source version and a closed source version which contains some extra stuff , I'm not sure as it seems they don't want to talk about it

[22:34] <El_Che> pmurias: yeah, you need to go to github to get an answer

[22:35] *** Kaiepi left
[22:35] *** Kaiepi joined
[22:36] *** p6bannerbot sets mode: +v Kaiepi

[22:36] <pmurias> El_Che: where on github are the differences between the community and enterprise editions?

[22:36] <leont> This is the #1 lesson from the JVM. Whatever else you may think of it or Java, it got threads right, and it makes working with them far more sensible than anything popular that preceded it.

[22:37] <El_Che> pmurias: no, the difference was on the site, on github you find the license for the free version

[22:37] <leont> (or at least right enough, it took Java 1.5 to actually get the low-level semantics right)

[22:38] <pmurias> El_Che: some things are also UPL licensed (the parts the nqp truffle backend interacts)

[22:38] <El_Che> leont: java got a lot of things right early on

[22:38] <leont> GC is the other one

[22:38] <El_Che> threading, GCC, deployment

[22:38] <El_Che> also, simple OO

[22:38] <El_Che> GC (not gcc :) )

[22:39] <leont> GC comes from early LISP, they managed to make it the standard

[22:40] *** patrickb joined
[22:40] <El_Che> leont: really? I didn't know that

[22:40] *** p6bannerbot sets mode: +v patrickb

[22:40] *** koto left
[22:41] <leont> 1959

[22:43] <pmurias> leont: from a language implementer stand point the biggest thing that graalvm/truffle gets right, is that it's basically a JIT writing toolkit (you write an annotated interpreter) instead of a supplied hardcoded JIT

[22:43] <leont> That sounds remarkably helpful, yes

[22:43] *** kensanata left
[22:46] <pmurias> leont: so you don't run into the problem that because your language feature doesn't exactly match the provided VM feature you have to pay a horrible performance price (or do some super crazy analyses to workaround it)

[22:47] *** movl left
[22:47] *** khisanth_ left
[22:56] <pmurias> leont: what is a big pain point when compiling Perl 6 to JS is that I can't tweak the V8 magic or tailor it for stuff that isn't needed for regular JS

[22:57] <leont> Can imagine that. That's not what JS/V8 were intended for

[22:58] <pmurias> OTOH on parrot the cool VM magic was NYI ;)

[22:59] <Woodi> pmurias: what was that ? threads ?

[23:00] *** khisanth_ joined
[23:00] *** p6bannerbot sets mode: +v khisanth_

[23:01] <pmurias> Woodi: all the JIT compiler things, like polymorphic inline caching

[23:01] <Woodi> aha

[23:02] <pmurias> maybe polymorphic inline caching was there at some time (I would have to check)

[23:02] *** patrickb left
[23:03] <Woodi> Java got GUI from the start, C# too. that's rare for new languages and gives lots of users

[23:03] <pmurias> sleep&

[23:04] *** pmurias left
[23:08] *** rindolf left
[23:30] *** Sgeo_ left
[23:30] *** Sgeo_ joined
[23:31] *** p6bannerbot sets mode: +v Sgeo_

[23:44] *** bolangi joined
[23:45] *** p6bannerbot sets mode: +v bolangi

