[00:00] <buggable> üé∫üé∫üé∫ It's time for the monthly Accidental /win Lottery üòçüòçüòç We have 2 ballots submitted by 2 users! DRUM ROLL PLEASE!...

[00:00] <buggable> And the winning number is 10! Congratulations to samcv, nine! You win a roll of duck tape!

[00:00] <samcv> yay. i've never won before

[00:00] <samcv> do i have to give a speech

[00:01] <El_Che> sound good to me

[00:01] <El_Che> :)

[00:02] *** BenGoldberg joined
[00:02] *** espadrine left
[00:06] *** stmuk joined
[00:07] *** benjikun2 is now known as benjikun

[00:07] <raschipi> I said in the survey I had 2018.05 but I forgot I just had upgraded to 2018.06

[00:08] *** stmuk_ left
[00:08] <benjikun> raschipi: That's okay

[00:11] *** Israel joined
[00:11] <Israel> ?

[00:11] <Israel> Anybody here?

[00:11] <thowe> hi

[00:11] <thowe> I'm here, but I'm no help.

[00:11] <Israel> hey

[00:11] <Israel> Ok, lol

[00:11] <AlexDaniel> I'm here, I'm sometimes help :)

[00:12] <thowe> Most Perl people are super experts at everything...  I'm just a hobbiest.

[00:12] <Israel> I need t know more about Perl6, if anyone can help

[00:12] <Israel> I am a hobbiest too

[00:12] <thowe> Sure!

[00:12] <thowe> I'll try.

[00:12] <Israel> Ok

[00:14] <AlexDaniel> samcv: but who won? you or nine? :)

[00:14] <thowe> The REPL makes things fun and helps with the learning.

[00:14] <raschipi> Just stick around and listen and you'll bea 'super expert' in no time.

[00:15] <Israel> okay

[00:16] <Israel> where i can learn more about this language?

[00:16] <thowe> Well, do you like books or online resources or both?

[00:16] <raschipi> There's a couple of books, introductory texts online...

[00:17] <thowe> I have a book called "Perl 6 Fundamentals" which I have liked so far.

[00:17] <Israel> I have many books of Perl, but Perl6...

[00:17] <Israel> "Perl 6 Fundamentals" - expensive?

[00:17] <thowe> Also, a new book about learning Perl6 is about to come out from O'Reilly

[00:17] <thowe> I'm not sure, I seem to recall getting it during a price reduction.

[00:18] <thowe> Israel, What country are you in?

[00:18] <raschipi> If you know Perl 5, you might want to have a look here: https://docs.perl6.org/language/5to6-nutshell

[00:19] <Israel> Brazil

[00:19] <Israel> Brazilian Federal Republic***

[00:19] *** gabiruh joined
[00:20] <Israel> raschipi - thanks

[00:20] <thowe> Looks like the paperback is about $20 US from Amazon.  I'm not sure how that translates to Brazilian currency.

[00:20] <raschipi> Seja bem vindo, Israel

[00:21] <Israel> I can read in English, and $20 is about 60 brazilian coins

[00:21] <Israel> So it's fine

[00:22] <thowe> Coins?  That's what it is called?

[00:22] <AlexDaniel> Israel: fwiw there are many short introductions to perl¬†6, like https://learnxinyminutes.com/docs/perl6/

[00:22] <raschipi> Israel: importa√ß√£o de livros √© isento de imposto, se te cobrarem, reclame.

[00:23] <Israel> raschipi: I've already released some books from the USA, never charged taxes

[00:23] <Israel> thowe - We call brazilian Real

[00:23] <raschipi> Tax over "I'm not sure what this is" is 100%, so they sometimes tax books when they shouldn't. You need to complain to get the money back.

[00:23] <thowe> Ah, OK

[00:24] *** gabiruh left
[00:24] <Israel> Ok

[00:25] <thowe> this is a free download: http://greenteapress.com/wp/think-perl-6/

[00:25] <Israel> Thanks for all guys, realy helped me

[00:25] <raschipi> Stick around

[00:26] *** eliasr left
[00:26] <Israel> I will be

[00:32] *** gabiruh joined
[00:35] *** zachk left
[00:59] *** Israel left
[01:09] <raschipi> He didn't stick around.

[01:10] <thowe> Ah well.

[01:14] *** perlpilot joined
[01:15] *** kybr joined
[01:35] *** ChoHag left
[01:37] <benjikun> raschipi: Hopefully he returns

[01:44] <buggable> New CPAN upload: IP-Random-0.0.8.tar.gz by JMASLAK http://modules.perl6.org/dist/IP::Random:cpan:JMASLAK

[02:01] *** markoong left
[02:02] *** markoong joined
[02:03] *** gabiruh left
[02:07] *** markoong left
[02:07] *** perlpilot left
[02:14] *** aborazmeh joined
[02:14] *** aborazmeh left
[02:14] *** aborazmeh joined
[02:26] *** ChoHag joined
[02:59] *** gabiruh joined
[03:18] *** Zoffix joined
[03:21] *** aborazmeh left
[03:22] <Zoffix> .tell MasterDuke did some digging into the `multi z(42)` thing. Looks like the perf rewrite works fine in `sub`s, but in `multi`es, stuff becomes 10x slower and I think just drowns out the improvement. Filed as R#2002

[03:22] <yoleaux> Zoffix: I'll pass your message to MasterDuke.

[03:22] <yoleaux> 30 Jun 2018 23:16Z <benjikun> Zoffix: Sorry, was asleep. Yeah this round's survey is complete, I was going to create charts for each question, but I think the google form results will do fine for now.

[03:24] <Zoffix> (I mean, 10x slower for some reason, not because of my opt. The issue existed before my stuff)

[03:26] <Zoffix> even before The Christmas

[03:29] <Zoffix> R#2002

[03:29] <Zoffix> hack is ded again

[03:33] <AlexDaniel> but at least RT is back up!

[03:33] *** dalek joined
[03:33] *** ChanServ sets mode: +v dalek

[03:33] <Zoffix> I rather have hack :P

[03:33] *** Geth joined
[03:33] *** ChanServ sets mode: +v Geth

[03:33] *** p6lert joined
[03:33] *** synopsebot joined
[03:33] *** ChanServ sets mode: +v synopsebot

[03:33] <Zoffix> R#2002

[03:33] <synopsebot> R#2002 [open]: https://github.com/rakudo/rakudo/issues/2002 [perf] `where` in single `multi` vs. `sub` is 10x slower

[03:34] *** SourceBaby joined
[03:34] *** ChanServ sets mode: +v SourceBaby

[03:35] <AlexDaniel> RT#125974 RT#128693 RT#132219

[03:35] <synopsebot> RT#125974 [new]: https://rt.perl.org/Ticket/Display.html?id=125974 [PERF] Closures in regex cost a lot of CPU cycles.

[03:35] <synopsebot> RT#128693 [new]: https://rt.perl.org/Ticket/Display.html?id=128693 [PERF] Regex optimizer on \s+$ is "dumb as bricks"

[03:35] <synopsebot> RT#132219 [new]: https://rt.perl.org/Ticket/Display.html?id=132219 [@LARRY] [REGEX] non-ratchet right-hand branch of `||` causes backtracking into the alternation

[03:38] *** Zoffix left
[03:46] *** Khisanth left
[03:47] <raschipi> Zoffix RT is just bad news anyway.

[03:52] <AlexDaniel> ?

[03:55] *** psychoslave joined
[03:59] *** Khisanth joined
[04:23] *** Actualeyes left
[04:24] *** Actualeyes joined
[04:37] *** Tison joined
[04:37] <Tison> \o

[04:40] <Tison> I was ask that what's new 6.d would bring to, and I introduced https://github.com/perl6/6.d-prep, but think that it would be better if there is a brief talk/essay to announce 6.d

[04:41] <Tison> my folks are excited to hear that 6.d will be released in Nov. :)

[04:41] <raschipi> Will it?

[04:41] <geekosaur> I thought that hadn;t been decided yet

[04:43] <raschipi> I didn't hear anything about it either.

[04:46] <raschipi> Tison: but don't worry, everyone will hear extensively about 6.d way before it comes out.

[04:54] *** Zoffix joined
[04:57] <Zoffix> Tison: there aren't yet any changelog notes for 6.d and the majority of the spec changes still need to be reviewed. Pointing people to 6.d-prep isn't a good idea: that's a repo for core devs and will just confuse users. The vast majority of 6.d stuff is already available in 6.c, so it's not like we're keeping some secret hidden feature under the covers. The release will just make all these features officially

[04:57] <Zoffix> part of the language and subject to much stronger compatibility support

[04:59] <Zoffix> and will put in use the features that currently requre `use v6.d.PREVIEW`

[05:10] *** Tison left
[05:14] *** thowe left
[05:22] *** Kaiepi left
[05:23] *** Kaiepi joined
[05:51] *** kaare_ joined
[06:01] *** wamba joined
[06:15] *** BenGoldberg left
[06:20] *** raschipi left
[06:23] *** xtreak joined
[06:24] *** araraloren joined
[06:27] *** sno left
[06:29] *** sno joined
[06:40] *** fake_space_whale left
[06:48] *** jmerelo joined
[06:59] *** xinming_ joined
[07:02] *** xinming left
[07:05] *** xinming_ left
[07:05] *** xinming joined
[07:08] *** xtreak left
[07:10] <Geth> ¬¶ doc: f67de5778e | (JJ Merelo)++ | CONTRIBUTING.md

[07:10] <Geth> ¬¶ doc: Some guidelines about introducing new features closes #2133

[07:10] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/f67de5778e

[07:17] *** psychoslave left
[07:53] *** psychoslave joined
[08:04] *** psychoslave left
[08:20] *** parv joined
[08:33] *** DeepIO joined
[08:33] *** DeepIO left
[08:50] *** rindolf joined
[09:12] *** rindolf left
[09:16] *** rindolf joined
[09:23] *** TreyHarris joined
[09:31] *** epony left
[09:34] *** ccakes left
[09:34] *** parv left
[09:36] *** robertle joined
[09:45] *** epony joined
[09:48] <Geth> ¬¶ doc/master: 5 commits pushed by (JJ Merelo)++

[09:48] <Geth> ¬¶ doc/master: 193ade9ec0 | Adding a reference to use fatal refs #1274

[09:48] <Geth> ¬¶ doc/master: 50d19c47da | Converting a few examples to using `$*ERR.say`

[09:48] <Geth> ¬¶ doc/master: cba03d562e | Adds more examples of how try works

[09:48] <Geth> ¬¶ doc/master: d4f82ddac9 | Adds indexing and some clarification of the resume statement, refs #1274

[09:48] <Geth> ¬¶ doc/master: 5729fa3f49 | Adding examples to resume

[09:48] <Geth> ¬¶ doc/master: review: https://github.com/perl6/doc/compare/f67de5778e56...5729fa3f497d

[09:59] *** lizmat left
[10:20] *** araraloren_ joined
[10:23] *** araraloren left
[10:29] *** Ven`` joined
[10:31] *** sena_kun joined
[10:33] *** Ven`` left
[10:36] *** andrzejku joined
[10:36] *** gurmble joined
[10:44] *** lizmat joined
[10:51] *** eliasr joined
[10:58] *** HaraldJoerg joined
[11:11] *** sergot joined
[11:19] *** markoong joined
[11:26] *** andrzejku left
[11:29] *** mniip joined
[11:34] <jmerelo> More stuff from the survey: Community score vs. documentation score https://github.com/perl6/p6survey/blob/master/illos/documentation-vs-community.png

[11:35] *** leah2 joined
[11:37] <jmerelo> In general, scores are lower for doc than community, but those giving high score to community, in general, give a good score to documentation. 

[11:38] <jmerelo> I'm kinda worried, however, by those giving 9 or 10 to the community and failing documentation. 

[11:38] <Geth> ¬¶ doc: cec362ec4f | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/exceptions.pod6

[11:38] <Geth> ¬¶ doc: wrap long lines, fix typo

[11:38] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/cec362ec4f

[11:38] <synopsebot> Link: https://doc.perl6.org/language/exceptions

[11:39] *** gurmble is now known as grumble

[11:41] <tbrowder_> jmerelo: maybe a new survey just on documentation?

[11:44] <jmerelo> This is interesting https://raw.githubusercontent.com/perl6/p6survey/master/illos/documentation-vs-community-boxplot.png

[11:44] <jmerelo> Most people giving a low score to documentation, _also_ give a low score to the community

[11:44] <lizmat> judging from reddit comments, that is to be expected :-(

[11:44] <jmerelo> tbrowder_: I have more than enough analyzing data in this survey. I don't want people to get tired of surveys...

[11:46] <jmerelo> lizmat: yep. Still, ~ 7 is kind of low. There's room for improvement.

[11:46] <tbrowder_> i for one would like to see the language part organized into several groupings. the alphabetical order is somtimes unhelpful.

[11:47] <jmerelo> tbrowder_: It's sometimes difficult to navigate. But the problem is that major changes like that one simply don't happen.

[11:47] <jmerelo> tbrowder_: but if you open an issue I'll be giving it some attention. It's a good suggestion.

[11:48] <tbrowder_> if/when another survey is done, maybe ask for specifics if the choice rating is below X.

[11:48] <jmerelo> tbrowder_: I mean, not more than other issues, but it's always good to have those opinions just in case some rearrangement happens.

[11:49] *** rindolf left
[11:51] *** jmerelo left
[12:02] *** pmurias joined
[12:06] *** rindolf joined
[12:08] <tbrowder_> even though i would like to see some categories in the lnguage docs, i‚Äôm not sure what they should be, and getting consensus might be difficult.

[12:10] <tbrowder_> i haven‚Äôt looked at htmlify since your work started, but i imagine creating categories might be a little easier now, thanks to your efforts.

[12:15] <sacomo> hi all

[12:16] <pmurias> sacomo: hi

[12:16] <sacomo> hello

[12:19] <sacomo> is there a way to see all of the modules that are available as symbol references from inside a module? for example, can we print a list of modules (JSON::Fast, Foo, Bar, Something::Special) that are either available on the system, or via lib?

[12:19] <lizmat> that would be $*REPO introspection, I guess

[12:20] <lizmat> ugexe or nine would probably know

[12:20] <lizmat> Repository handling is sadly underdocumented atm

[12:22] <sacomo> lizmat: thanks, I will mess around with $*REPO

[12:23] <tbrowder_> speaking of searching modules, any way to search by author on our modules page?

[12:25] <El_Che> https://modules.perl6.org/search/?q=author%3A%22JNTHN%22

[12:26] <El_Che> https://modules.perl6.org/search/?q=author:"JNTHN"

[12:28] *** xtreak joined
[12:47] *** mscha joined
[12:48] <mscha> How can I declare a nested integer hash, i.e. %foo{42}{21} == 63?

[12:48] <mscha> m: my %foo{Int}; %foo{42} //= my %{Int}; %foo{42}{21} = 63; dd %foo; # This doesn't work, obviously

[12:48] <camelia> rakudo-moar 64bdb3dd7: OUTPUT: ¬´Hash[Any,Int] %foo = (my Any %{Int} = 42 => $(my Any %{Int} = 21 => 63))‚ê§¬ª

[12:49] <mscha> m: my %foo{Int}; %foo{42} //= my Int %{Int}; %foo{42}{21} = 63; dd %foo; # This is a workaround, but annoying.

[12:49] <camelia> rakudo-moar 64bdb3dd7: OUTPUT: ¬´Hash[Any,Int] %foo = (my Any %{Int} = 42 => $(my Int %{Int} = 21 => 63))‚ê§¬ª

[12:49] <mscha> Ignore my first "this doesn't work"...

[12:49] <mscha> m: my %foo{Int}; %foo{42}{21} = 63; dd %foo; # This doesn't work, obviously

[12:49] <camelia> rakudo-moar 64bdb3dd7: OUTPUT: ¬´Hash[Any,Int] %foo = (my Any %{Int} = 42 => ${"21" => 63})‚ê§¬ª

[12:55] <El_Che> mscha: I most forgo strong typing with nested stuff

[12:55] <El_Che> mscha: I am under the impressiong typing is rather flat on perl6, but I am sure people will correct me if wrong

[12:56] <lizmat> mscha: you're asking a Hash to take a Hash *and* an Int as values ?

[12:59] <El_Che> Nesting stuff is in my view something typical of dynamic non-strongly type languages

[13:00] <El_Che> in other languages you'd use Objects or Structs to keep that kind of data

[13:00] <El_Che> imho

[13:05] <Geth> ¬¶ doc: tbrowder self-assigned add caption info to pod tables discussion https://github.com/perl6/doc/issues/2134

[13:08] <mscha> lizmat: I want a hash of hashes of ints.

[13:10] <mscha> El_Che: but if I forgo strong typing, Rakudo changes my Ints to Strs.  Not a disaster with Ints, but for instance with Rats that can cause bugs.

[13:10] <El_Che> you can type the values, no?

[13:11] *** kaare_ left
[13:11] <mscha> El_Che: But how do I type the values of the main hash as Int %{Int}?

[13:11] *** turdmonkey joined
[13:11] *** turdmonkey is now known as Bowlslaw

[13:11] <Bowlslaw> hello

[13:12] <Bowlslaw> good morning everyone

[13:12] <mscha> m: my Int %{Int} %foo{Int}; # doesn't work

[13:12] <camelia> rakudo-moar 64bdb3dd7: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    foo used at line 1‚ê§‚ê§¬ª

[13:14] <Bowlslaw> You guys have a totalitarian moderator, Mithaldu, on r/perl who bans and mutes people for engaging in harmless discussions in which he disagrees, over joke posts

[13:15] <El_Che> mscha: I see

[13:15] <El_Che> m: my Hash[Int] %h; my %h2 = foo => 2; %h<foo> = %h2

[13:15] <camelia> rakudo-moar 64bdb3dd7: OUTPUT: ¬´Type check failed in assignment to %h; expected Hash[Int] but got Hash (${:foo(2)})‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[13:16] <lizmat> Bowlslaw: I think this is the wrong place to complain about that, taking it up with the other moderators on r/perl would be better, I think

[13:17] <Bowlslaw> That's impossible.

[13:17] <Bowlslaw> I tried, but I don't know where else to go.

[13:19] <lizmat> you could also try #perl on irc.perl.org

[13:19] <Bowlslaw> When I tried to appeal, I literally said, "I don't think I deserve to be banned explanation?" and he said, "you are banned and muted now"

[13:20] <Bowlslaw> alrighty...thanks.

[13:20] *** andrzejku joined
[13:21] <pmurias> Bowlslaw: this is a Perl 6 channel so if anything you should be complaining about r/perl6 here ;)

[13:21] <El_Che> pmurias: nothing is as simple as it looks :)

[13:23] <Bowlslaw> I Know, but r/perl is advertised as both Perl 5 and Perl 6

[13:23] <Bowlslaw> "The Perl Programming Language, including both Perl 5 and Perl 6."

[13:24] <El_Che> Bowlslaw: it is

[13:24] <El_Che> let's see if their are known admins

[13:26] <lizmat> Bowlslaw: I assume it's over this? https://www.reddit.com/r/perl/comments/8uhgp4/declaring_variables_in_perl/

[13:27] <lizmat> https://www.reddit.com/user/bowlslaw  doesn't read too positive  :-(

[13:28] <Bowlslaw> yep

[13:28] <Bowlslaw> My history is irrelevant

[13:28] <Bowlslaw> what IS relevant is the current post there

[13:28] <Bowlslaw> which is not even close to being ban worthy with the only explanation being, "keep your right-wing stuff elsewhere" or whatever

[13:30] <hahainternet> your history surely isn't irrelevant

[13:31] *** espadrine joined
[13:32] <Bowlslaw> In the context of this curernt situation, it is entirely irrelevant, unless yo uare simply looking for an excuse to ban someone.

[13:32] <hahainternet> if your history provides that 'excuse', then it isn't irrelevant

[13:32] *** espadrine left
[13:33] <lizmat> Bowlslaw: again, I don't this is the place for this discussion, as I think very few people on this channel can actually do something about the situation

[13:33] <Bowlslaw> alright

[13:33] <Bowlslaw> hahainternet: and no, that is called an "ad hominem", something you should be too smart to fall for

[13:33] *** Bowlslaw left
[13:33] <lizmat> *sigh*

[13:33] <hahainternet> why do people who are always offensive never understand what "ad hominem" means

[13:34] <hahainternet> a mystery to me

[13:37] <pmurias> Bowlslaw: an ad hominem is a valid argument when the person who is being attacked is the subject of the argument

[13:45] <hahainternet> pmurias: he left lol, but even then his history cannot possibly be an ad hominem, it would be like a person on trial insisting the judge should not look at his criminal record before sentencing him

[13:46] <Geth> ¬¶ doc: 3ea8e5fa94 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/tables.pod6

[13:46] <Geth> ¬¶ doc: fix various issues of formatting, spellng, etc.

[13:46] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/3ea8e5fa94

[13:46] <synopsebot> Link: https://doc.perl6.org/language/tables

[13:49] <El_Che> duscussing meme is a can of worms

[13:49] <El_Che> as is reddit, it seems

[13:50] * pmurias tries to keep his technical activities and his trolling/internet vitriol separate

[13:52] <El_Che> pmurias: does pmurias have an online evil twin? :)

[13:52] <El_Che> I think the only time I posted something on reddit was in a discussion started by lizmat 

[13:53] <Geth> ¬¶ doc: 926e0f2834 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/tables.pod6

[13:53] <Geth> ¬¶ doc: add info on adding a table caption

[13:53] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/926e0f2834

[13:53] <synopsebot> Link: https://doc.perl6.org/language/tables

[13:53] <El_Che> haven't connected since then

[13:54] <El_Che> reddit looks too much like online comments on newspapers

[13:56] <lizmat> stmuk: pl6anet.org seems irresponsive

[13:57] <lizmat> *unresponsive

[14:05] <Geth> ¬¶ doc: 1df6d75505 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/tables.pod6

[14:05] <Geth> ¬¶ doc: warn about deprecated use of config hash for captions

[14:05] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/1df6d75505

[14:05] <synopsebot> Link: https://doc.perl6.org/language/tables

[14:06] *** MilkmanDan left
[14:09] *** MilkmanDan joined
[14:11] <Geth> ¬¶ doc: 64cb6677a4 | (Sam S)++ (committed using GitHub Web editor) | doc/Type/Hash.pod6

[14:11] <Geth> ¬¶ doc: fix typo

[14:11] <Geth> ¬¶ doc: 

[14:11] <Geth> ¬¶ doc: English is not French... :P

[14:11] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/64cb6677a4

[14:11] <synopsebot> Link: https://doc.perl6.org/type/Hash

[14:11] *** xtreak left
[14:16] *** andrzejku left
[14:18] *** kaare_ joined
[14:22] *** imcsk8 joined
[14:22] *** kaare__ joined
[14:23] *** kaare_ left
[14:24] *** Xliff joined
[14:24] <Xliff> \o

[14:24] <Xliff> Happy Sunday!

[14:27] *** lizmat left
[14:35] *** gabiruh left
[14:35] *** wamba left
[14:35] *** gabiruh joined
[14:36] *** wamba joined
[14:36] *** eliasr left
[14:40] *** turdmonkey joined
[14:40] *** turdmonkey is now known as Bowlslaw

[14:40] *** sena_kun left
[14:41] *** koto joined
[14:48] <Bowlslaw> "No such method 'prase' for invocant of type 'DOM::Tiny'" praise the DOM !

[14:50] *** zakharyas joined
[14:51] *** psychoslave joined
[14:51] *** gabiruh left
[14:54] *** koto left
[14:54] *** fake_space_whale joined
[14:54] *** sena_kun joined
[14:54] *** Bowlslaw left
[15:00] <Xliff> BowlSlaw: Can you bug that?

[15:00] <Xliff> Or is that in your code? /o\

[15:07] <Xliff> Is there a beautify for gist output anywhere?

[15:11] *** araraloren_ left
[15:15] *** lizmat joined
[15:18] <tbrowder_> tyil: you around?

[15:19] *** Schepeers_ left
[15:21] <tyil> tbrowder_: hi

[15:22] *** Schepeers joined
[15:30] *** gabiruh joined
[15:31] <tbrowder_> tyil: hi. have you had a chance to try the =input/=output pod blocks yet?

[15:35] <tyil> tbrowder_: I have not, I'll do it right away

[15:37] <tyil> tbrowder_: in the test program, the IO blocks are rendering just like code blocks now (with regards to newlines and whitespace)

[15:37] <tyil> with This is Rakudo version 2018.06-32-g0990945dc built on MoarVM version 2018.06-34-g411f73fdc

[15:38] <tyil> and if I'm not mistaken, this month gets a new star release as well, so it's going to be in my default perl6 as well 

[15:38] <tyil> thanks for the fix, tbrowder_ :>

[15:41] *** smls joined
[15:42] <tbrowder_> you‚Äôre welcome‚Äîglad i could help, and thanks for finding the problem!

[15:44] <smls> I wrote a Perl 6 module: https://github.com/smls/perl6-LinkedHash

[15:44] <smls> Feedback welcome, especially about the stuff in the TODO section of the readme.

[15:47] <tbrowder_> smls: that sounds great! is it in cpan yet?

[15:47] <lizmat> smls: why %!entries{$key}:exists; in EXISTS-KEY, why not just %!entries.EXISTS-KEY($key) ?

[15:47] <smls> tbrowder_: Not yet.

[15:48] <smls> lizmat: Heh, good point.

[15:48] <lizmat> same for DELETE-KEY

[15:48] <lizmat> saves you 1 level of indirection (at least)

[15:57] <Xliff> Does anyone know the best way to add a cookie to the Cro::HTTP::Client::CookieJar class?

[15:57] <Xliff> If not, who can I ask?

[15:58] <Xliff> Actually. That should read "add a cookie to an instance of Cro::HTTP::Client::CookieJar"

[15:58] <sena_kun> Xliff, jnthn or me. Let's see if I can help you...

[15:58] <Xliff> sena_kun!! ^^

[15:58] <Xliff> How goes?

[15:59] <Xliff> sena_kun: Here's the tricky part... I can add from a response object, but I need a Cro::Uri. However I don't know how I would do that properly. I could specify the actual root dir of the server, but that would require building.

[15:59] <Xliff> ALSO! I have a related question to ask when you have a spare minute.

[16:00] <sena_kun> Xliff, I don't see obvious way to do that right now, yet I believe you can open an issue and we'll work on it.

[16:00] <Xliff> Would you accept a PR? :)

[16:00] *** zakharyas left
[16:00] <Xliff> BTW-- I did fix a minor issue.

[16:01] <Xliff> Oh! Yeah, someone merged. 

[16:01] <sena_kun> Design-wise things go into jnthn's field I believe, but you can always send a PR and it will be considered.

[16:01] *** zakharyas joined
[16:01] <sena_kun> It was me(who merged it), thanks again for your contribution. :)

[16:02] <Xliff> yw!

[16:03] <sena_kun> As for $uri needed, let's see...

[16:03] <Xliff> So yea, the related question was asking about a way to add a cookie directly to the cookie jar, so that's covered.

[16:03] <lizmat> Xliff: there's also a #cro channel

[16:04] <Xliff> Oh! My bad!

[16:04] <lizmat> but I guess sena_kun would have helped you there as well  :-)

[16:04] <Xliff> Thanks, liz

[16:05] <lizmat> fwiw, I wasn't saying that it was wrong to ask it here, but simply point out that there is a channel with better signal/noise ratio wrt to Cro questions  :-)

[16:06] <Xliff> lizmat++ # Message received as intended. ;)

[16:13] *** SCHAPiE left
[16:19] *** SCHAPiE joined
[16:21] <Xliff> sena_kun: I know you will need to run this by jnthn, so I will open an issue, but would it be a bad thing to just allow an add-cookie method to Cro::HTTP::Client::CookieJar?

[16:25] <lizmat> Xliff: is there a way to create a cookie jar separately ?

[16:28] <sena_kun> Xliff, well, the thing is CookieJar operates on CookieState rather than raw Cookie objects, so you need to either go with a cumbersome add method(not so bad) or expose CookieState(arguably worse). Personally, I don't see anything _too bad_ with that, but yet again, it is up to jnthn as I may miss something.

[16:30] <Xliff> sena_kun: Yeah. I'm looking at it now. I would basically put a new cookie in a CookieState and add it to the jar.

[16:30] <Xliff> I've submitted the issue for discussion.

[16:31] <sena_kun> Xliff++

[16:33] *** Sgeo__ left
[16:33] <lizmat> afk&

[16:33] *** Sgeo__ joined
[16:36] *** Sgeo_ joined
[16:38] <stmuk> lizmat: can't see a problem now. Maybe a glitch in the matrix?

[16:38] *** Sgeo__ left
[16:39] *** jmerelo joined
[16:39] <jmerelo> o/

[16:51] <Geth> ¬¶ doc: 7f00a2c76f | (JJ Merelo)++ | doc/Language/modules-core.pod6

[16:51] <Geth> ¬¶ doc: Eliminates the sentence about `$*REPO`

[16:51] <Geth> ¬¶ doc: 

[16:51] <Geth> ¬¶ doc: Refs #502

[16:51] <synopsebot> Link: https://doc.perl6.org/language/modules-core

[16:51] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/7f00a2c76f

[17:04] *** ExtraCrispy left
[17:06] *** zakharyas left
[17:09] *** HaraldJoerg left
[17:10] *** HaraldJoerg joined
[17:13] *** andrzejku joined
[17:16] *** zakharyas joined
[17:17] <Geth> ¬¶ doc: 9fd2e7767f | (JJ Merelo)++ | doc/Language/glossary.pod6

[17:17] <Geth> ¬¶ doc: Adds definition of repository in Rakudo/Perl 6 context

[17:17] <Geth> ¬¶ doc: 

[17:17] <Geth> ¬¶ doc: This is ripped of off @jnhtn's

[17:17] <synopsebot> Link: https://doc.perl6.org/language/glossary

[17:17] <Geth> ¬¶ doc: https://github.com/rakudo/rakudo/blob/master/docs/module_management.md

[17:17] <Geth> ¬¶ doc: with the idea of contributing towards #502 (TTBOMK, of course).

[17:17] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/9fd2e7767f

[17:17] <Geth> ¬¶ doc: fc24fafac0 | (JJ Merelo)++ | doc/Language/glossary.pod6

[17:17] <Geth> ¬¶ doc: Adds compilation unit/compunit to the glossary

[17:17] <Geth> ¬¶ doc: 

[17:17] <Geth> ¬¶ doc: It was missing so far, with compunit pointing to the definition of

[17:17] <Geth> ¬¶ doc: several compilation units. Once again, @jnthn document is essential,

[17:17] <Geth> ¬¶ doc: and definition sentence basically copypasted from there. Refs #502.

[17:17] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/fc24fafac0

[17:18] *** Zoffix left
[17:31] *** nuclearsandwich joined
[17:36] *** domidumont joined
[17:40] <El_Che>  jmerelo: whut?

[17:40] *** gabiruh left
[17:41] <AlexDaniel> jmerelo: are you sure abou $?‚Ä¶ vs $*‚Ä¶ ? These are different

[17:41] *** gabiruh joined
[17:41] *** robertle left
[17:42] <jmerelo> AlexDaniel: you mean the Rakudo pull request?

[17:42] <AlexDaniel> yea

[17:42] <jmerelo> m: say $?REPO;

[17:42] <camelia> rakudo-moar 105f4db38: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$?REPO' is not declared‚ê§at <tmp>:1‚ê§------> 3say 7‚èè5$?REPO;‚ê§¬ª

[17:42] <jmerelo> m: say $*REPO;

[17:42] <camelia> rakudo-moar 105f4db38: OUTPUT: ¬´inst#/home/camelia/.perl6‚ê§¬ª

[17:43] *** domidumont left
[17:43] <jmerelo> m: use lib </usr/lib>; say $?REPO;

[17:43] <camelia> rakudo-moar 105f4db38: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Variable '$?REPO' is not declared‚ê§at <tmp>:1‚ê§------> 3use lib </usr/lib>; say 7‚èè5$?REPO;‚ê§¬ª

[17:44] *** domidumont joined
[17:45] <jmerelo> El_Che: reacting to this https://github.com/perl6/doc/issues/502#issuecomment-401607520

[17:45] *** domidumont left
[17:47] <AlexDaniel> jmerelo: ah, maybe you're right

[17:47] <jmerelo> AlexDaniel: I haven't seen it documented, or anywhere else in the Rakudo repo. But I can eliminate that if it's not true.

[17:48] <jmerelo> AlexDaniel: that document is old, and I seem to remember there was a big change $? -> $*. But please double check in case you're not sure.

[17:48] <AlexDaniel> jmerelo: Well, I don't know. There's a bunch of $?‚Ä¶ stuff that is not implemented, like RT#124624

[17:48] <synopsebot> RT#124624 [open]: https://rt.perl.org/Ticket/Display.html?id=124624 $?KERNEL, $?DISTRO, $?VM megaticket

[17:49] <AlexDaniel> jmerelo: IIRC these did not become $*, I think both forms were intended to exist

[17:49] <jmerelo> AlexDaniel: I'll just leave it be. I think I can edit that. Let me check.

[17:50] *** psychoslave left
[17:53] <El_Che> jmerelo: I was reacting to Spain loosing, but the ticket is harsh

[17:54] *** gabiruh left
[17:54] <jmerelo> El_Che: it really is. And the problem is that it's not even remotely constructive. But the gist of it is it's wrong, it's my fault, and I've got to fix it. So back to work.

[17:55] <El_Che> jmerelo: I would try not to get demotivated by it

[17:55] <jmerelo> El_Che: about Spain: it was surprising it even proceeded out of the group phase. At the beginning it was the defense failing, now it's the forwards failing. So it was nice while it lasted

[17:56] <jmerelo> El_Che: not really. Quite the contrary. I'm getting used to them by now. 

[17:56] *** robertle joined
[17:56] <El_Che> jmerelo: I only say 1 match where Spain played (against Marocco) and I wasn't impressed

[17:57] <El_Che> jmerelo: callus around your heart is not ideal eiter

[17:57] <jmerelo> El_Che: none of them was even remotely good. I'll support Mexico now, I guess :-)

[17:57] <El_Che> jmerelo: and .be :)

[17:58] <jmerelo> El_Che: OK, I'll support them too.

[17:59] <El_Che> well, it's the part that stayed loyal to Spain until the end

[17:59] <El_Che> history must account for something :)

[17:59] <jmerelo> El_Che: you've got to have thick skin, that's unavoidable. And maybe work a bit harder. 

[17:59] <El_Che> (in contrast with out heretic neoghbours in Echt^WHolland

[17:59] <El_Che> )

[17:59] *** gabiruh joined
[17:59] <jmerelo> El_Che: that's rich :-)

[18:00] *** fake_space_whale left
[18:05] <jmerelo> m: say $*REPO;

[18:05] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´inst#/home/camelia/.perl6‚ê§¬ª

[18:08] <jmerelo> m: say $*REPO.repo-chain.perl;

[18:08] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´(CompUnit::Repository::Installation.new(prefix => "/home/camelia/.perl6"), CompUnit::Repository::Installation.new(prefix => "/home/camelia/rakudo-m-inst-1/share/perl6/site"), CompUnit::Repository::Installation.new(prefix => "/home/camelia/rakudo-m-ins‚Ä¶¬ª

[18:09] *** thowe joined
[18:17] *** stephane_ joined
[18:19] *** cog left
[18:21] *** fake_space_whale joined
[18:24] *** andrzejku left
[18:25] *** cog joined
[18:25] *** zakharyas left
[18:26] *** stephane_ left
[18:29] <Geth> ¬¶ doc: 4b237e496b | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/tables.pod6

[18:29] <Geth> ¬¶ doc: show an example of the deprecated method

[18:29] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/4b237e496b

[18:29] <synopsebot> Link: https://doc.perl6.org/language/tables

[18:40] * jmerelo says goodbye for the day

[18:41] *** Kaiepi left
[18:43] *** jmerelo left
[18:51] *** raschipi joined
[18:55] <Mithaldu> sorry that that ass wandered in here earlier. he posted something intended to be divisive, and i told him to stop it, and he both decided to argue it while insulting me, so i banned him for the arguing part

[18:55] *** psychoslave joined
[18:56] *** TreyHarris left
[18:59] <raschipi> Mithaldu: The problem as I see it is the removal message, suggesting you indeed banned him for "right wing stuff".

[19:00] <raschipi> If you had given a better ban message, he wouldn't be able to suggest a problem.

[19:00] <Mithaldu> there was another message he posted in reply to that

[19:00] <Mithaldu> he was banned for that one

[19:01] <raschipi> But the first message was indeed removed just for being right wing?

[19:01] <Mithaldu> yes

[19:02] <Mithaldu> and i'll be fully frank

[19:02] <tadzik> um, being right wing is bannable now? I thought it's only unwelcome when you're being hostile in your views

[19:03] <Mithaldu> anyone who thinks we shouldn't remove right wing bullshit on the perl reddit can go and talk to a wall as far as i am concerned

[19:03] <raschipi> I fully support banning people for being hostile, that will get a ban on right wing forums too.

[19:03] <Mithaldu> i have zero tolerance for that, and i have zero interest with anyone who wishes to discuss that aspect

[19:04] <raschipi> Really? In a Perl forum? You have heard about Larry Wall, right? You'll talk to that Wall, I suppose?

[19:05] <Mithaldu> i have no idea about his politics and i don't care as he's never posted them on the subreddit

[19:05] <El_Che> Mithaldu: thx for giving some context. However, I think you're talking about far-right or alt-right memes. I don't think you'll ban someone for a quote of Adam Smith

[19:05] <raschipi> I won't have a problem with it either if you are just honest and transparent about it and list it as a rule on the sidebar.

[19:06] <Mithaldu> raschipi: if it becomes a longterm problem i will

[19:06] <Mithaldu> El_Che: haven't heard of the guy yet. i talk specifically about espousing things in line with https://en.wikipedia.org/wiki/Right-wing_politics

[19:07] <raschipi> That article is so biased it's funny.

[19:09] <raschipi> Anyway, just list that as a rule is my suggestion, otherwise the guy is right to be pissed at you, I think.

[19:10] *** TreyHarris joined
[19:10] <Mithaldu> El_Che: also, again, i didn't ban him for posting anything, but for arguing and insulting

[19:13] *** gabiruh left
[19:14] <raschipi> Like I said, shadow rules will piss people off.

[19:16] *** spycrab0 joined
[19:17] <tadzik> my 3p is that if you ban someone for being insulting then it's completely fair, but if the feedback they see is "they hate me because I'm right-wing" then 1) they learn nothing 2) they tend to victimize themselves. And it leads to this "this mod is intolerant" nonsense rather than "oops, I guess I should've been nice and not a dick"

[19:18] <raschipi> They used a shadow rule to remove his comment and he got angry, so they used that as an excuse to ban him.

[19:18] <raschipi> Mods are openly intolerant, which is fine as long as people are told about it beforehand.

[19:19] <spycrab0> Heyo, quick question: Is there a way to use other variables than $_ as index variables in for loops, similar to for my $var... in perl5?

[19:19] <Mithaldu> tadzik: the way they interacted as well as their posting history made it clear they had no intent of becoming a real human being ever. i like giving people chances, but there was no inch possible there

[19:19] <raschipi> spycrab0: Yes, use $^a, $^b, etc.

[19:20] <tadzik> spycrab0: or for @a -> $b { }

[19:20] <tadzik> also, is your name a TF2 reference?

[19:20] <raschipi> spycrab0: Or a pointy block for @list -> $var { ... } 

[19:20] <Mithaldu> haha

[19:21] <tadzik> Mithaldu: I see

[19:21] <spycrab0> tadzik: yes it is. Although I've not played it in forever. just kinda stuck.

[19:21] <raschipi> Mithaldu: Like I said, if you want to ban people for being intolerant or agressive, go right ahead, no problems with it, just make the rules clear, that's all.

[19:21] *** domidumont joined
[19:23] <raschipi> Seves you the headache of people accusing you of being unfair.

[19:24] <tadzik> spycrab0: www.tf2sounds.com/1500

[19:24] <Geth> ¬¶ doc: 289c0ceb42 | (Tom Browder)++ (committed using GitHub Web editor) | doc/Language/tables.pod6

[19:24] <Geth> ¬¶ doc: add missing =end code

[19:24] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/289c0ceb42

[19:24] <synopsebot> Link: https://doc.perl6.org/language/tables

[19:25] <spycrab0> Is there a go-to perl6 web framework?

[19:25] <tadzik> Cro is the way to go these days

[19:26] <tadzik> though I obviously recommend giving Bailador a shot :)

[19:28] *** domidumont left
[19:29] *** fake_space_whale left
[19:32] <thowe> bailador website is down :(

[19:33] <tadzik> :(

[19:39] <spycrab0> Another stupid question: Is this the best way to embed array length in a string? say "Found $(elems(@primes)) primes"; I'm kinda used to the implicit scalar conversion from 5. 

[19:41] <tobs> m: my @elems = (1..10).grep: *.is-prime; say "Found {+@elems} primes"; say "Found @elems.elems() primes";

[19:41] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´Found 4 primes‚ê§Found 4 primes‚ê§¬ª

[19:42] <tobs> are the ones I know

[19:42] <spycrab0> Those look way nicer. thanks!

[19:46] <El_Che> m: say +('a','b','c')

[19:46] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´3‚ê§¬ª

[20:22] *** turdmonkey joined
[20:22] *** turdmonkey is now known as Bowlslaw

[20:23] <Bowlslaw> Helloooo

[20:23] <moritz> oh hai

[20:28] <Bowlslaw> i've been using more unicode

[20:28] <Bowlslaw> it's fun

[20:28] <Bowlslaw> feels weird, though

[20:45] *** Bowlslaw left
[21:07] *** robertle left
[21:16] *** sena_kun left
[21:17] *** sena_kun joined
[21:27] *** HaraldJoerg1 joined
[21:27] *** HaraldJoerg left
[21:31] *** koto joined
[21:31] *** sena_kun left
[21:33] *** HaraldJoerg1 left
[21:47] *** koto left
[21:54] *** smls left
[21:57] *** Zoffix joined
[21:59] *** MasterDuke joined
[22:03] <Zoffix> mscha: instead of the `TVal %h{TKey}` you can parametarize with `Hash[TVal,TKey]` and then you can nest it to any depth you want. Autovivification looks to be buggy tho:

[22:03] <Zoffix> m: my Hash[Int] %h; dd %h<foo><bar> = 42

[22:03] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´Type check failed in assignment to %h; expected Hash[Int] but got Hash (${})‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[22:06] <Zoffix> Bowlslaw, lots of people hate Perl 6ers in r/perl and Mithaldu harassed me and threatened with a ban when I complained as well. Just use r/perl6 for all discussions: https://www.reddit.com/r/perl6/

[22:07] <Mithaldu> fyi i actually regularly act against people who try to report perl6 stuff on the perl reddit

[22:08] <Zoffix> m: my @elems = (1..10).grep: *.is-prime; say @elems.:[+]

[22:08] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Prefix + requires an argument, but no valid term found‚ê§at <tmp>:1‚ê§------> 3(1..10).grep: *.is-prime; say @elems.:[+7‚èè5]‚ê§    expecting any of:‚ê§        prefix‚ê§¬ª

[22:08] <Mithaldu> even complained to the reddit admins because there was at least one very persistent guy who reported every perl6 post for a while

[22:09] <Zoffix> Ah, angle brackets

[22:09] <Zoffix> m: my @elems = (1..10).grep: *.is-prime; say "Found @elems.:<+> primes"

[22:09] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´Found 4 primes‚ê§¬ª

[22:09] <Zoffix> :)

[22:10] *** fake_space_whale joined
[22:10] <tobs> while we are at that, is there a way to make ".grep" looser than the range operator in the above?

[22:10] <Xliff> Uh...

[22:10] <Xliff> Zoffix: WTF?

[22:11] <tobs> (except for parentheses, of course)

[22:11] <Xliff> m: my @elems = (1..10).grep: *.is-prime; @elems.:[+].say

[22:11] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Prefix + requires an argument, but no valid term found‚ê§at <tmp>:1‚ê§------> 3s = (1..10).grep: *.is-prime; @elems.:[+7‚èè5].say‚ê§    expecting any of:‚ê§        prefix‚ê§¬ª

[22:11] <Zoffix> tobs: add a space

[22:11] <Zoffix> m: say ^10 .grep: * > 5

[22:11] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´(6 7 8 9)‚ê§¬ª

[22:11] <Xliff> m: my @elems = (1..10).grep: *.is-prime; @elems:[+].say

[22:11] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Prefix + requires an argument, but no valid term found‚ê§at <tmp>:1‚ê§------> 3ms = (1..10).grep: *.is-prime; @elems:[+7‚èè5].say‚ê§    expecting any of:‚ê§        prefix‚ê§¬ª

[22:11] *** SHODAN left
[22:11] <Zoffix> tobs: oh, you mean the `..`. No, no way, other than parens

[22:12] <Mithaldu> also, as i had clarified to you personally, i didn't threaten you with a ban, i said i had hoped to avoid putting the mod hat on when speaking to you about the tone of your posts, which is several steps removed from a ban

[22:12] <Zoffix> Xliff: it's a special syntax for using prefix operators as methods

[22:12] <Zoffix> Wonder if it's even documented...

[22:12] <Mithaldu> so please, if you talk about me publicly, be accurate

[22:12] <Xliff> Zoffix++: Cheater.

[22:12] <Zoffix> Xliff: yup: https://docs.perl6.org/routine/.:%3Cprefix%3E.html

[22:14] *** raschipi left
[22:14] <Zoffix> Mithaldu: I still have all those messages. You said "i've been holding off on using that flail"

[22:15] <Mithaldu> yes, by which i meant the flail of admonishing you in public using my mod distinguish

[22:15] <Mithaldu> to quote myself: "i have been trying to correct it in a gentle manner and without embarassing you publicly"

[22:16] <tobs> m: 1..10 andthen .grep: * > 5  # Zoffix: found my "postfix parenthesis" :)

[22:16] <camelia> rakudo-moar 82866b72b: ( no output )

[22:17] <Zoffix> tobs: heh :0

[22:17] <Zoffix> *:)

[22:18] <spycrab0> My prime program is slightly more lengthy... https://www.irccloud.com/pastebin/hIqkjkVX/

[22:18] <Zoffix> Mithaldu: I don't care any more. If you want to protect people who make fun of the disabled and ban all the Republicans, knock yourself out. r/perl isn't a place I wish to visit anyway.

[22:19] <Zoffix> spycrab0: you can write my $n = 2; $n <= 10_000; $n++ with a sequence op, BTW

[22:19] <Zoffix> ,: say (2 ‚Ä¶ 10_000).tail

[22:19] <Zoffix> m: say (2 ‚Ä¶ 10_000).tail

[22:19] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´10000‚ê§¬ª

[22:19] <Zoffix> m: say (2 ‚Ä¶ 10_000)

[22:19] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´(2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 ‚Ä¶¬ª

[22:19] <Mithaldu> you don't care because i just provided proof that you lied, and then you followed it up with another lie

[22:20] <Zoffix> Mithaldu: except your "proof" is from a different message than your "flail" threat.

[22:20] <spycrab0> Zoffix: I had a version with even more int's all over the place though and was worried that using ranges like that might slow down the script

[22:21] <Zoffix> spycrab0: yeah, the `loop` might be more performant at the moment

[22:21] <Mithaldu> it was part of the same 3 post conversation

[22:22] <Zoffix> spycrab0: hehe, you don't need `use strict` in Perl 6 programs :)

[22:22] <Zoffix> It's the default :)

[22:23] <spycrab0> I would've used ``use warnings`` too if I hadn't gotten an error...

[22:23] <Zoffix> heh :)

[22:23] <Zoffix> That's from a different language.

[22:24] <spycrab0> Talking about speed: Is there any way to manually pre-compile scripts?

[22:25] <Zoffix> spycrab0: well, just stick all the code into a module and it'll precompile. Export a single sub that calls all the things and just call that sub from a script.

[22:25] <Zoffix> spycrab0: make the `$n` in your loop an `int` as well.

[22:26] <Zoffix> spycrab0: `loop (my int $n = 2; $n <= 10_000; $n++) {`

[22:26] <spycrab0> Yeah the version I sent in here is a weird in between one.

[22:26] <spycrab0> Kept removing / readding that stuff to see if it actually did anything

[22:26] <Zoffix> spycrab0: otherwise you're hitting the non-native candidate for the %% op. Also instead of `$a % $b == 0` just use `$a %% $b`. I imagine it's faster

[22:28] <Zoffix> Is there a way to do a `do loop` but with a label? `do FOO: loop` doesn't pick it up it seems

[22:29] <spycrab0> Zoffix: Nope, actually doubles the running time.

[22:30] <spycrab0> Maybe it's not supported on native types?

[22:30] <Zoffix> m: my int @primes = do loop (my int $n = 2; $n <= 10_000; $n++) { next if @primes.first: { $n %% $_ }; $n }

[22:30] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´Type check failed in push to int array; expected int but got Mu (Mu)‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[22:30] <Zoffix> spycrab0: what's your perl6 version?

[22:30] *** rindolf left
[22:30] <spycrab0> "This is Rakudo Star version 2018.04.1 built on MoarVM version 2018.04.1"

[22:32] <Zoffix> oh yeh

[22:32] <Zoffix> almost doubles for me too

[22:32] <Zoffix> there is a native % candidate tho :/

[22:33] <Geth> ¬¶ doc: fd3645783d | (Elizabeth Mattijsen)++ | doc/Type/Scalar.pod6

[22:33] <Geth> ¬¶ doc: Added Introspection section to Scalar

[22:33] <Geth> ¬¶ doc: 

[22:33] <Geth> ¬¶ doc: Specifically the "name", "default" and "dynamic" methods were not documented

[22:33] <Geth> ¬¶ doc: yet.  And the "of" was buried in documentation about atomic ops.  Felt right

[22:33] <synopsebot> Link: https://doc.perl6.org/type/Scalar

[22:33] <Geth> ¬¶ doc: to create a separate Introspection section

[22:33] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/fd3645783d

[22:35] <MasterDuke> m: my $a; for ^1_000_000 -> $i { $a = $i % 7 == 0 }; say $a; say now - INIT now

[22:35] <yoleaux> 03:22Z <Zoffix> MasterDuke: did some digging into the `multi z(42)` thing. Looks like the perf rewrite works fine in `sub`s, but in `multi`es, stuff becomes 10x slower and I think just drowns out the improvement. Filed as R#2002

[22:35] <synopsebot> R#2002 [open]: https://github.com/rakudo/rakudo/issues/2002 [perf] `where` in single `multi` vs. `sub` is 10x slower

[22:35] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´True‚ê§0.505614‚ê§¬ª

[22:35] <Zoffix> ah, it's not the `%` op, it's the .push on native array

[22:36] <MasterDuke> m: my $a; for ^1_000_000 -> int $i { $a = $i % 7 == 0 }; say $a; say now - INIT now

[22:36] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´True‚ê§0.1875295‚ê§¬ª

[22:36] <Zoffix> m: my int @a; loop (my $n = 2; $n <= 10_000_000; $n++) { @a.push: $n }; say now - ENTER now

[22:36] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´1.5518815‚ê§¬ª

[22:36] <Zoffix> m: my int @a; loop (my int $n = 2; $n <= 10_000_000; $n++) { @a.push: $n }; say now - ENTER now

[22:36] <MasterDuke> m: my $a; for ^1_000_000 -> $i { $a = $i %% 7 }; say $a; say now - INIT now

[22:36] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´3.31587918‚ê§¬ª

[22:36] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´True‚ê§0.4095549‚ê§¬ª

[22:36] <MasterDuke> m: my $a; for ^1_000_000 -> int $i { $a = $i %% 7 }; say $a; say now - INIT now

[22:36] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´True‚ê§0.36197587‚ê§¬ª

[22:36] <Zoffix> s: (my int @a), 'push', \(my int $)

[22:36] <SourceBaby> Zoffix, Sauce is at https://github.com/rakudo/rakudo/blob/82866b72b/src/core/native_array.pm6#L626

[22:37] <Zoffix> ¬Ø\_(„ÉÑ)_/¬Ø

[22:37] <lizmat> yeah not a lot you can do there

[22:37] <Zoffix> lizmat: but what makes it 2x slower than non-native?

[22:37] <Zoffix> Like, I'd take if speed were the same, but slower?

[22:37] <lizmat> are you sure the native int candidate is run ?

[22:38] <lizmat> because if not, then the boxing / unboxing is to blame I guess

[22:38] <Zoffix> Most likely. That's how SourceBaby finds the sauce. It calls .line/file on the candidate

[22:38] * Zoffix benches

[22:39] <MasterDuke> it's also weird that `%%` is slower than `% == 0`

[22:39] <Zoffix> yeah, the int candidate

[22:39] <Zoffix> There are also 9999999 sink calls.

[22:40] <Zoffix> presumably that's what getting boxed?

[22:40] <lizmat> aahh

[22:40] <Zoffix> s/getting/causing/;

[22:40] <lizmat> probably, yes

[22:40] <MasterDuke> though in both of those cases the native version is indeed faster

[22:41] <Zoffix> m: use nqp; my int @a = 1, 2, 3; dd nqp::push_i(@a, my int $value);

[22:41] <camelia> rakudo-moar 82866b72b: OUTPUT: ¬´0‚ê§¬ª

[22:41] <Zoffix> hm, wonder if sticking `my int $ = ` over here would improve it: https://github.com/rakudo/rakudo/blob/82866b72b/src/core/native_array.pm6#L627

[22:42] <Zoffix> or rather, sticking it into the special file that gens that code

[22:44] <lizmat> fwiw, not calling sink on native values in void context, would be better

[22:44] <Zoffix> yeah

[22:44] <lizmat> also: the IntLexRef objects that get created are *RED* in the overview: which indicates they are coming from code running in the interpreter ?

[22:45] <Zoffix> hm, p6sink already got a conditional as `if $sinkee_res.result_kind == $MVM_reg_obj {`

[22:45] *** psychoslave left
[22:45] <spycrab0> Could I prealloc the memory for `@primes` somehow? Would be nice to not have that happen on the fly especially since I know an upper limit as to how many primes there can be per range.

[22:46] <spycrab0> I guess I could just $primes[1000] = 0; or something and use an index.

[22:46] <Zoffix> spycrab0: `my int @primes[1000000000]`

[22:46] <tobs> btw, I stumbled on this error message typo yesterday. Making a PR seems overly bureaucratic or do you still prefer it? https://github.com/rakudo/rakudo/compare/master...taboege:typo-immediately

[22:47] <Zoffix> tobs: merged. Thanks

[22:48] <tobs> o7

[22:50] <lizmat> spycrab0 : if you're interested in memory consumption *and* the prime numbers are in the 64bit range, then you probably want to work with a native int array

[22:53] <lizmat> sleep&

[22:55] <Zoffix> I think they already are using it

[22:56] *** mscha left
[22:56] *** epony left
[22:58] <Zoffix> nope, adding `my int $` to that place didn't fix the slowdown

[22:58] * Zoffix wishes `--profile --profile-filename=out.html` were just `--prof=out.html`

[22:59] <Zoffix> oh it's the array itsel fthat sinks

[23:04] <Zoffix> oh wait, it's the method argument boxing

[23:04] <Zoffix> Forgot that happens

[23:04] <Zoffix> m: class Foo { method z (int $x) {} }; my int $z = 42; for ^10_000_000 { Foo.z: $z; }; say now - ENTER now

[23:04] <camelia> rakudo-moar 4bdb9787d: OUTPUT: ¬´4.0402742‚ê§¬ª

[23:04] <Zoffix> m: class Foo { method z (int $x) {} }; my $z = 42; for ^10_000_000 { Foo.z: $z; }; say now - ENTER now

[23:04] <camelia> rakudo-moar 4bdb9787d: OUTPUT: ¬´2.2502544‚ê§¬ª

[23:05] <Zoffix> And jnthn mentioned wanting to work on this in medium-term future, to make it not box.

[23:06] *** jast left
[23:06] <Xliff> Is there anything in META6.json for specifying perl5 modules for Inline::Perl5?

[23:08] <Zoffix> Filed R#2007

[23:08] <synopsebot> R#2007 [open]: https://github.com/rakudo/rakudo/issues/2007 [perf] Native parameters perform boxing

[23:10] *** jast joined
[23:10] *** TreyHarris left
[23:12] *** TreyHarris joined
[23:12] <spycrab0> Didn't think my shitty script would actually result in the discovery of a bug, lol.

[23:19] <Zoffix> spycrab0: actually just using normal array makes it a lot faster too. I get 4605 P/s on this one: https://gist.github.com/zoffixznet/fbd3578cc9e2d75d9b7daae6b83c1b31

[23:20] *** pmurias left
[23:25] *** Zoffix left
[23:31] *** turdmonkey joined
[23:41] *** MasterDuke left
[23:49] *** wamba left
[23:51] *** turdmonkey is now known as Bowlslaw

[23:51] <Bowlslaw> concurrency is awesome

[23:52] <Bowlslaw> react whenever is sweeeeet

[23:52] <Bowlslaw> I kinda get it now. I think

[23:55] <AlexDaniel> Bowlslaw: can you explain it to me? What react whenever does?

[23:56] <AlexDaniel> and why is it awesome

[23:57] <hobbs> it reacts! Whenever.

[23:57] <Bowlslaw> well

[23:57] <Bowlslaw> exactly

[23:57] <Bowlslaw> what hobbs says

[23:57] * Bowlslaw whistles a cheery tune

[23:58] <AlexDaniel> m: react { whenever Promise.in(1) { sleep ‚àû }; whenever Promise.in(2) { say ‚ÄòIt reacts! Whenever‚Äô }; }

[23:58] <Bowlslaw> LOL

[23:58] <camelia> rakudo-moar 4bdb9787d: OUTPUT: ¬´(timeout)¬ª

[23:58] <AlexDaniel> hobbs: well, that didn't react

[23:58] <Bowlslaw> He did say 'whenever'

[23:59] <hobbs> whenever it feels like :)

[23:59] <Bowlslaw> hobbs++

[23:59] <AlexDaniel> well, to be honest, our docs on roact totally suck

[23:59] <AlexDaniel> react*

