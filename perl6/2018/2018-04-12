[00:00] <Zoffix> hm, for some reason it stopped working. I run `resume` and it doesn't break at the breakpoint

[00:00] *** mcmillhj joined
[00:01] <Zoffix> 1) start the script; 2) start moar-remote; 3) type `assume thread 1`; 4) type `breakpoint "src/Perl6/World.nqp" 4240 1 1`; 5) type resume

[00:02] <Zoffix> Ah, it was a blank line in the code; I guess it gets eliminated

[00:02] <timotimo> yeah, there's a missing feature

[00:03] <timotimo> since we lazily deserialize frames and such, we don't immediately know what lines are even there to begin with

[00:03] <timotimo> so currently we just accept anything the user throws at us

[00:03] <Zoffix> still says lexicals 0; gonna try with --optimize=off... That's for rakudo, not MoarVM, right?

[00:03] <timotimo> what we'll want to have is a way to figure out if setting a breakpoint on a given line that's a "hole" would want the previous or the next line, because it could be right on a routine boundary for example

[00:03] <timotimo> that's for rakudo, yes

[00:04] <timotimo> that should disable lexical-to-local lowering

[00:04] <timotimo> in the future we'll be able to inspect locals, too, but that's a bit tricky

[00:04] <timotimo> since at the time we're past the compiler, the names will have gone, and we'll have one register potentially storing the values for different local variables at different points in the bytecode

[00:04] <timotimo> that'll be a bit of design work

[00:05] <timotimo> anyway, yeah :)

[00:05] *** mcmillhj left
[00:07] *** vcv joined
[00:10] <timotimo> oh, be warned: stepping is currently ... underimplemented

[00:10] <timotimo> only "step into" actually does anything, and backtraces have super weird line numbers more than half the time

[00:11] <timotimo> thankfully, "step into" is also what it does when you just "step"

[00:13] *** skids joined
[00:13] <Zoffix> Well, it still says no lexicals. And all lexicals says "Frame 0" is can_has_coercers, which is the method I got my variable's at: https://gist.github.com/zoffixznet/ed56853f44b90fd9a7bf1dfbb86629de#file-p6-p6-L23

[00:13] <Zoffix> But I don't see it anywhere in all lexicals: https://gist.github.com/zoffixznet/2bf444e9f0d716af935d9c73c2498960

[00:14] *** mcmillhj joined
[00:14] <timotimo> hm, perhaps the $/ in number 213 is good enough?

[00:15] <timotimo> since it'd mostly have parts of itself passed down to other action methods?

[00:15] <timotimo> i do agree this sucks, though

[00:15] <timotimo> i was close to implementing getting the arguments to any frame, but man our argument passing code is weird and i am too flu'd up to do well at this

[00:15] <Zoffix> Ah right

[00:16] <Zoffix> I'm sick now too. I think I caught it from you!!

[00:16] <Zoffix> :)

[00:16] <timotimo> nnnoooooooooo

[00:16] <timotimo> was it because you forked my code? :<

[00:16] <timotimo> isn't this how bacteria spreads? by forking themselves?

[00:17] <skids> .oO(why I so rarely go to cons)

[00:17] <timotimo> not actually sure whether i have a flu or a cold or whatever

[00:17] <timotimo> i.e. bacterial or viral. none of this matters right now!

[00:18] <Zoffix> timotimo: "once you have an object you're interested in". How do I get it? What's between `all lexicals` and `metadata` commands?

[00:19] *** mcmillhj left
[00:19] <Zoffix> Ah, the handle

[00:19] *** comborico1611 left
[00:19] *** markong left
[00:19] <Zoffix> hahaha "p6opaque_ass_delegate"

[00:20] <Zoffix> and "p6opaque_body_replaced"

[00:20] <Zoffix> Do I want the ass or the body? ^_^

[00:20] <skids> I hereby delegate my ass to...

[00:21] <Zoffix> Well, metadata gave me stuff, but I don't know what's next: https://gist.github.com/zoffixznet/99bf8dec72b8184897b895f54dd0ed37

[00:22] <timotimo> you'll want "attributes 425"

[00:22] <timotimo> the words that show up in the features field are also commands you can use on handles

[00:23] <Zoffix> timotimo: what's next? https://gist.github.com/zoffixznet/9a028cbe10a47b6e57c2bb9efef80d2a

[00:24] <timotimo> looks like you want 430 and 431, the first one will let you "positionals", the second one will let you "associatives"

[00:24] <Zoffix> Or is that it? It's an empty array which is why it was giving me null before? But then I don't get how that .dump turned up :/

[00:25] <Zoffix> Oh, wait we're dumping $/, not $target-el

[00:25] <timotimo> here's where i'd love to tell you you can "reverse-cont", but time-travelling debugging is really not easy

[00:26] <Zoffix> wait, it's working!! :D

[00:26] <timotimo> YES! /o\

[00:28] *** mcmillhj joined
[00:28] <timotimo> if you do stuff with the debugger in the future, please be aware that having a handle on something will cause that object to be kept alive until the handle is released 

[00:28] <timotimo> releasing lots of handles is of course currently totally awkward :P

[00:29] <timotimo> unless you "release all keep 1 2 3 4" (which only refers to the last command that gave you handles)

[00:31] <Zoffix> Ohhhhhh. Now I freaking get it

[00:31] <Zoffix> It's a <colonpair> with an empty key,

[00:31] <timotimo> this is potentially the first bug that really got nailed with the debug remote

[00:32] <Zoffix> :D

[00:32] <timotimo> i might already be asleep when celebration commences

[00:33] *** mcmillhj left
[00:33] * Zoffix recompiles to see if the debugger was right :)

[00:33] *** dugdig joined
[00:36] <timotimo> the big strength of the debug remote will be that it'll reduce re-compile cycles to hopefully about 10% or something :D

[00:38] <Zoffix> uhh, nope. I think I added a `[0]` that shouldn't be there

[00:38] * Zoffix re-tries

[00:40] <Herby_> timotimo: that's awesome :)

[00:40] <Zoffix> oh, I may have misread the debugger... Re-reading the session and I don't see where I got the empty key from :P

[00:41] <timotimo> oh no :<

[00:42] *** mcmillhj joined
[00:47] *** mcmillhj left
[00:47] *** athenot left
[00:49] <timotimo> sloop time

[00:57] *** vcv left
[00:58] *** zachk left
[00:58] *** mcmillhj joined
[00:58] *** pharv left
[00:59] *** pharv joined
[01:03] *** pharv left
[01:03] *** mcmillhj left
[01:05] <Zoffix> .tell timotimo I followed the debugger's trace and got the code to work :) Success!

[01:05] <yoleaux> Zoffix: I'll pass your message to timotimo.

[01:11] *** albongo left
[01:14] *** mcmillhj joined
[01:19] *** mcmillhj left
[01:38] *** undersightable6 joined
[01:41] *** mcmillhj joined
[01:45] *** mcmillhj left
[01:47] *** ilbot3 left
[01:49] *** pharv joined
[01:54] *** pharv left
[01:56] *** ilbot3 joined
[01:56] *** ChanServ sets mode: +v ilbot3

[01:57] *** mcmillhj joined
[02:00] *** aa_ joined
[02:01] <aa_> hello anybody here

[02:01] <SmokeMachine> m: use Test; is now.Int - 37, time # why now is 37 seconds greater then time?

[02:01] <camelia> rakudo-moar 72c7c5bf4: OUTPUT: ¬´ok 1 - ‚ê§¬ª

[02:02] *** aa_ left
[02:02] *** mcmillhj left
[02:07] *** mcmillhj joined
[02:08] <geekosaur> o.O

[02:12] *** notostraca is now known as TEttinger

[02:12] *** mcmillhj left
[02:20] <[Coke]> leap seconds?

[02:26] <skids> ehhhh.... now that's.... strange?

[02:26] <[Coke]> https://en.wikipedia.org/wiki/Leap_second - look at Current TAI ‚àí UTC

[02:27] <skids> Oh.

[02:27] <[Coke]> still weird and I'm guessing needs more docs. :)

[02:27] *** mcmillhj joined
[02:27] <SmokeMachine> shouldn't it be 1 second?

[02:28] <SmokeMachine> hum!!! 37 leap seconds!

[02:33] *** mcmillhj left
[02:35] <Geth> ¬¶ doc: 272759f786 | (Zoffix Znet)++ | doc/Language/terms.pod6

[02:35] <Geth> ¬¶ doc: Point out leap sec diff between `now` and `time`

[02:35] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/272759f786

[02:35] <synopsebot> Link: https://doc.perl6.org/language/terms

[02:37] *** quotable6 joined
[02:38] *** kurahaupo left
[02:40] *** mcmillhj joined
[02:45] *** mcmillhj left
[02:45] * skids wonders if there is a name for the time interval between leap seconds akin to "age"/"era"

[02:51] <skids> could be a fun "geek code a" extension... "what leap second were you born under"?

[02:53] <[Coke]> I was born before leap seconds. :|

[02:56] *** mcmillhj joined
[02:57] *** ufobat___ joined
[02:59] <skids> Well, TAI started with 10 retroactive seconds embedded... before even those?

[03:00] *** mr_ron left
[03:01] *** mcmillhj left
[03:01] *** ufobat_ left
[03:12] *** mcmillhj joined
[03:12] *** eliasr left
[03:14] <SmokeMachine> do you guys thinks this (https://github.com/FCO/test-time) make any sense?

[03:14] <SmokeMachine> s/thinks/think/

[03:17] *** mcmillhj left
[03:18] *** mr_ron joined
[03:22] *** mcmillhj joined
[03:27] *** mcmillhj left
[03:29] <skids> Could be useful.  Do we currently have any tests that have the VM lie about time?

[03:31] <SmokeMachine> Not that I know... but I have a module test flopping because sleep some times waits to much... so I thought to use something like this...

[03:33] *** mcmillhj joined
[03:37] *** mcmillhj left
[03:44] *** kybr left
[03:47] *** mcmillhj joined
[03:52] *** mcmillhj left
[03:56] *** skids left
[04:03] *** mcmillhj joined
[04:07] *** mr_ron left
[04:08] *** wamba joined
[04:08] *** mcmillhj left
[04:11] *** tt left
[04:16] *** mcmillhj joined
[04:17] *** khw left
[04:19] *** Actualeyes joined
[04:20] *** mcmillhj left
[04:31] <Herby_> beginner question...

[04:31] *** dct joined
[04:32] <Herby_> https://github.com/nxadm/rakudo-pkg/blob/master/README.md

[04:32] <Herby_> half way down the page it talks about adding perl6/rakudo to a .travis.yml file

[04:32] <Herby_> at a highlevel, what is the purpose of that .travis.yml file?

[04:32] *** mcmillhj joined
[04:37] *** mcmillhj left
[04:42] *** herby__ joined
[04:42] *** herby__ left
[04:48] *** mcmillhj joined
[04:53] *** mcmillhj left
[05:03] *** mcmillhj joined
[05:04] *** jmerelo joined
[05:07] <Herby_> disregard the question above :)

[05:08] <jmerelo> Herby_: I'm going to do a pull request anyway to make clear it's for continuous integration using Travis (and other CI systems that use it too)

[05:09] *** mcmillhj left
[05:09] *** dct left
[05:10] <Herby_> jmerelo: thanks!

[05:10] *** sauvin joined
[05:11] *** aindilis left
[05:15] *** mcmillhj joined
[05:19] <jmerelo> Herby_: What documentation did you check for the profiler? (from https://irclog.perlgeek.de/perl6/2018-04-11#i_16032533)

[05:20] *** mcmillhj left
[05:20] <Herby_> jmerelo: the "profile locally" section on this page https://docs.perl6.org/language/performance

[05:21] <Herby_> I was thinking that a "the most basic example of how to profile" might be useful for beginners that stumble upon it

[05:21] <Herby_> i initially saw all that sql stuff and my eyes glazed over

[05:21] <Herby_> but its likely not a problem for non-novices

[05:21] <jmerelo> Herby_: can you please write an issue for that? We'll try to fix it.

[05:22] <jmerelo> Herby_: well, nowadays with NoSQL and everything not everyone knows sql... 

[05:23] <jmerelo> Herby_: This line "To learn how to interpret the profile info, use the prof-m: your code goes here evalbot (explained above) and ask questions on the channel." is kinda "Leave interpretation to the adults, don't even try..."

[05:23] <jmerelo> Herby_: so please create an issue in perl6/doc

[05:23] <jmerelo> https://github.com/perl6/doc/issues

[05:24] <Herby_> jmerelo: will do. I'm still a bit new to contributing to open source but tomorrow I will see if I can create a simple example of how to profile locally, and I will submit an issue for that blurb you mentioned

[05:24] <Herby_> I'm off to bed

[05:25] <jmerelo> Herby_: Thanks!

[05:25] <Herby_> i'll idle in the channel, so if there are any other low-hanging fruit you'd like to be try and resolve, just let me know :)

[05:25] <Herby_> o/

[05:25] <jmerelo> Herby_: thanks again :-)

[05:26] <jmerelo> See you tomorrow

[05:26] *** mcmillhj joined
[05:31] *** mcmillhj left
[05:34] *** robertle left
[05:34] *** wamba left
[05:45] *** mcmillhj joined
[05:50] *** mcmillhj left
[06:02] *** wamba joined
[06:04] *** mcmillhj joined
[06:04] *** brrt joined
[06:09] *** mcmillhj left
[06:12] *** HaraldJoerg joined
[06:13] *** espadrine_ left
[06:15] *** mcmillhj joined
[06:19] *** mcmillhj left
[06:21] *** robertle joined
[06:22] *** aindilis joined
[06:28] *** tyil joined
[06:29] *** mcmillhj joined
[06:30] <jmerelo> tyil: your PR to linguist is on https://github.com/github/linguist/pull/4083

[06:30] <tyil> jmerelo: thanks for the headsup

[06:30] <tyil> I just woke up though (about 5 minutes ago)

[06:31] <jmerelo> tyil: I don't know what's left there. Everything seems to be OK. You're probably aware of this https://github.com/github/linguist/pull/3366#issuecomment-380467950

[06:32] <tyil> I was aware of the PR, not of the latest comments

[06:34] *** mcmillhj left
[06:34] * jmerelo asks everyone to StackOverflow it! http://blogs.perl.org/users/jj_merelo/2018/04/stackoverflow-that.html

[06:35] <tyil> jmerelo++

[06:37] *** brrt left
[06:38] *** brrt joined
[06:38] *** AlexDaniel left
[06:40] *** domidumont joined
[06:41] *** darutoko joined
[06:42] *** mcmillhj joined
[06:45] *** rindolf joined
[06:47] *** domidumont left
[06:47] *** mcmillhj left
[06:47] *** mr_ron joined
[06:48] *** domidumont joined
[06:54] <AlexDaniel`> weekly: > * jmerelo (IRC) asks everyone to StackOverflow it! http://blogs.perl.org/users/jj_merelo/2018/04/stackoverflow-that.html

[06:54] <notable6> AlexDaniel`, Noted!

[06:57] *** mcmillhj joined
[07:02] *** mcmillhj left
[07:04] *** |oLa| joined
[07:09] *** mcmillhj joined
[07:14] *** mcmillhj left
[07:18] <Geth> ¬¶ doc: 44eebac07c | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Language/modules.pod6

[07:18] <Geth> ¬¶ doc: Remove incorrect information about deprecation of p6c

[07:18] <Geth> ¬¶ doc: 

[07:18] <Geth> ¬¶ doc: Missed during review of the original PR

[07:18] <Geth> ¬¶ doc: https://github.com/perl6/doc/pull/1647

[07:18] <synopsebot> Link: https://doc.perl6.org/language/modules

[07:18] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/44eebac07c

[07:19] *** domidumont left
[07:20] *** domidumont joined
[07:21] *** domidumont1 joined
[07:22] *** mcmillhj joined
[07:23] *** imcsk8_ is now known as imcsk8

[07:24] *** domidumont1 left
[07:24] *** domidumont left
[07:24] *** imcsk8 left
[07:24] *** imcsk8 joined
[07:25] *** domidumont joined
[07:27] *** mcmillhj left
[07:27] *** pharv joined
[07:32] *** pharv left
[07:33] <Geth> ¬¶ doc: c28d37b262 | (JJ Merelo)++ | doc/Language/modules.pod6

[07:33] <Geth> ¬¶ doc: Adds .pod6 to the list of extensions, closes #1919

[07:33] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/c28d37b262

[07:33] <synopsebot> Link: https://doc.perl6.org/language/modules

[07:37] *** mcmillhj joined
[07:40] *** dakkar joined
[07:42] *** mcmillhj left
[07:50] *** AlexDaniel joined
[07:51] *** ufobat___ is now known as ufobat

[07:52] *** mcmillhj joined
[07:52] <ufobat> is this supposed to work: https://glot.io/snippets/f01j72rq12 (It's an Inline::Perl5 question)

[07:54] *** scimon joined
[07:55] <moritz> ufobat: maybe related to https://github.com/niner/Inline-Perl5/issues/102 ?

[07:56] *** zakharyas joined
[07:56] *** araujo left
[07:56] *** mcmillhj left
[07:57] <ufobat> *Shrug*

[07:59] * moritz shrugs back

[08:05] *** xinming_ joined
[08:08] *** mcmillhj joined
[08:08] *** xinming left
[08:13] *** mcmillhj left
[08:23] *** kurahaupo joined
[08:27] *** mcmillhj joined
[08:29] *** Zoffix left
[08:32] *** mcmillhj left
[08:34] *** wamba left
[08:38] *** wamba joined
[08:44] *** mcmillhj joined
[08:44] <buggable> New CPAN upload: P5lc-0.0.3.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5lc-0.0.3.tar.gz

[08:49] *** mcmillhj left
[08:53] *** vike left
[08:54] *** mcmillhj joined
[08:54] <buggable> New CPAN upload: P5lcfirst-0.0.4.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5lcfirst-0.0.4.tar.gz

[08:57] *** zakharyas left
[08:57] *** zakharyas joined
[08:59] *** mcmillhj left
[09:04] *** vike joined
[09:04] <buggable> New CPAN upload: P5index-0.0.3.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5index-0.0.3.tar.gz

[09:06] *** TEttinger left
[09:09] *** mcmillhj joined
[09:11] *** markong joined
[09:14] *** mcmillhj left
[09:15] *** Actualeyes left
[09:24] *** mcmillhj joined
[09:29] *** pharv joined
[09:29] *** sena_kun joined
[09:29] *** mcmillhj left
[09:30] *** llfourn left
[09:33] *** pharv left
[09:35] <Ulti> are commits welcome on the docs.perl6.org output format? Im getting really annoyed with the table of contents being this huge thing I have to scroll through to get to the meat of the article when it could just be rendered in the endless white space I have either side of the 800px fixed width content

[09:37] *** mcmillhj joined
[09:39] <Ulti> "Routines supplied by class Any/Mu" are especially annoying

[09:40] <ufobat> personally i'd like your idea :)

[09:42] *** mcmillhj left
[09:43] *** rindolf left
[09:49] <El_Che> Ulti++

[09:49] <El_Che> Ulti: thx a lot. It didn't bother me bofore, but it does now :)

[09:50] <timotimo> i'm amazed, github will let me commit directly to someone's branch that's the base for a pull-request i have?

[09:50] <yoleaux> 01:05Z <Zoffix> timotimo: I followed the debugger's trace and got the code to work :) Success!

[09:50] *** wamba left
[09:52] <Ulti> El_Che: now I've mentioned it and ruined the illusion, or its gotten worse for you recently

[09:52] <Ulti> Im not sure if something has changed because its only started annoying me more recently

[09:54] <Geth> ¬¶ doc: 72c2b9019c | (Zoffix Znet)++ | assets/sass/style.scss

[09:54] <Geth> ¬¶ doc: Collapse to TOC-on-a-side layout on narrower widths

[09:54] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/72c2b9019c

[09:55] *** zakharyas left
[09:56] *** zakharyas joined
[09:57] <Ulti> dun dun dun

[09:59] <Ulti> Zoffix++ as Im assuming that will tweak it for me 

[09:59] *** rindolf joined
[09:59] <Ulti> I was just getting interested in pod to bigpage and how all the docs are built :3

[09:59] <El_Che> Zoffix is omnipresent

[10:00] <Ulti> ask and ye shall receive 

[10:00] <El_Che> "Do my laundry"

[10:00] <Ulti> hah

[10:00] <El_Che> nope

[10:00] <Ulti> "I would really like perl6 --deep-auto-code=doitforme

[10:02] <jast> I'm pretty sure the result would look like code without actually doing anything sensible :)

[10:03] <Ulti> I dunno you could make it like google translate where one deep net just looks at Perl 5 on CPAN and creates a percept that the perl6 network can then generate code from

[10:03] <Ulti> even if it got close thats nicer than an empty file

[10:06] <jast> I kind of like the minimalism of an empty file ;)

[10:06] *** zakharyas left
[10:07] *** zakharyas joined
[10:07] *** wamba joined
[10:08] *** wamba left
[10:08] <Ulti> it never fails to compile either

[10:11] *** broquaint joined
[10:11] <jmerelo> Ulti: You're not the only one https://github.com/perl6/doc/issues/1916

[10:11] *** zakharyas left
[10:12] <jmerelo> Ulti: and yes, pull requests are _very_ welcome.

[10:12] <Ulti> well I just got a clone of the repo to play with

[10:13] <jmerelo> Ulti++

[10:13] <Ulti> I think Zoffix just "fixed" the major problem of vertical space

[10:13] <jmerelo> Ulti: please bear in mind that there's a mapping from repo-to-site that is not totally straightforward. And it's called htmlify.p6

[10:13] <Ulti> yeah I saw in the makefile

[10:14] <Ulti> and that the html is a little bit interlaced with the structure of the docs

[10:14] *** zakharyas joined
[10:14] *** rindolf left
[10:14] <jmerelo> Ulti: That's correct. You can voice your support in the issue, too. That way if we eventually decide to change that we'll have enough arguments to do it.

[10:15] <Ulti> will do

[10:15] <jmerelo> Ulti: thanks! :-)

[10:16] *** wamba joined
[10:17] *** zakharyas left
[10:18] <Ulti> oh man Zoffix++ that change already hit the server

[10:18] <Ulti> so much nicer

[10:20] <jmerelo> Zoffix: maybe you can do https://github.com/perl6/doc/issues/650 as long as you're dealing with that?

[10:20] <Geth> ¬¶ doc: JJ self-unassigned Squished table cells on mobile https://github.com/perl6/doc/issues/650

[10:20] <jmerelo> (I can self-assign it again if not)

[10:25] <mr_ron> .tell moritz could you please look at https://irclog.perlgeek.de/perl6/2018-04-11#i_16036613

[10:25] <yoleaux> mr_ron: I'll pass your message to moritz.

[10:28] *** zakharyas joined
[10:30] *** mcmillhj joined
[10:32] *** zakharyas left
[10:32] *** brrt left
[10:33] *** zakharyas joined
[10:35] *** mcmillhj left
[10:37] *** sena_kun left
[10:38] *** sena_kun joined
[10:39] *** sena_kun left
[10:48] *** mcmillhj joined
[10:53] *** mcmillhj left
[11:03] <lizmat> mr_ron: if you think it is a problem, please make it a rakudo issue  

[11:04] <timotimo> i think this is not backtracking but just failing one branch and going to the next

[11:04] <timotimo> otherwise you could never use || in tokens at all

[11:04] *** zakharyas left
[11:04] <timotimo> mr_ron: does that make sense to you?

[11:04] <buggable> New CPAN upload: P5chr-0.0.4.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5chr-0.0.4.tar.gz

[11:05] *** zakharyas joined
[11:05] *** mcmillhj joined
[11:06] *** zakharyas left
[11:10] *** mcmillhj left
[11:14] <buggable> New CPAN upload: P5hex-0.0.4.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5hex-0.0.4.tar.gz

[11:18] <mr_ron> m: my token param-y1 { ^ [ [ <[mn]>+ {say 'matched first word'} '=' \w+  ] || <[ab]>+ ] $ }; say so 'a' ~~ /<param-y1>/; # no backtracking

[11:18] <camelia> rakudo-moar 2ae3f484c: OUTPUT: ¬´True‚ê§¬ª

[11:19] <mr_ron> m: my token param-y { ^ [ [ \w+ {say 'matched first word'} '=' \w+  ] || <[ab]>+ ] $ }; say so 'a' ~~ /<param-y>/; # backtracks - think it should not

[11:19] <camelia> rakudo-moar 2ae3f484c: OUTPUT: ¬´matched first word‚ê§True‚ê§¬ª

[11:19] <moritz> mr_ron: trying different alternsatives does not count as backtracking

[11:19] <yoleaux> 10:25Z <mr_ron> moritz: could you please look at https://irclog.perlgeek.de/perl6/2018-04-11#i_16036613

[11:20] *** albongo joined
[11:20] *** albongo left
[11:20] *** albongo joined
[11:20] <moritz> backtracking is if a single regex element once matched some chars, and now needs to match a different amount

[11:21] <moritz> but in this case, it's a single <elem1> || <elem2>, and neither backtracks

[11:21] <moritz> just elem1 fails, and so elem2 is tried

[11:23] <mr_ron> looking ...

[11:24] <buggable> New CPAN upload: P5chomp-0.0.3.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5chomp-0.0.3.tar.gz

[11:29] *** eliasr joined
[11:29] *** pharv joined
[11:30] <mr_ron> In Perl 5 this fails with (*PRUNE) but works if you take the prune out: perl -E 'say "a" =~ qr/ ^ (?: (?: \w+ (*PRUNE) = \w+ ) | [ab]+  ) $ /x;'

[11:33] <mr_ron> Is this difference documented anyplace?

[11:34] <woolfy> Hmpf... me sad...    https://insights.dice.com/2018/04/05/perl-uncertain-future-tiobe-index/

[11:34] <El_Che> hey woolfy 

[11:34] *** pharv left
[11:35] <El_Che> (it's perl6's fault according to the article :) )

[11:35] <El_Che> little too simplistic, though

[11:35] <jmerelo> woolfy: also this http://blogs.perl.org/users/mithaldu/2013/08/do-your-piece-to-fix-tiobe-or-stop-talking-about-it.html (seen in Wendy's presentation)

[11:35] <gfldex> woolfy: please note that TIOBE mostly measures ignorance

[11:35] <El_Che> although Perl is loosing mind share

[11:36] <AlexDaniel> I don't get that article

[11:37] <AlexDaniel> the whole tiobe index makes no sense to me

[11:37] <El_Che> it doesn't

[11:37] <AlexDaniel> Delphi is 11th, Go is 19th

[11:37] <woolfy> The comments are very interesting...   Choroba: "The site adds a ‚ÄúRelated Jobs‚Äù frame that lists over 2400 open Perl jobs.  There‚Äôs  another possibility for developers and pros who still rely on Perl:  stop reading Tiobe. Or maybe just come back for fun in 2028 to see what  they predicted in 2018."

[11:37] <tadzik> it's a measurement, but not exactly of language popularity

[11:37] <AlexDaniel> ‚ÄúPerl‚Äù went from 10th to 16th, so still ahead of Go

[11:37] <woolfy> Christian Walde: "TIOBE‚Äôs  results are entirely bogus, because their method for ranking data is  completely bunk. Anyone trying to draw any conclusions from their ‚Äúwork‚Äù  might as well be reading tea leaves. Please stop  reporting on TIOBE, or heck, maybe even write an article that  investigates why it‚Äôs broken. Journalism and all that. I‚Äôd be happy to  help."

[11:38] <tadzik> rather "which language people google for the most when they struggle with it"

[11:38] <AlexDaniel> do people struggle often with Delphi nowadays?

[11:38] <AlexDaniel> rly?

[11:38] <tadzik> if your language has excellent documentation that everyone knows where to look for... ;)

[11:38] <AlexDaniel> maybe I don't know something‚Ä¶

[11:38] <El_Che> Go dropped also slightly, why it's seems more popular than before (looking at big name projects)

[11:38] <woolfy> Struggle?  With Perl 6?  Nobody.  It's the easiest!

[11:39] <El_Che> woolfy: I woudn't call Perl 6 easy

[11:39] <woolfy> (I mean, #perl6 and other Perl 6 irc channels (and other resources) are extremely helpful)

[11:39] <tadzik> AlexDaniel: I can easily imagine that :)

[11:39] <woolfy> Claudio Ramirez: I was searching for the tongue-in-cheek-emoji...  didn't find it.

[11:39] <mr_ron> m: my token param-x { ^ [ <[ab]>+  { say <match 1> }  || [ \w+ { say <match 2> } '=' \w+ ] ] $ }; say so "a=b" ~~ /<param-x>/ # shouldn't this backtrack same way?

[11:39] <camelia> rakudo-moar 2ae3f484c: OUTPUT: ¬´(match 1)‚ê§False‚ê§¬ª

[11:40] <mr_ron> m: my token param-x { ^ [ <[mn]>+  { say <match 1> }  || [ \w+ { say <match 2> } '=' \w+ ] ] $ }; say so "a=b" ~~ /<param-x>/ # shouldn't this backtrack same way?

[11:40] <camelia> rakudo-moar 2ae3f484c: OUTPUT: ¬´(match 2)‚ê§True‚ê§¬ª

[11:41] <mr_ron> m: my token param-y { ^ [ [ \w+ {say 'matched first word'} '=' \w+  ] || <[ab]>+ ] $ }; say so 'a' ~~ /<param-y>/; # backtracks - think it should not

[11:41] <camelia> rakudo-moar 2ae3f484c: OUTPUT: ¬´matched first word‚ê§True‚ê§¬ª

[11:42] <AlexDaniel> ‚ÄúWikipedia: 13%‚Äù

[11:42] <mr_ron> Can moritz or someone explain why param-x and param-y seem to backtrack differently?

[11:42] <El_Che> woolfy: üòõ

[11:43] <El_Che> üòú

[11:43] *** wamba left
[11:43] <El_Che> you may need to make your font bigger to see the difference :)

[11:43] <timotimo> m: say so "=" ~~ /\w/

[11:43] <camelia> rakudo-moar 2ae3f484c: OUTPUT: ¬´False‚ê§¬ª

[11:44] <lizmat> .tell Zoffix I've merged 6 P5dists into another: chop -> chomp, oct -> hex, ord -> chr, rindex -> index, uc -> lc, ucfirst -> lcfirst

[11:44] <yoleaux> lizmat: I'll pass your message to Zoffix.

[11:44] <timotimo> mr_ron: how does it backtrack ni the second one?

[11:46] <mithaldu_> jmerelo: which presentation was this?

[11:46] <mr_ron> In the second param-x it does not backtrack, in param-y it backtracks after \w+

[11:46] *** brrt joined
[11:46] <jkramer> Is CPAN broken? :( http://search.cpan.org/search?query=gitlike&mode=module

[11:46] <timotimo> what you're seeing there isn't backtracking

[11:47] <ilmari> jkramer: search.cpan.org != cpan

[11:48] <ilmari> jkramer: use metacpan.org

[11:48] <mr_ron> I understand that moritz said param-y does not count as backtracking.  Fine.  Why can't it do the same for param-x though?

[11:48] <mr_ron> param-x first case ...

[11:48] <timotimo> i may not be looking correctly

[11:48] <jkramer> ilmari: Ah didn't know that, thanks

[11:49] <timotimo> how does it "not do the same" there?

[11:50] <mr_ron> In the case of the first param-x the first alternative partially matches but it can't back up to match the second alternative.

[11:50] <timotimo> oh, i was only looking at the last two lines

[11:51] <timotimo> i thought you had corrected the first line to get the second one

[11:52] <timotimo> OK, not really sure what's up there

[11:52] <mr_ron> No - its not a correction the first param-x has to back up to match the later alternative, the second param-x does not need to back up.

[11:53] <mr_ron> timotimo: thanks for looking.  If nobody has a good explanation maybe I put in an RT / rakudo issue.

[11:54] <timotimo> gotta go afk now, too

[11:54] <buggable> New CPAN upload: P5built-ins-0.0.7.tar.gz by ELIZABETH https://cpan.metacpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5built-ins-0.0.7.tar.gz

[12:06] <jmerelo> mithaldu_: http://www.wendy.org/PerlConf/GPW2018/ChangingImageOfPerl2018.pdf

[12:06] *** Tison joined
[12:07] <woolfy> mithaldu_  I've been promoting your blog about Tiobe a bit.

[12:07] <jmerelo> So woolfy == Wendy. Nobody tells me anything!

[12:07] <jmerelo> Hi woolfy !

[12:08] *** profan_ is now known as profan

[12:11] <woolfy> jmerelo: Really?  OK, I am Wendy.  And woolfy.  For many years.  :-)

[12:11] <jmerelo> woolfy: :-) Very nice presentation. I really liked it :-)

[12:15] *** wamba joined
[12:18] <jmerelo> Still, look at the rank in pull requests in GitHub https://github.com/JJ/perl6em/blob/master/data/rank.csv

[12:21] <jmerelo> This is taken using BigQuery from GitHub events that are identified by language; PRs are actually the only ones. I do have the raw data somewhere else, but baseline is it's gone down from #15 to #25

[12:28] *** Tison left
[12:31] *** scimon left
[12:31] *** Aaronepower joined
[12:32] *** wamba left
[12:33] *** wamba joined
[12:35] *** scimon joined
[12:38] *** wamba left
[12:38] *** wamba joined
[12:40] *** zakharyas joined
[12:44] *** wamba left
[12:49] *** andrzejku left
[12:50] *** AlexDaniel left
[12:50] *** vcv joined
[12:53] *** vcv left
[12:54] *** mcmillhj joined
[12:56] *** vcv joined
[13:02] <jkramer> I'm playing with grammars and trying to parse an ini-style file but somehow Grammar.parse seems to loop forever and use 100% CPU. Any ideas what's wrong here? https://paste.pound-python.org/show/H5FiE0ToLeVNpTjmE7AQ/

[13:03] *** wamba joined
[13:04] <jkramer> It's my first try on grammars so it's probably something stupid and obvious :)

[13:04] <timotimo> yup

[13:04] <timotimo> your token TOP can match an empty string an infinite number of times

[13:04] <timotimo> so it does that gladly

[13:04] *** zakharyas left
[13:05] <jkramer> Oh :D

[13:05] <jkramer> Thanks!

[13:11] <jmerelo> jkramer: can you please StackOverflow that? http://blogs.perl.org/users/jj_merelo/2018/04/stackoverflow-that.html :-)

[13:13] <moritz> jkramer: might I humbly advertise for https://smile.amazon.com/Parsing-Perl-Regexes-Grammars-Recursive-ebook/dp/B0785L6WR6/ ? :-)

[13:13] <moritz> it deals with gotchas such as this one as well

[13:15] *** rindolf joined
[13:16] <Geth> ¬¶ perl6.org: dengyouhua++ created pull request #103: Chinese translation

[13:16] <Geth> ¬¶ perl6.org: review: https://github.com/perl6/perl6.org/pull/103

[13:26] <jkramer> jmerelo: I'm afraid I lost my SO account a long time ago :)

[13:27] <jkramer> moritz: Thanks, I might check it out if I go deeper into the topic, currently I'm just fooling around a bit 

[13:31] *** scimon left
[13:31] <timotimo> moritz: i wasn't smart enough to figure out what was with mr_ron's example :S

[13:32] *** scimon joined
[13:34] *** skids joined
[13:36] <Geth> ¬¶ perl6.org: ccworld1000++ created pull request #104: tips change

[13:36] <Geth> ¬¶ perl6.org: review: https://github.com/perl6/perl6.org/pull/104

[13:39] <Geth> ¬¶ perl6.org: acab0fed71 | CC++ (committed using GitHub Web editor) | app.psgi

[13:39] <Geth> ¬¶ perl6.org: tips change

[13:39] <Geth> ¬¶ perl6.org: 

[13:39] <Geth> ¬¶ perl6.org: https://perl6.org/

[13:39] <Geth> ¬¶ perl6.org: review: https://github.com/perl6/perl6.org/commit/acab0fed71

[13:39] <Geth> ¬¶ perl6.org: d9ef9bf531 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | app.psgi

[13:39] <Geth> ¬¶ perl6.org: Merge pull request #104 from ccworld1000/patch-3

[13:39] <Geth> ¬¶ perl6.org: 

[13:39] <Geth> ¬¶ perl6.org: tips change

[13:39] <Geth> ¬¶ perl6.org: review: https://github.com/perl6/perl6.org/commit/d9ef9bf531

[13:41] <jmerelo> jkramer: I can do it for you and link to your question here, if you don't mind.

[13:41] <moritz> timotimo: nothin' to do with being smart, just experience with regexes

[13:42] *** jmerelo left
[13:42] <jkramer> jmerelo: Sure :)

[13:44] *** kurahaupo left
[13:45] *** rindolf left
[13:47] *** kurahaupo joined
[13:47] <mr_ron> moritz: still here if you would like to give further insight.  There was a (new I think) variant of the question later https://irclog.perlgeek.de/perl6/2018-04-12#i_16038507.  Also noticed seems different from Perl 5.

[13:51] <moritz> m: my token param-x { ^ [ [<[ab]>+  { say <match 1> }]  || [ \w+ { say <match 2> } '=' \w+ ] ] $ }

[13:51] <camelia> rakudo-moar c0212af9b: ( no output )

[13:51] <moritz> m: my token param-x { ^ [ [<[ab]>+  { say <match 1> }]  || [ \w+ { say <match 2> } '=' \w+ ] ] $ }; say so "a=b" ~~ /<param-x>/

[13:51] <camelia> rakudo-moar c0212af9b: OUTPUT: ¬´(match 1)‚ê§False‚ê§¬ª

[13:52] *** Aaronepower left
[13:52] <moritz> m: my token param-x { ^ [ [ \w+ { say <match 2> } '=' \w+ ] ] $ }; say so "a=b" ~~ /<param-x>/

[13:52] <camelia> rakudo-moar c0212af9b: OUTPUT: ¬´(match 2)‚ê§True‚ê§¬ª

[13:53] <moritz> mr_ron: here the first alternative matches, so the second isn't tried

[13:53] <moritz> mr_ron: but when the $ tries to match, the || would need to backtrack to try the second alternative

[13:53] <moritz> mr_ron: but the token explicitly disables this backtracking

[13:54] <moritz> that's why the regex as a whole doesn't match

[13:54] <mr_ron> m: my token param-y { ^ [ [ \w+ {say 'matched first word'} '=' \w+  ] || <[ab]>+ ] $ }; say so 'a' ~~ /<param-y>/; # why different backtracking ?

[13:54] <camelia> rakudo-moar c0212af9b: OUTPUT: ¬´matched first word‚ê§True‚ê§¬ª

[13:55] <moritz> mr_ron: I don't see any backtracking in this example

[13:55] <moritz> the first branch tries to match, it matches. Done.

[13:55] <moritz> decommute&

[13:56] <mr_ron> I don't see the first branch matching in param-y.  the test example 'a' has no '='

[13:58] *** llfourn joined
[13:58] <mr_ron> m: my token param-y { ^ [ [ \w+ {say 'matched first word'} '=' \w+ {say 'branch 1'} ] || <[ab]>+ {say 'branch 2'} ] $ }; say so 'a' ~~ /<param-y>/; # why different backtracking ?

[13:58] <camelia> rakudo-moar c0212af9b: OUTPUT: ¬´matched first word‚ê§branch 2‚ê§True‚ê§¬ª

[14:00] *** zakharyas joined
[14:04] *** Aaronepower joined
[14:06] *** FROGGS joined
[14:17] *** markong left
[14:25] *** markong joined
[14:33] *** kybr joined
[14:34] *** margeas joined
[14:35] *** markong left
[14:35] *** Aaronepower left
[14:35] *** Aaronepower joined
[14:39] *** Aaronepower left
[14:41] *** rindolf joined
[14:41] *** skids left
[14:41] *** Aaronepower joined
[14:42] *** aindilis left
[14:43] *** aindilis joined
[14:44] *** jeek joined
[14:46] *** AlexDaniel joined
[14:49] *** brrt left
[14:51] <mr_ron> m: my token param-x { ^ [ [<[ab]>+  { say <match 1> }]  || [ \w+ { say <match 2> } '=' \w+ ] ] $ }; say so "a=b" ~~ /<param-x>/;  # can't backtrack outside of alternative

[14:51] <camelia> rakudo-moar 344a64e98: OUTPUT: ¬´(match 1)‚ê§False‚ê§¬ª

[14:52] <mr_ron> my token param-x2 { [ [ ^ <[ab]>+  { say <match 1> } $ ]  || [ ^ \w+ { say <match 2> } '=' \w+ $ ] ]  }; say so "a=b" ~~ /<param-x2>/; # does backtracks in alternatives

[14:52] <evalable6> mr_ron, rakudo-moar 344a64e98: OUTPUT: ¬´(match 1)‚ê§(match 2)‚ê§True‚ê§¬ª

[14:52] <mr_ron> Got it now - possible doc issue.

[14:56] *** domidumont1 joined
[15:00] *** domidumont left
[15:04] *** zakharyas left
[15:06] *** zakharyas joined
[15:08] *** Actualeyes joined
[15:12] <moritz> there is no backtracking in this example

[15:12] <moritz> trying both branches of an alternative is *not* backtracking

[15:12] <moritz> it always happens if the first branch does not match

[15:12] *** khw joined
[15:14] *** skids joined
[15:17] *** releasable6 left
[15:17] *** releasable6 joined
[15:17] *** ChanServ sets mode: +v releasable6

[15:17] *** athenot joined
[15:19] *** margeas left
[15:19] *** brrt joined
[15:23] *** domidumont1 left
[15:26] <AlexDaniel> u: ü§¨

[15:26] <unicodable6> AlexDaniel, U+1F92C SERIOUS FACE WITH SYMBOLS COVERING MOUTH [So] (ü§¨)

[15:26] *** vcv left
[15:27] <AlexDaniel> that's a nice one

[15:27] *** pharv joined
[15:28] *** markong joined
[15:31] <Geth> ¬¶ doc: 8af748d3c2 | (Will "Coke" Coleda)++ | doc/Language/modules.pod6

[15:31] <synopsebot> Link: https://doc.perl6.org/language/modules

[15:31] <Geth> ¬¶ doc: remove trailing ws

[15:31] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/8af748d3c2

[15:34] <Geth> ¬¶ doc: feeb94202c | (Will "Coke" Coleda)++ | htmlify.p6

[15:34] <Geth> ¬¶ doc: No point in caching this, it's called once per page

[15:34] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/feeb94202c

[15:34] *** vcv joined
[15:36] *** jmerelo joined
[15:37] *** khisanth_ left
[15:38] *** wamba left
[15:41] *** pharv left
[15:41] *** caasih left
[15:41] *** zostay left
[15:42] *** pharv joined
[15:43] *** simpleseeker joined
[15:44] <jmerelo> timotimo, jkramer: reposted question to StackOverflow https://stackoverflow.com/questions/49800790/grammar-parse-seems-to-loop-forever-and-use-100-cpu

[15:47] <skids> usually a rule that can match zero characters is involved.  Maybe try an anchor in TOP?

[15:47] *** brrt left
[15:49] <skids> Oh, or maybe it's the "value" rule.

[15:49] *** vcv left
[15:49] *** adu joined
[15:50] *** pharv left
[15:50] *** vcv joined
[15:50] *** pharv joined
[15:50] *** khisanth_ joined
[15:51] *** Aaronepower left
[15:59] *** robertle_ joined
[16:02] <moritz> TOP has nested * quantifiers

[16:04] *** pharv left
[16:04] *** zakharyas left
[16:04] *** pharv joined
[16:04] *** vcv left
[16:05] *** mcmillhj left
[16:06] <Geth> ¬¶ doc: 2ef1365f7d | (JJ Merelo)++ | CONTRIBUTING.md

[16:06] <Geth> ¬¶ doc: Linked labels with the repository

[16:06] <Geth> ¬¶ doc: 

[16:06] <Geth> ¬¶ doc: Linked also the label description, and while I was at it, changed Perl

[16:06] <Geth> ¬¶ doc: 6 to use non-breaking space. Closes #1909

[16:06] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/2ef1365f7d

[16:08] *** zakharyas joined
[16:08] <jmerelo> .tell jkramer to take a look at this and help however possible https://stackoverflow.com/questions/49800790/grammar-parse-seems-to-loop-forever-and-use-100-cpu?noredirect=1#comment86616553_49800790

[16:08] <yoleaux> jmerelo: I'll pass your message to jkramer.

[16:13] *** pharv left
[16:14] *** pharv joined
[16:18] *** vcv joined
[16:24] *** simpleseeker left
[16:26] *** scimon left
[16:33] *** troys joined
[16:34] *** adu left
[16:34] *** amalia___ joined
[16:35] *** adu joined
[16:35] *** wamba joined
[16:38] *** robertle_ left
[16:39] *** dakkar left
[16:41] *** mcmillhj joined
[16:44] <Geth> ¬¶ doc: 1cdd22f432 | (Will "Coke" Coleda)++ | 5 files

[16:44] <Geth> ¬¶ doc: Test .md files for Perl 5|6 nbsp

[16:44] <Geth> ¬¶ doc: 

[16:44] <Geth> ¬¶ doc: Fix all instances in the md docs

[16:44] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/1cdd22f432

[16:44] <jmerelo> So what's the deal with the perl6/doc pod tags? https://gist.github.com/JJ/72d332e4cee266a58f8e0b07b660652a

[16:44] <jmerelo> Are they ever used? There's tutorial, index, perl6, convert, and, for some reason, self.

[16:46] <[Coke]> ?

[16:47] <[Coke]> Can you point me at one in the file itself?

[16:47] <jmerelo> [Coke]: =begin pod :tag<index>

[16:47] <[Coke]> ah, :tag<perl6> ?

[16:47] <jmerelo> in fag.pod6

[16:47] <jmerelo> [Coke]: yep

[16:48] <[Coke]> in *what* now?

[16:48] <[Coke]> tag isn't referenced in lib, t, xt, htmlify

[16:48] <jmerelo> Here, for instance https://github.com/perl6/doc/blob/master/doc/Language/5to6-nutshell.pod6. 5to6 seem to favor tag<convert>

[16:49] <jmerelo> https://github.com/perl6/doc/blob/master/doc/Language/5to6-nutshell.pod6#L1

[16:50] <[Coke]> I also don't see tag in our Pod::To::HTML

[16:50] *** testNode joined
[16:50] <jmerelo> This is the commit where they were added https://github.com/perl6/doc/commit/1509c4d1d6fca7b9cd93ce56282fbfce5f695fcb

[16:50] <[Coke]> maybe do a git blame and see which commits added them all. I picked one at random, and the commit is just "adding tags"

[16:51] <[Coke]> haskell e.g. has a "convert" tag; doesn't appear anywhere in the generated HTML

[16:51] *** Aaronepower joined
[16:52] <[Coke]> I don't see what they're doing.

[16:52] <jmerelo> [Coke]: see above. Most of them were added in a single commit in February last year. It does not reference any issue...

[16:53] <jmerelo> .seen gfldex

[16:53] <yoleaux> I saw gfldex 11:35Z in #perl6: <gfldex> woolfy: please note that TIOBE mostly measures ignorance

[16:54] *** testNode left
[16:54] <jmerelo> .tell gfldex can you please tell me something about tags and why they were added? https://github.com/perl6/doc/commit/1509c4d1d6fca7b9cd93ce56282fbfce5f695fcb ?

[16:54] <yoleaux> jmerelo: I'll pass your message to gfldex.

[16:55] *** Aaronepower left
[16:56] *** robertle_ joined
[16:57] *** domidumont joined
[16:59] <tony-o> https://github.com/tony-o/perl6-koos

[17:02] *** travis-ci joined
[17:02] <travis-ci> Doc build failed. Will "Coke" Coleda 'Test .md files for Perl 5|6 nbsp

[17:02] <travis-ci> https://travis-ci.org/perl6/doc/builds/365704966 https://github.com/perl6/doc/compare/2ef1365f7d08...1cdd22f432dc

[17:02] *** travis-ci left
[17:02] <buggable> [travis build above] ‚ò† Did not recognize some failures. Check results manually.

[17:04] *** FROGGS left
[17:04] *** escherlat joined
[17:05] <Geth> ¬¶ doc: fddc9f6139 | (JJ Merelo)++ | doc/Language/faq.pod6

[17:05] <Geth> ¬¶ doc: Includes @timtoady comment as part of the FAQ

[17:05] <Geth> ¬¶ doc: 

[17:05] <Geth> ¬¶ doc: We could make it longer, but there's already a link from the answer,

[17:05] <Geth> ¬¶ doc: so I guess that's enough. Since all faq seems to go to a single page,

[17:05] <synopsebot> Link: https://doc.perl6.org/language/faq

[17:05] <Geth> ¬¶ doc: refs #114; it does not even go to a new section. On the other hand, it

[17:05] <Geth> ¬¶ doc: closes #1753.

[17:05] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/fddc9f6139

[17:06] *** zakharyas left
[17:12] <jmerelo> tony-o: a ORM. Neat :-)

[17:12] <jmerelo> s/a/an/

[17:17] *** isBEKaml joined
[17:17] *** isBEKaml left
[17:18] *** isBEKaml joined
[17:19] <Geth> ¬¶ doc: 574982ac92 | (JJ Merelo)++ | doc/Language/quoting.pod6

[17:19] <Geth> ¬¶ doc: Rewrites description of unquoting constructs

[17:19] <Geth> ¬¶ doc: 

[17:19] <Geth> ¬¶ doc: Following suggestions by @cfa and @coke. Closes #1280 again. Please

[17:19] <Geth> ¬¶ doc: feel free to reopen and/or rewrite if needed.

[17:19] <synopsebot> Link: https://doc.perl6.org/language/quoting

[17:19] <Geth> ¬¶ doc: review: https://github.com/perl6/doc/commit/574982ac92

[17:21] *** lalitmee joined
[17:25] <jmerelo> c: my %words = KeyBag.new

[17:25] <committable6> jmerelo, ¬¶my: ¬´Cannot find this revision (did you mean ‚Äúall‚Äù?)¬ª

[17:25] <jmerelo> p: my %words = KeyBag.new

[17:26] <jmerelo> p: my %words = KeyBag.new; say %words.perl

[17:27] <jmerelo> p6: my %words = KeyBag.new; say %words.perl

[17:27] <camelia> rakudo-moar 344a64e98: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    KeyBag used at line 1‚ê§‚ê§¬ª

[17:27] <jmerelo> So I guess this is no longer working... https://perl6advent.wordpress.com/2012/12/13/day-13-bags-and-sets/

[17:28] <[Coke]> from 2012? very likely not, yes.

[17:29] <[Coke]> last comment: "KeyBag is now being depreciated in favour of BagHash"

[17:34] <jmerelo> [Coke]++

[17:38] *** domidumont left
[17:42] *** isBEKaml left
[17:42] *** isBEKaml joined
[17:49] *** zakharyas joined
[17:49] <[Coke]> gah, I copied the typo. :)

[17:51] *** st_elmo joined
[17:53] *** lalitmee left
[17:56] <tony-o> [sic]

[17:59] <[Coke]> thank you. :)

[18:00] <El_Che> hi

[18:03] *** espadrine_ joined
[18:04] *** zakharyas left
[18:05] <jmerelo> O/

[18:14] *** Zoffix joined
[18:15] <Zoffix> "<AlexDaniel>: do people struggle often with Delphi nowadays?"... But that's exactly why TIOBE is crap. Delphi folks simply gamed the TIOBE's system to get higher ranking.

[18:15] <yoleaux> 11:44Z <lizmat> Zoffix: I've merged 6 P5dists into another: chop -> chomp, oct -> hex, ord -> chr, rindex -> index, uc -> lc, ucfirst -> lcfirst

[18:16] <jmerelo> Zoffix: how can they do that?

[18:16] <moritz> TIOBE used to be only a google search for "$language programming"

[18:17] <moritz> and they basically put delphi programming on a whole lot of pages

[18:17] <moritz> nowadays, TIOBE incorporates a few more criteria, like job offers on certain sites

[18:17] <Zoffix> jmerelo: https://blog.timbunce.org/2009/05/17/tiobe-index-is-being-gamed/

[18:17] <El_Che> the worst the doc, the better result

[18:17] <jmerelo> It's not only Tiobe. It's also Redmonk http://redmonk.com/sogrady/2018/03/07/language-rankings-1-18/

[18:17] <El_Che> jmerelo is actually killing Perl 6!!

[18:18] <jmerelo> El_Che: killing it softly with a song, I guess :-)

[18:18] *** sauvin left
[18:18] * Zoffix hasn't googled for "perl 6" anything in years

[18:19] *** wamba left
[18:19] <El_Che> the perl 5 - 6 thing kind of kills googling for perl 6

[18:20] <Zoffix> And I see Mithaldu is proposing exacly the same gamification. Heh

[18:21] <jmerelo> You can try this in BigQuery https://github.com/JJ/perl6em/blob/master/utils/bq.perl6 which counts the number of pull requests in GitHub. Perl has lost 10 positions in that ranking too.

[18:22] <jmerelo> I'm not for gaming the system, but I do think we need to be aware of what's going on and do what we can to promote Perl 5&6 everywhere.

[18:22] <jmerelo> I'm giving a talk next Saturday on a completely unrelated conference on a completely unrelated topic, and I'll be wearing my Perl 6 tee and show perl 6 pictures for no reason at all.

[18:23] <jmerelo> Maybe some Perl 6 code. I'll see.

[18:23] <Zoffix> So lets discuss that instead of talking about endless charts and losing positions?

[18:23] *** Kaiepi left
[18:24] <mr_ron> weak promotion on PerlMonks: http://perlmonks.org/?node_id=1212735

[18:24] <jmerelo> Zoffix: I'm all for that, but I guess some people need some extra motivation and a data-based approach. 

[18:27] <tony-o> it doesn't hurt to be able to show that p6 isn't failing after the articles that are out there from years ago

[18:27] <Zoffix> jmerelo: is it motivational though? To me it's depressing. I wouldn't want to stay in the community that endlessly posts links to charts and talks about declines and whose lauded solution to the problem is to game one of the indexers. 

[18:28] <Zoffix> tony-o: IMO that's like a clingy date that keeps asking if you still love them. Despreation.

[18:28] <El_Che> Zoffix: well, I see it differently. For me is the strongest argument for renaming Perl 6 for Perl 6's sake. The argument used to be for Perl 5's sake

[18:28] <Zoffix> I'll tell you what's motivational. This: https://6guts.wordpress.com/2018/03/13/remote-debug-support-for-moarvm/  Remote debugging! Fucking awesome!

[18:29] <El_Che> wow factor indeed

[18:29] <tony-o> Zoffix: i agree, but i've lived in the corporate world where people can't look beyond an article they read 5 years ago

[18:29] <tony-o> remote debug looks pretty rad

[18:29] <Zoffix> Hey, someone used that and thought it was awesome and is talking about it: https://twitter.com/zoffix/status/984246166094254082

[18:29] <Zoffix> Happy.

[18:30] <Zoffix> tony-o: so make more articles for them to read. Look at Rust people. They can't shut up about how awesome everything is.

[18:31] <Geth> ¬¶ ecosystem: e4c02805ad | (Tony O'Dell)++ (committed using GitHub Web editor) | META.list

[18:31] <Geth> ¬¶ ecosystem: Koos - an ORM.

[18:31] <Geth> ¬¶ ecosystem: review: https://github.com/perl6/ecosystem/commit/e4c02805ad

[18:31] <Zoffix> Here, a small card they're "super excited" about: https://twitter.com/swissgathu/status/983274919109767168

[18:31] <El_Che> Zoffix: because there isn't a Rust - 1

[18:31] <tony-o> Zoffix: i totally agree

[18:31] <El_Che> Zoffix: when people hear Rust, they hear hype

[18:31] <El_Che> when people hear Perl 6, they hear Perl 4

[18:31] <Zoffix> I wrote maybe 3 lines of Rust in my life, but I'm already promoting them: https://twitter.com/zoffix/status/983744917716553728

[18:33] *** Zoffix left
[18:34] <mithaldu_> zoffix: why the hell don't you have a bnc

[18:35] *** vcv left
[18:35] <mithaldu_> also i kinda want to edit the blog post because nowadays my thought on tiobe is: kill it with extreme prejudice

[18:36] <mithaldu_> woolfy: good to know it's still useful :)

[18:36] <mithaldu_> although details might be outdated

[18:39] *** comborico1611 joined
[18:42] *** zachk joined
[18:43] *** zachk left
[18:43] *** zachk joined
[18:43] *** darutoko left
[18:44] *** pharv left
[18:45] *** pharv joined
[18:47] *** vcv joined
[18:55] <woolfy> mithaldu_  Thanks again for writing it.  People sometimes mail me to tell me that they what was advised.  :-)

[18:55] <woolfy> And details that are outdated can be updated in a new post.  

[18:58] *** robertle_ left
[18:58] *** simpleseeker joined
[18:58] *** robertle_ joined
[18:59] *** pharv left
[19:01] *** pharv joined
[19:01] *** caasih joined
[19:04] *** AlexDaniel left
[19:11] *** Kaiepi joined
[19:12] *** Kaiepi left
[19:12] *** Kaiepi joined
[19:13] *** pharv left
[19:18] *** pharv joined
[19:25] *** jmerelo left
[19:30] *** Kaiepi left
[19:32] *** Kaiepi joined
[19:35] *** Kaiepi left
[19:38] *** rindolf left
[19:38] *** pharv left
[19:42] *** rindolf joined
[19:42] *** pharv joined
[19:43] *** pharv left
[19:43] *** pharv_ joined
[19:45] *** FROGGS joined
[19:47] *** zakharyas joined
[19:47] *** dct joined
[19:50] *** Kaiepi joined
[19:56] *** adu left
[20:05] *** mcmillhj left
[20:06] *** nige joined
[20:08] <nige> jmerelo++ on the call for questions and answers on stackoverflow

[20:09] <nige> this was also mentioned at this lightning talk: https://youtu.be/52oMgCOC5a0?t=2933

[20:09] <nige> - you can even ask and answer your own question - this is also useful

[20:10] <El_Che> nige: but awkward

[20:10] <nige> - having been coding in golang the last couple of weeks - it does make me smile that Google chose such a Google-unfriendly name for their langage -in @go@

[20:11] <El_Che> the random stranger simulation sounds better :)

[20:11] <El_Che> nige: "having been coding in golang"

[20:11] <El_Che> you use the google friendly name :)

[20:12] <nige> yes - but it's a bit hit and miss

[20:12] <nige> - all the more reason to choose a distinctive, google friendly name in the first place :-)

[20:12] <El_Che> go as a command is a huge win, though

[20:12] <El_Che> go get, go fmt, go build, ...

[20:12] <nige> yes - I do like that

[20:12] <El_Che> rk get, rk fmt, rk build ...

[20:13] <nige> I was thinking about other similar words

[20:13] <nige> yes - I liked .rk as a suffix

[20:13] <nige> 'do', 'run'

[20:13] <El_Che> what I wrote on the ticket?

[20:14] <nige> yes - I prefer a distinctive, non-numerical suffix 

[20:14] <El_Che> yes, indeed

[20:14] <nige> (if possible) - I know this is hard btw

[20:14] *** mcmillhj joined
[20:15] <nige> on the go get, go fmt point - I wonder if there is something perlish there we could use ....

[20:15] <nige> exec

[20:15] <nige> xec

[20:15] <lucs> Using Inline::Perl5, how do I pass a string reference to a function from the inlined module? (in Perl5 I'd do ÔΩ¢foo(\$str)ÔΩ£)

[20:16] <nige> ^- last one is short and google friendly

[20:19] *** vcv left
[20:22] <nige> having a distinctive google-friendly alias for Perl 6 will really help the 'google loop' 

[20:23] <nige> I've just been around the loop for "go" many times - and it is important for new uses acquiring the language 

[20:24] *** FROGGS left
[20:24] <nige> - ideally the shorter the loop the better  

[20:25] <nige> by loop I mean: problem -> solution

[20:26] <nige> Golang can spit out some LTA error messages - and I've missed some of the help provided by Perl 6 - in suggesting a fix

[20:27] *** vcv joined
[20:27] <timotimo> we should make our error messages more arcane again so that people search for perl 6 more often on ogogle

[20:28] <nige> :-)

[20:28] <nige> golang often just says 'panic'

[20:28] <nige> which is the opposite of trying to help someone up the learning curve

[20:30] *** mcmillhj left
[20:33] *** simpleseeker left
[20:40] *** mcmillhj joined
[20:41] *** pharv_ left
[20:42] *** pharv joined
[20:42] *** Zoffix joined
[20:44] *** raynold joined
[20:44] <raynold> ahh it's a wonderful day

[20:45] <Zoffix> lucs: just pass a Capture

[20:45] <Zoffix> lucs: $foo.some-method: \("the string")

[20:45] <lucs> Um, not sure what that means :/

[20:45] <lucs> Oh, I see.

[20:45] <Zoffix> lucs: a Capture is a type: https://docs.perl6.org/type/Capture

[20:46] <lucs> Zoffix++ Thanks a bunch

[20:48] *** vcv left
[20:52] <lucs> Oh, cool, the docs layout appears to be much better.

[20:56] *** mcmillhj left
[20:57] <mr_ron> m: my token param-x { [ [ ^ <[ab]>+  { say <match 1> } $ ]  || [ ^ \w+ { say <match 2> } '=' \w+ $ ] ]  }; say so "a=b" ~~ /<param-x>/; # got it NO backtrack

[20:57] <camelia> rakudo-moar 914218744: OUTPUT: ¬´(match 1)‚ê§(match 2)‚ê§True‚ê§¬ª

[20:57] <mr_ron> moritz: perl -E 'say "a=b" =~ / (?: ^ [ab]+ (*PRUNE) $) | (?: ^ \w+ = \w+ $ ) /x' # But in Perl 5.(18|24) this fails unless you take out prune so backtrack?

[20:57] <mr_ron> moritz: It looks to me from the example like Perl 5 and 6 differ on backtracking and alternation.  Can anyone please confirm/refute.

[20:58] *** rindolf left
[21:01] *** Zoffix left
[21:03] *** isBEKaml left
[21:03] *** skids left
[21:04] *** zakharyas left
[21:05] <tony-o> m: module X { sub l is export(:custom) { "hi".say; }; }; ::("X")::EXPORT::custom::.keys.say; X::EXPORT::custom::.keys.say;

[21:05] <camelia> rakudo-moar 914218744: OUTPUT: ¬´()‚ê§(&l)‚ê§¬ª

[21:06] *** kent\n left
[21:08] *** mcmillhj joined
[21:12] <tony-o> hmm

[21:18] *** nige left
[21:22] <MasterDuke> huh, how come the resources section of perl6.org hasn't been updated?

[21:23] <MasterDuke> i.e., it hasn't picked up the recent commits (day or two ago)

[21:24] *** mcmillhj left
[21:26] *** pharv left
[21:27] *** simpleseeker joined
[21:29] *** pharv joined
[21:33] *** pharv left
[21:33] *** pharv joined
[21:36] <timotimo> hm, doesn't it offer the update log on the webserver?

[21:37] *** Zoffix joined
[21:37] <Zoffix> MasterDuke: on it.

[21:38] <MasterDuke> thanks

[21:38] <MasterDuke> also, i thought there was some sort of debug mode you could turn on that would show you when it was last built?

[21:39] <MasterDuke> oh, that's docs.perl6.org

[21:44] <Zoffix> MasterDuke: I didn't catch what the posts were showing earlier. Did it get fixed?

[21:44] <Zoffix> I mean is the problem fixed now?

[21:45] <Geth> ¬¶ perl6.org: 46472c37f3 | (Zoffix Znet)++ (committed using GitHub Web editor) | README.md

[21:45] <Geth> ¬¶ perl6.org: Trigger rebuild

[21:45] <Geth> ¬¶ perl6.org: review: https://github.com/perl6/perl6.org/commit/46472c37f3

[21:46] <Zoffix> Should be good now.

[21:47] *** char_var[buffer] left
[21:47] <Zoffix> Was broken since https://github.com/perl6/perl6.org/commit/8e53129724d75e602fc7f1a528d1ab2c12c17b41 'cause someone (might've been me) edited the source/resources/index.html in February as root and it was getting perm issues updating it

[21:48] * Zoffix sets up a sudo account for self instead of using root all the time

[21:48] *** TEttinger joined
[21:49] <timotimo> .o( should we be monitoring the absence of root-owned files in user directories? )

[21:50] <Zoffix> Nah, I'd say it's a one-off thing because I only ever had a root account instead of a proper user.

[21:50] <timotimo> that's fair

[21:52] <Zoffix> There's still a bunch of them tho; the modules.perl6.org might've been me and I'm gonna fix it but the rest I've no idea: https://gist.github.com/zoffixznet/89ef1158af78881dca461123a7f7d359

[21:52] <Zoffix> this is the www. box

[21:53] *** st_elmo left
[21:55] *** mcmillhj joined
[21:55] *** xi- joined
[21:59] <Geth> ¬¶ infrastructure-doc: d0f1c65a73 | (Zoffix Znet)++ (committed using GitHub Web editor) | hosts/www.p6c.org.pod

[21:59] <Geth> ¬¶ infrastructure-doc: Update user account for zoffix

[21:59] <Geth> ¬¶ infrastructure-doc: review: https://github.com/perl6/infrastructure-doc/commit/d0f1c65a73

[21:59] *** mcmillhj left
[22:06] *** simpleseeker left
[22:08] *** simpleseeker joined
[22:08] *** HaraldJoerg left
[22:09] *** comborico1611 left
[22:09] *** comborico1611 joined
[22:24] <MasterDuke> Zoffix++ looks good

[22:26] *** TEttinger left
[22:36] *** Guest89780 joined
[22:36] <Guest89780> is it possible to convert a string to binary?

[22:37] *** skids joined
[22:37] <lizmat> m: dd "foo".encode  # assume utf8

[22:37] <camelia> rakudo-moar 914218744: OUTPUT: ¬´utf8.new(102,111,111)‚ê§¬ª

[22:37] <timotimo> yes, you can, Guest89780

[22:37] *** TEttinger joined
[22:37] <timotimo> right, what liz said

[22:37] <lizmat> m: dd "foo".encode(<ascii>)

[22:37] <camelia> rakudo-moar 914218744: OUTPUT: ¬´Blob[uint8].new(102,111,111)‚ê§¬ª

[22:38] <timotimo> m: say "foo".encode.list.map(*.base(2))

[22:38] <camelia> rakudo-moar 914218744: OUTPUT: ¬´(1100110 1101111 1101111)‚ê§¬ª

[22:38] <lizmat> ah, binary like that  :-)

[22:38] <timotimo> dunno

[22:38] <timotimo> i just thought i'd give the example so they can choose

[22:38] *** xi- left
[22:39] <timotimo> though of course when you do it like that, what you get is a string again

[22:39] *** xi- joined
[22:39] <timotimo> m: say "foo".encode.list.map(*.base(2)).join(",").encode.list.map(*.base(2))

[22:39] <camelia> rakudo-moar 914218744: OUTPUT: ¬´(110001 110001 110000 110000 110001 110001 110000 101100 110001 110001 110000 110001 110001 110001 110001 101100 110001 110001 110000 110001 110001 110001 110001)‚ê§¬ª

[22:39] <timotimo> so maybe that's what you really want :P

[22:42] *** Zoffix left
[22:43] <Guest89780> timotimo: what about "101" to 0b101?

[22:43] <timotimo> ah, sure

[22:43] <timotimo> m: my $input-string = "101"; say $input-string.parse-base(2)

[22:43] <camelia> rakudo-moar 914218744: OUTPUT: ¬´5‚ê§¬ª

[22:43] <timotimo> m: my $input-string = "101"; say $input-string.parse-base(2) == 0b101

[22:43] <camelia> rakudo-moar 914218744: OUTPUT: ¬´True‚ê§¬ª

[22:47] <Guest89780> what about 0b101 to "101" or "5"?

[22:48] *** epony left
[22:48] <timotimo> m: say 0b101.base(2); say 0b101

[22:48] <camelia> rakudo-moar 914218744: OUTPUT: ¬´101‚ê§5‚ê§¬ª

[22:49] <Guest89780> what about f($input_base, $input, $output_base) as a string?

[22:49] <timotimo> you mean the string starts with "f(" literally?

[22:49] <timotimo> or you want the result to be a string?

[22:49] <Guest89780> no that as a function?

[22:49] <timotimo> OK

[22:50] <timotimo> m: sub f($inb, $in, $outb) { $in.parse-base($inb).base($outb") }; say f(2, "1010", 7); say f(10, "99", 16)

[22:50] <Guest89780> "101" could be any base so $input_base says what it is

[22:50] <camelia> rakudo-moar 914218744: OUTPUT: ¬´5===SORRY!5=== Error while compiling <tmp>‚ê§Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)‚ê§at <tmp>:1‚ê§------> 3$outb) { $in.parse-base($inb).base($outb7‚èè5") }; say f(2, "1010", ‚Ä¶¬ª

[22:50] <timotimo> m: sub f($inb, $in, $outb) { $in.parse-base($inb).base($outb) }; say f(2, "1010", 7); say f(10, "99", 16)

[22:50] <camelia> rakudo-moar 914218744: OUTPUT: ¬´13‚ê§63‚ê§¬ª

[22:50] <timotimo> m: say 0x63 == 99

[22:50] <camelia> rakudo-moar 914218744: OUTPUT: ¬´True‚ê§¬ª

[22:51] <timotimo> say 0o13 == 0b1010

[22:51] <evalable6> timotimo, rakudo-moar 914218744: OUTPUT: ¬´False‚ê§¬ª

[22:51] <timotimo> oh, octal is 8 not 7

[22:51] <timotimo> say :7("13") == 0b1010

[22:51] <evalable6> timotimo, rakudo-moar 914218744: OUTPUT: ¬´True‚ê§¬ª

[22:51] <timotimo> there we go

[22:52] <timotimo> m: say "0b1010".Int

[22:52] <camelia> rakudo-moar 914218744: OUTPUT: ¬´10‚ê§¬ª

[22:52] <timotimo> m: say "0b111101".Int

[22:52] <camelia> rakudo-moar 914218744: OUTPUT: ¬´61‚ê§¬ª

[22:52] <timotimo> m: say "0x111101".Int

[22:52] <camelia> rakudo-moar 914218744: OUTPUT: ¬´1118465‚ê§¬ª

[22:52] <timotimo> ^- the .Int function on a string will also respect prefixes like 0x or 0b or 0o

[22:53] *** Herby_ left
[22:53] *** herby_ joined
[22:53] <herby_> \o

[22:53] <timotimo> yo

[22:56] *** skids left
[22:56] *** skids1 joined
[22:57] <herby_> timotimo: I was reading various posts yesterday regarding the performance of p6 regexes, and I saw an older post by you regarding optimization ideas: https://www.reddit.com/r/perl6/comments/5naomy/where_can_i_start_looking_to_speed_up_regular/

[22:58] <herby_> have you had an opportunity to investigate any of those ideas?

[23:00] <timotimo> m) the best thing is as a reddit mod of the sub i see the removed spam comments, too. wtf.

[23:01] <timotimo> i have not yet had the opportunity

[23:02] <herby_> I didn't realize you were a mod there :)

[23:02] <timotimo> it's still a very low-maintenance job, especially since i'm not the only active mod

[23:03] <timotimo> i'm not really an active mod, i suppose

[23:03] <herby_> What are your thoughts on creating a weekly "What's everyone working on this week?" thread?

[23:03] <dugdig> the best thing you can do as mod is set an automoderator rule for 3 reports = remove

[23:03] <dugdig> well, one of the best things

[23:03] <dugdig> and add another rule for accounts with trolling history where 1 report = remove

[23:04] *** skids1 left
[23:04] <dugdig> i really like the welcome message on perl6.org

[23:04] <timotimo> the one beginning in "Hi, my name is Camelia"?

[23:05] <timotimo> herby_: that's an interesting idea; so more or less offering a no-hassle "microblogging" thing for p6 devs and users to briefly (or at length) talk about what they're doing?

[23:05] <dugdig> timotimo: yes, that one

[23:05] <timotimo> i like it, too

[23:07] <herby_> timotimo: yep. Just something to kickstart discussions and positive conversations.  A good deal of the other programming subreddits have it (ex: python, rust) and I always enjoy reading the posts because it helps drive learning and creating new ideas

[23:07] <timotimo> oh! i haven't seen one of those yet

[23:07] <herby_> https://www.reddit.com/r/rust/comments/8aw5bg/whats_everyone_working_on_this_week_152018/

[23:07] <herby_> https://www.reddit.com/r/Python/comments/8b7uc8/whats_everyone_working_on_this_week/

[23:08] <herby_> it's always stickied at the top of the board, and it could be great for people who are stopping by for the first time

[23:14] *** giraffe left
[23:16] <Guest89780> how do you write 0b00000101 to file?

[23:17] <Guest89780> or any other base

[23:18] <timotimo> you'd want to have the value as an integer, split it into 8-byte sized chunks, and then use the "write" functions of file handles instead of the "print" family

[23:19] <timotimo> you'll want to make either a Buf or a Blob for your data

[23:19] <Guest89780> spurt "file", :16("AB"), :bin

[23:20] <Guest89780> not like that?

[23:20] <timotimo> or if you want to open, write, and close all in one step, you can use the "spurt" subroutine/method with a Blob or Buf

[23:20] <timotimo> no, that will turn your number into a string first and write it as an ascii representation into the file

[23:20] <timotimo> unless that's what you want

[23:20] <Guest89780> no

[23:20] <timotimo> it's difficult to talk about this precisely :D

[23:21] <Guest89780> why do you need to split it into chunks? :16("FFFF") should write two bytes?

[23:23] <timotimo> sorry, i got disconnected from my irc for a moment

[23:23] *** dct left
[23:23] <Guest89780> why do you need to split it into chunks? :16("FFFF") should write two bytes?

[23:24] <timotimo> we only support writing 8 bits per piece at a time. not sure if that's the actual reason for it, but endianness is the big issue i see here

[23:25] <Guest89780> do you mean using pack() ?

[23:25] <timotimo> you could use pack for it, but the current implementation of pack in perl6 is marked as "experimental", i.e. it could change or disappear at any time

[23:25] <timotimo> buggable: eco pack

[23:25] <buggable> timotimo, Found 17 results: MessagePack, Net::Packet, Data::MessagePack, HTTP::HPACK, if. See https://modules.perl6.org/s/pack

[23:26] <timotimo> ah, this doesn't seem bad

[23:26] <timotimo> buggable: eco P5pack

[23:26] <buggable> timotimo, P5pack 'Implement Perl 5's pack()/unpack() built-ins': http://www.cpan.org/authors/id/E/EL/ELIZABETH/Perl6/P5pack-0.0.2.tar.gz

[23:26] <timotimo> buggable: eco numeric::pack

[23:26] <buggable> timotimo, Numeric::Pack 'Convert perl6 Numerics to Bufs and back again!': https://github.com/samgwise/p6-Numeric-Pack

[23:26] <timotimo> buggable: eco native::packing

[23:26] <buggable> timotimo, Native::Packing 'Endian safe Binary Struct packing and unpacking': https://github.com/p6-pdf/Native-Packing-p6

[23:26] <timotimo> i have not tested any of those yet

[23:28] <Guest89780> m: Buf.new(0xf) == Blob.new(0xf)

[23:28] <camelia> rakudo-moar 08b951c8f: OUTPUT: ¬´Resource temporarily unavailable¬ª

[23:28] <timotimo> == is not the right operator to use here

[23:28] <timotimo> that's numerical equivalence, i.e. interpret both sides as a number

[23:29] <timotimo> m: say Buf.new(0xf) == 1

[23:29] <timotimo> hm, camelia is having a little hiccup?

[23:29] <timotimo> evalable6: say Buf.new(0xf) == 1

[23:29] <evalable6> timotimo, rakudo-moar 08b951c8f: OUTPUT: ¬´True‚ê§¬ª

[23:29] <herby_> m: say "no way jose"

[23:29] <Guest89780> === is false but == is true

[23:30] <timotimo> m: say Buf.new(0xf) eqv Blob.new(0xf) # this is closer to what you want, but eqv also wants you to have the same type on both sides

[23:30] <Guest89780> is there a function that will split numbers?

[23:30] <timotimo> we have polymod

[23:30] <camelia> rakudo-moar 08b951c8f: OUTPUT: ¬´Resource temporarily unavailable¬ª

[23:30] <camelia> rakudo-moar 08b951c8f: OUTPUT: ¬´False‚ê§¬ª

[23:30] <timotimo> https://docs.perl6.org/routine/polymod

[23:31] <timotimo> m: my @digits-in-base256 = 9123607.polymod(256 xx *); say @digits-in-base256.reverse

[23:31] <camelia> rakudo-moar 08b951c8f: OUTPUT: ¬´(139 55 23)‚ê§¬ª

[23:31] <timotimo> m: say :256[139, 55, 23]

[23:31] <camelia> rakudo-moar 08b951c8f: OUTPUT: ¬´9123607‚ê§¬ª

[23:34] *** probono7I1V2Q joined
[23:37] *** probono7I1V2Q left
[23:37] <Guest89780> why are Blob and Buf reveresed?

[23:39] *** simpleseeker left
[23:43] <timotimo> how do you mean?

[23:45] *** |oLa| left
[23:46] <Guest89780> m: 0x0102030405060708090a.polymod(256 xx *) == (0x01..0x0a).reverse

[23:46] <camelia> rakudo-moar 08b951c8f: OUTPUT: ¬´WARNINGS for <tmp>:‚ê§Useless use of "==" in expression ".polymod(256 xx *) == (0x01..0x0a).reverse" in sink context (line 1)‚ê§¬ª

[23:47] <timotimo> the == operator will lie to you here

[23:48] <timotimo> but the reason is that polymod works by taking the mod and then dividing to get to the next values, so the first value in the list will be the smallest contributor to the number

[23:48] <timotimo> herby_: i didn't have a chance to look at the threads yet, but now i shall

[23:48] <herby_> :)

[23:49] <Guest89780> m: spurt "file", Blob.new(0x01..0x0a), :bin; say qx/hexdump file/

[23:49] <camelia> rakudo-moar 08b951c8f: OUTPUT: ¬´spurt is disallowed in restricted setting‚ê§  in sub restricted at src/RESTRICTED.setting line 1‚ê§  in sub spurt at src/RESTRICTED.setting line 17‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[23:50] <Guest89780> hexdump says "090a 0708 0506 0304 0102"

[23:50] <Guest89780> but I want it to say "0102 0304 0506 0708 090a"

[23:51] <timotimo> that's weird, when i do the same code and use xdd i get 00000000: 0102 0304 0506 0708 090a

[23:51] <Guest89780> Blob.new(0x01..0x0a.reverse # 0201 0403 0605 0807 0a09

[23:51] <timotimo> ah, interesting

[23:52] <timotimo> try different flags for hexdump, for example hexdump -C

[23:52] <timotimo> or hexdump -b gives you the data in octal

[23:53] <timotimo>        -x, --two-bytes-hex

[23:53] <timotimo>               Two-byte hexadecimal display.  Display the input offset in hexadecimal, followed by eight space-separated, four-col‚Äê

[23:53] <timotimo>               umn, zero-filled, two-byte quantities of input data, in hexadecimal, per line.

[23:53] <timotimo> it looks like, from the man page, this is what it does by default

[23:54] <timotimo> actually, huh again, because hexdump on the file gives me 0201 0403 0605 0807 0a09

[23:54] <timotimo> rather than your 090a 0708 etc

[23:55] <Guest89780> depends if you reverse the Blob

[23:55] *** pharv left
[23:55] <timotimo> ah, i was using the exact code you had pasted for camelia (where you got the error about spurt not being allowed in the RESTRICTED setting)

[23:55] *** mcmillhj joined
[23:56] *** |oLa| joined
[23:56] *** markong left
[23:56] *** pharv joined
[23:58] <Guest89780> what about `spurt "file", Blob.new(@rray).reverse, :bin; say (slurp "file", :bin)` ?

[23:58] <Guest89780> how do you know if it is in the right order in the actual file?

[23:58] *** simpleseeker joined
[23:58] <timotimo> i think you probably want the .reverse inside the Blob.new() call

[23:58] <timotimo> rather than outside

[23:59] <Guest89780> no diff

[23:59] <timotimo> locally i get

[23:59] <timotimo> timo@schmand ~> perl6 -e 'spurt "/tmp/file.txt", Blob.new(0x01..0x0a);'

[23:59] <timotimo> timo@schmand ~> perl6 -e 'say slurp "/tmp/file.txt", :bin'

[23:59] <timotimo> Buf[uint8]:0x<01 02 03 04 05 06 07 08 09 0a>

