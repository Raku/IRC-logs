[00:06] *** lizmat joined
[00:10] *** geekosaur left
[00:10] *** epony joined
[00:11] *** epony left
[00:11] *** sena_kun left
[00:12] *** dct left
[00:12] *** epony joined
[00:17] *** geekosaur joined
[00:24] <comborico1611> Anyone in America?

[00:38] *** comborico1611_ joined
[00:39] <tbrowder> Yes, but mighy cold!

[00:40] <geekosaur> I'll let you know after I defrost

[00:40] <tbrowder> Happy New Year, #perl6!

[00:42] <comborico1611_> Austin, Texas is in some bad icy roads

[00:42] <comborico1611_> Happy New Year, tbrowder.

[00:50] <comborico1611_> Anyone want to start a project with me?

[00:51] *** cdg joined
[00:56] *** cdg left
[01:03] *** Cabanossi left
[01:05] *** Cabanossi joined
[01:07] *** cog_ joined
[01:09] *** cognominal left
[01:10] *** BenGoldberg joined
[01:13] *** markong left
[01:14] <tbrowder> what project?

[01:17] <comborico1611_> Redo bash to make it more beginner friendly.

[01:19] <comborico1611_> Example ls -l lists files in detail but does not use kilobtye or megabyte or gigbyte when listing the files.  It's just a raw number.  So we remove that from bbash (beginner bash).

[01:20] <comborico1611_> Also, ls is not beginner-friendly.  We use list, instead. And so forth.  Just redo the whole thing.  Go over every feature with a fine-tooth comb.

[01:20] <geekosaur> ls is nbot part of bash

[01:20] <geekosaur> if you mean redo unix, that's what OS X is for

[01:20] <comborico1611_> ls works in bash.

[01:21] <geekosaur> and ye,s obviously you mean every command is built into the shell as well as part of the redo

[01:21] <geekosaur> yes, perl6 works in bash too, so is fixing rakudo fixing bash?

[01:21] <tbrowder> uh, excuse me while i barf! i do bash only when absolutely necessary, perl 6|5 otherwise.  but i’m sure it will be useful—i’ld just rather use my time on other things (like p6).

[01:22] <geekosaur> there comes a point where "redo because this is how I think" gets in everyone else's way

[01:22] <comborico1611_> There are decades of comments of how command line is garbage.

[01:22] <comborico1611_> ls -l is garbage.

[01:22] <tbrowder> have you ever attended the austin pm mtgs?

[01:23] <comborico1611_> Nope.

[01:23] <tbrowder> they have a pretty active group...

[01:23] <comborico1611_> I'll check them out.  Thanks!

[01:23] *** wamba left
[01:24] <geekosaur> again, that is what OS X is for

[01:25] <comborico1611_> tbrowder, not finding them.

[01:25] <tbrowder> i wish we in the nw florida area had an active pm group...

[01:25] <geekosaur> yes there's decades of comments. there's decades of comments in favor of them as well. do experts necessarily get penalized because newcomers are all that count?

[01:25] <comborico1611_> Pensacola?

[01:25] <tbrowder> hm, let me check...

[01:25] <comborico1611_> geekosaur, I didn't say replace bash.

[01:26] <tbrowder> see http://austin.pm

[01:26] <comborico1611_> Thanks!

[01:27] <tbrowder> i’m in niceville, fl, across the bay from destin, and about i hr east of p’cola.

[01:27] *** geekosaur left
[01:28] *** cdg joined
[01:28] <tbrowder> the perl folks would love a YAPC::NA (TPC::NA) in our area!

[01:28] <comborico1611_> That's good country over there.

[01:29] <comborico1611_> Sorry, I do not understand.

[01:29] <tbrowder> roger! the “emerald coast” has some of the most beautiful beaches in the world.

[01:30] <tbrowder> YAPC::NA yet another perl conference, north america; ,

[01:31] *** xcm left
[01:31] <tbrowder> now called TPC::NA, the perl conference...

[01:31] <comborico1611_> Heh.  Austin Perlmonger's email subscription is powered by python.

[01:31] <comborico1611_> I see.  Thank you!

[01:31] *** silug left
[01:31] <tbrowder> yeah, don’t blame me!

[01:31] <comborico1611_> Heh.

[01:32] *** xcm joined
[01:33] <comborico1611_> This is an interesting read: http://kawagner.blogspot.com/2006/11/rich-languages-vs-minimal-languages.html

[01:33] <tbrowder> last yr the TPC::NA was in DC, in 2016 it was in orlando, fl. i heard the location for this year but it wasn’t official so i won’t reveal it.

[01:35] <comborico1611_> Heh.  I'll guess it's um, Austin.

[01:37] *** geekosaur joined
[01:39] <tbrowder> i can neither confirm nor deny...

[01:39] <comborico1611_> Well, I'm off to slumber on this frigid night -- grateful to be in a warm home!

[01:39] *** comborico1611_ left
[01:42] <tbrowder> ref the blog ref: that leads nicely to one of the reasons i love p6: it’s a very rich language but a beginner can learn it easily by starting with basic usage. i have been trying to convince educators in our area to use p6 as a begginnng programming language.

[01:44] <tbrowder> (not much luck, though—don’t know the right people)

[01:45] *** comborico1611 left
[02:16] *** FROGGS_ joined
[02:19] *** FROGGS left
[02:35] *** Kaiepi left
[02:36] *** Kaiepi joined
[02:46] *** ilbot3 left
[02:58] *** ilbot3 joined
[02:58] *** ChanServ sets mode: +v ilbot3

[03:00] *** Zoffix joined
[03:00] *** Zoffix left
[03:02] *** xcm left
[03:04] *** xcm joined
[03:14] *** Kaiepi left
[03:16] *** Kaiepi joined
[03:16] *** pilne left
[03:21] *** Kaiepi left
[03:21] *** Kaiepi joined
[03:49] *** kerframil left
[04:08] *** khisanth_ left
[04:28] *** cdg left
[04:32] *** cdg joined
[04:37] *** cdg left
[04:51] *** Cabanossi left
[04:52] *** Cabanossi joined
[04:55] *** cdg joined
[04:58] *** cdg_ joined
[04:59] *** cdg left
[05:03] *** cdg_ left
[05:09] *** cdg joined
[05:13] *** cdg left
[05:18] *** telex left
[05:20] *** telex joined
[05:30] *** APic left
[05:38] *** xcm left
[05:39] *** xcm joined
[05:39] *** APic joined
[05:41] *** khw left
[05:51] *** darutoko joined
[06:09] *** Actualeyes left
[06:11] *** Actualeyes joined
[06:15] *** FROGGS_ left
[06:23] *** geospeck joined
[06:27] *** geospeck left
[06:48] *** Aceeri_ joined
[06:53] *** BenGoldberg left
[07:15] *** FROGGS joined
[07:29] *** cdg joined
[07:33] *** cdg left
[07:39] *** FROGGS left
[07:50] *** ttan joined
[07:55] *** ttan left
[08:03] *** lowbro joined
[08:03] *** lowbro left
[08:03] *** lowbro joined
[08:07] *** wamba joined
[08:07] *** andrzejku joined
[08:08] <andrzejku> hey people

[08:08] <andrzejku> I have the question to the guys who develop MoarVM

[08:14] <geekosaur> might ask in #moarvm then....

[08:14] <gfldex> andrzejku there is #moarvm

[08:15] <geekosaur> (but they're mostly on evenings, European time)

[08:25] <andrzejku> ahh

[08:25] <lookatme> :) haha

[08:26] <andrzejku> lookatme: hey come to Telegram

[08:26] <andrzejku> lookatme: and nice to meet you in the New Year

[08:27] <lookatme> Hmm, Okay will available after work

[08:27] <andrzejku> lookatme: I need to ask which things are necessary for AST tree structures from Perl6 and which we can just implement  or took implementation in Perl6

[08:28] <andrzejku> lookatme: hard topic for beginners

[08:29] <lookatme> MoarVM is just a VM, I think there is no things what we wanted

[08:31] <andrzejku> lookatme: I am dumb ;s

[08:32] <andrzejku> doesn moarvm only run IR code?

[08:33] <geekosaur> its own bytecode, yes

[08:34] <andrzejku> https://github.com/perl6/nqp/blob/master/docs/ops.markdown

[08:34] <andrzejku> it is probably that one

[08:34] <lookatme> yeah, that'

[08:34] <geekosaur> builtin ops, yes. rakudo registers some of its own, for e,.g. spesh

[08:35] <andrzejku> lookatme: so if we want to use LLVM IR than these all things are not useful

[08:36] <andrzejku> the question then is if there will be something which is missing in IR comparing to Perl6 OPS

[08:36] <lookatme>  a little helpful, we can implement that built-in ops in LLVM IR, hope I am right :)

[08:37] <andrzejku> lookatme: so the question is which part of perl6 are explicitly converted to the ops and which are used as modules

[08:38] <lookatme> https://github.com/perl6/nqp/tree/master/src/vm

[08:38] *** AlexDaniel left
[08:39] <geekosaur> andrzejku, the correct answer there is to look at nqp, probably both the moarvm and jvm backends

[08:39] <lookatme> They call that stage0, right ?

[08:40] <lookatme> I am not sure

[08:41] <geekosaur> rakudo does some things at perl 6 level and more low level stuff at nqp level; the nqp backends work with {M,J}AST (low level ASTs per backend) and know how to generate code for low level operations

[08:41] *** leont_ left
[08:45] <andrzejku> geekosaur: I still cann't understand how is it workign that we can write a NQP in Perl6 compile it and generate OPS, someone here send that C works the same but thats a chicken egg problem which I don't understand very well

[08:46] <andrzejku> lookatme: I find this link https://perlgeek.de/blog-en/perl-6/2013-rakudos-abstract-syntax-tree.html

[08:49] *** kerframil joined
[08:52] <andrzejku> andrzejku: the first C implementation was probably in Assembler, then they rewrite some parts into C and compile it or what?:D

[08:52] <lookatme> andrzejku, that maybe out date

[08:53] <andrzejku> so to compile the next release of compiler you need the previous compiler

[08:53] <andrzejku> thats how I undestand

[08:53] <lookatme> such as they write the 1st version NQP in c 

[08:53] <lookatme> and then write NQP with NQP ?

[08:54] *** rindolf joined
[08:54] <andrzejku> yeah so they took a binary compiler to compile the next NQP?

[08:54] <lookatme> andrzejku, yeah

[08:54] <andrzejku> lol

[08:54] <andrzejku> lookatme: where is binary compiler in NQP sources?

[08:54] <lookatme> you may search the keyword bootstrap

[08:54] <andrzejku> okay

[08:54] <lookatme> compiler bootstrap

[08:55] *** kerframil left
[08:56] *** xcm left
[08:57] *** xcm joined
[09:00] *** titsuki_ left
[09:04] *** zakharyas joined
[09:05] *** abraxxa joined
[09:11] *** leont_ joined
[09:15] <andrzejku> lookatme: oh yea it looks even more complicated :P

[09:15] <andrzejku> they write a grammar parser using PGE which written in PIR

[09:15] <andrzejku> and it used a Parrot

[09:15] <andrzejku> VM

[09:17] *** scimon joined
[09:22] *** rindolf left
[09:22] *** araujo joined
[09:24] *** domidumont joined
[09:29] *** xcm left
[09:30] *** xcm joined
[09:31] *** domidumont left
[09:31] *** domidumont joined
[09:32] <geekosaur> and it's not unusual to find that to do a full bootstrap you have to go through older versions: the parrot one for rakudo, and for gcc if you want to build it with a different C compiler you need to go back to (iirc) gcc 1.45, then use that to build a newer gcc

[09:32] *** natrys joined
[09:33] <geekosaur> ghc (haskell compiler) was originally written in lazy ml, then retargeted against hbc, then became self-targeting later. (you can;t do that one from scratch because both lml and hbc have been lost to time)

[09:35] *** committable6 left
[09:35] *** committable6 joined
[09:35] <geekosaur> the first "portable C compiler" (pcc, aka cc in 7th research edition unix) was written in B iirc, with later ones self-targeting. the bootstrap B compiler was written in BCPL. you can look up BCPL antecedents on wikipedia; I've forgotten past that :)

[09:36] <DrForr> Also look up the Thompson hack if you're in that era.

[09:53] *** domidumont left
[09:55] *** araujo left
[09:55] *** leont_ left
[09:56] *** leont_ joined
[09:56] *** sena_kun joined
[09:57] *** eiro joined
[09:58] <eiro> hello everyone

[09:58] * DrForr waves while writing up a FOSDEM talk proposal.

[09:59] <Altreus> yay fosdem \o/

[09:59] <Altreus> does p6 deserve its own track yet

[10:00] <DrForr> Right now we're short on Perl talks *period*, either 5 or 6, apparently.

[10:01] *** cdg joined
[10:03] *** cdg_ joined
[10:04] *** smash joined
[10:06] *** cdg left
[10:07] *** cdg_ left
[10:08] *** araujo joined
[10:08] *** leont_ left
[10:14] *** wander joined
[10:18] *** wander left
[10:32] *** araujo left
[10:34] *** natrys left
[10:41] *** wbiker left
[11:00] * DrForr submits 2, hoping only one is needed.

[11:04] <El_Che> as far I can see, we should be ok (including one DrForr's talk)

[11:04] <El_Che> we had many responses and we have probably more than slots available now

[11:04] *** rindolf joined
[11:04] <El_Che> will check in an hour or so, while inputting the talks

[11:05] <sjn> El_Che: any talks suitable for newbies to the Perl community?

[11:05] * sjn has been missing those quite often :-\

[11:09] <El_Che> sjn: need to check, but there may be a 20m block if you want to do a community talk (again: need to check to be sure and make sure I haven't missed any mail in the last days)

[11:09] <El_Che> block time today to finalised stuff. Some people sent in backup talks just in case (which is very nice in case there is a gap)

[11:10] <El_Che> bbl

[11:10] <DrForr> El_Che: Before you go, email?

[11:11] <El_Che> mail me the details of the talk along what we discussed, yes. I put you there as 40m "confirmed"

[11:13] <DrForr> I can do 2 20m if needed as well, I'll pass that in email as well.

[11:14] *** kaare_ left
[11:15] *** ChoHag joined
[11:17] <Geth> ¦ perl6-lwp-simple: wukgdu++ created pull request #21: Close the temporary file

[11:17] <Geth> ¦ perl6-lwp-simple: review: https://github.com/perl6/perl6-lwp-simple/pull/21

[11:18] <Geth> ¦ perl6-lwp-simple: 829dc7840e | wukgdu++ | t/getstore.t

[11:18] <Geth> ¦ perl6-lwp-simple: Close the temporary file

[11:18] <Geth> ¦ perl6-lwp-simple: review: https://github.com/perl6/perl6-lwp-simple/commit/829dc7840e

[11:18] <Geth> ¦ perl6-lwp-simple: b3ade50f75 | (Zoffix Znet)++ (committed using GitHub Web editor) | t/getstore.t

[11:18] <Geth> ¦ perl6-lwp-simple: Merge pull request #21 from wukgdu/closefile

[11:18] <Geth> ¦ perl6-lwp-simple: 

[11:18] <Geth> ¦ perl6-lwp-simple: Close the temporary file

[11:18] <Geth> ¦ perl6-lwp-simple: review: https://github.com/perl6/perl6-lwp-simple/commit/b3ade50f75

[11:18] <Geth> ¦ perl6-lwp-simple: a927ed8e10 | (Zoffix Znet)++ (committed using GitHub Web editor) | META6.json

[11:18] <Geth> ¦ perl6-lwp-simple: Bump version

[11:18] <Geth> ¦ perl6-lwp-simple: review: https://github.com/perl6/perl6-lwp-simple/commit/a927ed8e10

[11:18] *** wamba left
[11:21] *** kaare_ joined
[11:28] *** MasterDuke left
[11:37] <tyil> so, I want to rename App::Cpan6 to App::Assixt, and wanted your input on this. My main reasons for renaming is that people are probably used to `cpan` in their shells, which install modules, whereas my `cpan6` does not deal with installing modules. Another issue I had was tab-completion, it will complete to cpan, which made me have to add an additional 6 each time manually. The intent of my module is not only

[11:37] <tyil> to create a new module skeleton, but to also assist the dev with continued development on this module. There's documentation on what it can do: https://github.com/scriptkitties/perl6-App-Cpan6

[11:38] *** Aceeri_ left
[11:40] *** vichib left
[11:44] *** domidumont joined
[12:01] *** reportable6 left
[12:02] *** reportable6 joined
[12:03] *** zakharyas left
[12:06] *** cdg_ joined
[12:08] *** MasterDuke joined
[12:11] *** cdg_ left
[12:11] *** cdg joined
[12:14] *** jeromelanteri left
[12:14] *** cdg_ joined
[12:16] *** cdg left
[12:18] *** cdg_ left
[12:19] *** markong joined
[12:22] *** wamba joined
[12:26] *** wamba left
[12:31] *** lasse_ joined
[13:01] *** jeromelanteri joined
[13:02] *** Gruber is now known as Grrrr

[13:03] *** pmurias joined
[13:08] *** zakharyas joined
[13:08] <pmurias> tbrowder: a big argument against using Perl 6 is as the first language is that it currently makes the "medium" stage of learning programming harder

[13:09] *** statisfiable6 left
[13:09] *** statisfiable6 joined
[13:09] *** ChanServ sets mode: +v statisfiable6

[13:09] <pmurias> tbrowder: sure it should for the initial stage where you learn some basic concepts and syntax but it's harder to actually build something less basic with it (mostly because the ecosystem is not yet here)

[13:11] *** nativecallable6 left
[13:11] *** nativecallable6 joined
[13:11] *** ChanServ sets mode: +v nativecallable6

[13:12] <DrForr> You could argue that Inline::Perl5 could help there, but there's the argument that "if I need help from Perl 5 libraries, why am I wasting time with Perl 6?"

[13:13] <pmurias> DrForr: it's an extra obstacle for a beginner

[13:13] <DrForr> Nod.

[13:13] <DrForr> It also pulls you out of the p6 mindset and means you need to read p5 docs and translate, which isn't what a pure p6 curriculum would want.

[13:14] *** titsuki joined
[13:15] <tbrowder> pmurias: thnx for yr thoughts. i hadn’t considered what comes after basics, but what kinds of ecosystem things do we need? there is the most wanted modules list, but i don’t remember it being prioritized in any way.

[13:21] <pmurias> tbrowder: hard to say, I guess that depends on whatever the first learning project the beginner will want to build

[13:25] *** pmurias left
[13:30] <scimon> Starting a weekly lunchtime Perl6 Coding Workshop at work tomorrow. No idea what we're going to do. 

[13:30] *** jeromelanteri left
[13:32] <lizmat> scimon: is there anything I can point to for the P6W ?

[13:33] <scimon> Just internal company stuff for now. And I've had a lazy holiday. 

[13:34] <scimon> I may take another look at the most wanted list and see if there's anything I think I can manage.

[13:36] *** bdmatatu joined
[13:36] *** pmurias joined
[13:37] *** scimon left
[13:38] *** scimon joined
[13:39] <scimon> note to self... be wary of recursive multi subs... you may end up locking your machine up.

[13:39] <scimon> Note to everyone else... that.

[13:39] <DrForr> BTDT.

[13:39] <DrForr> But still thanks.

[13:45] <timotimo> right, very tight recursion is a very good way to make moarvm allocate and use memory really, really fast

[13:45] *** cdg joined
[13:49] *** cdg left
[13:49] *** cdg joined
[13:55] <rindolf> DrForr: what is btdt?

[13:56] <Altreus> gonna guess, been there done that

[13:57] <Altreus> who's printing the t-shirts

[13:57] <DrForr> Correct, Altreus. And not me.

[14:09] *** xi- left
[14:09] *** xi- joined
[14:27] *** pmurias left
[14:33] *** pmurias joined
[14:53] <tyil> DrForr: a friend of mine has that argument against p6 rn, many modules he wants are only available in perl 5, so while he *could* use Inline::Perl5 and get what he wants, why would he if he can also just use perl 5

[14:54] <lizmat> tyil: please find out which modules it's about

[14:55] <tyil> lizmat: WWW::Mechanize he was referring specifically back when he was looking in to it

[14:57] *** silug joined
[14:57] <scimon> Hmmmm.... See on the one hand it's a bit of functionality I'm really not a fan of (I'd much prefer to be accessing an API than trying to scrape a site) on the other. It'd be an interesting challenge to write. 

[14:58] <tyil> not all sites come with an API

[14:58] <scimon> I know. 

[14:58] <tyil> so its not always an option

[14:58] <scimon> Indeed. 

[15:04] <scimon> So, I had been wanting to learn Grammars. And a Grammar that takes a document an returns a list of links seems feasible. 

[15:05] *** dmaestro joined
[15:05] <scimon> Unless I'm preparing an expedition to crazy town.

[15:05] <DrForr> Or a regex that matches your link pattern aplied with m:g :)

[15:06] <scimon> A) Don't parse HTML with regexs that way lies madness and the summoning of Elder gods and B) then I don't get to learn Grammars. 

[15:06] <dmaestro> I'm finding that Rakudo* 2017.10 is very buggy on MacOSX, regarding moarvm spesh and jit. Anyone else been seeing or reporting this?

[15:07] <scimon> (Plus I also want to be able to get forms and getting all the form fields with regexes... see elder gods)

[15:10] <Ulti> dmaestro I can check if you want, is this the release rather than some other version?

[15:10] <Ulti> also what sort of thing?

[15:11] <dmaestro> Ulti: The Rakudo Star .dmg

[15:12] <Ulti> oh right I literally never use that

[15:13] <Ulti> dmaestro I doubt there are too many people who do actually so any info you have is likely really valuable

[15:14] <scimon> tyil: Thinking about it a Perl6 version oculd provide some functionality that the Perl5 one doesn't easily (multiple parallel link following for instance). 

[15:14] <scimon> Hmmmm.

[15:15] <dmaestro> I found the JIT problem with NativeCall / Inline::Perl5, and nine is aware of it. Tickets on Inline::Perl5 and MoarVM. A program I just tried blew up using nothing more than EVAL, regex, and ». (and I don't think EVAL had anything to do with it) - It just dropped a bunch of results.

[15:15] <dmaestro> Disabling SPESH made my program work.

[15:15] *** comborico1611 joined
[15:16] <dmaestro> Don't have time now to post a new ticket, but I will when I get a chance.

[15:17] *** Zoffix joined
[15:17] <Ulti> anything specific?

[15:17] <Ulti> I just grabbed a copy

[15:17] <dmaestro> Meanwhile, I think the Rakudo* .dmg should be withdrawn in favor of 2017.07 :-(

[15:19] <Zoffix> m: my $c := Int(Cool); say 42 ~~ $c

[15:19] <camelia> rakudo-moar f8d8481c9: OUTPUT: «False␤»

[15:19] <Ulti> also promote things like the homebrew package

[15:19] <Zoffix> Kinda expected that to give True. What are some uses of coercers outside of signatures? They're parsed during different machinery and I was hoping to write proper tests for them, but having a hard time... "using"... them

[15:19] <Zoffix> s/during/using/;

[15:20] <Ulti> dmaestro: a straight EVAL worked ok for me

[15:21] <Ulti> though not something complex

[15:22] <scimon> (Pre ordered my copy of moritz's new book :) )

[15:26] <dmaestro> Ulti: Here is my program: https://gist.github.com/dmaestro/5366f1426c2295e521b491e76989d31b

[15:27] *** domidumont left
[15:30] *** wamba joined
[15:30] <dmaestro> Ulti: have to leave for now, thanks for checking this.

[15:30] *** dmaestro left
[15:32] *** geospeck joined
[15:34] <Zoffix> m: say :(42) ~~ :(Int(Any))

[15:34] <camelia> rakudo-moar f8d8481c9: OUTPUT: «False␤»

[15:34] <Zoffix> a can of worms these coercers are...

[15:35] <Zoffix> m: say :(42) ~~ :(Int)

[15:35] <camelia> rakudo-moar f8d8481c9: OUTPUT: «False␤»

[15:36] <Zoffix> :/

[15:36] <Zoffix> Ah, k, makes sense

[15:37] *** geospeck left
[15:40] *** domidumont joined
[15:40] <Geth> ¦ doc: 8e000ca5eb | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Signature.pod6

[15:40] <Geth> ¦ doc: Document Signature.ACCEPTS can't see into `where` clauses

[15:40] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8e000ca5eb

[15:40] <synopsebot> Link: https://doc.perl6.org/type/Signature

[15:41] *** domidumont left
[15:41] <Geth> ¦ doc: 15b95574c6 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Signature.pod6

[15:41] <Geth> ¦ doc: s:g/RESULT/OUTPUT/

[15:41] <Geth> ¦ doc: 

[15:41] <Geth> ¦ doc: Since that's what we usually use

[15:41] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/15b95574c6

[15:41] <scimon> No promises until tomorrow but I may bring up the "Perl6 WWW:Mechanize" at the workshop. And I'm discussing with my boss to ensure if we work on it in the office we can still release it OS :) 

[15:42] <scimon> More info when I have it.

[15:42] *** releasable6 left
[15:42] *** releasable6 joined
[15:42] *** ChanServ sets mode: +v releasable6

[15:43] <Geth> ¦ doc: 235259e2d5 | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/Signature.pod6

[15:43] <Geth> ¦ doc: Fix typos

[15:43] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/235259e2d5

[15:44] *** Zoffix left
[15:44] *** comborico1611 left
[15:46] *** ZofBot left
[15:46] *** ZofBot joined
[15:46] *** ChanServ sets mode: +v ZofBot

[15:51] <abraxxa> i'd like to write an icmp(v6) ping monitoring daemon in Perl 6, any pointer where to start as there is no icmp module at all as far as i've seen?

[15:52] *** comborico1611 joined
[15:52] <abraxxa> the Net::Frame modules for Perl 5 on CPAN look good, ideally I'd write such a Perl 6 module

[15:52] *** stmuk_ joined
[15:54] *** stmuk left
[15:58] *** khw joined
[16:05] <tony-o> https://modules.zef.pm/modules/Jorn%20van%20Engelen/Net::Packet

[16:05] <tony-o> might give you a bit of a start abraxxa 

[16:06] <abraxxa> tony-o: thanks!

[16:08] <comborico1611> What does bootstrapping mean?

[16:09] <comborico1611> I search Wiki.  They said booting a computer. . .

[16:10] <Altreus> different things in different contexts

[16:10] <[Coke]> in this context: https://stackoverflow.com/questions/1254542/what-is-bootstrapping

[16:10] <scimon> Generally building something you can then use to build something more complex.

[16:10] <[Coke]> er, s/this/a Perl 6/

[16:10] <abraxxa> i only knew modules.perl6.org

[16:10] <[Coke]> from the top answer:

[16:10] <[Coke]> "Bootstrapping" is also used as a term for building a system using itself -- or more correctly, a predecessor version. For example, ANTLR version 3 is written using a parser developed in ANTLR version 2.

[16:10] *** konsolebox left
[16:11] <abraxxa> is jpve around here?

[16:11] * DrForr pricks his ears up at the mention of ANTLR :)

[16:11] <[Coke]> .seen jpve

[16:11] <yoleaux> I saw jpve 20 Nov 2014 12:15Z in #perl6: <jpve> Ah ok, thanks for the pointer, thats much simpler indeed :)

[16:11] <[Coke]> not for some time.

[16:12] <abraxxa> ;(

[16:12] <comborico1611> lol Drforr.

[16:12] <abraxxa> the question is if this three year old Perl 6 code is still state of the art

[16:12] <comborico1611> Thanks!

[16:12] <Altreus> idk, mostly when I hear about bootstrapping I assume there's some packaged version of a script that installs itself

[16:12] <Altreus> like cpanm or something

[16:13] <Altreus> does NQP bootstrap perl6?

[16:14] <mspo> NQP is the IR for perl6

[16:15] <comborico1611> So we have "bootstrap loading" context.  Then, we have "self-building" context.

[16:15] <mspo> C bootstraps NQP and MoarVM, mostly

[16:15] <Altreus> sometimes I use it as "how to begin" :/

[16:15] <Altreus> even though I really mean, here are some manual steps to run

[16:15] <comborico1611> Yes, I've heard that connotation before

[16:15] <Altreus> nothing to do with bootstraps

[16:15] *** silug left
[16:16] <abraxxa> how do I get a raw socket? https://docs.perl6.org/language/5to6-perlfunc#sockets is a bit...nonexisting

[16:16] <mspo> it's a loaded term to say the least ;)

[16:16] *** konsolebox joined
[16:16] <mspo> abraxxa: you have to use NativeCall to do any networking that libuv doesn't provide + moar has exposed

[16:17] <timotimo> mspo: calling it an IR is not quite correct

[16:17] <timotimo> i'd say perl6 has multiple IR; first comes QAST, then comes MAST for moarvm

[16:17] <mspo> timotimo: okay.  Not sure what else to call it :)

[16:17] <abraxxa> mspo: UH! really?

[16:17] <abraxxa> than that's a no-go!

[16:17] <mspo> abraxxa: yeah it's not great

[16:17] <abraxxa> I had hoped to use its great async features!

[16:18] <mspo> abraxxa: udp was just added after I moaned about it last year ;)

[16:18] <comborico1611> First comes QAST, then comes MAST, then comes Perl6 in the baby carriage!

[16:18] *** natrys joined
[16:18] <mspo> abraxxa: not sure if unix sockets are in there at all either

[16:19] <mspo> abraxxa: because I went down the same road as you, wanting to hit all of these cool network tools in a super expressive language

[16:19] *** kerframil joined
[16:19] <abraxxa> I have to add IPv6 ping support to our NMS and wanted this to become the first Perl 6 piece

[16:21] *** xcm left
[16:22] *** xcm joined
[16:23] <timotimo> mspo: hold on, we have libuv-less sockets

[16:23] <abraxxa> libuv doesn't seem to have raw sockets

[16:24] <abraxxa> we should get Perl 6, no MoarVM listed here https://github.com/libuv/libuv

[16:24] *** silug joined
[16:25] <abraxxa> timotimo: are there docs for those?

[16:33] <mspo> timotimo: you do?

[16:33] <timotimo> https://github.com/MoarVM/MoarVM/blob/master/src/io/syncsocket.c

[16:33] <timotimo> IO::Socket::INET, abraxxa

[16:33] <timotimo> the ones that use libuv are IO::Socket::Async

[16:34] <abraxxa> hm, why isn't that listed in the core modules section?

[16:34] <abraxxa> https://docs.perl6.org/language/modules-core.html

[16:34] <abraxxa> IO::Socket is a type, but IO::Socket::INET is a class

[16:34] <abraxxa> timotimo: IO::Socket::INET provides TCP sockets, both the server and the client side.

[16:34] <abraxxa> i need an ICMP socket (Linux only but ok for me) of RAW

[16:36] <timotimo> yeah, for those you'll want to write nativecall code for now

[16:36] <abraxxa> nativecall to which library?

[16:36] <timotimo> is native(Str) probably, since moar is already linked with what you need

[16:39] *** lowbro left
[16:41] <abraxxa> timotimo: is there any example code I can cramp onto?

[16:43] *** lasse_ left
[16:43] <mspo> timotimo: sorry to mislead

[16:46] *** imcsk8 left
[16:46] <timotimo> no prob

[16:47] <timotimo> fwiw, we also do synchronous file i/o without libuv these days

[16:48] *** imcsk8 joined
[16:50] *** _Kaiepi joined
[16:50] *** Kaiepi left
[16:51] *** geospeck joined
[16:57] *** squashable6 left
[16:58] *** squashable6 joined
[16:58] *** ChanServ sets mode: +v squashable6

[16:59] *** abraxxa left
[17:12] *** eliasr joined
[17:16] *** scimon left
[17:18] *** setty1 joined
[17:19] <comborico1611> m: say hello

[17:19] <camelia> rakudo-moar f8d8481c9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared routine:␤    hello used at line 1. Did you mean 'shell'?␤␤»

[17:20] <comborico1611> m: say "hello";

[17:20] <camelia> rakudo-moar f8d8481c9: OUTPUT: «hello␤»

[17:22] *** bloatable6 left
[17:22] *** coverable6 left
[17:22] *** benchable6 left
[17:22] *** bloatable6 joined
[17:22] *** coverable6 joined
[17:22] *** ChanServ sets mode: +v coverable6

[17:22] *** benchable6 joined
[17:23] <comborico1611> m: sub do-twice( $code ) { $code( ); $code( ); }; sub  greet { say "Hello" }; do-twice( &greet );

[17:23] <camelia> rakudo-moar f8d8481c9: OUTPUT: «Hello␤Hello␤»

[17:24] <comborico1611> I suppose it is just an anomaly of Perl6 Parrot.  If I put spaces between () for code, it will not run.

[17:26] <perlpilot> "Perl6 Parrot"?!?

[17:26] <comborico1611> I dislike newer Ubuntu OS's.

[17:27] <comborico1611> I learned another reason why just yesterday.  You cannot sudo Dolphin in Kubuntu 17.

[17:30] <mspo> parrot is a bit old

[17:30] <comborico1611> And I couldn't get a 32 bit version of Rakudo easily.  So I stuck with Parrot.

[17:30] <comborico1611> Wait.

[17:30] <Ulti> ...

[17:31] <comborico1611> Yeah, this is Parrot.  

[17:31] <comborico1611> Anways, I'm off to lunch.  

[17:31] *** comborico1611 left
[17:33] <Ulti> fairly confident you could just pin the latest rakudo package and it'd probably work out

[17:34] *** AlexDaniel joined
[17:37] *** Zoffix joined
[17:38] <Zoffix> .tell comborico1611 Parrot existed before there was even first stable perl 6 release. You're using slow and broken compiler. Just run these commands to build your own rakudo: https://gist.github.com/zoffixznet/3b9aa2a85e352ef31e6aaa6a431baeb6  and you can just run `update-perl6` whenever new compiler release comes out, to upgrade

[17:38] <yoleaux> Zoffix: I'll pass your message to comborico1611.

[17:39] *** bisectable6 left
[17:39] *** bisectable6 joined
[17:39] *** ChanServ sets mode: +v bisectable6

[17:42] <Zoffix> Anyone know equivalent of `git checkout $(git describe --abbrev=0 --tags)` on Windows cmd.exe?

[17:46] <Zoffix> Got it: for /f usebackq %F in (`git describe "--abbrev=0" --tags`) do git checkout %F

[17:46] *** wamba left
[17:49] <Zoffix> huggable: sauce

[17:49] <huggable> Zoffix, Install untested latest development version of Rakudo from source: https://github.com/zoffixznet/r#table-of-contents

[17:50] <Zoffix> huggable: sauce :is: Install latest version of Rakudo from source: https://github.com/zoffixznet/r#table-of-contents

[17:50] <huggable> Zoffix, Added sauce as Install latest version of Rakudo from source: https://github.com/zoffixznet/r#table-of-contents

[17:50] <Zoffix> Made instructions default to latest release instead of HEAD

[17:53] *** Zoffix left
[17:55] *** domidumont joined
[17:56] *** Khisanth joined
[17:58] <AlexDaniel> .seen raiph

[17:58] <yoleaux> 01:18Z <tbrowder> AlexDaniel: Happy New Year! check out my new commits on rakudo PR #1339 and roast PR #371.

[17:58] <yoleaux> I saw raiph 20 Nov 2017 20:13Z in #perl6: <raiph> m: { Failure.new for 1 }() # I haven't found doc or RT covering why this doesn't report the Failure; any thoughts/pointers?

[17:58] <AlexDaniel> R#1339

[17:58] <synopsebot> R#1339 [open]: https://github.com/rakudo/rakudo/pull/1339 Provides for fixes for several POD bugs:

[18:00] <[Coke]> m: Failure.new

[18:00] <camelia> rakudo-moar f8d8481c9: OUTPUT: «Failed␤␤Actually thrown at:␤  in block <unit> at <tmp> line 1␤␤»

[18:00] <[Coke]> m: { Failure.new }

[18:00] <camelia> rakudo-moar f8d8481c9: OUTPUT: «Failed␤  in block <unit> at <tmp> line 1␤␤»

[18:00] <[Coke]> m: { Failure.new }()'

[18:00] <camelia> rakudo-moar f8d8481c9: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Two terms in a row␤at <tmp>:1␤------> 3{ Failure.new }()7⏏5'␤    expecting any of:␤        infix␤        infix stopper␤        statement end␤        statement modifier␤        stat…»

[18:00] <[Coke]> m: { Failure.new }()

[18:00] <camelia> rakudo-moar f8d8481c9: OUTPUT: «Failed␤  in block <unit> at <tmp> line 1␤␤»

[18:00] <[Coke]> wow, that is pretty specific. :)

[18:03] *** dmaestro joined
[18:06] <AlexDaniel> squashable6: next

[18:06] <squashable6> AlexDaniel, ⚠🍕 Next SQUASHathon in 1 day and ≈15 hours (2018-01-06 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:09] *** zakharyas left
[18:11] *** wamba joined
[18:16] <dmaestro> .tell Ulti That SPESH problem was not only MacOSX - also linux :-( -- going to check later versions 

[18:16] <yoleaux> dmaestro: I'll pass your message to Ulti.

[18:23] *** leont_ joined
[18:26] *** dwarring joined
[18:31] *** troys joined
[18:33] <Ulti> dmaestro: k

[18:33] <yoleaux> 18:16Z <dmaestro> Ulti: That SPESH problem was not only MacOSX - also linux :-( -- going to check later versions

[18:33] <Ulti> yoleaux needs some message distance logic :P

[18:35] <dmaestro> Ulti: I just checked 2017.12, built on MacOSX - problem is easily duplicated. Were you able to duplicate this on any platform?

[18:37] <Ulti> well I didnt have any input to run your code

[18:38] <Ulti> what version of macOS?

[18:38] <Ulti> Im 10.12.6

[18:41] *** comborico1611 joined
[18:45] <dmaestro> There is a commented line (with a lot of '_' ); I just tried putting 151 copies of that line in a test input file. My MacOS version is 10.11.6

[18:50] <dmaestro> I duplicated the problem with Rakudo 2017.10 on CentOS linux as well (6.6) - built by hand

[18:50] *** wamba left
[18:54] *** tabv left
[18:56] <Ulti> dmaestro: isnt that code as written just going to be a tonne of failed code execution?

[18:57] <dmaestro> The input lines are any double-quoted strings (don't include the '#' from the file).

[18:58] <Ulti> works for me

[18:59] <Ulti> Im on Rakudo form like an hour ago

[18:59] <dmaestro> That may be good news - I'll try the same.

[19:00] <Ulti> yeah even with 151 copies

[19:00] <Ulti> also this code in general scares me.. if its serious code

[19:00] *** FROGGS joined
[19:01] *** tobs joined
[19:01] <Ulti> as in doing an eval just to strip some quotes when you're parsing with a grammar already which can trivially strip them anyway

[19:02] <dmaestro> Not that serious (EVAL right?) - I was just trying some quick and dirty and thought I'd do it that way ... I was trying to get some good results with some additional processing I added later.

[19:03] *** dotness joined
[19:04] <dmaestro> Did eventually succeed BTW :-)

[19:04] <Ulti> what with the latest rakudo?

[19:05] *** darutoko left
[19:05] <dmaestro> still building - sec

[19:06] <dmaestro> Still fails for me - 'This is Rakudo version 2017.12-97-gf8d8481 built on MoarVM version 2017.12-19-g40a79ee'

[19:07] *** unicodable6 left
[19:07] *** unicodable6 joined
[19:10] *** sunnavy left
[19:11] *** sunnavy joined
[19:13] *** cdg left
[19:14] *** cdg joined
[19:18] *** cdg left
[19:19] <dmaestro> Could chalk it up to EVAL? This works: my @raw-names = $*IN.lines.grep({  / ^ '"' <[ \w - ]>+ '"' $ / })».subst( / \" /, '', :g );

[19:21] <dmaestro> ^No, it breaks if I give it more input (twice)

[19:23] <dmaestro> I got caught by saying MVM_SPESH_DISABLE=0 - that does not actually disable, like MVM_SPESH_DISABLE=

[19:25] <dmaestro> cat test_input test_input | MVM_SPESH_DISABLE= /Applications/Rakudo/bin/perl6 test_perl6-1.pm | wc -l

[19:25] <dmaestro> 241

[19:26] *** pecastro joined
[19:26] <timotimo> right, has to have a non-empty string that isn't 0

[19:35] <dmaestro> Oh, I meant =0 does NOT disable, in my experience.

[19:37] <dmaestro> So any non-zero-length value ;-) will disable ...

[19:38] *** pilne joined
[19:38] *** greppable6 left
[19:39] *** greppable6 joined
[19:39] *** ChanServ sets mode: +v greppable6

[19:55] *** comborico1611 left
[20:01] *** s0me0ne-unkn0wn left
[20:01] <Ulti> dmaestro: your code as written works fine for me

[20:04] <dmaestro> I have posted the issue for MoarVM/MoarVM on github. Note that it seems sensitive to the amount of data. The latest version of my test rarely failed with 150 lines, but failed consistently with over 200.

[20:05] <Ulti> aha

[20:05] <Ulti> if I set it to do 1k lines it prints a random number of them

[20:05] <Ulti> so yeah reproduced

[20:06] <Ulti> spesh disable is only slightly better though

[20:06] <Ulti> like 50% more lines

[20:06] <dmaestro> Whew! I'm not crazy (at least not very much)

[20:07] <Ulti> oh wait no got it

[20:07] <Ulti> yup same for me

[20:08] <Ulti> its really random though like I get between 190 to 350 evals being ok

[20:08] <dmaestro> ok. https://github.com/MoarVM/MoarVM/issues/775

[20:08] <Ulti> what sort of spec is your Mac?

[20:09] <dmaestro> MacBook Pro, 2014, 2.2 GHZ Intel Core i7

[20:09] <Ulti> though your numbers arent vastly different to mine

[20:09] <dmaestro> Ulti: Thanks for backing me up :-) must leave again.

[20:09] *** dotnessx joined
[20:10] <Ulti> np thanks for reporting it dmaestro 

[20:10] *** dmaestro left
[20:14] *** s0me0ne-unkn0wn joined
[20:15] *** bdmatatu left
[20:15] *** dotnessx left
[20:15] *** dotnessx joined
[20:16] *** comborico1611 joined
[20:17] *** dotness left
[20:20] *** dotnessx left
[20:25] *** wamba joined
[20:26] <comborico1611> You know how you can use TAB to cycle through a GUI?  Is there a button to go in the reverse direction.  For example, if you went too far with TAB?

[20:26] <yoleaux> 17:38Z <Zoffix> comborico1611: Parrot existed before there was even first stable perl 6 release. You're using slow and broken compiler. Just run these commands to build your own rakudo: https://gist.github.com/zoffixznet/3b9aa2a85e352ef31e6aaa6a431baeb6  and you can just run `update-perl6` whenever new compiler release comes out, to upgrade

[20:26] *** lichtkind joined
[20:27] <FROGGS> comborico1611: isnt that shift+tab usually?

[20:27] <comborico1611> Thanks, yoleaux.  Zoffix: Will do.  Thanks!

[20:27] <comborico1611> Heh.  If it is, I haven't known about it for 15 years.

[20:28] <comborico1611> Yup.  You are correct, Sir.  Just imagine.  15 years ago, you were going to be the guy who would tell another guy about shift+tab!

[20:30] <comborico1611> Froggs, you ever seen that poster of a frog choking a pelican?

[20:30] <comborico1611> Thank you, by the way.

[20:30] <FROGGS> a pelican? really? O.o

[20:31] <FROGGS> ahh, seen it :D

[20:31] <comborico1611> Haha.  Yeah.  Is it an older poster?

[20:31] <comborico1611> The Never Give Up poster.

[20:32] <FROGGS> yeah, that one

[20:34] *** dct joined
[20:39] *** domidumont left
[20:45] *** pecastro left
[20:58] *** evalable6 left
[20:59] *** evalable6 joined
[20:59] *** ChanServ sets mode: +v evalable6

[21:21] <comborico1611> Yes!  I think I installed my first tarball!

[21:29] *** xcm left
[21:30] *** xcm joined
[21:31] *** comborico1611 left
[21:32] *** novalinium joined
[21:33] <novalinium> Anyone here used IO::Socket::Async.bind-udp? I can't seem to call it, getting a "Could not find symbol '&Async'"

[21:34] *** troys is now known as troys_

[21:35] <masak> m: say IO::Socket::Async

[21:35] <camelia> rakudo-moar f8d8481c9: OUTPUT: «(Async)␤»

[21:35] <[Coke]> m: IO::Socket::Async.bind-udp

[21:35] <camelia> rakudo-moar f8d8481c9: OUTPUT: «Too few positionals passed; expected 3 arguments but got 1␤  in block <unit> at <tmp> line 1␤␤»

[21:35] <[Coke]> novalinium: what version of perl6 do you have?

[21:35] <novalinium> 2017.10

[21:36] <masak> looks like IO::Socket::Async is definitely older than that

[21:36] <jnthn> bind-udp was added back in 2015, iirc

[21:36] <[Coke]> novalinium: guessing there's something else going on in the code.

[21:36] <novalinium> For source http://ix.io/DCa

[21:36] <El_Che> hey jnthn, can we reserve a Cro talk for fosdem 2019? :)

[21:36] <[Coke]> can you golf it and or gist it?

[21:37] <novalinium> [Coke]: http://ix.io/DCa, ty

[21:37] *** _Kaiepi left
[21:38] *** _Kaiepi joined
[21:38] <masak> does the weird behavior depend on :from<Perl5> ?

[21:38] <[Coke]> The perl6 parts seem fine. (commented out the use and the say, no errors)

[21:39] <novalinium> Gotcha, am I using an Inline::Perl5 import incorrectly?

[21:47] *** comborico1611 joined
[21:48] <comborico1611> So I installed Rakudo, but Parrot is still here.

[21:48] <[Coke]> if you didn't uninstall parrot, I'm not surprised.

[21:49] <comborico1611> lol

[21:49] <[Coke]> also, how did you install rakudo?

[21:49] <comborico1611> unpacking the tarball

[21:50] <[Coke]> which tarball?

[21:50] <[Coke]> let me ask a different question.

[21:50] <[Coke]> what does "perl6 -v" say now?

[21:50] <comborico1611> Parrot

[21:50] <[Coke]> ok, then where did you get the tarball and how did you install it?

[21:51] <comborico1611> perl6-rakudo-moarvm-ubuntu16.04_20170900-02_amd64 from rakudo.org

[21:51] <[Coke]> ?

[21:51] <comborico1611> TAR FILE (in /opt )

[21:51] <perlpilot> comborico1611: you might also want to check your PATH to see if the bad path for the parrot-perl6 is earlier than the good path for moarvm-perl6

[21:51] <El_Che> the naming is the one I used on my old packages

[21:51] <[Coke]> where on rakudo.org do you see this tarball??

[21:52] <comborico1611> Let me check.

[21:52] <comborico1611> Rakudo / Downloads / Linuyx

[21:52] <comborico1611> LInux

[21:52] <El_Che> comborico1611: https://github.com/nxadm/rakudo-pkg/releases/tag/v2017.11

[21:52] <El_Che> use the last release there

[21:53] <comborico1611> perlpilot, I don't know what PATH is.

[21:53] <[Coke]> echo $PATH

[21:53] <El_Che> (for the record, I've never packaged Parrot, nor provided tars; so I do not get how you get the old pkg naming)

[21:53] <El_Che> comborico1611: info about PATH here: https://github.com/nxadm/rakudo-pkg

[21:53] <comborico1611> Thanks!

[21:54] <mspo> parrot is still floating around in os packages

[21:54] * El_Che back to imputting fosdem talks

[21:54] <mspo> it's still being developed sort of too, right?

[21:54] <comborico1611> Maybe if someone could direct me to the address where Parrot is, I can ./uninstall or osmething

[21:54] <perlpilot> mspo: uh .. no?

[21:54] *** xcm left
[21:55] <jnthn> El_Che: Wow, that's quite an advance booking :-)

[21:55] <jnthn> El_Che: Probably will be able to

[21:55] <novalinium> comborico1611: you might be able to `locate Parrot' and find the path in the output

[21:55] *** xcm joined
[21:55] <perlpilot> ... and then kill it with fire

[21:56] <comborico1611> Yes, I see it some of it.  But it is mingled with my XAMPP program.

[21:56] <comborico1611> That's can't be it (used 'locate Parrot' )

[21:57] <ilmari> mspo: the last release was nearly two years ago, and it's only  had any trivial commits since then

[21:57] <ilmari> -any

[21:58] <novalinium> comborico1611: you sure? Is your XAMPP directory in your $PATH variable? That's a system variable that lists the search directories for your shell and other programs, you can find it with `echo $PATH' like Coke said

[21:59] <comborico1611> /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/jvm/java-8-oracle/bin:/usr/lib/jvm/java-8-oracle/db/bin:/usr/lib/jvm/java-8-oracle/jre/bin

[21:59] <novalinium> More info at http://www.linfo.org/path_env_var.html

[21:59] <comborico1611> That's a good one, novalinium.

[21:59] <comborico1611> Thanks!

[22:00] <[Coke]> also, parrot isn't installed as Parrot.

[22:01] <comborico1611> Thanks!

[22:01] <comborico1611> Getting hits now.

[22:01] <[Coke]> (so this could be one of the other parrots, maybe)

[22:03] <comborico1611> I just used Ubuntu Software Center, searched for parrot and clicked remove.

[22:05] <comborico1611> That Ubuntu Software Center has saved my bacon so many times.

[22:05] <comborico1611> In fact, I'm using Kubuntu and install it over KDE's thingy.

[22:08] <El_Che> jnthn: I honestly believe that it has the potential to generete some interest for perl6

[22:09] <jnthn> El_Che: That's indeed one of the goals ;)

[22:10] <comborico1611> PATH should  have been named SHORTCUTS

[22:10] <novalinium> Hot take

[22:11] <comborico1611> Hmm?

[22:11] <comborico1611> Hot Pocket.

[22:11] <comborico1611> I think I ate a hot pocket once in my life.  Disgusting.

[22:12] *** geospeck left
[22:12] <comborico1611> That article is very good.  I'll need to remember this website, novalinium.

[22:13] <El_Che> jnthn: I reckon that next year it would have taken the world and we could move you to the big aula :)

[22:17] *** stmuk joined
[22:17] *** setty1 left
[22:17] *** xcm left
[22:18] *** xcm joined
[22:19] *** stmuk_ left
[22:20] *** xcm left
[22:20] *** xcm joined
[22:22] *** espadrine joined
[22:27] <comborico1611> Okay.  So echo $PATH is showing rakudo folder.

[22:28] <comborico1611> But still no recognition of perl6 command.

[22:28] <comborico1611> I used PATH="THE TWO FOLDERS THE INSTALLATION TOLD ME TO DO THIS TO:$PATH" 

[22:30] <comborico1611> I read Rakudo's README.  There is one section I don't quite understand.  But I believe it is concerning these steps. "To set up the environment under a UNIX type system you will need to add the

[22:30] <comborico1611> absolute path of the local "install/bin" directory under your source build

[22:30] <comborico1611> directory or system-wide "${INSTDIR}/bin" directory (if you used the

[22:30] <comborico1611> --prefix option) to your PATH environment variable."

[22:31] <comborico1611> Is this same as PATH or another file?

[22:32] <timotimo> what's the rakudo folder? there should be one ending in /bin/ i think

[22:32] <comborico1611> There are two: /opt/rakudo-star-2017.10/install/bin

[22:32] <comborico1611>   /opt/rakudo-star-2017.10/install/share/perl6/site/bin

[22:33] <timotimo> those are the right ones

[22:33] <timotimo> you should be able to "ls /opt/rakudo-star-2017.10/install/bin" and find a "perl6" there

[22:33] <timotimo> if that's not there, something earlier in the installation would have gone wrong somehow

[22:33] <comborico1611> But I want perl6 to be system-wide.

[22:33] <timotimo> ah

[22:34] <comborico1611> I'll check and see if I can bring it up from inside the folder, though.

[22:34] <timotimo> every user that wants to be able to use that ought to have those paths in their PATH as well. you can put symlinks to what's inside install/bin/ into one of the system-wide bin folders, though

[22:34] <timotimo> however, perl6/site/bin is where new scripts get installed to when you "zef install" something that comes with commands

[22:34] <timotimo> in that case you'd have to make more symlinks every time that happens

[22:35] <comborico1611> perl6 does not work inside of /bin 

[22:35] <comborico1611> I think I'm just going to cave and install it the easy way "sudo apt-get install rakudo"

[22:35] *** pecastro joined
[22:36] <timotimo> can you define "does not work" a bit more?

[22:36] <MasterDuke> comborico1611: just follow El_Che

[22:36] <comborico1611> timotimo: bash does not recognize "perl6 -v" command.

[22:36] <MasterDuke> 's link and download a .deb and then `sudo dpkg -i <name>.deb`

[22:37] <comborico1611> Ah, yes.  Thanks for the reminder.  I forgot about the .deb

[22:38] <comborico1611> It would be satisfying to install my first .tar.giz? whatever it's called.

[22:38] <MasterDuke> comborico1611: what version of kubuntu are you running?

[22:39] <comborico1611> 14 64-bit

[22:39] <MasterDuke> ah. the system repos for newer *buntus have rakudo 2017.06

[22:40] <comborico1611> They disabled using Dolphin as root in 17 :-(

[22:41] <comborico1611> Dude, my computer has 8 gigs of RAM!  That's like amazing.

[22:41] *** cdg joined
[22:42] <comborico1611> I'm still stuck back in the late '90s, where that would be unheard-of for a personal computer.

[22:43] <comborico1611> Probably even servers, too, I guess.

[22:44] <comborico1611> Alright.  Well, I'm going to have supper.  I will continue to try the tarball.  But I've got the link saved for the .deb file.  Thanks Perl6 Community!

[22:44] *** comborico1611 left
[22:45] <El_Che> tar ball is a bad idea

[22:45] <El_Che> he's not here, but it needed to be said :)

[22:46] *** cdg left
[22:50] <El_Che> If coming to FOSDEM (Brussels, 3/4 Feb), we have a Perl devroom: https://fosdem.org/2018/schedule/track/perl_programming_language/

[22:52] *** lichtkind left
[22:52] *** cdg joined
[22:52] *** FROGGS left
[23:08] <buggable> New CPAN upload: Dist-Helper-0.19.0.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/Dist-Helper-0.19.0.tar.gz

[23:09] *** shmibs left
[23:11] *** sena_kun left
[23:11] *** shmibs joined
[23:13] *** cdg left
[23:38] *** someuser1 left
[23:39] *** leont_ left
[23:40] *** leont_ joined
[23:43] *** pmurias left
[23:45] *** quotable6 left
[23:45] *** quotable6 joined
[23:47] <Geth> ¦ doc: c0cf73b6b9 | (Will "Coke" Coleda)++ | 5 files

[23:47] <Geth> ¦ doc: Add a test to avoid using ".." after a word

[23:47] <Geth> ¦ doc: 

[23:47] <Geth> ¦ doc: (typically you mean either . or ...)

[23:47] <Geth> ¦ doc: 

[23:47] <Geth> ¦ doc: Closes #1632

[23:47] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/c0cf73b6b9

[23:47] <Geth> ¦ doc: 8b3a66ec6f | (Will "Coke" Coleda)++ | doc/Language/testing.pod6

[23:47] <synopsebot> Link: https://doc.perl6.org/language/testing

[23:47] <Geth> ¦ doc: Avoid phrasing that triggers spell check

[23:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/8b3a66ec6f

[23:48] <Geth> ¦ doc: 428429a51f | (Will "Coke" Coleda)++ | xt/words.pws

[23:48] <Geth> ¦ doc: new word

[23:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/428429a51f

[23:49] *** wamba left
[23:59] *** itaylor57 left
