[00:03] *** redhands joined
[00:03] *** p6bannerbot sets mode: +v redhands

[00:15] *** jbotz left
[00:34] *** ryn1x joined
[00:35] *** p6bannerbot sets mode: +v ryn1x

[01:07] *** redhands left
[01:33] *** ryn1x left
[01:33] *** ryn1x joined
[01:34] *** rindolf left
[01:34] *** p6bannerbot sets mode: +v ryn1x

[01:36] *** atweiden-air left
[01:44] <Xliff> Should I ever get errors like this: "MoarVM panic: Internal error: Unwound entire stack and missed handler

[01:44] <Xliff> "

[01:44] <Xliff> I am using NativeCall, so I am not surprised to see it, but the problem comes from Perl code where an exception is being thrown.

[01:48] *** redhands joined
[01:49] *** faraco joined
[01:49] *** p6bannerbot sets mode: +v faraco

[01:49] *** p6bannerbot sets mode: +v redhands

[02:10] *** Bucciarati left
[02:10] *** Bucciarati joined
[02:11] *** p6bannerbot sets mode: +v Bucciarati

[02:19] *** ufobat___ joined
[02:19] <Geth> ¦ doc: b7847a584e | (Zoffix Znet)++ (committed using GitHub Web editor) | doc/Type/DateTime.pod6

[02:19] <Geth> ¦ doc: Document in-timezone coerces

[02:19] <Geth> ¦ doc: 

[02:19] <Geth> ¦ doc: PoV: https://github.com/rakudo/rakudo/commit/c8438e6afe311311a5be0c5c69bff7b2e1a1a3e9

[02:19] <Geth> ¦ doc: Propspec: https://github.com/perl6/roast/commit/529e4e05b8c1806113627c74ef4d493d6f0dfe11

[02:19] <synopsebot> Link: https://doc.perl6.org/type/DateTime

[02:19] <Geth> ¦ doc: Closes https://github.com/rakudo/rakudo/issues/2381 R#2381

[02:19] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/b7847a584e

[02:19] <synopsebot> R#2381 [closed]: https://github.com/rakudo/rakudo/issues/2381 [LTA] LTA .in-timezone can't take a Rat

[02:20] *** p6bannerbot sets mode: +v ufobat___

[02:23] *** ufobat_ left
[02:31] <AlexDaniel> heh, Seqs are awesome

[02:31] <AlexDaniel> there are many times when I wonder if I should try doing something lazily, only to realize that I already do

[02:32] <AlexDaniel> right now I'm staring at my code not even understanding why it is lazy

[02:32] <AlexDaniel> I guess I just don't understand how gather/take works

[02:35] <AlexDaniel> m: sub foo { take 42; foo }; my $x = gather foo; for @$x { .say; last if $++ > 10  }

[02:35] <camelia> rakudo-moar c8438e6af: OUTPUT: «42␤42␤42␤42␤42␤42␤42␤42␤42␤42␤42␤42␤»

[02:35] <AlexDaniel> why does that not explode?

[02:36] <AlexDaniel> I would've expected anything but what I meant

[02:37] <AlexDaniel> yeah, I definitely don't understand what `take` does

[02:41] <AlexDaniel> “The take operation may be defined internally using resumable control exceptions, or dynamic variables, or pigeons carrying clay tablets. The choice any particular implementation makes is specifically not part of the definition of Perl 6, and you should not rely on it in portable code.”

[02:43] <AlexDaniel> so basically after a `take` call the execution stops until another value is pulled, right?

[03:12] *** faraco left
[03:28] <Xliff> AlexDaniel: o_O -- I guess so.

[03:29] <Xliff> m: sub foo { take 42; foo }; say foo;

[03:29] <camelia> rakudo-moar c8438e6af: OUTPUT: «take without gather␤  in sub foo at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[03:29] <Xliff> m: sub foo { take 42; foo }; say gather foo;

[03:29] <camelia> rakudo-moar c8438e6af: OUTPUT: «(42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 4…»

[03:29] <Xliff> Oooh.

[03:29] <Xliff> No. It evaluates to a lazy that JUST returns 42.

[03:30] <AlexDaniel> what do you mean?

[03:30] <Xliff> m: sub foo { take 42; foo }; my $x := gather foo; say $x[^5];

[03:30] <camelia> rakudo-moar c8438e6af: OUTPUT: «(42 42 42 42 42)␤»

[03:30] <Xliff> OK. See above? There is no limit on it, it's the equivalent of this:

[03:31] <Xliff> m: say 1...Inf

[03:31] <camelia> rakudo-moar c8438e6af: OUTPUT: «(...)␤»

[03:31] <AlexDaniel> well, there's a limit because rakudo has no tail call optimization

[03:31] <Xliff> m: say (1...Inf)[^10]

[03:31] <camelia> rakudo-moar c8438e6af: OUTPUT: «(1 2 3 4 5 6 7 8 9 10)␤»

[03:31] <Xliff> But since you are calling it repeatedly, the sequence returns only a list of a single value.

[03:32] <AlexDaniel> sub foo { say ‘before’; take 42; say ‘after’; foo }; my $x := gather foo; say $x[^5];

[03:32] <evalable6> AlexDaniel, rakudo-moar c8438e6af: OUTPUT: «before␤after␤before␤after␤before␤after␤before␤after␤before␤(42 42 42 42 42)␤»

[03:32] <Xliff> my @a = (1, 1, 1 ... 1); say @a;

[03:32] <AlexDaniel> sub foo { say ‘before’; take 42; say ‘after’; foo }; my $x := gather foo; for $x[^5] { .say };

[03:32] <evalable6> Xliff, rakudo-moar c8438e6af: OUTPUT: «[1]␤»

[03:32] <evalable6> AlexDaniel, rakudo-moar c8438e6af: OUTPUT: «before␤after␤before␤after␤before␤after␤before␤after␤before␤42␤42␤42␤42␤42␤»

[03:32] <AlexDaniel> gah

[03:32] <Xliff> my @a = (1, 1, 1 ... *); say @a;

[03:32] <evalable6> Xliff, rakudo-moar c8438e6af: OUTPUT: «[...]␤»

[03:32] <Xliff> my @a = (1, 1, 1 ... *); say @a[^4];

[03:32] <evalable6> Xliff, rakudo-moar c8438e6af: OUTPUT: «(1 1 1 1)␤»

[03:33] <Xliff> That's weird.

[03:33] <Xliff> That's SO weird.

[03:33] <AlexDaniel> what's weird?

[03:33] <Xliff> So... I guessed today's last MegaMillions number. It was 9. I was sure it was 9.

[03:33] <Xliff> Unfortunately... the other 5 I went blank on. :/

[03:37] <AlexDaniel> m: sub foo { say ‘before’; take 42; say ‘after’; foo }; my $x = gather foo; for @$x { .say; last if ++$ ≥ 3 }

[03:37] <camelia> rakudo-moar c8438e6af: OUTPUT: «before␤42␤after␤before␤42␤after␤before␤42␤»

[03:37] <AlexDaniel> Xliff: so what do you mean when you say it's equivalent?

[03:37] <AlexDaniel> I mean sure, it's producing just 42,42,42,…

[03:38] <AlexDaniel> but that's not the point :)

[03:40] <Xliff> AlexDaniel: OK. It's not equivalent. But what you are doing in foo() is creating an endless sequence containing the value 42.

[03:40] <AlexDaniel> yes

[03:40] <Xliff> $x then gets that lazily.

[03:40] <AlexDaniel> yes. Isn't it fantastically weird? :)

[03:41] <Xliff> I do not know why it does that and not go ka-bewm.

[03:41] <Xliff> Yes. It is! I do believe I said that! ;)

[03:41] <AlexDaniel> here's a ticket: https://github.com/perl6/doc/issues/2388

[03:41] <Xliff> My guess? Somehow the gather converts the assignment to a lazy list.

[03:43] <Xliff> And I don't know how it does that without, as you say, no concept of tail call optimization!! 

[03:43] <Xliff>  /o\

[03:43] <Xliff> At any rate, do you know what it means when rakudo spits this out?

[03:43] <Xliff> MoarVM panic: Internal error: Unwound entire stack and missed handler

[03:44] <Xliff> I'm getting that when an exception occurs in the code I've tapped my Supply with.

[03:44] <AlexDaniel> Xliff: sounds like a bug

[03:44] <Xliff> I thought that would get rethrown and give me a sensible error.

[03:44] <Xliff> OK. However, I have no clue how I would golf this. I will try.

[03:44] <AlexDaniel> yeah surely you shouldn't be getting internal error

[03:45] <AlexDaniel> Xliff: you did say earlier that you were using NativeCall, did you get rid of that code?

[03:45] <Xliff> m: my $s = Supplier.new; $s.Supply.tap({ die ":P" }); $s.emit(1)

[03:45] <camelia> rakudo-moar c8438e6af: OUTPUT: «:P␤  in block <unit> at <tmp> line 1␤␤»

[03:45] <AlexDaniel> not that it is acceptable to get that error, but it's more understandable I guess…

[03:45] <Xliff> m: my $s = Supplier.new; $s.Supply.tap({ die ":P"; }); $s.emit(1)

[03:45] <camelia> rakudo-moar c8438e6af: OUTPUT: «:P␤  in block <unit> at <tmp> line 1␤␤»

[03:45] <Xliff> Hunh?

[03:46] <Xliff> m: my $s = Supplier.new; $s.Supply.tap({ die ":O"; }); $s.emit(1)

[03:46] <camelia> rakudo-moar c8438e6af: OUTPUT: «:O␤  in block <unit> at <tmp> line 1␤␤»

[03:46] <Xliff> m: my $s = Supplier.new; $s.Supply.tap({ die }); $s.emit(1)

[03:46] <camelia> rakudo-moar c8438e6af: OUTPUT: «Died␤  in block <unit> at <tmp> line 1␤␤»

[03:46] <Xliff> Now I'm confused.

[03:46] <Xliff> m: my $s = Supplier.new; $s.Supply.tap({ die ':O'; }); $s.emit(1)

[03:46] <camelia> rakudo-moar c8438e6af: OUTPUT: «:O␤  in block <unit> at <tmp> line 1␤␤»

[03:46] <Xliff> Oh. Crap.

[03:47] <Xliff> ':' need t be backspaced in double quotes, now?

[03:47] <Xliff> m: my $s = Supplier.new; $s.Supply.tap({ die "∞"; }); $s.emit(1)

[03:47] <camelia> rakudo-moar c8438e6af: OUTPUT: «∞␤  in block <unit> at <tmp> line 1␤␤»

[03:48] *** ryn1x left
[04:10] <holyghost> About conditional compilation : it might be interesting for the EVAL command to use meta-circular Bayes or markov techniques

[04:11] <holyghost> One would have to hack EVAL then

[04:13] *** MasterDuke left
[04:13] <holyghost> e.g. using Bayes::Learn in perl6 or C

[04:16] <holyghost> To create random runtimes

[04:22] <holyghost> So you have to tutor EVAL within the REPL or file load

[04:24] <SmokeMachine> m: sub foo { take 42; foo }; my $x := gather foo; say $x[99999]

[04:24] <camelia> rakudo-moar c8438e6af: OUTPUT: «(timeout)»

[04:25] *** faraco joined
[04:25] *** faraco left
[04:25] *** faraco joined
[04:25] *** p6bannerbot sets mode: +v faraco

[04:26] <SmokeMachine> AlexDaniel: why should it break? On your examples, it was iterating only 5 times...

[04:26] *** p6bannerbot sets mode: +v faraco

[04:27] <SmokeMachine> s/iterating/recusing/

[04:27] <AlexDaniel> SmokeMachine: I haven't tested thousands, but even with thousands it works

[04:27] <AlexDaniel> just gets slower the deeper you go, which is LTA…

[04:27] <AlexDaniel> had to wait more than a minute for [80000]

[04:28] <AlexDaniel> even though [1000] finishes in 0.2s

[04:30] <SmokeMachine> m: sub a { a }; a

[04:30] <camelia> rakudo-moar c8438e6af: OUTPUT: «MoarVM panic: Memory allocation failed; could not allocate 131072 bytes␤»

[04:30] <SmokeMachine> Is that a LTA?

[04:33] <AlexDaniel> SmokeMachine: eh, in some sense, yes. Would be great to have tail call optimization, but that's irrelevant a bit in this discussion :)

[04:33] <AlexDaniel> my point is that it shouldn't be getting slower just a few thousands calls deep

[04:33] *** lizmat left
[04:34] <SmokeMachine> Oh! I had understood you was talking that should break an error

[04:36] *** faraco left
[04:36] *** redhands left
[04:49] *** lizmat joined
[04:49] *** p6bannerbot sets mode: +v lizmat

[04:54] *** curan joined
[04:54] *** p6bannerbot sets mode: +v curan

[05:10] *** fake_space_whale left
[05:38] *** daemon left
[05:38] *** daemon joined
[05:38] *** daemon left
[05:38] *** daemon joined
[05:38] *** p6bannerbot sets mode: +v daemon

[05:39] *** p6bannerbot sets mode: +v daemon

[05:47] *** cpup left
[05:50] <buggable> New CPAN upload: AI-Markov-0.1.1.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/AI-Markov-0.1.1.tar.gz

[05:52] <holyghost> ^-- The start of my markov strategy kit for making prospection in games

[05:52] <holyghost> It includes ticks, virtual time and markov chains for now

[05:52] <holyghost> There's also a exponential random number engine

[05:52] <holyghost> exponential distribution

[06:00] *** domidumont joined
[06:00] *** p6bannerbot sets mode: +v domidumont

[06:31] <holyghost> I had to rename because of the time system in the markov kit to Game::Markov. It's based for games not AI as it's adaptive systems for games

[06:31] <holyghost> my mistake

[06:32] <holyghost> AI::Markov will disappear in 4 days

[06:40] <buggable> New CPAN upload: Game-Markov-0.1.1.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Game-Markov-0.1.1.tar.gz

[06:43] <holyghost> ^-- I'm at 2800+ lines for true random number engines e.g. ripped from 3D landscapes on fractals in Objective-C/XCode

[06:44] <holyghost> So I put in less for the Perl6 kit so that it's less complicated to use a random number generating function in Mathx::Stat evolvable populations

[06:46] <holyghost> Basically you can generate a population of distributed variables for use at runtime and initialization time of a game's NPCs

[06:46] <holyghost> These can be random numbers

[06:47] <holyghost> but distributed

[06:47] <holyghost> You then just make actions such as "moveleft a bit" with "a bit" a probablity/chance

[06:48] <holyghost> then extrapolate

[06:49] <holyghost> by e.g. chance * 100 pixels to move

[06:50] <holyghost> This gives you random NPC behaviour at game runtime

[06:53] <holyghost> I hope it's clear you can use the probability with pixels on your window for movement and use it what I said Think classes for othre parsing

[06:55] <holyghost> Probabilities of vector conditions are the base of the popular Hidden Markov Model as a markov strategy

[06:55] <holyghost> Where you can use a vector as 3D vector pattern or 4D with quaternions

[06:58] <holyghost> Think probabilty * variable for your Bayes or Markov system, extend for making a game

[07:08] *** HaraldJoerg joined
[07:09] *** p6bannerbot sets mode: +v HaraldJoerg

[07:15] <holyghost> Think probability * variable (e.g. pixel or NPC function) from a markov strategy or Bayesian inference or some other unsupervised learning method to make random behaviour on a 2D game such as Nintendo's R-Type or Super Contra and it'll all make sens

[07:15] <holyghost> s/sens/sense

[07:19] *** b2gills left
[07:25] *** b2gills joined
[07:26] *** p6bannerbot sets mode: +v b2gills

[07:28] *** cpup joined
[07:29] *** p6bannerbot sets mode: +v cpup

[07:30] *** ExtraCrispy_ joined
[07:30] *** p6bannerbot sets mode: +v ExtraCrispy_

[07:42] *** troys left
[07:58] *** Ven` joined
[07:58] *** p6bannerbot sets mode: +v Ven`

[08:02] *** chenyf joined
[08:02] *** p6bannerbot sets mode: +v chenyf

[08:05] *** dakkar joined
[08:06] *** p6bannerbot sets mode: +v dakkar

[08:13] *** rhizon8r left
[08:32] *** zakharyas joined
[08:32] *** p6bannerbot sets mode: +v zakharyas

[08:44] *** Ven` left
[08:45] *** Ven` joined
[08:45] *** p6bannerbot sets mode: +v Ven`

[08:50] *** kensanata joined
[08:50] *** p6bannerbot sets mode: +v kensanata

[09:04] *** zakharyas left
[09:05] *** zakharyas joined
[09:05] *** zakharyas left
[09:05] *** zakharyas joined
[09:06] *** rindolf joined
[09:06] *** p6bannerbot sets mode: +v zakharyas

[09:06] *** p6bannerbot sets mode: +v zakharyas

[09:06] *** p6bannerbot sets mode: +v rindolf

[09:09] *** holyghost left
[09:10] *** holyghost joined
[09:10] *** p6bannerbot sets mode: +v holyghost

[09:14] *** ExtraCrispy_ left
[09:15] *** chenyf_ joined
[09:15] *** p6bannerbot sets mode: +v chenyf_

[09:19] *** chenyf left
[09:25] *** chenyf_ left
[09:26] *** leont joined
[09:27] *** p6bannerbot sets mode: +v leont

[09:31] *** cognominal-p6 left
[09:33] *** lookatme_q left
[09:33] *** lookatme_q joined
[09:34] *** p6bannerbot sets mode: +v lookatme_q

[09:36] *** jbotz joined
[09:37] *** p6bannerbot sets mode: +v jbotz

[09:46] *** pmurias joined
[09:46] *** p6bannerbot sets mode: +v pmurias

[09:51] *** pmurias left
[09:53] *** rhizon8r joined
[09:54] *** p6bannerbot sets mode: +v rhizon8r

[09:58] *** pmurias joined
[09:58] *** p6bannerbot sets mode: +v pmurias

[10:00] <tyil> notable: https://mastodon.social/web/statuses/100898961942296645

[10:00] <notable6> tyil, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Notable

[10:00] <tyil> rude

[10:00] <tyil> note: https://mastodon.social/web/statuses/100898961942296645

[10:00] <notable6> tyil, I cannot recognize this command. See wiki for some examples: https://github.com/perl6/whateverable/wiki/Notable

[10:00] <tyil> why

[10:01] <tyil> weekly: https://mastodon.social/web/statuses/100898961942296645

[10:01] <notable6> tyil, Noted!

[10:03] *** zakharyas left
[10:04] *** zakharyas joined
[10:05] *** p6bannerbot sets mode: +v zakharyas

[10:05] *** domidumont left
[10:11] <lizmat> tyil: a similar monologue can be found on Twitter

[10:11] <tyil> but I dont use twitter actively

[10:15] *** pmurias left
[10:18] <lizmat> https://twitter.com/xah_lee/status/1052155403084021760  # fyi

[10:20] <tyil> feel free to discuss it with him on twitter if you want

[10:21] * lizmat doesn't do Twitter actively either  :-)

[10:24] *** pmurias joined
[10:24] *** p6bannerbot sets mode: +v pmurias

[10:28] *** pmurias left
[10:29] *** pmurias joined
[10:29] *** p6bannerbot sets mode: +v pmurias

[10:30] *** pmurias left
[10:34] *** ribasushi left
[10:35] *** pmurias joined
[10:35] *** p6bannerbot sets mode: +v pmurias

[10:43] *** Ven` left
[10:46] *** kent\n left
[10:51] *** ribasushi joined
[10:52] *** p6bannerbot sets mode: +v ribasushi

[10:59] *** ribasushi left
[11:03] *** zakharyas left
[11:04] *** ribasushi joined
[11:04] *** p6bannerbot sets mode: +v ribasushi

[11:05] <Geth> ¦ ecosystem: e1a7bf4832 | (Jonathan Worthington)++ (committed using GitHub Web editor) | META.list

[11:05] <Geth> ¦ ecosystem: Remove json-path from git-based ecosystem

[11:05] <Geth> ¦ ecosystem: 

[11:05] <Geth> ¦ ecosystem: It's now released on CPAN.

[11:05] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/e1a7bf4832

[11:10] <buggable> New CPAN upload: JSON-Path-1.0.tar.gz by JNTHN https://cpan.metacpan.org/authors/id/J/JN/JNTHN/Perl6/JSON-Path-1.0.tar.gz

[11:33] *** Ven` joined
[11:34] *** pmurias left
[11:34] *** p6bannerbot sets mode: +v Ven`

[11:38] *** scimon joined
[11:38] *** jbotz left
[11:39] *** p6bannerbot sets mode: +v scimon

[12:00] *** zakharyas joined
[12:01] *** p6bannerbot sets mode: +v zakharyas

[12:03] *** zakharyas left
[12:18] *** kaare_ left
[12:21] *** isBEKaml joined
[12:21] *** p6bannerbot sets mode: +v isBEKaml

[12:23] *** kaare_ joined
[12:24] *** p6bannerbot sets mode: +v kaare_

[12:27] *** cognominal-p6 joined
[12:27] *** p6bannerbot sets mode: +v cognominal-p6

[12:34] *** robertle joined
[12:35] *** p6bannerbot sets mode: +v robertle

[12:37] *** kaare_ left
[12:40] *** cognominal-p6 left
[12:41] *** cognominal-p6 joined
[12:41] *** p6bannerbot sets mode: +v cognominal-p6

[12:41] *** kaare_ joined
[12:42] *** p6bannerbot sets mode: +v kaare_

[12:50] *** isBEKaml left
[12:50] *** cognominal-p6 left
[13:00] *** El_Che left
[13:00] *** abraxxa left
[13:00] *** ryn1x joined
[13:00] *** p6bannerbot sets mode: +v ryn1x

[13:01] *** El_Che joined
[13:01] *** p6bannerbot sets mode: +v El_Che

[13:05] <ryn1x> If I want to write the equivalent of a java interface in perl6... is that a role? It looks like a role with stubbed methods would be like an interface, but roles can also contain implemented methods? 

[13:06] <jnthn> Yes, a role that just has stubbed methods functions like an interface

[13:08] *** zakharyas joined
[13:08] <ryn1x> And if a role has implemented methods those are inherited by anything that does that role?

[13:08] *** p6bannerbot sets mode: +v zakharyas

[13:09] <jnthn> Composed into, but yes

[13:12] <ryn1x> Ok. Just trying to wrap my head around when you would then want to use a role with implemented methods vs a parent class...

[13:14] <jnthn> If you compose two roles with the same method, then it's a compile-time error pointing out the conflict. If you used multiple inheritance, it'd just pick one based on the MRO.

[13:14] <jnthn> So roles are safer in that sense

[13:15] <jnthn> Also, you can re-use a private method provided by a role, but not one inherited from a base class

[13:15] *** kurahaupo left
[13:16] *** kurahaupo joined
[13:17] *** p6bannerbot sets mode: +v kurahaupo

[13:17] <ryn1x> Ok, that helps. Thanks jnthn!

[13:19] *** kurahaupo left
[13:19] *** kurahaupo joined
[13:20] *** p6bannerbot sets mode: +v kurahaupo

[13:23] *** zakharyas left
[13:25] *** zakharyas joined
[13:25] *** p6bannerbot sets mode: +v zakharyas

[13:35] *** kurahaupo left
[13:36] *** kurahaupo joined
[13:36] *** p6bannerbot sets mode: +v kurahaupo

[13:39] *** kurahaupo left
[13:39] *** kurahaupo joined
[13:40] *** p6bannerbot sets mode: +v kurahaupo

[13:48] *** jbotz joined
[13:48] *** p6bannerbot sets mode: +v jbotz

[14:01] *** curan left
[14:04] *** zakharyas left
[14:10] *** zakharyas joined
[14:10] *** p6bannerbot sets mode: +v zakharyas

[14:18] <Ven`> "you probably never heard of struct or record. but its in golang, racket, clojure" huh?

[14:18] *** [particle] left
[14:19] *** [particle] joined
[14:20] <Ven`> that tweetstorm is :|||

[14:20] *** p6bannerbot sets mode: +v [particle]

[14:23] <masak> I've no idea about struct, but I believe "record" is what the cool kids are listening to

[14:24] <moritz> us old songs just listened to songs

[14:24] <moritz> *folks

[14:24] *** Zoffix joined
[14:24] *** p6bannerbot sets mode: +v Zoffix

[14:25] <Zoffix> "It's 18 years too late"... This wouldn't be happening if Perl 6 was named as a new language when it was released 3 years ago.

[14:25] <Zoffix> .seen TimToady 

[14:25] <yoleaux> I saw TimToady 5 Oct 2018 16:34Z in #perl6: <TimToady> m: constant @fac = flat 1, [\*] 1..*; say @fac[5]

[14:26] *** ZzZombo left
[14:26] <Zoffix> buggable: d

[14:26] <buggable> Zoffix, Diwali is in 20 days, which is 2 weeks, 5 days, 9 hours, 33 minutes, and 9 seconds. Need to review -227 commits per day (-1594/week) to complete. Need 1 teaser flyers. Still have 2 TODO features costing 8 hours. Still have 0.3 policies to write. Still have ~95% of ChangeLog to do.

[14:27] <AlexDaniel> Zoffix: where's that from?

[14:28] <Zoffix> AlexDaniel: from http://colabti.org/irclogger/irclogger_log/perl6?date=2018-10-17#l247

[14:28] <Zoffix> AlexDaniel: and twitter too: http://colabti.org/irclogger/irclogger_log/perl6?date=2018-10-17#l256

[14:28] <Zoffix> Though it's possible it's the same person.

[14:29] <AlexDaniel> oh, Xah Lee

[14:31] <Zoffix> AlexDaniel: doesn't look like TimToady wants to be involved in the alias process, so I'm gonna collect all the non-joke, non-"perl"-containing proposals into a poll and put it out on 19th (this Friday). Run it for 2 weeks, and get results back on the 2nd, to have 4 days before the release to prep any docs/announcements on the topic.

[14:31] <AlexDaniel> Zoffix: was there any response or is it just silence?

[14:31] <moritz> you have my axe for "Albus"

[14:32] <Zoffix> +1 for Albus

[14:33] <Zoffix> AlexDaniel: he appeared to be very active until my post was posted. And a week before the post I said I'll have it to him in a week and asked if he was OK with following through with the marketing alias through he mentioned at a conf. His response to that was a joke that we should have .py extension or something.

[14:33] <timotimo> it's not uncommon for larry to crack jokes

[14:34] <Zoffix> I'm not making any more marketing materials with "Perl 6" in them. If you wanna ignore the concerns of your volunteers or call me mentally unstable, make your own stuff.

[14:34] *** [particle]1 joined
[14:34] <Zoffix> I'd accept a "No, we're not making any aliases", but silence is a diss.

[14:34] <AlexDaniel> TimToady: so what's the situation? Are you working on it, or are we on our own?

[14:34] *** [particle] left
[14:34] *** p6bannerbot sets mode: +v [particle]1

[14:35] <Zoffix> (to clarify, it wasn't TimToady who called me mentally unstable, but someone else from the "no-alias" camp)

[14:35] <AlexDaniel> TimToady: both are sorta ok, but it would be better to know what's going on so that no time/effort is wasted

[14:36] <El_Che> lizmat: I have no problem answering to the twit, but I don't know most of the answers

[14:37] <Ven`> masak: do you even structural typing?

[14:39] <Zoffix> "We're sorry, albus.org is taken."  gah

[14:39] <Zoffix> someone's squatting on it

[14:39] *** pmurias joined
[14:39] *** p6bannerbot sets mode: +v pmurias

[14:39] <pmurias> you can now access the DOM in 6pad :)

[14:39] <AlexDaniel> btw I didn't get the reference when I saw Albus, I was completely indifferent to that name. It's fine though

[14:40] <Ven`> pmurias: amazing!

[14:40] <pmurias> https://perl6.github.io/6pad/#4ee170f8043efe4802c8e6fb55d6a187 # example of a DOM clock

[14:41] <El_Che> Zoffix: I have trouble seeing that many people don't see the urgency of the problem.

[14:41] <Zoffix> AlexDaniel: Damian Conway was presenting Perl 6 and organizers told him not to mention the language name until the end in fear people would leave. So he used "Albus" instead. I believe it's from Harry Potter: https://en.wikipedia.org/wiki/Albus_Dumbledore

[14:41] <AlexDaniel> Zoffix: I dislike that lack of communication, but making a list with a poll won't hurt even if TimToady decides to rule it out? So just go ahead maybe?

[14:41] <Ven`> pmurias: `use window:lang<JavaScript>;`? :P

[14:42] <Ven`> I guess that's :from

[14:42] <Zoffix> El_Che: ditto

[14:42] <AlexDaniel> Zoffix: also, how do we technically make that poll? On github?

[14:42] *** |337 joined
[14:42] <AlexDaniel> I'm a bit worried about troll votes and stuff

[14:42] <Ven`> Zoffix: presenting p6 where?

[14:42] <Zoffix> AlexDaniel: I'm gonna use surveymonkey.com 

[14:42] *** |337 is now known as Guest64175

[14:42] <Zoffix> Ven`: not sure, moritz knows more about that event

[14:43] <Ven`> thanks

[14:43] *** p6bannerbot sets mode: +v Guest64175

[14:43] <AlexDaniel> Zoffix: so that's anonymous, right?

[14:43] <Zoffix> AlexDaniel: I'm hoping the majority would be non-trolls.

[14:43] <moritz> in Erlangen, Germany

[14:44] <Zoffix> AlexDaniel: I think so. I know the non-anonymous option keeps IPs

[14:44] * Zoffix checks if the anon option is free or not

[14:45] *** pmurias_ joined
[14:45] *** p6bannerbot sets mode: +v pmurias_

[14:45] <AlexDaniel> Zoffix: fwiw the alternative can be to create a ticket with a bunch of names in separate comments, lock the conversation, and let people 👍 👎 the names

[14:45] <Ven`> moritz: nothing recorded etc?

[14:45] <AlexDaniel> not saying that it is better, but it's just one of the options

[14:45] <Zoffix> AlexDaniel: locking the conversation locks the votes too

[14:46] <AlexDaniel> oh! Don't lock it then :)

[14:46] <moritz> Ven`: not that I'm aware of

[14:46] <pmurias_> Ven`: I'm not sure the :from<JavaScript> is the right fit for window

[14:46] <pmurias_> Ven`: I want to have the use syntax for stuff that's require()'ed for sure

[14:46] <Ven`> well... I dunno. use vars <window document>:from<JS>?

[14:46] <Ven`> oh

[14:47] <Zoffix> AlexDaniel: and get a billion responses of "how about blah blah". I don't see what benefit there is in requiring a github account and using something not designed for the purpose instead of using proper polling site

[14:47] <AlexDaniel> Zoffix: the last comment can be “see [this] thread for discussion, this ticket is for voting only”, then we can wipe discussion if it happens.

[14:47] <pmurias_> Ven`: I think people will use frameworks rather than vanilla js anyway

[14:47] *** pmurias left
[14:47] *** xi| joined
[14:47] <AlexDaniel> Zoffix: but yeah I'm not insisting, just saying that it is possible

[14:48] *** pmurias_ is now known as pmurias

[14:48] <Ven`> brb writing some glue code to write React modules in perl6 ;)

[14:48] <Zoffix> Yeah, anon option is free on survey monkey

[14:48] *** p6bannerbot sets mode: +v xi|

[14:48] <pmurias> Ven`: we already have https://github.com/pmurias/p6-jsx

[14:49] <Ven`> amazing :)

[14:49] *** Matthew[m] left
[14:49] *** roguelazer left
[14:49] *** greppable6 left
[14:49] *** squashable6 left
[14:49] *** tyil[m]1 left
[14:49] *** markk left
[14:49] *** cgfbee left
[14:49] *** xi- left
[14:49] *** mniip left
[14:49] *** S007 left
[14:50] * Zoffix observes that "albuslang.com" has "slang" in it and Albus has slang feature in it :)

[14:50] <Zoffix> .org, .whatever

[14:50] *** roguelazer joined
[14:50] <Zoffix> I guess not many people would vote for that option if they don't know the backstory for that name :)

[14:51] *** p6bannerbot sets mode: +v roguelazer

[14:52] <Zoffix> AlexDaniel: I think we should ask for 3 choices from people: most favourite, second favourite, third favourite, and then core team reserves the right to pick among the top result. 'cause I'm fairly sure Rakudo will be the winner, but it's not an ideal name, not the least because rakudo.org is already used for the compiler

[14:52] <AlexDaniel> Zoffix: I see

[14:52] *** cgfbee joined
[14:52] *** kurahaupo left
[14:53] *** p6bannerbot sets mode: +v cgfbee

[14:53] <Ven`> .oO( Common misconception. You see, the *compiler* is the one thing named Perl 6 )

[14:54] <Zoffix> actually nm; there'd be three choices anyway doh

[14:54] *** kurahaupo joined
[14:54] *** kurahaupo left
[14:55] <Zoffix> .oO( rakudolang.org )

[14:55] *** kurahaupo joined
[14:55] <AlexDaniel> heh rakudolang…

[14:56] *** p6bannerbot sets mode: +v kurahaupo

[14:56] <Ven`> .oO( presenting Masak v3: rakudolangbug )

[14:58] *** pmurias left
[15:00] *** troys joined
[15:00] <AlexDaniel> slightly disappointed by that conversation with Xah Lee :) at the time I've read a lot of stuff from him about keyboards and keyboard layouts and it was very useful. It's weird to see him arguing that a language is too late without even looking at the language

[15:01] <Zoffix> :)

[15:01] *** p6bannerbot sets mode: +v troys

[15:01] <robertle> AlexDaniel: let me distract

[15:01] *** scimon_ joined
[15:01] <robertle>  you with this: http://semistable.com/files/keyb1.jpg

[15:02] *** [particle]1 left
[15:02] <AlexDaniel> robertle: staggered rows, no middle column, too big thumb keys…

[15:02] *** p6bannerbot sets mode: +v scimon_

[15:02] <AlexDaniel> robertle: having a split spacebar is perhaps the only reasonable advantage of that design

[15:02] *** pmurias joined
[15:03] *** p6bannerbot sets mode: +v pmurias

[15:04] *** scimon left
[15:04] <AlexDaniel> robertle: a Japanese keyboard will be roughly the same, if not better. As in: https://screenshots.firefox.com/RYzbBfQ0KM751l1E/ae01.alicdn.com

[15:05] <Xliff> Is there a way to shrink the number of use statements in a main program?

[15:05] <Xliff> Especially if it is 'use'-d by another module that is already being 'use'-d in main?

[15:05] *** Zoffix left
[15:05] * pmurias is glad he has huge hands and doesn't have to bother with better keyboards ;)

[15:06] <AlexDaniel> Xliff: I guess you can have a module that reexports other ones, so that you'll do `use All-of-Stuff-I-Like` and it'll functionally use a bunch of other stuff

[15:07] <AlexDaniel> Xliff: is that what you are looking for?

[15:07] <Xliff> How do you re-export?

[15:08] <Xliff> I read something in the synopsis about that and it didn't work in rakudo.

[15:08] <Xliff> "use A; use B; use C :EXPORT" <- was what I tried

[15:09] <AlexDaniel> Xliff: I know about this: https://github.com/perl6/p6-sake/blob/9588ee92cd67a9b7cd4e5910265938e900b2d0fa/lib/Sake.pm6#L5-L10

[15:09] <Xliff> Ah! Thanks.

[15:09] <AlexDaniel> so `use Sake` also gets you Sake::Task and Sake::Task::IO

[15:11] *** [particle] joined
[15:11] <robertle> AlexDaniel: I kinda agree with your points, but ther main point is that the rows are staggered 50%, making it a symmetric travel for the left and right hand fingers. that is quite rare. but really I just wanted to cheer you up since you like keyboards :)

[15:11] <ryn1x> Are the signatures of stubbed methods in a role enforced when a class does that role? I have a role written and have the stubbed methods copies over to a class that does that role, but if I modify the signatures the syntax check is ok and running as a script gives no errors...

[15:11] *** p6bannerbot sets mode: +v [particle]

[15:12] <pmurias> AlexDaniel: converting someone that thinks Go is the pinnacle of language design to Perl 6 is hard

[15:12] <robertle> AlexDaniel: what do you mean with "middle column", btw?

[15:12] <Ven`> m: {.sum with .split(",")}("1,2,3")

[15:12] <camelia> rakudo-moar a096f5058: ( no output )

[15:13] <Ven`> m: {.sum with .split:","}("1,2,3")

[15:13] <camelia> rakudo-moar a096f5058: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Confused␤at <tmp>:1␤------> 3{.sum with .split:7⏏5","}("1,2,3")␤    expecting any of:␤        colon pair␤»

[15:13] <AlexDaniel> robertle: keys between TGB and YHN on qwerty

[15:14] <AlexDaniel> robertle: this is one of the best designs I've seen, although it does have some negatives too: https://www.kickstarter.com/projects/1917596122/x-bows-mechanical-ergonomic-keyboard

[15:14] <Ven`> not sure what's confusing

[15:15] <AlexDaniel> Ven`: : needs a space after it

[15:15] <AlexDaniel> m: {.sum with .split: ","}("1,2,3")

[15:15] <camelia> rakudo-moar a096f5058: ( no output )

[15:15] <robertle> AlexDaniel: very interesting design, thanks!

[15:15] <Ven`> m: say {.sum if ![==] $_ given $_.split(",")}("1,2,3") # this is kinda lame :\

[15:15] <camelia> rakudo-moar a096f5058: OUTPUT: «The iterator of this Seq is already in use/consumed by another Seq␤(you might solve this by adding .cache on usages of the Seq, or␤by assigning the Seq into an array)␤  in block  at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[15:16] <Ven`> though I guess it's fixable with `@=...`

[15:17] <AlexDaniel> robertle: btw the 50% staggering you mentioned above means that the skew angle is even bigger than on normal keyboards, right?

[15:17] <robertle> bigger for one hand, less for the other

[15:17] *** [particle] left
[15:17] *** Grauwolf left
[15:18] *** Grauwolf joined
[15:18] *** p6bannerbot sets mode: +v Grauwolf

[15:19] *** [particle] joined
[15:20] <Xliff> m: {.sum with .split: ","}("1,2,3").say

[15:20] <camelia> rakudo-moar a096f5058: OUTPUT: «6␤»

[15:20] *** p6bannerbot sets mode: +v [particle]

[15:20] <AlexDaniel> Ven`: yeah, you can also do .split(…).cache and the like

[15:20] <AlexDaniel> it's one of the cases when things being lazy hurt a bit

[15:20] <Ven`> AlexDaniel: haha this is for code-golfing though :P so @= is better for the number of bytes

[15:20] <buggable> New CPAN upload: JSON-Path-1.1.tar.gz by JNTHN http://modules.perl6.org/dist/JSON::Path:cpan:JNTHN

[15:23] *** [particle] left
[15:29] <pmurias> lizmat: re access DOM from js stackoverflow question, now that it's possible should I edit the original answer or post a new one?

[15:30] *** Zoffix joined
[15:30] *** p6bannerbot sets mode: +v Zoffix

[15:30] <Zoffix> m: say {[==] .[*] or .sum with .comb: /\d/}("1,2,3")

[15:30] <camelia> rakudo-moar a096f5058: OUTPUT: «6␤»

[15:30] <Zoffix> Ven`: you can use .[*] instead of $_ + @ =

[15:30] <Zoffix> 'cause positional access caches seqs

[15:31] *** fake_space_whale joined
[15:31] <Ven`> Zoffix: I ended up using an EVAL trick someone else used (`{...}o&EVAL`)\

[15:32] *** p6bannerbot sets mode: +v fake_space_whale

[15:33] *** mniip_ joined
[15:33] *** p6bannerbot sets mode: +v mniip_

[15:33] <Ven`> I'll keep the .[*] trick in mind though :)

[15:34] <Ven`> Zoffix++ # even filing a LTA

[15:34] <Zoffix> Potentially, it could be a .[] trick: R#2383

[15:34] <synopsebot> R#2383 [open]: https://github.com/rakudo/rakudo/issues/2383 [consistency] .[] doesn't cache a Seq

[15:36] *** emerson is now known as 07IAAJ8B3

[15:39] <ryn1x> Can you type the signature of a stubbed method in a role? I am trying to figure it out, but it seems only the name of the method is being enforced in the class that does the role; not the signature...

[15:43] *** molaf joined
[15:43] <ryn1x> I'll make some sample scripts of what I am trying to do and put together a stackoverflow question later... 

[15:43] *** p6bannerbot sets mode: +v molaf

[15:45] <Xliff> Anyone ever think about how Perl6 and MoarVM in particular could convert to the mobile space?

[15:47] *** cognominal-p6 joined
[15:47] *** cognominal-p6 left
[15:47] <Ven`> sometimes, and then I remember I don't want to touch anything mobile-related with a 5ft pole

[15:47] *** cognominal-p6 joined
[15:47] *** p6bannerbot sets mode: +v cognominal-p6

[15:48] *** ryn1x left
[15:48] *** p6bannerbot sets mode: +v cognominal-p6

[15:48] <leont> Android's C environment is rather terrible.

[15:48] <pmurias> Xliff: doesn't iOS ban jits?

[15:51] <Xliff> iOS probably does, but I was thinking more Android.

[15:51] <Xliff> And leont's point is quite valid.

[15:51] <Xliff> Still... at least there is a development environment for Android. And it's free.

[15:52] *** cpage_ joined
[15:53] *** p6bannerbot sets mode: +v cpage_

[15:53] *** HaraldJoerg left
[15:54] <pmurias> Xliff: all the different system APIs are an issue

[15:55] <Xliff> pmurias: ART (Android RunTime) is JIT friendly.

[15:55] *** cpage left
[15:55] *** cpage_ is now known as cpage

[16:00] *** Ven` left
[16:00] *** vrurg left
[16:05] *** pmurias left
[16:07] <scimon_> I had this Crazy idea about compiling MoarVM to web assembly. Then I realised I had no idea where to start and ran away.

[16:11] <El_Che> Zoffix: Yeah, very fond of the Rakudo one. By far the best I've heard (to prove your point).

[16:11] *** cognominal-p6 left
[16:13] <CIAvash> Apparently Damian talked about Perl 6 naming and Albus in an interview. I think I've read that before https://mappingthejourney.com/single-post/2017/11/09/episode-13-interview-with-damian-conway-designer-of-perl-6-programming-language/

[16:13] *** Xliff left
[16:14] *** Xliff joined
[16:15] *** p6bannerbot sets mode: +v Xliff

[16:22] *** molaf left
[16:23] *** [particle] joined
[16:24] *** p6bannerbot sets mode: +v [particle]

[16:24] *** Matthew[m] joined
[16:24] *** greppable6 joined
[16:24] *** squashable6 joined
[16:24] *** tyil[m]1 joined
[16:24] *** niven.freenode.net sets mode: +vvvv Matthew[m] greppable6 squashable6 tyil[m]1

[16:24] *** markk joined
[16:24] *** mniip joined
[16:24] *** niven.freenode.net sets mode: +vv markk mniip

[16:24] *** p6bannerbot sets mode: +v Matthew[m]

[16:24] *** p6bannerbot sets mode: +v tyil[m]1

[16:24] *** p6bannerbot sets mode: +v mniip

[16:24] *** mniip left
[16:25] *** p6bannerbot sets mode: +v greppable6

[16:25] *** p6bannerbot sets mode: +v squashable6

[16:25] *** p6bannerbot sets mode: +v markk

[16:26] *** scimon_ left
[16:27] <Zoffix> CIAvash: thanks, looks like it was around pre-release of Perl 6. I thought it was recent.

[16:28] <Zoffix> The Albus event (2017's interview that says "a couple years back")

[16:30] *** nige joined
[16:31] *** greppable6 left
[16:31] *** squashable6 left
[16:31] *** p6bannerbot sets mode: +v nige

[16:33] *** Zoffix left
[16:34] *** squashable6 joined
[16:34] *** greppable6 joined
[16:34] *** ChanServ sets mode: +v squashable6

[16:34] *** ChanServ sets mode: +v greppable6

[16:34] <El_Che> he suggested rakudo :)

[16:34] *** p6bannerbot sets mode: +v squashable6

[16:34] *** p6bannerbot sets mode: +v greppable6

[16:34] <CIAvash> Yeah and he said "I’ve done that a couple of times since", so he probably did it recently as well

[16:37] *** kensanata left
[16:41] *** dakkar left
[16:41] <El_Che> CIAvash: great link

[16:46] *** noganex_ left
[16:46] *** vrurg joined
[16:46] *** noganex joined
[16:47] *** p6bannerbot sets mode: +v vrurg

[16:47] *** p6bannerbot sets mode: +v noganex

[16:51] *** vrurg left
[16:52] *** silug left
[16:53] *** vike left
[17:04] *** zakharyas left
[17:09] *** vrurg joined
[17:10] *** p6bannerbot sets mode: +v vrurg

[17:11] *** vike joined
[17:12] *** p6bannerbot sets mode: +v vike

[17:13] *** st_elmo joined
[17:14] *** p6bannerbot sets mode: +v st_elmo

[17:15] *** vrurg left
[17:25] *** silug joined
[17:26] *** p6bannerbot sets mode: +v silug

[17:37] *** sauvin is now known as Sauvin

[17:39] *** st_elmo left
[17:39] *** noganex_ joined
[17:39] *** st_elmo joined
[17:40] *** p6bannerbot sets mode: +v noganex_

[17:40] *** p6bannerbot sets mode: +v st_elmo

[17:43] *** noganex left
[17:45] <SmokeMachine> Zoffix: are you adding rokudo on you pool? (thats my favorite)

[17:50] *** pecastro joined
[17:51] *** p6bannerbot sets mode: +v pecastro

[17:53] *** vrurg joined
[17:54] *** p6bannerbot sets mode: +v vrurg

[17:57] <ugexe> why would we ban aliases with perl in them, and have a secondary vote where core developers have to choose out of the top 3 names to rule out rakudo, but not have an option to vote for no alias at all? there are so many special cases being made here that why are we even voting instead of letting the loudest voice pick?

[18:02] *** Zoffix joined
[18:02] *** p6bannerbot sets mode: +v Zoffix

[18:03] <Zoffix> SmokeMachine: yup, that one's on the list. Proposed by Damian: https://gist.github.com/zoffixznet/522abeb84debe64041ea70afeebc058a

[18:04] <SmokeMachine> :)

[18:05] <Zoffix> ugexe: because the whole point of the alias is to move away from a "perl" name. Those proposals would make sense only with a full rename.

[18:07] <Zoffix> ugexe: there wouldn't be a secondary vote, just a small discussion among those interested in the alias. This isn't a vote for an official alias, so I don't see how votes about no alias are applicable. Unlike an official alias, there won't be changes to try to include both names in, say, docs. The unofficial alias is purely for the alias-using people to have a single choice instead of using a dozen different

[18:07] <Zoffix> names.

[18:07] *** cygx joined
[18:07] <Zoffix> ugexe: all official channels will continue using "Perl 6" as the only name of the language

[18:07] *** p6bannerbot sets mode: +v cygx

[18:08] <cygx> Zoffix: there's also this related comment on hn: https://news.ycombinator.com/item?id=18175662

[18:08] <cygx> going by user name alone, could be legit

[18:08] <cygx> so TimToady might have his own proposal...

[18:11] <Zoffix> ugexe: or I guess I should say there're no plans to intermix the two names in official channels. The volunteers may choose to provide alternate content, like producing flyers/brochure that feature the alias rather than "Perl 6" as the name. I think someone mentioned hosting a different docs website with "Perl 6" replaced by the alias; I don't know if they still plan on doing that with an unofficial alias.

[18:12] <Zoffix> ugexe: I'm talking about the unofficial alias the vote would be on, not whatever TimToady may or may not decide.

[18:13] <Zoffix> Oh, I already said that.

[18:20] <Zoffix> "to rule out rakudo" no, not rule out, but among all the proposals this one's already in-use; if there's a very close 2nd place contented, may as well pick that instead

[18:23] <moritz> giving Perl 6 the alias "Rakudo" is like giving C the alias GCC -- totally confusing

[18:24] <Zoffix> Counter-point: it's already in wide use :)

[18:24] <moritz> so is GCC

[18:25] *** jast left
[18:30] <[Coke]> we've also tried to push this message consistently, that (while the whole situation is confusing) rakudo is the compiler, not the lang. Going back on that sounds like a hard sell, and more confusing than a new name.

[18:30] <[Coke]> my 2¢

[18:31] <Zoffix> moritz: But if you tell a random programmer you're writing your code in "GCC" they can surmise fairly correcly what you're using. So you get the benefit of reaching people who didn't get the message :)

[18:33] <Zoffix> moritz: [Coke] but if you're adamantly against using "rakudo" as alias, we may as well agree not to put it on the list. I'm 70% certain it'll be the top winner

[18:35] <moritz> I fear it might

[18:44] *** ryn1x joined
[18:45] *** p6bannerbot sets mode: +v ryn1x

[18:45] <ryn1x> Tried to write up my question from earlier more concisely and with an example here: https://stackoverflow.com/questions/52861619/are-typed-signatures-for-stubbed-methods-not-enforced-in-roles-for-perl6

[18:47] <Zoffix> ryn1x: don't know much about that, but I'm not aware of a way to enforce signatures.

[18:47] <SmokeMachine> plz! dopnt put rakudo on the list!

[18:48] <Zoffix> SmokeMachine: why not?

[18:48] *** squashable6 left
[18:48] *** greppable6 left
[18:48] <SmokeMachine> that's the compiler name...

[18:48] <Zoffix> We even already own the domain (and I already own rakudo.party :P)

[18:48] <Zoffix> SmokeMachine: so what? Perl's compiler is called "perl"

[18:49] <Zoffix> SmokeMachine: and counter-point: it's already in wide use.

[18:49] <SmokeMachine> thats already being picked non-perl and non-sex names... non-compiler would be great too...

[18:50] <Zoffix> m: role Foo { multi method bar(Str) { … }; multi method bar (Int) { … } }; class Bar does Foo { method bar { } }

[18:50] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Multi method 'bar' with signature :(Bar: Str $, *%_) must be implemented by Bar because it is required by a role␤at <tmp>:1␤»

[18:50] <Zoffix> hmmm

[18:50] <SmokeMachine> if I thought a compiler name would be a good idea, I would sugest pugs...

[18:50] <Zoffix> ryn1x: looks like it *is* being inforced if you declare the methods as multies

[18:52] <ryn1x> interesting... let me go try with multi

[18:54] <Zoffix> ryn1x: also filed R#2384

[18:54] <synopsebot> R#2384 [open]: https://github.com/rakudo/rakudo/issues/2384 [LTA][consistency] LTA: roles enforce method signatures only with `multi` methods

[18:54] <AlexDaniel> Zoffix: fwiw I also strongly dislike “rakudo” as a name/alias for the language

[18:55] <Xliff> m: .say for 1, 4, 9...2000

[18:55] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «Unable to deduce arithmetic or geometric sequence from 1,4,9 (or did you really mean '..'?)␤  in block <unit> at <tmp> line 1␤␤»

[18:55] <SmokeMachine> m: role R { method r {...} }; class C does R { has R $.a handles <r> = class :: does R { method r { 42 } } } # is this a bug?

[18:55] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Method 'r' must be implemented by C because it is required by roles: R.␤at <tmp>:1␤»

[18:55] <Zoffix> m: say sqrt 2000

[18:55] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «44.721359549995796␤»

[18:55] <Xliff> m: .say for 1, 4, * ** 3...200 # 

[18:55] <Zoffix> m: .say for 1, 4, 9...45²

[18:55] <ryn1x> Zoffix: Is does seem to work with "multi method". I guess I need to go read about "multi" a little more. I never though to use it outside of overloading... but it also seems useful for enforcing types.

[18:55] *** AlexDaniel left
[18:56] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «(timeout)1␤4␤64␤262144␤18014398509481984␤5846006549323611672814739330865132078623730171904␤199791907220223502808422222706762643567910281130558153654986045416023791284464999687699590596063486154228923591770023865308670443474450259602571264…»

[18:56] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «Unable to deduce arithmetic or geometric sequence from 1,4,9 (or did you really mean '..'?)␤  in block <unit> at <tmp> line 1␤␤»

[18:56] <SmokeMachine> I dont know if I should open an issue for that ^

[18:56] <Zoffix> SmokeMachine: yes. Also, it might already be there.

[18:56] <Xliff> m: .say for 1, 4, 9, ...2000

[18:56] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «5===SORRY!5===␤Two terms in a row␤at <tmp>:1␤------> 3.say for 1, 4, 9, ...7⏏052000␤    expecting any of:␤        infix␤        infix stopper␤Other potential difficulties:␤    Comma found before apparent sequence operator; pl…»

[18:56] *** AlexDaniel joined
[18:56] <SmokeMachine> Zoffix: thanks!

[18:56] <Xliff> Why isn't it figuring out x³?

[18:57] <Zoffix> AlexDaniel: so among core devs, I'm the only one who likes it? :)

[18:57] <Xliff> m: .say for 1, 4, 6...20

[18:57] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «Unable to deduce arithmetic or geometric sequence from 1,4,6 (or did you really mean '..'?)␤  in block <unit> at <tmp> line 1␤␤»

[18:57] <Xliff> m: .say for 2, 4, 6...20

[18:57] *** p6bannerbot sets mode: +v AlexDaniel

[18:57] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «2␤4␤6␤8␤10␤12␤14␤16␤18␤20␤»

[18:58] *** ryn1x left
[18:58] *** ryn1x joined
[18:58] <Zoffix> Xliff: is x³ a geometric sequence? I that were x*n

[18:58] <Xliff> m: .say for 1, 4, 8...200

[18:58] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «Unable to deduce arithmetic or geometric sequence from 1,4,8 (or did you really mean '..'?)␤  in block <unit> at <tmp> line 1␤␤»

[18:58] *** fake_space_whale left
[18:59] *** AlexDaniel left
[18:59] *** p6bannerbot sets mode: +v ryn1x

[18:59] <Xliff> Zoffix: So how do I do x³?

[18:59] <Zoffix> m: .say for 2, *³ … 20

[18:59] *** AlexDaniel joined
[18:59] <Zoffix> dafuq

[18:59] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «(timeout)2␤8␤512␤134217728␤2417851639229258349412352␤14134776518227074636666380005943348126619871175004951664972849610340958208␤282401395870821749694910884220462786335135391185157752468340193086269383036119849990587392099522999697089786549…»

[18:59] <Xliff> m: .say for 1, 4, *³...200 

[19:00] <Zoffix> I guess it needs exact endpoint to match that way

[19:00] *** p6bannerbot sets mode: +v AlexDaniel

[19:00] <Zoffix> m: .say for 2, *³ … * < 20

[19:00] <AlexDaniel> * > 20

[19:00] <Xliff> m: .say for 1, 8, *³...200 

[19:00] <Zoffix> m: .say for 2, *³ … * > 20

[19:00] <AlexDaniel> hmmm…

[19:00] <Xliff> I thinks we broke it.

[19:00] <Zoffix> m: .say for 2, *³ … 100³

[19:00] <AlexDaniel> wait it's doing the first query

[19:00] <Zoffix> Xliff: it does smartmatch. 200 ain't a cube, so it won't ever smartmatch

[19:00] <Xliff> Ah!

[19:01] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «(timeout)1␤4␤64␤262144␤18014398509481984␤5846006549323611672814739330865132078623730171904␤199791907220223502808422222706762643567910281130558153654986045416023791284464999687699590596063486154228923591770023865308670443474450259602571264…»

[19:01] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «2␤»

[19:01] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «(timeout)1␤8␤512␤134217728␤2417851639229258349412352␤14134776518227074636666380005943348126619871175004951664972849610340958208␤282401395870821749694910884220462786335135391185157752468340193086269383036119849990587392099522999697089786549…»

[19:01] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «2␤8␤512␤»

[19:01] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «(timeout)2␤8␤512␤134217728␤2417851639229258349412352␤14134776518227074636666380005943348126619871175004951664972849610340958208␤282401395870821749694910884220462786335135391185157752468340193086269383036119849990587392099522999697089786549…»

[19:01] <AlexDaniel> hah…

[19:01] <Xliff> m: .say for 1, 8, *³...10³

[19:01] <Zoffix> m: .say for (1, 8, *³...10³).head: 10

[19:01] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «(timeout)1␤8␤512␤134217728␤2417851639229258349412352␤14134776518227074636666380005943348126619871175004951664972849610340958208␤282401395870821749694910884220462786335135391185157752468340193086269383036119849990587392099522999697089786549…»

[19:01] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «1␤8␤512␤134217728␤2417851639229258349412352␤14134776518227074636666380005943348126619871175004951664972849610340958208␤282401395870821749694910884220462786335135391185157752468340193086269383036119849990587392099522999697089786549828399657…»

[19:01] <Zoffix> m: .say for (8, *³...10³).head: 10

[19:01] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «8␤512␤134217728␤2417851639229258349412352␤14134776518227074636666380005943348126619871175004951664972849610340958208␤2824013958708217496949108842204627863351353911851577524683401930862693830361198499905873920995229996970897865498283996578123…»

[19:02] <Zoffix> ah

[19:02] <Zoffix> right

[19:02] <Xliff> m: .say for (1, 8, *³...10³).head: 5

[19:02] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «1␤8␤512␤134217728␤2417851639229258349412352␤»

[19:02] <Zoffix> m: .say for {$++³}...10³

[19:02] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «0␤1␤8␤27␤64␤125␤216␤343␤512␤729␤1000␤»

[19:02] <Xliff> LOL!

[19:02] <Xliff> OK. Thanks.

[19:03] <AlexDaniel> Zoffix: “I think someone mentioned hosting a different docs website” eh, maybe I can do that if nobody else who knows better is willing to. In some sense I already keep https://docs.6lang.org up… though I wish the unofficial alias was maintained along with official domains, because why not

[19:03] <Zoffix> m: .say for map *³, ^10

[19:03] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «0␤1␤8␤27␤64␤125␤216␤343␤512␤729␤»

[19:03] <Xliff> So simple is better. KISS

[19:03] <AlexDaniel> Xliff: are you golfing?

[19:03] <AlexDaniel> if so, that's not what you do for golfing

[19:04] <Xliff> AlexDaniel: Trying to learn, yes.

[19:04] <Zoffix> AlexDaniel: what do you mean by maintained?

[19:04] <Zoffix> maintained along

[19:05] <AlexDaniel> Zoffix: I mean the domain name should be owned by those who own perl6.org, the server should be the same one, etc. I think that'd be better even if the alias is unofficial

[19:05] <AlexDaniel> but maybe not, I dunno

[19:05] <AlexDaniel> m: 1…*.say×*>10

[19:05] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «Potential difficulties:␤    Useless use of … in sink context␤    at <tmp>:1␤    ------> 031…7⏏5*.say×*>10␤1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤»

[19:06] <Zoffix> AlexDaniel: what I meant in earlier convo tho is using "Perl 6" and "$Alias" interchangeable in the docs themselves

[19:06] <AlexDaniel> Xliff: something like that maybe, from https://github.com/AlexDaniel/6lang-golf-cheatsheet#use-junctions-if-possible

[19:07] <AlexDaniel> Zoffix: yeah, yeah, I was just referring to something else. Nevermind :)

[19:07] *** AlexDaniel left
[19:07] <Xliff> AlexDaniel++ # Thanks!

[19:07] *** cognominal-p6 joined
[19:08] *** AlexDaniel joined
[19:08] *** p6bannerbot sets mode: +v cognominal-p6

[19:08] *** cognominal-p6 left
[19:08] *** p6bannerbot sets mode: +v AlexDaniel

[19:09] <ryn1x> m: role Foo { multi method bar(Str --> Str) { … } }; class Bar does Foo { multi method bar(Str $a --> Int) { return 1} }

[19:09] *** cognominal-p6 joined
[19:09] <camelia> rakudo-moar 4bf55b1ef: ( no output )

[19:09] <Zoffix> gah

[19:09] <ryn1x> m: role Foo { multi method bar(Str --> Str) { … } }; class Bar does Foo { multi method bar(Int $a --> Int) { return 1} }

[19:09] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Multi method 'bar' with signature :(Bar: Str $, *%_ --> Str) must be implemented by Bar because it is required by a role␤at <tmp>:1␤»

[19:09] <ryn1x> Zoffix: multi still does not enforce the return type ^ 

[19:09] *** p6bannerbot sets mode: +v cognominal-p6

[19:10] <Zoffix> R#2385

[19:10] <synopsebot> R#2385 [open]: https://github.com/rakudo/rakudo/issues/2385 [LTA] LTA role multi method stubs enforce arguments but not return value

[19:12] <ryn1x> Thanks Zoffix!

[19:12] <Zoffix> moritz: [Coke] AlexDaniel ugexe so that's it, we're removing "rakudo" from the list because it conflicts with pre-existing compiler name?

[19:12] <Zoffix> SmokeMachine: ^

[19:13] <Zoffix> I'm trying to junction the coredev "strongly dislike" comments vs. "why are you excluding rakudo and not going with top vote" comments.

[19:13] <SmokeMachine> that's it on my opinion

[19:14] *** pyrimidine joined
[19:14] *** p6bannerbot sets mode: +v pyrimidine

[19:15] <SmokeMachine> I couldnt find an issue for that, so: https://github.com/rakudo/rakudo/issues/2386

[19:17] *** ryn1x left
[19:31] *** cognominal-p6 left
[19:33] <Zoffix> FWIW: there's also "rokudo" as suggestion

[19:34] <Zoffix> And here's ex-pumpkin saying they're also "VERY MUCH AGAINST" rakudo: https://www.nntp.perl.org/group/perl.perl6.language/2018/02/msg36778.html

[19:36] <Zoffix> And I meant: if we're removing "rakudo" from the list; wtf to do with "rokudo"? Also remove?

[19:37] <tadzik> imo calling it rokudo when rakudo already exists would be a bit like calling it prel to make it different from perl

[19:38] <SmokeMachine> rokudo isnt a name of a compiler...

[19:38] <tadzik> I know

[19:38] <Zoffix> tadzik: yeah

[19:39] <SmokeMachine> I think it should be on the list... but probably with a warn warning to the reader read it right...

[19:39] <tadzik> imagine telling people about it

[19:39] <Zoffix> SmokeMachine: why put it on the list if you have to warn about it already?

[19:39] <tadzik> and then try to remember how you spelled this unfamiliar word to look up the correct thing

[19:40] <tadzik> if you have to clarify to the reader what it means, then you get perl 6 all over again

[19:40] <Zoffix> And then we rename Rakudo Star to "r*kudo" :P

[19:40] <tadzik> this is what we're trying to solve here, aren't we? :)

[19:40] <SmokeMachine> Zoffix: great idea! :)

[19:40] <tadzik> fsvo "we", I just read and nod most of the time:P

[19:41] <SmokeMachine> I like rokudo... but I agree to remove it from the list... :(

[19:42] <SmokeMachine> (shouldnt I named my daughter Fernada once my name is Fernando?)

[19:42] *** vrurg left
[19:45] *** greppable6 joined
[19:45] <tadzik> heh, my name is Tadeusz and my father's name is Tadeusz. It's confusing as hell, and I don't think it would be any better if I was Todeusz instead :P

[19:45] *** squashable6 joined
[19:46] *** p6bannerbot sets mode: +v greppable6

[19:46] *** p6bannerbot sets mode: +v squashable6

[19:46] <tadzik> ymmv of course

[19:49] <nige> it's a pity "kudo" is already (R) registered - four letters, easy to type, versionless etc

[19:50] <nige> Zoffix, is it your intention that the alias is used to invoke ~bin/perl6

[19:51] <nige> ?

[19:51] <Zoffix> nige: mine would be, but it was overrulled by the pumpkin. It'll stay perl6 regardless of the official/unofficial alias status

[19:52] <nige> the perl6 pumpkin?

[19:53] <Zoffix> Yes.

[19:54] <dylanwh> perl++, or "perm" ? :)

[19:55] <dylanwh> needs to be (perl++)++, and then we can get some dragon riders...

[19:58] *** jast joined
[19:58] *** p6bannerbot sets mode: +v jast

[19:59] *** robertle left
[20:01] * Zoffix reads through the suggestions...

[20:01] <Zoffix> I'm imposing additional constraint the name has to be 3 or more characters long (yes, yes, I'm changing the rules as I go, sue me)

[20:02] <AlexDaniel> BUT IS IT UNICODE CHARACTERS OR BYTES

[20:02] <AlexDaniel> :)

[20:03] <AlexDaniel> .oO( so we take butterfly emoji, then slap some prepend and extend combiners on it… )

[20:03] <AlexDaniel> .oO( maybe skin tone also? Yes that makes sense… )

[20:03] *** ryn1x joined
[20:03] <tadzik> heh, sense

[20:03] <Zoffix> And I'm excluding copyright-infridged names. Like, I'm not bothering to research each one, but just reading the commentary on some suggestions saying that "Roku" is copyrighted for example

[20:04] <nige> do you mean trademarked?

[20:04] <Zoffix> Yeah

[20:04] <tadzik> something went a bit wrong imo on the way from "we should have one standard for all the alphabets in the world" to "the characters in our universal alphabet should have skin colours" P:

[20:04] *** p6bannerbot sets mode: +v ryn1x

[20:04] <tadzik> or colour itself for that matter

[20:04] <Zoffix> Well, I only excluded "Roku" based on that last rule so far.

[20:06] <ryn1x> When is this list going to be posted to vote on?

[20:06] <Zoffix> ryn1x: I'll share a preview version in a couple of hours in this channel, just to protect myself from people saying I missed their suggestion and the poll will go up in about 24hr

[20:07] <nige> *thinks that having the alias point to ~/bin/perl6 would be MTA*

[20:07] <nige> more than awesome

[20:08] *** ryn1x left
[20:08] *** ryn1x joined
[20:08] <Zoffix> nige: the proper term is "PDG"

[20:08] <Zoffix> huggable: PDG

[20:08] <huggable> Zoffix, "Pretty Damn Good"; antonym: LTA "Less Than Awesome"

[20:08] <Zoffix> :)

[20:08] <nige> cool ;)

[20:09] *** p6bannerbot sets mode: +v ryn1x

[20:09] <nige> perl pdg (tm)

[20:10] <nige> ^---- taken - doh - this is not easy 

[20:11] <Zoffix> (for records, the 3+ letter rule was inspired by "P++" and "+-1" and "Q6" suggestions)

[20:12] *** ryn1x left
[20:12] <SmokeMachine> is there a rule for no numbers on the name?

[20:13] <Zoffix> Nope, I got 6lang, Lang6, and 6lerp so far

[20:13] <SmokeMachine> where's the list?

[20:14] *** isBEKaml joined
[20:14] *** p6bannerbot sets mode: +v isBEKaml

[20:15] <Zoffix> I'm still compiling it from references to discussions I collected since my first blog post on the topic: https://temp.perl6.party/NAMING.txt

[20:15] *** rindolf left
[20:16] <SmokeMachine> its not accessible

[20:16] <Zoffix> works for me

[20:17] <Zoffix> SmokeMachine: https://gist.github.com/zoffixznet/6557c3af5396b7eddd2f697d732b8499

[20:18] <nige> feel free to copy the table here: https://gist.github.com/zoffixznet/6557c3af5396b7eddd2f697d732b8499

[20:18] <nige> dog

[20:18] <nige> doh

[20:18] <nige> http://nigelhamilton.com/perl-branding-proposal.html

[20:19] <nige> can also help with basic registered trade mark smoke test if needed ...

[20:19] <Zoffix> Yeah, it's one of the things on my list

[20:20] *** pmurias joined
[20:20] *** p6bannerbot sets mode: +v pmurias

[20:20] <Zoffix> moritz: where does "Albus" come from again? Harry Potter?

[20:20] <Zoffix> (need for parantheticals next to the name)

[20:21] <pmurias> Zoffix: it has a strong Harry Potter conotation

[20:21] <nige> is it Dumbledore ?

[20:21] <pmurias> yep

[20:21] <Zoffix> ok

[20:21] <tadzik> nice summary on that site :)

[20:21] <pmurias> which site?

[20:21] <Zoffix> pmurias: http://nigelhamilton.com/perl-branding-proposal.html

[20:22] <pmurias> "Fortran is Albus Dumbledore" first google result for albus programming language ;)

[20:22] <Zoffix> lol

[20:23] <SmokeMachine> "qdo" in portuguese means "quando" that means "when"

[20:23] <pmurias> Albus Dumbledore is also dead

[20:23] <pmurias> ;)

[20:24] <tadzik> noooooo.jpg

[20:25] <pmurias> so please don't choose Albus ;)

[20:25] *** chsanch left
[20:26] <timotimo> did he live to be 100 at least?

[20:26] <timotimo> "what age dumbledore" says "about 150 years"

[20:26] <timotimo> so him being dead isn't terrible for "the 100 year language"

[20:27] <isBEKaml> "Albus Severus Potter" Why not call it Severus?

[20:27] <isBEKaml> Severely usable

[20:27] <timotimo> you do not want to associate our language with a child abuser

[20:28] <Zoffix> I also see a bunch of calls to release Perl 5 to Perl 7 or Perl 28 and do to Perl 6 what Perl 6 did to Perl 5 with the whole 5 vs. 6 thing

[20:28] <Zoffix> If I were on Perl 5 team, that's exactly what I'd be pushing for.

[20:29] <Zoffix> And Perl 6 will be totally screwed in such a scenario.

[20:29] *** chsanch joined
[20:30] <tadzik> well, is Perl 5 totally screwed now? :)

[20:30] *** ryn1x joined
[20:30] <timotimo> some perl 5 people seem to think so

[20:30] *** p6bannerbot sets mode: +v chsanch

[20:30] <tadzik> some of them also seem to think that bumping the version alone will automagically solve all their problems

[20:31] <pmurias> Zoffix: please don

[20:31] *** p6bannerbot sets mode: +v ryn1x

[20:31] *** _uzl joined
[20:31] <pmurias> 't create antagonism with the Perl 5 community

[20:31] <tadzik> I've talked to someone who claimed that if they were allowed to name it perl 7 they'd suddenly somehow be able to recklessly modernize it beyond belief and make it superior to everything

[20:31] <Zoffix> tadzik: no, because it was well established before it happened. The impact will not be the same

[20:31] <timotimo> wait, they're suggesting to rename perl 5 to perl 7 and replace it with perl 6?

[20:31] *** _uzl left
[20:32] <Zoffix> timotimo: no, they're suggesting a way to kill Perl 6. 

[20:32] <Zoffix> Well, "they"... The couple of people on reddit, not the Perl 5 Community.

[20:32] <tadzik> I'm not sure that's the goal

[20:32] <timotimo> well, if they take perl 6 and just call it perl 7, then perl 6 will be dead, but we'll just work on perl 7 instead?

[20:32] <timotimo> sorry, it was an unproductive dumb joke

[20:32] <tadzik> timotimo: I think the idea is to rename perl 5.30 to Perl 7

[20:33] <tadzik> because that'll somehow make things better

[20:33] <timotimo> yeah, and "recklessly modernizing beyond belief" sounds like a perl 6

[20:33] *** uzl joined
[20:33] <tadzik> surely it's not a classic "I'll just rewrite instead of refactor, it'll be easier" mistake...

[20:34] *** p6bannerbot sets mode: +v uzl

[20:35] <ryn1x> Perl 6 is portrayed as a sister language to perl 5, but it the beginning... it _was_ actually intended to be it's successor right? So the name at that time made sense?

[20:35] <uzl> While reading the p6weekly, I came across this HN comment (https://news.ycombinator.com/item?id=18176974). Not sure how much truth there is to it though.

[20:35] <Zoffix> ryn1x: at the time, but not at the time of the first stable release of the language

[20:35] <Zoffix> uzl: yeah, someone mentioned that a few hours ago

[20:36] *** Guest13389 left
[20:36] <uzl> Zoffix: didn't see that.

[20:36] <Zoffix> FWIW: "P6" is another suggestion that's getting cut off by the 3+ letters rule. I also feel it doesn't fit under the "non-perl" rule.

[20:37] <pmurias> Zoffix: where is the list of rules?

[20:38] <Zoffix> I also argued against it in the past: https://www.reddit.com/r/perl/comments/6lstqu/the_hot_new_language_named_rakudo/djxa5go/ so feel free to overrule my choice. I don't wanna be told I just pick-and-choose what I like

[20:40] <buggable> New CPAN upload: Sparrowdo-VSTS-YAML-Cordova-0.0.16.tar.gz by MELEZHIK http://modules.perl6.org/dist/Sparrowdo::VSTS::YAML::Cordova:cpan:MELEZHIK

[20:40] <nige> just wanted to flag up that having a trade mark that doesn't lead to confusion from a legal perspective is a good thing 

[20:41] <nige> one of the extra protections in the artistic 2.0 licence includes how it deals with trade marks

[20:41] <Zoffix> pmurias: the only rules are that the name must be: 3+ letters long (hard to google/undrstand that it's a name; excludes "P++", "P6", "Q6"), must not have "perl" in it (the whole point of the alias in leu of full rename is to avoid the "perl" in the name; excludes a ton of names, like "perl++"), must not be a joke name (like "perl sex" and "+-1"), must not be "rakudo" (conflict with compiler name and requested

[20:41] <Zoffix> by several core team members + ex-pumpking); must not be "rokudo" (too close to "rakudo"); must not infridge on known trademark (excludes "Roku" some sort of japaneese device).

[20:41] <nige> it's important for Perl (R) mark that there is not confusion between Perl 5 and Perl 6

[20:42] <nige> having a clear sub-brand alias is important from a legal POV too

[20:42] <chsanch> Hi, can I suggest a proposal for the name? Soqta (Six in Qechua language) or Suxta (Six in Aymara language)

[20:43] <nige> (worked briefly as an intellectual property barrister )

[20:43] <Zoffix> (there's a "Raku" suggestion tho)

[20:43] <Zoffix> chsanch: noted

[20:43] <tadzik> heh, I think Perl Sex, or psex would be hilarious, but I'm mentally 12 

[20:44] <Zoffix> "But it's Six in Latin!!"

[20:44] <timotimo> "Sux"ta? :)

[20:45] <cygx> .oO( What's so funny about 'Biggus Dickus'? )

[20:45] <Zoffix> "Rakuda-dō" suggestion is also getting cut by "must not be rakudo" rule

[20:45] <chsanch> timotimo: Yah, maybe not that name .. 

[20:45] <timotimo> "shrubbery"

[20:46] <Zoffix> timotimo: am I to log those or are you joking? :)

[20:47] <tadzik> unrelated to existing ideas: since "Rust" worked for Rust, maybe pick some stainless metal instead? :)

[20:48] <timotimo> that was a joke, but maybe i'll find one i'd actually seriously suggest; in that case i'll point it out for clarity's sake

[20:49] *** Guest13389 joined
[20:49] <ryn1x> I think there might be ways to still have perl in the name without confusing the two dfferent languages.  With C it is clear to everyone that it is a different language than C++... and each of those can have their own unconflicting version #'s after the base name. Same with java and javascript. I think having a trailing # as part of the base name might be more of a problem than having perl in the name...

[20:50] <AlexDaniel> Zoffix: these rules seem reasonable to me

[20:50] <Zoffix> 🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗

[20:50] <Zoffix> OK. I finished compiling all the suggestions I've seen: https://gist.github.com/zoffixznet/f18842f7c7e051b8c2fcdc265e40bd15

[20:50] <tadzik> oh gods

[20:50] <uzl> I'm cheering for Albus, 6lang/slang or even Rakudo. Albus sounds pretty neat though.

[20:50] <tadzik> the emojis are everywhere :o

[20:50] *** p6bannerbot sets mode: +v Guest13389

[20:50] <timotimo> any feelings on "spero"?

[20:50] <Zoffix> In ~24hr I'm going to be posting a pall with them. If I missed your suggestion address me with it so I find it.

[20:50] <timotimo> though tbh i'm not so hot on esperanto

[20:50] <Zoffix> 🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗🤗

[20:50] <tadzik> spero reminds me of a polish CS player

[20:50] * Zoffix &

[20:51] <cygx> Beril is missing - I believe the misspelling of Beryl was intentional...

[20:51] <SmokeMachine> ofun

[20:52] <nige> ^--- i like that

[20:52] <Zoffix> cygx: added. BTW, what's the story behind it? Some chemical fact I don't know about?

[20:53] <AlexDaniel> SmokeMachine: heh where have you been? :)

[20:53] <SmokeMachine> :)

[20:53] <ryn1x> I like Gloria, but it kinda sucks that there is a language named Julia... 

[20:53] <Zoffix> Oh, nm, I was confusing Beryl with Beryllium

[20:53] <AlexDaniel> I mean, among others it's definitely not bad

[20:54] <Zoffix> Carbon (6th element)

[20:54] <ryn1x> Albus is cool too, I think I could get my wife to program if there was a language with a harry potter reference!

[20:54] <cygx> I was thinking along similar lines for names myself, but Onix is kind of out due to that whole pokemon thing...

[20:54] <nige> I had it as "beril"

[20:54] <SmokeMachine> mugwall

[20:55] <Zoffix> I'm out for real now. Address me (prefix your suggestions with my nick), so I know you're suggesting it for the list, rather than joking/throwing out random suggestions

[20:55] * Zoffix &

[20:55] <AlexDaniel> Zoffix: I'd add ofun to give it a chance :)

[20:55] <tadzik> :)

[20:56] <SmokeMachine> AlexDaniel: it's added

[20:56] <AlexDaniel> ah

[20:56] <tadzik> I like that

[20:56] <SmokeMachine> I liked ofun...

[20:56] <ryn1x> I know a ton of people like 6lang, but I don't know about a name that you have to explain how to pronounce...

[20:56] <timotimo> the "that's not serious enough" people will probably disapprove :)

[20:56] <AlexDaniel> ryn1x: what's the wrong way to pronounce it?

[20:57] <ryn1x> isn't it intended to be pronounced "slang"

[20:57] <pmurias> Zoffix: name suggestion: "Intricate"

[20:57] <AlexDaniel> ryn1x: ah, there was that idea initially, but then people didn't like it

[20:57] <AlexDaniel> so if we choose 6lang it'll likely be sixlang

[20:57] <AlexDaniel> pronounced I mead

[20:57] <AlexDaniel> mean*

[20:58] <nige> ofun - runs deep - a good sign

[20:58] <ryn1x> oh ... ok ... I guess that is ok then

[21:02] <SmokeMachine> I think perl6 has so many iconic moments and stories... the name could be a homenage to it... like ofun...

[21:03] <ryn1x> Zoffix: what do you think of Ada, Lovelace, Grace, or Hopper? First or last names of women promenent in CS history. Goes along with Larry's reasoning behind Camelia and trying to get more girls/women involved in computer science.

[21:05] <tadzik> Grace sounds good

[21:05] <uzl> Isn't there an Ada language already?

[21:05] <timotimo> yes

[21:05] <timotimo> Kate is already a text/code editor

[21:06] <zostay> Ada is one of the most well known languages there is. All defense software had to be written in it at one time IIRC.

[21:06] <tadzik> I don't think picking a language name will actually get women involved in CS, but it is a pretty good name

[21:06] <ryn1x> oops... i knew Ada was a language... ha... but, you get where I was going...

[21:06] <zostay> I could go for Love as the language. Then I'd write code in the Love language.

[21:07] <timotimo> there's already Love2d

[21:07] <uzl> ryn1x: that's fine. just wanted to confirm.

[21:07] <zostay> ah well

[21:15] <timotimo> if i ever build something meant as a shell replacement, i'll call it "shlang" or "shlange"

[21:16] <tadzik> shlong

[21:16] <timotimo> clearly that's derived from the german for snake, which is "schlange"

[21:16] <timotimo> "lang" is also german for "long"

[21:17] <tadzik> nodnod

[21:19] <isBEKaml> I kinda like 6lang

[21:19] <isBEKaml> as long as nobody ever says 6langsam

[21:20] <tadzik> perhaps punnability should be a criterion

[21:20] <timotimo> "sick slang"

[21:20] <tadzik> :D

[21:20] <isBEKaml> that's the first thing that came to my mind. And, mix it with german ;-)

[21:22] *** dct joined
[21:22] *** p6bannerbot sets mode: +v dct

[21:26] *** uzl left
[21:30] *** jast left
[21:31] *** jast joined
[21:32] *** p6bannerbot sets mode: +v jast

[21:34] *** cygx left
[21:37] *** random_yanek left
[21:37] *** st_elmo left
[21:41] <Xliff> m: say True ~~ Enum

[21:41] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Undeclared name:␤    Enum used at line 1. Did you mean 'Num', 'num'?␤␤»

[21:41] <Xliff> m: say True ~~ enum

[21:41] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Whitespace required after keyword 'enum'␤at <tmp>:1␤------> 3say True ~~ enum7⏏5<EOL>␤»

[21:42] <Xliff> m: say True ~~ Enumeration

[21:42] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «False␤»

[21:42] <Xliff> m: say True ~~ Int

[21:42] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «True␤»

[21:43] <Xliff> m: our enum <A B C>; say A does Enumeration;

[21:43] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «Cannot unbox a type object (Any) to a str.␤  in block <unit> at <tmp> line 1␤␤»

[21:43] <Xliff> m: our enum <A B C>; say A ~~ Enumeration;

[21:43] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «True␤»

[21:43] <Xliff> m: our enum <A B C>; say Bool ~~ Enumeration;

[21:43] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «False␤»

[21:43] <Xliff> ?!?

[21:44] <timotimo> m: say Bool.^mro

[21:44] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «((Bool) (Int) (Cool) (Any) (Mu))␤»

[21:44] <timotimo> m: say Bool.^mro(:all)

[21:44] <camelia> rakudo-moar 4bf55b1ef: OUTPUT: «Unexpected named argument 'all' passed␤  in block <unit> at <tmp> line 1␤␤»

[21:45] <timotimo> mh

[21:45] <timotimo> probably an artifact of Bool being so early in the bootstrapping process

[21:48] *** random_yanek joined
[21:48] <Xliff> kk

[21:48] <Xliff> (Bool, Enumeration).any will do the trick.

[21:49] *** p6bannerbot sets mode: +v random_yanek

[21:49] <isBEKaml> hmm, the hailstone sequence program on examples.perl6.org is slow

[21:49] <isBEKaml> Awk completed quickly by comparison :-)

[21:49] <isBEKaml> https://examples.perl6.org/categories/best-of-rosettacode/hailstone-sequence.html

[21:51] <timotimo> the awk solution is also a few times as many lines :)

[21:52] *** itaipu joined
[21:52] *** p6bannerbot sets mode: +v itaipu

[21:55] <timotimo> how long does the awk version take?

[22:00] <isBEKaml> 3s

[22:01] <timotimo> a more imperative version runs in 8.47s on my system

[22:01] <timotimo> or 5.76 in a different version

[22:02] <timotimo> right, that's 2018.09 vs a very recent commit

[22:04] <isBEKaml> Mine is on the latest HEAD

[22:04] *** fk_ joined
[22:05] *** fk_ left
[22:05] <timotimo> excising "return ... if" gets me down to 3.13s

[22:06] <isBEKaml> perl6 hailstone.p6  234.92s user 0.26s system 99% cpu 3:55.20 total

[22:06] *** pmurias left
[22:12] *** ryn1x left
[22:14] <timotimo> i think if we had an int, int version of %% the code would become a bit faster

[22:15] *** 07IAAJ8B3 is now known as emerson

[22:15] <timotimo> oh wow

[22:15] <timotimo> using $u % 2 == 0 instead of %u %% 2 gets it down to .81s

[22:19] <timotimo> doing 10x as much work takes 7.8s

[22:27] *** cognominal-p6 joined
[22:28] *** p6bannerbot sets mode: +v cognominal-p6

[22:31] <isBEKaml> alright :-)

[22:31] <isBEKaml> It's late here and I'll come back tomorrow

[22:31] <isBEKaml> Have fun!

[22:31] *** isBEKaml left
[22:38] *** lizmat left
[22:50] <buggable> New CPAN upload: Game-Markov-0.1.2.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Game-Markov-0.1.2.tar.gz

[22:51] *** pecastro left
[22:51] <holyghost> ^-- there's 5 markov strategies now, I only need to read up on Monte Carlo samples

[22:59] <Zoffix> holyghost: that still doesn't show up on modules.perl6.org and it still has broken `provides` section (don't think that's the cause of failed indexing tho)

[23:00] <Zoffix> holyghost: also, there's a JSON syntax error (missing comma after the first line in provides section) and that might be why it's not indexing.

[23:00] <Zoffix> You can use Test::META6 module to verify your META file

[23:00] <Zoffix> eco: Test::META6

[23:00] <buggable> Zoffix, Nothing found

[23:00] <Zoffix> eco: Test::META

[23:00] <Zoffix> :/

[23:01] <buggable> Zoffix, Test::META 'Test a distributions META file': http://modules.perl6.org/dist/Test::META:github:Jonathan%20Stowe%20%3Cjns+git@gellyfish.co.uk%3E

[23:01] <Zoffix> That

[23:01] *** jbotz left
[23:02] *** jbotz joined
[23:02] <holyghost> Is the source-url correct ?

[23:02] *** p6bannerbot sets mode: +v jbotz

[23:04] <Zoffix> holyghost: it's kinda irrelevant as PAUSE generates its own meta file. But it does generate it with your syntax error in it: https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Game-Markov-0.1.2.meta

[23:04] <Zoffix> And yeah, that would likely prevent it indexing

[23:04] <Zoffix> holyghost: and the same issue in another module. Search for "[error]" in this file: https://modules.perl6.org/update.log

[23:05] <Zoffix> And in Bayes-Learn

[23:05] <Zoffix> And in Mathx-Stat

[23:05] <holyghost> I fixed the syntax errors I'll upload later

[23:05] <Zoffix> holyghost: fix module names in "provides" section as well. Otherwise your module won't get installed correctly

[23:06] <Zoffix> You got them all as "Game::Markov::" ... missing last part of the name

[23:08] <Zoffix> Filed %% thing as R#2387

[23:08] <synopsebot> R#2387 [open]: https://github.com/rakudo/rakudo/issues/2387 [perf] Missing native candidate for `%%`

[23:12] <Zoffix> $ perl6 -MWWW -e '"https://modules.perl6.org/update.log".&get.lines.grep(*.contains: "[error").elems.say'

[23:12] <Zoffix> 27

[23:12] <Zoffix> Looks like an easy way to complete Hacktoberfest :)

[23:15] *** leont left
[23:19] *** lizmat joined
[23:19] *** p6bannerbot sets mode: +v lizmat

[23:21] <holyghost> Zoffix: I uploaded

[23:23] <holyghost> I've put in the commas in the provides section and explicitly stated Mathx::Stat::Correlation etc

[23:24] <holyghost> It's a stupid parser AFAIK

[23:24] <holyghost> But it does show up webpages

[23:28] <holyghost> We have to conquer the world and write our own :-)

[23:30] <holyghost> one could use the libc/unix access function to load all files in provides sections etc

[23:31] *** jameslenz left
[23:31] <buggable> New CPAN upload: Bayes-Learn-0.1.5.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Bayes-Learn-0.1.5.tar.gz

[23:31] <buggable> New CPAN upload: Mathx-Stat-0.1.5.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Mathx-Stat-0.1.5.tar.gz

[23:31] <buggable> New CPAN upload: Game-Markov-0.1.3.tar.gz by HOLYGHOST https://cpan.metacpan.org/authors/id/H/HO/HOLYGHOST/Perl6/Game-Markov-0.1.3.tar.gz

[23:31] <Xliff> Is there anything written up about Perl6's macro abilities?

[23:32] <holyghost> eco: Mathx::Stat

[23:33] <buggable> holyghost, Nothing found

[23:34] <holyghost> damn, maybe it shows up later

[23:34] <holyghost> IRC bot -> modules.perl.org -> CPAN

[23:36] *** benjikun left
[23:40] <holyghost> maybe a mirror works

[23:41] <holyghost> buggable should also search mirrors eventually

[23:47] <Zoffix> holyghost: yeah, I don't think the parser has been worked on past the initial "get the basics working" stage

[23:48] <Zoffix> It takes up to 1 hr to update modules.perl6.org after bot announce

[23:48] <Zoffix> holyghost: you still have a syntax error in Bayes::Learn

[23:49] <Zoffix> holyghost: use Test::META6 or at least a JSON validator: https://jsonlint.com/

[23:49] <Zoffix> *Test::META

[23:51] *** jbotz left
[23:51] <Zoffix> holyghost: and Game-Markov has the same syntax error 

[23:51] <Zoffix> holyghost: and Game-Markov has another syntax error: trailing comma  in provides section

[23:51] <Zoffix> eco: App::Mi6

[23:51] <buggable> Zoffix, App::Mi6 'minimal authoring tool for Perl6': http://modules.perl6.org/dist/App::Mi6:cpan:SKAJI

[23:52] <rbt_> I suggest "Hanadama". It's the term for the top quality pearl.  There are trademarks but they're all fishery related (Oyster farming, etc.)

[23:52] <Zoffix> holyghost: There are tools for both auto-making and checking dists. It's more productive to use them than to keep making mistakes and blaming the PAUSE parser

[23:54] <holyghost> Could you tell me the first syntax error you mentioned ?

[23:54] <Zoffix> rbt_: a quick search leads me to: "Wikipedia Moderators take down Hanadama Page - Not an official grade: 'There has been an ongoing debate as to whether or not "hanadama" is an actual grade used to identify pearls. The answer is no. "Hanadama" is simply a marketing and promotional strategy used by a ring of websites to make you think these are the best pearls. They are not. '"

[23:54] <Zoffix> From https://www.pearl-education.com/archive/index.php?t-383.html

[23:55] <Xliff> Is there anything written up about Perl6's macro abilities?

[23:55] <Zoffix> eco: 007

[23:55] <buggable> Zoffix, 007 'Small experimental language with a license to macro': http://modules.perl6.org/dist/007:github:github:masak

[23:55] <rbt_> Ahh.. that's fair.

[23:55] <Zoffix> Xliff: that's the only thing I know of ^. masak might know more

[23:55] <Xliff> Zoffix++

[23:56] <Xliff> Zoffix: I thought Perl6 had its own macro capabilities. 

[23:56] <Xliff> 007 won't do anything for me if I'm writing in Perl6. ;)

[23:57] <Zoffix> Xliff: yeah, there's something in there, but it's experimental and likely buggy-broken. 007 is the work for macros that will become core Perl 6 once it's properly fleshed out

[23:59] <Xliff> Ahh! OK. I just read the grant proposal on it. 

[23:59] <Xliff> masak++

[23:59] <Xliff> I hope he gets it working.

