[00:04] *** w_richard_w joined
[00:05] *** p6bannerbot sets mode: +v w_richard_w

[00:06] *** someuser left
[00:06] *** pyrimidine joined
[00:07] *** dct left
[00:07] *** p6bannerbot sets mode: +v pyrimidine

[00:13] *** someuser joined
[00:14] *** p6bannerbot sets mode: +v someuser

[00:14] *** rgrau joined
[00:15] *** p6bannerbot sets mode: +v rgrau

[00:22] <Juerd> rakudoc

[00:25] *** rgrau left
[00:31] *** w_richard_w left
[00:31] *** rgrau joined
[00:32] *** p6bannerbot sets mode: +v rgrau

[00:53] *** graphene left
[00:54] *** graphene joined
[00:55] *** p6bannerbot sets mode: +v graphene

[00:56] *** graphene left
[00:58] *** graphene joined
[00:59] *** p6bannerbot sets mode: +v graphene

[01:05] *** kurahaupo joined
[01:05] *** kerframil left
[01:05] *** p6bannerbot sets mode: +v kurahaupo

[01:07] *** kerframil joined
[01:07] *** p6bannerbot sets mode: +v kerframil

[01:10] *** ryn1x joined
[01:11] *** p6bannerbot sets mode: +v ryn1x

[01:17] *** ryn1x left
[01:17] *** ryn1x joined
[01:18] *** p6bannerbot sets mode: +v ryn1x

[01:18] *** kurahaupo left
[01:19] *** kurahaupo joined
[01:19] *** p6bannerbot sets mode: +v kurahaupo

[01:24] *** telex joined
[01:25] *** p6bannerbot sets mode: +v telex

[01:29] *** kurahaupo left
[01:32] *** MasterDuke joined
[01:32] *** p6bannerbot sets mode: +v MasterDuke

[01:33] *** kurahaupo joined
[01:33] *** MasterDuke left
[01:33] *** MasterDuke joined
[01:33] *** herbert.freenode.net sets mode: +v MasterDuke

[01:33] *** p6bannerbot sets mode: +v MasterDuke

[01:33] <tbrowder> rakudoc! excellent

[01:33] *** p6bannerbot sets mode: +v kurahaupo

[01:44] *** kurahaupo left
[01:57] *** clarkema left
[02:07] <SmokeMachine> .tell pmurias I can be wrong, but I think this is the first "todo app" written in perl6 using memoized dom for the browser! :) https://perl6.github.io/6pad/?#60b7cb15e676861a46702a04d1a5a1d1

[02:07] <yoleaux> SmokeMachine: I'll pass your message to pmurias.

[02:23] *** qiqi joined
[02:23] *** kurahaupo joined
[02:24] *** kurahaupo left
[02:24] *** p6bannerbot sets mode: +v qiqi

[02:24] *** kurahaupo joined
[02:25] *** p6bannerbot sets mode: +v kurahaupo

[02:28] *** kurahaupo left
[02:29] *** kurahaupo joined
[02:30] *** p6bannerbot sets mode: +v kurahaupo

[02:32] *** MasterDuke left
[02:34] *** molaf left
[02:41] *** eater joined
[02:42] *** p6bannerbot sets mode: +v eater

[02:46] *** rouking joined
[02:47] *** eater left
[02:47] *** molaf joined
[02:47] *** p6bannerbot sets mode: +v rouking

[02:47] <rouking> I feel like the perl6.org homepage could give a better impression (and possibly should mention the nickname Raku somewhere?)

[02:47] *** eater joined
[02:48] *** p6bannerbot sets mode: +v molaf

[02:48] *** p6bannerbot sets mode: +v eater

[02:50] *** eater left
[02:51] *** eater joined
[02:51] *** eater left
[02:52] <rouking> maybe mentioning some of the application for which one might use the language, and perhaps more code samples

[02:52] *** eater joined
[02:52] *** eater left
[03:00] *** eater joined
[03:01] *** p6bannerbot sets mode: +v eater

[03:02] <Geth> ¦ advent: titsuki++ created pull request #4: Add titsuki's entry

[03:02] <Geth> ¦ advent: review: https://github.com/perl6/advent/pull/4

[03:13] <Geth> ¦ advent: 219a96a3fe | (Itsuki Toyota)++ (committed using GitHub Web editor) | perl6advent-2018/schedule

[03:13] <Geth> ¦ advent: Add titsuki's entry

[03:13] <Geth> ¦ advent: 

[03:13] <Geth> ¦ advent: I already have my advent account so I don't need new invitation.

[03:13] <Geth> ¦ advent: review: https://github.com/perl6/advent/commit/219a96a3fe

[03:13] <Geth> ¦ advent: f55d09b4a2 | (Aleks-Daniel Jakimenko-Aleksejev)++ (committed using GitHub Web editor) | perl6advent-2018/schedule

[03:13] <Geth> ¦ advent: Merge pull request #4 from titsuki/patch-1

[03:13] <Geth> ¦ advent: 

[03:13] <Geth> ¦ advent: Add titsuki's entry

[03:13] <Geth> ¦ advent: review: https://github.com/perl6/advent/commit/f55d09b4a2

[03:15] <lookatme_q> rouking, they have a official website rakudo.org. Actually I am not know what is Raku mean

[03:16] *** eater left
[03:18] *** eater joined
[03:19] *** p6bannerbot sets mode: +v eater

[03:23] <AlexDaniel> rouking: maybe consider filing a ticket here: https://github.com/perl6/perl6.org

[03:23] <AlexDaniel> or maybe even submitting a PR :)

[03:24] <AlexDaniel> rouking: regarding “Raku”, see this discussion: https://github.com/perl6/user-experience/issues/31

[03:27] *** leont left
[03:28] *** kurahaupo left
[03:29] *** kurahaupo joined
[03:29] *** p6bannerbot sets mode: +v kurahaupo

[03:57] *** kurahaupo_ joined
[03:58] *** p6bannerbot sets mode: +v kurahaupo_

[03:58] *** kurahaupo left
[04:03] *** hythm_ joined
[04:03] *** p6bannerbot sets mode: +v hythm_

[04:04] <hythm_> Hi, is there a module similar to perl5's Tree::DAG_Node? 

[04:09] *** kurahaupo_ left
[04:11] *** hythm_ left
[04:13] *** Algent24 joined
[04:13] *** Algent24 left
[04:52] *** Cabanossi joined
[04:53] *** p6bannerbot sets mode: +v Cabanossi

[04:53] *** Cabanoss- left
[04:54] <Xliff> \o

[04:54] <holyghost> hi

[04:54] <Xliff> What brackets can I use as alternatives to s//?

[04:57] *** molaf left
[05:43] *** [particle] joined
[05:44] *** p6bannerbot sets mode: +v [particle]

[05:49] *** kurahaupo joined
[05:50] *** p6bannerbot sets mode: +v kurahaupo

[05:57] *** graphene left
[05:58] *** ryn1x left
[05:58] *** graphene joined
[05:59] *** p6bannerbot sets mode: +v graphene

[05:59] *** Sgeo_ joined
[06:00] *** p6bannerbot sets mode: +v Sgeo_

[06:00] *** kurahaupo left
[06:01] *** Sgeo left
[06:02] *** kurahaupo joined
[06:03] *** ryn1x joined
[06:03] *** p6bannerbot sets mode: +v kurahaupo

[06:03] *** p6bannerbot sets mode: +v ryn1x

[06:11] <moritz> s[] = ..., s{} = ...;

[06:15] *** ryn1x left
[06:15] *** jmerelo joined
[06:15] *** kurahaupo left
[06:16] *** p6bannerbot sets mode: +v jmerelo

[06:17] <holyghost> jmerelo: about the rakudo-star maintainer, do you have one ?

[06:17] <holyghost> you mentioned a few days ago, you needed one

[06:17] <holyghost> hi BTW

[06:18] <jmerelo> Hi

[06:18] <jmerelo> I think that's sorted out

[06:18] <holyghost> ok

[06:20] *** kurahaupo joined
[06:21] *** p6bannerbot sets mode: +v kurahaupo

[06:23] *** robertle left
[06:24] <jmerelo> squashable6: status

[06:24] <squashable6> jmerelo, ⚠🍕 Next SQUASHathon in 2 days and ≈3 hours (2018-12-03 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:24] <jmerelo> Hum

[06:24] <jmerelo> Shouldn't Squashathons start on a Friday?

[06:25] <jmerelo> .tell AlexDaniel don't usually Squashathons start on Fridays?

[06:25] <yoleaux> jmerelo: I'll pass your message to AlexDaniel.

[06:29] <jmerelo> squashable6: status

[06:29] <squashable6> jmerelo, ⚠🍕 Next SQUASHathon in ≈3 hours (2018-12-01 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[06:29] <jmerelo> That looks about right

[06:35] *** kurahaupo left
[06:36] *** kurahaupo joined
[06:37] *** p6bannerbot sets mode: +v kurahaupo

[06:50] *** kurahaupo left
[06:50] *** kurahaupo joined
[06:51] <Geth> ¦ doc: 71179be98f | (JJ Merelo)++ | doc/Type/Cool.pod6

[06:51] <Geth> ¦ doc: Fixes text and examples

[06:51] <Geth> ¦ doc: 

[06:51] <Geth> ¦ doc: I fact, it was more wrong than indicated for the OP. Thanks for

[06:51] <Geth> ¦ doc: drawing our attention to this. Closes #2482

[06:51] <synopsebot_> Link: https://doc.perl6.org/type/Cool

[06:51] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/71179be98f

[06:51] *** p6bannerbot sets mode: +v kurahaupo

[07:01] <jmerelo> Here's a guide for doing stuff in Squashathons https://dev.to/jj/squashing-perl-6-documentation-bugs-one-at-a-time-4ojn

[07:01] <jmerelo> You might find it useful

[07:02] <jmerelo> We're starting in a while. There's a plush Camelia for the winner!

[07:04] *** kurahaupo left
[07:04] *** kurahaupo joined
[07:05] *** p6bannerbot sets mode: +v kurahaupo

[07:15] *** kurahaupo left
[07:16] *** kurahaupo joined
[07:17] *** p6bannerbot sets mode: +v kurahaupo

[07:22] *** kerframil left
[07:27] *** kurahaupo left
[07:28] *** domidumont joined
[07:28] *** kurahaupo joined
[07:29] *** p6bannerbot sets mode: +v domidumont

[07:29] *** p6bannerbot sets mode: +v kurahaupo

[07:39] *** jmerelo left
[07:41] *** kurahaupo left
[07:41] *** kurahaupo joined
[07:41] *** loops left
[07:42] *** p6bannerbot sets mode: +v kurahaupo

[07:51] *** kurahaupo left
[07:52] *** kurahaupo joined
[07:52] *** xtreak joined
[07:52] *** p6bannerbot sets mode: +v kurahaupo

[07:53] *** p6bannerbot sets mode: +v xtreak

[07:55] *** tobs` joined
[07:56] *** p6bannerbot sets mode: +v tobs`

[08:06] *** kurahaupo left
[08:07] *** kurahaupo joined
[08:07] *** robertle joined
[08:08] *** p6bannerbot sets mode: +v kurahaupo

[08:08] *** p6bannerbot sets mode: +v robertle

[08:08] *** coet[work] joined
[08:08] *** p6bannerbot sets mode: +v coet[work]

[08:12] *** xtreak left
[08:14] *** xtreak joined
[08:15] *** p6bannerbot sets mode: +v xtreak

[08:17] *** rindolf joined
[08:17] *** p6bannerbot sets mode: +v rindolf

[08:19] *** kurahaupo left
[08:23] *** kurahaupo joined
[08:24] *** p6bannerbot sets mode: +v kurahaupo

[08:32] *** holyghost left
[08:32] *** abraxxa joined
[08:33] *** p6bannerbot sets mode: +v abraxxa

[08:38] *** kurahaupo left
[08:42] *** kurahaupo joined
[08:43] *** p6bannerbot sets mode: +v kurahaupo

[08:46] *** xtreak left
[08:46] *** rindolf left
[08:57] *** kurahaupo left
[09:00] *** kurahaupo joined
[09:01] *** |oLa| joined
[09:01] *** p6bannerbot sets mode: +v kurahaupo

[09:02] *** p6bannerbot sets mode: +v |oLa|

[09:02] *** dct joined
[09:02] *** p6bannerbot sets mode: +v dct

[09:02] *** xtreak joined
[09:02] *** xtreak left
[09:04] *** rindolf joined
[09:04] *** p6bannerbot sets mode: +v rindolf

[09:05] *** kurahaupo left
[09:09] *** chakli joined
[09:10] *** p6bannerbot sets mode: +v chakli

[09:10] *** chakli left
[09:11] *** chakli joined
[09:11] *** p6bannerbot sets mode: +v chakli

[09:12] <chakli> Does anyone know if cro supports client certificate authentication

[09:22] <El_Che> I find nothing on the docs

[09:23] *** zakharyas joined
[09:24] *** p6bannerbot sets mode: +v zakharyas

[09:27] <mornfall> if i want to extract stuff from XML, would i go for XML::Query?

[09:27] <mornfall> :( no pod in there

[09:28] <mornfall> also probably not what i wanted ... hm

[09:31] <mornfall> XML::Parser::Tiny looks okay, let's try that

[09:38] *** scimon joined
[09:39] *** p6bannerbot sets mode: +v scimon

[09:40] *** chakli left
[09:41] *** w_richard_w joined
[09:41] *** w_richard_w left
[09:45] *** kensanata joined
[09:45] *** p6bannerbot sets mode: +v kensanata

[09:53] <jnthn> Hmm, is anyone else noticing that modules distributed via CPAN are taking quite a while to be installable at that version with zef?

[09:55] *** kurahaupo joined
[09:55] <jnthn> I had to wait quite a long time to be able to zef install the latest Inline::Perl5 earlier this week. And yesterday I uploaded a bunch of new Cro modules, and while they're indexed on modules.perl6.org, I can't yet seem to install that version via zef. It even said it was updating cpan mirror along the way.

[09:56] *** p6bannerbot sets mode: +v kurahaupo

[09:56] <mornfall> um... how do i iterate an Array $foo?

[09:56] <jnthn> for @$foo { }

[09:57] <mornfall> oh.

[10:00] <jnthn> Generally, $ means "item", so `for $foo { }` can be read as "for this one item foo"

[10:01] <mornfall> hmm, and my ( $foo, $bar = '' ) clearly doesn't DWIM

[10:02] <mornfall> ($bar ends up being Any)

[10:02] <jnthn> Not if you're assigning, no

[10:04] <jnthn> m: my ($foo, $bar = '') := \('blah'); dd $foo, $bar;

[10:04] <camelia> rakudo-moar 2dbef9930: OUTPUT: «"blah"␤""␤»

[10:04] <mornfall> so i either init everything with my ( $foo, $bar ) = ( '', '' ) or split the my... sure, i can do that

[10:05] <jnthn> m: my ($a, $b, $c) = '' xx *; dd $a, $b, $c

[10:05] <camelia> rakudo-moar 2dbef9930: OUTPUT: «Str $a = ""␤Str $b = ""␤Str $c = ""␤»

[10:05] <jnthn> That way you don't have to write '' repeatedly

[10:05] <mornfall> uh what's ␤ exactly? :\ renders as N/L on top of each other?

[10:06] <jnthn> Just the way the bot here renders a newline

[10:07] <mornfall> oh, ouch :p it's a little hard on the eyes

[10:07] *** kurahaupo left
[10:08] *** kurahaupo joined
[10:09] *** p6bannerbot sets mode: +v kurahaupo

[10:10] * moritz recommends a better font

[10:11] <mornfall> moritz: this is a good font... it's *the* 6x13

[10:12] <mornfall> you'll have to pry it from my cold dead hands

[10:13] <moritz> well, at the same time you complain about how it renders the ␤

[10:13] <mornfall> at least until i can get my hands on a monitor with 250 ppi or so, which doesn't seem too likely in the forseeable future :(

[10:13] <moritz> otoh it might not even contain that symbol, and use a fallback to render it

[10:14] <mornfall> moritz: it's a fixed-width font... that ␤ thing is apparently very wide in proportional fonts :\

[10:14] <mornfall> the result is hard to read because everything is squashed on top of each other

[10:16] *** w_richard_w joined
[10:16] <mornfall> either way, doesn't matter

[10:17] *** p6bannerbot sets mode: +v w_richard_w

[10:17] <mornfall> i might live to see a 300 DPI OLED monitor (not sure i'll be able to afford it though)

[10:20] *** kurahaupo left
[10:20] *** kurahaupo joined
[10:20] <mornfall> on the other hand, slurp( file ).split( /\s+\ ) ♥

[10:20] <El_Che> .words ?

[10:21] <mornfall> maybe that too

[10:21] *** p6bannerbot sets mode: +v kurahaupo

[10:21] <El_Che> m: say <The quick brown fox>.words

[10:21] <camelia> rakudo-moar 2dbef9930: OUTPUT: «(The quick brown fox)␤»

[10:21] <El_Che> m: say <The quick brown fox>.words.join("␤")

[10:21] <camelia> rakudo-moar 2dbef9930: OUTPUT: «The␤quick␤brown␤fox␤»

[10:22] <El_Che> :)

[10:22] * mornfall tries to recall what's the difference between s and S

[10:23] <mornfall> p6doc Regex doesn't say :|

[10:24] <jnthn> The uppercase ones are inverses

[10:24] <jnthn> So, "not whitespace"

[10:26] <mornfall> oh, yeah, that makes sense (words is documented as being .comb( /\S+/ ) which got me confused for a second)

[10:27] <mornfall> not sure why though, i'd find .split a lot more intuitive?

[10:27] <mornfall> anyhow, .words it is... this is even better :)

[10:30] <mornfall> anyone know if perl-mode (emacs) is supposed to deal with perl6? because it seems to work suspiciously well

[10:30] <El_Che> https://github.com/hinrik/perl6-mode

[10:30] *** kurahaupo left
[10:30] <mornfall> i know there's a separate perl6-mode ... (there's also cperl-mode)

[10:31] *** kurahaupo joined
[10:31] <mornfall> (i'm actually using spacemacs, fwiw)

[10:31] *** p6bannerbot sets mode: +v kurahaupo

[10:38] *** ufobat joined
[10:39] *** p6bannerbot sets mode: +v ufobat

[10:40] *** kurahaupo left
[10:41] <mornfall> for dir( 'eval.meta', test => /\.txt$/ ) { %new{m,\d+,} ~= .slurp; } # i'm never going back to perl5

[10:41] *** kurahaupo joined
[10:42] *** p6bannerbot sets mode: +v kurahaupo

[10:45] *** w_richard_w left
[10:50] <mornfall> how do i write filter on an array?

[10:51] <El_Che> .grep?

[10:52] <jnthn> m: dd [1..10].grep(* > 5) # like this?

[10:52] <camelia> rakudo-moar 2dbef9930: OUTPUT: «(6, 7, 8, 9, 10).Seq␤»

[10:52] <mornfall> yes, that! thanks

[10:52] *** kurahaupo left
[10:52] *** kurahaupo joined
[10:53] <mornfall> p6doc Array didn't say

[10:53] <El_Che> https://docs.perl6.org/type/List#routine_grep

[10:53] *** p6bannerbot sets mode: +v kurahaupo

[10:56] * jnthn wonders if p6doc includes things that are inherited

[10:58] <mornfall> jnthn: apparently it doesn't, no (p6doc Seq makes a passing mention of grep though)

[11:05] *** ranguard joined
[11:05] *** kurahaupo left
[11:05] *** kurahaupo joined
[11:06] *** p6bannerbot sets mode: +v kurahaupo

[11:08] <moritz> ... and the Any methods have been "helpfully" removed from the website as well :(

[11:11] <mornfall> is there a simple way to ask for an index of something in a list?

[11:11] *** Geth joined
[11:11] *** ChanServ sets mode: +v Geth

[11:12] <lizmat> @list.first( foo, :k )

[11:12] *** p6bannerbot sets mode: +v Geth

[11:13] <lizmat> m: say <a b c d e>.first( "c", :k ) # mornfall 

[11:13] <camelia> rakudo-moar 2dbef9930: OUTPUT: «2␤»

[11:16] *** kurahaupo left
[11:16] <mornfall> lizmat: i have some trouble getting that to work ... it gives me the right thing without :k (as in the value is good), but :k gives me 0 always it seems

[11:16] <lizmat> m: say <a b c d e>.first( "c" )

[11:16] <camelia> rakudo-moar 2dbef9930: OUTPUT: «c␤»

[11:17] <lizmat> without the :k you get the value it found

[11:17] <mornfall> yes, but with :k i always get 0 which is odd... also trying to run the REPL to check gave me MoarVM panic: Unable to allocate memory for callback closure

[11:18] <lizmat> mornfall: which version of Perl 6 are you using ?

[11:18] <mornfall> yeah getting rid of Linenoise fixed that panic

[11:18] <lizmat> and also: perhaps provide a gist somewhere of the code that is failing ?

[11:18] <mornfall> This is Rakudo Star version 2018.10 built on MoarVM version 2018.10

[11:18] <mornfall> but it's on openbsd, which is possibly unusual

[11:18] <mornfall> anyway, back to .first

[11:18] *** kurahaupo joined
[11:19] <lizmat> m: dd <a b c d e c>.grep( "c", :k )  # alternately, use grep with :k

[11:19] *** p6bannerbot sets mode: +v kurahaupo

[11:19] <camelia> rakudo-moar 2dbef9930: OUTPUT: «(2, 5).Seq␤»

[11:19] <mornfall> okay in REPL it does what it does here, so there's a bug in my program, most like... i'll sort it out

[11:24] *** qiqi left
[11:29] *** andrzejku_ joined
[11:30] *** p6bannerbot sets mode: +v andrzejku_

[11:30] *** loops joined
[11:31] *** p6bannerbot sets mode: +v loops

[11:31] <mornfall> lizmat: oooh, i see my problem... my ( $date, $pid ) = m,([\d|\-]+)\.(\d+),.list; (and then i do .first( $date ) which somehow always returns the first item... the value itself is also wrong of course, i mis-read)

[11:31] <mornfall> since $date is a match, not a string

[11:32] <mornfall> doing .Str on it fixes the problem

[11:32] <lizmat> mornfall: good to hear you found the problem  :-)

[11:32] *** andrzejku left
[11:33] *** andrzejku_ is now known as andrzejku

[11:33] <mornfall> any idea why it happens though? i'd expect the Match to coerce into a Str by itself, not to just pair up with all strings happily

[11:33] *** kurahaupo left
[11:33] <mornfall> oooh, it coerces into a Bool instead?

[11:34] *** kurahaupo joined
[11:34] <mornfall> nah, it doesn't

[11:34] <lizmat> m: dd Match ~~ Iterable

[11:34] <camelia> rakudo-moar 2dbef9930: OUTPUT: «Bool::False␤»

[11:34] <lizmat> hmmm...

[11:34] *** clarkema joined
[11:34] *** p6bannerbot sets mode: +v kurahaupo

[11:35] <lizmat> it maybe because you can consider a Match object as a list of positional matches

[11:35] <lizmat> *mey be

[11:35] <lizmat> *may be

[11:35] <lizmat> grrr

[11:35] *** p6bannerbot sets mode: +v clarkema

[11:36] <mornfall> dunno, doing a .first( () ) gives Nil (as it should)

[11:37] <mornfall> (the Match is already a single capture, came from a .list of the toplevel Match)

[11:38] <lizmat> m: dd Match.new(list => <a b c d>).first("c", :k)

[11:38] <camelia> rakudo-moar 2dbef9930: OUTPUT: «2␤»

[11:38] <lizmat> looks indeed that Match.first will run over the positional captures of the match

[11:40] <mornfall> m: my ( $x ) = "a b c" ~~ /b/; <a b c>.first( $x )

[11:40] <camelia> rakudo-moar 2dbef9930: ( no output )

[11:40] <mornfall> m: my ( $x ) = "a b c" ~~ /b/; dd <a b c>.first( $x )

[11:40] <camelia> rakudo-moar 2dbef9930: OUTPUT: «"a"␤»

[11:41] <mornfall> m: my ( $x ) = "a b c" ~~ /b/; dd <a b c>.first( $x.Str )

[11:41] <camelia> rakudo-moar 2dbef9930: OUTPUT: «"b"␤»

[11:42] <mornfall> beats me...

[11:45] *** kurahaupo left
[11:45] *** kurahaupo joined
[11:46] *** p6bannerbot sets mode: +v kurahaupo

[11:57] *** sena_kun joined
[11:57] *** p6bannerbot sets mode: +v sena_kun

[11:58] *** kurahaupo left
[11:59] *** kurahaupo joined
[11:59] *** p6bannerbot sets mode: +v kurahaupo

[12:04] <mornfall> any idea how to get a union of keys of two hashes? (or two sorted lists for that matter)

[12:05] <moritz> unique(%a.keys, %b.keys) # maybe?

[12:05] <lizmat> m: dd <a b c d> (|) <d e f>

[12:05] <camelia> rakudo-moar 2dbef9930: OUTPUT: «Set.new("b","f","e","a","c","d")␤»

[12:05] <lucasb> m: say {a=>1,b=>2} ∪ {b=>3,c=>4}

[12:05] <camelia> rakudo-moar 2dbef9930: OUTPUT: «set(a b c)␤»

[12:06] <mornfall> hm, i looked for a Set and didn't find it, silly me

[12:06] <jnthn> I was going to write what lucasb did but with .keys on. Nice that you don't even need that :)

[12:06] <mornfall> good thing i have ∪ on my keyboard ;-)

[12:07] <mornfall> cool stuff

[12:07] <lizmat> yeah... if you union 2 lists, it will create the Set on the fly, rather than first create 2 Sets out of the lists

[12:10] *** kurahaupo left
[12:11] *** kurahaupo joined
[12:11] *** p6bannerbot sets mode: +v kurahaupo

[12:12] *** Aceeri__ joined
[12:12] *** p6bannerbot sets mode: +v Aceeri__

[12:21] *** jjmerelo joined
[12:21] *** p6bannerbot sets mode: +v jjmerelo

[12:21] <jjmerelo> squashable6: status

[12:21] <squashable6> jjmerelo, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈23 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:22] *** pecastro joined
[12:22] *** kurahaupo left
[12:22] *** p6bannerbot sets mode: +v pecastro

[12:22] *** kurahaupo joined
[12:23] <lizmat> jjmerelo: I'm afraid I won't be able to do much with this Squashathon  :-(

[12:23] *** p6bannerbot sets mode: +v kurahaupo

[12:23] <jjmerelo> lizmat: no problem

[12:24] <jjmerelo> I am kind of busy, too...

[12:24] <jjmerelo> Better luck next time...

[12:26] <squashable6> 🍕 JJ++ labeled issue “Exceptions: `try` block …” (update): https://github.com/perl6/doc/issues/2468

[12:26] <squashable6> 🍕🍕🍕  First contribution by JJ++! ♥

[12:26] <squashable6> 🍕 JJ++ labeled issue “Exceptions: `try` block …” (docs): https://github.com/perl6/doc/issues/2468

[12:27] *** qiqi joined
[12:27] <squashable6> 🍕 JJ++ wrote a comment on “gather/take for hashes”: https://github.com/perl6/doc/issues/2479#issuecomment-443189150

[12:28] *** p6bannerbot sets mode: +v qiqi

[12:28] <AlexDaniel> .

[12:28] <yoleaux> 06:25Z <jmerelo> AlexDaniel: don't usually Squashathons start on Fridays?

[12:30] <AlexDaniel> jjmerelo: oh wow there was a wrong date or something?

[12:30] <jjmerelo> AlexDaniel: there was

[12:30] <jjmerelo> I changed the wiki

[12:30] <AlexDaniel> nice

[12:34] *** kurahaupo left
[12:36] *** kurahaupo joined
[12:37] *** p6bannerbot sets mode: +v kurahaupo

[12:46] <Geth> ¦ doc: 08f511ce5f | (JJ Merelo)++ | writing-docs/EXAMPLES.md

[12:46] <Geth> ¦ doc: Minor revision looking at solving #2314

[12:46] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/08f511ce5f

[12:46] <Geth> ¦ doc: 31dec6c6db | (JJ Merelo)++ | doc/Programs/01-debugging.pod6

[12:46] <Geth> ¦ doc: Revised anchoring of dd and examples

[12:46] <Geth> ¦ doc: 

[12:46] <squashable6> 🍕 JJ++ closed issue “RFE: dd in the docs”: https://github.com/perl6/doc/issues/2314

[12:46] <Geth> ¦ doc: Refs #1303, but closes #2314. We have simply improved the position of the anchor, but we are not creating a specific page with that URL, since that would have either be hard-coded in the generation or move this function, which is Rakudo specific, somewhere else.

[12:46] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/31dec6c6db

[12:48] *** kurahaupo left
[12:55] <squashable6> 🍕 JJ++ reopened issue “Problems with p6doc build ”: https://github.com/perl6/doc/issues/2387

[12:58] <squashable6> 🍕 stmuk++ wrote a comment on “Problems with p6doc build ”: https://github.com/perl6/doc/issues/2387#issuecomment-443196119

[12:58] <squashable6> 🍕🍕🍕  First contribution by stmuk++! ♥

[13:00] <mornfall> (is there a shortcut for .sort.reverse.first?)

[13:00] *** coet[work] left
[13:00] <sena_kun> m: <a c b>.sort[*-1]

[13:00] <camelia> rakudo-moar 2dbef9930: ( no output )

[13:00] <sena_kun> m: <a c b>.sort[*-1].say

[13:00] <camelia> rakudo-moar 2dbef9930: OUTPUT: «c␤»

[13:01] <sena_kun> ^

[13:01] <lizmat> m: dd <a b c d c>.first("c", :end, :k)   # mornfall 

[13:01] <camelia> rakudo-moar 2dbef9930: OUTPUT: «4␤»

[13:02] <lizmat> use the :end named parameter on .first

[13:02] <sena_kun> m: say <a c b>.max

[13:02] <camelia> rakudo-moar 2dbef9930: OUTPUT: «c␤»

[13:02] <lizmat> alernately, reverse the sort condition  :-)

[13:03] <mornfall> i think sena_kun won with .max :)

[13:03] <mornfall> thanks both ofc

[13:04] <lizmat> mornfall: aha, yes, but that was not clear from your question  :-)

[13:04] <mornfall> lizmat: it wasn't clear to me either! :)

[13:04] *** yqt joined
[13:05] *** p6bannerbot sets mode: +v yqt

[13:05] <mornfall> (i think i like .first better than [0] ... easier to type for me?)

[13:08] <squashable6> 🍕 JJ++ opened issue “Change page structure of the Debugging page”: https://github.com/perl6/doc/issues/2483

[13:08] <mornfall> sorry to be such a bother, but it's really quite efficient to ask here... how do i topicalize a thing? (as in, make it $_)?

[13:09] <squashable6> 🍕 JJ++ labeled issue “Change page structure of the Debugging page” (docs): https://github.com/perl6/doc/issues/2483

[13:09] <squashable6> 🍕 JJ++ labeled issue “Change page structure of the Debugging page” (update): https://github.com/perl6/doc/issues/2483

[13:10] <mornfall> hmm given perhaps

[13:10] *** qiqi left
[13:10] <sena_kun> `given` or `with`.

[13:11] <sena_kun> `with` checks a variable to be defined though

[13:12] *** leont joined
[13:13] *** p6bannerbot sets mode: +v leont

[13:18] *** kurahaupo joined
[13:18] *** p6bannerbot sets mode: +v kurahaupo

[13:20] *** beeman joined
[13:20] *** p6bannerbot sets mode: +v beeman

[13:25] <squashable6> 🍕 JJ++ labeled issue “RFE: working change in "words" documentation” (docs): https://github.com/perl6/doc/issues/2340

[13:25] <squashable6> 🍕 JJ++ labeled issue “RFE: working change in "words" documentation” (update): https://github.com/perl6/doc/issues/2340

[13:25] *** qiqi joined
[13:25] <squashable6> 🍕 JJ++ labeled issue “RFE: May be have a section on Escape Characters?” (docs): https://github.com/perl6/doc/issues/2313

[13:25] <squashable6> 🍕 JJ++ labeled issue “RFE: May be have a section on Escape Characters?” (update): https://github.com/perl6/doc/issues/2313

[13:26] *** p6bannerbot sets mode: +v qiqi

[13:26] *** lizmat left
[13:27] <squashable6> 🍕 JJ++ labeled issue “A booboo and an rfe in contains documentation” (docs): https://github.com/perl6/doc/issues/2334

[13:27] <squashable6> 🍕 JJ++ labeled issue “A booboo and an rfe in contains documentation” (update): https://github.com/perl6/doc/issues/2334

[13:29] *** kurahaupo left
[13:29] <squashable6> 🍕 JJ++ labeled issue “Need to note unordering-…” (update): https://github.com/perl6/doc/issues/2174

[13:29] *** kurahaupo joined
[13:30] *** p6bannerbot sets mode: +v kurahaupo

[13:42] <squashable6> 🍕 JJ++ wrote a comment on “classes are just blocks (to some extent)”: https://github.com/perl6/doc/issues/2481#issuecomment-443206878

[13:44] *** kurahaupo left
[13:47] *** kurahaupo joined
[13:48] *** p6bannerbot sets mode: +v kurahaupo

[13:54] *** rindolf left
[13:56] *** jjmerelo left
[13:57] *** kurahaupo left
[14:00] *** kurahaupo joined
[14:01] *** p6bannerbot sets mode: +v kurahaupo

[14:02] <mornfall> when i decode a bungled up utf8 string with utf8-c8... how would I go about replacing the bad chars with X? i tried subst( rx|\􏿽...|, "X" ); but that's not really working :\

[14:02] <moritz> mornfall: first look at string after decoding

[14:03] <mornfall> well, the 0x10FFFD char is what i get when i .say the string

[14:04] <mornfall> which is what it should be, but the regex doesn't seem to be too happy about it

[14:04] <moritz> after you've decoded with utf8-c8? sure?

[14:04] <moritz> do you have a sample of input bytes that lead to that?

[14:05] <moritz> m: say Buf.new(0xFE, 0xFF).decode('utf8-c8')

[14:05] <camelia> rakudo-moar 38bc682b0: OUTPUT: «􏿽xFE􏿽xFF␤»

[14:05] <moritz> m: say Buf.new(0xFE, 0xFF).decode('utf8-c8').perl

[14:05] <camelia> rakudo-moar 38bc682b0: OUTPUT: «"􏿽xFE􏿽xFF"␤»

[14:05] <moritz> m: say Buf.new(0xFE, 0xFF).decode('utf8-c8').ords

[14:05] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(1114109 120 70 69 1114109 120 70 70)␤»

[14:06] <moritz> m: say Buf.new(0xFE, 0xFF).decode('utf8-c8').ords>>.hex

[14:06] <camelia> rakudo-moar 38bc682b0: OUTPUT: «No such method 'hex' for invocant of type 'Int'␤  in block <unit> at <tmp> line 1␤␤»

[14:06] <moritz> m: say Buf.new(0xFE, 0xFF).decode('utf8-c8').ords.map(*.base(16))

[14:06] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(10FFFD 78 46 45 10FFFD 78 46 46)␤»

[14:07] <moritz> so it seems utf8-c8 produces \x[10FFFD] + 3 characters for every input byte it didn't understand

[14:07] <mornfall> I think it's the regex engine that is unhappy

[14:08] <moritz> m: say Buf.new(0xFE, 0xFF).decode('utf8-c8').subst(:g, /\x[10FFFD] .../, '')

[14:08] <camelia> rakudo-moar 38bc682b0: OUTPUT: «􏿽xFE􏿽xFF␤»

[14:09] <moritz> huh

[14:09] <mornfall> something something probably the grapheme-based representation biting me in the ass :\

[14:09] *** rindolf joined
[14:10] <jnthn> Yes, the bytes that are in error are turned into synthetic graphemes, so that if you encode with utf8-c8 again it can round-trip them

[14:10] <mornfall> have to go, will deal with it later (thanks for looking)

[14:10] *** p6bannerbot sets mode: +v rindolf

[14:10] *** qiqi left
[14:11] <jnthn> You could probably do something like /:m \x[10FFFD]/ which matches the grapheme with that base char

[14:11] <mornfall> jnthn: yeah, but i would like to just deal with them some other way (this ends up being uploaded into a database somewhere and I don't want non-utf-8 junk in it)

[14:12] *** qiqi joined
[14:12] *** p6bannerbot sets mode: +v qiqi

[14:15] *** kurahaupo left
[14:16] *** kurahaupo joined
[14:17] *** p6bannerbot sets mode: +v kurahaupo

[14:18] *** gregf_ joined
[14:18] *** p6bannerbot sets mode: +v gregf_

[14:22] *** Aceeri__ left
[14:31] *** kurahaupo left
[14:31] *** kurahaupo joined
[14:32] *** p6bannerbot sets mode: +v kurahaupo

[14:33] *** domidumont left
[14:35] <moritz> then deal with it :)

[14:38] <mornfall> well, it's easier said than done :p i'll look if i can destroy it by going utf8-c8 dec → utf8 enc → kill bad stuff in Buf → utf8 dec

[14:39] <mornfall> but a walkie first

[14:44] *** kurahaupo left
[14:45] *** kurahaupo joined
[14:45] *** p6bannerbot sets mode: +v kurahaupo

[14:49] *** domidumont joined
[14:50] *** p6bannerbot sets mode: +v domidumont

[14:50] *** abraxxa left
[14:52] <moritz> m: say Buf.new(65, 0xFE, 0xFF, 65).decode('utf8-c8').subst(:g, /:m \x[10FFFD]/, '')

[14:52] <camelia> rakudo-moar 38bc682b0: OUTPUT: «A􏿽xFE􏿽xFFA␤»

[14:55] <moritz> m: say Buf.new(65, 0xFE, 0xFF, 65).decode('utf8-c8').subst(:g, /:m \x[10FFFD]/, '(removed)')

[14:55] <camelia> rakudo-moar 38bc682b0: OUTPUT: «A􏿽xFE􏿽xFFA␤»

[14:56] <Geth> ¦ advent: ad3dccee64 | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[14:56] <Geth> ¦ advent: add link to Wordpress help

[14:56] <Geth> ¦ advent: review: https://github.com/perl6/advent/commit/ad3dccee64

[14:58] *** kurahaupo left
[15:02] *** kurahaupo joined
[15:03] *** p6bannerbot sets mode: +v kurahaupo

[15:16] *** kurahaupo left
[15:20] *** kurahaupo joined
[15:21] *** qiqi left
[15:21] *** p6bannerbot sets mode: +v kurahaupo

[15:34] *** kurahaupo left
[15:36] <tbrowder> unless anyone sees problems with my draft advent article here: https://github.com/tbrowder/Perl6-Advent/blob/master/p6advent-2018-12-04.md

[15:38] <tbrowder> i i can publish it as needed if 1 dec (or 2 or 3) is not ready (given sufficient warning, i'm at UTC -6)

[15:39] <[Coke]> tbrowder: https://github.com/rakudo/rakudo/src/Perl6/ is a 404

[15:41] <[Coke]> otherwise +1

[15:48] *** kensanata left
[15:51] *** yqt left
[15:58] <loops> tbrowder: looks good.  Will be great to have those NYI features!

[16:01] *** kurahaupo joined
[16:02] *** p6bannerbot sets mode: +v kurahaupo

[16:11] *** robertle left
[16:12] *** kurahaupo left
[16:13] *** kurahaupo joined
[16:14] *** p6bannerbot sets mode: +v kurahaupo

[16:14] <mornfall> m: say Buf.new(65, 0xFE, 0xFF, 65).decode('utf8-c8').subst(:g, /<:Co>/, 'X')

[16:14] <camelia> rakudo-moar 38bc682b0: OUTPUT: «AXXA␤»

[16:15] *** scimon left
[16:15] <mornfall> moritz: I think the issue is that the whole \x[10FFFD]xHH sequence comes out as a single grapheme

[16:16] <mornfall> since it's classified as Private_Use it is probably to just axe it that way

[16:16] <mornfall> it is probably safe*

[16:17] <moritz> tbrowder: shouldn't it be make $val; instead of just make; ?

[16:18] *** dct left
[16:19] *** molaf joined
[16:20] *** p6bannerbot sets mode: +v molaf

[16:23] *** kurahaupo left
[16:23] *** kurahaupo joined
[16:24] *** p6bannerbot sets mode: +v kurahaupo

[16:32] *** dct joined
[16:32] *** p6bannerbot sets mode: +v dct

[16:36] *** kensanata joined
[16:36] *** p6bannerbot sets mode: +v kensanata

[16:38] *** kurahaupo left
[16:38] *** kurahaupo joined
[16:39] *** p6bannerbot sets mode: +v kurahaupo

[16:45] *** dct left
[16:47] *** tobs` left
[16:50] *** kurahaupo left
[16:51] *** kurahaupo joined
[16:52] *** p6bannerbot sets mode: +v kurahaupo

[16:55] *** zakharyas left
[17:03] *** kurahaupo left
[17:04] *** kurahaupo joined
[17:04] *** p6bannerbot sets mode: +v kurahaupo

[17:13] *** domidumont left
[17:16] *** kurahaupo left
[17:16] *** kurahaupo joined
[17:17] *** p6bannerbot sets mode: +v kurahaupo

[17:27] *** kurahaupo left
[17:27] *** kurahaupo joined
[17:28] *** p6bannerbot sets mode: +v kurahaupo

[17:36] *** robertle joined
[17:36] *** p6bannerbot sets mode: +v robertle

[17:39] *** kurahaupo left
[17:39] *** kurahaupo joined
[17:40] *** p6bannerbot sets mode: +v kurahaupo

[17:41] <tbrowder> moritz: thanks, so corrected

[17:41] *** ryn1x joined
[17:42] *** p6bannerbot sets mode: +v ryn1x

[17:44] <tbrowder> [Coke]: so corrected, thnx

[17:51] <tbrowder> loops: does that  intro para read a bit better now?

[17:51] *** kurahaupo left
[17:51] *** kurahaupo joined
[17:52] *** p6bannerbot sets mode: +v kurahaupo

[17:53] *** pmurias joined
[17:53] *** p6bannerbot sets mode: +v pmurias

[17:53] <loops> tbrowder: yeah, that's better

[17:53] <pmurias> SmokeMachine: do you have a wishlist of stuff you want for rakudo.js/6pad?

[17:53] <yoleaux> 02:07Z <SmokeMachine> pmurias: I can be wrong, but I think this is the first "todo app" written in perl6 using memoized dom for the browser! :) https://perl6.github.io/6pad/?#60b7cb15e676861a46702a04d1a5a1d1

[17:54] <tbrowder> ok, don't be shy if you want to be specific about changes

[17:55] <SmokeMachine> pmurias: real line number on errors

[17:56] <SmokeMachine> pmurias: `use` for custom modules

[17:56] *** pmurias left
[17:56] *** ryn1x left
[17:56] *** ryn1x joined
[17:56] <SmokeMachine> pmurias: clean the namespace for each "run"

[17:57] *** p6bannerbot sets mode: +v ryn1x

[17:58] <SmokeMachine> .tell pmurias real line number on errors; `use` custom modules; clean the namespace for each "run". From the top of my head... that's it

[17:58] <yoleaux> SmokeMachine: I'll pass your message to pmurias.

[18:00] *** domidumont joined
[18:00] *** p6bannerbot sets mode: +v domidumont

[18:00] *** jjmerelo joined
[18:00] *** p6bannerbot sets mode: +v jjmerelo

[18:01] <jjmerelo> squashable6: status

[18:01] <squashable6> jjmerelo, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈17 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[18:01] <squashable6> jjmerelo, Log and stats: https://gist.github.com/bfc5ad3116237619699d95b232ab8253

[18:01] <jjmerelo> Anyone up for squashing bugs?

[18:02] * sena_kun writes posts for Advent

[18:02] *** ryn1x left
[18:03] *** |oLa| left
[18:03] *** kurahaupo left
[18:03] *** kurahaupo joined
[18:04] *** p6bannerbot sets mode: +v kurahaupo

[18:04] <kensanata> jjmerelo: As in, the 542 failing new tests for p6-markdown? :)

[18:05] *** pmurias joined
[18:05] *** p6bannerbot sets mode: +v pmurias

[18:05] <pmurias> SmokeMachine: thank you, wrote that down

[18:05] <yoleaux> 17:58Z <SmokeMachine> pmurias: real line number on errors; `use` custom modules; clean the namespace for each "run". From the top of my head... that's it

[18:05] <jjmerelo> kensanata: he

[18:05] <jjmerelo> Actually, the squashathon is focused on perl6/doc and related tools.

[18:05] <jjmerelo> sena_kun++

[18:06] <jjmerelo> kensanata: I don't really know what to make of that.

[18:06] <jjmerelo> On one hand, p6-markdown would be better rewritten. The implementation is LTA

[18:07] <jjmerelo> kensanata: Im pretty sure that, with the current implementation, we will still fail 500 of those 542 tests. To pass the rest, a complete rewrite would be much better

[18:08] <jjmerelo> kensanata: so probably the best thing would be to fork, use whatever is usable from this implementation, but release a new module that's able to pass all those tests.

[18:09] <kensanata> Yeah.

[18:10] <kensanata> jjmerelo: I have an empty implementation that fails *all* the tests. :)

[18:10] *** gregf_ left
[18:12] <jjmerelo> kensanata: a few is definitely better than none. But it's way above my pay grade to rewrite it, either with grammars or porting some existing module (in Perl, for instance).

[18:14] *** kurahaupo left
[18:14] *** kurahaupo joined
[18:15] <sena_kun> markdown doesn't have a nice grammar, this is why implementing it is a "life is pain" situation.

[18:15] *** p6bannerbot sets mode: +v kurahaupo

[18:15] *** patrickb joined
[18:15] <kensanata> I am still hoping that CommonMark is better than the Daring Fireball.

[18:16] <jjmerelo> sena_kun: right. I started with that module, I added a few stuff I needed for my book, but even doing that was a pain.

[18:16] <kensanata> One benefit is that they have over 600 tests that are easy to run.

[18:16] *** p6bannerbot sets mode: +v patrickb

[18:16] <jjmerelo> kensanata: it would be great for perl6 to have that kind of thing.

[18:16] <sena_kun> hmm, I see some articles.

[18:16] <jjmerelo> Only, well, we do have to do it

[18:17] *** Grauwolf joined
[18:17] *** p6bannerbot sets mode: +v Grauwolf

[18:18] <Geth> ¦ doc/features/kensanata/squashaton-gather-take: 016acef80c | (Alex Schroeder)++ | doc/Language/control.pod6

[18:18] <Geth> ¦ doc/features/kensanata/squashaton-gather-take: Explain how gather/take works with hashes

[18:18] <Geth> ¦ doc/features/kensanata/squashaton-gather-take: 

[18:18] <Geth> ¦ doc/features/kensanata/squashaton-gather-take: Fixes #2479.

[18:18] <Geth> ¦ doc/features/kensanata/squashaton-gather-take: review: https://github.com/perl6/doc/commit/016acef80c

[18:18] <squashable6> 🍕🍕🍕  First contribution by kensanata++! ♥

[18:18] <jjmerelo> kensanata++

[18:19] <kensanata> Yikes, I'm not used to bots watching my every move.

[18:20] <kensanata> jjmerelo: a quick review?

[18:21] *** Peter_R left
[18:22] <jjmerelo> kensanata: which I did. Looks fine. :-)

[18:25] <pmurias> SmokeMachine: thank you for being an early adopter, I'll try to solve at least some of those issues after I fix by fake-running-of-rakudo.js-in-the-browser features that's required for a lot of tests

[18:25] *** kurahaupo left
[18:26] *** kurahaupo joined
[18:26] <Geth> ¦ doc: 016acef80c | (Alex Schroeder)++ | doc/Language/control.pod6

[18:26] <synopsebot_> Link: https://doc.perl6.org/language/control

[18:26] <Geth> ¦ doc: Explain how gather/take works with hashes

[18:26] <Geth> ¦ doc: 

[18:26] <Geth> ¦ doc: Fixes #2479.

[18:26] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/016acef80c

[18:26] <squashable6> 🍕 kensanata++ closed issue “gather/take for hashes”: https://github.com/perl6/doc/issues/2479

[18:26] *** p6bannerbot sets mode: +v kurahaupo

[18:27] *** patrickb left
[18:27] <kensanata> I'm looking at https://github.com/perl6/doc/issues/2388 and reading through the IRC conversation and I don't know what to say about that. Any ideas of what the docs ought to say?

[18:27] <jjmerelo> tbrowder: do we need to  post the markdown to a gist? Do we do that in order to capture the HTML or something? Will plain git do?

[18:29] <tbrowder> jjmerelo, I put more details on what can be done if Zoffix's Acme::Advent::Highlighter fails

[18:29] <jjmerelo> kensanata: Well, that example might help. Some recursive example too. Anything would be better, I guess.

[18:30] <jjmerelo> kensanata: come to think of it, a better example with a real use case is always better. But if we can't come up with one, that one might be enough

[18:30] <tbrowder> see https://github.com/perl6/advent/blob/master/CONTRIBUTING.md

[18:30] <kensanata> I also noticed that I solved the only issue tagged "easy to resolve". We need more issues with that tag.

[18:31] <tbrowder> it would be nice to pin the advent repo in place of the ecosystem (which I thought we were replacing with CPAN!!)

[18:34] <jjmerelo> tbrowder: I just added a "search" slot to the advent calendar web site

[18:34] <jjmerelo> kensanata: the ones related to format and page structure are easy too...

[18:34] <jjmerelo> tbrowder: let me see if I understand what you mean by pinning...

[18:35] <tbrowder> pinning: witg github you can "pin" up to 6 repos to be highlighted on the main page

[18:37] <tbrowder> currently perl6 shows: nqp, doc, roast, modules.perl6.org, ecosystem, and perl6.org

[18:37] *** Peter_R joined
[18:37] *** p6bannerbot sets mode: +v Peter_R

[18:38] <tbrowder> i suggest replacing ecosystem with advent

[18:38] <kensanata> jjmerelo: I'm looking at the tag "good first issue" and haven't found any good first issues. For example https://github.com/perl6/doc/issues/1945 – shouldn't we close this?

[18:38] <kensanata> jjmerelo: After all, you suggested closign it in Sept. :)

[18:39] *** kurahaupo left
[18:39] <jjmerelo> Yep, but the problem is I don't really know if there are some left.

[18:39] <jjmerelo> Just a short time ago I found some Strange Capitalization

[18:40] <jjmerelo> The right thing to do would be to prepare a test for it, whitelisting stuff in some cases. It shouldn't be too hard to extract =head? and look for capitals outside the first word

[18:41] <jjmerelo> Boils down to: I wouldn't close it until I'm sure it should be closes, and I'm not going to be sure until a tests says so. If it ain't tested, it's broken.

[18:41] <kensanata> I think finding what the problem actually is makes such an issue not a "good first issue". Another example in this category is this one: https://github.com/perl6/doc/issues/1923 – I don't even understand how to find the problem. I ran a find . -type f -exec egrep --color -nHi -e "pod[ \r\n\t]+6" {} + and didn't find anyhting related... so problem solved?

[18:41] <kensanata> jjmerelo: OK, that makes sense.

[18:45] *** jjmerelo left
[18:47] *** patrickb joined
[18:48] *** p6bannerbot sets mode: +v patrickb

[18:50] *** jjmerelo joined
[18:50] *** p6bannerbot sets mode: +v jjmerelo

[18:52] *** zakharyas joined
[18:53] *** p6bannerbot sets mode: +v zakharyas

[18:56] *** molaf left
[19:01] <SmokeMachine> pmurias: thank you for doing rakudo.js and 6pad! It's unbelievable how well it's doing!  

[19:02] *** jast left
[19:03] *** jast joined
[19:03] <SmokeMachine> pmurias: what's the fake-running-of-rakudo.js-in-the-browser?

[19:03] *** p6bannerbot sets mode: +v jast

[19:11] *** ryn1x joined
[19:12] *** p6bannerbot sets mode: +v ryn1x

[19:17] <pmurias> SmokeMachine: in roast a &is_run sub is called a lot, which starts a new rakudo process and runs a bit of code with it

[19:17] <pmurias> SmokeMachine: we can't start new processes in the browser so I need to fake it somehow

[19:18] <timotimo> .o( could use service workers )

[19:18] <timotimo> web workers*

[19:18] <SmokeMachine> pmurias: would it be a crazy idea to use workers?

[19:19] <SmokeMachine> timotimo: you stole my idea! :P

[19:22] *** pmurias left
[19:23] <SmokeMachine> pmurias: and maybe 6pad could compile the code into a worker too...

[19:23] <SmokeMachine> in a

[19:29] <kensanata> What would be a good way to generate a regular expression that allows me to strip all class and role names from a string? I'm trying to verify that this sentence is correctly capitalized, for example: "Error while trying to coerce a number to a Real type". I was thinking of removing "Real" before checking.

[19:29] <timotimo> you can just use .trans for that

[19:30] <mornfall> btw... is it me or is perl6 (rakudo on moar) somewhat slow?

[19:30] <timotimo> m: "Error with Foobar and Barbaz".trans(["Error", "Foobar", "Barbaz"] => ["", "", ""]).say

[19:30] <camelia> rakudo-moar 38bc682b0: OUTPUT: « with  and ␤»

[19:30] <timotimo> mornfall: it can be; usually there's very simple changes that lets your code run 100x faster or so

[19:30] <moritz> mornfall: depends very much on what you do with it

[19:30] <mornfall> the compiler takes a while (read script startup), but the runtime isn't exactly speedy either :\

[19:31] <mornfall> hmm, any pointers to further reading?

[19:31] <kensanata> timotimo: I'm not sure I understand. I already have a test: $title !~~ $title.lc.tc – what I'm lacking is a way to exclude all known class and role names from this test.

[19:31] <timotimo> mornfall: can you give us an example? also, how long does script compilation take for you? you can check by invoking perl6 with --stagestats

[19:32] <timotimo> also, if you're on a system that's not supported by moarvm's jit (like 32bit x86, or arm, powerpc, ...) then you'll also not have the fastest executions, either

[19:33] <mornfall> the only thing that pops up is Stage parse      :   0.561

[19:33] <mornfall> it's about 150 lines and uses a few modules (HTTP::UserAgent, XML::Tiny, Algorithm::Diff)

[19:34] <mornfall> timotimo: does it depend on the OS too, or is it the CPU arch only that matters?

[19:34] <mornfall> says here This is MoarVM version 2018.10 built with JIT support

[19:34] <timotimo> ah, yeah, because calling convention differs at the very least between linux and windows

[19:34] <timotimo> sounds like a good start

[19:36] <mornfall> NVM_JIT_DISABLE adds about 35% to stage parse, and about 23% to total cpu time

[19:36] <mornfall> so I guess it's JITting all right

[19:36] <timotimo> that's good

[19:36] <Xliff> Is there a site for 6pad?

[19:37] <timotimo> moarvm has a built-in profiler; you can either just --profile and it'll spit out an html file you can open that'll turn into a little "web app", or you can --profile --profile-filename=foobar.sql and feed that into the glorious moarperf program: https://github.com/timo/moarperf/

[19:37] <timotimo> the "just an html file" has some shortcomings, like poor performance for complex programs, and not doing much with multi-threaded programs

[19:37] <timotimo> but at least you don't have to run an extra program

[19:37] <timotimo> anyway, i've gotta go AFK for a bit

[19:38] <timotimo> find more info about moarperf on my blog: https://wakelift.de/ :)

[19:38] <mornfall> thanks, will check it out

[19:38] <mornfall> (already doing a trial run with --profile)

[19:41] <mornfall> umm, both chromium and firefox kinda fail to render the html :\

[19:42] <mornfall> okay it eventually rendered, but the browsers seriously struggle

[19:42] *** jjmerelo left
[19:42] <tbrowder> i have to leave, is the first advent article going through?

[19:43] <tbrowder> *leave soon

[19:44] <SmokeMachine> Xliff: https://perl6.github.io/6pad/

[19:44] <Xliff> NM. https://perl6.github.io/6pad/

[19:44] <Xliff> SmokeMachine: LOL! 

[19:44] <Xliff> SmokeMachine++

[19:44] <SmokeMachine> Xliff: :)

[19:45] <SmokeMachine> Xliff: and if you want to take a look at my new project: https://perl6.github.io/6pad/#ada3d7e0a4251c13e7b73a426a97039f

[19:45] <tobs> m: say "Error while trying to coerce a number to a Real type".words.tail(*-1).grep({ .self eq .tc }).grep({ Nil R~~ try ::($_) })

[19:45] <camelia> rakudo-moar 38bc682b0: OUTPUT: «()␤»

[19:46] <tobs> m: say "Error while trying to Coerce a number to a Real type".words.tail(*-1).grep({ .self eq .tc }).grep({ Nil R~~ try ::($_) })

[19:46] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(Coerce)␤»

[19:46] <tobs> kensanata: ^ but of course it's prone to false negatives

[19:47] <mornfall> having to install node.js for moarperf makes me somewhat unhappy :|

[19:48] <tobs> m: say "Real Cool Bag".words.tail(*-1).grep({ .self eq .tc }).grep({ Nil R~~ try ::($_) })

[19:48] <camelia> rakudo-moar 38bc682b0: OUTPUT: «()␤»

[19:54] <Kaiepi> lol this issue https://github.com/rakudo/rakudo/issues/2510

[19:54] <Kaiepi> thread

[19:54] <Kaiepi> same

[19:55] <Geth> ¦ advent: uzluisf++ created pull request #5: Claim spot

[19:55] <Geth> ¦ advent: review: https://github.com/perl6/advent/pull/5

[19:56] *** ryn1x left
[19:57] <Geth> ¦ advent: 97dc2e5157 | (Luis F. Uceta)++ (committed using GitHub Web editor) | perl6advent-2018/schedule

[19:57] <Geth> ¦ advent: Claim spot

[19:57] <Geth> ¦ advent: 

[19:57] <Geth> ¦ advent: The article can be found here: https://gist.github.com/uzluisf/268a95ffec901056c9377c254a3971d1

[19:57] <Geth> ¦ advent: review: https://github.com/perl6/advent/commit/97dc2e5157

[19:57] <Geth> ¦ advent: 537f6a1ac0 | (Will Coleda)++ (committed using GitHub Web editor) | perl6advent-2018/schedule

[19:57] <Geth> ¦ advent: Merge pull request #5 from uzluisf/master

[19:57] <Geth> ¦ advent: 

[19:57] <Geth> ¦ advent: Claim spot

[19:57] <Geth> ¦ advent: review: https://github.com/perl6/advent/commit/537f6a1ac0

[19:58] *** graphene left
[19:58] *** uzl joined
[19:59] *** p6bannerbot sets mode: +v uzl

[20:00] *** graphene joined
[20:00] *** p6bannerbot sets mode: +v graphene

[20:01] *** molaf joined
[20:02] <leont> Oh right. Advent article, still need to claim a date (are they still available?) and write it

[20:02] *** Skarsnik joined
[20:02] <sena_kun> leont, 8th is available. :)

[20:02] *** p6bannerbot sets mode: +v molaf

[20:03] <kensanata> m: say "Unsigned Integer (arbitrary-precision)".words.grep({ .self eq .tc }).grep({ Nil R~~ try ::($_) })

[20:03] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(Unsigned Integer (arbitrary-precision))␤»

[20:04] <kensanata> m: say "Unsigned Integer".words.grep({ .self eq .tc }).grep({ Nil R~~ try ::($_) })

[20:04] <camelia> rakudo-moar 38bc682b0: OUTPUT: «(Unsigned Integer)␤»

[20:05] <kensanata> tobs: I've stumbled upon Integer... That isn't a class?

[20:06] <lucasb> Int? :)

[20:06] <uzl> My draft article for P6 Advent (25th): https://gist.github.com/uzluisf/268a95ffec901056c9377c254a3971d1 . Any proofreading (not necessarily now) would be appreciated.

[20:06] <kensanata> lucasb: Yeah.

[20:07] <uzl> m: 3 Rmod 7

[20:07] <camelia> rakudo-moar 38bc682b0: OUTPUT: «Potential difficulties:␤    Useless use of Rmod in sink context␤    at <tmp>:1␤    ------> 033 7⏏5Rmod 7␤»

[20:07] <uzl> m: say 3 Rmod 7

[20:07] <camelia> rakudo-moar 38bc682b0: OUTPUT: «1␤»

[20:07] <kensanata> My test for sentence capitalization of the docs still has 46 fails out of 375. I wonder how I should proceed, now.

[20:08] <Geth> ¦ doc/features/kensanata/test-for-capitalization: c6caf04964 | (Alex Schroeder)++ | t/08-headings.t

[20:08] <Geth> ¦ doc/features/kensanata/test-for-capitalization: Added test for consisten header capitalization

[20:08] <Geth> ¦ doc/features/kensanata/test-for-capitalization: review: https://github.com/perl6/doc/commit/c6caf04964

[20:13] *** uzl left
[20:16] <Geth> ¦ advent: 123922a5cd | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[20:16] <Geth> ¦ advent: add important note

[20:16] <Geth> ¦ advent: review: https://github.com/perl6/advent/commit/123922a5cd

[20:18] *** ranguard left
[20:19] <Geth> ¦ advent: 24ade177ee | (Tom Browder)++ (committed using GitHub Web editor) | CONTRIBUTING.md

[20:19] <Geth> ¦ advent: reorder the note

[20:19] <Geth> ¦ advent: review: https://github.com/perl6/advent/commit/24ade177ee

[20:20] <squashable6> 🍕 kensanata++ wrote a comment on commit c6caf049649a: https://github.com/perl6/doc/commit/c6caf049649a8f327589f3840bea9a8f27f96269#commitcomment-31519095

[20:24] <Geth> ¦ advent: 3405a855a4 | (Tom Browder)++ (committed using GitHub Web editor) | perl6advent-2018/schedule

[20:24] <Geth> ¦ advent: prefer IRC #perl6 nickname

[20:24] <Geth> ¦ advent: review: https://github.com/perl6/advent/commit/3405a855a4

[20:24] <squashable6> 🍕 JJ++ wrote a comment on commit c6caf049649a: https://github.com/perl6/doc/commit/c6caf049649a8f327589f3840bea9a8f27f96269#commitcomment-31519130

[20:24] <mornfall> MoarVM panic: Unable to allocate memory for callback closure

[20:24] <mornfall> ===> Testing [FAIL]: IO::Socket::Async::SSL:ver<0.7.1>

[20:24] <tbrowder> .ask tmtvl are you going to be able to publish on time?

[20:24] <yoleaux> tbrowder: I'll pass your message to tmtvl.

[20:25] <mornfall> :( I bumped the memory limit to 5GiB, but that doesn't seem to be the problem?

[20:26] <mornfall> maybe it ran out of stack? *tries*

[20:26] * sena_kun has a ready blog post

[20:27] <sena_kun> Though I am sure a grammar check won't hurt.

[20:28] <mornfall> nope, 30MiB of stack space didn't help either :(

[20:33] *** pmurias joined
[20:33] *** p6bannerbot sets mode: +v pmurias

[20:34] <pmurias> SmokeMachine: as a temporary measure before the redeclaration is fix using 'my class Foo {...}' instead of 'class Foo {...}' helps

[20:35] <SmokeMachine> pmurias: hum! that makes sense! thanks!

[20:35] <Geth> ¦ doc/features/kensanata/test-for-capitalization: 8399f8671f | (Alex Schroeder)++ | t/08-headings.t

[20:35] <Geth> ¦ doc/features/kensanata/test-for-capitalization: More exceptions for header capitalization

[20:35] <Geth> ¦ doc/features/kensanata/test-for-capitalization: review: https://github.com/perl6/doc/commit/8399f8671f

[20:35] <squashable6> 🍕 kensanata++ wrote a comment on commit c6caf049649a: https://github.com/perl6/doc/commit/c6caf049649a8f327589f3840bea9a8f27f96269#commitcomment-31519244

[20:37] *** zakharyas left
[20:37] <mornfall> hmm, the crash is somewhere within libffi... not good :\

[20:38] *** leont left
[20:39] *** robertle left
[20:40] <squashable6> 🍕 AlexDaniel++ wrote a comment on commit c6caf049649a: https://github.com/perl6/doc/commit/c6caf049649a8f327589f3840bea9a8f27f96269#commitcomment-31519290

[20:40] <squashable6> 🍕🍕🍕  First contribution by AlexDaniel++! ♥

[20:41] *** [particle] left
[20:46] *** cpup joined
[20:47] *** [particle] joined
[20:47] *** p6bannerbot sets mode: +v cpup

[20:47] <mornfall> oh my bad

[20:47] *** p6bannerbot sets mode: +v [particle]

[20:48] <squashable6> 🍕 Skarsnik++ opened issue “Searching Str should poi…”: https://github.com/perl6/doc/issues/2484

[20:48] <squashable6> 🍕🍕🍕  First contribution by Skarsnik++! ♥

[20:51] *** [particle] left
[20:51] <mornfall> okay rebuilding moar with libffi helped, it was dyncall that was failing

[20:51] *** coet[work] joined
[20:51] *** p6bannerbot sets mode: +v coet[work]

[20:52] <mornfall> whoever is responsible for rakudo star, it might be a good idea to change the default on openbsd to be libffi? the rakudo star i got out of the box was crippled some :\

[20:53] <Geth> ¦ doc/features/kensanata/test-for-capitalization: 7850cd093f | (Alex Schroeder)++ | t/08-headings.t

[20:53] <Geth> ¦ doc/features/kensanata/test-for-capitalization: More exceptions for header capitalization

[20:53] <Geth> ¦ doc/features/kensanata/test-for-capitalization: review: https://github.com/perl6/doc/commit/7850cd093f

[20:53] <Geth> ¦ doc/features/kensanata/test-for-capitalization: f5d93273e9 | (Alex Schroeder)++ | 2 files

[20:53] <Geth> ¦ doc/features/kensanata/test-for-capitalization: Moved heading test from t to xt

[20:53] <Geth> ¦ doc/features/kensanata/test-for-capitalization: review: https://github.com/perl6/doc/commit/f5d93273e9

[20:53] <Geth> ¦ doc/features/kensanata/test-for-capitalization: 1a75b07f81 | (Alex Schroeder)++ | 15 files

[20:53] <Geth> ¦ doc/features/kensanata/test-for-capitalization: Fix capitalization in various titles

[20:53] <Geth> ¦ doc/features/kensanata/test-for-capitalization: review: https://github.com/perl6/doc/commit/1a75b07f81

[20:54] <squashable6> 🍕 kensanata++ wrote a comment on commit c6caf049649a: https://github.com/perl6/doc/commit/c6caf049649a8f327589f3840bea9a8f27f96269#commitcomment-31519430

[20:54] <AlexDaniel> mornfall: open a ticket!

[20:55] *** [particle] joined
[20:55] <mornfall> where? :)

[20:55] <AlexDaniel> mornfall: https://github.com/rakudo/star/

[20:55] <AlexDaniel> squashable6: status

[20:55] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in 1 day and ≈15 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[20:55] <mornfall> hmm github... i'll have to fix notification mails from that :\ but i can file a ticket, sure

[20:55] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/6baefe827d64d2c760014e2a5dca90a5

[20:55] *** p6bannerbot sets mode: +v [particle]

[20:55] <AlexDaniel> kensanata: ↑ with that rate you can definitely win :)

[20:56] *** domidumont left
[20:56] <tbrowder> Wordpress is not very friendly--I finally got my post scheduled for 0001 UTC, 4 dec--fingers crossed

[20:56] <kensanata> AlexDaniel: Should have made each capitalization a separate commit...

[20:56] <tbrowder> i can always bump to earlier date now fairly easy if needed

[20:56] <AlexDaniel> kensanata: we look into the content of commits :P

[20:56] *** yqt joined
[20:57] <kensanata> A fix is a fix, no matter how small!

[20:57] *** coet[work] is now known as coet

[20:57] *** rouking left
[20:57] <kensanata> We should use Levenstein distance or something...

[20:57] *** p6bannerbot sets mode: +v yqt

[20:58] <AlexDaniel> Zoffix: where is huggable? We need some pizza

[20:59] <mornfall> AlexDaniel: firefox crashed submitting the issue :( it's cursed

[21:00] <AlexDaniel> kensanata: btw check other xt tickets: https://github.com/perl6/doc/issues?q=is%3Aopen+is%3Aissue+label%3Axt

[21:00] <AlexDaniel> kensanata: especially this one: https://github.com/perl6/doc/issues/2306

[21:00] <AlexDaniel> you'd be surprised how many broken pages we have

[21:00] *** kurahaupo joined
[21:00] <mornfall> oh but it got opened... #127

[21:01] <AlexDaniel> well, broken markup that is

[21:01] <AlexDaniel> mornfall: \o/

[21:01] *** p6bannerbot sets mode: +v kurahaupo

[21:02] <kensanata> yay for more tickets

[21:02] *** [particle] left
[21:02] <kensanata> AlexDaniel: I think I'm done with these issues but I'll remember the xt label. That does seem to be the kind of thing I can work on. :)

[21:03] *** Kaiepi left
[21:03] <mornfall> tickets up, tickets down, but i can go back to installing moarperf :p

[21:03] <mornfall> though it's kinda late for shaving yaks

[21:06] <AlexDaniel> kensanata: you sure? D#2306 looks fun and extremely useful

[21:06] <synopsebot_> D#2306 [open]: https://github.com/perl6/doc/issues/2306 [xt] xt test for missing C in C<> (and let's use a whitelist for doc text)

[21:07] *** [particle] joined
[21:07] <AlexDaniel> kensanata: it's basically just a check that rendered text doesn't have any weird characters

[21:07] <tbrowder> one question about the perl 6 wordpress: is the time i see in the schedule editor UTC or my local time?

[21:08] <AlexDaniel> so alphanumerics, spaces, dots, commas, semicolons, colons and parens are fine, everything else should be banned I think

[21:08] *** p6bannerbot sets mode: +v [particle]

[21:08] <tbrowder> afkb&

[21:08] <kensanata> AlexDaniel: Totally, I agree. It's just that I'm tired and feel like not working on Perl 6 right now. :)

[21:10] <AlexDaniel> kensanata: sure, sure, no pressure. Last time though we had some issues determining the winner… *hint* *hint* *hint* *hint* :)

[21:11] <AlexDaniel> btw I'm not sure how code blocks are filtered out, but I guess other tests have that implemented somehow

[21:11] <kensanata> haha

[21:12] *** rindolf left
[21:14] *** patrickb left
[21:15] *** kurahaupo left
[21:15] *** patrickb joined
[21:15] <mornfall> i'm wondering if a college course on perl6 is a thing that'd make sense

[21:15] *** kurahaupo joined
[21:16] *** p6bannerbot sets mode: +v patrickb

[21:16] *** p6bannerbot sets mode: +v kurahaupo

[21:18] <AlexDaniel> depends on the goals of the course I think

[21:18] <lucasb> https://i.imgur.com/zPDPai3.png  <-- camelia at top right

[21:18] <lucasb> I think I don't like it... any objections to removing it from there?

[21:19] <mornfall> AlexDaniel: teach the language, practice programming

[21:19] <AlexDaniel> lucasb: file a ticket! It was added on purpose, so maybe there are reasons for keeping it there

[21:20] <AlexDaniel> .tell lizmat you win the bet, btw :D

[21:20] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[21:22] <mornfall> i imagine it'd be 12 exercises in 3 blocks, some text processing, some async work... maybe do something on grammars (i teach python and the middle block is number crunching, not so appropriate for raku, i suppose)

[21:22] <mornfall> the kids generally have some programming experience, but they probably never touched anything perl

[21:24] <kensanata> mornfall: at the Swiss Perl Workshop one of the organizers had a course at a vocational college where he used Perl. As far as I remember, it was basically a securit course. A web app written in Perl, and over the semester the students tried to hack it, without knowing any Perl. It being Perl just made it even more exciting, I think.

[21:25] <AlexDaniel> mornfall: oh, that. Maybe. There are other cases when using raku is perhaps more clearly justified, for example if you want to discuss different paradigms without switching the languages too much

[21:25] *** kurahaupo left
[21:25] <mornfall> kensanata: our security courses somehow try to teach people how to use openssl in C at a time where they barely can write a C program that is not full of buffer overflows :(

[21:25] *** graphene left
[21:26] *** kurahaupo joined
[21:26] <AlexDaniel> kensanata: btw will you submit it as a PR?

[21:26] <kensanata> mornfall: Haha. In that course, it was the reverse: they had to find and exploit a SQL injection in the login form as one of the first steps. That teaches you about SQL injection and about intrusion.

[21:26] *** p6bannerbot sets mode: +v kurahaupo

[21:27] <kensanata> AlexDaniel: sure

[21:27] *** graphene joined
[21:27] <mornfall> AlexDaniel: a course on paradigms is about to be resurrected, but it's not my department and it's probably going to get exercises in C# (not my first choice)

[21:28] *** p6bannerbot sets mode: +v graphene

[21:28] <AlexDaniel> mornfall: btw, where are you from?

[21:28] <mornfall> AlexDaniel: .cz

[21:28] <mornfall> (fi.muni.cz to be specific, though probably don't look at the website, the english version is google translate /o\)

[21:29] <Geth> ¦ doc: kensanata++ created pull request #2485: Added test for consisten header capitalization

[21:29] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/2485

[21:29] <squashable6> 🍕 kensanata++ opened pull request “Added test for consisten header capitalization”: https://github.com/perl6/doc/pull/2485

[21:29] <squashable6> 🍕 AlexDaniel++ requested a review on pull request “Added test for consisten header capitalization”: https://github.com/perl6/doc/pull/2485

[21:32] <AlexDaniel> mornfall: it really depends I think. If that's a course where people learn some basics, then I guess most expect it to be about some mainstream language (like python, or java, or c++, …)

[21:33] <Geth> ¦ doc/no-faded-camelia: 567308d761 | (Lucas Buchala)++ (committed using GitHub Web editor) | assets/sass/style.scss

[21:33] <Geth> ¦ doc/no-faded-camelia: No faded camelia

[21:33] <Geth> ¦ doc/no-faded-camelia: review: https://github.com/perl6/doc/commit/567308d761

[21:33] <squashable6> 🍕🍕🍕  First contribution by lucasbuchala++! ♥

[21:33] <mornfall> sure, those are all on offer, but so are C#/.NET, Ruby, some R

[21:33] <mornfall> and Haskell and bits of Prolog

[21:33] <AlexDaniel> Prolog \o/

[21:33] <mornfall> (a lot of Haskell actually)

[21:35] <mornfall> ML is sadly missing, and I don't think there's anything Scheme/Racket or LISP in general either

[21:36] <pmurias> mornfall: so Perl 6 would be a part of a dabble in a bunch of languages style course or have it's own 

[21:36] <pmurias> ?

[21:37] *** kurahaupo left
[21:37] <mornfall> also all our electronic teaching agenda is perl5, with 30+k users, but there isn't a single course on perl5 AFAICT

[21:37] <pmurias> mornfall: I learned Prolog at uni too

[21:37] *** kurahaupo joined
[21:37] <mornfall> pmurias: no, those are all standalone courses

[21:37] *** coet left
[21:37] <mornfall> (also a good chunk of the workforce that maintains that glob of perl5 is students)

[21:38] *** p6bannerbot sets mode: +v kurahaupo

[21:39] <AlexDaniel> mornfall: fwiw jjmerelo is also in academia, so consider talking to them too (if you haven't already, I haven't backlogged recently)

[21:41] <mornfall> will do (i think they are busy trying to win the plushie tho :p)

[21:41] <jnthn> mornfall: Masarykova Uni is in Brno? Did you go to any of the Brno.pm meetups?

[21:42] * jnthn was at one of those earlier in the year... :)

[21:42] <pmurias> mornfall: if the students are writing Perl 5 and are interested in Perl 6 the course might make sense

[21:42] <pmurias> mornfall: forcing them to use it (if it's a mandatory one) doesn't seem that good

[21:43] <mornfall> jnthn: yes, Brno, and no, wasn't... i'm not a very sociable person :p

[21:43] <jnthn> :)

[21:43] <mornfall> pmurias: the mandatory ones are C, C++, Java and Haskell (you can get out of Java or C++ by taking up more math)... the rest is mostly optional

[21:44] <pmurias> mornfall: seems like you should talk to students if they would be interested in it

[21:45] <mornfall> pmurias: students are mostly interested in getting through the college with the least amount of effort possible :p

[21:46] *** yqt left
[21:47] <pmurias> mornfall: really? at our uni there where people even taking harder courses because they where more interesting or even sometimes taking an "elite" harder version of something

[21:48] *** kurahaupo left
[21:49] *** kurahaupo joined
[21:50] <pmurias> mornfall: it's a hard question of what do you want to teach them. Even choosing if you want to teach computer science or programming is big choice

[21:50] *** p6bannerbot sets mode: +v kurahaupo

[21:55] <pmurias> mornfall: if you want something super practical it seems JavaScript is missing from the curiculum ;)

[21:56] <[Coke]> .seen brrt

[21:56] <yoleaux> I saw brrt 26 Nov 2018 21:40Z in #moarvm: <brrt> as I am learning the hard way

[21:57] *** patrickb left
[21:59] <mornfall> pmurias: yeah, i'm not teaching javascript :p there's a webdev course though, i think? i know nothing about it

[22:00] *** kurahaupo left
[22:01] *** kurahaupo joined
[22:02] *** hythm_ joined
[22:02] *** p6bannerbot sets mode: +v hythm_

[22:02] *** p6bannerbot sets mode: +v kurahaupo

[22:05] <hythm_> I'm getting this error when using SDL2::Raw.SDL_LoadBMP,  "can not locate symbol SDL_LoadBMP in native library libSDL2.so"

[22:06] *** coet joined
[22:06] *** p6bannerbot sets mode: +v coet

[22:06] <hythm_> I'm sure i have libsdl2 installed

[22:12] <hythm_> Code: https://gist.github.com/hythm7/a737d61c523e83a47f5ea4bee46178bb

[22:14] *** Cabanossi left
[22:15] *** Cabanossi joined
[22:15] <jnthn> hythm_: Sometimes the -dev package for the library is also needed

[22:16] *** p6bannerbot sets mode: +v Cabanossi

[22:16] *** kurahaupo left
[22:17] *** kurahaupo joined
[22:17] *** p6bannerbot sets mode: +v kurahaupo

[22:18] <hythm_> jnthn: the dev package is installed as well. Im running ubuntu and reinstalled perl6 one hour ago, so i think i have latest perl6

[22:19] <hythm_> I will also try to run from my home desktop later today, it has different distro

[22:25] *** hythm_ left
[22:27] *** benjikun joined
[22:28] *** p6bannerbot sets mode: +v benjikun

[22:28] *** kurahaupo left
[22:28] *** kurahaupo joined
[22:29] *** p6bannerbot sets mode: +v kurahaupo

[22:32] <SmokeMachine> pmurias: isn’t there any kind of pollyfill to add bigint to the other browsers?

[22:33] *** benjikun left
[22:39] *** kurahaupo left
[22:39] *** kurahaupo joined
[22:40] *** p6bannerbot sets mode: +v kurahaupo

[22:43] <mornfall> apparently, i'm spending all my time in subst

[22:44] <mornfall> (yeah, i got moarperf up after some fiddling with DBDish::SQLite...)

[22:46] *** jast left
[22:47] <pmurias> SmokeMachine: I'm not using native bigints anymore for the time being

[22:47] <pmurias> SmokeMachine: 6pad/rakudo.js already supports firefox 

[22:48] *** jast joined
[22:48] *** p6bannerbot sets mode: +v jast

[22:49] *** kurahaupo left
[22:50] <SmokeMachine> pmurias: I mostly use safari... :(

[22:51] <mornfall> so i would like to try changinng foo.subst().subst().subst() to using s,,, but apparently my Str is immutable?

[22:51] <tbrowder> ah, set desired time zone in Wordpress general settings

[22:52] <mornfall> oh this is on the faq, apparently

[22:53] <pmurias> http://blogs.perl.org/users/pawel_murias/2018/11/rakudojs-mini-update---firefox-support.html

[22:54] <mornfall> ok but this means i can't use s,,, to speed up a chain of .subst calls

[22:55] <pmurias> SmokeMachine: I don't think I have a way to even run Safari

[22:55] <pmurias> SmokeMachine: do you have any idea what's causing problems on it?

[22:56] <mornfall> but really, what's wrong with subst?

[22:57] *** kurahaupo joined
[22:58] *** p6bannerbot sets mode: +v kurahaupo

[22:59] <pmurias> SmokeMachine: did you trying using 6pad recently under safari?

[23:00] *** coet left
[23:00] <SmokeMachine> pmurias: yes... under safari and under Safari Technology Preview

[23:01] *** kensanata left
[23:01] *** Kaiepi joined
[23:02] *** p6bannerbot sets mode: +v Kaiepi

[23:02] <pmurias> SmokeMachine: maybe you could paste console logs and I can look tommorow and maybe it's something polyfillable

[23:03] <SmokeMachine> pmurias: and that works on chrome under android but not on chrome under iOS (it uses safari engine)

[23:04] *** sena_kun left
[23:04] <SmokeMachine> pmurias: sure! I’ll do that as soon as I come home...

[23:05] *** statisfiable6 joined
[23:05] *** benchable6 joined
[23:05] *** bisectable6 joined
[23:06] *** p6bannerbot sets mode: +v statisfiable6

[23:06] *** p6bannerbot sets mode: +v benchable6

[23:06] *** p6bannerbot sets mode: +v bisectable6

[23:09] <timotimo> mornfall: i want to distribute the pre-built javascript with moarperf, but i don't really want to put it into the github repo :/

[23:09] <timotimo> at least node.js is only a compile-time dependency

[23:09] *** Skarsnik left
[23:09] <mornfall> timotimo: any idea what to do about .subst() being slow? i already got rid of the regexes where they were superfluous, but subst just seems to be really slow

[23:09] <timotimo> i wasn't able to backlog enough %)

[23:09] <mornfall> yeah node.js wasn't such a big deal in the end

[23:09] <timotimo> subst has many forms; can you use it without an actual regex?

[23:10] <mornfall> okay i think --profile might be lying to me

[23:10] <timotimo> it's possible under some circumstances; what are you seeing?

[23:11] *** pmurias left
[23:11] <timotimo> oh, hm, i wonder if the moarperf you got is compatible with the profiles 2018.10 spits out

[23:11] <mornfall> let me re-do the profile just in case

[23:11] <timotimo> i haven't spent much time making them backward-compatible yet, though i really should

[23:11] <mornfall> timotimo: not entirely, it's complaining about a missing table...

[23:12] <timotimo> oh, and the problem in libffi probably isn't running out of stack space, but trying to make a piece of stack executable

[23:12] <timotimo> surely the error message could point that out, but so far the program has always crashed immediately on startup if execstack isn't allowed on the system

[23:13] <timotimo> i.e. "tried to load a library that wants executable stack"

[23:13] <mornfall> timotimo: libffi actually works, it's dyncall that's borked

[23:13] <mornfall> timotimo: i rebuilt moar with libffi and it's okay now

[23:13] *** kurahaupo left
[23:13] <timotimo> sorry, wrong way around, then

[23:14] *** ryn1x joined
[23:14] <mornfall> timotimo: noted that down in rakudo star github, #127 (so that someone can flip the default if possible)

[23:15] *** p6bannerbot sets mode: +v ryn1x

[23:15] <mornfall> (the rakudo port uses libffi too, and many other ports do, so that is presumably fixed to not execute stack; the rakudo port is old though and rather bare-bones, so i went for star)

[23:15] <timotimo> it'd probably be two or three lines of change in the spooky scary buildsystem

[23:16] *** kurahaupo joined
[23:16] <mornfall> anyhow, subst, calling it less often on bigger strings (i.e. moving it before .lines) helped some but i guess i hit a limit on that ... removing it altogether doesn't make much of a difference

[23:16] *** kurahaupo left
[23:17] *** lizmat joined
[23:17] *** p6bannerbot sets mode: +v lizmat

[23:17] *** kurahaupo joined
[23:17] <mornfall> but i don't know what the times in --profile mean... they are absolute times, but don't seem to correspond to either runtime without --profile or runtime with --profile

[23:17] *** kurahaupo left
[23:18] <timotimo> are they extremely high numbers?

[23:18] <mornfall> it said 5s spent in subst, which was about how long the program ran so i mis-read the profile

[23:18] <timotimo> like billions of seconds?

[23:18] <mornfall> i have seen that happen before, but not anymore

[23:18] <timotimo> the overview page ought to tell you how long it took in total; there's a difference between inclusive and exclusive time, too

[23:18] <mornfall> dunno what changed (i nuked all .sqlite3 files and started over)

[23:19] <mornfall> oh the overview page doesn't work :\

[23:19] <timotimo> and if you're multithreaded you can get up to cores x runtime in total

[23:19] <mornfall> only 'routines' does

[23:19] <timotimo> a casualty of version mismatch, surely

[23:19] <mornfall> DBDish::SQLite: Error: no such column: first_entry_time (1) ... yeah, version mismatch presumably

[23:19] <timotimo> maybe try reverting moarperf to a state around 2018.10's release date

[23:19] <timotimo> it'll have less nice in the UI, sadly

[23:20] <mornfall> i can rebuild moar from master if it's reasonably stable

[23:20] *** kurahaupo joined
[23:20] <timotimo> though we only just released 2018.11 last week; it's only a rakudo compiler release, not a rakudo star release, though

[23:21] <timotimo> so it won't immediately come with zef and such

[23:21] *** p6bannerbot sets mode: +v kurahaupo

[23:21] *** kurahaupo left
[23:21] <mornfall> is the bytecode compatible? (i.e. can i dump 2018.11 compiler over 2018.10 star and expect it to work?)

[23:21] <mornfall> anyway, my top routine in the profile is now match

[23:21] *** kurahaupo joined
[23:22] <timotimo> no, but if you have installed stuff, it'll recompile from the installed source

[23:22] <timotimo> sorted by inclusive or exclusive time?

[23:22] <timotimo> allcaps match? i.e. MATCH?

[23:22] *** p6bannerbot sets mode: +v kurahaupo

[23:22] <mornfall> exclusive... i don't have my own routines to speak of

[23:22] <timotimo> right

[23:22] <mornfall> i think? it went berserk

[23:23] *** kurahaupo left
[23:23] <timotimo> i'm compiling a 2018.10 on the side and maybe i can make moarperf understand that version

[23:23] *** kurahaupo joined
[23:23] <mornfall> no it's match minuscule letters inclusive

[23:23] <timotimo> OK

[23:24] *** p6bannerbot sets mode: +v kurahaupo

[23:24] <mornfall> almost all calls come from SETTING::Str and/or SETTING::Cool

[23:24] <timotimo> right

[23:24] <mornfall> the program only has 78 entries into match, assuming i read this correctly

[23:25] <timotimo> hm, the call graph tab also doesn't work?

[23:25] <mornfall> no, same problem as overview (no such column: first_entry_time)

[23:26] <mornfall> but a good chunk of match's time seems to actually come from subst

[23:26] <mornfall> i'll nuke the subst and rerun the profile

[23:27] <mornfall> match is unfazed and the remaining entries are from SETTING::Cool

[23:28] <timotimo> basically everything in Cool just dispatches to something else, after perhaps doing a coercion

[23:28] <mornfall> (also 1.6s is slurp, which seems like a lot, but i am slurping many small files, so the overhead probably adds up)

[23:28] <timotimo> like when you call 12345.chars it'll first coerce to Str

[23:28] <timotimo> how many, and how big?

[23:29] <mornfall> about 1500 files, under 100 bytes on average?

[23:30] <timotimo> ah, i see

[23:30] <timotimo> yeah, probably some overhead to that :|

[23:30] <mornfall> i run a regex match on each of the filenames, which is probably most of the match time

[23:32] <timotimo> ah, can very well be

[23:32] <timotimo> when you expand the routine, does the "callers" tab work? or "paths"?

[23:34] <mornfall> okay this is interesting, there are actually 2 matches, one of them was an instance doable with .ends-with, using that instead seems to have made a significant difference

[23:34] <mornfall> callers work, so do callees

[23:35] <mornfall> and now also paths (that seemed borked before, but it renders something that looks like the intended thing now?)

[23:35] <mornfall> some of the matches ar in split, that only happens about a dozen times or so, not interesting...

[23:35] <timotimo> it's an... interesting implementation of rendering a tree that i ... came up with

[23:36] <mornfall> the remaining matches on filenames are probably responsible

[23:36] *** Zoffix joined
[23:36] *** p6bannerbot sets mode: +v Zoffix

[23:37] <timotimo> yeah, starts-with and contains and friends are faster than regex matches by a huge margin

[23:37] *** huggable joined
[23:37] *** ChanServ sets mode: +v huggable

[23:37] *** buggable joined
[23:37] *** ChanServ sets mode: +v buggable

[23:37] <Zoffix> .pizza AlexDaniel 

[23:37] <Zoffix> buggable: AlexDaniel 

[23:37] <Zoffix> huggable: AlexDaniel 

[23:37] <huggable> Zoffix, nothing found

[23:37] <mornfall> i don't have an obvious way of removing them, but i guess i'm okay with the result for now

[23:37] <buggable> New CPAN upload: cro-core-0.8.0.tar.gz by JNTHN http://modules.perl6.org/dist/Cro::Core:cpan:JNTHN

[23:38] <buggable> New CPAN upload: cro-http-0.8.0.tar.gz by JNTHN http://modules.perl6.org/dist/Cro::HTTP:cpan:JNTHN

[23:38] <buggable> New CPAN upload: cro-tls-0.8.0.tar.gz by JNTHN http://modules.perl6.org/dist/Cro::TLS:cpan:JNTHN

[23:38] <buggable> New CPAN upload: cro-websocket-0.8.0.tar.gz by JNTHN http://modules.perl6.org/dist/Cro::WebSocket:cpan:JNTHN

[23:38] <AlexDaniel> buggable: pizza Zoffix

[23:38] <buggable> Zoffix, enjoy this slice of Margherita pizza, my friend! Yummy 🍕

[23:38] <buggable> New CPAN upload: cro-0.8.0.tar.gz by JNTHN http://modules.perl6.org/dist/cro:cpan:JNTHN

[23:38] <buggable> New CPAN upload: cro-zeromq-0.8.0.tar.gz by JNTHN http://modules.perl6.org/dist/Cro::ZeroMQ:cpan:JNTHN

[23:38] <buggable> New CPAN upload: Algorithm-LDA-0.0.1.tar.gz by TITSUKI http://modules.perl6.org/dist/Algorithm::LDA:cpan:TITSUKI

[23:38] <buggable> New CPAN upload: Algorithm-LDA-0.0.2.tar.gz by TITSUKI http://modules.perl6.org/dist/Algorithm::LDA:cpan:TITSUKI

[23:38] <AlexDaniel> Zoffix: thank you!

[23:38] *** p6bannerbot sets mode: +v huggable

[23:38] *** p6bannerbot sets mode: +v buggable

[23:38] *** Zoffix left
[23:38] *** shareable6 left
[23:38] *** bisectable6 left
[23:38] *** evalable6 left
[23:38] *** shareable6 joined
[23:39] *** undersightable6 joined
[23:39] <timotimo> i'd love to see the code, but in general, yeah our regexes are frustratingly slow sometimes

[23:39] *** p6bannerbot sets mode: +v shareable6

[23:39] *** p6bannerbot sets mode: +v undersightable6

[23:39] <timotimo> might be able to parallelize  with .hyper ;)

[23:40] <mornfall> oh, i failed to notice that i'm using dir's test with a regex... making it a block that uses .ends-with helped some more

[23:40] <timotimo>  ah, nice

[23:40] *** bisectable6 joined
[23:40] <timotimo> yeah, it'll call that rather often, i'm sure

[23:41] *** p6bannerbot sets mode: +v bisectable6

[23:41] *** evalable6 joined
[23:41] *** notable6 joined
[23:41] *** ChanServ sets mode: +v notable6

[23:42] <mornfall> timotimo: http://sprunge.us/LJQ9Se this is the current version (sadly, the program isn't much use without data, which i can't share)

[23:42] *** committable6 joined
[23:42] *** ChanServ sets mode: +v committable6

[23:42] *** p6bannerbot sets mode: +v evalable6

[23:42] <timotimo> make parsing the program faster by removing "use strict;" :D

[23:42] *** p6bannerbot sets mode: +v notable6

[23:42] *** releasable6 joined
[23:42] *** ChanServ sets mode: +v releasable6

[23:42] *** daxim left
[23:42] *** p6bannerbot sets mode: +v committable6

[23:43] <mornfall> (the exit in the middle is because i was mostly interested in profiling the first part)

[23:43] *** p6bannerbot sets mode: +v releasable6

[23:43] <timotimo> ah

[23:43] <timotimo> exit tends to cause the profiler to see these billions of seconds results

[23:44] <timotimo> you could turn that .split( /\: / ) into .split(": ") and it'll even be correcter

[23:44] <mornfall> interesting... it wasn't too happy about the program waiting for network though

[23:44] <timotimo> (since space in regex is no longer significant)

[23:44] <mornfall> oh, damn :) good catch

[23:45] <mornfall> though yeah, that only runs like 12 times

[23:45] <timotimo> if the filenames are very regular, the $date, $pid split could be made easier, too

[23:45] <mornfall> (correctness is good of course even if it's only 12 times :p)

[23:46] <timotimo> and instead of s,\n$,, i'd probably .chomp

[23:46] <timotimo> that's likely a whole lot faster, too

[23:47] <timotimo> maybe even consider $_.=chomp for %new.values

[23:47] <timotimo> instead of going through the keys like that

[23:48] <timotimo> m: my %foo = <hello world how areyou good daytoyou>; $_ .= uc for %foo.values; say %foo.perl

[23:48] <camelia> rakudo-moar 38bc682b0: OUTPUT: «{:good("DAYTOYOU"), :hello("WORLD"), :how("AREYOU")}␤»

[23:48] <timotimo> that's not a performance, thing, though. well, it could be, but only barely

[23:50] <mornfall> .=chomp for %new.values; # this seems to work, nice

[23:51] <timotimo> ah, i wasn't sure if it would work without an explicit $_ in front

[23:51] <timotimo> glad to see it does

[23:51] <timotimo> .=foo is one of the really cool syntactical sugars in perl6, IMO

[23:51] <timotimo> may i interest you in a sub MAIN? :)

[23:51] <mornfall> yeah i have seen it mentioned but didn't think of that

[23:52] <mornfall> timotimo: well, i'll clean the whole thing up eventually, i just started on perl6 today :p did like two 5-line scripts earlier

[23:52] <timotimo> oh, cool

[23:53] <mornfall> %form is unsightly and all that

[23:53] <mornfall> oh, actually not true, i started yesterday with a react thing

[23:53] <mornfall> that was fun too :p

[23:53] <timotimo> with %form { .<operance> = 'blok-pis-student-obsah'; .<uco> = $pid; ... } could be of interest?

[23:54] <timotimo> well, really you'd use "given" since it's not supposed to be an "if"-like

[23:55] <mornfall> okay, i was wondering if i can maybe subscript the topic variable :)

[23:55] <timotimo> yup!

[23:55] <tbrowder> jjmerelo: need some admin help for p6 wordpress

[23:55] <timotimo> m: $_ = 5; .++; .say

[23:55] <camelia> rakudo-moar 38bc682b0: OUTPUT: «6␤»

[23:55] <timotimo> you can even postfix operators

[23:56] <tbrowder> moritz: can you help with p6 wordpress admin?

[23:56] <mornfall> (text_diff is also a mess, but i wanted to make the thing operational...)

[23:57] <tbrowder> any p6 wordpress admin around?

[23:57] <timotimo> unless $pid changes often, i'd probably bind %new{$pid} into a local variable

[23:57] <mornfall> (either way, i think it's feasible that i re-do the rest of the tools in raku as time permits... i really like the language)

[23:57] <timotimo> tbrowder: le moi

[23:57] <mornfall> bind as in :=?

[23:57] <timotimo> yes

[23:57] <timotimo> then assignment to the variable will land in the hash

[23:58] <mornfall> it doesn't change often, but it's hard to tell whether it did or not since it's re-matched from the filename

[23:58] <timotimo> that's fair

[23:58] <tbrowder> can you change time settings so it clearly shows utc and 24-hour time format? that will help clarify advent publishing schedule

[23:58] <timotimo> oh, um

[23:59] <timotimo> i haven't a single clue how i would do that

[23:59] <tbrowder> go to admn, settings, general and time settings should be there

[23:59] <timotimo> oh, there it is

[23:59] <mornfall> wordpress :(

