[00:01] *** mcmillhj left
[00:04] *** Guest18 joined
[00:05] <Zoffix> .tell skids AFAIK our current policy is not to add multi candidates whose job is to merely print an error message that the user is used wrong arguments. For one, that muddies up introspection as it gives candidates that can't actually be used. The `unique`s issue could be addressed in other ways, though perhaps we should audit the entire codebase for this type of issue and address it uniformly throughout.

[00:05] <yoleaux> Zoffix: I'll pass your message to skids.

[00:10] *** mcmillhj joined
[00:11] <squashable6> 🍕 zoffixznet++ labeled issue “Wrong args silently get ignored on some routines”: https://github.com/rakudo/rakudo/issues/1474

[00:11] <squashable6> 🍕 zoffixznet++ opened issue “Wrong args silently get ignored on some routines”: https://github.com/rakudo/rakudo/issues/1474

[00:12] <Zoffix> .tell skids opened an Issue for that: https://github.com/rakudo/rakudo/issues/1474

[00:12] <yoleaux> Zoffix: I'll pass your message to skids.

[00:14] <squashable6> 🍕 zoffixznet++ edited issue “Wrong args silently get ignored on some routines”: https://github.com/rakudo/rakudo/issues/1474

[00:15] *** mcmillhj left
[00:23] <Geth> ¦ roast: f020377c78 | (Zoffix Znet)++ | S12-enums/basic.t

[00:23] <Geth> ¦ roast: Test Pairs in list of enum declaration

[00:23] <Geth> ¦ roast: 

[00:23] <Geth> ¦ roast: RT#122929: https://rt.perl.org/Ticket/Display.html?id=122929

[00:23] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/f020377c78

[00:23] <synopsebot> RT#122929 [new]: https://rt.perl.org/Ticket/Display.html?id=122929 quoted LHS of pair constructor inside enum definition makes elements be ignored

[00:24] *** leont joined
[00:25] <Zoffix> BTW, for SQUASHathoners, we also have 4 TESTSNEEDED Issues on our GitHub tracker: https://github.com/rakudo/rakudo/issues?q=is%3Aopen+is%3Aissue+label%3Atestneeded

[00:28] *** mcmillhj joined
[00:33] *** mcmillhj left
[00:34] <squashable6> 🍕 AlexDaniel++ edited wiki page “Monthly Bug Squash Day”: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[00:35] <squashable6> 🍕 AlexDaniel++ edited wiki page “Monthly Bug Squash Day”: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[00:36] <squashable6> 🍕 AlexDaniel++ edited wiki page “Monthly Bug Squash Day”: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[00:37] <AlexDaniel> that's rather optimistic :)

[00:37] <squashable6> 🍕 AlexDaniel++ edited wiki page “Monthly Bug Squash Day”: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[00:38] *** Zoffix left
[00:39] *** mcmillhj joined
[00:42] *** zeddy_k left
[00:44] *** mcmillhj left
[00:53] *** mcmillhj joined
[00:55] <squashable6> 🍕 AlexDaniel++ opened issue “Awesome error messages with muliple FailGoals”: https://github.com/rakudo/rakudo/issues/1475

[00:55] <squashable6> 🍕 AlexDaniel++ labeled issue “Awesome error messages with muliple FailGoals”: https://github.com/rakudo/rakudo/issues/1475

[00:57] *** cdg joined
[00:57] <Geth> ¦ roast: 2dd5ee1b59 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S32-exceptions/misc.t

[00:57] <Geth> ¦ roast: Test corresponding starters (again)

[00:57] <Geth> ¦ roast: 

[00:57] <Geth> ¦ roast: Resolves RT#125299. Further improvements can be discussed here: GH #1475.

[00:57] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/2dd5ee1b59

[00:57] <synopsebot> RT#125299 [open]: https://rt.perl.org/Ticket/Display.html?id=125299 [BUG] LTA error message when forgetting to close block inside string in Rakudo

[00:58] *** mniip left
[00:58] <AlexDaniel> aw dammit, that's not the right way to link things

[00:58] <AlexDaniel> should've been rakudo/rakudo#1475

[00:58] <synopsebot> RAKUDO#1475 [open]: https://github.com/rakudo/rakudo/issues/1475 [LTA][RFC] Awesome error messages with muliple FailGoals

[00:58] <AlexDaniel> but kk

[00:58] *** mcmillhj left
[00:59] *** GregDonald joined
[01:00] <squashable6> 🍕 AlexDaniel++ edited issue “Awesome error messages with muliple FailGoals”: https://github.com/rakudo/rakudo/issues/1475

[01:01] *** Rawriful left
[01:02] *** cdg left
[01:03] *** Cabanossi left
[01:04] *** mcmillhj joined
[01:05] *** Cabanossi joined
[01:05] *** leont left
[01:09] *** mcmillhj left
[01:14] <Geth> ¦ rakudo: 877e3cf8e9 | (Zoffix Znet)++ | tools/build/NQP_REVISION

[01:14] <Geth> ¦ rakudo: [NQP Bump] 1e4606f [MoarVM Bump] Brings 18 commits

[01:14] <Geth> ¦ rakudo: 

[01:14] <Geth> ¦ rakudo: NQP bump brought: https://github.com/perl6/nqp/compare/2018.01-44-ga860fd310...2018.01-45-g1e4606f

[01:14] <Geth> ¦ rakudo: 

[01:14] <Geth> ¦ rakudo: MoarVM bump brought: https://github.com/MoarVM/MoarVM/compare/2018.01-59-g6da2afe5a...2018.01-77-g9a029b4

[01:14] <Geth> ¦ rakudo: 9a029b4 Merge pull request #792 from MasterDuke17/yet_more_jit_templates

[01:14] <Geth> ¦ rakudo: c639e60 Add JIT template for iter

[01:14] <Geth> ¦ rakudo: <…commit message has 16 more lines…>

[01:14] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/877e3cf8e9

[01:14] <Geth> ¦ rakudo: version bump brought these changes: https://github.com/perl6/nqp/compare/2018.01-44-ga860fd310... No newline at end of file

[01:18] *** unicodable6 left
[01:18] *** unicodable6 joined
[01:18] *** ChanServ sets mode: +v unicodable6

[01:21] <squashable6> 🍕 AlexDaniel++ edited wiki page “Monthly Bug Squash Day”: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[01:21] *** squashable6 left
[01:21] *** squashable6 joined
[01:21] *** ChanServ sets mode: +v squashable6

[01:24] *** mcmillhj joined
[01:24] *** abraxxa joined
[01:28] *** squashable6 left
[01:28] *** squashable6 joined
[01:28] <squashable6> 🍕 AlexDaniel++ edited wiki page “Monthly Bug Squash Day”: https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[01:29] *** abraxxa left
[01:29] *** mcmillhj left
[01:32] *** Aceeri_ left
[01:32] <Geth> ¦ whateverable: c7f98a0307 | (Aleks-Daniel Jakimenko-Aleksejev)++ | bin/Squashable.p6

[01:32] <Geth> ¦ whateverable: Understand 🍕 and others things in the table

[01:32] <Geth> ¦ whateverable: 

[01:32] <Geth> ¦ whateverable: The bot extracts dates from the wiki page, so here's a little hack to

[01:32] <Geth> ¦ whateverable: make it understand new stuff.

[01:32] <Geth> ¦ whateverable: review: https://github.com/perl6/whateverable/commit/c7f98a0307

[01:38] *** aborazmeh joined
[01:38] *** aborazmeh left
[01:38] *** aborazmeh joined
[01:41] *** mcmillhj joined
[01:44] *** abraxxa joined
[01:46] *** mcmillhj left
[01:51] *** abraxxa left
[01:54] <AlexDaniel> is there any easy way to write REPL tests?

[01:55] <AlexDaniel> o, I see something

[01:55] <AlexDaniel> k nevermind

[02:00] *** mcmillhj joined
[02:05] *** mcmillhj left
[02:10] <Geth> ¦ rakudo: 4385e3fc0b | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/02-rakudo/repl.t

[02:10] <Geth> ¦ rakudo: Test for an old issue in REPL

[02:10] <Geth> ¦ rakudo: 

[02:10] <Geth> ¦ rakudo: Chances are that we will never see the same issue again, but here's a

[02:10] <Geth> ¦ rakudo: test anyway. Resolves RT#112986.

[02:10] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/4385e3fc0b

[02:10] <synopsebot> RT#112986 [open]: https://rt.perl.org/Ticket/Display.html?id=112986 [REPL] error 'Use of uninitialized $_ of type Any in numeric context" throws extra errors

[02:13] <Geth> ¦ rakudo: 156876dbf7 | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/02-rakudo/repl.t

[02:13] <Geth> ¦ rakudo: Oops in 4385e3fc0b5

[02:13] <Geth> ¦ rakudo: 

[02:13] <Geth> ¦ rakudo: The message is slightly different nowadays, so we should be testing

[02:13] <Geth> ¦ rakudo: for the current variant.

[02:13] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/156876dbf7

[02:14] <squashable6> 🍕 AlexDaniel++ wrote a comment on commit 4385e3fc0b52: https://github.com/rakudo/rakudo/commit/4385e3fc0b5272a14c1c507ccf5846684c16453a#commitcomment-27322312

[02:14] <AlexDaniel> ouch, that needed to be fixed anyway

[02:15] <AlexDaniel> double oops then :)

[02:15] <AlexDaniel> time to get some sleep I guess

[02:19] *** markong left
[02:20] *** mcmillhj joined
[02:26] *** mcmillhj left
[02:31] *** mcmillhj joined
[02:36] *** mcmillhj left
[02:45] *** ilbot3 left
[02:47] *** mcmillhj joined
[02:52] *** mcmillhj left
[02:57] *** ilbot3 joined
[02:57] *** ChanServ sets mode: +v ilbot3

[02:58] *** samcv left
[02:59] *** samcv joined
[02:59] *** mcmillhj joined
[02:59] *** zakame joined
[03:04] *** mcmillhj left
[03:14] *** AlexDaniel left
[03:16] *** zakame left
[03:16] *** mcmillhj joined
[03:22] *** mcmillhj left
[03:30] *** mcmillhj joined
[03:30] <titsuki> m: my $text="The sun"; say so $text ~~ /<< The/;

[03:30] <camelia> rakudo-moar 156876dbf: OUTPUT: «True␤»

[03:35] *** mcmillhj left
[03:42] *** mniip joined
[03:48] <Geth> ¦ doc: titsuki++ created pull request #1756: Add examples for << and >> (regex)

[03:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/pull/1756

[03:48] <Geth> ¦ doc: 171326ad02 | (Itsuki Toyota)++ | doc/Language/regexes.pod6

[03:48] <Geth> ¦ doc: Add examples for << and >> (regex)

[03:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/171326ad02

[03:48] <Geth> ¦ doc: a2b6f08344 | (Itsuki Toyota)++ (committed using GitHub Web editor) | doc/Language/regexes.pod6

[03:48] <Geth> ¦ doc: Merge pull request #1756 from titsuki/add-boundary-example

[03:48] <Geth> ¦ doc: 

[03:48] <Geth> ¦ doc: Add examples for << and >> (regex)

[03:48] <synopsebot> Link: https://doc.perl6.org/language/regexes

[03:48] <Geth> ¦ doc: review: https://github.com/perl6/doc/commit/a2b6f08344

[03:48] *** mcmillhj joined
[03:54] *** mcmillhj left
[03:59] *** ZzZombo left
[04:04] *** mcmillhj joined
[04:09] *** mcmillhj left
[04:10] *** traxex2 joined
[04:18] *** mcmillhj joined
[04:24] *** mcmillhj left
[04:31] *** mcmillhj joined
[04:35] *** mcmillhj left
[04:39] *** Cabanossi left
[04:41] *** Cabanossi joined
[04:46] *** mcmillhj joined
[04:51] *** mcmillhj left
[04:59] *** khw left
[04:59] *** mcmillhj joined
[05:03] *** Guest18_ joined
[05:04] *** mcmillhj left
[05:04] *** aborazmeh left
[05:04] *** Guest18 left
[05:06] *** b2gills left
[05:07] *** b2gills joined
[05:14] *** mcmillhj joined
[05:19] *** mcmillhj left
[05:25] *** mcmillhj joined
[05:28] *** parv joined
[05:31] *** mcmillhj left
[05:32] *** epony left
[05:40] *** mcmillhj joined
[05:43] *** Sgeo joined
[05:45] *** mcmillhj left
[05:51] *** epony joined
[05:53] *** mcmillhj joined
[05:58] *** mcmillhj left
[06:06] *** mcmillhj joined
[06:06] *** stux|RC-- joined
[06:07] *** llfourn_ joined
[06:07] *** d4l3k_ joined
[06:07] *** ChanServ sets mode: +v d4l3k_

[06:07] *** mithaldu__ joined
[06:07] *** Grauwolf_ joined
[06:08] *** skaji_ joined
[06:08] *** mrsolo_ joined
[06:08] *** zostay_ joined
[06:08] *** SmokeMachine_ joined
[06:08] *** BuildTheRobots_ joined
[06:09] *** kent\n joined
[06:09] *** obfusk_ joined
[06:10] *** parv left
[06:10] *** DrForr_ joined
[06:10] *** smash_ joined
[06:10] *** ponbiki_ joined
[06:11] *** mcmillhj left
[06:11] *** joy_ joined
[06:15] *** Grauwolf left
[06:15] *** mithaldu_ left
[06:15] *** kentnl left
[06:15] *** mrsolo left
[06:15] *** zostay left
[06:16] *** llfourn left
[06:16] *** p6lert left
[06:16] *** synopsebot left
[06:16] *** dalek left
[06:16] *** leah2 left
[06:16] *** BuildTheRobots left
[06:16] *** statisfiable6 left
[06:16] *** joy left
[06:16] *** benchable6 left
[06:16] *** bloatable6 left
[06:16] *** smash left
[06:16] *** obfusk left
[06:16] *** SmokeMachine left
[06:16] *** stux|RC-only left
[06:16] *** skaji left
[06:16] *** ponbiki left
[06:16] *** DrForr left
[06:16] *** joy_ is now known as joy

[06:16] *** mrsolo_ is now known as mrsolo

[06:16] *** mithaldu__ is now known as mithaldu_

[06:16] *** zostay_ is now known as zostay

[06:16] *** SmokeMachine_ is now known as SmokeMachine

[06:16] *** BuildTheRobots_ is now known as BuildTheRobots

[06:16] *** skaji_ is now known as skaji

[06:16] *** d4l3k_ is now known as dalek

[06:17] *** quotable6 left
[06:17] *** coverable6 left
[06:17] *** committable6 left
[06:17] *** bisectable6 left
[06:18] *** greppable6 left
[06:18] *** releasable6 left
[06:19] *** squashable6 left
[06:19] *** squashable6 joined
[06:21] *** ingy joined
[06:21] *** marcusramberg joined
[06:24] *** leah2 joined
[06:25] *** mcmillhj joined
[06:30] *** mcmillhj left
[06:41] *** mcmillhj joined
[06:44] *** obfusk_ left
[06:44] *** obfusk joined
[06:46] *** mcmillhj left
[06:53] *** mcmillhj joined
[06:58] *** mcmillhj left
[06:58] *** benchable6 joined
[06:58] *** ChanServ sets mode: +v benchable6

[06:58] *** bloatable6 joined
[06:59] *** statisfiable6 joined
[07:06] *** wamba joined
[07:11] *** mcmillhj joined
[07:15] *** quotable6 joined
[07:15] *** ChanServ sets mode: +v quotable6

[07:15] *** greppable6 joined
[07:15] *** committable6 joined
[07:15] *** ChanServ sets mode: +v committable6

[07:15] *** bisectable6 joined
[07:15] *** releasable6 joined
[07:15] *** coverable6 joined
[07:16] *** mcmillhj left
[07:23] *** mcmillhj joined
[07:27] *** mcmillhj left
[07:35] <squashable6> 🍕 zoffixznet++ opened issue “WhateverCode + adverb = …”: https://github.com/rakudo/rakudo/issues/1476

[07:35] <squashable6> 🍕 zoffixznet++ labeled issue “WhateverCode + adverb = …”: https://github.com/rakudo/rakudo/issues/1476

[07:36] <Geth> ¦ ecosystem/nige123-patch-1: 2421114439 | (Nigel Hamilton)++ (committed using GitHub Web editor) | META.list

[07:36] <Geth> ¦ ecosystem/nige123-patch-1: Update META.list

[07:36] <Geth> ¦ ecosystem/nige123-patch-1: review: https://github.com/perl6/ecosystem/commit/2421114439

[07:36] *** Zoffix joined
[07:37] <Geth> ¦ ecosystem: nige123++ created pull request #383: Update META.list

[07:37] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/383

[07:38] <Geth> ¦ ecosystem: 5de457e2fe | (Nigel Hamilton)++ (committed by Zoffix Znet) | META.list

[07:38] <Geth> ¦ ecosystem: Add `jmp` to ecosystem

[07:38] <Geth> ¦ ecosystem: 

[07:38] <Geth> ¦ ecosystem: "search files and jump to matching lines in a text editor":

[07:38] <Geth> ¦ ecosystem: https://github.com/nige123/jmp.nigelhamilton.com/

[07:39] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/commit/5de457e2fe

[07:39] <Zoffix> Any idea what this offset calculation in whatever curry is about https://github.com/rakudo/rakudo/blob/master/src/Perl6/Actions.nqp#L9652-L9655 ?  At first, I thought it was to only curry `*+42` in constructs like `foo 1, 2, 3, *+42`, but when I dump QAST going through the curry, it's just the `*+42` portion. Which constructs would have offset other than 0?

[07:40] *** mcmillhj joined
[07:45] *** mcmillhj left
[07:48] *** Alikzus left
[07:51] <Zoffix> Ah, it's for metas

[07:52] *** Alikzus joined
[08:00] *** mcmillhj joined
[08:03] *** someuser joined
[08:03] *** darutoko joined
[08:05] *** mcmillhj left
[08:08] <Zoffix> With stuff like `5 R- *` we get Op<call>(Op<call>(META_OP), 5, *) and the offset makes it skip over Op<call>(META_OP) when raking for Whatevers

[08:13] <Zoffix> Don'

[08:13] <Zoffix> Don't get why it fails to parse if offset is always set to 0 tho :/

[08:13] <Zoffix> "Useless use of R- in sink context ... .Cannot resolve caller Numeric(Whatever: ); none of these signatures match:"  for `5 R- *`

[08:14] <Zoffix> Oh, `$e` is set to $offset+$up_to arity. nevermind

[08:15] *** mcmillhj joined
[08:20] *** mcmillhj left
[08:35] *** mcmillhj joined
[08:40] *** mcmillhj left
[08:45] *** leont joined
[08:49] *** mcmillhj joined
[08:54] *** mcmillhj left
[09:03] *** mcmillhj joined
[09:05] *** domidumont joined
[09:08] *** mcmillhj left
[09:09] *** domidumont left
[09:10] *** domidumont joined
[09:19] *** mcmillhj joined
[09:20] *** zeddy_k joined
[09:24] *** mcmillhj left
[09:31] *** AlexDaniel joined
[09:31] *** leont left
[09:32] <AlexDaniel> squashable6: status

[09:32] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈2 hours. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[09:32] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/75ace8e05071c6bcf3d06f548dd77a19

[09:36] <El_Che> Perl devroom streaming from #FOSDEM: https://live.fosdem.org/watch/k4601

[09:37] *** mcmillhj joined
[09:40] *** notostraca left
[09:42] *** mcmillhj left
[09:42] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Add tests for testing al…”: https://github.com/rakudo/rakudo/pull/1316#issuecomment-362894219

[09:50] *** mcmillhj joined
[09:53] *** Zoffix left
[09:55] *** mcmillhj left
[10:00] *** mcmillhj joined
[10:04] *** leont joined
[10:05] *** mcmillhj left
[10:07] *** Guest18_ left
[10:09] <squashable6> 🍕 AlexDaniel++ closed issue “Reserved characters in t…”: https://github.com/rakudo/rakudo/issues/1247

[10:09] <Geth> ¦ roast: 06c4fc5465 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S15-unicode-information/uniprop.t

[10:10] <Geth> ¦ roast: Test segfaults with reserved characters

[10:10] <Geth> ¦ roast: 

[10:10] <Geth> ¦ roast: These tests take just ≈0.7s to run but at the same time have a fairly

[10:10] <Geth> ¦ roast: high “success” rate (≈35% chance of failing on affected

[10:10] <Geth> ¦ roast: commits). Don't know if it's the best way to test a flapper like this,

[10:10] <Geth> ¦ roast: but I guess it's better than nothing.

[10:10] <Geth> ¦ roast: 

[10:10] <Geth> ¦ roast: <…commit message has 5 more lines…>

[10:10] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/06c4fc5465

[10:12] <buggable> New CPAN upload: IRC-Client-Plugin-UrlTitle-1.0.0.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/IRC-Client-Plugin-UrlTitle-1.0.0.tar.gz

[10:15] <Geth> ¦ roast: 8d03e9ab17 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S15-unicode-information/uniprop.t

[10:15] <Geth> ¦ roast: Oops, add plan to the subtest

[10:15] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/8d03e9ab17

[10:16] *** mcmillhj joined
[10:21] *** mcmillhj left
[10:22] <buggable> New CPAN upload: App-Assixt-0.1.3.tar.gz by TYIL https://cpan.metacpan.org/authors/id/T/TY/TYIL/Perl6/App-Assixt-0.1.3.tar.gz

[10:29] <tyil> eee

[10:29] <tyil> woops

[10:35] *** mcmillhj joined
[10:37] *** setty1 joined
[10:40] *** mcmillhj left
[10:41] <AlexDaniel> .tell lizmat please revisit RT#131813

[10:41] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[10:41] <AlexDaniel> squashable6: status

[10:41] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event in ≈1 hour. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[10:41] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/e8f4034a64aa26d5c4085008d73c56af

[10:41] <AlexDaniel> uuu

[10:43] *** eliasr joined
[10:46] *** Actualeyes left
[10:46] *** mcmillhj joined
[10:48] *** leont left
[10:50] <AlexDaniel> .tell lizmat and also maybe this RT#127403

[10:50] <yoleaux> AlexDaniel: I'll pass your message to lizmat.

[10:51] *** mcmillhj left
[10:54] *** leont joined
[11:05] <squashable6> 🍕 AlexDaniel++ labeled issue “Postfix → Prefix ++/-- optimization”: https://github.com/rakudo/rakudo/issues/1477

[11:05] <squashable6> 🍕 AlexDaniel++ opened issue “Postfix → Prefix ++/-- optimization”: https://github.com/rakudo/rakudo/issues/1477

[11:05] <Geth> ¦ roast: 396a739553 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S06-operator-overloading/prefix.t

[11:05] <squashable6> 🍕 AlexDaniel++ closed issue “Postfix→Prefix optimization is too early”: https://github.com/rakudo/rakudo/issues/1315

[11:05] <Geth> ¦ roast: Add a test for postfix→prefix optimization

[11:05] <Geth> ¦ roast: 

[11:05] <Geth> ¦ roast: Resolves rakudo/rakudo#1315. See rakudo/rakudo#1477 for further

[11:05] <Geth> ¦ roast: discussion.

[11:05] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/396a739553

[11:06] *** mcmillhj joined
[11:11] *** mcmillhj left
[11:17] <squashable6> 🍕 AlexDaniel++ closed issue “Bad error when mistakenl…”: https://github.com/rakudo/rakudo/issues/1314

[11:17] <Geth> ¦ roast: 868a2ba505 | (Aleks-Daniel Jakimenko-Aleksejev)++ | S05-substitution/subst.t

[11:17] <Geth> ¦ roast: Test one case of using .substr instead of .subst

[11:17] <Geth> ¦ roast: 

[11:17] <Geth> ¦ roast: Perhaps there are many other ways to use one instead of the other, but

[11:17] <Geth> ¦ roast: the ticket only talked about this particular one. 🤷

[11:17] <Geth> ¦ roast: 

[11:17] <Geth> ¦ roast: Resolves rakudo/rakudo#1314.

[11:17] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/868a2ba505

[11:17] <squashable6> 🍕 AlexDaniel++ wrote a comment on “Bad error when mistakenl…”: https://github.com/rakudo/rakudo/issues/1314#issuecomment-362899305

[11:23] *** markong joined
[11:23] *** mcmillhj joined
[11:28] <squashable6> 🍕 zoffixznet++ self-assigned issue “Postfix → Prefix ++/-- optimization”: https://github.com/rakudo/rakudo/issues/1477

[11:28] *** mcmillhj left
[11:31] <squashable6> 🍕 zoffixznet++ wrote a comment on commit 868a2ba50523: https://github.com/perl6/roast/commit/868a2ba50523db7fe75b7a55b176203533726428#commitcomment-27327168

[11:34] <squashable6> 🍕 AlexDaniel++ wrote a comment on commit 868a2ba50523: https://github.com/perl6/roast/commit/868a2ba50523db7fe75b7a55b176203533726428#commitcomment-27327206

[11:35] *** mcmillhj joined
[11:40] *** mcmillhj left
[11:42] <Geth> ¦ roast: c700a00f5b | (Aleks-Daniel Jakimenko-Aleksejev)++ | S05-substitution/subst.t

[11:42] <Geth> ¦ roast: Revert "Test one case of using .substr instead of .subst"

[11:42] <Geth> ¦ roast: 

[11:42] <Geth> ¦ roast: This reverts commit 868a2ba50523db7fe75b7a55b176203533726428.

[11:42] <Geth> ¦ roast: 

[11:42] <Geth> ¦ roast: Moving to rakudo tests.

[11:42] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/c700a00f5b

[11:43] *** setty1 left
[11:44] *** leont left
[11:44] <Geth> ¦ rakudo: 9306e887cb | (Aleks-Daniel Jakimenko-Aleksejev)++ | t/05-messages/03-errors.t

[11:44] <Geth> ¦ rakudo: Test one case of using .substr instead of .subst

[11:44] <Geth> ¦ rakudo: 

[11:44] <Geth> ¦ rakudo: Moved from roast:

[11:44] <Geth> ¦ rakudo: https://github.com/perl6/roast/commit/868a2ba50523db7fe75b7a55b176203533726428

[11:44] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/9306e887cb

[11:48] *** mcmillhj joined
[11:53] *** leont joined
[11:53] *** mcmillhj left
[11:57] <AlexDaniel> squashable6: status

[11:57] <squashable6> AlexDaniel, 🍕🍕 SQUASHathon is in progress! The end of the event is in 2 minutes. See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[11:57] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/1662584af2c1b9327820dce46c47c484

[12:00] *** Zoffix joined
[12:01] <AlexDaniel> squashable6: status

[12:01] <squashable6> AlexDaniel, Next SQUASHathon in 25 days and ≈21 hours (2018-03-03 UTC-12⌁UTC+14). See https://github.com/rakudo/rakudo/wiki/Monthly-Bug-Squash-Day

[12:01] <AlexDaniel> yaay

[12:02] <Zoffix> squashable6: log

[12:02] <squashable6> Zoffix, Nothing there yet

[12:02] <AlexDaniel> squashable6: log 2018-02-03

[12:02] <squashable6> AlexDaniel, Log and stats: https://gist.github.com/71523b3eb60371f9426b810ffa9a9300

[12:03] <Zoffix> Any idea why this would be dying with "No lexical found with name '$whatevercode_arg_1'" ? https://temp.perl6.party/out.html

[12:04] <Zoffix> As far as I can see I got the :decl and all that. FWIW this was constructed by moving QAST::Vars from one block to another

[12:06] *** mcmillhj joined
[12:06] <AlexDaniel> reportable6: snapshot

[12:06] <reportable6> AlexDaniel, Already working on it! Check ｢list｣ command after a while.

[12:08] <Zoffix> Oh, nm, optimizer's param lowerer messes it all up down the line

[12:10] *** mcmillhj left
[12:11] <Zoffix> Or rather I just need to clone moved QAST::Vars

[12:12] <Zoffix> (lowerer rewrites them to lowers and they get changed in the other block, but their use isn't lowered, hence the error)

[12:14] <Zoffix> \o/

[12:15] <Zoffix> $ ZZ0=1 ./perl6 -e '(4 < *.self < 6)(5).say'                                                                                                                                                                    

[12:15] <Zoffix> True

[12:15] <Zoffix> m: (4 < *.self < 6)(5).say

[12:15] <camelia> rakudo-moar 9306e887c: OUTPUT: «===SORRY!===␤QAST::Block with cuid 1 has not appeared␤»

[12:16] *** Guest18 joined
[12:19] *** leont left
[12:19] *** mcmillhj joined
[12:20] <Zoffix> And `(* + * + * + * + *)(1, 2, 3, 4, 5)` is now 2.2x faster to run and 8% faster to compile.... All largely caused by DELETING 40 lines of code :)

[12:20] <Zoffix> Didn't run spectest tho and it sounds too good to be true :)

[12:23] <AlexDaniel> .oO( amazing perf improvements? Bring them on! Will revert before the release tho :P )

[12:23] <Zoffix> Why revert?

[12:23] <Zoffix> releasable6: next

[12:23] <releasable6> Zoffix, Next release in 13 days and ≈6 hours. Blockers: https://github.com/rakudo/rakudo/issues?q=is:issue+is:open+label:%22%E2%9A%A0+blocker+%E2%9A%A0%22. Changelog for this release was not started yet

[12:23] <releasable6> Zoffix, Details: https://gist.github.com/4e46aa1e6e9c8d785fdd2a984a23e3f6

[12:24] <AlexDaniel> just joking that things that make stuff faster may break stuff :)

[12:24] <Zoffix> :)

[12:24] *** mcmillhj left
[12:25] <Zoffix> I just hope Whatever curries are well-covered

[12:25] <Zoffix> (by roast)

[12:27] <AlexDaniel> don't worry, all important features are well-covered somewhere! :)

[12:29] *** MasterDuke joined
[12:38] *** Rawriful joined
[12:39] *** mcmillhj joined
[12:44] *** mcmillhj left
[12:46] <Zoffix> huggable: breakage

[12:46] <huggable> Zoffix, nothing found

[12:47] <Zoffix> huggable: breakage :is: <AlexDaniel> don't worry, all important features are well-covered somewhere! :)

[12:47] <huggable> Zoffix, Added breakage as <AlexDaniel> don't worry, all important features are well-covered somewhere! :)

[12:47] <Zoffix> I

[12:47] <Zoffix> I'll quote you when the release breaks :) 'cause the spectest is clean

[12:47] <Zoffix> :)

[12:48] <AlexDaniel> that's ok, I'll just say that it was covered in their project xD

[12:50] <AlexDaniel> speaking of which, would've been great if whateverable was in the ecosystem so that at least toaster tripped over it…

[12:50] <Geth> ¦ ecosystem/nige123-patch-1: 96cd8175b6 | (Nigel Hamilton)++ (committed using GitHub Web editor) | META.list

[12:50] <Geth> ¦ ecosystem/nige123-patch-1: Update META.list

[12:50] <Geth> ¦ ecosystem/nige123-patch-1: review: https://github.com/perl6/ecosystem/commit/96cd8175b6

[12:50] <Geth> ¦ ecosystem: nige123++ created pull request #384: Update META.list

[12:50] <Geth> ¦ ecosystem: review: https://github.com/perl6/ecosystem/pull/384

[12:50] <AlexDaniel> but I doubt it's going to work like that

[12:56] *** mcmillhj joined
[13:00] *** someuser left
[13:01] *** mcmillhj left
[13:02] *** rindolf joined
[13:07] <Geth> ¦ rakudo: 752bb8b381 | (Zoffix Znet)++ | src/Perl6/Actions.nqp

[13:07] <Geth> ¦ rakudo: Re-design Whatever currier

[13:07] <Geth> ¦ rakudo: 

[13:07] <Geth> ¦ rakudo: - Fixes RT#128859: https://rt.perl.org/Ticket/Display.html?id=128859

[13:08] <Geth> ¦ rakudo: - Makes (* + * + * + * + *)(1,2,3,4,5) run 2.2x faster

[13:08] <Geth> ¦ rakudo: - Makes (* + * + * + * + *)(1,2,3,4,5) compile ~8% faster

[13:08] <Geth> ¦ rakudo: 

[13:08] <Geth> ¦ rakudo: === [The mechanism of the OLD currier] ===

[13:08] <Geth> ¦ rakudo: <…commit message has 41 more lines…>

[13:08] <Geth> ¦ rakudo: review: https://github.com/rakudo/rakudo/commit/752bb8b381

[13:09] <Zoffix> synopse bot's ded, eh

[13:09] *** synopsebot joined
[13:09] *** ChanServ sets mode: +v synopsebot

[13:10] <Zoffix> RT#128859

[13:10] <synopsebot> RT#128859 [new]: https://rt.perl.org/Ticket/Display.html?id=128859 [BUG] WhateverCode in a chained comparison fails to parse ("QAST::Block with cuid 1 has not appeared")

[13:10] <Zoffix> .botsnack

[13:10] <yoleaux> :D

[13:11] *** SourceBaby left
[13:11] *** SourceBaby joined
[13:11] *** ChanServ sets mode: +v SourceBaby

[13:11] <Geth> ¦ roast: bfe4cb9c2c | (Zoffix Znet)++ | S02-types/whatever.t

[13:11] <Geth> ¦ roast: Cover more cases of curries, including chaining

[13:11] <Geth> ¦ roast: 

[13:11] <Geth> ¦ roast: RT#128859: https://rt.perl.org/Ticket/Display.html?id=128859

[13:11] <Geth> ¦ roast: Rakudo fix: https://github.com/rakudo/rakudo/commit/752bb8b381

[13:11] <Geth> ¦ roast: review: https://github.com/perl6/roast/commit/bfe4cb9c2c

[13:12] *** Zoffix left
[13:13] *** mcmillhj joined
[13:18] *** mcmillhj left
[13:29] *** mcmillhj joined
[13:35] *** mcmillhj left
[13:35] <tyil> it seems latest perl 6 (via rakudobrew, in Travis) is broken: https://travis-ci.org/scriptkitties/perl6-app-assixt/builds/337201179#L1263

[13:41] *** Zoffix joined
[13:41] <Zoffix> tyil: thanks. My bad. I forgot to bump NQP

[13:41] * Zoffix does so

[13:41] *** Guest18 left
[13:41] <colomon> woah: I used Proc::Async a bit thoughtlessly, and now I seem to have 100+ instances of perl6 running on my system.  It is EPICALLY SLOW.

[13:43] <Zoffix> colomon: be sure you got latest and greatest Rakudo. A few months back, there were improvements made to Proc::Async's worker creation to avoid precisely the problem you described.

[13:43] <tyil> Zoffix: ty

[13:45] <Zoffix> tyil: should be good now (just hit "restart build" on travis to restart it)

[13:46] <colomon> Zoffix: whoops

[13:46] *** mcmillhj joined
[13:47] <tyil> Imma fix the build on 2018.01 specifically, then I'll redo it on latest as well

[13:50] *** Guest18 joined
[13:50] <Zoffix> "<evalable6> Zoffix__, rakudo-moar 752bb8b38: OUTPUT: «Cannot test 752bb8b381a06dd4d49247d36369fffa3327a641 (Commit exists, but a perl6 executable could not be built for it)»"  That was my clue that something was wrong, but I assumed the bot just didn't build the commit yet :)

[13:51] <AlexDaniel> the error message would be different in that case

[13:51] <AlexDaniel> c: 2014.01~200 say 42

[13:51] <committable6> AlexDaniel, ¦2014.01~200: «No build for this commit»

[13:51] <Zoffix> I'll keep that in mind for the future

[13:51] *** mcmillhj left
[13:53] <AlexDaniel> reportable6: list

[13:53] <reportable6> AlexDaniel, https://gist.github.com/1b359c180d316209d8589e4d0deb0676

[13:54] <AlexDaniel> reportable6: 2018-02-02T12:00:00Z 2018-02-04T12:00:00Z

[13:54] <reportable6> AlexDaniel, OK, working on it! This may take up to 40 seconds

[13:54] *** margeas joined
[13:55] *** markong left
[13:55] <reportable6> AlexDaniel, https://gist.github.com/4284081e6b689948b7680a46ca94b47b

[13:56] <AlexDaniel> Zoffix: fwiw that's another way to look at squashathon stats this week ↑

[13:56] <Zoffix> cool

[13:58] *** mcmillhj joined
[13:59] <Zoffix> This should be livestream for Perl room in FOSDEM: https://live.fosdem.org/watch/k4601

[14:00] <Zoffix> ZOFVM: Files=1287, Tests=153184, 141 wallclock secs (19.86 usr  3.04 sys + 3002.07 cusr 140.76 csys = 3165.73 CPU)

[14:01] <Zoffix> Quite a fast run (tho I'm fairly sure the numbers are skewed due to one or more test files running for ^ that long)

[14:01] <Zoffix> And rakudo travis is all green now: https://travis-ci.org/rakudo/rakudo/

[14:01] * Zoffix crawls back into the hole

[14:01] *** Zoffix left
[14:03] *** mcmillhj left
[14:09] *** leont joined
[14:11] *** mcmillhj joined
[14:15] *** margeas left
[14:15] *** mcmillhj left
[14:21] *** mcmillhj joined
[14:24] *** Actualeyes joined
[14:26] *** mcmillhj left
[14:34] *** mcmillhj joined
[14:35] *** rindolf left
[14:37] *** espadrine_ left
[14:40] *** mcmillhj left
[14:41] <colomon> Zoffix: that doesn’t seem to have helped?  it’s spawned 245 so far with rakudo 2018.01

[14:42] <colomon> hasn’t slogged the system yet

[14:43] * colomon decides to kill it and try manually to limit the number of threads...

[14:48] *** jeromelanteri left
[14:49] *** bwisti joined
[14:50] *** Guest18 left
[14:50] *** mcmillhj joined
[14:51] *** dogbert2_ joined
[14:54] *** dogbert2 left
[14:56] *** mcmillhj left
[14:58] *** leont left
[15:10] *** mcmillhj joined
[15:11] *** [ptc] joined
[15:15] *** mcmillhj left
[15:19] *** zeddy_k left
[15:24] *** mcmillhj joined
[15:24] *** Rawriful left
[15:27] *** zeddy_k joined
[15:28] *** araralonre__ joined
[15:28] *** mcmillhj left
[15:31] *** araraloren_ left
[15:31] *** [ptc] left
[15:38] *** Rawriful joined
[15:39] *** mcmillhj joined
[15:44] *** mcmillhj left
[15:49] *** araralonre__ left
[15:50] *** someuser joined
[15:55] *** mcmillhj joined
[15:57] <Voldenet> Is there any simple way to implement roles without building large-ish classes?

[15:57] <Voldenet> the actual question is: how to build cyclic iterable without much boilerplate involved

[15:57] <Voldenet> m: class CyclicIterable does Iterable {has $.i;submethod iterator {class :: does Iterator {has $.i;has $!c;method r { $!c = $!i.iterator };method o { $!c.pull-one };submethod TWEAK { self.r };method pull-one {my $v := self.o;if $v =:= IterationEnd {self.r;$v := self.o;};$v}}.new(:$!i);}};my $c = CyclicIterable.new(:i<232 234>).head(10).say;

[15:57] <camelia> rakudo-moar 1d03e9419: OUTPUT: «(232 234 232 234 232 234 232 234 232 234)␤»

[15:57] <Voldenet> this works

[15:59] *** lsm left
[15:59] *** ponbiki_ is now known as ponbiki

[16:00] *** ponbiki is now known as Guest81890

[16:00] *** mcmillhj left
[16:00] *** Guest81890 is now known as ponbiki_

[16:05] <Voldenet> m: sub cyclic-iterate(Iterable:D $i) { gather loop { .take for @$i }};cyclic-iterate(<a b>).head(10).say;

[16:05] <camelia> rakudo-moar 1d03e9419: OUTPUT: «(a b a b a b a b a b)␤»

[16:05] <Voldenet> I guess the implementation above is very javalicious..., but I like the latter better for some reason

[16:06] *** mcmillhj joined
[16:11] *** mcmillhj left
[16:12] *** skids joined
[16:19] <jnthn> m: (|<a b> xx *).head(10).say

[16:19] <camelia> rakudo-moar 1d03e9419: OUTPUT: «(a b a b a b a b a b)␤»

[16:19] *** [ptc] joined
[16:19] *** mcmillhj joined
[16:22] *** rindolf joined
[16:24] *** mcmillhj left
[16:24] *** Guest18 joined
[16:25] *** zakharyas joined
[16:32] *** mcmillhj joined
[16:37] *** mcmillhj left
[16:38] *** someuser left
[16:46] *** mcmillhj joined
[16:51] *** mcmillhj left
[17:05] *** mcmillhj joined
[17:07] *** espadrine_ joined
[17:10] *** mcmillhj left
[17:19] *** mcmillhj joined
[17:24] *** mcmillhj left
[17:26] <nine> Anyone any idea about the Perl dinner tonight?

[17:26] <moritz> sue spence mentioned something on twitter

[17:26] <moritz> wait a sec...

[17:26] <moritz> https://twitter.com/virtualsue/status/960143850227601408

[17:28] <nine> ooh that helps us a lot, thanks!

[17:37] *** natrys joined
[17:38] *** mcmillhj joined
[17:39] *** epony left
[17:40] *** setty1 joined
[17:41] <Voldenet> > perl6 --stagestats -e 'sub prefix:<a> { }; sub a { };' > Stage parse      :   0.352

[17:41] <Voldenet> ...wut

[17:42] <Voldenet> while > perl6 --stagestats -e 'sub a { }; sub b { };' > Stage parse      :   0.072

[17:43] *** mcmillhj left
[17:44] <Voldenet> uh, I'm not sure why each additional operator overload takes around 300ms to parse, is there a bot I can check that with?

[17:45] *** khw joined
[17:50] <AlexDaniel> it's a known issue

[17:51] <AlexDaniel> it's rebuilding the grammar or something

[17:51] *** mcmillhj joined
[17:56] *** mcmillhj left
[17:59] *** ponbiki_ is now known as ponbiki

[18:02] *** mcmillhj joined
[18:03] *** zakharyas1 joined
[18:04] <MasterDuke> Voldenet: you could try benchable6 

[18:04] <MasterDuke> benchable6: help

[18:04] <benchable6> MasterDuke, Like this: benchable6: f583f22,HEAD my $a = ‘a’ x 2¹⁶; for ^1000 {my $b = $a.chop($_)} # See wiki for more examples: https://github.com/perl6/whateverable/wiki/Benchable

[18:04] <AlexDaniel> bench: 2015.12,HEAD sub prefix:<a> { }; sub a { };

[18:04] <benchable6> AlexDaniel, starting to benchmark the 2 given commits

[18:05] <benchable6> AlexDaniel, benchmarked the given commits, now zooming in on performance differences

[18:05] *** zakharyas left
[18:05] <benchable6> AlexDaniel, ¦2015.12: «0.4203» ¦e89721d: «0.3960» ¦a21d2f9: «0.3536» ¦HEAD: «0.4770»

[18:05] <Voldenet> I guess there's a way around it

[18:05] <Voldenet> making a module with exported prefixes

[18:05] <AlexDaniel> yes

[18:06] <Voldenet> it's not extremely fast, but reduces the overhead to fixed value, which is good enough

[18:07] *** mcmillhj left
[18:11] <Voldenet> bench: 2017.12,HEAD sub prefix:<a> { }; sub a { };

[18:11] <benchable6> Voldenet, starting to benchmark the 2 given commits

[18:11] <benchable6> Voldenet, benchmarked the given commits, now zooming in on performance differences

[18:11] <benchable6> Voldenet, ¦2017.12: «0.4633» ¦HEAD: «0.4791»

[18:13] *** mcmillhj joined
[18:16] *** leont joined
[18:19] *** mcmillhj left
[18:22] *** Ven`` joined
[18:29] *** mcmillhj joined
[18:31] *** |oLa| left
[18:33] *** |oLa| joined
[18:34] *** mcmillhj left
[18:42] *** Ven`` left
[18:42] *** mcmillhj joined
[18:43] *** someuser joined
[18:45] *** |oLa| left
[18:47] *** mcmillhj left
[18:50] *** leont left
[18:50] *** darutoko left
[18:58] *** mcmillhj joined
[19:03] *** mcmillhj left
[19:04] *** zakharyas1 left
[19:05] *** |oLa| joined
[19:05] *** |oLa| left
[19:06] *** zakharyas joined
[19:08] *** reportable6 left
[19:08] *** squashable6 left
[19:08] *** statisfiable6 left
[19:08] *** reportable6 joined
[19:08] *** squashable6 joined
[19:08] *** statisfiable6 joined
[19:10] *** mcmillhj joined
[19:15] *** mcmillhj left
[19:19] *** |oLa| joined
[19:20] *** mcmillhj joined
[19:25] *** mcmillhj left
[19:26] *** s0me0ne-unkn0wn joined
[19:28] *** Guest18 left
[19:33] *** mcmillhj joined
[19:38] *** mcmillhj left
[19:40] *** notostraca joined
[19:47] *** mcmillhj joined
[19:52] *** mcmillhj left
[19:52] *** Guest18 joined
[20:00] <Voldenet> m: sub x { my ($a, $b); ( :$a :$b ) }; x()

[20:00] <camelia> rakudo-moar 1c6494618: OUTPUT: «===SORRY!===␤Unknown QAST node type NQPMu␤»

[20:00] <Voldenet> hm, that's not the best error message

[20:00] <AlexDaniel> that's true

[20:00] <AlexDaniel> 6c: sub x { my ($a, $b); ( :$a :$b ) }; x()

[20:00] <committable6> AlexDaniel, ¦6c (27 commits): «===SORRY!===␤Unknown QAST node type NQPMu␤ «exit code = 1»»

[20:01] <Voldenet> m: (:$_ :$_)

[20:01] <camelia> rakudo-moar 1c6494618: OUTPUT: «===SORRY!===␤Unknown QAST node type NQPMu␤»

[20:02] *** mcmillhj joined
[20:04] <skids> Shouldn't that be a valid colonpair list syntax (just NYI)?

[20:04] <yoleaux> 00:05Z <Zoffix> skids: AFAIK our current policy is not to add multi candidates whose job is to merely print an error message that the user is used wrong arguments. For one, that muddies up introspection as it gives candidates that can't actually be used. The `unique`s issue could be addressed in other ways, though perhaps we should audit the entire codebase for this type of issue and address it uniformly throughout.

[20:04] <yoleaux> 00:12Z <Zoffix> skids: opened an Issue for that: https://github.com/rakudo/rakudo/issues/1474

[20:04] *** cdg joined
[20:06] <Voldenet> m: my ($a, $b); { :$a :$b }

[20:06] <camelia> rakudo-moar 1c6494618: OUTPUT: «===SORRY!===␤Unknown QAST node type NQPMu␤»

[20:06] <Voldenet> I think that actually should be the valid syntax for hashes

[20:07] *** mcmillhj left
[20:11] <moritz> with a comma inbetween, maybe?

[20:15] *** zeddy__k joined
[20:15] *** domidumont left
[20:17] *** zeddy_k left
[20:18] <geekosaur> problem is that we want to use the same syntax for "named parameters" :foo :bar :baz(5)

[20:19] *** mcmillhj joined
[20:21] <skids> How far the comma-less adverb list syntax can be worked down into the syntax without introducing some sort of sticky ambiguity... I don't think has been thoroughly investigated?

[20:22] <moritz> anyway, the error message is LTA

[20:22] <moritz> so we should consider it a bug either way

[20:23] <skids> Yeah.

[20:23] *** leont joined
[20:24] *** mcmillhj left
[20:25] <skids> RT#124553 covers the NYI for params.  Just that case though.

[20:25] <synopsebot> RT#124553 [new]: https://rt.perl.org/Ticket/Display.html?id=124553 Roast rakudo skip/todo test:./S03-operators/adverbial-modifiers.t line:170 reason: 'Multi colonpair syntax not yet understood'

[20:27] *** natrys left
[20:29] <skids> RT#125353 and RT#131089 also involve the NYIness.

[20:29] <synopsebot> RT#125353 [open]: https://rt.perl.org/Ticket/Display.html?id=125353 [BUG] %(:a:b) ignores all elements after the first one

[20:29] <synopsebot> RT#131089 [open]: https://rt.perl.org/Ticket/Display.html?id=131089 Different parsing of combined colonpairs

[20:30] <skids> Ah... RT#127023 seems to already have been lodged.

[20:30] <synopsebot> RT#127023 [new]: https://rt.perl.org/Ticket/Display.html?id=127023 [BOOTSTRAP] error message “Unknown QAST node type NQPMu” ( (:w :h<1>) )

[20:31] *** cdg left
[20:32] *** mcmillhj joined
[20:37] *** mcmillhj left
[20:39] *** notostraca is now known as TEttinger

[20:40] *** zakharyas left
[20:45] *** mcmillhj joined
[20:46] *** wamba left
[20:47] *** wamba joined
[20:49] *** mcmillhj left
[20:52] *** wamba left
[21:00] <xi-> why is there no binary for rakudo-star 2018.01?

[21:01] *** xenotrope joined
[21:02] <moritz> because nobody made one, yet

[21:03] *** mcmillhj joined
[21:08] *** mcmillhj left
[21:15] *** itaylor57 left
[21:17] *** mcmillhj joined
[21:19] <Voldenet> m: <1 2 3> .map({ $_*2 }).&({ $^a }).say

[21:19] <camelia> rakudo-moar 1c6494618: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed postfix call␤at <tmp>:1␤------> 3<1 2 3> .map({ $_*2 }).7⏏5&({ $^a }).say␤»

[21:19] <Voldenet> hm, this shows an error in a funny place

[21:19] <Voldenet> shouldn't it be shown before first .map?

[21:20] <moritz> why?

[21:20] <moritz> the first .map looks fine

[21:20] <moritz> m: say <1 2 3> .map({ $_*2 })

[21:20] <camelia> rakudo-moar 1c6494618: OUTPUT: «(2 4 6)␤»

[21:20] <Voldenet> m: <1 2 3>.map({ $_*2 }).&({ $^a }).say

[21:20] <camelia> rakudo-moar 1c6494618: OUTPUT: «(2 4 6)␤»

[21:21] <Voldenet> m: <1 2 3>.map({ $_*2 }) .&({ $^a }).say

[21:21] <camelia> rakudo-moar 1c6494618: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed postfix call (only alphabetic methods may be detached)␤at <tmp>:1␤------> 3<1 2 3>.map({ $_*2 }) .7⏏5&({ $^a }).say␤»

[21:21] <Voldenet> The last error actually makes sense

[21:22] *** mcmillhj left
[21:23] <Voldenet> The first error is a bit tough to understand, it's not the postfix call that's malformed, it actually can't be used there because of the space before .map

[21:30] <moritz> on the other hand, if you leave out the & call, all is fine

[21:30] <moritz> and parsing typically commits to what it sees early on

[21:35] *** rindolf left
[21:36] *** mcmillhj joined
[21:40] *** rindolf joined
[21:40] <Voldenet> in fact, I wouldn't mind if .& operator meant 'call second operand with first operand'

[21:41] <Voldenet> m: my @k = *.sort, *.sort.reverse; say flat (^10).classify(* % 2).sort(*.key).map(*.value) Z.& @k

[21:41] <camelia> rakudo-moar 1c6494618: OUTPUT: «5===SORRY!5=== Error while compiling <tmp>␤Malformed postfix call␤at <tmp>:1␤------> 3ssify(* % 2).sort(*.key).map(*.value) Z.7⏏5& @k␤»

[21:41] <Voldenet> m: sub infix:<.&> { $^b($^a) };  my @k = *.sort, *.sort.reverse; say flat (^10).classify(* % 2).sort(*.key).map(*.value) Z.& @k

[21:41] *** mcmillhj left
[21:41] <camelia> rakudo-moar 1c6494618: OUTPUT: «(0 2 4 6 8 9 7 5 3 1)␤»

[21:47] *** mcmillhj joined
[21:48] <Voldenet> m: sub infix:<.&> { $^b($^a) }; 1 .& &say

[21:48] <camelia> rakudo-moar 1c6494618: OUTPUT: «1␤»

[21:51] *** mcmillhj left
[22:03] <tyil> the perl stand at fosdem was awesome, much more people that showed interest in Perl 6 than I imagined

[22:04] <tyil> I'm planning to give two talks at fosdem next year on perl 6 myself :>

[22:04] * jnthn will try to make it next year :)

[22:05] <tyil> there's also the dutch perl workshop in a couple months :3

[22:06] <jnthn> Oh...details?

[22:07] *** mcmillhj joined
[22:07] <tyil> http://perl.events/nlpwindex.html  the site is still under development

[22:07] <tyil> but the information itself should be accurate

[22:08] * jnthn grumbles about the withdrawal of the Prague - Amsterdam sleeper train some years back

[22:08] <tyil> never been to prague, I cant relate to your pain

[22:12] *** mcmillhj left
[22:12] <jnthn> It's just very convenient to go to the station in an evening and wake up roughly where you want to be in the morning :)

[22:13] <jnthn> Whereas with day trains it's, like, a whole day

[22:13] <jnthn> I'm tempted though...the dates are do-able even if not perfect.

[22:14] <colomon> is there some obvious way I’m missing to get the list of directories in an IO::Path?  Can obviously do a chain of .parent calls, but it feels like something common enough to be built in…

[22:15] <colomon> like  /usr/local/bin goes to “use”, “local”, “bin"

[22:15] <colomon> *usr

[22:17] <timotimo> colomon: you can grab its .spec and use things like split or splitdir or splitpath

[22:18] <timotimo> no, splitpath is the volume/dirname/filename thing

[22:22] <jnthn> tyil: Are you one of the organizers (or do you know who is)?

[22:23] <El_Che> NLPW? theo

[22:23] <tyil> jnthn: I am not one of the organisers, but I'll probably see them next tuesday at the perl monger meetup

[22:23] *** mcmillhj joined
[22:24] <jnthn> El_Che: Ah, thanks :)

[22:24] <El_Che> jnthn: 1 day workshop, 1 day perl6 course with Shitov

[22:26] <jnthn> Yeah, I was thinking "hmm, I wonder if there'd be any interest in a Perl 6 training" and then noticed that yes, so much that somebody already is doing it. :-)

[22:26] <colomon> timotimo++: splitdir, brill!  wonder why it isn’t referenced by the IO::Path documentation, but it seems like exactly what I need

[22:27] <leont> AFAIK it's still in a fairly early planning phase

[22:27] <El_Che> jnthn: a cro training maybe?

[22:27] <El_Che> or a more advanced parallel track?

[22:27] <jnthn> Dunno, or a concurrency one

[22:27] <El_Che> indeed

[22:27] <leont> Oooh

[22:28] *** mcmillhj left
[22:29] <jnthn> I don't want to be a douche and compete with Andrew's one. :-) But if I can do something that'd attract a different audience instead, I'd consider it.

[22:34] <timotimo> colomon: aye, a prominent link to the spec docs would be nice

[22:34] *** Ven`` joined
[22:37] *** mcmillhj joined
[22:41] *** Zoffix joined
[22:42] <Zoffix> xi-: we're still testing release candidates. You can give RC0 a whirl; the binaries are at http://pl6anet.org/drop/

[22:42] <xi-> I just built it instead

[22:42] <xi-> would that be the same?

[22:42] *** mcmillhj left
[22:42] <Zoffix> nine: you probably saw, but `Actually use new-from-git-describe` is exploding travis again :)

[22:42] <Zoffix> xi-: I think so, yes.

[22:48] *** Ven`` left
[22:49] *** dct left
[22:51] *** mcmillhj joined
[22:53] <Zoffix> e: use QAST:from<NQP>; BEGIN try $*W.compile_time_evaluate: $, QAST::Want.new; say $!^.message

[22:53] <evalable6> Zoffix, rakudo-moar a8e6be66a: OUTPUT: «(exit code 1) ===SORRY!===␤Unknown QAST node type NQPMu␤»

[22:53] <Zoffix> That's the bug for the colonpair thing. Should be fairly easy to fix

[22:53] <Zoffix> gonna give it a go later tonight, unless someone beats me to it

[22:56] *** mcmillhj left
[22:57] *** Rawriful left
[23:02] *** mcmillhj joined
[23:07] *** mcmillhj left
[23:09] *** Zoffix left
[23:12] <stmuk> https://www.youtube.com/watch?v=tSZV8IXIsM4

[23:12] *** MasterDuke left
[23:15] *** mcmillhj joined
[23:17] <AlexDaniel> note

[23:17] <AlexDaniel> note #####

[23:17] <evalable6> AlexDaniel, rakudo-moar a8e6be66a: OUTPUT: «Noted␤»

[23:20] *** mcmillhj left
[23:26] *** espadrine_ left
[23:30] *** setty1 left
[23:33] *** mcmillhj joined
[23:34] *** evalable6 left
[23:34] *** evalable6 joined
[23:37] *** mcmillhj left
[23:41] *** shinobi-cl joined
[23:42] <shinobi-cl> hello, perl6

[23:42] <gfldex> m: say „Hello shinobi-cl!“

[23:42] <camelia> rakudo-moar a8e6be66a: OUTPUT: «Hello shinobi-cl!␤»

[23:43] * gfldex .oO( Why is there no bot for that? )

[23:43] <shinobi-cl> I've finished a small module for perl6, a bidimensional array.... Before committing it to the perl6 modules repo, i would like some feedback. There is a small example on how to use it: https://github.com/shinobi/Data-StaticTable/wiki/How-To

[23:44] *** colomon left
[23:47] *** mcmillhj joined
[23:47] *** colomon joined
[23:51] *** cdg joined
[23:51] <gfldex> shinobi-cl: I rarely see ‚get-‘ as a prefix for getters in Perl 6. And you seam not to like Whatever much.

[23:52] *** mcmillhj left
[23:52] <gfldex> m: say «We love {*}!»

[23:52] <camelia> rakudo-moar a8e6be66a: OUTPUT: «(We love * !)␤»

[23:54] <shinobi-cl> gfldex: Noted ✎. What do you suggest? i will remove them from the function names, they are not really required.  And what do you mean by whatever? The * operator? How should i use it in this module?

[23:55] <gfldex> m: my @a = [[1,2,3],<a b c>]; say @a[*;1];

[23:55] *** cdg left
[23:55] <camelia> rakudo-moar a8e6be66a: OUTPUT: «(2 b)␤»

[23:57] <gfldex> m: subset StaticTable::Position of Int where * >= 1; sub s(StaticTable::Position $i){ dd $i }; s(*)

[23:57] <camelia> rakudo-moar a8e6be66a: OUTPUT: «Type check failed in binding to parameter '$i'; expected Int but got Whatever (*)␤  in sub s at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[23:57] <gfldex> m: subset StaticTable::Position of Int where * >= 1|Whatever; sub s(StaticTable::Position $i){ dd $i }; s(*)

[23:57] <camelia> rakudo-moar a8e6be66a: OUTPUT: «Type check failed in binding to parameter '$i'; expected Int but got Whatever (*)␤  in sub s at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[23:57] <shinobi-cl> gfldex: well.. there is a method to convert the statictable contents to a shaped array, so this should work. i will add it as a test though

[23:58] <AlexDaniel> m: multi sub foo($ where /^x/) { nextwith ‘zzz’ }; multi sub foo($ where ‘yyy’) { say ‘yyy’ }; multi sub foo($ where ‘zzz’) { say ‘zzz’ }; foo(‘xx’)

[23:58] <camelia> rakudo-moar a8e6be66a: ( no output )

[23:58] <AlexDaniel> why no output?

[23:59] *** rindolf left
