[00:00] <Supaplex> you still working at gurulabs?

[00:00] <Tene> Yes.

[00:00] <Supaplex> kewl. I'm still with Juniper

[00:07] *** pmurias left
[00:18] *** thowe joined
[00:24] *** payload1 left
[00:24] *** payload joined
[00:32] *** dukelet0 left
[00:38] *** dukelet0 joined
[00:49] *** thowe left
[01:07] *** ash_ left
[01:27] *** cotto left
[01:27] *** wolf2k_ubuntu joined
[01:49] *** justatheory left
[01:55] *** Baggio_ joined
[02:08] *** cognominal left
[02:35] *** Baggio_ left
[02:37] *** justatheory joined
[03:10] *** Nhelo left
[03:12] *** Baggio_ joined
[03:16] *** Chillance left
[03:17] *** Baggio_ left
[03:19] *** Baggio_ joined
[03:40] *** wolf2k_ubuntu left
[03:42] *** soupdragon joined
[04:16] *** stephenlb left
[04:43] *** Baggio_ left
[04:44] *** Baggio_ joined
[04:47] *** meppl joined
[04:47] *** dbrock left
[04:48] *** Baggio_ left
[04:52] <s1n> happy new year everyone

[04:53] *** meppel joined
[05:00] *** justatheory left
[05:03] <pugs_svn> r29434 | duff++ | Change URL for advent calendar to point to the "ToC" 

[05:09] *** meppl left
[05:15] *** cognominal joined
[05:29] *** cognominal left
[05:30] *** cognominal joined
[05:49] *** bryan[c1] joined
[05:50] *** wolf2k_ubuntu joined
[06:14] *** meppel left
[06:16] *** meppl joined
[06:21] *** y3llow_ left
[06:32] *** ruoso left
[06:50] *** wolf2k_ubuntu left
[07:12] *** cls_bsd left
[07:23] *** mberends joined
[07:31] *** Intensity left
[07:37] *** Intensity joined
[07:45] <mberends> I'm sorry if I appeared grumpy yesterday at 19:24. "Why don't they realise that questions beginning with why are so annoying?" was written as a self referential joke that completely fell flat. Maybe a ;) at the end would have helped.

[07:47] <pugs_svn> r29435 | diakopter++ | [sprixel] Add jsemit.js, representing about 15% of the port of sprixel# (in C#) *back to* JavaScript.  Good times.  2010: o hi o 

[07:53] <diakopter> mberends: hi

[07:53] <diakopter> sleep& :)

[07:53] <mberends> hi diakopter. oh. bye.

[07:58] *** meppl left
[08:05] *** sjohnson sets mode: +ooo diakopter mberends Tene

[08:14] <pugs_svn> r29436 | mberends++ | [src/perl6/Makefile] try to eliminate that "rm: cannot remove `CORE.syml.store'" message 

[08:29] <pugs_svn> r29437 | mberends++ | [v6/mildew] add a 'make help' 

[08:30] *** Baggio_ joined
[08:42] *** meppl joined
[08:53] *** iblechbot joined
[09:08] *** ashizawa joined
[09:46] *** cognominal left
[09:54] *** Su-Shee joined
[09:54] <Su-Shee> good morning

[09:55] <Su-Shee> mberends: it's called "chandler" and it was by mitch kapor.

[10:02] <mberends> Su-Shee: interesting answer, but what was the question?

[10:02] <Su-Shee> mberends: the project I was talking about yesterday. :)

[10:03] <Su-Shee> mberends: and the book about it is called "dreaming in code: Two Dozen Programmers, Three Years, 4732 Bugs, and One Quest for Transcendent Software"

[10:03] <mberends> right, I also just remembered :)

[10:04] <Su-Shee> mberends: I just woke up with this in my mind :)

[10:04] <mberends> heh

[10:13] <mberends> wikipedia has good writeups about both Mitch and chandler. definitely Hubris Driven Development.

[10:22] <Su-Shee> was very educational, the book.

[10:23] <Su-Shee> what becomes very clear is also mistakes like "too cool technology too early" and "not abondoning the wrong path in time"

[10:23] <mberends> I also like books about software development etc.

[10:26] <Su-Shee> I've read a couple when I started working as a project manager, but it's all nothing really new and all elements of "good organization" still apply. they're timeless anyway.

[10:28] <mberends> I really enjoyed "The Soul of a New Machine" by Tracy Kidder. It could have been about the 386, but was actually about the Data General Eclipse MV/8000 (a first go at 32 bits).

[10:28] <Su-Shee> well really enjoying was Harry Potter I - VI :)

[10:29] <mberends> now that's seriously off topic ;)

[10:29] <Su-Shee> no. "it's magic!" :) 

[10:29] <Su-Shee> though I'd rather like to read a book about what projects/companies are doing right.

[10:30] <mberends> that's usually a secret, isn't it?

[10:31] <Su-Shee> no, it's just not a subject which is usally covered in technical books or software-development related books.

[10:31] *** cls_bsd joined
[10:31] <Su-Shee> as with everything, you can easily start with old greek and latin stuff about principles of "getting things done" ;)

[10:32] <Su-Shee> you'll find plenty in economy, politics and psychology.

[10:35] *** Baggio_ left
[10:39] <mberends> I've had to deliver courses about software project management, development methodologies, and product lifecycles. The audience has either "got it" already, or "don't get it" and won't. So either I cannot teach the subjects, or it's hard to learn if it's not in one's nature.

[10:39] *** bryan[c1] left
[10:40] <Su-Shee> yes. some people just do proper organization and profit from a couple of simple tips and others don't get it even after a shelf full of books. 

[10:40] <mberends> exactly

[10:43] *** irclogbot_backup joined
[10:43] <Su-Shee> I've written an anti-slacker-howto a couple of years ago. every year short before german graduation period, I get mails from desparate students ;)

[10:49] *** soupdragon left
[10:52] <mberends> Su-Shee: can you give a 3-sentence English translation of it?

[10:54] <Su-Shee> mberends: "slacking is not cool, people who naturally don't slack don't overwork themselves but get the dosage and rythm of getting things done right, start with small, very distinct tasks and the small project actually delivered is better than the grand gesture never finished" ;)

[10:55] <Su-Shee> mberends: I pm'ed a bunch of young hackers once. ;)

[10:57] <Su-Shee> mberends: and for naturally well organized people learning a foreign language is a simple calculation of "if I do this daily 20 minutes (which is what I got) then I'll know spanish rather well in a about a year".

[11:00] *** irclogbot_backup left
[11:02] <mberends> Su-Shee: thank you

[11:06] <Su-Shee> mberends: can't you read german anyway?

[11:07] <mberends> there are many circumstances where many small incremental steps are suitable. Unfortunately, some processes seem to require huge steps. Creating Perl 6 is an example. You have to break backward compatibility and start a lot afresh.

[11:07] <mberends> I do read German, carefully ;)

[11:08] *** kaare joined
[11:08] <Su-Shee> mberends: http://schreibsturm.org/antiverpeil.html

[11:08] *** kaare is now known as Guest55533

[11:08] <mberends> I asked for English because the wisdom would be good for the lurkers

[11:09] <Su-Shee> the english term is procrastination.

[11:09] <mberends> ok, that will take about half a morning to fully understand ;)

[11:11] <mberends> we use the term procrastinate in this channel when referring to preparing talks for Perl Workshops and YAPC's ;)

[11:11] <Su-Shee> I know :)

[11:12] <mberends> masak and I finished out procrastinations in the corridors of the venues, a few minutes before the scheduled start times.

[11:13] <Su-Shee> I hate working like that. 

[11:13] <mberends> deadlines have a wonderful effect of focusing the mind on what's important.

[11:14] <mberends> it is a pity that the Perl 6 development process has few deadlines. I'm glad the April deadline for Rakudo * is focusing some minds.

[11:15] <Su-Shee> oh, I like deadlines. I just don't like starting with the project when the deadline is already in sight :)

[11:15] <mberends> no, the procrastinators have deadlines very far way.

[11:16] <mberends> I am planning to attend YAPC::EU 2010 in Pisa. I have started procrastinating already.

[11:19] * Su-Shee plans to get the probabtion period finished and after that, we'll see.

[11:19] <mberends> Su-Shee: good luck with that, I hope you like the new $job

[11:20] <Su-Shee> well it's one of the rare perl jobs left. ;)

[11:21] <Su-Shee> WHERE WE WOULD LIKE TO SWITCH TO PERL 6 SOME TIME SOON. ;)

[11:23] <mberends> that's so good, to know there are eager adopters in business

[11:25] <Su-Shee> my cto really diggs perl.

[11:27] *** REPLeffect_ left
[11:27] <Su-Shee> and we're really quite modest on the module usage, so we actually _can_ switch rather easily. 

[11:28] *** REPLeffect_ joined
[11:28] <Su-Shee> anti-slacking phase I: getting vegetables now. ;)

[11:32] <mberends> Coffee first. I'm going to read the rest of that anti-procrastination later ;)

[11:41] *** kaare joined
[11:41] *** kaare is now known as Guest40832

[11:55] *** Guest55533 left
[12:10] *** jho joined
[12:13] *** REPLeffect_ left
[12:13] <jho> What would be the most elegant way to create an array with a length of $n where all the elements are initialized to a certain constant value?

[12:15] *** REPLeffect_ joined
[12:16] *** JeffreyLI joined
[12:17] *** JeffreyLI left
[12:33] *** cls_bsd left
[12:47] *** rjh left
[12:47] *** rjh joined
[12:50] *** cls_bsd joined
[12:51] *** REPLeffect_ left
[12:52] *** REPLeffect_ joined
[12:56] <mberends> rakudo: my @a="jho" xx 4; say @a.join(":");

[12:56] <p6eval> rakudo db84bc: jho:jho:jho:jho␤

[13:03] <mberends> rakudo: my $n=8; my @a="jho" xx $n; say @a.join(":");

[13:03] <p6eval> rakudo db84bc: jho:jho:jho:jho:jho:jho:jho:jho␤

[13:10] *** soupdragon joined
[13:16] *** payload1 joined
[13:17] *** payload left
[13:20] <mberends> rakudo: my $j="jho"; my $n=10; my @a=$j xx $n; @a.join(", ").say

[13:20] <p6eval> rakudo db84bc: jho, jho, jho, jho, jho, jho, jho, jho, jho, jho␤

[13:23] *** REPLeffect_ left
[13:24] *** REPLeffect_ joined
[13:28] *** orafu left
[13:28] *** orafu joined
[13:41] *** REPLeffect_ left
[13:42] *** REPLeffect_ joined
[13:48] *** iblechbot left
[13:59] *** REPLeffect_ left
[13:59] *** REPLeffect_ joined
[14:07] *** TopoMorto joined
[14:13] *** SmokeMachine joined
[14:16] *** REPLeffect_ left
[14:16] *** ruoso joined
[14:17] *** REPLeffect_ joined
[14:24] *** pmurias joined
[14:25] *** lest_away is now known as lestrrat

[14:27] *** TopoMorto left
[14:38] *** REPLeffect_ left
[14:46] *** REPLeffect_ joined
[14:46] *** cognominal joined
[14:53] *** orafu left
[14:53] *** orafu joined
[14:55] *** PZt left
[15:03] *** REPLeffect_ left
[15:03] *** REPLeffect_ joined
[15:13] <pmurias> hi

[15:14] <mberends> hi pmurias, how are things going with you? (I'm slowly developing vill)

[15:15] * pmurias is getting round to replacing m0ld with an SSA AST

[15:16] <mberends> interesting, is it difficult to convert VAST to SSA? (LLVM is SSA based)

[15:17] <pmurias> i'm not doing it as a single step

[15:18] <pmurias> i think LLVM does the variable to SSA registers conversion by itself

[15:19] <pmurias> mberends: i didn't yet get to the conversion to SSA yet, working on a flattening the AST first

[15:20] <mberends> yes you are right about LLVM register assignment.

[15:20] *** REPLeffect_ left
[15:20] *** REPLeffect_ joined
[15:22] <mberends> good luck pmurias, it seems like very difficult work to do

[15:23] <pmurias> more like steal the alogrithm from the internet kind of task

[15:23] <pmurias> ;)

[15:23] *** Chillance joined
[15:23] *** cotto joined
[15:24] <mberends> .oO( oh, the internet. why didn't I think of that? )

[15:27] <Su-Shee> too obvious. ;)

[15:28] <mberends> I did try some software from the internet once. After that, the computer needed a re-installation of Windows ;)

[15:28] *** astoria joined
[15:29] <Su-Shee> I've never had windows. I went from DOS to Unix. ;)

[15:30] <frettled> Sounds like the computer needed a installation of Linux, not a re-installation of Windows.  ;)

[15:31] <mberends> yes, that fixed it

[15:31] <Su-Shee> you could have used OS/2!

[15:31] <huf> he couldda used an anal torture device too

[15:31] <mberends> now, all software from the internet Just Works (tm)

[15:32] <Su-Shee> lucky us. :)

[15:33] <mberends> the computer did want to try OS/2, but OS/2 did not want to try that computer

[15:35] <Su-Shee> I've tried it once, but I was already hooked on linux and the internet.

[15:47] <pugs_svn> r29438 | mberends++ | [vill] partly working graph_traverse and yaml_compose_roundtrip 

[15:52] *** Psyche^ joined
[15:53] *** soupdragon left
[15:53] *** soupdragon joined
[15:53] *** Patterner left
[15:53] *** Psyche^ is now known as Patterner

[15:54] *** REPLeffect_ left
[15:55] *** REPLeffect_ joined
[16:03] <pmurias> mberends: JavaScript::V8 is documented well enough?

[16:08] <mberends> pmurias: I did have a few notes to add about the V8 lib installation, after that GCC 4.4.1 warning that became an error, and the patch you showed to fix it. Overall I'm happy, and will add a little bit for you soon.

[16:10] <mberends> pmurias: it's waiting on an opportunity to re-do the installation from scratch on a freshly installed OS. I'm thinking of playing with Ubuntu 10.4-alpha soon.

[16:12] <arnsholt> Is there someone around who could give me some pointers on PCT?

[16:13] <pmurias> arnsholt: tried asking on #parrot

[16:13] <pmurias> ?

[16:13] <arnsholt> That would of course be the good idea

[16:18] <pmurias> mberends: if you have anything about mildew installation written down, commit it and i'll try to polish it

[16:27] <diakopter> I find it disconcerting that I have to port my entire program from JS to C# just to use the allocation & call tree profiling, and then port it back to JS.

[16:33] *** Chillance left
[16:34] *** Chillance joined
[16:34] *** Baggio_ joined
[16:38] *** soupdragon left
[16:40] <diakopter> (and to prove the algorithm)

[16:43] <diakopter> I mean, I find it disconcerting that *I feel* I have to...

[16:51] <pmurias> diakopter: is there a profiler for js?

[16:52] <diakopter> the one in IE8 is quite good; I haven't checked the one in Firebug lately (or Safari/Chrome for that matter)... but 8 months ago they didn't approach IE8's stability and responsiveness

[16:53] <diakopter> there might be one in V8 I haven't yet discovered

[16:53] <diakopter> (command-line, I mean)

[16:54] *** ejs joined
[16:54] <pmurias> code.google.com/p/v8/wiki/V8Profiler?

[16:55] <diakopter> cool. sample-based

[16:56] <diakopter> pmurias: does JavaScript::V8 do anything beyond the original Acme::V8

[16:57] <diakopter> er, Acme::JavaScript I guess it was called

[16:57] <diakopter> (the original one from the Japanese forum)

[16:58] <pmurias> diakopter: not yet

[16:59] *** justatheory joined
[17:00] <diakopter> pmurias: does it build on amd64 linux?

[17:00] <pmurias> diakopter: haven't tried it

[17:00] <pmurias> don't know why it shouldn't

[17:01] <diakopter> I had to add the no-fPic or something

[17:01] <diakopter> to the original

[17:01] <diakopter> but perhaps MakeMaker takes care of that

[17:02] <pmurias> the orginal did some wird things

[17:02] <diakopter> oh

[17:04] <pmurias> diakopter: JavaScript::V8 is on CPAN

[17:13] *** nadim joined
[17:18] *** Su-Shee left
[17:19] *** astoria left
[17:19] <nadim> any introspection support yet (synopsis is unexistant and draft marked). thought I'd get the number of elements of an array (wow advanced!) and here is the list of what I tried _before_ I find out

[17:20] <nadim> length, len, WHAT, ALL, methods, scalar, Methods, METHODS, elements. Pfiuu 10 tries!

[17:20] *** astoria joined
[17:21] <mberends> nadim: @array.elems

[17:21] <nadim> mberends: thanks I found out

[17:23] * nadim really hopes there will be a "use English" mode to avoid silly shortening and wild guesses

[17:24] <nadim> anyone has done or seen a Rakudo benchmark vs P5?

[17:24] * diakopter stays quiet

[17:24] * mberends too

[17:25] <diakopter> nadim: you might search the irclogs for "microbenchmark".

[17:25] <diakopter> http://irc.pugscode.org

[17:28] *** Baggio_ left
[17:35] <nadim> google search gave better results

[17:35] <s1n> nadim: it's okay, .elems isn't overly descriptive, sounds more like you want the elements of the list and not, say, the .count or .len

[17:36] <nadim> one just has to learn the right method (even if it is not the best ever named method) but finding all the methods of an object should be trivial

[17:36] <nadim> I'd rather try one of 100 known method names than trying to find it from nothing

[17:40] <mberends> rakudo: my @a; .say for @a.^methods

[17:40] <p6eval> rakudo db84bc: delete␤Scalar␤␤shift␤Array␤exists␤splice␤push␤unshift␤pop␤item␤values␤

[17:40] *** Su-Shee joined
[17:41] <mberends> nadim: ^^

[17:42] <nadim> precisely what I was looking for. thanks

[17:42] <nadim> trying to find that in the rakudo source turned out to be less direct than I thought

[17:43] <mberends> yes that must have been hard

[17:48] <nadim> I'd be interresting to make a survey asking the community why they would switch to P6 and see if there is something else than coolness factor.

[17:50] <mberends> you would get very different answers from different subsets of the entire community.

[17:52] <nadim> sure but that's not less interresting

[17:53] <mberends> this channel does discuss such questions fairly often, and the diversity of motivations and expectations is quite wide. Even contradictory on some points.

[17:54] <pmurias> contradictory?

[17:55] <mberends> I mean different members of #perl6 have different wants, sometimes almost opposing when it comes to details.

[17:56] <pmurias> nadim: [].^methods

[17:56] <pmurias> perl6: [].^methods

[17:56] <p6eval> pugs: *** No such method in class Class: "&methods"␤    at /tmp/Nrswjm7ssA line 1, column 1 - line 2, column 1␤

[17:56] <p6eval> ..rakudo db84bc:  ( no output )

[17:56] <p6eval> ..elf 29438: Unknown rule: dotty:.^␤It needs to be added to ast_handlers.␤ at ./elf_h line 2850␤

[17:57] <pmurias> rakudo: 1.^methods

[17:57] <pmurias> rakudo: say 1.^methods

[17:57] <p6eval> rakudo db84bc:  ( no output )

[17:57] <p6eval> rakudo db84bc:

[17:57] <p6eval> ..IntpredsuccNumsignperlWHICHabsScalarComplexStrsecunpolarACCEPTSRatsinIntacosecjoinsubstsinhcosechacosechabselemsendchompindexceilingtrimp5chompasecpairssechordrandtruncatesortsqrtrindexasinintatanhcoshcosecgrepvaluescharsrootsreverseisaucfirstkvsamecasetancoscapitalizefmtbytesflipdoesp5ch…

[17:57] <pmurias> rakudo: say [1].^methods.perl

[17:57] <p6eval> rakudo db84bc: [{ ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }]␤

[17:57] <pmurias> rakudo: say 1.^methods.perl

[17:57] <p6eval> rakudo db84bc: [{ ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, {

[17:57] <p6eval> ..... }, …

[17:57] <mberends> rakudo: .say for 1.^methods

[17:57] <p6eval> rakudo db84bc:

[17:57] <p6eval> ..unpolar␤ACCEPTS␤Rat␤Int␤pred␤succ␤Num␤sign␤perl␤WHICH␤Scalar␤abs␤Complex␤Str␤sec␤p5chomp␤keys␤kv␤floor␤asech␤ord␤capitalize␤pick␤round␤evalfile␤int␤split␤match␤acosh␤words␤p5chop␤lc␤join␤sinh␤cotan␤acotan␤atan2␤reduce␤srand␤trim␤asec␤reverse␤cotanh␤isa␤polar␤:d␤:e␤ucfirst␤:f␤sech␤tan␤cos␤…

[17:59] *** justatheory left
[18:00] <pmurias> s1n: it's called elems because the mentions the unit

[18:04] <nadim> Finally I get it to do something I find logical! @a.^methods.join(' ').say

[18:04] <mberends> :)

[18:04] <nadim> although I would have liked "[say] @a.^methods" to work

[18:05] <nadim> sure but that's not less interresting

[18:06] <nadim> oops wrong window

[18:06] <mberends> rakudo: my @a; say [~] @a.^methods

[18:06] <p6eval> rakudo db84bc: shiftArraysplicepushexistsunshiftitempopvaluesdeleteScalar␤

[18:07] <nadim> no \n

[18:08] <nadim> rakudo: my @a; [say]  @a.^methods

[18:08] <p6eval> rakudo db84bc: say requires an argument at line 2, near "]  @a.^met"␤in Main (file src/gen_setting.pm, line 2593)␤

[18:08] <nadim> that's a  surprising error message. why wouldn't say get an argument?

[18:08] <mberends> nadim: that's because [say] 1, 2, 3 means something like 1 say 2 say 3

[18:10] <nadim> don't you mean say(3, say (1, 2)) ?

[18:11] <mberends> I'm not really sure, but say is not an infix operator

[18:13] <mberends> [op] is designed for binary operators such as + * ~ > etc

[18:14] <nadim> blocks should be so any non infix operator can be called like [{say}] @a

[18:14] <nadim> but maybe that's worse :)

[18:20] <nadim> IMVHO, limiting the reduction op to what infix operators can do it limiting. it also removed the idea that reduction can have side effects which is what I expected [say] @array to do. reduce to nothing from subs and having the print side effect.

[18:20] <nadim> and don't tell me side effects are not cool :)

[18:21] <mberends> there are advantages to forbidding side effects, such as freedom to evaluate multi-threaded in any order

[18:22] <huf> plus you can do 1.^methods.>>.say

[18:22] <nadim> but that's not 'do what I mean' but more 'write what I need to be able to do it in parallel' which is OK too.

[18:23] <huf> and probably a lot of other cool stuff that's like what you wanted [say] to do

[18:23] <nadim> Ilike the way you proposed

[18:24] <mberends> the people who can really justify the Perl 6 design are not here right now, unfortunately I cannot articulate the rationale very succinctly. It has already been very well thought out.

[18:25] <diakopter> std: my @a; [say]  @a.^methods

[18:25] <p6eval> std 29438: ===SORRY!===␤Two terms in a row at /tmp/VgmdRf3VIP line 1:␤------> my @a; [say]  ⏏@a.^methods␤    expecting any of:␤    infix or meta-infix␤      infix stopper␤    standard stopper␤ statement modifier loop␤  terminator␤Other potential difficulties:␤ 

[18:25] <p6eval> ..Unsupported u…

[18:25] <pmurias> nadim: you can use reduce &foo,@array;

[18:25] <diakopter> it does get an error message

[18:27] <pmurias> perl6: say(3, say (1 ,2)

[18:27] <p6eval> rakudo db84bc: say requires an argument at line 2, near "(3, say (1"␤in Main (file src/gen_setting.pm, line 2593)␤

[18:27] <p6eval> ..elf 29438: Parse error in: /tmp/TloJ2FGFey␤panic at line 1 column 0 (pos 0): Can't understand next input--giving up␤WHERE: say(3, say (1 ,2)␤WHERE:/\<-- HERE␤  STD_red/prelude.rb:99:in `panic'␤  STD_red/std.rb:76:in `scan_unitstopper'␤  STD_red/std.rb:224:in `comp_unit'␤  STD_red/std.rb:210:in

[18:27] <p6eval> ..`_UNI…

[18:27] <p6eval> ..pugs: *** ␤    Unexpected end of input␤    expecting operator, ":", "," or ")"␤    at /tmp/FEPtzJMJ4v line 2, column 1␤

[18:27] <pmurias> perl6: say(3, say (1 ,2))

[18:27] <p6eval> elf 29438, pugs, rakudo db84bc: 12␤31␤

[18:27] <diakopter> std: say(3, say (1 ,2))

[18:27] <p6eval> std 29438: ok 00:01 106m␤

[18:30] <nadim> is 'reduce &foo, @a' supposed to work like '[foo] @a'? 

[18:30] <huf> no, because [foo] @a doesnt work

[18:31] <nadim> I meant with a &foo that would be an infix operator

[18:31] <diakopter> parallel map?

[18:31] <nadim> if I declare an infox operator can't I run it with [] or reduce?

[18:32] <pmurias> nadim: yes you can

[18:33] <pmurias> nadim: [+] @a is reduce &infix:<+>,@a

[18:33] <nadim> perl6: my @a; reduce &say, @a.^methods

[18:33] <p6eval> pugs: *** No such method in class Class: "&methods"␤    at /tmp/mmF5FXk4Qt line 1, column 21 - line 2, column 1␤

[18:33] <p6eval> ..rakudo db84bc: Unknown introspection value 'pos_required'␤in Main (file <unknown>, line <unknown>)␤

[18:33] <p6eval> ..elf 29438: /home/p6eval/pugs/misc/STD_red/match.rb:141:in `block in to_dump0': undefined method `to_dump0' for true:TrueClass (NoMethodError)␤   from /home/p6eval/pugs/misc/STD_red/match.rb:140:in `each'␤      from /home/p6eval/pugs/misc/STD_red/match.rb:140:in `map'␤        from

[18:33] <p6eval> ../home/p6eval/pugs/misc/STD_red/ma…

[18:33] <nadim> interresting the error message is completely different

[18:33] <pmurias> could elf be remove from perl6: ?

[18:34] <pmurias> * removed

[18:35] <pmurias> my @a; reduce &say,[7,8,9];

[18:35] <pmurias> perl6: my @a; reduce &say,[7,8,9];

[18:35] <p6eval> rakudo db84bc: Unknown introspection value 'pos_required'␤in Main (file <unknown>, line <unknown>)␤

[18:35] <p6eval> ..elf 29438: /home/p6eval/pugs/misc/STD_red/match.rb:141:in `block in to_dump0': undefined method `to_dump0' for true:TrueClass (NoMethodError)␤   from /home/p6eval/pugs/misc/STD_red/match.rb:140:in `each'␤      from /home/p6eval/pugs/misc/STD_red/match.rb:140:in `map'␤        from

[18:35] <p6eval> ../home/p6eval/pugs/misc/STD_red/ma…

[18:35] <p6eval> ..pugs: *** Cannot reduce() using a unary or nullary function.␤    at /tmp/gOFsD3aRRK line 1, column 8-27␤

[18:36] *** eiro left
[18:36] <pmurias> nadim: say doesn't take a fixed number of arguments

[18:36] <pmurias> rakudo: my @a;sub foo($a,$b) {say $a,$b};reduce &foo,[7,8,9];

[18:36] <p6eval> rakudo db84bc:  ( no output )

[18:36] <pmurias> rakudo: my @a;sub foo($a,$b) {say $a,$b};say reduce &foo,[7,8,9];

[18:36] <p6eval> rakudo db84bc: 7 8 9␤

[18:37] <pmurias> rakudo: my @a;sub foo($a,$b) {say $a,$b};reduce &foo,[7,8,9];

[18:37] <p6eval> rakudo db84bc:  ( no output )

[18:38] <nadim> pmurias: reduce &infix:<+> ,@a doesn't work.

[18:39] <cognominal> rakudo:  my %a; %a<b><c>='d'; 

[18:39] <p6eval> rakudo db84bc: Method 'postcircumfix:{ }' not found for invocant of class 'Failure'␤in Main (file src/gen_setting.pm, line 324)␤

[18:39] <cognominal> ng:  my %a; %a<b><c>='d'; 

[18:39] <p6eval> ng 4ccc5a: Cannot assign to readonly value␤current instr.: '&infix:<=>' pc 13793 (src/builtins/Junction.pir:113)␤

[18:40] <cognominal> std:  my %a; %a<b><c>='d'; 

[18:40] <p6eval> std 29438: ok 00:01 107m␤

[18:40] *** rdice joined
[18:40] <cognominal> std:  my %a; %a<b><c>='d'; say %a<b><c> 

[18:40] <p6eval> std 29438: ok 00:01 107m␤

[18:40] <cognominal> p6eval:  my %a; %a<b><c>='d'; say %a<b><c> 

[18:41] <diakopter>  perl6:

[18:41] <mberends> diakopter:

[18:44] *** iblechbot joined
[18:44] <cognominal> rakudo:  my %a; %a<b> = {};  %a<b><c>='d'; 

[18:44] <p6eval> rakudo db84bc:  ( no output )

[18:44] <cognominal> rakudo:  my %a; %a<b> = {};  %a<b><c>='d';  say %a<b><c>

[18:45] <p6eval> rakudo db84bc:  ( no output )

[18:47] *** pdcawley left
[18:47] *** eiro joined
[18:47] *** ejs1 joined
[18:48] *** ejs left
[18:51] <pmurias> nadim: it should, it seems &reduce is bugged

[18:53] *** nihiliad joined
[18:53] *** pdcawley joined
[19:17] *** astoria left
[19:20] *** ejs1 left
[19:21] *** Astoria` joined
[19:31] <pugs_svn> r29439 | diakopter++ | [sprixel] complete the non-char-by-char inlined edition of lit() (literal text). port the both() (stateless/deterministic edition) and end() combinators/emitters from sprixel# 

[19:42] *** REPLeffect_ left
[19:42] *** REPLeffect_ joined
[19:42] <cognominal> Happy Palindrome Day! 01022010

[19:44] <diakopter> I thought today was 20100102

[19:45] <diakopter> ;)

[19:50] <cognominal> here it would be more like 02012010

[19:57] *** nihiliad left
[20:01] *** orafu left
[20:01] *** [synth] joined
[20:01] *** orafu joined
[20:05] *** synth left
[20:07] *** PZt joined
[20:09] *** simcop2387 left
[20:13] *** ashizawa left
[20:13] *** simcop2387 joined
[20:20] *** ejs joined
[20:20] *** rdice left
[20:38] *** stephenlb joined
[20:42] *** Su-Shee_ joined
[20:42] *** Su-Shee left
[20:42] *** Su-Shee_ is now known as Su-Shee

[20:45] *** [synth] left
[20:47] <nadim> pmurias: how do you report bugs? first run of P6 and I already find weird stuff. my luck.

[20:50] *** snearch_ joined
[20:51] <mberends> nadim: see http://www.rakudo.org/how-to-help

[20:53] <mberends> nadim: if you have time, try to find out if your bug is already being tracked, and append your experience. But if you have no time, nobody minds duplicate reports all that much.

[21:00] *** jaldhar_ left
[21:12] *** bytbox joined
[21:14] *** bytbox left
[21:17] <pugs_svn> r29440 | mberends++ | [perl6.org/compilers] add Perlito 

[21:25] *** meppl left
[21:55] *** cognominal left
[21:56] *** justatheory joined
[21:57] *** cognominal joined
[22:08] *** orafu left
[22:08] *** orafu joined
[22:11] *** snearch_ left
[22:21] *** wormphlegm joined
[22:23] *** wormphlegm left
[22:29] <pugs_svn> r29441 | diakopter++ | [perl6.org] update the Sprixel and Pugs entries. Here's what I added to the Pugs entry: but new releases for successive versions of ghc are 

[22:29] <pugs_svn> r29441 | published to <a href="http://hackage.haskell.org/package/Pugs">Hackage</a>. The most recent (6.2.13.15 as of this writing) was released 2009-12-16.

[22:30] <mberends> does our pugs: evalbot get those Hackage updates?

[22:31] <diakopter> actually

[22:32] <diakopter> I think when moritz_ built it the last time (2 months ago?) when we moved hosting servers for p6eval, I think he did use the latest release at that time.

[22:33] <mberends> nobody gave me a Haskell book for Xmas :(

[22:57] <pmurias> mberends: real world haskell is free online (realworldhaskell.org)

[22:58] <mberends> pmurias: hey, that's nice!

[22:58] *** iblechbot left
[23:08] <mberends> sleep &

[23:08] *** mberends left
[23:09] *** xomas joined
[23:12] *** xomas_ left
[23:21] *** ejs left
[23:23] *** Su-Shee left
[23:28] *** Guest40832 left
[23:38] *** ssm left
[23:38] *** parduncia left
[23:38] *** eiro left
[23:38] *** zibri left
[23:38] *** zykes- left
[23:38] *** sjohnson left
[23:42] *** avar left
[23:42] *** eiro joined
[23:42] *** parduncia joined
[23:42] *** ssm joined
[23:42] *** sjohnson joined
[23:42] *** zykes- joined
[23:42] *** zibri joined
[23:42] *** irc.freenode.net sets mode: +o sjohnson

[23:43] *** avar joined
[23:43] *** pmurias left
