[00:02] *** am0c^ joined
[00:02] <sorear> A language like C++, because of its weak metamodel, only allows a single class per method, and thus a method can appear at most once in a dispatch list and (__function__, typeid(*this)) uniquely identifies the "next" method

[00:02] <sorear> Perl 6 doesn't have that, so it seems like I'd have to allocate storage for the nextsame iterator on every method call

[00:10] *** Aleph_ is now known as Dunearhp

[00:20] *** qw3rty joined
[00:37] *** risou joined
[00:40] <mfollett> Not that it really matters, but out of curiosity why is '.?' and such an operator instead of '.' being an operator and '?' being a metaoperator that operates on '.'?

[00:45] *** qw3rty left
[00:45] *** redicaps joined
[00:46] *** redicaps left
[01:02] *** pythonian4000 is now known as pythonian4000afk

[01:06] *** QinGW joined
[01:16] *** meppl left
[01:25] *** masonkramer left
[01:25] *** masonkramer joined
[01:38] *** ggoebel left
[01:44] *** ggoebel joined
[01:46] *** ggoebel left
[01:52] *** mfollett left
[01:52] *** mfollett joined
[01:55] *** silug joined
[01:55] <mfollett> Has try.rakudo.org always had the chapters?

[02:01] *** Eevee joined
[02:09] *** meppl joined
[02:11] <dukeleto> mfollett: probably for performance reasons, concerning .?

[02:11] <sorear> mfollett: because . isn't a binary operator

[02:12] <sorear> mfollett: a binary operator takes two arguments, both of which can logically stand on their own

[02:12] <sorear> in $foo.methodname, $foo can stand on its own, but methodname can't

[02:12] <mfollett> sorear:  I didn't know that a metaoperator could only operate on binary operators

[02:12] <sorear> . is syntactically a postfix operator, because only the left side can stand on its own

[02:13] <mfollett> sorear:  hyperoperator is a meta operator and can operate on the method invocation operator

[02:13] <sorear> so metaoperators always attach like $foo>>.method

[02:13] <sorear> never like $foo.>>method

[02:13] <mfollett> sorear:  oh, I see

[02:14] <sorear> as for why $foo*.method isn't used, I can only ask - what would $foo*++ mean?

[02:14] <sorear> or any non-method operator

[02:16] <mfollett> sorear:  I guess it would depend on how many ways $foo could do postfix<++>($x)

[02:18] <mfollett> sorear:  I thought $foo++ was the same as $foo.++

[02:18] <mfollett> sorear:  or, wait, I may have just confused mysel

[02:18] <mfollett> f

[02:31] *** aesop left
[02:35] *** aesop joined
[02:37] *** risou left
[02:37] *** risou_ joined
[02:38] *** risou_ left
[02:39] *** risou joined
[02:40] *** pythonian4000afk is now known as pythonian4000

[02:42] *** pythonian4000 is now known as pythonian4000afk

[02:44] *** agentzh joined
[02:58] *** eternaleye joined
[02:58] *** Atle joined
[02:58] *** eternaleye left
[02:58] *** eternaleye joined
[03:26] *** pythonian4000afk is now known as pythonian4000

[03:35] *** meppel joined
[03:36] *** meppel left
[03:37] *** risou_ joined
[03:39] *** meppl left
[03:39] *** risou left
[03:42] *** meppl joined
[03:53] *** tadzik left
[03:54] *** Atle left
[03:54] *** satyavvd joined
[04:08] *** rainy_day joined
[04:21] *** f00li5h is now known as f00li5h[HireMe]

[04:25] *** revdiablo joined
[04:25] *** revdiablo left
[04:25] *** revdiablo joined
[04:27] *** QinGW1 joined
[04:29] *** QinGW left
[04:36] *** ruoso left
[04:37] *** risou joined
[04:39] *** risou_ left
[04:54] *** plobsing left
[05:00] *** justatheory joined
[05:02] <dalek> niecza/master: f65d43c | sorear++ | lib/Kernel.cs:

[05:02] <dalek> niecza/master: Keep the full dispatch list during method calls

[05:02] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/f65d43c4d1f8b339efd8a69e7551e12a399bb0c6

[05:02] <dalek> niecza/master: c6bd89e | sorear++ | / (2 files):

[05:02] <dalek> niecza/master: Implement nextsame

[05:02] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/c6bd89e5da855f112acf50b156a725d9495258c6

[05:15] *** Chillance left
[05:22] *** Mowah joined
[05:23] *** justatheory left
[05:34] *** envi joined
[05:36] <sorear> How does automatic generation of proto methods work?

[05:38] *** kaare joined
[05:39] *** kaare is now known as Guest85408

[05:39] *** rainy_day left
[05:39] *** Guest85408 is now known as kaare_

[05:40] *** rainy_day joined
[05:40] *** rainy_day left
[05:49] *** dju left
[05:51] *** sftp left
[05:52] *** sftp joined
[05:53] *** envi left
[05:56] *** envi joined
[06:04] *** mfollett left
[06:08] *** sftp left
[06:09] *** Raynes left
[06:13] *** risou left
[06:13] *** risou_ joined
[06:14] *** uniejo joined
[06:20] *** sftp joined
[06:28] *** sftp_ joined
[06:29] *** sftp left
[06:36] *** cosimo left
[06:38] *** jjore joined
[06:38] *** risou joined
[06:40] *** nymacro left
[06:40] *** risou_ left
[06:43] *** jjore left
[06:45] *** jjore joined
[06:49] *** nymacro joined
[06:54] <mathw> phenny: tell masak your presentation looks awesome, but what software did you use to actually present it? OS X's Preview?

[06:54] <phenny> mathw: I'll pass that on when masak is around.

[06:56] *** baux joined
[06:58] *** cosimo joined
[07:04] *** cosimo left
[07:12] *** nym joined
[07:14] *** araujo joined
[07:14] *** araujo left
[07:14] *** araujo joined
[07:14] *** Axius joined
[07:15] *** nymacro left
[07:16] *** cosimo joined
[07:20] <dalek> niecza/master: 087263f | sorear++ | lib/Kernel.cs:

[07:20] <dalek> niecza/master: Some low-level multi support

[07:20] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/087263f7228e8429e7f392401e895dd3731e7b52

[07:20] <dalek> niecza/master: 6393299 | sorear++ | / (3 files):

[07:20] <dalek> niecza/master: Implement slurpy hashes

[07:20] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/639329998b31decad70c8782ad2d92ba48a03fd4

[07:21] *** cosimo left
[07:21] *** cosimo joined
[07:26] *** Axius left
[07:43] *** daxim joined
[07:45] *** QinGW joined
[07:46] *** QinGW1 left
[07:50] *** timbunce joined
[08:04] *** risou left
[08:04] *** risou_ joined
[08:04] *** pythonian4000 is now known as pythonian4000afk

[08:31] *** dakkar joined
[08:36] *** xinming_ is now known as xinming

[08:43] *** phenny left
[08:43] *** IllvilJa joined
[08:44] <sorear> seen tylercurtis

[08:44] <aloha> tylercurtis was last seen in #perl6 2 days 19 hours ago joining the channel.

[08:45] *** phenny joined
[08:45] *** ChanServ sets mode: +v phenny

[08:52] *** araujo left
[08:56] *** jlaire left
[08:58] *** jlaire joined
[08:58] *** daxim left
[09:00] <dalek> niecza/master: a668022 | sorear++ | / (3 files):

[09:00] <dalek> niecza/master: Start on the documentation rewrite

[09:00] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/a66802273d9100135dc57d82ad1e70a0364001e8

[09:02] *** daxim joined
[09:28] *** araujo joined
[09:47] *** ggoebel joined
[10:05] *** QinGW left
[10:47] *** wamba joined
[11:01] *** zby_home_ joined
[11:08] *** ggoebel left
[11:08] *** Italian_Plumber joined
[11:09] *** ggoebel joined
[11:35] *** satyavvd left
[11:39] <flussence> whoa, who made my test run 30 minutes shorter today?

[11:39] <moritz_> flussence: I've removed one test in which a dies_ok only succeeded by running into the recursion limit

[11:42] <flussence> oh, the arrays thing?

[11:42] <moritz_> typed arrays, yes

[11:53] *** nadim left
[11:55] <moritz_> Use of uninitialized value in numeric context  in 'MapIter::reify' at line 1

[11:55] <moritz_> from the spectest output

[11:55] <moritz_> S03-metaops/hyper.rakudo

[11:55] <moritz_> seems to point to a rakudobug, if you ask me

[11:55] <moritz_> (even if the warning is genuine, it shouldn't come from line 1)

[11:56] <mathw> whoa, haskell interpreter written in Javascript

[12:16] *** masak joined
[12:16] <masak> \o/

[12:16] <phenny> masak: 06:54Z <mathw> tell masak your presentation looks awesome, but what software did you use to actually present it? OS X's Preview?

[12:18] *** MayDaniel joined
[12:18] <masak> mathw: yes. with 'open *.pdf', Preview easily allows me to jump between individual slides without needing to merge them into one PDF.

[12:19] <masak> and thanks. :) all the nice feed back on the presentation system makes me want to use it again, soon.

[12:19] * masak backlogs

[12:26] *** nadim joined
[12:30] *** smash left
[12:33] *** nym left
[12:36] *** MayDaniel left
[12:38] *** timbunce left
[12:41] *** risou_ left
[12:42] <masak> rakudo: my @*a; subset A of Int where { @*a.push("A") }; subset B of A where { @*a.push("B") }; 42 ~~ B; say @*a # discovered and RT'd yesterday

[12:42] <p6eval> rakudo 5bdbd4: OUTPUT«BB␤»

[12:43] <masak> jnthn described it as "a place where some cheating catches up with us".

[12:44] <moritz_> well, I think the YOU_ARE_HERE thing in rakudo needs some work

[12:44] <moritz_> masak: btw I'm nearly sure that the '&say not found in where-block' is a dupe

[12:45] <moritz_> masak: there's alread a bug report for not being able to use scalar lexicals in where-blocks

[12:46] <masak> moritz_: thanks. I'll have a look andthen merge. :)

[12:48] *** risou joined
[12:50] <masak> indeed. this seems to be the new ticket's old twin: http://rt.perl.org/rt3/Ticket/Display.html?id=77356

[12:50] * masak merges

[12:51] <masak> moritz_++

[12:51] <moritz_> masak++ # finding the ticket

[12:52] <masak> RT isn't so bad once one bends with it rather than against it. :)

[12:53] <moritz_> masak: re RT #78322, is the order actually specced?

[12:53] <masak> moritz_: don't think so; but I convinced jnthn that only one order makes sense.

[12:53] <masak> narrower subset types "presuppose" the constraints of wider ones.

[12:54] <masak> very much like binary boolean ops && || allows one to "presuppose" their lhs (or their negation, as it were)

[12:55] <masak> s/as it were/depending/ :)

[12:55] <moritz_> fwiw, Eiffel has two 'and' operators, one short circuiting, one where the order of execution is undefined

[12:56] <masak> a bit like ?&, then :)

[12:56] <masak> (no pun intended)

[12:58] *** PerlPilot is now known as PerlJam

[13:08] *** Trashlord left
[13:11] *** Trashlord joined
[13:13] *** Axius joined
[13:16] *** nymacro joined
[13:18] *** snearch joined
[13:19] *** Patterner left
[13:20] *** Psyche^ joined
[13:20] *** Psyche^ is now known as Patterner

[13:20] <masak> yesterday I told jnthn about my plans to put Yapsi on an STD.pm6 foundation, and how I still haven't solved the problem of getting the STD.pm6 output into Perl 6 rapidly and reliably. he suggested that I use Rakudo's Perl 6 grammar instead. now I can't remember what I thought the advantage of using STD.pm6 would be. :)

[13:21] <moritz_> better error messages

[13:21] <moritz_> parsing more things than rakudo (like heredocs)

[13:21] <moritz_> closer to the spec :-)

[13:22] *** nadim left
[13:22] *** nadim joined
[13:22] <moritz_> rakudo: say Perl6::Grammar.parse('1').WHAT

[13:22] <p6eval> rakudo 5bdbd4: OUTPUT«Regex::Match()␤»

[13:22] *** wamba left
[13:22] *** wamba joined
[13:23] <mathw> masak: What I really liked about your presentation system is that it has this wonderful aesthetic idea to it. I didn't have time to look at it properly though - what's the source file? Inkscape SVG marked up with metadata?

[13:23] <moritz_> I don't know how to get Match objects out of it, and dealing with Regex::Match is a pain

[13:24] <masak> mathw: source file is in the github repo, named canvas.svg. almost all the "metadata" happens to be objects in the SVG. I only added a few .class attributes manually.

[13:24] <mathw> nice

[13:24] <mathw> best to keep these things as simple as possible

[13:24] <masak> moritz_: oh. there you go, then. thanks for reminding me. :)

[13:25] <masak> mathw: I could make the whole presentation from within Inkscape. that felt liberating.

[13:25] <moritz_> masak: hasn't ingy written a yaml loader? I think STD exports YAML....

[13:25] <mathw> and it looked gorgeous

[13:25] <mathw> so fluid

[13:25] *** masonkramer left
[13:25] <masak> moritz_: he's started, but I haven't seen a finished product.

[13:26] <masak> moritz_: do you think using Blizkost might work?

[13:26] <mathw> although it's possible do that kind of thing in Powerpoint or Impress (although those transitions probably aren't possible), people tend to get stuck in the default slide layouts. Treating it all as one giant SVG breaks you away from that.

[13:26] <masak> mathw: exactly.

[13:26] *** lamstyle left
[13:27] <masak> mathw: I expect to learn to exploit the spatial aspect more as I make more presentations.

[13:27] <mathw> I must see if I can learn some lessons from it for my next presentation - but since that's a work thing, it's going to be in Powerpoint again. Still, I can do something a bit more fun perhaps :)

[13:27] <masak> best of luck.

[13:27] <mathw> in the mean time... I have software to break

[13:27] <mathw> and a compiler to befuddle

[13:29] *** justatheory joined
[13:31] *** reqamst joined
[13:33] *** kaare_ left
[13:34] *** justatheory left
[13:34] *** plobsing joined
[13:39] *** Axius left
[13:40] *** risou left
[13:43] *** risou joined
[13:54] *** ruoso joined
[13:56] *** timbunce joined
[13:57] <masak> rakudo: sub foo($x, $y) { 2 * $x + $y }; say foo(5, 32)

[13:57] <p6eval> rakudo 5bdbd4: OUTPUT«42␤»

[13:57] <masak> rakudo: sub infix:<o>(&f, &g) { -> $x { f g $x } }; my &foo = -> $x { -> $y { $x + $y } } o -> $z { 2 * $z }; say foo(5)(32)

[13:57] <p6eval> rakudo 5bdbd4: OUTPUT«42␤»

[13:57] <masak> inspired by http://blog.plover.com/prog/haskell/pointfree.html :)

[14:01] *** alester left
[14:01] *** araujo left
[14:08] <masak> time to go catch a plane.

[14:08] *** masak left
[14:09] *** uniejo left
[14:14] *** snearch left
[14:17] *** lamstyle joined
[14:22] *** MayDaniel joined
[14:25] <moritz_> rakudo: die 'foo'

[14:25] <p6eval> rakudo 5bdbd4: OUTPUT«foo␤  in main program body at line 22:/tmp/Y7b64i5XMs␤»

[14:25] <moritz_> rakudo: my $x; my $x

[14:25] <p6eval> rakudo 5bdbd4: OUTPUT«===SORRY!===␤Redeclaration of symbol $x at line 22, near ""␤»

[14:25] <moritz_> missing filename

[14:25] *** lamstyle left
[14:27] *** agentzh left
[14:30] *** MayDaniel left
[14:39] *** justatheory joined
[14:40] *** eternaleye left
[14:42] *** risou left
[14:42] *** silug left
[14:46] *** timbunce left
[14:52] *** risou joined
[14:58] *** thepler joined
[15:06] *** timbunce joined
[15:08] *** timbunce left
[15:22] *** timbunce_ joined
[15:24] *** timbunce_ left
[15:26] *** araujo joined
[15:26] *** araujo left
[15:26] *** araujo joined
[15:26] *** MayDaniel joined
[15:28] *** timbunce_ joined
[15:31] *** timbunce_ is now known as timbunce

[15:37] *** tadzik joined
[15:39] <tadzik> hello!

[15:39] *** bluescreen left
[15:41] *** risou_ joined
[15:42] *** bluescreen joined
[15:42] *** risou left
[15:43] <moritz_> hi tadzik 

[15:47] *** plobsing left
[15:50] *** estrabd_ joined
[15:51] *** BinGOs left
[15:51] *** estrabd left
[15:51] *** BinGOs joined
[15:51] *** BinGOs left
[15:51] *** BinGOs joined
[15:54] *** lamstyle joined
[16:00] *** lamstyle left
[16:02] *** timbunce_ joined
[16:03] *** pyrimidine joined
[16:04] *** timbunce_ left
[16:05] *** timbunce left
[16:05] *** justatheory left
[16:08] *** Entonian joined
[16:16] *** _kaare joined
[16:16] *** baux left
[16:17] *** ggoebel left
[16:19] <bbkr> rakudo: say ("a".."f",0..9).pick(56, :replace)

[16:19] <p6eval> rakudo 5bdbd4: OUTPUT«136bcda70258ef49␤»

[16:20] <bbkr> hmm, bug? 56 chars are expected with "replace", right?

[16:21] *** jhuni left
[16:22] <tadzik> rakudo: say ("a".."f",0..9).roll(56)

[16:22] <p6eval> rakudo 5bdbd4: OUTPUT«7eeee0ed00f7cc86c8f4a3c83b75ac1678da4163d4de690c82e2a781␤»

[16:22] <bbkr> tadzik++

[16:22] <tadzik> but it looks weird indeed. I mean, pick :replace

[16:23] <bbkr> maybe pick with replace disappeared from spec when "roll" was implemented? checking...

[16:23] <tadzik> looks like pick takes no :replace, but why doesn't it complain then?

[16:23] <tadzik> rakudo: say ("a".."f",0..9).pick(56, :pbrrr)

[16:23] <p6eval> rakudo 5bdbd4: OUTPUT«7def0a92bc518346␤»

[16:23] <tadzik> neh

[16:23] <baest> older versions of rakudo returns 56 chars with above pick

[16:24] <bbkr> yep, spec change

[16:24] <bbkr> "pick takes a list or array of values and returns a random selection of elements from the list (without replacement; see roll  for dice roll aka replacement semantics)"

[16:24] <tadzik> rakudo: sub foo() {}; foo(:asasasa); say 'alive'

[16:24] <p6eval> rakudo 5bdbd4: OUTPUT«Unexpected named parameter 'asasasa' passed␤  in 'foo' at line 1:/tmp/OpiyRuTf2C␤  in main program body at line 22:/tmp/OpiyRuTf2C␤»

[16:24] <tadzik> weird

[16:25] <bbkr> clear now - spec has changed. thanks for help :)

[16:26] <tadzik> bbkr++ # bugfinding

[16:28] *** Entonian left
[16:28] <moritz_> not a bug

[16:28] <moritz_> subs != methods

[16:28] <moritz_> rakudo: say pick(<a b c>, 2, :foobar)

[16:28] <p6eval> rakudo 5bdbd4: OUTPUT«Unexpected named parameter 'foobar' passed␤  in 'pick' at line 1764:CORE.setting␤  in main program body at line 22:/tmp/sBV37nhTMr␤»

[16:29] <tadzik> why do methods always allow named params?

[16:30] <bbkr> who maintains perl6advent.wordpress.com ? in http://perl6advent.wordpress.com/2009/12/15/day-15-pick-your-game/ pick(Int, :replace) can be replaced by roll() to keep up with spec. Simple change that prevents confusion.

[16:30] <tadzik> I can change that, just lemee get some pizza

[16:31] <bbkr> awesome :)

[16:32] <moritz_> bbkr: I can also give you edit access, if you have (or get) a wordpress.com account and tell me your email address

[16:33] *** alester joined
[16:37] <bbkr> moritz_: i don't have one, currently i'm too busy at work to spare some time for Rakudo :(

[16:37] <moritz_> that's OK too

[16:38] *** mberends joined
[16:42] *** risou joined
[16:43] *** timbunce joined
[16:43] *** risou_ left
[16:46] *** Entonian joined
[16:50] *** silug joined
[16:55] <bbkr> how can I convert Str to printable hex values? I'm looking for something that will work as 'print unpack("H*", "abc")' P5 code or mysql HEX() function.

[16:55] *** ggoebel joined
[16:56] <moritz_> rakudo: say 'abc'.comb».char».fmt('%x')

[16:56] <p6eval> rakudo 5bdbd4: OUTPUT«Method 'char' not found for invocant of class 'Str'␤  in main program body at line 22:/tmp/BjKMUSaljI␤»

[16:56] <moritz_> rakudo: say 'abc'.comb».chr».fmt('%x')

[16:56] *** masonkramer joined
[16:57] <p6eval> rakudo 5bdbd4: OUTPUT«000␤»

[16:57] <moritz_> that was less than impressive :-)

[16:57] <moritz_> rakudo: say 123.fmt('%x')

[16:57] <p6eval> rakudo 5bdbd4: OUTPUT«7b␤»

[16:57] <moritz_> rakudo: say 123.fmt('%02x')

[16:57] <p6eval> rakudo 5bdbd4: OUTPUT«7b␤»

[16:58] <moritz_> rakudo: say 'abc'.comb».ord».fmt('%02x')

[16:58] <p6eval> rakudo 5bdbd4: OUTPUT«616263␤»

[16:58] <bbkr> \o/

[16:58] <bbkr> moritz++

[16:59] <diakopter> rakudo: say 'abc'.ord».fmt('%02x')

[16:59] <p6eval> rakudo 5bdbd4: OUTPUT«616263␤»

[17:00] <moritz_> diakopter++

[17:08] *** silug left
[17:09] <bbkr> P6 is awesome for "helper oneliners" - code that does useful stuff but doesn't go to production machines itself. We use PERL in company for 10 years and I have to say that P6 can be considered as "reliable" for many side-tasks now. That's huge progress :)

[17:12] *** estrabd_ is now known as estrabd

[17:13] <szbalint> Yes, I'm using P6 for production side tasks aswell (git hooks, reporting and monitoring scripts)

[17:13] <moritz_> \o/

[17:18] *** dakkar left
[17:25] *** ggoebel left
[17:26] <PerlJam> bbkr, szbalint: that sounds like a great topic for a short article or a whole series of blog posts.

[17:26] *** isBEKaml joined
[17:26] <isBEKaml> hi,6folks! 

[17:31] <dukeleto> isBEKaml: good *

[17:31] <moritz_> o/

[17:32] <tadzik> hi isBEKaml!

[17:32] <szbalint> PerlJam: indeed.

[17:32] <moritz_> 'make spectest_smolder' fails at the submission step

[17:32] <moritz_> curl: (26) failed creating formpost data

[17:32] <moritz_> because rakudo_test_run.tar.gz is missing

[17:35] <bbkr> PerlJam: we recently started work on publishing Dynamic Content grammar in Perl6 (that's our language that allows to personalize email correspondence - http://dev.getresponse.com/dc-doc/ ). Once it is finished I'll ask management if I can write real-life-perl6-usage-testimonial to publish on blog.

[17:35] <isBEKaml> I was chomping on last night's chomp benchmarks, and I got a question. How does captures compare against substr  especially when trying to get the last character out of any arbitrary length string? 

[17:35] <PerlJam> bbkr++ awesome!

[17:36] <isBEKaml> (it sounds like a good benchmark exercise - but I'm looking around for ideas)

[17:38] <isBEKaml> dukeleto: good *. :) is String.reverse making into parrot again anytime soon?

[17:39] <dalek> rakudo: e2740b8 | moritz++ | build/Makefile.in:

[17:39] <dalek> rakudo: add smoke archive to list "clean" make target

[17:39] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/e2740b8dfee3d6a593123a7ce650b47cbb072d98

[17:43] *** daxim left
[17:43] *** risou left
[17:46] *** risou joined
[17:46] <dukeleto> isBEKaml: i don't know about "again" because I don't know if it was ever there. But I will try to make String.reverse happen

[17:46] *** araujo left
[17:47] <moritz_> it was there.

[17:47] <isBEKaml> dukeleto: iirc, it was there earlier and vanished . :/

[17:47] <dukeleto> moritz_: really? I am baffled as to why it is no longer there. Was it removed as a deprecation? Or did it vanish?

[17:48] <dukeleto> moritz_: because if it vanished, that is a serious breach of our deprecation policy

[17:48] <dukeleto> moritz_: perhaps a svn merge ate it. But I don't see any docs for it either, which makes me think someone did it on purpose

[17:50] <moritz_> dukeleto: somebody pasted a link to an example or benchmark in PIR that commented that .reverse being gone, it had to iterate over the characters

[17:50] <dukeleto> Author: darbelo <darbelo@d31e2699-5ff4-0310-a27c-f18f2fbe73fe>

[17:50] <dukeleto> Date:   Tue May 4 15:17:00 2010

[17:50] <dukeleto> Obliterate the 'reverse' method on String PMC's.

[17:50] <dukeleto> that was Parrot r46290

[17:52] <isBEKaml> dukeleto: there was an example PIR that clued me in on the reverse removed from the api - but I was confused when I saw that it's specced/defined in PDD28

[17:54] <dukeleto> isBEKaml: i think it was removed because it modifies it's argument

[17:56] <moritz_> why not have it return a reversed copy?

[17:57] <dukeleto> moritz_: that is what I would imagine it would be changed to. I don't see a deprecation notice, so I am thinking that perhaps it was removed incorrectly

[17:57] <isBEKaml> I think what dukeleto was trying to say was - it was removed because it didn't conform to spec. 

[17:57] <dukeleto> isBEKaml: kind of.

[17:58] <dukeleto> isBEKaml: things that modify their arguments are hard to optimize, so parrot has been trying to minimize ops/vtables that modify their arguments

[17:59] <dukeleto> they are so-called "immutable strings" now. 

[17:59] <dukeleto> I think we will add String.reverse back in, that does not modify it's argument. But I need to check with parrot-dev first

[18:00] <isBEKaml> dukeleto: I see. Last night, I was benchmarking chomp against substr. One of the ways thrown around was using flip, which just performed horribly (pure agony)

[18:01] <isBEKaml> if reverse made it to parrot, I'd happily take that around for flip. 

[18:01] <moritz_> isBEKaml: flip is now implemented as split.reverse.join

[18:01] <moritz_> and split('') iterates and uses substr

[18:01] <isBEKaml> moritz_: I saw that too. Perhaps, that was why it performs poorly. 

[18:02] <moritz_> s/Perhaps/Surely/

[18:02] <isBEKaml> 3 costly calls wrapped into a single method. 

[18:03] <dukeleto> Parrot has a StringIterator PMC that can be traversed in a "forward" or "reverse" directions.

[18:03] <dukeleto> But I still think String PMCs should have a reverse method.

[18:04] *** timbunce left
[18:06] <isBEKaml> dukeleto++

[18:07] *** risou left
[18:07] *** risou_ joined
[18:08] *** tadzik left
[18:09] *** dual left
[18:09] *** ggoebel joined
[18:10] *** timbunce joined
[18:10] *** b0m1ro joined
[18:10] *** fridim joined
[18:13] *** b0m1ro left
[18:14] *** dual joined
[18:26] <dalek> roast: fe777cc | moritz++ | S02-builtin_data_types/instants-and-durations.t:

[18:26] <dalek> roast: [instants-and-durations.t] fix a test description

[18:26] <dalek> roast: review: http://github.com/perl6/roast/commit/fe777cc3a965131adce2bf520976b20614d8effc

[18:26] *** Kodi joined
[18:29] *** am0c^ left
[18:29] *** zby_home_ left
[18:31] *** Raynes joined
[18:34] <sorear> good * #perl6

[18:34] *** hudnix joined
[18:36] <moritz_> good now, sorear

[18:38] *** rgrau_ joined
[18:38] *** M_o_C joined
[18:42] *** sftp_ left
[18:42] *** sftp_ joined
[18:43] *** sftp_ left
[18:44] *** sftp joined
[18:45] <isBEKaml> moritz_:  http://perlcabal.org/syn/S02.html  - why are the spectest examples pointing to azawawi's folder on the server(files which may not be there) ? Why not point to roast git repo? 

[18:47] <moritz_> isBEKaml: hysterical reasons, they had markup...

[18:47] <moritz_> isBEKaml: but probably not updated anymore... so patches for changing that are very welcome

[18:48] <dalek> specs: dffc82f | KodiB++ | S (2 files):

[18:48] <dalek> specs: Specified a little more support for the local time zone, so you don't have to say 'DateTime.now.timezone'.

[18:48] <dalek> specs: review: http://github.com/perl6/specs/commit/dffc82fa6b3ed622fb8eeb787419915e6b9b26b7

[18:54] <dukeleto> moritz_, isBEKaml: i sent an email to parrot-dev about String.reverse, if y'all have further comments, please add them to that thread

[18:57] <dalek> roast: 866d5ab | KodiB++ | S32-temporal/ (2 files):

[18:57] <dalek> roast: Added tests for the local time zone.

[18:57] <dalek> roast: review: http://github.com/perl6/roast/commit/866d5ab56e12a47d51244e33b9c402ca198c6d74

[18:58] *** M_o_C left
[19:00] *** M_o_C joined
[19:03] <isBEKaml> moritz_: if the script that generates html versions of the spec is on feather, can I have a look at it?

[19:04] <isBEKaml> moritz_: it should be on pugs repo, but I don't find it. 

[19:04] <isBEKaml> dukeleto: thanks!

[19:11] *** zby_home joined
[19:11] *** M_o_C left
[19:15] *** M_o_C joined
[19:16] *** silug joined
[19:18] <moritz_> isBEKaml: it's in the mu repo, in util/smartlinks/

[19:18] <moritz_> erm, smartlinks.pl

[19:18] <moritz_> and util/Text-SmartLinks/*

[19:22] *** zby_home left
[19:22] <isBEKaml> right, tracked down an older svn co'd pugs repo on my machine and went through it. Don't find anything odd at first glance, will look at the newer files. 

[19:24] *** ggoebel left
[19:26] *** jferrero joined
[19:30] <moritz_> isBEKaml: it's in until/Text-SmartLinks/lib/Text/SmartLinks.pm

[19:30] <isBEKaml> moritz_: I was just thinking if it'd be a simple fix as removing the prefixed ~/azawawi when you pinged in. :)

[19:32] *** envi left
[19:35] <moritz_> isBEKaml: I tried something... let's see if it works out

[19:36] <isBEKaml> moritz_: I'm tesitng it out now... :)

[19:36] *** Kodi left
[19:37] <moritz_> uhm, seems I removed too much :(

[19:39] <dalek> mu: 7249b4b | moritz++ | util/Text-SmartLinks/lib/Text/SmartLinks.pm:

[19:39] <dalek> mu: [smartlinks] remove broken HTML links

[19:39] <dalek> mu: review: http://github.com/perl6/mu/commit/7249b4b522142ceb4273a7b66a07a906b80381ea

[19:39] <dalek> mu: 2da197f | moritz++ | util/Text-SmartLinks/lib/Text/SmartLinks.pm:

[19:39] <dalek> mu: Revert "[smartlinks] remove broken HTML links"

[19:39] <dalek> mu: 

[19:39] <dalek> mu: This reverts commit 7249b4b522142ceb4273a7b66a07a906b80381ea.

[19:39] <dalek> mu: 

[19:39] <dalek> mu: It removed too much... let's try again later

[19:39] <dalek> mu: review: http://github.com/perl6/mu/commit/2da197f13dfc664b094ec46079691bb16b054770

[19:41] <isBEKaml> moritz_: there's a way to test it. It's outlined in Text-SmartLinks/script/smartlinks.pl

[19:42] <isBEKaml> moritz_: damn, I'd now have to resolve external deps that I don't have currently... 

[19:42] <moritz_> isBEKaml: there's a way to test it... push the commits, and see what perlcabal.org/syn/ makes of it :-)

[19:43] <isBEKaml> moritz_: ah, that reminds me. I don't have commit bit since git migration. :(

[19:43] <moritz_> isBEKaml: what's your github ID?

[19:43] <isBEKaml> svatsan

[19:44] <moritz_> isBEKaml: fixed. Welcome back to mu, roast, specs and all the rest.

[19:44] <dalek> mu: 40d2add | moritz++ | util/Text-SmartLinks/lib/Text/SmartLinks.pm:

[19:44] <dalek> mu: [smartlinks] another attempt to remove outdated links; also try to fix the link text

[19:44] <dalek> mu: review: http://github.com/perl6/mu/commit/40d2add37e558931d32539b0674ba32a313add85

[19:45] <isBEKaml> moritz_: you're committing them in and firing the gen script?

[19:45] <moritz_> isBEKaml: yes

[19:46] <isBEKaml> I was thinking it could be something so simple as removing the prefixed ~/azawawi/html/ from the two link locations pointed in there. 

[19:46] <isBEKaml> line 663

[19:47] <isBEKaml> after all, looking at the error page I see, that's what it seems to be. 

[19:47] <moritz_> isBEKaml: it could be as simple now, but since azawawi doesn't seem to maintain the whole stuff, I'd rather delete the links

[19:48] <isBEKaml> let's just remove the prefix and see what happens. 

[19:48] <moritz_> is ~/azawawi/html/ up-to-date?

[19:49] <dalek> mu: 5e58136 | moritz++ | util/Text-SmartLinks/lib/Text/SmartLinks.pm:

[19:49] <dalek> mu: [smartlinks] another attempt to fix path

[19:49] <dalek> mu: review: http://github.com/perl6/mu/commit/5e58136a9195f51f538e515e35e7056a80e7491d

[19:49] <isBEKaml> it doesn't seem to hold anything of what we are looking at, it seems. click on summary or full test link 

[19:51] <isBEKaml> git still barfs at http://github.com clones.. should that happen?

[19:52] <isBEKaml> I've switched to git://github.com clones.. 

[19:52] <moritz_> no, but git:// clones usually work for me

[19:52] *** orafu left
[19:53] <dukeleto> isBEKaml: are you appending .git to the http:// clone urls ?

[19:53] <isBEKaml> yes. 

[19:53] *** jferrero left
[19:53] <dukeleto> isBEKaml: what error do you get?

[19:53] *** jferrero joined
[19:54] <isBEKaml> dukeleto: zsh: segmentation fault  git clone http://github.com/perl6/specs.git

[19:54] <isBEKaml>  . It goes some way getting parent nodes and the like before hitting this. 

[19:54] <dalek> mu: 2966fd7 | moritz++ | util/Text-SmartLinks/lib/Text/SmartLinks.pm:

[19:54] <dalek> mu: [smartlinks] put back a line which I accidentally deleted

[19:54] <dalek> mu: review: http://github.com/perl6/mu/commit/2966fd7d31d277c054c0fe1424fa4c26c5ee5857

[19:55] * moritz_ now much happier with the result

[19:55] <isBEKaml> no images, mucho bettero. 

[19:56] <moritz_> one more idea

[19:56] <moritz_> currently the spectests are inlined

[19:56] <moritz_> which is a lot of data

[19:56] <dukeleto> isBEKaml: wow, fun. What version of git? You are actually getting a coredump in Git? You must be lucky.

[19:56] <moritz_> and makes the .html files slow to load

[19:56] <moritz_> and means that if you use the search feature of your browser, it'll take a minute before telling you that a substring was not found

[19:57] <moritz_> what do you think about just linking to line numbers on github instead?

[19:57] *** Italian_Plumber left
[19:58] <isBEKaml> dukeleto: no, I don't see any coredump file. I'm equally baffled at this behaviour. btw, git version is v1.6.4

[19:59] *** plobsing joined
[19:59] <dukeleto> isBEKaml: ulimit -c is probably set to 0

[19:59] <isBEKaml> moritz_: yeah, I was wondering about that too. I've seen dialog boxes asking me whether to stop script from loading or continue on my FF window. 

[19:59] <dukeleto> isBEKaml: which prevents coredumps from being created

[19:59] <isBEKaml> dukeleto: right. 

[20:00] <dukeleto> isBEKaml: http clone urls are very inefficient, so it is best not to use them unless you are firewalled. But that is still a strange error. 

[20:03] <isBEKaml> dukeleto: I have done this quite a lot of times before (my git fu isn't that strong or as sufficiently competent as my svn fu). and never faced this. Let me thinko about raising an issue with git folks. 

[20:03] <moritz_> \o/  success

[20:05] <moritz_> much faster now to search the specs

[20:05] <dalek> mu: 9a57c5b | moritz++ | util/Text-SmartLinks/lib/Text/SmartLinks.pm:

[20:05] <dalek> mu: [smartlinks] try to reduce page load times by non-inlining test scripts; link to them instead

[20:05] <dalek> mu: review: http://github.com/perl6/mu/commit/9a57c5bc7a1b28b47d9d09adb7b83dbee411ef1e

[20:06] <isBEKaml> dukeleto: I just noticed another weird thing. http clone works fine on another account here that uses bash shell. Could it be related to the $SHELL ?

[20:07] <isBEKaml> my guess is, there's some env variable that's misbehaving - leading to coredump. 

[20:08] <dukeleto> isBEKaml: yeah, if you are using git completion or a git-ified PS1, that could be possible

[20:08] <isBEKaml> moritz_: awesome. Today I learned that github highlight works by including the line numbers in the url...

[20:08] <dukeleto> isBEKaml: yes, i love that feature

[20:08] <isBEKaml> dukeleto: none of that. 

[20:10] <dalek> mu: b3c0507 | moritz++ | util/Text-SmartLinks/lib/Text/SmartLinks.pm:

[20:10] <dalek> mu: [smartlinks] code cleanup

[20:10] <dalek> mu: review: http://github.com/perl6/mu/commit/b3c0507e42170dbd2d0de12a503144c835930e94

[20:11] <dukeleto> isBEKaml: interesting. Perhaps zsh is having a bad day. You can always backtrace the coredump if you are really interested in it ....

[20:11] <isBEKaml> moritz_: I'm happy running yak shaving sessions with rakudo folks! :D

[20:12] * dukeleto makes a large wig from freshly shorn yak hair

[20:13] * isBEKaml watches in _no_ wonder as it falls off with a huge THUD

[20:15] <isBEKaml> dukeleto: some other day. It's 2 am here and I'm in no mood to see another segfault. :)

[20:15] * sorear has started porting STD.pm6 in earnest

[20:20] *** timbunce left
[20:24] *** jferrero left
[20:27] *** timbunce joined
[20:27] * jnthn made it home from trip to .nl and OSDC.fr :-)

[20:27] <phenny> jnthn: 10 Oct 16:57Z <sorear> ask jnthn Where in S14 does it talk about body run time of parametric roles?

[20:28] <jnthn> sorear: Hmm. Well, wherever I decide to put it when I patch it, I guess. :-)

[20:28] * jnthn thought it was already in there

[20:28] <jnthn> Will look tomorrow or so. Mostly interested in being unconcious at the moment. ;-)

[20:35] <diakopter> jnthn: g'nite

[20:36] <diakopter> sorear: porting STD.pm6 ...?

[20:36] <diakopter> to niecza's subset of p6?

[20:38] *** Bucciarati joined
[20:44] *** Mowah left
[20:45] <sorear> diakopter: I prefer to think of it as porting STD.pm6 to Perl 6.0

[20:45] <sorear> viv has a very idiosyncratic feature set

[20:46] *** PhatEddy joined
[20:46] <diakopter> ahh... good point.

[20:48] *** orafu joined
[20:52] *** Kodi joined
[20:54] <sorear> also I'm collecting a list of small things Niecza needs

[20:54] <sorear> like &substr

[20:54] <sorear> (I already have the method form, so the sub is really quite easy)

[20:55] <PhatEddy> phenny: tell moritz_ his missing rakudo_test_run.tar.gz file could be caused by not having TAP::Harness::Archive installed.  Without the module installed the tests are still run but you get the LTA error message.

[20:55] <phenny> PhatEddy: I'll pass that on when moritz_ is around.

[21:07] *** M_o_C left
[21:11] <sorear> TimToady: ping

[21:11] *** masak joined
[21:11] <masak> jnthn: seems you beat me to the front door :)

[21:11] <sorear> o/ masak

[21:11] <masak> sorear: \o

[21:12] *** Italian_Plumber joined
[21:16] *** Italian_Plumber left
[21:16] *** chitragupt joined
[21:17] *** Italian_Plumber joined
[21:17] *** Italian_Plumber left
[21:18] <dalek> rakudo: db221e3 | KodiB++ | src/c (2 files):

[21:18] <dalek> rakudo: Implemented $*TZ.

[21:18] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/db221e3d2b14da597d4b71b9525380a5fa7ca60a

[21:18] <dalek> rakudo: 3494676 | KodiB++ | src/core/Temporal.pm:

[21:18] <dalek> rakudo: [Temporal] Ensured .new(Str) works correctly in derived classes.

[21:18] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/3494676c7dac88fad9b71ce8065fdd85bad7b695

[21:18] <dalek> rakudo: a1cd99b | KodiB++ | src/ops/perl6.ops:

[21:18] <dalek> rakudo: [ops] Added encodelocaltime.

[21:18] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/a1cd99b175f4fa150aa1f8f40b20df4ebf92f36b

[21:18] <dalek> rakudo: 5d23e30 | KodiB++ | t/spectest.data:

[21:18] <dalek> rakudo: Run S32-temporal/local.t.

[21:18] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/5d23e3082ce89a5dae607f45846059c64a0e921d

[21:18] <dalek> rakudo: 8711e05 | KodiB++ | docs/ChangeLog:

[21:18] <dalek> rakudo: Updated ChangeLog.

[21:18] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/8711e0578705b85f2fb8503bb7c29ef3f1dd1f5e

[21:18] <dalek> rakudo: e6aa633 | KodiB++ | src/core/Temporal.pm:

[21:18] <dalek> rakudo: [Temporal] Don't clone the formatter, so .perl can always recognize the default.

[21:18] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/e6aa633e3b99b9165776954b53311f88c785db29

[21:18] <masak> Kodi++

[21:19] *** leprevost joined
[21:22] <masak> wow. lots of sensible discussion about the actual matter at hand here: http://www.reddit.com/r/programming/comments/dpqh7/longest_palindrome_by_regex/

[21:22] <masak> reddit does surprise sometimes.

[21:23] *** nymacro left
[21:24] *** justatheory joined
[21:25] *** _kaare left
[21:25] *** leprevost left
[21:25] <colomon> err... they do recognize that 1.5 seconds was in Rakudo, right? 

[21:26] <masak> no idea :)

[21:27] *** Kodi left
[21:27] <colomon> they don't seem to.

[21:27] <colomon> I don't think I can comment there...

[21:28] * masak glances longingly at the bed

[21:28] *** isBEKaml left
[21:28] <masak> bed: oh, ok. you've convinced me. :)

[21:28] <masak> #perl6: good night. see you tomorrow.

[21:28] *** masak left
[21:29] *** chitragupt left
[21:29] *** chitragupt joined
[21:30] <colomon> (some of the people do realize it is, later on.)

[21:30] *** pyrimidine left
[21:32] *** MayDaniel left
[21:34] *** Eevee left
[21:40] *** f00li5h[HireMe] is now known as f00li5h

[21:44] *** sftp left
[21:50] *** nymacro joined
[21:50] *** timbunce left
[22:04] *** ggoebel joined
[22:04] *** TomDLux joined
[22:36] *** justatheory left
[22:37] *** risou_ left
[22:41] *** fridim left
[22:43] *** PhatEddy left
[22:47] *** wamba left
[23:11] *** thundergnat joined
[23:12] <thundergnat> rakudo: say 8.sqrt; 

[23:12] <p6eval> rakudo 5d23e3: OUTPUT«2.82842712474619␤»

[23:12] <thundergnat> rakudo: say (-8).sqrt

[23:12] <p6eval> rakudo 5d23e3: OUTPUT«NaN␤»

[23:12] <thundergnat> phooey

[23:12] <thundergnat> rakudo: say (-8).Complex.sqrt

[23:12] <p6eval> rakudo 5d23e3: OUTPUT«0 + 2.82842712474619i␤»

[23:13] <thundergnat> Just an observation, but it seems to me that taking a square root of a negative number should automatically coerce to a Complex.

[23:24] <thundergnat> Added a new perl6 implementation to rosettacode: http://rosettacode.org/wiki/Roots_of_a_quadratic_function#Perl6

[23:40] *** araujo joined
[23:48] *** thundergnat left
[23:51] *** Raynes left
[23:52] *** araujo left
[23:53] <masonkramer> thundergnat: I don't necessarily agree with that - it could hide a flaw in the program

[23:54] *** pythonian4000afk is now known as pythonian4000

[23:55] <diakopter> I think it should depend on whether that "negative number" was a Complex

[23:56] <masonkramer> rakudo: say 5.Complex.sqrt

[23:56] <p6eval> rakudo 5d23e3: OUTPUT«2.23606797749979 + 0i␤»

[23:56] <masonkramer> ahh, right, that's what he's got

[23:56] <masonkramer> yeah, that's what's happening now

