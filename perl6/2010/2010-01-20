[00:02] *** ruoso joined
[00:02] *** patspam joined
[00:03] *** Gothmog_ left
[00:05] *** Gothmog_ joined
[00:07] <ash_> jnthn in your last commit in the commit you spelled twigil as twivil

[00:07] *** ihrd joined
[00:07] <ash_> s/the commit/in a commit in Actions.pm/

[00:08] <diakopter> s/in a commit/a comment/

[00:08] *** ihrd left
[00:08] <jnthn> what, you expect me to type CORRECLYT? :-O

[00:09] <ash_> well, this twivil concept could lead to something new, maybe we should discuss it 

[00:09] <ash_> :P 

[00:09] *** lumi left
[00:10] *** pnate joined
[00:10] <jnthn> ash_: It rhymes with "evil", so I'm sure we can make something out of it. :-)

[00:11] <jnthn> OK, I need to get some rest now, but if somebody feels like some bug hunting...

[00:12] *** lumi joined
[00:13] <jnthn> S02-builtin_data_types/anon_block.rakudo doesn't look like it'll need too much more work to make it pass. If the bug that causes it to bomb can be quashed (not sure how hard it'll be - maybe not very, maybe it's nasty...but hopefully not) then it makes it through the tests that follow that point.

[00:13] <dalek> rakudo/ng: 397e5f5 | jonathan++ | src/Perl6/Actions.pm:

[00:13] <dalek> rakudo/ng: Typo spotted by ash++.

[00:13] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/397e5f5d9c8b63475238fd2a07246b5b7b7d3bc1

[00:13] <dalek> rakudo/ng: f213627 | jonathan++ | src/core/operators.pm:

[00:13] <dalek> rakudo/ng: Liberalize sigs on infix:<~~> a bit.

[00:13] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/f21362780f34f2a69d77b4d8a60619461477e4f6

[00:13] <colomon> blast, map may still be dodgy.

[00:14] <ash_> http://github.com/perl6/nqp-rx/blob/master/t/nqp/35-prefix-sigil.t#L15 uses @( ) in nqp like i was before in the for loops

[00:19] *** cognominal_ left
[00:21] *** cdarroch left
[00:23] *** pnate2 left
[00:24] * jnthn -> rest, night o/

[00:26] *** kborer joined
[00:28] *** breinbaas left
[00:31] *** jan_ left
[00:32] *** nihiliad joined
[00:35] <colomon> o/

[00:36] <colomon> ng: say 1

[00:36] *** spinclad joined
[00:36] <p6eval> ng f21362: 1␤

[00:36] <colomon> groovy, up to date

[00:36] <colomon> ng: say grep { ($^a % 2) }, (1...10);

[00:36] <p6eval> ng f21362: 13579␤

[00:36] *** jan joined
[00:37] <colomon> ng: say grep { ($_ % 2) }, (1...10);

[00:37] *** jan is now known as Guest97031

[00:37] <p6eval> ng f21362: ␤

[00:38] <colomon> seems like maybe we're getting the wrong $_?

[00:39] <colomon> ng: $_ = 'z'; ay grep { ($_ % 2) }, (1...10);

[00:39] <p6eval> ng f21362: Could not find non-existent sub &ay␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[00:40] <colomon> ng: $_ = 'z'; say grep { ($_ % 2) }, (1...10);

[00:40] <p6eval> ng f21362: ␤

[00:40] <colomon> nope, that's not it...

[00:41] <ash_> ng: grep { say $_; ($_ % 2) }, (1...10); 

[00:41] <p6eval> ng f21362: Mu()␤Mu()␤Mu()␤Mu()␤Mu()␤Mu()␤Mu()␤Mu()␤Mu()␤Mu()␤

[00:41] *** breinbaas joined
[00:41] <ash_> ng: $_ = 1;  grep { say $_; ($_ % 2) }, (1...10);

[00:42] <p6eval> ng f21362: 1␤1␤1␤1␤1␤1␤1␤1␤1␤1␤

[00:42] <lichtkind> thanks guys good night

[00:42] *** lichtkind left
[00:45] *** smash_ left
[00:52] <colomon> ash_: oh, good call.

[00:56] *** cotto_w0rk joined
[00:56] *** cotto_w0rk left
[00:56] *** cotto_w0rk joined
[01:01] *** lumi left
[01:01] *** lumi joined
[01:09] *** cotto_work left
[01:23] *** araujo left
[01:27] *** pnate2 joined
[01:28] *** pnate left
[01:37] *** ash_ left
[01:39] *** drbean joined
[01:51] *** cotto joined
[01:52] *** agentzh joined
[02:01] *** youwin_ joined
[02:07] *** Chillance left
[02:09] *** szabgab left
[02:10] *** lumi left
[02:11] *** ash_ joined
[02:13] *** szabgab joined
[02:14] <diakopter> oh

[02:19] *** orafu left
[02:19] *** orafu joined
[02:20] *** lumi joined
[02:36] *** agentzh left
[02:40] *** colomon__ joined
[02:40] *** colomon left
[02:40] *** colomon__ is now known as colomon

[02:41] *** orafu left
[02:47] *** Mantis joined
[02:47] *** Mantis left
[02:48] *** agentzh joined
[02:54] <vamped> cat @a -> cat() and streams are not yet implemented in Rakudo, sorry

[02:54] <vamped> it's nice to have good error messages

[02:55] *** orafu joined
[03:01] *** youwin_ is now known as zorg

[03:01] *** zorg is now known as zorgnax

[03:03] *** pnate2 left
[03:03] *** pnate joined
[03:05] *** stephenlb left
[03:10] *** colomon left
[03:10] *** colomon joined
[03:15] *** astrojp joined
[03:15] *** zorgnax left
[03:15] *** zorgnax joined
[03:19] <ash_> ping Tene ? 

[03:24] <ash_> msg Tene I know your probably don't remember, but a few months ago you put up a sample perl 6 function that used inline PIR to thread but at the time parrot gave an error, well I checked your example today and it functions for me, and threads (using master rakudo, so whatever version of parrot that is) 

[03:24] <ash_> hmm i think i did that wrong

[03:26] <vamped> it's ok ash_, nobody seems to be here to see your mistake.

[03:27] <ash_> hehe, i'll remember how the msg bot works one day

[03:28] <ash_> phenny, tell Tene I know your probably don't remember, but a few months ago you put up a sample perl 6 function that used inline PIR to thread but at the time parrot gave an error, well I checked your example today and it functions for me, and threads (using master rakudo, so whatever version of parrot that is)

[03:28] <ash_> hmm, guess there is no phenny 

[03:29] <ash_> whelp that solves that problem then

[03:42] *** astrojp left
[03:42] *** colomon__ joined
[03:43] *** colomon left
[03:43] *** colomon__ is now known as colomon

[03:43] *** pnate left
[03:45] <ash_> rakudo: sub async(&bl) { my $block = bl; eval('Q:PIR { \n find_lex $P0, \'$block\' \n $P1 = root_new [\'parrot\';\'ParrotThread\'] \n $P1.\'run_clone\'($P0 )\n }');}; async({ say 'yo'; }); sleep 1; say 'hi';

[03:46] <p6eval> rakudo 726b83: yo␤

[03:48] *** colomon__ joined
[03:49] *** araujo joined
[03:49] *** colomon left
[03:49] *** colomon__ is now known as colomon

[03:50] *** ash_ left
[03:56] *** ShaneC left
[04:00] *** jaldhar joined
[04:07] *** lestrrat is now known as lest_away

[04:14] *** am0c joined
[04:19] *** _jaldhar joined
[04:20] *** jaldhar left
[04:23] *** agentzh left
[04:33] *** redicaps joined
[04:36] *** vamped left
[04:44] <Tene> ashizawa: Interesting.  Thanks.

[04:45] *** cognominal joined
[04:54] *** nihiliad left
[05:07] *** Baggiokwok joined
[05:14] *** Baggiokwok left
[05:35] *** |JackYF| left
[05:47] *** vamped joined
[05:53] <vamped> S32#line_201 I think {ucfirst $1} should be {ucfirst $0}

[05:55] *** billy_ joined
[05:57] <vamped> I don't think this is being logged currently. I'll send in the bug.

[06:05] *** vamped left
[06:27] *** diakopter left
[06:39] *** billy_ left
[06:58] <saschi> morning

[07:00] *** mj41_ joined
[07:06] *** mj41 left
[07:06] *** mj41_ is now known as mj41

[07:07] *** justatheory left
[07:10] *** cognominal left
[07:11] *** skeptical_p left
[07:12] *** ihrd joined
[07:13] *** Su-Shee joined
[07:13] <Su-Shee> good morning

[07:15] *** lest_away is now known as lestrrat

[07:16] *** kaare joined
[07:17] *** kaare is now known as Guest10508

[07:34] *** cognominal joined
[07:44] *** Baggiokwok joined
[07:45] *** drbean left
[07:48] *** fridim_ joined
[07:51] *** Jimmy_Zhuo joined
[07:59] *** cottoo joined
[08:00] *** iblechbot joined
[08:11] *** fridim_ left
[08:11] *** cotto left
[08:27] *** eternaleye left
[08:30] *** lumi left
[08:31] *** szabgab left
[08:32] *** szabgab joined
[08:33] *** riffraff joined
[08:33] *** lumi joined
[08:34] *** xinming_ joined
[08:34] *** Jimmy_Zhuo left
[08:37] *** mberends joined
[08:41] *** ihrd left
[08:42] *** xinming left
[08:50] *** redicaps left
[09:05] *** eternaleye joined
[09:06] *** dakkar joined
[09:14] *** hanekomu joined
[09:20] *** mssm joined
[09:20] *** lisppaste3 left
[09:23] *** jonasbn joined
[09:26] *** _ilbot2 joined
[09:26] <moritz_> good morning

[09:28] <jonasbn> moritz_: did ou submit a paper to the Open Source Days in Copenhagen?

[09:29] <moritz_> jonasbn: an abstract for a talk, yes

[09:29] <moritz_> about parsing with Perl 6 grammars

[09:30] <jonasbn> great, I will be in charge of the Perl track running in conjunction with the Perl6 hackathon

[09:31] <moritz_> hope it's OK that I didn't check with you first, I just didn't think about it

[09:31] <sjn> hello guys

[09:31] <jonasbn> moritz_:  will you also be attending the Dutch Perl Workshop on the friday

[09:32] <jonasbn> the 5th. of March that is

[09:32] <jonasbn> sjn: hello

[09:32] <moritz_> jonasbn: my planning didn't get that far yet :/

[09:32] <sjn> Any of you know if Mark Lentczner still hangs around here? (He's the guy that made the Perl6 periodic table of operators, http://www.ozonehouse.com/mark/periodic/)

[09:33] <jonasbn> moritz_: okay

[09:33] <moritz_> sjn: haven't seen him lately

[09:33] <sjn> moritz_: what's his nick?

[09:34] <moritz_> sjn: not sure, need to search a bit

[09:35] <moritz_> maybe it was mtnviewmark?

[09:35] <moritz_> sjn: if you need his email address, it's mark at glyphic dot com

[09:37] <sjn> moritz_: thanks

[09:45] *** jferrero joined
[09:46] *** Patterner joined
[09:47] *** agentzh joined
[09:56] *** meneldor joined
[09:57] <meneldor> hi all

[10:09] *** gmat joined
[10:15] *** iblechbot left
[10:19] *** debux joined
[10:19] *** eiro joined
[10:20] *** ruoso left
[10:32] *** gmat left
[10:36] *** c9s left
[10:36] *** payload left
[10:43] *** c9s joined
[10:51] *** am0c left
[11:03] <moritz_> jonasbn: in case I haven't told you: THANK YOU SO MUCH for organizing the hackathon + perl track

[11:04] <jonasbn> no problem

[11:04] <jonasbn> I am looking so much forward

[11:04] <jonasbn> excuse to drink beer and hack

[11:04] *** meppl joined
[11:04] <jonasbn> in reverse order of course

[11:05] * jonasbn hopes masak does not give him a lecture on reverse now

[11:05] <moritz_> :-)

[11:06] <hanekomu> what's the Perl6 Discovery Workshop? http://perl6.org.uk/psdw2010/

[11:10] <moritz_> never heard of it

[11:26] *** cognominal left
[11:28] *** Intensity left
[11:32] <jnthn> drink beer and hack! \o/

[11:32] <jnthn> er, morning folks :-)

[11:35] *** patspam left
[11:35] <colomon> morning!

[11:36] <colomon> are we allowed to drink cider and hack instead?

[11:37] <jonasbn> perhaps we should order some Club Mate http://en.wikipedia.org/wiki/Club-Mate

[11:38] *** sbp left
[11:38] <jnthn> colomon: I don't personally find cider so appling. ;-)

[11:39] *** sbp joined
[11:39] <jnthn> colomon: But feel free. :-)

[11:39] <colomon> groan

[11:40] *** am0c joined
[11:42] *** agentzh left
[11:45] <colomon> jnthn: so, picking up from last night:

[11:46] <colomon> the good news is that map now works with $_.

[11:46] <colomon> the bad news is that grep doesn't.

[11:46] <colomon> ng: (1...10).map({$_*$_}).perl.say

[11:46] <p6eval> ng f21362: (1, 4, 9, 16, 25, 36, 49, 64, 81, 100)␤

[11:47] <colomon> ng: (1...10).grep({ say $_; 1; }).perl.say

[11:47] <p6eval> ng f21362: sh: ./perl6: No such file or directory␤

[11:47] <colomon> arg

[11:47] *** Baggiokwok left
[11:50] <colomon> ng: (1...10).grep({ say $_; 1; }).perl.say

[11:50] <p6eval> ng f21362: Mu()␤Mu()␤Mu()␤Mu()␤Mu()␤Mu()␤Mu()␤Mu()␤Mu()␤Mu()␤[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]␤

[11:51] <colomon> huh.  also interesting is that that's an array rather than a list?

[11:51] <jnthn> Hmm...odd.

[11:53] <colomon> the last detail probably comes from the current implementation of gather / take.

[11:59] <jnthn> Yes, that's quite possible.

[11:59] <jnthn> Would ahve to dive into the code to have a beter idea of the problem with grep here.

[12:05] <sjohnson> hi guys

[12:05] *** bluescreen joined
[12:05] <colomon> jnthn: the good news is the grep code itself is dead simple.  :)

[12:06] *** cognominal joined
[12:09] *** drbean joined
[12:12] *** ruoso joined
[12:26] *** payload joined
[12:28] *** charsbar_ joined
[12:28] *** bluescreen left
[12:28] *** c9s left
[12:28] *** mberends left
[12:28] *** Su-Shee left
[12:28] *** araujo left
[12:28] *** orafu left
[12:28] *** rachelBROWN left
[12:28] *** am0c left
[12:28] *** jonasbn left
[12:28] *** mssm left
[12:28] *** xinming_ left
[12:28] *** riffraff left
[12:28] *** gabiruh left
[12:28] *** vinisterx left
[12:28] *** Exodist left
[12:28] *** frettled left
[12:28] *** Tene left
[12:28] *** RichiH left
[12:29] *** Exodist joined
[12:29] *** vinisterx joined
[12:30] *** frettled joined
[12:30] *** bluescreen joined
[12:30] *** am0c joined
[12:30] *** c9s joined
[12:30] *** jonasbn joined
[12:30] *** mssm joined
[12:30] *** mberends joined
[12:30] *** xinming_ joined
[12:30] *** riffraff joined
[12:30] *** Su-Shee joined
[12:30] *** araujo joined
[12:30] *** orafu joined
[12:30] *** gabiruh joined
[12:30] *** rachelBROWN joined
[12:30] *** Tene joined
[12:30] *** charsbar joined
[12:30] *** go|dfish joined
[12:30] *** partisan joined
[12:30] *** zamolxes joined
[12:30] *** cj joined
[12:30] *** mtve joined
[12:30] *** yves joined
[12:30] *** REPLeffect joined
[12:30] *** RichiH joined
[12:30] *** irc.freenode.net sets mode: +oo frettled Tene

[12:30] *** gabiruh left
[12:31] *** Su-Shee left
[12:31] *** orafu left
[12:31] *** Su-Shee joined
[12:35] *** mberends left
[12:35] *** bluescreen left
[12:35] *** rachelBROWN left
[12:35] *** c9s left
[12:35] *** araujo left
[12:35] *** cj left
[12:35] *** partisan left
[12:35] *** go|dfish left
[12:35] *** frettled left
[12:35] *** am0c left
[12:35] *** mtve left
[12:35] *** charsbar left
[12:35] *** jonasbn left
[12:35] *** mssm left
[12:35] *** zamolxes left
[12:35] *** yves left
[12:35] *** REPLeffect left
[12:35] *** Tene left
[12:35] *** xinming_ left
[12:35] *** riffraff left
[12:35] *** RichiH left
[12:35] *** Exodist left
[12:35] *** sbp left
[12:35] *** _ilbot2 left
[12:35] *** lumi left
[12:35] *** _jaldhar left
[12:35] *** colomon left
[12:35] *** zorgnax left
[12:35] *** kborer left
[12:35] *** sjohnson left
[12:35] *** spinclad left
[12:35] *** arnsholt left
[12:35] *** hercynium left
[12:35] *** pugs_svn left
[12:35] *** gbacon left
[12:35] *** frew left
[12:35] *** [particle] left
[12:35] *** Chazz left
[12:35] *** PZt left
[12:35] *** literal left
[12:35] *** avar left
[12:35] *** meneldor left
[12:35] *** allbery_b left
[12:35] *** idemal left
[12:35] *** ssm left
[12:35] *** Su-Shee left
[12:35] *** payload left
[12:35] *** ruoso left
[12:35] *** dakkar left
[12:35] *** eternaleye left
[12:35] *** szabgab left
[12:35] *** cottoo left
[12:35] *** Patterner left
[12:35] *** akl left
[12:35] *** ascent_ left
[12:35] *** p6eval left
[12:35] *** buubot left
[12:35] *** c1sung left
[12:35] *** moritz_ left
[12:35] *** pnu left
[12:35] *** vinisterx left
[12:35] *** drbean left
[12:35] *** hanekomu left
[12:35] *** Guest97031 left
[12:35] *** nsh left
[12:35] *** rhr left
[12:35] *** mikehh_ left
[12:35] *** revdiablo left
[12:35] *** mdxi left
[12:35] *** baest left
[12:35] *** mathw left
[12:35] *** Grrrr left
[12:35] *** tkr left
[12:35] *** cxreg left
[12:35] *** TimToady left
[12:35] *** omega__ left
[12:35] *** Caelum left
[12:35] *** cls_bsd left
[12:35] *** tarbo2_ left
[12:35] *** IRSeekBot left
[12:35] *** awwaiid left
[12:35] *** debux left
[12:35] *** breinbaas left
[12:35] *** jnthn left
[12:35] *** huf left
[12:35] *** tomaw_ left
[12:35] *** Trey left
[12:35] *** IgnisInCaelum left
[12:35] *** hicx174 left
[12:35] *** PerlJam left
[12:35] *** Infinoid left
[12:35] *** Juerd left
[12:35] *** krakan left
[12:35] *** Woody2143 left
[12:35] *** dalek left
[12:35] *** gfldex left
[12:35] *** yath left
[12:35] *** Maddingue left
[12:35] *** jql left
[12:35] *** saschi left
[12:35] *** lestrrat left
[12:35] *** eiro left
[12:35] *** BinGOs left
[12:35] *** cognominal left
[12:35] *** meppl left
[12:35] *** Gothmog_ left
[12:35] *** krunen left
[12:35] *** constant left
[12:35] *** felipe left
[12:35] *** presh_ left
[12:39] *** cotto_working joined
[12:40] *** Guest10508 left
[12:42] *** meneldor joined
[12:42] *** PZt joined
[12:42] *** literal joined
[12:42] *** avar joined
[12:42] *** meppl joined
[12:42] *** Gothmog_ joined
[12:42] *** krunen joined
[12:42] *** constant joined
[12:42] *** felipe joined
[12:42] *** presh_ joined
[12:42] *** eiro joined
[12:42] *** BinGOs joined
[12:42] *** colomon_ joined
[12:42] *** charsbar_ left
[12:42] *** frettled joined
[12:42] *** orafu joined
[12:42] *** charsbar_ joined
[12:42] *** bluescreen joined
[12:42] *** am0c joined
[12:42] *** c9s joined
[12:42] *** jonasbn joined
[12:42] *** mssm joined
[12:42] *** mberends joined
[12:42] *** xinming_ joined
[12:42] *** riffraff joined
[12:42] *** araujo joined
[12:42] *** rachelBROWN joined
[12:42] *** Tene joined
[12:42] *** charsbar joined
[12:42] *** go|dfish joined
[12:42] *** partisan joined
[12:42] *** zamolxes joined
[12:42] *** cj joined
[12:42] *** mtve joined
[12:42] *** yves joined
[12:42] *** REPLeffect joined
[12:42] *** RichiH joined
[12:42] *** irc.freenode.net sets mode: +oo frettled Tene

[12:43] *** TimToady joined
[12:43] *** sbp joined
[12:43] *** frew joined
[12:43] *** Exodist joined
[12:43] *** _ilbot2 joined
[12:43] *** lumi joined
[12:43] *** _jaldhar joined
[12:43] *** colomon joined
[12:43] *** zorgnax joined
[12:43] *** spinclad joined
[12:43] *** kborer joined
[12:43] *** sjohnson joined
[12:43] *** arnsholt joined
[12:43] *** hercynium joined
[12:43] *** pugs_svn joined
[12:43] *** gbacon joined
[12:43] *** [particle] joined
[12:43] *** Chazz joined
[12:43] *** nbrown joined
[12:43] *** sunnavy joined
[12:43] *** gabiruh joined
[12:43] *** Su-Shee joined
[12:43] *** vinisterx joined
[12:43] *** payload joined
[12:43] *** ruoso joined
[12:43] *** drbean joined
[12:43] *** Patterner joined
[12:43] *** hanekomu joined
[12:43] *** dakkar joined
[12:43] *** eternaleye joined
[12:43] *** szabgab joined
[12:43] *** cottoo joined
[12:43] *** Guest97031 joined
[12:43] *** ssm joined
[12:43] *** rhr joined
[12:43] *** nsh joined
[12:43] *** allbery_b joined
[12:43] *** mikehh_ joined
[12:43] *** revdiablo joined
[12:43] *** ashizawa joined
[12:43] *** perigrin joined
[12:43] *** kcwu_ joined
[12:43] *** silug joined
[12:43] *** hatseflats joined
[12:43] *** rgrau joined
[12:43] *** Helios-- joined
[12:43] *** kst joined
[12:43] *** pjcj_ joined
[12:43] *** mdxi joined
[12:43] *** irc.freenode.net sets mode: +o TimToady

[12:43] *** akl joined
[12:43] *** baest joined
[12:43] *** cls_bsd joined
[12:43] *** buubot joined
[12:43] *** pnu joined
[12:43] *** cxreg joined
[12:43] *** ascent_ joined
[12:43] *** tkr joined
[12:43] *** omega__ joined
[12:43] *** idemal joined
[12:43] *** c1sung joined
[12:43] *** p6eval joined
[12:43] *** awwaiid joined
[12:43] *** IRSeekBot joined
[12:43] *** Grrrr joined
[12:43] *** Caelum joined
[12:43] *** moritz_ joined
[12:43] *** tarbo2_ joined
[12:43] *** mathw joined
[12:43] *** irc.freenode.net sets mode: +vvoo p6eval IRSeekBot moritz_ mathw

[12:44] *** Guest10508 joined
[12:44] *** stepnem joined
[12:44] *** debux joined
[12:44] *** breinbaas joined
[12:44] *** tomaw_ joined
[12:44] *** jnthn joined
[12:44] *** huf joined
[12:44] *** Trey joined
[12:44] *** IgnisInCaelum joined
[12:44] *** hicx174 joined
[12:44] *** takadonet joined
[12:44] *** betterworld joined
[12:44] *** elmex joined
[12:44] *** wolverian joined
[12:44] *** yahooooo joined
[12:44] *** PerlJam joined
[12:44] *** Infinoid joined
[12:44] *** Juerd joined
[12:44] *** krakan joined
[12:44] *** Woody2143 joined
[12:44] *** dalek joined
[12:44] *** yath joined
[12:44] *** saschi joined
[12:44] *** lestrrat joined
[12:44] *** Maddingue joined
[12:44] *** jql joined
[12:44] *** gfldex joined
[12:47] *** Baggiokwok joined
[12:49] *** mberends left
[12:49] *** bluescreen left
[12:49] *** rachelBROWN left
[12:49] *** orafu left
[12:49] *** c9s left
[12:49] *** araujo left
[12:49] *** cj left
[12:49] *** partisan left
[12:49] *** go|dfish left
[12:49] *** frettled left
[12:49] *** am0c left
[12:49] *** mtve left
[12:49] *** charsbar left
[12:49] *** charsbar_ left
[12:49] *** jonasbn left
[12:49] *** mssm left
[12:49] *** zamolxes left
[12:49] *** yves left
[12:49] *** REPLeffect left
[12:49] *** Tene left
[12:49] *** xinming_ left
[12:49] *** riffraff left
[12:53] *** RichiH left
[12:53] *** gfldex left
[12:53] *** takadonet left
[12:53] *** jnthn left
[12:53] *** breinbaas left
[12:53] *** krakan left
[12:53] *** Trey left
[12:53] *** yath left
[12:53] *** Guest10508 left
[12:53] *** Maddingue left
[12:53] *** jql left
[12:53] *** IgnisInCaelum left
[12:53] *** Infinoid left
[12:53] *** wolverian left
[12:53] *** yahooooo left
[12:53] *** debux left
[12:53] *** Woody2143 left
[12:53] *** betterworld left
[12:53] *** huf left
[12:53] *** Juerd left
[12:53] *** PerlJam left
[12:53] *** stepnem left
[12:53] *** saschi left
[12:53] *** dalek left
[12:53] *** hicx174 left
[12:53] *** elmex left
[12:53] *** tomaw_ left
[12:53] *** lestrrat left
[12:53] *** Baggiokwok left
[12:53] *** nbrown left
[12:53] *** [particle] left
[12:53] *** pugs_svn left
[12:53] *** arnsholt left
[12:53] *** sjohnson left
[12:53] *** kborer left
[12:53] *** colomon left
[12:53] *** lumi left
[12:53] *** zorgnax left
[12:53] *** spinclad left
[12:53] *** hercynium left
[12:53] *** _jaldhar left
[12:53] *** Chazz left
[12:53] *** gabiruh left
[12:53] *** sunnavy left
[12:53] *** _ilbot2 left
[12:53] *** gbacon left
[12:53] *** Exodist left
[12:53] *** sbp left
[12:53] *** silug left
[12:53] *** allbery_b left
[12:53] *** idemal left
[12:53] *** ssm left
[12:53] *** ascent_ left
[12:53] *** perigrin left
[12:53] *** dakkar left
[12:53] *** Su-Shee left
[12:53] *** frew left
[12:53] *** cottoo left
[12:53] *** Patterner left
[12:53] *** szabgab left
[12:53] *** payload left
[12:53] *** p6eval left
[12:53] *** Helios-- left
[12:53] *** hatseflats left
[12:53] *** buubot left
[12:53] *** c1sung left
[12:53] *** akl left
[12:53] *** moritz_ left
[12:53] *** rgrau left
[12:53] *** pnu left
[12:53] *** eternaleye left
[12:53] *** ruoso left
[12:53] *** mathw left
[12:53] *** Grrrr left
[12:53] *** baest left
[12:53] *** pjcj_ left
[12:53] *** mikehh_ left
[12:53] *** rhr left
[12:53] *** Guest97031 left
[12:53] *** tkr left
[12:53] *** mdxi left
[12:53] *** revdiablo left
[12:53] *** vinisterx left
[12:53] *** kst left
[12:53] *** hanekomu left
[12:53] *** cxreg left
[12:53] *** TimToady left
[12:53] *** omega__ left
[12:53] *** kcwu_ left
[12:53] *** drbean left
[12:53] *** nsh left
[12:53] *** Caelum left
[12:53] *** cls_bsd left
[12:53] *** tarbo2_ left
[12:53] *** IRSeekBot left
[12:53] *** awwaiid left
[12:53] *** ashizawa left
[12:53] *** colomon_ left
[12:53] *** BinGOs left
[12:53] *** eiro left
[12:53] *** meneldor left
[12:53] *** avar left
[12:53] *** PZt left
[12:53] *** literal left
[12:53] *** krunen left
[12:53] *** Gothmog_ left
[12:53] *** constant left
[12:53] *** felipe left
[12:53] *** meppl left
[12:53] *** presh_ left
[12:53] *** cotto_w0rk left
[12:54] *** Tene joined
[12:54] *** RichiH joined
[12:54] *** REPLeffect joined
[12:54] *** yves joined
[12:54] *** mtve joined
[12:54] *** cj joined
[12:54] *** zamolxes joined
[12:54] *** partisan joined
[12:54] *** go|dfish joined
[12:54] *** rachelBROWN joined
[12:54] *** araujo joined
[12:54] *** riffraff joined
[12:54] *** xinming_ joined
[12:54] *** mberends joined
[12:54] *** mssm joined
[12:54] *** jonasbn joined
[12:54] *** c9s joined
[12:54] *** am0c joined
[12:54] *** bluescreen joined
[12:54] *** charsbar_ joined
[12:54] *** orafu joined
[12:54] *** frettled joined
[12:54] *** Baggiokwok joined
[12:54] *** gfldex joined
[12:54] *** jql joined
[12:54] *** Maddingue joined
[12:54] *** lestrrat joined
[12:54] *** saschi joined
[12:54] *** yath joined
[12:54] *** dalek joined
[12:54] *** Woody2143 joined
[12:54] *** krakan joined
[12:54] *** Juerd joined
[12:54] *** Infinoid joined
[12:54] *** PerlJam joined
[12:54] *** yahooooo joined
[12:54] *** wolverian joined
[12:54] *** elmex joined
[12:54] *** betterworld joined
[12:54] *** takadonet joined
[12:54] *** hicx174 joined
[12:54] *** IgnisInCaelum joined
[12:54] *** Trey joined
[12:54] *** huf joined
[12:54] *** jnthn joined
[12:54] *** tomaw_ joined
[12:54] *** breinbaas joined
[12:54] *** debux joined
[12:54] *** stepnem joined
[12:54] *** irc.freenode.net sets mode: +oo Tene frettled

[12:54] *** Guest10508 joined
[12:54] *** mathw joined
[12:54] *** tarbo2_ joined
[12:54] *** moritz_ joined
[12:54] *** Caelum joined
[12:54] *** Grrrr joined
[12:54] *** IRSeekBot joined
[12:54] *** awwaiid joined
[12:54] *** p6eval joined
[12:54] *** irc.freenode.net sets mode: +oovv mathw moritz_ IRSeekBot p6eval

[12:54] *** c1sung joined
[12:54] *** idemal joined
[12:54] *** omega__ joined
[12:54] *** tkr joined
[12:54] *** ascent_ joined
[12:54] *** cxreg joined
[12:54] *** pnu joined
[12:54] *** buubot joined
[12:54] *** cls_bsd joined
[12:54] *** baest joined
[12:54] *** akl joined
[12:54] *** mdxi joined
[12:54] *** pjcj_ joined
[12:54] *** kst joined
[12:54] *** Helios-- joined
[12:54] *** rgrau joined
[12:54] *** hatseflats joined
[12:54] *** silug joined
[12:54] *** kcwu_ joined
[12:54] *** perigrin joined
[12:54] *** ashizawa joined
[12:54] *** revdiablo joined
[12:54] *** mikehh_ joined
[12:54] *** allbery_b joined
[12:54] *** nsh joined
[12:54] *** rhr joined
[12:54] *** ssm joined
[12:54] *** Guest97031 joined
[12:54] *** cottoo joined
[12:54] *** szabgab joined
[12:54] *** eternaleye joined
[12:54] *** dakkar joined
[12:54] *** hanekomu joined
[12:54] *** Patterner joined
[12:54] *** drbean joined
[12:54] *** ruoso joined
[12:54] *** vinisterx joined
[12:54] *** Su-Shee joined
[12:54] *** gabiruh joined
[12:54] *** sunnavy joined
[12:54] *** nbrown joined
[12:54] *** Chazz joined
[12:54] *** [particle] joined
[12:54] *** gbacon joined
[12:54] *** pugs_svn joined
[12:54] *** hercynium joined
[12:54] *** arnsholt joined
[12:54] *** sjohnson joined
[12:54] *** kborer joined
[12:54] *** spinclad joined
[12:54] *** zorgnax joined
[12:54] *** colomon joined
[12:54] *** _jaldhar joined
[12:54] *** lumi joined
[12:54] *** _ilbot2 joined
[12:54] *** Exodist joined
[12:54] *** frew joined
[12:54] *** sbp joined
[12:54] *** TimToady joined
[12:54] *** colomon_ joined
[12:54] *** BinGOs joined
[12:54] *** eiro joined
[12:54] *** presh_ joined
[12:54] *** felipe joined
[12:54] *** constant joined
[12:54] *** krunen joined
[12:54] *** Gothmog_ joined
[12:54] *** meppl joined
[12:54] *** avar joined
[12:54] *** literal joined
[12:54] *** PZt joined
[12:54] *** meneldor joined
[12:54] *** irc.freenode.net sets mode: +o TimToady

[12:54] *** cotto_w0rk joined
[12:54] *** iblechbot joined
[12:56] *** lumi left
[12:56] *** kborer left
[12:56] *** arnsholt left
[12:56] *** pugs_svn left
[12:56] *** nbrown left
[12:56] *** sjohnson left
[12:56] *** colomon left
[12:56] *** zorgnax left
[12:56] *** [particle] left
[12:56] *** hercynium left
[12:56] *** Baggiokwok left
[12:56] *** _jaldhar left
[12:56] *** spinclad left
[12:56] *** Exodist left
[12:56] *** gbacon left
[12:56] *** sunnavy left
[12:56] *** _ilbot2 left
[12:56] *** gabiruh left
[12:56] *** sbp left
[12:56] *** Chazz left
[12:58] *** Baggiokwok joined
[12:58] *** sbp joined
[12:58] *** gabiruh joined
[12:58] *** Exodist joined
[12:58] *** _ilbot2 joined
[12:58] *** lumi joined
[12:58] *** _jaldhar joined
[12:58] *** colomon joined
[12:58] *** zorgnax joined
[12:58] *** spinclad joined
[12:58] *** kborer joined
[12:58] *** sjohnson joined
[12:58] *** arnsholt joined
[12:58] *** hercynium joined
[12:58] *** pugs_svn joined
[12:58] *** gbacon joined
[12:58] *** [particle] joined
[12:58] *** Chazz joined
[12:58] *** nbrown joined
[12:58] *** sunnavy joined
[13:00] <colomon> rakudo: class A { method B($inv: $fred) { say $inv.WHAT; say $fred.WHAT; }; }; A.new.B("hello");

[13:00] <p6eval> rakudo 726b83:  ( no output )

[13:02] *** c9s_ joined
[13:02] <takadonet> morning all

[13:07] *** cotto_working left
[13:09] <meneldor> guys when i invoke a method inside Role how to know which class is the invocant?

[13:09] <moritz_> with $?CLASS or so

[13:09] <moritz_> not sure if it's implemented

[13:09] <moritz_> or self.WHAT

[13:10] *** cognominal joined
[13:10] <meneldor> self.self.WHAT is : Use of uninitialized value

[13:10] <meneldor> self.WHAT i mean

[13:11] <meneldor> Symbol '$?CLASS' not predeclared in create 

[13:11] *** bluescreen left
[13:11] *** mberends left
[13:11] *** rachelBROWN left
[13:11] *** orafu left
[13:11] *** cj left
[13:11] *** c9s left
[13:11] *** go|dfish left
[13:11] *** partisan left
[13:11] *** araujo left
[13:11] *** frettled left
[13:11] *** jonasbn left
[13:11] *** REPLeffect left
[13:11] *** mssm left
[13:11] *** yves left
[13:11] *** mtve left
[13:11] *** zamolxes left
[13:11] *** charsbar_ left
[13:11] *** am0c left
[13:11] *** riffraff left
[13:11] *** xinming_ left
[13:11] *** Tene left
[13:11] *** RichiH left
[13:12] *** charsbar joined
[13:12] *** astinus joined
[13:12] *** frettled joined
[13:12] *** xinming joined
[13:13] <jnthn> self.WHAT I think should work. :-/

[13:17] *** xinming left
[13:17] *** cognominal left
[13:17] *** cotto_w0rk left
[13:17] *** jnthn left
[13:17] *** IgnisInCaelum left
[13:17] *** takadonet left
[13:17] *** krakan left
[13:17] *** gfldex left
[13:17] *** Woody2143 left
[13:17] *** jql left
[13:17] *** breinbaas left
[13:17] *** wolverian left
[13:17] *** yahooooo left
[13:17] *** Guest10508 left
[13:17] *** yath left
[13:17] *** debux left
[13:17] *** betterworld left
[13:17] *** Trey left
[13:17] *** huf left
[13:17] *** stepnem left
[13:17] *** PerlJam left
[13:17] *** Infinoid left
[13:17] *** hicx174 left
[13:17] *** Juerd left
[13:17] *** Maddingue left
[13:17] *** elmex left
[13:17] *** saschi left
[13:17] *** dalek left
[13:17] *** lestrrat left
[13:17] *** tomaw_ left
[13:17] *** colomon_ left
[13:17] *** eiro left
[13:17] *** BinGOs left
[13:17] *** literal left
[13:17] *** avar left
[13:17] *** PZt left
[13:17] *** meneldor left
[13:17] *** krunen left
[13:17] *** presh_ left
[13:17] *** meppl left
[13:17] *** Gothmog_ left
[13:17] *** constant left
[13:17] *** felipe left
[13:17] *** nbrown left
[13:17] *** pugs_svn left
[13:17] *** arnsholt left
[13:17] *** sjohnson left
[13:17] *** kborer left
[13:17] *** lumi left
[13:17] *** colomon left
[13:17] *** Baggiokwok left
[13:17] *** [particle] left
[13:17] *** sunnavy left
[13:17] *** _jaldhar left
[13:17] *** hercynium left
[13:17] *** spinclad left
[13:17] *** zorgnax left
[13:17] *** Chazz left
[13:17] *** _ilbot2 left
[13:17] *** gbacon left
[13:17] *** Exodist left
[13:17] *** gabiruh left
[13:17] *** sbp left
[13:17] *** silug left
[13:17] *** allbery_b left
[13:17] *** idemal left
[13:17] *** ssm left
[13:17] *** c9s_ left
[13:17] *** iblechbot left
[13:17] *** frew left
[13:17] *** Su-Shee left
[13:17] *** Patterner left
[13:17] *** perigrin left
[13:17] *** ascent_ left
[13:17] *** cottoo left
[13:17] *** Helios-- left
[13:17] *** dakkar left
[13:17] *** szabgab left
[13:17] *** eternaleye left
[13:17] *** p6eval left
[13:17] *** moritz_ left
[13:17] *** ruoso left
[13:17] *** pnu left
[13:17] *** rgrau left
[13:17] *** akl left
[13:17] *** c1sung left
[13:17] *** hatseflats left
[13:17] *** buubot left
[13:17] *** frettled left
[13:17] *** astinus left
[13:17] *** rhr left
[13:17] *** mikehh_ left
[13:17] *** mdxi left
[13:17] *** Grrrr left
[13:17] *** mathw left
[13:17] *** revdiablo left
[13:17] *** vinisterx left
[13:17] *** tkr left
[13:17] *** baest left
[13:17] *** Guest97031 left
[13:17] *** pjcj_ left
[13:17] *** kst left
[13:17] *** omega__ left
[13:17] *** nsh left
[13:17] *** TimToady left
[13:17] *** ashizawa left
[13:17] *** awwaiid left
[13:17] *** cxreg left
[13:17] *** Caelum left
[13:17] *** drbean left
[13:17] *** kcwu_ left
[13:17] *** hanekomu left
[13:17] *** tarbo2_ left
[13:17] *** cls_bsd left
[13:17] *** IRSeekBot left
[13:17] *** mj41 left
[13:17] *** mathw joined
[13:17] *** mj41 joined
[13:17] *** charsba__ joined
[13:17] *** c9s joined
[13:17] *** zamolxes joined
[13:17] *** RichiH joined
[13:17] *** REPLeffect joined
[13:17] *** yves joined
[13:17] *** mtve joined
[13:17] *** cj joined
[13:17] *** partisan joined
[13:17] *** rachelBROWN joined
[13:17] *** araujo joined
[13:17] *** riffraff joined
[13:17] *** xinming_ joined
[13:17] *** mberends joined
[13:17] *** mssm joined
[13:17] *** jonasbn joined
[13:17] *** am0c joined
[13:17] *** bluescreen joined
[13:17] *** charsbar_ joined
[13:17] *** orafu joined
[13:17] *** xinming joined
[13:17] *** frettled joined
[13:17] *** astinus joined
[13:17] *** cognominal joined
[13:17] *** c9s_ joined
[13:17] *** sunnavy joined
[13:17] *** nbrown joined
[13:17] *** Chazz joined
[13:17] *** [particle] joined
[13:17] *** gbacon joined
[13:17] *** pugs_svn joined
[13:17] *** hercynium joined
[13:17] *** arnsholt joined
[13:17] *** sjohnson joined
[13:17] *** kborer joined
[13:17] *** spinclad joined
[13:17] *** zorgnax joined
[13:17] *** colomon joined
[13:17] *** _jaldhar joined
[13:17] *** lumi joined
[13:17] *** _ilbot2 joined
[13:17] *** Exodist joined
[13:17] *** gabiruh joined
[13:17] *** sbp joined
[13:17] *** Baggiokwok joined
[13:17] *** iblechbot joined
[13:17] *** irc.freenode.net sets mode: +o mathw

[13:17] *** cotto_w0rk joined
[13:17] *** gfldex joined
[13:17] *** jql joined
[13:17] *** Maddingue joined
[13:17] *** lestrrat joined
[13:17] *** saschi joined
[13:17] *** yath joined
[13:17] *** dalek joined
[13:17] *** Woody2143 joined
[13:17] *** krakan joined
[13:17] *** Juerd joined
[13:17] *** Infinoid joined
[13:17] *** PerlJam joined
[13:17] *** yahooooo joined
[13:17] *** wolverian joined
[13:17] *** elmex joined
[13:17] *** betterworld joined
[13:17] *** takadonet joined
[13:17] *** hicx174 joined
[13:17] *** IgnisInCaelum joined
[13:17] *** Trey joined
[13:17] *** huf joined
[13:17] *** jnthn joined
[13:17] *** breinbaas joined
[13:17] *** debux joined
[13:17] *** stepnem joined
[13:17] *** Guest10508 joined
[13:17] *** tarbo2_ joined
[13:17] *** moritz_ joined
[13:17] *** Caelum joined
[13:17] *** Grrrr joined
[13:17] *** IRSeekBot joined
[13:17] *** awwaiid joined
[13:17] *** p6eval joined
[13:17] *** c1sung joined
[13:17] *** idemal joined
[13:17] *** omega__ joined
[13:17] *** tkr joined
[13:17] *** ascent_ joined
[13:17] *** cxreg joined
[13:17] *** pnu joined
[13:17] *** buubot joined
[13:17] *** cls_bsd joined
[13:17] *** baest joined
[13:17] *** akl joined
[13:17] *** mdxi joined
[13:17] *** pjcj_ joined
[13:17] *** kst joined
[13:17] *** Helios-- joined
[13:17] *** rgrau joined
[13:17] *** hatseflats joined
[13:17] *** silug joined
[13:17] *** irc.freenode.net sets mode: +ovv moritz_ IRSeekBot p6eval

[13:17] *** kcwu_ joined
[13:17] *** perigrin joined
[13:17] *** ashizawa joined
[13:17] *** revdiablo joined
[13:17] *** mikehh_ joined
[13:17] *** allbery_b joined
[13:17] *** nsh joined
[13:17] *** rhr joined
[13:17] *** ssm joined
[13:17] *** Guest97031 joined
[13:17] *** cottoo joined
[13:17] *** szabgab joined
[13:17] *** eternaleye joined
[13:17] *** dakkar joined
[13:17] *** hanekomu joined
[13:17] *** Patterner joined
[13:17] *** drbean joined
[13:17] *** ruoso joined
[13:17] *** vinisterx joined
[13:17] *** Su-Shee joined
[13:17] *** frew joined
[13:17] *** TimToady joined
[13:17] *** colomon_ joined
[13:17] *** BinGOs joined
[13:17] *** eiro joined
[13:17] *** presh_ joined
[13:17] *** felipe joined
[13:17] *** constant joined
[13:17] *** krunen joined
[13:17] *** Gothmog_ joined
[13:17] *** meppl joined
[13:17] *** avar joined
[13:17] *** literal joined
[13:17] *** PZt joined
[13:17] *** meneldor joined
[13:17] *** irc.freenode.net sets mode: +o TimToady

[13:17] *** Intensity joined
[13:17] *** Tene joined
[13:18] *** nadim_ left
[13:18] *** nadim_ joined
[13:18] <moritz_> meneldor: did you compose the role into a class?

[13:18] *** tomaw_- joined
[13:19] <meneldor> you mean: class Foo does Bar ?

[13:23] <moritz_> yes

[13:23] <meneldor> yea

[13:24] <moritz_> ./perl6 -e 'role a { method b {say self} }; class b does a { }; b.new.b'

[13:24] <moritz_> b()<0x7f86b0e36168>

[13:24] *** go|dfish joined
[13:24] <moritz_> and when I use say self.WHAT I get b()

[13:25] *** tomaw_- is now known as tomaw__

[13:26] *** xinming_ left
[13:26] <meneldor> moritz_:  i use it as module

[13:27] <meneldor> my classes are in other file

[13:27] <meneldor> then i compose an object in the first file 

[13:27] <meneldor> next im calling the role 

[13:28] <meneldor> when i do this inside the module everythink is fine

[13:28] *** ignacio_ joined
[13:28] <meneldor> do i have to export the role?

[13:28] <moritz_> no

[13:28] <moritz_> but you have to use the module the role is in

[13:29] *** ignacio_ left
[13:29] *** go|dfish left
[13:29] *** bluescreen left
[13:29] *** mberends left
[13:29] *** rachelBROWN left
[13:29] *** orafu left
[13:29] *** cj left
[13:29] *** partisan left
[13:29] *** araujo left
[13:29] *** Tene left
[13:29] *** jonasbn left
[13:29] *** REPLeffect left
[13:29] *** mssm left
[13:29] *** yves left
[13:29] *** mtve left
[13:29] *** zamolxes left
[13:29] *** charsbar_ left
[13:29] *** am0c left
[13:29] *** riffraff left
[13:29] *** mj41 left
[13:29] *** RichiH left
[13:29] *** jnthn left
[13:29] *** IgnisInCaelum left
[13:29] *** takadonet left
[13:29] *** krakan left
[13:29] *** gfldex left
[13:29] *** Woody2143 left
[13:29] *** jql left
[13:29] *** breinbaas left
[13:29] *** wolverian left
[13:29] *** cotto_w0rk left
[13:29] *** yahooooo left
[13:29] *** Guest10508 left
[13:29] *** yath left
[13:29] *** debux left
[13:29] *** betterworld left
[13:29] *** Trey left
[13:29] *** huf left
[13:29] *** stepnem left
[13:29] *** PerlJam left
[13:29] *** Infinoid left
[13:29] *** hicx174 left
[13:29] *** Juerd left
[13:29] *** Maddingue left
[13:29] *** cognominal left
[13:29] *** elmex left
[13:29] *** saschi left
[13:29] *** dalek left
[13:29] *** lestrrat left
[13:29] *** xinming left
[13:29] *** colomon_ left
[13:29] *** eiro left
[13:29] *** BinGOs left
[13:29] *** literal left
[13:29] *** avar left
[13:29] *** PZt left
[13:29] *** meneldor left
[13:29] *** krunen left
[13:29] *** presh_ left
[13:29] *** meppl left
[13:29] *** Gothmog_ left
[13:29] *** constant left
[13:29] *** felipe left
[13:29] *** tomaw__ left
[13:29] *** lumi left
[13:29] *** kborer left
[13:29] *** arnsholt left
[13:29] *** pugs_svn left
[13:29] *** nbrown left
[13:29] *** sjohnson left
[13:29] *** colomon left
[13:29] *** zorgnax left
[13:29] *** [particle] left
[13:29] *** hercynium left
[13:29] *** Baggiokwok left
[13:29] *** _jaldhar left
[13:29] *** spinclad left
[13:29] *** _ilbot2 left
[13:29] *** gabiruh left
[13:29] *** charsba__ left
[13:29] *** Chazz left
[13:29] *** sbp left
[13:29] *** Exodist left
[13:29] *** gbacon left
[13:29] *** sunnavy left
[13:29] *** Intensity left
[13:29] *** silug left
[13:29] *** allbery_b left
[13:29] *** idemal left
[13:29] *** ssm left
[13:29] *** frew left
[13:29] *** Su-Shee left
[13:29] *** Patterner left
[13:29] *** perigrin left
[13:29] *** ascent_ left
[13:29] *** cottoo left
[13:29] *** Helios-- left
[13:29] *** dakkar left
[13:29] *** szabgab left
[13:29] *** eternaleye left
[13:29] *** p6eval left
[13:29] *** moritz_ left
[13:29] *** ruoso left
[13:29] *** pnu left
[13:29] *** rgrau left
[13:29] *** akl left
[13:29] *** c1sung left
[13:29] *** c9s_ left
[13:29] *** hatseflats left
[13:29] *** buubot left
[13:29] *** iblechbot left
[13:29] *** rhr left
[13:29] *** mikehh_ left
[13:29] *** mdxi left
[13:29] *** Grrrr left
[13:29] *** mathw left
[13:29] *** frettled left
[13:29] *** revdiablo left
[13:29] *** vinisterx left
[13:29] *** tkr left
[13:29] *** baest left
[13:29] *** Guest97031 left
[13:29] *** astinus left
[13:29] *** pjcj_ left
[13:29] *** kst left
[13:29] *** omega__ left
[13:29] *** nsh left
[13:29] *** TimToady left
[13:29] *** ashizawa left
[13:29] *** awwaiid left
[13:29] *** cxreg left
[13:29] *** Caelum left
[13:29] *** drbean left
[13:29] *** kcwu_ left
[13:29] *** c9s left
[13:29] *** hanekomu left
[13:29] *** tarbo2_ left
[13:29] *** cls_bsd left
[13:29] *** IRSeekBot left
[13:34] *** charsbar left
[13:39] *** TimToady joined
[13:39] *** REPLeffect joined
[13:39] *** yves joined
[13:39] *** mtve joined
[13:39] *** cj joined
[13:39] *** partisan joined
[13:39] *** rachelBROWN joined
[13:39] *** araujo joined
[13:39] *** riffraff joined
[13:39] *** mberends joined
[13:39] *** mssm joined
[13:39] *** jonasbn joined
[13:39] *** am0c joined
[13:39] *** bluescreen joined
[13:39] *** orafu joined
[13:39] *** RichiH joined
[13:39] *** zamolxes joined
[13:39] *** mj41 joined
[13:39] *** Tene joined
[13:39] *** go|dfish joined
[13:39] *** ignacio_ joined
[13:39] *** Exodist joined
[13:39] *** Su-Shee joined
[13:39] *** vinisterx joined
[13:39] *** ruoso joined
[13:39] *** drbean joined
[13:39] *** Patterner joined
[13:39] *** hanekomu joined
[13:39] *** dakkar joined
[13:39] *** eternaleye joined
[13:39] *** szabgab joined
[13:39] *** cottoo joined
[13:39] *** Guest97031 joined
[13:39] *** ssm joined
[13:39] *** rhr joined
[13:39] *** nsh joined
[13:39] *** allbery_b joined
[13:39] *** mikehh_ joined
[13:39] *** revdiablo joined
[13:39] *** ashizawa joined
[13:39] *** perigrin joined
[13:39] *** kcwu_ joined
[13:39] *** silug joined
[13:39] *** hatseflats joined
[13:39] *** rgrau joined
[13:39] *** Helios-- joined
[13:39] *** kst joined
[13:39] *** pjcj_ joined
[13:39] *** mdxi joined
[13:39] *** akl joined
[13:39] *** irc.freenode.net sets mode: +o TimToady

[13:39] *** baest joined
[13:39] *** cls_bsd joined
[13:39] *** buubot joined
[13:39] *** pnu joined
[13:39] *** cxreg joined
[13:39] *** ascent_ joined
[13:39] *** tkr joined
[13:39] *** omega__ joined
[13:39] *** idemal joined
[13:39] *** c1sung joined
[13:39] *** p6eval joined
[13:39] *** awwaiid joined
[13:39] *** IRSeekBot joined
[13:39] *** Grrrr joined
[13:39] *** Caelum joined
[13:39] *** moritz_ joined
[13:39] *** tarbo2_ joined
[13:39] *** frew joined
[13:39] *** iblechbot joined
[13:39] *** c9s_ joined
[13:39] *** astinus joined
[13:39] *** frettled joined
[13:39] *** c9s joined
[13:39] *** Intensity joined
[13:39] *** charsbar joined
[13:39] *** tomaw__ joined
[13:39] *** Baggiokwok joined
[13:39] *** sbp joined
[13:39] *** gabiruh joined
[13:39] *** _ilbot2 joined
[13:39] *** lumi joined
[13:39] *** _jaldhar joined
[13:39] *** colomon joined
[13:39] *** zorgnax joined
[13:39] *** spinclad joined
[13:39] *** kborer joined
[13:39] *** sjohnson joined
[13:39] *** arnsholt joined
[13:39] *** hercynium joined
[13:39] *** pugs_svn joined
[13:39] *** gbacon joined
[13:39] *** [particle] joined
[13:39] *** Chazz joined
[13:39] *** nbrown joined
[13:39] *** sunnavy joined
[13:39] *** [particle]1 joined
[13:39] *** mathw joined
[13:39] *** irc.freenode.net sets mode: +vvoo p6eval IRSeekBot moritz_ mathw

[13:39] *** meppl joined
[13:39] *** Gothmog_ joined
[13:39] *** krunen joined
[13:39] *** constant joined
[13:39] *** felipe joined
[13:39] *** presh_ joined
[13:41] *** meneldor joined
[13:41] *** colomon_ joined
[13:41] *** PZt joined
[13:41] *** literal joined
[13:41] *** avar joined
[13:41] *** eiro joined
[13:41] *** BinGOs joined
[13:42] *** plainhao joined
[13:42] *** xinming joined
[13:42] *** cognominal joined
[13:42] *** cotto_w0rk joined
[13:42] *** Guest10508 joined
[13:42] *** stepnem joined
[13:42] *** debux joined
[13:42] *** breinbaas joined
[13:42] *** jnthn joined
[13:42] *** huf joined
[13:42] *** Trey joined
[13:42] *** IgnisInCaelum joined
[13:42] *** hicx174 joined
[13:42] *** takadonet joined
[13:42] *** betterworld joined
[13:42] *** elmex joined
[13:42] *** wolverian joined
[13:42] *** yahooooo joined
[13:42] *** PerlJam joined
[13:42] *** Infinoid joined
[13:42] *** Juerd joined
[13:42] *** krakan joined
[13:42] *** Woody2143 joined
[13:42] *** dalek joined
[13:42] *** yath joined
[13:42] *** saschi joined
[13:42] *** lestrrat joined
[13:42] *** Maddingue joined
[13:42] *** jql joined
[13:42] *** gfldex joined
[13:43] * moritz_ just wrote $self->schema->resultset('Job')->search({ status => $status }) in Perl 5

[13:44] <moritz_> and I would have loved to write it as @.schema.resultset('Job').search({ :$status}) instead :-)

[13:45] *** mssm left
[13:49] *** meneldor left
[13:50] *** [particle] left
[13:50] <PerlJam> moritz_: Well ...  port DBIx::Class to Perl 6  ;)

[13:51] <PerlJam> greetings btw

[13:52] *** PZt left
[13:57] <colomon> moritz_: wait, is @. equivalent to @(self). or something?

[13:58] <moritz_> colomon: @.foo is equivalent to @(self.foo)

[13:58] <moritz_> and I just reallized that it's wrong in this context

[14:00] *** meteorjay joined
[14:00] <mathw> DBIx::Class in Perl 6 would be awesome

[14:03] <takadonet> really want to start using DBIx::Class (Perl 5) in my projects

[14:08] *** drbean left
[14:10] <PerlJam> mathw: what would make it more awesome is if it were ready for Rakudo *

[14:10] * PerlJam is really wishing for lexically scoped macros in Perl 5 right now.

[14:12] *** Alias joined
[14:13] <PerlJam> greetings Alias

[14:14] <Alias> \o

[14:15] *** payload joined
[14:17] <Su-Shee> I wish for named parameters. 

[14:18] *** meneldor\ joined
[14:19] *** meneldor\ is now known as meneldor

[14:20] <meneldor> moritz_: it works 

[14:21] <meneldor> just silly mistake :)

[14:22] <meneldor> if self.WHAT says MyModule(), how to compare it against class MyModule?

[14:22] <jnthn> self.WHAT ~~ MyModule # permits subclasses too; that said, self ~~ MyModule will also do that.

[14:23] <jnthn> But be careful...

[14:23] <jnthn> You're making the role less useful to other classes.

[14:24] <meneldor> i use the role with 4 classes and i wanna know which one invoke it

[14:24] <jnthn> Why, out of interest?

[14:24] <moritz_> if your design is good, that should not be interest

[14:24] <moritz_> (except for debugging, maybe)

[14:25] *** moritz_ sets mode: +oooo jnthn meneldor Alias PerlJam

[14:25] <meneldor> for debugging

[14:25] <jnthn> Ah, for debugging makes sense then. :-)

[14:27] <mathw> PerlJam: First we need basic database drivers then

[14:28] <moritz_> first DBI, then DBIx::@things :-)

[14:28] <moritz_> for testing and developing DBI, you can use file-based DBDs first

[14:28] *** payload left
[14:29] *** payload joined
[14:29] <mathw> this is true

[14:31] <meneldor> DBIx::@things ? what it would be :)

[14:33] <meneldor> of im out of space today, you mean DBIx::Class etc

[14:34] <moritz_> right

[14:34] <moritz_> any classes in the DBIx:: namespace

[14:37] <meneldor> a driver for SQLite will be good for begining 

[14:37] *** payload left
[14:38] *** payload joined
[14:38] <moritz_> masak++ has written some SQLite binding, iirc

[14:39] <colomon> http://news.ycombinator.com/item?id=1064622

[14:41] <mberends> heh

[14:43] *** PZt joined
[14:44] * moritz_ wrote a reply

[14:44] *** moritz_ sets mode: +oo colomon mberends

[14:44] *** lumi left
[14:44] *** lumi joined
[14:44] *** Intensity left
[14:44] <mberends> the article preceding the comment is just as important http://use.perl.org/~masak/journal/40110

[14:45] <colomon> sure, I figured people had read that already.  :)

[14:45] <colomon> I forget everyone may not follow the blogs like I do.

[14:46] * moritz_ reads planetsix

[14:46] <takadonet> colomon: you are not alone. I read every piece about Perl 6 or Parrot

[14:52] * jnthn -> vienna.pm

[14:52] <mberends> good move

[14:59] *** Guest10508 left
[15:01] <frettled> Newsflash: security vulnerability in gzip, fixed in Debian etch, lenny and sid (unstable), unknown status for other systems.

[15:01] <PerlJam> newsflashes are for twitter :)

[15:02] <mberends> zippers are for flashers ;)

[15:04] <moritz_> now I've forgotten to add 1; to the end of a Perl 5 module. Againe.

[15:04] <moritz_> s/e\././

[15:04] *** pmichaud joined
[15:04] <pmichaud> good morning, #perl6

[15:05] *** moritz_ sets mode: +o PerlJam

[15:05] *** moritz_ sets mode: +o pmichaud

[15:05] <moritz_> good morning pmichaud 

[15:05] <takadonet> morning pmichaud

[15:05] <frettled> good morning :)

[15:05] <PerlJam> greets pm

[15:05] <mberends> hello pmichaud :)

[15:06] <colomon> \o/

[15:06] <pmichaud> so, for the january release I'm currently leaning towards holding the release for a few days so that we can bring the ng branch a bit farther along (but no longer than a week -- i.e., next thursday we ship ng branch no matter what).  opinions?

[15:07] <PerlJam> Does "bring ng farther along" mean "make it master" or not?

[15:07] <pmichaud> yes

[15:07] <frettled> pmichaud: go for it

[15:07] <moritz_> pmichaud: +1

[15:07] <PerlJam> Then holding for a week gets my vote for sure.

[15:07] <pmichaud> other option is to ship one last release on the current master, and then immediately switch ng to be new master immediately after release

[15:07] *** ash_ joined
[15:08] <pmichaud> but I don't see a whole lot of purpose in another release on the old master

[15:08] <PerlJam> indeed

[15:08] <colomon> seems like it would require a blitz of work to make ng ready to be master in a week, but it's certainly not a bad idea.

[15:08] <pmichaud> well, several have said we should bite the bullet and make ng master even if it means a (significant) regression.  I'm inclined to agree.

[15:08] <pmichaud> regardless, I plan to have list assignment done today.  :)

[15:08] <moritz_> \o/

[15:08] <PerlJam> \o/

[15:08] <pmichaud> that should help a lot

[15:09] *** KyleHa joined
[15:09] <pmichaud> okay, I'll go with the "hold for up to a week" plan.

[15:09] <ash_> pmichaud does the list changes include @ context? 

[15:09] <pmichaud> ash_: we should be able to do that reasonably quickly, yes.

[15:09] <ash_> cool

[15:09] <colomon> list assignment \o/

[15:10] *** payload left
[15:10] *** payload joined
[15:16] <pmichaud> S03:1996 looks wrongish.

[15:17] *** kborer left
[15:17] <pmichaud> I thought that array assignment is "mostly eager"

[15:17] *** PacoLinux joined
[15:18] <colomon> really?  I would think laziness is pretty necessary -- otherwise you're forcing people to think about array versus list all the time.

[15:18] *** payload left
[15:21] <colomon> oooo, laziness and side effects really don't get along well, do they?

[15:25] <ash_> pmichaud in src/builtin/List.pir there is a list function, (that is supposed to be the long name for @()) it currently isn't working correctly, i think, if you pass a named parameter. I was letting you know since your doing some stuff with lists right now

[15:25] <ash_> here's an example

[15:25] <ash_> ng:  say list(1, 2, :b<a>).perl;

[15:25] <p6eval> ng f21362: (1, 2)␤

[15:26] <ash_> the 3rd parameter should be a pair, moritz_++ noticed this 

[15:30] *** lisppaste3 joined
[15:33] <pmichaud> checking.  I think the spec changed recently here.

[15:34] <pmichaud> if the spec didn't change, then ng has it correct.

[15:34] <pmichaud> and :b<a> would be a named argument to list()

[15:35] <moritz_> I think having list() specced as a function is wrong

[15:35] <moritz_> and even if it where, it would have to die

[15:35] <moritz_> bacause list has only *@_, not *%_

[15:36] <pmichaud> there was a long discussion about this many moons ago

[15:36] <pmichaud> the problem is not only with list()

[15:36] *** Intensity joined
[15:36] <pmichaud> i.e., it's not something we can fix by recognizing 'list' syntactically

[15:37] <pmichaud> e.g.:        for   1,2,3,:a<b> { .say }

[15:37] <pmichaud> (although this one probably works, I guess.  hrm.)

[15:37] <pmichaud> anyway, current spec says that    :a<b>   is always a named parameter when used as an argument

[15:37] <moritz_> rakudo: for 1, 2, :a<b> -> $x { say $x.WHAT }

[15:37] <p6eval> rakudo 726b83: Int()␤Int()␤Pair()␤

[15:38] <pmichaud> right, rakudo currently sees that okay because 'for' isn't a function call

[15:38] <pmichaud> okay, looks as though the spec (S06) did not change

[15:39] <pmichaud> so   list(1, 2, :a<b>)   should either throw an exception or it should contain two elements

[15:39] <pmichaud> and, of course,  list(...)  is *always* a function call, because of the parens.

[15:39] <moritz_> oh

[15:39] <pmichaud> interestingly:

[15:39] <ash_> so, list 1, 2, :a<b> is different than list(1, 2, :a<b>) ? 

[15:40] <pmichaud> ash: yes.

[15:40] <ash_> k, i see 

[15:40] <pmichaud> interestingly:

[15:40] <pmichaud> ng:  say (list (1, 2, :a<b>)).perl

[15:40] <p6eval> ng f21362: (1, 2)␤

[15:40] <pmichaud> I call bug.

[15:40] *** nihiliad joined
[15:40] <pmichaud> that should have three elements, not two.

[15:41] <ash_> how would you be able to tell the difference between list () and list() 

[15:41] <pmichaud> by the space

[15:41] <colomon> woah.

[15:41] <pmichaud> ng:   say(3), 4, 5

[15:41] <p6eval> ng f21362: 3␤

[15:41] <pmichaud> ng:   say (3),4,5

[15:41] <p6eval> ng f21362: 345␤

[15:42] <ash_> okay, i thought you could have a space after the funciton name for some reason, but apparently not :P 

[15:42] <mathw> you can, but it means something else :)

[15:42] <pmichaud> this is also what allows us to distinguish    if 1 ...     from   if(1)

[15:43] * ash_ nods 

[15:43] <pmichaud> in detail...

[15:43] <pmichaud> say(3)    is a postcircumfix on the 'say' function

[15:44] <pmichaud> say (3)   is a circumfix (3) argument to the say listop

[15:44] * colomon nods

[15:46] <ash_> S03 under Comma operator precedence covers this apparently, i just missed some of the specifics, i'll re-read that section

[15:47] <ash_> well, some of this, not all of it

[15:47] <pmichaud> it's mainly that postcircumfix operators don't have spaces

[15:48] *** breinbaas left
[15:48] <ash_> so, is S32-Containers list subroutine the correct definition then? 

[15:49] <pmichaud> looking

[15:49] <pmichaud> ash_: I think so, yes.

[15:49] <pmichaud> at least, it's correct as things stand today.

[15:50] <pmichaud> this is one of those areas that it wouldn't surprise me if we have a spec change at some point (thus my earlier comment thinking that perhaps the spec changed recently on this point)

[15:51] <ash_> well i added that since it wasn't in the spec that I could find, so i am just making sure I added the right thing

[15:52] <pmichaud> phenny tell TimToady  S03:1996 looks wrongish... any clarifications you can offer?  I thought array assignment was now mostly eager (even for iterators).

[15:52] <pmichaud> ...ENOPHENNY?

[15:52] <pmichaud> oh well, TimToady will see it in backscroll :)

[15:53] <colomon> what would "mostly eager" mean?

[15:53] *** Patterner left
[15:53] <pmichaud> "mostly eager" (defined in S07) means that we iterate and fill in elements until we reach a point that we *know* will be infinite

[15:54] <moritz_> uhm.

[15:54] <pmichaud> thus    @a = 1..5;   would not be a lazy assignment

[15:54] <moritz_> what about 1 ... $closure?

[15:54] <pmichaud> afaik, that would tend to be eager also when assigned to an array

[15:55] <moritz_> even though we don't know if it might be infinite?

[15:55] *** ash_ left
[15:55] <pmichaud> correct

[15:55] <pmichaud> see S07, and S07:72

[15:56] <moritz_> that's... definitively not DWIM

[15:56] <pmichaud> I think that depens on WYM  :-)

[15:56] <pmichaud> *depends

[15:56] <colomon> I'm with moritz_.

[15:57] *** mssm joined
[15:57] <pmichaud> the problem is with things like    @a = (1, 2, foo(), @b)

[15:57] <moritz_> pmichaud: true :-). WIM is not an inifite loop, unless there's no other interpretation

[15:57] <pmichaud> we wouldn't expect changes to @b to be reflected in @a

[15:58] *** justatheory joined
[15:58] <colomon> but even if not... I don't want @a = 1...1000000 to create a giant array in memory unless it's actually needed.

[15:58] <KyleHa> We had a metaoperator to making things synchronous or not recently, right?  Can we have one to make things lazier or eagerer?

[15:58] <pmichaud> colomon: then don't use assignment -- use a feed operator

[15:58] <moritz_> in my mental (which might be flawed and mental) model that works like this:

[15:58] <moritz_> foo() is evaluated eagerly

[15:58] <pmichaud> colomon: what you want is    my @a = 1...1000000

[15:58] <pmichaud> er

[15:59] <pmichaud> colomon: what you want is    my @a <== 1...1000000

[15:59] *** Baggiokwok left
[15:59] <pmichaud> <== forces lazy evaluation

[15:59] <moritz_> and @b as the last item of the list is evaluated lazily...

[15:59] <moritz_> and has a hook

[15:59] <moritz_> which forces eager evaluation as soon as @b is modified

[15:59] <moritz_> KyleHa: there are 'lazy', 'eager' and 'hyper' prefix operators

[16:00] <pmichaud> moritz_: so, we have to keep track of all of the things that are referencing @b ?

[16:00] <colomon> I would have that @b's iterator would be cloned for @a.

[16:01] <pmichaud> colomon: you'd have to clone @b itself, not just its iterator

[16:01] <colomon> sure.

[16:01] <moritz_> pmichaud: of all things that lazily reference @b, yes

[16:02] <moritz_> something like @b[0] could be evaluated eagerly, and doesn't store a backreference

[16:02] <moritz_> mind you, I have no idea if this is sane or not

[16:02] <pmichaud> unless of course @b[0] is itself a lazy container :-)

[16:02] <moritz_> but that would be a different level

[16:03] <moritz_> then @b[0] would have the possibilty for such hooks itself

[16:03] *** Psyche^ joined
[16:03] *** justatheory left
[16:03] *** Psyche^ is now known as Patterner

[16:03] <pmichaud> anyway, I'll simply say that this mental model doesn't match the spec.

[16:03] <moritz_> fair 'nough

[16:03] <pmichaud> and if the spec is going to change again on this point, I hope it does so sooner and not later.  It took a lot of work to even get to what we have now.

[16:04] <pmichaud> for the better part of a year, list assignment has been "mostly eager"

[16:04] <pmichaud> and the way to get lazy semantics is to use a feed

[16:04] <moritz_> and for the better part of a year, nearly nobody worked on laziness wrt list assignment

[16:05] <pmichaud> false

[16:05] *** payload joined
[16:05] <pmichaud> one of the reasons why it's taken so long is because the spec wasn't solidified until after rakudo had adopted a workaround

[16:05] <pmichaud> and patching the new spec into rakudo turned out to be a pain

[16:06] <pmichaud> more to the point, one of the reasons that list assignment is defined as "mostly eager" is precisely because of the work we did on trying to do laziness in list assignment

[16:06] <colomon> I say implement it as S07 as it is, so moritz_  and I can see how it works in practice.  :)

[16:06] * moritz_ stands corrected

[16:06] <pmichaud> in particular,  lazy list assignment definitely gives very surprising action-at-a-distance semantics

[16:07] <moritz_> aye, those should be avoided

[16:07] <pmichaud> so, it was decided that list assignment should be eager (which matches what most people expect when they say   @a = ...), and that if laziness is desired, it should be explicitly requested

[16:08] <pmichaud> a good example is that    my @a = $file.lines();    # should not be lazy

[16:08] <moritz_> should my @a = lazy { $files.lines }; by lazy?

[16:09] <moritz_> or does that only work in scalar context?

[16:09] <colomon> I think this just emphasizes my functional instinct that I don't want to use = that often.  ;)

[16:09] <pmichaud> I dunno, I haven't folded the 'lazy' function into my mental model yet 

[16:09] <moritz_> ok

[16:10] <pmichaud> my guess is that 'lazy' would return something that says "treat this as an infinite assignment"

[16:12] <colomon> ah, that would be sweet.

[16:13] * sjn wonders what the ö-operator does

[16:13] <moritz_> sjohnson: Whatever you define it to be

[16:14] <moritz_> erm, I meant sjn 

[16:14] <sjn> moritz_: I'm sure he does :)

[16:15] <pugs_svn> r29567 | pmichaud++ | [pm.txt]:  Another question for TimToady++. 

[16:15] <pugs_svn> r29567 | 

[16:15] <pugs_svn> r29567 | Pm-16:  S03:1996 looks like a fossil, or at least inconsistent 

[16:15] <pugs_svn> r29567 |     with S07:72.  Any clarifications?

[16:15] * colomon just discovered that both his code and his test for that code are broken.

[16:21] *** ash_ joined
[16:22] *** uniejo joined
[16:24] *** clintongormley joined
[16:24] *** pnate joined
[16:31] *** mssm left
[16:49] *** Alias left
[16:50] *** pyrimidine joined
[16:52] *** payload left
[16:56] *** justatheory joined
[16:57] <pyrimidine> moritz_: Around?

[16:59] *** meneldor left
[17:00] <ash_> on a completely unrelated note, parrot doesn't die like it used to when you run a ParrotThread from a hll 

[17:01] *** lumi left
[17:01] *** lumi joined
[17:03] *** payload joined
[17:04] *** rgrau` joined
[17:04] *** mberends left
[17:05] *** KyleHa left
[17:21] <Tene> ash_: I saw you mention that.  Interesting.

[17:23] *** breinbaas joined
[17:23] <takadonet> Wow 13 commits yesterday on NG branch

[17:27] *** lumi left
[17:27] *** lumi joined
[17:36] *** uniejo left
[17:37] *** smash_ joined
[17:37] *** pyrimidine left
[17:37] <pugs_svn> r29568 | lwall++ | [S03] tweak definition of when a series operator is considered infinite 

[17:38] <TimToady> pmichaud: see ^^

[17:38] <TimToady> I'll be on the road soon, and out of touch for most of the day (incl phone call)

[17:39] *** lumi left
[17:39] *** szabgab left
[17:39] *** szabgab joined
[17:45] <PerlJam> TimToady: I think pmichaud was having trouble reconciling "arbitrarily lazy" with "mostly eager" (at least that's how it seems to me)

[17:46] <[particle]1> TimToady: noted

[17:46] *** [particle]1 is now known as [particle]

[17:47] <clintongormley> TimToady: when you get bored with redefining Perl6, please feel free to turn LaTeX into something more readable :)

[17:47] <TimToady> PerlJam: I just defined certain 1...{something()} arbitrarily as lazy always even in mostly eager context

[17:47] *** lumi joined
[17:48] *** stephenlb joined
[17:48] <PerlJam> clintongormley: don't distract him!  ;)

[17:49] <clintongormley> PerlJam: you guys have had him for years already!

[17:49] <PerlJam> and we like it that way! 

[17:49] <clintongormley> :)

[17:50] <PerlJam> clintongormley: however, I could argue that TimToady has *already* done what you've asked.   (See Perl 6 :-)

[17:51] *** cotto_w0rk is now known as cotto_work

[17:51] <clintongormley> PerlJam: yeah, now he's just fiddling

[17:51] <TimToady> afk & # soggy fiddling^Wdriving, at least till SLO

[17:52] <PerlJam> TimToady: be safe!

[17:55] *** jferrero left
[17:57] *** dakkar left
[17:58] *** ShaneC joined
[18:00] *** pnate left
[18:01] *** pnate joined
[18:03] *** payload left
[18:06] *** cdarroch joined
[18:08] *** riffraff left
[18:09] *** uniejo joined
[18:15] *** mikehh_ is now known as mikehh

[18:15] *** snearch joined
[18:15] *** jackyf joined
[18:19] *** uniejo left
[18:21] <Tene> rakudo master was updated to parrot trunk, but not ng?

[18:25] *** am0c left
[18:26] <pmichaud> yeah, TimToady's tweak doesn't really answer my question.  :-|

[18:26] <pmichaud> oh well.

[18:27] * Tene tests cherry-picking from master

[18:27] <Tene> pmichaud: Good to see you around again.

[18:27] <pmichaud> Tene: glad to be around again.

[18:27] <pmichaud> (finally)

[18:27] <pmichaud> although I did need the break.

[18:29] <Tene> Yeah, it works with the patch from master

[18:29] <Tene> well, compiles, at least.

[18:29] <pmichaud> has parrot 2.0 released?

[18:29] <Tene> Yes.

[18:29] <pmichaud> hmmm, I didn't see the email commit for it yet.

[18:30] <Tene> I'll run a spectest first.

[18:31] <pmichaud> anyway -- yes, ng should bump PARROT_REVISION to 2.0 when available

[18:31] <Tene> pmichaud: If I push this to ng, it will fail on older parrot, so you'll have to update.  s'okay?

[18:31] <ash_> 2.0 was put up earlier today/last night

[18:32] <pmichaud> Tene: I don't quite understand ("fail on older parrot")

[18:33] <Tene> Hmm.  There are some spectest failures, but I'm not sure if they're from this patch or not.

[18:33] <pmichaud> let's just say that until we cut the jan release of rakudo, our PARROT_REVISION should be Parrot 2.0.0

[18:36] <Tene> I should push this, then.

[18:36] <pmichaud> wfm

[18:36] <PerlJam> pmichaud: wrt TimToady ... what I was going to say earlier was that I don't think S03 is inconsistent with S07 in intent, but maybe the prose could be made a little better.   S03:2002 (was S03:1996) is clarified in the 3rd sentence IMHO and that seems to match what S07 says.

[18:37] *** hercynium left
[18:37] <pmichaud> PerlJam:   except it doesn't (match)

[18:39] <pmichaud> "mostly eager" would seem to imply that it doesn't suspend upon just any ol iterator

[18:39] <pmichaud> e.g.

[18:40] <pmichaud> my @a = $file.lines();    # lazy or eager?

[18:40] <pmichaud> clearly $file.lines() returns an iterator, here.

[18:41] <PerlJam> I would say lazy.

[18:41] <pmichaud> you would?  so then

[18:41] <pmichaud> my @a = $file.lines();   my $b = $file.get();   say @a[0];   # which line is it?

[18:42] <PerlJam> the first line because the .get is lazy too  :)

[18:42] <pmichaud> no

[18:42] <Tene> "mostly eager" obviously means that it eagerly reads half of the lines, and then reads the rest lazily.

[18:42] <pmichaud> it's not :-)

[18:42] <pmichaud> and even ickier: 

[18:42] <PerlJam> heh, there's a reason I'm not the language designer here :)

[18:42] <pmichaud> my @a = $file.lines();  say @a[4];   say $file.get();   say @a[5];   

[18:43] <pmichaud> I think the whole idea of "mostly eager" was to avoid this sort of "action at a distance"

[18:43] <Tene> pmichaud: get is a method call on the same object as you called lines on.  It's feasible that $file keeps internal state to remember what's going on.

[18:44] *** buu joined
[18:44] <pmichaud> Tene: the question is about the contents of @a

[18:44] <pmichaud> not about the filehandle.

[18:45] <PerlJam> I wonder what would happen if you forced laziness:  my @a = lazy $file.lines();  # assuming that's the proper syntax.

[18:45] <pmichaud> that would be

[18:45] <dalek> rakudo/ng: a440e06 | (Solomon Foster)++ |  (3 files):

[18:45] <dalek> rakudo/ng: Get master working with Parrot HEAD.  Patch from Vasily Chekalkin.

[18:45] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/a440e069a36f5985ebb26775bcbfffba03afb6c1

[18:45] <pmichaud> my @a <== $file.lines();

[18:46] <Tene> I probably should have tweaked that commit message :)

[18:46] <pmichaud> in that case I think it's explicit that we expect @a to be action-at-a-distance

[18:46] <PerlJam> pmichaud: Is what I wrote the same as what you wrote?

[18:46] <PerlJam> (do they behave the same)

[18:47] <pmichaud> PerlJam: I don't know, I haven't folded the 'lazy' syntax into my mental model yet.  But I suspect that 'lazy' returns some sort of iterator that says "treat me lazily"

[18:47] *** lumi left
[18:47] <pmichaud> in that case, 'lazy' is modifying the assignment (i.e., it's exercising the "not mostly eager" part of list assignment)

[18:47] *** lumi joined
[18:47] <pmichaud> however, I don't think that every iterator automatically implies lazy semantics

[18:47] <pmichaud> in particular

[18:48] *** payload joined
[18:48] *** smash_ left
[18:48] <pmichaud> nm

[18:48] <pmichaud> bad example

[18:48] * PerlJam notes that S04 is the only place that mentions the lazy keyword.

[18:48] <PerlJam> There are no code examples.

[18:49] <pmichaud> anyway, handling 'lazy' doesn't seem problematic to me... it just means we return something that says "I should be lazily evaluated"

[18:49] <pmichaud> the question is more about list/array assignment itself; i.e., the default semantics

[18:50] <Tene> *huh*.  I guess maybe I didn't realclean after cherry-picking that commit.  It worked before, but after a realclean and rebuild, ng now fails to build for me.

[18:52] *** |JackYF| joined
[18:52] <pmichaud> looks like the 2.0.0 commit is r43487, yes?

[18:52] <PerlJam> did anyone ever figure out what's going on with this?

[18:52] <PerlJam> rakudo: my @a = List.new(1,2,3); say @a.perl;

[18:53] <PerlJam> oops

[18:53] <p6eval> rakudo 726b83: []␤

[18:53] <PerlJam> ng: my @a = List.new(1,2,3); say @a.perl;

[18:53] <p6eval> ng f21362: [(1, 2, 3)]␤

[18:53] <pmichaud> looks like .new isn't marking the List as a flattening object

[18:54] *** Chillance joined
[18:54] *** jackyf left
[18:54] * PerlJam has no idea what that means, but hopes that it helps whoever was working on this (ash?)

[18:55] <pmichaud> we have to mark objects as "flatten in list context"

[18:55] <pmichaud> so, for example

[18:55] <pmichaud> my @a = 1,2,3;

[18:55] <pmichaud> my $b := @a;

[18:55] <pmichaud> my @c = (@a, 4, 5);   @c.elems := 5

[18:55] <pmichaud> my @d = ($b, 4, 5);   @d.elems == 3

[18:56] <pmichaud> @a is flattening.  $b is non-flattening.

[18:56] <pmichaud> oops

[18:56] <pmichaud> I forgot my #'s

[18:56] <pmichaud> my @c = (@a, 4, 5);   # @c.elems == 5

[18:56] <pmichaud> my @d = ($b, 4, 5);   # @d.elems == 3

[18:57] <Tene> Okay, I think that's all.  Realcleaning to confirm.

[18:57] *** rblasch joined
[19:00] <PerlJam> ng: my @a = List.new(1,2,3); say @a.WHAT; say @a.perl;  my @b = 1,2,3: say @b.WHAT; say @b.perl;

[19:00] <p6eval> ng a440e0: Confused at line 1, near "my @b = 1,"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (src/stage0/HLL-s0.pir:328)␤

[19:00] <PerlJam> ng: my @a = List.new(1,2,3); say @a.WHAT; say @a.perl;  my @b = 1,2,3; say @b.WHAT; say @b.perl;

[19:00] <p6eval> ng a440e0: Array()␤[(1, 2, 3)]␤Array()␤[1, 2, 3]␤

[19:01] <PerlJam> ng: my $a = List.new(1,2,3); say $a.WHAT; say $a.perl;  my $b = 1,2,3; say $b.WHAT; say $b.perl;

[19:01] <p6eval> ng a440e0: List()␤(1, 2, 3)␤List()␤(1, 2, 3)␤

[19:01] <PerlJam> bah, I don't remember 

[19:02] <pmichaud> right, the difference is that List.new(1,2,3) isn't coming back flagged as a flattening object

[19:02] <pmichaud> whereas  1,2,3  is a Parcel, and Parcels always mark themselves as flattening

[19:02] <Tene> So, is there any spec on exactly what 'fail' outside of a sub should do?

[19:03] <pmichaud> Tene: yes.

[19:03] <pmichaud> it should be caught by an outermost handler of some sort

[19:03] <Tene> What should be done with it at that point?

[19:04] <pmichaud> I don't remember -- I just know that it's been discussed.  I think it made it into the spec (but might be misremembering that part)

[19:04] <ash_> I am not sure how you'd fix @a = List.new(1, 2, 3); the correct thing should be that @a[0] == 1, @a[1] == 2 etc 

[19:04] <ash_> right? 

[19:04] <Tene> I'll look again sometime.

[19:04] <pmichaud> ash_: that's part of what I'm working out now

[19:04] <Tene> Need to go do $realwork now.

[19:04] <dalek> rakudo/ng: d0de156 | tene++ | src/binder/bind.c:

[19:04] <dalek> rakudo/ng: Missed one include to update to callcontext

[19:04] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/d0de156692670bfe3bb8908a26dd0f9d560d2f0b

[19:04] <ash_> pmichaud: okay, cool 

[19:05] <pmichaud> TimToady++ suggested that we flag all objects that flatten in list context, but I'm wondering if it's better to flag the things that don't flatten.

[19:05] <Tene> Okay, ng builds again for me, so I don't *think* those need to be reverted, but please feel free if I'm mistaken.

[19:05] * pmichaud tries out the updated ng

[19:06] <Tene> You'll need to update parrot, too.

[19:06] <pmichaud> shouldn't PARROT_REVISION be doing that for me?

[19:06] <Tene> Could be.  I don't use --gen-parrot

[19:06] <pmichaud> looks like it didn't get bumped.

[19:07] <Tene> i think it's set to the commit after the callcontext merge, not to 2.0.0

[19:07] <pmichaud> setting

[19:07] <pmichaud> looks like whoever bumped it last time also incorrectly left the 1.9.0

[19:08] <ash_> pmichaud: should @a = list(1, 2), list(3, 4); == ((1, 2), (3, 4)) ? Just curious, I am not sure how you'd know the difference between when to flatten the argument into @ or when to make @ with an element in it 

[19:09] <pmichaud> ash_: no, that would end up being  [1,2,3,4]

[19:09] <pmichaud> a List flattens in list context

[19:11] <PerlJam> Is smash not doing the release?

[19:12] <pmichaud> I think smash and I decided that we'll move him to a different month, since this release is "weird"

[19:12] <pmichaud> so I'll do the release myself

[19:12] <pmichaud> or I'll re-delegate to whoever happens to be around when we think it's ready to release :)

[19:13] <PerlJam> march doesn't have a volunteer.

[19:13] *** ash_ left
[19:13] <pmichaud> ah, that sounds like a good time

[19:13] <PerlJam> (and I find it curioius that the release guide stops at march  :)

[19:13] <pmichaud> we just haven't pushed it farther into the new year yet :)

[19:15] *** lumi left
[19:15] <pmichaud> ick, ng branch gives me lots of failures now

[19:16] <pmichaud> it didn't do that yesterday

[19:16] <Tene> I looked at a few of them.  lexical_subs dies because it uses fail outside of a sub.

[19:16] *** ash_ joined
[19:16] *** KyleHa joined
[19:16] <pmichaud> I get lots of failures throughout the spectest base

[19:17] *** ash_ left
[19:17] *** lumi joined
[19:18] *** ash_ joined
[19:18] <lisppaste3> tene pasted "spectest failures in ng" at http://paste.lisp.org/display/93651

[19:18] <pmichaud> yeah, that's roughly the set I'm seeing.

[19:18] <pmichaud> Those weren't failing yesterday.

[19:19] <Tene> No?  I remember seeing roughly that for a while now.

[19:19] <pmichaud> were you always building against parrot trunk?

[19:19] <pmichaud> if so, that would be why.

[19:19] <pmichaud> they weren't failing against 1.9.0

[19:19] <Tene> No.  Without those patches I just pushed, it can't even compile against trunk

[19:20] <pmichaud> I mean, have you been building against trunk when you saw those other failures?

[19:20] <Tene> I was using parrot_revision, I thought.  if that disagrees with your experience, I was probably doing something wrong or misremembering.

[19:20] * pmichaud checks.

[19:24] <Tene> If so, feel free to revert it, and I'll re-apply and work on fixing the failures tonight.

[19:26] <pmichaud> I probably won't revert.  we know we need the ng branch to build against 2.0.0

[19:26] <pmichaud> it's just that those failures have to be classified as "new failures" due to 2.0.0, and not existing failures

[19:28] <dalek> rakudo/master: 1d49284 | duff++ | docs/release_guide.pod:

[19:28] <dalek> rakudo/master: [docs] Add tentative release dates through the end of 2010

[19:28] <dalek> rakudo/master: review: http://github.com/rakudo/rakudo/commit/1d49284d250729f4523b5c1d756ba0a39fcfb883

[19:30] <pmichaud> ...right.  ng branch as of f21362 (i.e., yesterday)  passes all spectests.

[19:31] <pmichaud> (i.e., "make spectest" doesn't return any failures)

[19:33] *** japhb joined
[19:34] <Tene> pmichaud: even t/spec/S06-advanced_subroutine_features/lexical-subs.rakudo passed on ng as of yesterday?

[19:35] <pmichaud> yes.

[19:35] <Tene> that should die on line 45

[19:35] <Tene> The test is broken.

[19:36] <pmichaud> http://nopaste.snit.ch/19310   # spectest results in ng branch as of yesterday

[19:37] <pmichaud> why is the test broken?

[19:37] <Tene> it calls 'fail' outside of a sub

[19:37] <pmichaud> that's not an error.

[19:38] *** clintongormley left
[19:38] <Tene> It is in current ng.  Even if we do have a global error handler, are you suggesting that it should resume from the exception?  nothing after a 'fail' shohuld be run.

[19:39] <pmichaud> are you saying that $! should be true there?

[19:39] <Tene> ng: say 'a'; fail 'b'; say 'c';

[19:39] <p6eval> ng d0de15: a␤No exception handler and no message␤current instr.: '&fail' pc 14523 (src/builtins/Junction.pir:202)␤

[19:40] <Tene> pmichaud: Ah, right, lexical eval stuff worked, so it didn't call fail.

[19:40] <Tene> Got iy.

[19:40] <pmichaud> right.

[19:40] <Tene> ><

[19:40] <ash_>  isn't the fail only called when its not 'ok' 

[19:40] <Tene> ash_: Yes, as I just said.

[19:41] <pmichaud> anyway, after looking at things a bit further I'm about 50% certain that cherry picking the rakudo master patches for 2.0.0 into the ng branch isn't correct or sufficient

[19:41] <pmichaud> a lot of the binding code is substantially different between the two, iiuc

[19:42] * Tene nods

[19:42] <pmichaud> otoh, rakudo does at least build when the patches are applied, so....

[19:42] <Tene> I'll read through it tonight, if nobody gets to it before me.

[19:42] <pmichaud> I'm not sure what to do here.

[19:43] <pmichaud> I'm checking to make sure that rakudo master runs with parrot 2.0.0, at any rate.

[19:43] <Tene> Personally, I'd prefer to have visible signs that it's broken and needs to be fixed RSN.

[19:43] <pmichaud> agreed

[19:44] <pmichaud> but since I was planning to spend the next couple of days working on list assignment and the like, I'd prefer not to be blocked

[19:44] <colomon> Tene: imagine my surprise to discover I checked something into ng while I was out getting my hair cut.

[19:44] <Tene> Is the lexical eval failure going to block you?  Or just confidence from spectests?

[19:44] <pmichaud> confidence from spectests.  a lot of tests fail that I think shouldn't fail.

[19:44] <Tene> I vote to revert, then.

[19:44] <Tene> I'll work on it in a local branch.

[19:45] <colomon> pmichaud: I didn't bump the 1.9.0 when I bumped the Parrot revision because it wasn't actually 2.0.0 when I did it.  Should I have deleted the 1.9.0 bit instead?

[19:45] <pmichaud> colomon: yes.

[19:45] <colomon> pmichaud: noted.

[19:45] *** KyleHa left
[19:45] <pmichaud> we only put the 1.9.0 there when the revision number is the exact revision of the release

[19:45] <pmichaud> the 1.9.0 says "parrot 1.9.0 as released is okay also"

[19:45] <pmichaud> in case the parrot build doesn't contain the revision number

[19:45] <Tene> pmichaud: I'll push a revert commit.

[19:45] <colomon> I think moritz_ tried bumping parrot revision for ng over the weekend and ran into the same sort of problems you guys are seeing now.

[19:46] *** lumi left
[19:46] <colomon> I don't know if he ever found a solution for them, I presume note.

[19:46] <pmichaud> Tene: okay, wfm

[19:46] <colomon> *not

[19:46] *** lumi joined
[19:52] <dalek> rakudo/ng: 3881a5a | tene++ |  (3 files):

[19:52] <dalek> rakudo/ng: Revert updates for Parrot 2.0.0 for now.

[19:52] <dalek> rakudo/ng: Will re-apply when we have a more-complete update.

[19:52] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/3881a5a897eb40d73a74e63164a4ae87cc1ce835

[19:52] <ash_> maybe mention it to #parrot to see if they can give some insight? if we can track down a specific issue that is

[19:52] <pmichaud> specific issue is that ng branch doesn't build/run with parrot 2.0.0

[19:53] <ash_> oh, what was it building with for the stuff Tene did? a part of 1.9.0? 

[19:53] <colomon> I think over the weekend someone suggested it had something to do with the return value from eval?

[19:54] <colomon> but I was very busy with other stuff at the time, and may have misunderstood.

[19:54] <pmichaud> ash_: parrot 2.0.0, but it gets a variety of spectest failures that aren't present when running against 1.9.0

[19:57] <ash_> i guess what i meant to say was can we track down a specific cause for the spectest failures in 2.0.0 with the cherry picked patches needed for ng to build against trunk parrot 

[19:59] *** KyleHa joined
[19:59] <colomon> ash_: ?  I believe the changes to make ng compile with parrot 2.0.0 are too simple to help, and there aren't any changes yet to make it work...

[19:59] <pmichaud> actually, I just recalled that there may be other changes needed that didn't get cherry picked

[19:59] <pmichaud> specifically, the interface for accessing contexts changed also

[20:01] <pmichaud> i.e., some things that were using the keyed interface were switched to use getattribute (or vice-versa, can't remember which atm)

[20:01] *** justatheory left
[20:02] <pmichaud> if that's the issue, we can't directly cherry pick the patch from master (because the source files are substantially different), but it's not a hard change to locate and make

[20:02] <pmichaud> I might try that in a second (phone now)

[20:03] *** ascent_ left
[20:03] *** payload left
[20:03] *** ascent_ joined
[20:04] *** lumi left
[20:05] <colomon> sorry, if I wasn't clear, the patch from master is trivial -- just PARROT_REVISION bumped, and signature changed to context in four places, two of them comments.

[20:06] *** pmurias joined
[20:07] *** cottoo left
[20:08] *** smash_ joined
[20:11] *** bluescreen left
[20:12] *** lumi joined
[20:15] *** justatheory joined
[20:21] *** cotto joined
[20:24] *** lumi left
[20:25] *** eternaleye left
[20:25] *** payload joined
[20:26] *** mssm joined
[20:27] *** lumi joined
[20:32] *** plainhao left
[20:39] *** eternaleye joined
[20:42] *** lumi left
[20:42] *** cottoo joined
[20:43] *** |JackYF| left
[20:43] *** cotto left
[20:45] *** lumi joined
[20:48] *** bartolin joined
[20:49] *** cognominal left
[20:50] *** cottoo left
[20:54] *** cognominal joined
[21:02] *** cottoo joined
[21:03] *** bartolin left
[21:08] *** ignacio_ left
[21:09] *** pnate left
[21:09] *** pnate joined
[21:09] *** eternaleye left
[21:12] *** eternaleye joined
[21:14] *** lumi left
[21:14] *** lumi joined
[21:17] *** payload1 joined
[21:20] *** ignacio_ joined
[21:20] <sjohnson> netsplits verboten

[21:20] <cognominal> rakudo:  class A { has $.a = 10 } ; my $a .= new(); say $a.a

[21:21] *** lumi left
[21:21] <p6eval> rakudo 1d4928:  ( no output )

[21:21] <cognominal> ng:  class A { has $.a = 10 } ; my $a .= new(); say $a.a

[21:21] <p6eval> ng d0de15: sh: ./perl6: No such file or directory␤

[21:21] *** lumi joined
[21:21] *** ignacio_ left
[21:24] <ash_> cognominal: i think you forgot an A 

[21:24] <ash_> ng:  class A { has $.a = 10 } ; my A $a .= new(); say $a.a

[21:24] <p6eval> ng d0de15: sh: ./perl6: No such file or directory␤

[21:26] <sjohnson> hi ash

[21:27] <cognominal> I thought that the point of the .= operator was to omit the type when instanciating

[21:28] *** ruoso left
[21:28] <sjohnson> which implementation is ng?

[21:29] <cognominal> it is a new implementation branch forked from rakudo, once it will be mature enough it will land back to the main branch

[21:29] <Tene> sjohnson: rakudo's development branch

[21:29] <sjohnson> Tene: o

[21:29] <cognominal> In the mean time neither branch is very satisfying :)

[21:30] *** sahadev joined
[21:30] <PerlJam> conventional wisdom is that ng will become master within one week or so.

[21:30] <pmichaud> $x .= y  is just a shortcut for   $x = $x.y

[21:30] <pmichaud> just like $x += 2   is a short cut for $x = $x + 2

[21:31] <ash_> cognominal: for .= new you'd need to have the variabled typed, like my A $a .= new() translated to my A $a = A.new(); 

[21:32] <pmichaud> the variable doesn't have to be typed, it just has to be initialized to the protoobject

[21:32] <pmichaud> i.e.,  my $a = A;   $a .= new;   also works

[21:32] <pmichaud> (typing a variable initializes it to the protoobject)

[21:32] <cognominal> thx, I as confused

[21:32] <ash_> yeah, true, pmichard can explain it better than me, listen to him

[21:35] <PerlJam> still, my A $a .= new; should work.

[21:35] *** payload left
[21:35] <pmichaud> I think there's a problem with .= in ng branch

[21:35] *** pnate left
[21:36] <PerlJam> From the error, I'd guess that there's a problem initializing $a with A() in  my A $a;

[21:36] *** bartolin joined
[21:36] <ash_> is there a reason eval bot dies when you define a class in the master branch? 

[21:36] <pmichaud> ng:  my A $a;  say $a.WHAT;

[21:36] <p6eval> ng d0de15: sh: ./perl6: No such file or directory␤

[21:37] <cognominal> ng: say "hi!"

[21:37] <p6eval> ng d0de15: sh: ./perl6: No such file or directory␤

[21:37] <pmichaud> > class A { has $.a; };   my A $a;  say $a.WHAT;

[21:37] <pmichaud> Mu()

[21:37] <pmichaud> PerlJam++ ftw

[21:37] <bartolin> hello all

[21:37] *** pnate joined
[21:37] * ash_ waves

[21:38] <PerlJam> something is brokenish with p6eval.  It's taking a long time to regen the perl6 executable.

[21:38] <PerlJam> ng: say "oof"

[21:38] <p6eval> ng d0de15: sh: ./perl6: No such file or directory␤

[21:38] <PerlJam> It's been  that way for more than 10 minutes

[21:38] <PerlJam> rakudo: say "oof"

[21:38] <p6eval> rakudo 1d4928: oof␤

[21:39] <PerlJam> oh, I guess the ng branch is broken due to the recent updates of PARROT_REVISION, etc.  ?

[21:39] <ash_> how does p6eval make ng? shouldn't it be using --gen-parrot? 

[21:40] <PerlJam> ash_: wish I knew

[21:40] <pmichaud> oh, I bet the revert caused problems.

[21:40] <pmichaud> when the 2.0 update was put in, it updated to Parrot 2.0.0, which fails

[21:40] <ash_> does anyone know how to access it? i don't have that kind of permission 

[21:40] <pmichaud> then when it was reverted, p6eval is still using 2.0.0, because it's  >= the current PARROT_REVISION

[21:41] <ash_> those silly >= that might need to be = : P

[21:41] <pmichaud> well, in general we want >=

[21:41] <pmichaud> p6eval is a bizarre case, as is the case of reverting a PARROT_REVISION change

[21:41] <ash_> yeah, sure, in general 

[21:41] <pmichaud> it might not matter soon -- I think I may have a patch to get ng working with 2.0.0

[21:43] <pmichaud> spectesting now.

[21:43] <PerlJam> who runs p6eval?

[21:43] <pmichaud> in general, I think moritz++ handles it

[21:45] <ash_> ah, well, if pmichaud++'s patch doesn't fix it, we can bug him when he's around next

[21:51] <cognominal> what's new with Parrot 2.0.0?

[21:51] <pmichaud> argggh, my patch didn't fix it.

[21:52] <pmichaud> looks like I'll have to track this one down a bit further.

[21:52] <PerlJam> cognominal: http://www.parrot.org/news/2010/Parrot-2.0.0

[21:52] <pmichaud> ugh, looks like a lexicals problem.

[21:52] <cognominal> thx

[21:59] <pmichaud> or an eval() problem

[21:59] *** jonasbn left
[22:01] <ash_> i think colomon said that when they tried to move ng to trunk parrot over the weekend they came to the conclusion the it was an eval issue 

[22:04] <colomon> That's what I thought they said.

[22:04] <colomon> For some mysterious definition of "they".

[22:05] <colomon> Maybe chromatic or somebody like that?  Not one of our Rakudo "regulars".

[22:05] * PerlJam wonders what a "rakudo regular" is

[22:06] <colomon> http://irclog.perlgeek.de/perl6/2010-01-17#i_1907489

[22:06] <PerlJam> cognominal: note that chromatic did the Dec release for rakudo  :)

[22:06] <pmichaud> eval doesn't seem to be able to even parse.

[22:07] <PerlJam> er, s/cognominal/colomon/

[22:07] <colomon> PerlJam: Someone whose name I see often enough that I think of them as a person instead of a random login.

[22:07] <colomon> (often enough on #perl6)

[22:07] <colomon> chromatic being the exception that proves the rule, or something.

[22:07] <pmichaud> oh, maybe it can't parse phasers.

[22:07] <colomon> anyway, that link is the snatch of conversation I was remembering.

[22:08] <colomon> and bacek was the mysterious person whose name I didn't remember.

[22:08] <ash_> okay, completely off topic but when i think if phasers i think of star trek 

[22:09] <colomon> possibly referring to conversation on #parrot.

[22:09] <colomon> ash_: that's completely intentional.

[22:10] * PerlJam doesn't recall a STUN block in the Synopses

[22:10] <PerlJam> ;)

[22:10] <pmichaud> eval() is failing to parse "my $x = 3;"

[22:11] <pmichaud> although it's able to do "my $x"

[22:12] * pmichaud sees how to track this down

[22:13] <pugs_svn> r29569 | wayland++ | I suggest that these changes constitute an implementation (in POD) of Richard Hainsworth's  

[22:13] <pugs_svn> r29569 | suggestion

[22:16] *** iblechbot left
[22:17] <bartolin> I'm totally new here, but I've got a question.

[22:17] <pmichaud> ohhhh ick ick ick ick

[22:17] <bartolin> I hope it's neither too silly nor does it disturb you.

[22:17] <bartolin> The question is: Can I write something like

[22:17] <bartolin> class Chessplayer { has Array of Int @.old_ratings; }

[22:18] <bartolin> I want to make sure that "old_rating" are integers and nothing else.

[22:18] <pmichaud> bartolin: it'd be   { has Int @.old_ratings; }

[22:18] <pmichaud> the @ already means "Array"

[22:18] <Tene> bartolin: array of array o fint?

[22:18] <Tene> Yeah.

[22:18] <bartolin> Ahh!

[22:18] <Tene> pmichaud: ick ick ick?

[22:18] <bartolin> Thanks a lot!

[22:18] <pmichaud>         my @ns := $outer_ctx<current_namespace>.get_name;

[22:19] <pmichaud> contexts no longer support the hash interface

[22:19] <pmichaud> guess I'll pir:: this one

[22:19] <Tene> That would do it.

[22:21] *** mikehh_ joined
[22:22] *** snearch left
[22:22] <sjohnson> so tene... hows it going?

[22:22] *** nihiliad left
[22:22] <bartolin> Hrm. I tried class Chessplayer { has Int @.old_ratings; } but this doesn't work:

[22:22] <bartolin> my $player = Chessplayer.new( old_ratings => [2200,2150] );

[22:23] <bartolin> if gives: Array assignment type check failed; expected Int, but got Array

[22:23] <pmichaud> I'm not sure that will work.

[22:23] <pmichaud> [2200,2150]  isn't declared as an Array of Int -- it's an Array of Object

[22:24] <pmichaud> (yes, this is a weird section of the spec at the moment)

[22:24] <bartolin> Aha.

[22:24] <PerlJam> seems to work fine in ng  ;)

[22:24] <pmichaud> PerlJam: maybe because it's not doing parameterized type checking

[22:25] <bartolin> So there is (ATM) no easy way to declare an Array of Int (for "old_ratings")?

[22:25] <pmichaud> declare, yes, assign, no.

[22:26] <bartolin> Ahh, okay. Thanks a lot for the explanation!

[22:26] <pmichaud> although you might try    old_ratings => (2200,2150)

[22:26] <pmichaud> although I suspect that fails to bind for the same reason

[22:28] <bartolin> Oops. I thought, I tried that before asking. But it gives no error. I have to test it in detail ...

[22:33] *** Su-Shee left
[22:34] *** mikehh left
[22:35] <bartolin> pmichaud: Thanks a lot.   old_ratings => (2200,2150)   seems to work for me.

[22:35] <pmichaud> yay, down to just two errors in ng (using Tene++'s patch)

[22:36] <pmichaud> oh wait, more than two

[22:36] <pmichaud> still, much closer than before

[22:36] *** mikehh_ is now known as mikehh

[22:43] *** bartolin left
[22:49] *** awwaiid left
[22:54] *** KyleHa left
[22:54] *** rblasch left
[22:55] *** payload1 left
[22:58] *** patspam joined
[23:01] *** idemal left
[23:01] *** idemal joined
[23:03] *** pnate2 joined
[23:05] * jnthn is back

[23:09] *** lucs joined
[23:11] <frettled> in black?

[23:12] *** cdarroch left
[23:12] *** |Jedai| joined
[23:13] <frettled> I was thinking about trying to explain how the (slightly delayed) January release of Rakudo is important because it's going to be based on ng (it still is, right?), but I'm kindof stuck; it's easy to say that it's a rewrite to make it easier to actually implement the spec, but, uhm.  Hm.

[23:13] <frettled> That's what I get for not being more involved in Rakudo myself.  :)

[23:15] *** pnate left
[23:16] <frettled> I guess what I'm struggling with is generating positive buzz.

[23:17] <pmichaud> I'm planning to issue an announcement in a couple of hours

[23:18] <pmichaud> the main reason for the regression is that we've had to refactor a lot of rakudo's internals in order to properly implement the spec

[23:18] <sjohnson> hi frettled 

[23:18] <pmichaud> yay, ng now passes on parrot 2.0.0

[23:19] <jnthn> January release is haz a delay?

[23:19] <jnthn> pmichaud++ # yak shaving so we can run on 2.0.0

[23:19] <pmichaud> jnthn: yes, I've decided to push the release back up to a week to give a little bit more time to see what can be done with the ng branch

[23:19] <pmichaud> I was leaning that way already, concensus on #perl6 this morning was that this approach made more sense

[23:20] <pmichaud> also I don't see a strong reason for releasing another old-master Rakudo since not much has changed there

[23:20] <pmichaud> someone who really wants the more complete version can just get Rakudo #24

[23:20] <jnthn> pmichaud: OK, but I highly doubt ng will be really ready *that* far ahead of the February release.

[23:20] <pmichaud> oh, my plan is to make ng the new master within the week

[23:20] *** payload joined
[23:20] <jnthn> That's too optimistic.

[23:21] <pmichaud> even if it's a significant regression.

[23:21] <jnthn> Then why do it?

[23:21] <pmichaud> because otherwise I'm afraid we're stagnating a bit.

[23:21] <jnthn> I agree it *has* to be before the Feb release.

[23:21] <pmichaud> well, I had been thinking it *has* to be before Jan release

[23:21] <pmichaud> I'm not sure I want to push back to Feb.

[23:21] <frettled> pmichaud++: oh, passing on parrot 2, that's nice!

[23:22] <frettled> jnthn: the catch-phrase «release early, release often» comes to mind ;)

[23:23] * colomon is thinking there will be much working like crazy to get ng ready in the next week....

[23:23] <frettled> sjohnson: oh, hai, forgot about you (sorry)

[23:23] <pmichaud> several people have commented to me that we should go ahead and make the ng branch into master

[23:23] <jnthn> pmichaud: On their own heads be it.

[23:23] <ash_> jnthn if you know of anymore bugs i can help with let me know

[23:23] <frettled> I think it's good to do so now, because it gives us more time using it.

[23:24] <pmichaud> I think I should have list assignment working tonight.

[23:25] <frettled> My argument is a bit weird, but it's based on one kind of typical human behaviour: we use what's the "standard", follow the flock.

[23:25] <pmichaud> frettled: right, I think we'll all have a bit of extra incentive on things if we go ahead and bite the bullet now

[23:25] *** c9s__ joined
[23:25] *** meteorja1 joined
[23:25] <pmichaud> if it doesn't work, I'm willing to take the blame.

[23:26] *** meteorjay left
[23:26] <frettled> Bonus for you guys who work on ng: I believe that making the ng branch master a bit early will lead to more feedback.

[23:26] *** c9s_ left
[23:26] <pmichaud> well, as long as we don't thrash around handling the "feature XYZ used to work but doesn't work" sorts of comments

[23:26] <frettled> :D

[23:28] <frettled> pmichaud: I'm sure you'll get a bunch of nice masakbugs.

[23:28] <jnthn> ash_: I noted a test yesterday...I think it was S02-builtin-data-types/anon_block.t

[23:28] <colomon> I do wish we had proto fully working, or something like that, so we could smoke test the features people are actually using.... a lot of the spectests seem very obscure.

[23:28] <jnthn> ash_: It may not be too much to make that one work.

[23:29] <frettled> colomon: yeah, that would help a lot, too.

[23:30] <pmichaud> one thing that would help is for people to find other files (e.g. release_guide, DOCS, etc) that have changed in the master branch and make sure they're up-to-date in the ng branch

[23:30] <ash_> jnthn: if your still doing role stuff, http://rt.perl.org/rt3/Public/Bug/Display.html?id=71554 has a patch i amde a while back that may or may not still be applicable 

[23:31] <colomon> do we have a list of what doesn't work in ng right now?  I mean, the big things?

[23:31] <frettled> pmichaud: so I should pull the current version now, and then I can compare with what I get afterwards.  I'll do that, and if I can get my life sorted properly again, I'll chip in. :)

[23:32] <pmichaud> colomon: I'll probably start making a list as soon as I have the already know big things out of the way

[23:32] <pmichaud> those being:  list assignment, hashes, various grammar-related items

[23:33] <colomon> is there still the mucked up dispatching of operators?  (er multis in general?)

[23:33] <pmichaud> I'm guessing yes, but what's mucked up?

[23:33] <jnthn> ash_: Thanks.

[23:33] <jnthn> pmichaud: Remember that Parrot issue that is a bug but isn't a bug?

[23:33] <colomon> what jnthn says.

[23:33] <pmichaud> chromatic has that fixed in parrot trunk, I think.

[23:34] <pmichaud> or is about to have that fixed.

[23:34] <pmichaud> doesn't help for the current ng, now.

[23:34] <pmichaud> *no.

[23:34] <jnthn> OK.

[23:34] <colomon> pmichaud: make the list somewhere we can all edit it?  :)

[23:34] <pmichaud> colomon: that's what git is for :-)

[23:34] <colomon> Off to orchestra now, looking forward to finding out what happens while I am out.  :)

[23:34] <pmichaud> or if we need non-rakudo committers to be able to edit, then do it on the github wiki

[23:35] <pmichaud> let's just do it on the wiki for now, then

[23:35] * pmichaud creates a page

[23:35] <frettled> \o/

[23:36] <pmichaud> http://wiki.github.com/rakudo/rakudo/ng-major-features-needed

[23:36] <pmichaud> feel free to add to the list

[23:38] <jnthn> pmichaud: I'm happy to take on the last one of those, but not today. :-)

[23:39] <pmichaud> jnthn: that's fine

[23:39] <pmichaud> just pushed updated ng to github

[23:39] <pmichaud> ENOPHENNY

[23:39] *** dalek left
[23:40] <pmichaud> Tene: you don't need to work on the context conversion for 2.0.0 in ng branch -- already took care of it (was mostly dealing with lexical and outer context issues)

[23:40] *** dalek joined
[23:40] <pmichaud> okay, time for a short break, then list assignment.

[23:43] <ash_> ng: say 'test?'

[23:43] <p6eval> ng d0de15: sh: ./perl6: No such file or directory␤

[23:55] *** Chillance left
