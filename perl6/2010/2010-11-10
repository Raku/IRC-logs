[00:00] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/e6486e55d334f3400d919db72f50d5f51459d459

[00:00] *** timbunce left
[00:00] <masak> for those following along at home, this also means that we didn't have any spectests for &elems.

[00:00] *** timbunce joined
[00:00] <masak> someone with a spare tuit or two might want to...

[00:03] *** risou_ left
[00:03] <Tene> might want to... submit a spec patch that removes &elems from the spec?

[00:04] <masak> actually, it's just an exported .elems method.

[00:04] <masak> and the Druid code that failed in its absence actually showed a decent example of when it's useful.

[00:05] <masak> hm. I should clarify. in the spec, it's just an exported .elems method. in Rakudo, it's a sub. :)

[00:07] <masak> if anything, I'd prefer a spec patch that regularized which methods are exported and which ones are not.

[00:07] <masak> rakudo: say perl [1, 2, 3]

[00:07] <p6eval> rakudo 4d33ba: OUTPUT«Could not find sub &perl␤  in main program body at line 22:/tmp/nwPkhmhnPH␤»

[00:07] <masak> S32 says (twice!) that it's exported.

[00:08] <masak> rakudo: 42.say; 42.warn

[00:08] <p6eval> rakudo 4d33ba: OUTPUT«42␤Method 'warn' not found for invocant of class 'Int'␤  in main program body at line 22:/tmp/e1buizM9fm␤»

[00:08] <masak> where's the consistency in the STDOUT method being there, but not the STDERR method?

[00:08] <Tene> I'm a bit leery of the method/sub proliferation, personally.

[00:08] <masak> I wouldn't mind it so much if it had some kind of pattern.

[00:09] <Tene> Yeah.

[00:09] <Tene> Exactly.

[00:11] <masak> same thing, only more so, with the high/low-level means of type conversion. .Str/.Stringy/~, .Num/+, .list/.List (I don't even know which ones are the latest variants of this one)...

[00:12] <masak> if these are not very, very clear and pattern-ful, they're going to be a sore point.

[00:12] <Tene> and that last also has &list

[00:12] <Tene> Makes me rather nervous.

[00:12] <masak> that's ok, because there's also &hash, and then similar ones like &eager and &hyper.

[00:13] <masak> generally, I have more sympathy for when there's a sub form *and* a method form, than for when one of them is missin.g

[00:13] <masak> s/\.g/g./

[00:14] *** cls_bsd joined
[00:15] <masak> I've been reading A12 a bit today, and it boasts about the sub call form and the method call form being syntactically different but semantically equivalent. that's no longer true, and we have to compensate for that un-equivalence with a corresponding amount of design discipline.

[00:15] *** xinming left
[00:16] *** timbunce left
[00:17] <masak> by the way: for a good time, google for 'guthlophikralique'.

[00:17] <masak> :)

[00:18] <masak> hi, Google searchers! o/

[00:18] *** xinming joined
[00:26] *** alester left
[00:36] *** ch3ck left
[00:37] <masak> 'night, #perl6

[00:37] *** masak left
[00:37] *** TobiOetiker[T11] left
[00:41] *** cdarroch left
[00:46] *** orafu left
[00:47] *** orafu joined
[00:51] *** redicaps joined
[00:52] *** QinGW joined
[00:59] *** rgrau left
[01:00] *** Chat8352 joined
[01:01] <Chat8352> hi

[01:01] <Chat8352> anyone want to chat

[01:02] <TimToady> sure, let's chat about Perl 6

[01:02] <Chat8352> i just want to chat please

[01:02] <sjohnson> haha

[01:02] <TimToady> this is not a general chatroom

[01:03] <sjohnson> his nickname means business

[01:04] *** ch3ck joined
[01:05] <Chat8352> ok well none of the other rooms work

[01:05] <sjohnson> by what miracle did you find this channel, of all the other ones around

[01:05] <Chat8352> hi ch3

[01:06] <Chat8352> no one even types anything on the others

[01:06] <colomon> sjohnson: it seems there's some sort of Blackberry chat app that keeps sending random people here.

[01:06] <sjohnson> colomon: that's one way to say RIM is open-source friendly

[01:06] <Chat8352> ok so one 

[01:07] *** Chat8352 left
[01:07] <sjohnson> colomon: you were right!

[01:08] <colomon> that's like the fifth time its happened in the last week

[01:08] <sjohnson> their irc app probably works like chat-roulette

[01:08] <sjohnson> just sticks em in a channel at random, and expects them to make friends

[01:14] *** redicaps left
[01:16] *** envi joined
[01:20] *** uniejo joined
[01:21] *** xinming left
[01:24] *** xinming joined
[01:24] *** ch3ck3r joined
[01:27] *** drbean left
[01:28] *** ch3ck left
[01:30] *** drbean joined
[01:39] *** am0c joined
[01:52] *** lidden joined
[02:40] *** redicaps joined
[03:00] *** jaldhar joined
[03:04] *** agentzh joined
[03:04] *** agentzh left
[03:04] *** agentzh joined
[03:08] *** uniejo left
[03:09] *** jaldhar left
[03:09] *** whiteknight left
[03:39] *** _twitch joined
[03:50] *** KyleHa joined
[03:55] *** awwaiid_ left
[04:00] <lue> hello o/

[04:02] <colomon> goodnight \o

[04:02] *** KyleHa left
[04:04] *** satyavvd joined
[04:11] *** lidden left
[04:19] *** am0c left
[04:33] *** jaldhar joined
[04:35] *** kanishka left
[04:36] *** PerlJam joined
[04:50] *** kanishka joined
[04:58] *** kanishka left
[05:11] *** kanishka joined
[05:14] *** meteorja1 joined
[05:14] *** c9s_ joined
[05:15] *** Psyche^ joined
[05:15] *** rblackwe_ joined
[05:15] *** ascent__ joined
[05:15] *** pmichaud_ joined
[05:16] *** flussence joined
[05:16] *** nrr joined
[05:16] *** Woody4286 joined
[05:16] *** justatheory_ joined
[05:16] *** simcop2387 left
[05:16] *** krunen_ joined
[05:16] *** flussence_ left
[05:16] *** justatheory left
[05:16] *** Patterner left
[05:16] *** perigrin left
[05:16] *** nrr` left
[05:16] *** jlaire left
[05:16] *** meteorjay left
[05:16] *** ascent_ left
[05:16] *** krunen left
[05:16] *** rblackwe left
[05:16] *** pmichaud left
[05:16] *** Woody2143 left
[05:16] *** c9s left
[05:16] *** Psyche^ is now known as Patterner

[05:16] *** justatheory_ is now known as justatheory

[05:17] *** simcop2387 joined
[05:18] <diakopter> jnthn: around?

[05:18] *** kanishka left
[05:19] <diakopter> oh, probably not if he 'sleep&' 6 hours ago

[05:19] *** brxue joined
[05:20] *** perigrin joined
[05:20] * diakopter back on Pangæa

[05:20] *** jlaire joined
[05:23] *** brxue left
[05:31] *** jhuni joined
[05:36] *** cjk101010 joined
[05:38] *** f00li5h left
[05:53] *** _kaare joined
[06:02] *** toebu joined
[06:16] *** redicaps left
[06:27] *** mberends left
[06:40] *** snearch joined
[06:42] <sorear> good * #perl6

[06:42] *** ChanServ sets mode: +o sorear

[06:42] *** sorear sets mode: +b *!*@69.41.179.203

[06:44] <sorear> huh

[06:44] <sorear> Chatmosphere got a second IP

[06:45] <sorear> ok, .200 to .207 whois to the company

[06:45] *** sorear sets mode: +b *!*@69.41.179.20*

[06:45] *** sorear sets mode: -b *!*@69.41.179.202

[06:45] *** sorear sets mode: -b *!*@69.41.179.203

[06:45] *** sorear sets mode: -o sorear

[06:48] <sorear> I would like to apologise to Lscott Sales in Evergreen, Colorado; fnmatch(3) needs to be taken out and shot

[06:50] *** wtw joined
[06:51] *** cjk101010 left
[06:59] <moritz_> good morning

[07:06] *** f00li5h joined
[07:11] <diakopter> sorear++ and moritz_++ fixing dalek often and quickly

[07:12] <diakopter> sorear++ refactoring dalek's pipes/streams

[07:16] *** waltermai joined
[07:21] * moritz_ was barely involved

[07:24] *** waltermai left
[07:26] *** waltermai joined
[07:31] *** ntysdd joined
[07:33] *** ntysdd left
[07:33] *** justatheory left
[07:33] *** dual left
[07:35] <diakopter> what's the Q:PIR { } way to print()

[07:37] <diakopter> nm

[07:38] *** _kaare left
[07:39] <diakopter> sorear: I finally got a PAST::Regex node to compile to a Console.WriteLine() :)  <yay>

[07:39] <diakopter> (unrelated to previous question)

[07:41] *** vxz joined
[07:42] <sorear> so are you using nqp or nqp#?

[07:44] <diakopter> I'm working on adding -rx to jnthn's on-clr nqp

[07:44] <diakopter> (what you're calling nqp# I'm sure)

[07:44] *** snearch left
[07:49] *** am0c joined
[07:57] <diakopter> std: sub else{ }; sub if{}; else if else if if else if if;

[07:57] <p6eval> std a194beb: OUTPUT«[31m===[0mSORRY![31m===[0m␤Confused at /tmp/ak9edpAEop line 1:␤------> [32msub else{ }; sub if{}; else if else [33m⏏[31mif if else if if;[0m␤    expecting any of:␤ argument list␤  statement_mod_loop␤Parse failed␤FAILED 00:01 119m␤»

[07:57] *** fhelmberger joined
[07:57] *** toebu left
[07:58] *** waltermai left
[08:00] *** _kaare joined
[08:05] *** aesop left
[08:09] *** aesop joined
[08:09] <sorear> diakopter: postfix conditional if takes precedence over a sub named if

[08:09] <sorear> else if ... looks like else() if ...

[08:09] <sorear> then at else() if else() if, the parser is confused, postfix conditionals can only appear once in a statement

[08:10] <sorear> no attempt is made to look for a sub, because if matches <terminator> and breaks out of expression processing

[08:17] *** kanishka joined
[08:19] * sorear submits it as a stress test to Niecza-STD

[08:19] <sorear> \o/

[08:21] <diakopter> heh

[08:30] * sorear suspects diakopter may not actually have been seeking an analysis

[08:30] <diakopter> :P

[08:34] *** raj joined
[08:38] <Grimnir_> where do I see what methods a filehandle gives?

[08:39] <moritz_> you can ask it, with  say ~$handle.^methods(:local)

[08:39] <sorear> rakudo: $*OUT.^methods(:all).say

[08:39] <p6eval> rakudo e6486e:

[08:39] <p6eval> ..OUTPUT«closeeofgetinslinesopenprintprintfsayreadwritegetcslurptdefslzcreatedmodifiedaccessedchangedautoflushpathstatNumericRealIntRatNumabsexploglog10sqrtrootsto-radiansfrom-radiansfloorceilingroundtruncatesigncisunpolarchrrandsincostanseccoseccotansinhcoshtanhsechcosechcotanhasinacosatan…

[08:39] <moritz_> rakudo: say ~$*OUT.^methods(:all)

[08:39] <p6eval> rakudo e6486e: OUTPUT«close eof get ins lines open print printf say read write getc slurp t d e f s l z created modified accessed changed autoflush path stat Numeric Real Int Rat Num abs exp log log10 sqrt roots to-radians from-radians floor ceiling round truncate sign cis unpolar chr rand sin cos

[08:39] <p6eval> ..tan s…

[08:39] <Grimnir_> thanks :)

[08:39] <moritz_> rakudo: say ~$*OUT.^methods(:local)

[08:39] <p6eval> rakudo e6486e: OUTPUT«close eof get ins lines open print printf say read write getc slurp t d e f s l z created modified accessed changed autoflush path stat␤»

[08:40] <sorear> to-radians, really?

[08:40] <sorear> whose bright idea was it to make handles Cool?

[08:41] <Grimnir_> which one should I use to get all data from a filehandle? like do { local ($/); <STDIN> } ?

[08:41] <sorear> $*IN.slurp

[08:41] <moritz_> slurp

[08:41] <sorear> moritz_: So far I've successfully avoiding acquiring a VPS.  Would blogs.perl.org then be the best option?

[08:41] <Grimnir_> oh, nice

[08:41] <Grimnir_> thx

[08:41] <sorear> you can also just use slurp;

[08:41] <sorear> the function form defaults to $*IN

[08:42] <Grimnir_> ah, ok, thanks

[08:42] <moritz_> sorear: it's fine, yes. The other Perl 6 hackers seem to prefer wordpress.com, but I like blogs.perl.org

[08:42] <sorear> ... For some reason I thought WordPress was a CMS that I had to install

[08:43] <moritz_> sorear: it's a blogging software, but you can also get a hosted thing for free

[08:43] <moritz_> that's what the advent calendar used

[08:43] * sorear observes that moritz is using perlgeek.de

[08:44] <sorear> ...perl6advent.wordpress.com, is that the right link?

[08:44] <sorear> oh

[08:44] <moritz_> sorear: I've built my own blogging stuff out of my offline CMS and blosxom, a very un-modern perl blogging thing :-)

[08:44] <sorear> misparse

[08:45] <moritz_> and I regret some of the decisions I made for my own blogging stuff

[08:45] <moritz_> it won't scale

[08:47] <mathw> yes, wordpress.com is the hosted wordpress service, and wordpress.org is where you can get the software to install on your own server

[08:48] <mathw> I do the latter

[08:48] <mathw> although I very rarely actually blog these days

[08:48] * moritz_ didn't know that mathw had a blog

[08:49] <mathw> Well I do

[08:49] <mathw> I always intended to work up to blogging a lot about Perl 6 and get it on the Planet, but then I didn't

[08:49] * mathw should do some more Form coding at some point

[08:50] <mathw> ...after nanowrimo though

[08:50] <mathw> and write documentation, that would be good too

[08:51] *** jhuni left
[08:55] *** meppl joined
[08:57] <sorear> docs for what? ;)

[08:59] <mathw> Form

[09:05] <Grimnir_> rakudo: "a".chr.say;

[09:05] <p6eval> rakudo e6486e: OUTPUT«

[09:06] <Grimnir_> rakudo: "a".comb[0].chr.say;

[09:06] <p6eval> rakudo e6486e: OUTPUT«

[09:06] <Grimnir_> rakudo: "a".comb.[0].chr.say;

[09:06] <moritz_> rakudo: say 'a'.ord

[09:06] <p6eval> rakudo e6486e: OUTPUT«

[09:06] <p6eval> rakudo e6486e: OUTPUT«97␤»

[09:06] <Grimnir_> bleh... of course

[09:06] <Grimnir_> lol

[09:06] <moritz_> rakudo: say 'a'.chr.perl

[09:06] <p6eval> rakudo e6486e: OUTPUT«"\x[0]"␤»

[09:08] <sorear> looks like there's some C code somewhere doing something stpid

[09:09] <moritz_> maybe inside the IRC client

[09:10] <sorear> mine, or p6eval?

[09:10] <sorear> who is the pumpking for misc/perl6advent-2010/topic-brainstorming ?

[09:10] <moritz_> sorear: tadzik is. But you can add topics without his involvement

[09:11] <sorear> heh, tadzik's name contains characters urxvt can't render with one font

[09:11] <sorear> So *suddenly switches to something with serifs and notably lighter* s'

[09:12] <moritz_> sorear: I'm not sure yet which program is to blame... will try rakudo on the command line once I've compiled it again

[09:13] <sorear> ilbot2 isn't seeing the »

[09:13] <moritz_> right

[09:13] <sorear> ilbot2 is Perl5, right?

[09:13] <moritz_> it is

[09:13] <moritz_> but it's POE magic that tries to utf-8 decode the input

[09:13] <moritz_> maybe it stops when it encounters illegal characters

[09:14] <sorear> embedded nuls aren't illegal in utf-8

[09:14] <moritz_> right, just figured that out

[09:15] <moritz_> or maybe it's a new rakudobug

[09:15] <sorear> I suspect ircd-seven

[09:15] <sorear> it's a large C program

[09:16] <sorear> Parrot probably has its own share of NUL bugs, but Parrot is not in a position to prevent » from being emitted

[09:16] <sorear> since it's emitted by perl5 code in evalbot

[09:16] <moritz_> right

[09:16] <moritz_> I forgot that

[09:16] <moritz_> still worth checking what rakudo does with \c[0]

[09:16] <sorear> also, you can remove "experimental" from p6eval's tagline anytime you want

[09:17] <moritz_> $ perl6 -e 'print "foo\c[0]bar"'|hexdump -C

[09:17] <moritz_> 00000000  66 6f 6f 00 62 61 72                              |foo.bar|

[09:17] <moritz_> looks fine

[09:18] *** mavrc joined
[09:19] <TiMBuS> its the ircd

[09:19] <TiMBuS> !eval "abc\x0def"

[09:19] <TiMBuS> abc

[09:20] <TiMBuS> er. well that still should prove it i guess

[09:20] <TiMBuS> !eval "abc\x{0}def"

[09:20] <TiMBuS> abc

[09:21] <moritz_> buubot: eval: "a\x{0}b"

[09:21] <buubot> moritz_: a\0b       

[09:21] <moritz_> heh

[09:21] <sorear> we ought to be escaping nuls on output

[09:21] <sorear> like we escape \x0A

[09:22] <moritz_> any suggestions what to escape it to?

[09:22] <moritz_> .u SYMBOL FOR NULL

[09:22] <phenny> U+2400 SYMBOL FOR NULL (␀)

[09:25] <sorear> hmm.  I'm missing a font

[09:26] *** kanishka left
[09:27] <moritz_> uhm, evalbot appears twice in dalek-conf.json

[09:27] <dalek> evalbot: 938911b | moritz++ | lib/EvalbotExecuter.pm:

[09:27] <dalek> evalbot: escape null bytes as U+2400 SYMBOL FOR NULL, sorear++

[09:27] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/938911bff59e74c6becc95286bef4649636acb83

[09:33] <dalek> mu: a4b8b7e | moritz++ | misc/dalek-conf.json:

[09:33] <dalek> mu: [dalek-conf.json] remove duplicate entry for evalbot

[09:33] <dalek> mu: review: https://github.com/perl6/mu/commit/a4b8b7e0ced45f61f749ba4f622ed8a8427d8711

[09:34] *** vxz left
[09:35] <sorear> at some point I need to prune dups from that file

[09:35] <sorear> and sanely pretty-print it

[09:35] * sorear wonders whether a Niecza Project Blog or a sorear-blog would be better

[09:36] <moritz_> having a default branch of 'master' would let us remove quite some cruft

[09:36] <moritz_> sorear: an 'everything sorear has to say about Perl 6' blog would awesome

[09:37] <sorear> moritz_: master is the default branch; that falls under "sane pretty printing"

[09:37] <moritz_> then I'm going to remove some master defaults

[09:38] <sorear> I made all the defaults explicit as a side-effect of redumping the file

[09:38] <moritz_> what's the default for 'channels' ?

[09:38] <sorear> [ [ "magnet", "#parrot" ] ]

[09:39] * sorear has some trepidation about starting a blog... though I suppose I haven't kept very hidden on logged IRC so I shouldn't

[09:39] <sorear> hmm.

[09:39] <sorear> #parrot seems to have adopted "metacommitter" as official jargon

[09:40] <moritz_> for quite some time actually

[09:40] <sorear> I made up that word sometime back in March while fumbling to explain some aspect of pugscode

[09:40] <moritz_> docs/project/metacommitter_guide.pod in the parrot repo exists since 2007

[09:41] <moritz_> sorear: in dalek-conf.json one URL is quite different from the rest

[09:41] <moritz_> github.com/chrisdolan/perl/tree/master

[09:41] <sorear> the hq9+ one?

[09:42] <sorear> oh

[09:42] <moritz_> should I remove the tree/master ?

[09:42] <moritz_> looks wrongisch

[09:42] <sorear> it doesn't hurt either way

[09:42] <sorear> the parser ignores everything after the fifth slash

[09:43] <sorear> it regexes out the "chrisdolan/perl" part, then appends the branch list

[09:44] *** kensanata joined
[09:48] *** snearch joined
[09:49] <dalek> mu: 121f5b1 | moritz++ | misc/dalek-conf.json:

[09:49] <dalek> mu: [dalek-conf] remove default branch master

[09:49] <dalek> mu: review: https://github.com/perl6/mu/commit/121f5b1ae7ca9d0b46ffdc2539eb4313336d80b5

[09:50] *** daxim joined
[09:52] *** kensanata left
[09:53] *** kensanata joined
[09:53] *** tzhs joined
[09:54] <dalek> mu: 5f5a77a | moritz++ | misc/dalek-conf.json:

[09:54] <dalek> mu: [dalek-conf] remove default chanels

[09:54] <dalek> mu: 

[09:54] <dalek> mu: also merge the two rakudo entries, and stop monitoring the 'buf' branch.

[09:54] <dalek> mu: review: https://github.com/perl6/mu/commit/5f5a77abeb59f5ed1c3213135385ab611df228b8

[10:00] *** QinGW left
[10:16] *** dakkar joined
[10:29] *** masonkramer_ joined
[10:29] *** masonkramer left
[10:29] *** masonkramer_ is now known as masonkramer

[10:35] *** dakkar left
[10:38] *** dakkar joined
[10:44] *** vxz joined
[10:45] *** vxz left
[10:47] *** vxz joined
[10:51] *** masak joined
[10:51] <masak> hi, #perl6

[10:54] <vxz> Hello masak.

[10:56] *** wamba joined
[10:56] <masak> lately I've been pondering whether it'd be possible to make nested classes (à la A12) mesh with current Perl 6 OO. specifically, I'm trying to determine whether the "virtual nested class" idea of A12 is too much magic or "just enough".

[10:57] * moritz_ kinds thinks that nested classes only make sense when they are stritly private to the outer class

[10:57] *** p6eval left
[10:57] *** p6eval joined
[10:57] *** ChanServ sets mode: +v p6eval

[10:57] <masak> well, I can certainly see them make sense in other circumstances as well.

[10:58] <moritz_> rakudo: say "ab\c[0]def"

[10:58] <p6eval> rakudo e6486e: OUTPUT«ab␀def␤»

[11:01] <masak> sometimes classes are even nested for no better reason than that it helps the disposition of the code.

[11:01] <masak> a bit like we tend to put subs in methods nowadays.

[11:02] <masak> those *are* "strictly private", but that's the default for subs. the default for package-like things is not to be.

[11:02] <moritz_> and that's where the problems come from

[11:03] <moritz_> to make a previously private sub public, you can either (1) mark it with our or (2) export it

[11:03] <moritz_> for (1) it's easy to see that local sub name is just a lexical alias to a fully qualified name

[11:04] <moritz_> and (2) just installs the the lexical alias where you use it

[11:04] <moritz_> however it's not so easy for type names, because fully qualified names and short names looks alike

[11:05] <moritz_> class A { class B::C { ... } # you wouldn't know if B::C is fully qualified, or a lexical alias, just by looking at the name }

[11:05] <masak> nod

[11:06] <moritz_> class B { 

[11:06] <moritz_> class B { }; class A { class B { }; # what's B here ? }

[11:06] <masak> I would assume that it's the inner one.

[11:07] <moritz_> one possible resolution is to only ever allow fully qualified class names

[11:07] <moritz_> but it's not a nice solution

[11:07] <masak> was just going to say that.

[11:08] * moritz_ faster :-)

[11:09] <masak> :)

[11:09] <tadzik> o/

[11:09] <phenny> tadzik: 09 Nov 22:15Z <masak> tell tadzik that neutro bootstrap worked fine on my box.

[11:10] <masak> this is one area where I don't have any real-world experience. I haven't even been using nested classes that much in other OO languages. I'm not aware of any typical examples where nested classes turn out to be just right.

[11:10] <masak> I'd guess it varies a lot from language to language.

[11:10] <masak> \o, tadzik.

[11:10] <moritz_> anyway, that's why I suspect there's no good solution to inner classes that DWIW

[11:11] <masak> right.

[11:11] <masak> nom &

[11:11] *** masak left
[11:12] <mathw> The only thing I really use nested classes for is in C++ when I want it to have some internal type

[11:12] <mathw> and I often make them private

[11:13] <mathw> I've never run into a problem with their semantics that I recall, but I'm never really doing anything elaborate - it's really just a namespacing thing that I do

[11:14] *** whiteknight joined
[11:33] *** satyavvd left
[11:33] *** lestrrat left
[11:34] *** lestrrat joined
[11:40] *** agentzh left
[11:44] <bbkr> is there a phaser that can replace now BUILD known from P5 Moose (executed at the beginning of every object creation)?

[11:44] <zby> seen chromatic?

[11:44] <aloha> chromatic was last seen in #parrot 12 hours 26 mins ago saying "They don't include diffs, but it's a start.".

[12:02] <bbkr> rakudo: class A { method new ()  { self.bless(*).^add_method("foo", method {say 666} ) } }; A.new.foo # bug?

[12:02] <p6eval> rakudo e6486e: OUTPUT«Null PMC access in find_method('foo')␤  in main program body at line 22:/tmp/MzSMQgqmnY␤»

[12:04] *** _twitch left
[12:05] *** ggoebel left
[12:07] *** ggoebel joined
[12:09] *** ggoebel left
[12:11] *** ggoebel joined
[12:12] <moritz_> bbkr: not sure if you are allowed to use ^add_method on instances, and without calling .^compose

[12:14] *** ggoebel left
[12:15] <bbkr> moritz_: but instance is blessed. so where is the problem? HOW on blessed instance should give class metaobject anyway, right? and it works the other way round: self.^add_method("foo", method {say 666} ); self.bless(*)

[12:16] <moritz_> bbkr: the problem is that .^add_method is an API for classes, not for instances

[12:16] <moritz_> $obj.^foo() desguars to $obj.HOW.foo($obj)

[12:17] <moritz_> so in one case you're calling a method from the meta class with an instance as first argument, and in the other with a type object

[12:17] <moritz_> and the spec doesn't indicate that it's OK to pass an instance

[12:17] <bbkr> moritz_: you're a genius. clear and simple explanation :)

[12:17] <moritz_> if you want to add a method to a single instance, use infix does or but

[12:18] *** bluescreen joined
[12:18] *** bluescreen is now known as Guest83463

[12:23] <tadzik> grammar changes... again:(

[12:26] *** _kaare left
[12:26] *** whiteknight left
[12:32] *** orafu left
[12:37] *** _kaare joined
[12:37] <bbkr> ok, another question. "$instance does role { method foo{} }" works like a charm. but what if name of the method is not known in compile time but comes in variable? is there any magic syntax to express "method $name {} " ?

[12:39] <moritz_> you need something along the lines of

[12:39] <moritz_> my $role = RoleHOW.new();

[12:39] <moritz_> $role.^add_method($foo, method () { } );

[12:39] <moritz_> $role.^compose()

[12:39] <moritz_> $instance does $role

[12:40] *** orafu joined
[12:40] <bbkr> testing....

[12:42] *** masak joined
[12:42] <bbkr> moritz_++ # trick works!

[12:43] <moritz_> actually I stole it from jnthn++ via timbunce++ :-)

[12:48] <masak> bbkr: you asked about "a phaser that can replace now BUILD known from P5 Moose (executed at the beginning of every object creation)". there's a submethod called BUILD, and one called BUILDALL. it's more common to "override" those than to provide a new .new method in one's own classes. see S12 for more info.

[12:52] <masak> this used to happen to me when I was just a subscriber to Perl 6, and not an actual coder: http://twitter.com/preluman/status/2316142362238976

[12:55] *** kst left
[12:56] <tadzik> this still happens to me. Gotta write more

[12:59] <masak> come to think of it, it was the same with me and Chinese characters. they used to be this exotic, mysterious medium of writing -- seemed more like something someone made up than an actual writing system.

[12:59] <vxz> It's...both?

[12:59] <masak> then I learned stuff about it, and it all sort of settled into a more realistic viewpoint. still pretty cool, of course, but much more tangible.

[13:01] <masak> vxz: well, lots of people contributed to making it up, of course. in a sense, it's a continuing, massively  parallel computation. just like all other forms of human communication.

[13:01] <vxz> masak: and the rest of the universe.

[13:02] <masak> a hundred and fifty years ago, the universe was a steam engine. so, sure. the universe is a computation. :)

[13:03] <moritz_> I'm a member of an Optics graduate school, and they have this slogan "the 21st century is the century of the photon" :-/

[13:03] <vxz> Hmmm...steam-powered computation...

[13:04] <masak> moritz_: sounds good to me.

[13:04] * vxz starts thinking about ways to power his laptop off of steam

[13:04] <moritz_> vxz: have fun with the cooling... :-)

[13:05] <vxz> Good point.  Something tells me I wouldn't get the same level of portability after such a modification, either...

[13:05] <daxim> http://df.magmawiki.com/index.php/DF2010:Computing

[13:06] *** takadonet joined
[13:06] <takadonet> hey all

[13:07] <tadzik> o/

[13:07] <takadonet> tadzik: how are u sir?

[13:07] <vxz> hello

[13:08] *** awwaiid joined
[13:10] <tadzik> takadonet: oh cool, thanks

[13:10] <masak> hi takadonet.

[13:10] <tadzik> I'll probably get my internets @home finally today

[13:11] <masak> "internets@home"? is that some kind of distributed-computing Internet?

[13:12] <masak> computers use their idle cycles to emulate the Internet...

[13:12] <flussence> .oO( my wifi's quite good at emulating dialup... )

[13:14] *** icwiener joined
[13:16] <flussence> I have a crazy idea: generating vim syntax files from p6 grammars. The more I think about it though, the more impossible it looks...

[13:17] <masak> it wouldn't surprise me if the latter were strictly more powerful than the former.

[13:18] <moritz_> even if you can write such a converter for normal grammar rules, you still need to translate the operator presedence parser

[13:19] <arnsholt> I think masak's right

[13:19] <arnsholt> But generating them from a limited subset of Grammars might be viable

[13:19] <masak> absolutely.

[13:19] <arnsholt> And might make the whole process a bit simpler =)

[13:20] <moritz_> I think the real problem is that for syntax hilighting you need a lexer, not a parser

[13:20] <moritz_> and if you translate a full parser, it'll be way too inefficient

[13:20] <arnsholt> True. Also, the vim syntax is more than a bit funky, IMO =)

[13:21] *** Patterner left
[13:26] *** sftp joined
[13:33] *** Psyche^ joined
[13:33] *** Psyche^ is now known as Patterner

[13:40] *** ggoebel joined
[13:40] <Util> masak, moritz_, flussence: gimme5 (by TimToady++) translates STD.pm into Perl 5 (partially as P5 regexes, I think); it may have already done a lot of the work for you.

[13:41] *** ggoebel left
[13:42] *** ggoebel joined
[13:43] <moritz_> Util: or s/gimme5/viv/ these days

[13:43] *** neroxx joined
[13:45] <neroxx> rakudo: say 45 + 43

[13:45] <p6eval> rakudo e6486e: OUTPUT«88␤»

[13:46] *** snearch left
[13:49] *** Guest83463 left
[13:49] *** Guest83463 joined
[13:49] *** raj left
[13:53] *** Guest18095 joined
[13:56] <bbkr> rakudo: class A { method BUILD { self does 1 } }; A.new # why recursion?

[13:56] <p6eval> rakudo e6486e: OUTPUT«maximum recursion depth exceeded␤  in 'infix:<does>' at line 1␤  in 'infix:<does>' at line 588:CORE.setting␤  in 'A::BUILD' at line 22:/tmp/cWvRdC4dDe␤  in 'infix:<does>' at line 43␤  in 'infix:<does>' at line 588:CORE.setting␤  in 'A::BUILD' at line 22:/tmp/cWvRdC4dDe␤  in

[13:56] <p6eval> ..'infix:…

[13:57] <masak> bbkr: BUILD is supposed to be a submethod.

[13:57] <masak> bbkr: did you read S12?

[13:59] <bbkr> It says that submethod is something not inherited. But anyway - using "submethod" works, thanks!

[13:59] <moritz_> if it were inherited, it would be executed twice during initialization

[14:06] <masak> A12 has a lot of wording about how methods and submethods do or don't participate in multiple dispatch, and about how multiple dispatch is an agreement of some sort between caller and callee. I don't follow it all, but it seems we've gotten rid of a lot of the complexity there.

[14:09] <masak> hm. I think part of what disturbs me about the "Not Invented Here" and "Invented Here" terms, is that they denounce what they describe. that doesn't seem to be a very healthy thing for terms to do. and it messes with my reasoning about them. :/

[14:10] <masak> i.e. something that was invented here is an example of the "Not Invented Here" syndrome.

[14:15] *** ggoebel left
[14:15] *** jedai_ joined
[14:19] *** jedai left
[14:21] *** sECuRE left
[14:24] *** iWork joined
[14:24] *** _iWork_ joined
[14:25] *** _iWork_ left
[14:25] *** iWork left
[14:25] <masak> two nice things about serverlog statistics so far: (1) I can see referals and what people search for. (2) I can see 404s generated by links that point wrong on my page.

[14:26] <moritz_> so, where are you getting most visits from? planetsix?

[14:26] <takadonet> masak: reddit?

[14:27] <masak> hm.

[14:28] <masak> in October, reddit won out.

[14:29] <masak> followed, oddly, by perlfoundation.org

[14:29] * moritz_ hasn't seen any posts from masak's new blog on reddit

[14:29] <masak> "Extending the syntax" made it to reddit last month.

[14:30] <moritz_> right

[14:30] <masak> ah -- seems someone kindly rewrote all the links on the perfoundation wiki.

[14:30] <masak> someone++

[14:32] <masak> moritz_++ # http://perlgeek.de/blog-en/perl-6/pvc-perl6-vocabulary-coach.html

[14:32] <masak> moritz_: s/less frequent/less frequently/

[14:32] <moritz_> .oO( please don't reddit that one :)

[14:33] <masak> ok.

[14:33] *** wamba left
[14:34] <moritz_> grammar fixed, masak++

[14:34] *** tzhs left
[14:36] *** KyleHa joined
[14:38] *** smash joined
[14:39] <smash> hello everyone

[14:39] *** wamba joined
[14:39] *** lidden joined
[14:40] <takadonet> smash: yo

[14:40] <smash> updated benchmarks with last rakudo star release: http://gil.di.uminho.pt/users/smash/rakudo-bench.html

[14:40] <masak> smash++

[14:40] <takadonet> smash++

[14:40] <takadonet> smash: our do_nothing is getting better

[14:40] *** tylerni7 left
[14:41] <masak> smash: prime and prime-2 are making the left graph mostly useless.

[14:41] <smash> takadonet: yeap, that's very good..

[14:41] <smash> masak: yeap, but you can click on those in the graph to hide them

[14:41] <masak> oh, good.

[14:42] <tadzik> smash: yes, what is this jump about? Were they gone before, or what happened?

[14:42] *** tylerni7 joined
[14:42] *** tylerni7 left
[14:42] *** tylerni7 joined
[14:42] <masak> everything is trending slightly downwards, except prime, which has gotten slower.

[14:42] <masak> wonder why.

[14:43] <smash> not sure, need to look at the prime program

[14:43] <colomon> boy, nothing in it jumps out at me as being an obvious source of the slowdown

[14:43] <masak> smash: the underlines on the digits in the table create a lot of visual clutter, and are slightly confusing because those aren't links.

[14:44] <colomon> ....unless it has something to do with switching from .munch to [^100]  ?

[14:44] <masak> you're changing the scripts!?

[14:45] <colomon> masak: had to, it wasn't actually compatible with older Rakudo.

[14:45] <smash> the script changed, but the benchmarks re-ran for all the releases

[14:45] <colomon> unless something weird is going on, ... what smash said

[14:45] <masak> smash: oh, good. smash++

[14:48] <colomon> thing is, when I add a benchmark script like that, I try to calibrate it to be about the same timing as the others in its neighborhood, so the graphs look right.

[14:48] *** amkrankruleuen joined
[14:48] <colomon> I think I added prime for the release on which it now runs so slowly.

[14:49] *** exodist left
[14:49] <smash> still prime scripts are exposing some weird issue that i haven't figured out yet

[14:49] *** exodist joined
[14:50] <smash> i guess i'll start by re-running the all thing again, to make sure that there was no external process causing this behaviour

[14:51] *** krakan left
[14:51] *** krakan joined
[14:51] <colomon> smash: 

[14:51] <colomon> smash: just rerun those two scripts, maybe?

[14:52] <colomon> I mean, you ought to be able to quickly tell if they take 5 seconds or 200

[14:52] <colomon> (I'm trying that locally as well.)

[14:52] <colomon> or is the problem the other way around?

[14:52] *** neroxx left
[14:53] *** sECuRE joined
[14:53] <colomon> are they actually running at all on the first two versions?  maybe I targeted them to be 200 second benchmarks...

[14:53] <smash> hmm, prime.pl with rakudo-star-2010.07 is giving a list of undef's that's why it's so quick

[14:53] <tadzik> hah

[14:54] <masak> there you go, then.

[14:56] <colomon> hmm.... not sure why it wouldn't work on rakudo-star-2010.07.

[14:56] <colomon> is that available via p6eval, perchance?

[14:59] <moritz_> nope

[14:59] <moritz_> star: say 1

[14:59] <p6eval> star 2010.09:  ( no output )

[14:59] <moritz_> seems there's no star available atm

[14:59] <tadzik> http://search.cpan.org/~broq/Git-PurePerl-0.47/lib/Git/PurePerl.pm -- would be awesome to have a Perl 6 port, but damn, it's huuge :(

[15:04] <masak> I think the current realities of speed would make such a port significantly less awesome.

[15:07] <slavik1> what is that module?

[15:07] <colomon> It's git, implemented completely in Perl, I think.

[15:10] <daxim> not much porcelain there

[15:10] *** alester joined
[15:15] <PerlJam> tadzik: It would be awesome to port Git::Wrapper

[15:15] <PerlJam> Git::PurePerl ... not so much

[15:18] *** Bzek joined
[15:20] *** MayDaniel joined
[15:23] *** patrickas joined
[15:23] <patrickas> colomon, I think the problem with prime is that the scripts use %% which was !% a couple of months ago ... (but I am not sure)

[15:24] <moritz_> could use $a % $b == 0

[15:24] <colomon> patrickas: believe I added %% during YAPC::NA, which was before the first R*

[15:24] <patrickas> colomon: oh ok

[15:27] *** wtw left
[15:29] *** plobsing left
[15:30] <smash> 'Segmentation fault' running perl6, beatiful

[15:30] <masak> ooh, haven't seen that in a while.

[15:31] <colomon> smash: what were you doing?

[15:32] <smash> colomon: running prime.pl with an outdated rakudo/perl6

[15:32] *** diakopter left
[15:32] <colomon> ah, so not with latest rakudo?

[15:32] <smash> colomon: nope.. updating now

[15:35] *** TimToady left
[15:35] *** p6eval left
[15:35] *** dalek left
[15:36] *** sorear left
[15:36] *** TimToady joined
[15:36] *** sorear joined
[15:36] *** diakopter joined
[15:38] *** dalek joined
[15:38] *** ChanServ sets mode: +v dalek

[15:40] *** risou joined
[15:42] <smash> colomon: sub next-prime doesn't get called in rakudo-star-2010.07in line: my @primes := 2, 3, next-prime.() ... *;

[15:42] *** dalek left
[15:42] <moritz_> heh, different series semantics?

[15:43] <masak> might be binding semantics that changed.

[15:43] <moritz_> when was the Big Series Change implemented in rakudo?

[15:43] *** Guest18095 left
[15:43] <masak> ...back when sequences were called series... :)

[15:43] <patrickas> moritz_: definetely after rakudo star 2

[15:44] <moritz_> so, no all-star compatible series benchmarks.

[15:44] <colomon> smash: can we set up the bench scripts with a "do not run before version XXX" flag?

[15:44] <moritz_> Date:   Wed Sep 8 11:31:46 2010 +0200

[15:44] <moritz_> Merge remote branch 'origin/series-refactor'

[15:44] *** p6eval joined
[15:44] *** ChanServ sets mode: +v p6eval

[15:44] <colomon> smash: you can probably check for sure that is the problem by asking for @primes[2].WHAT

[15:44] *** dalek joined
[15:44] *** ChanServ sets mode: +v dalek

[15:45] <smash> colomon: i can try to set the "do not run  before version XXX" flag

[15:45] *** diakopter left
[15:45] <colomon> \o/

[15:46] <patrickas> I am not sure we are using somethign that changed with the series refactor ...

[15:46] <moritz_> before the refactor, the code object was on the right, no?

[15:46] <moritz_> no wait, that's yet another refactor

[15:47] <patrickas> no ....

[15:47] *** TimToady left
[15:47] *** sorear left
[15:48] *** TimToady joined
[15:48] <patrickas> away &

[15:49] *** sorear joined
[15:51] *** justatheory joined
[15:54] *** kst joined
[16:08] *** icwiener left
[16:11] *** icwiener joined
[16:12] *** MayDaniel left
[16:20] *** kiithroen joined
[16:21] *** kanishka joined
[16:27] *** kensanata left
[16:28] *** kiithroen left
[16:29] *** felliott joined
[16:32] *** icwiener left
[16:35] *** icwiener joined
[16:39] *** icwiener left
[16:41] *** icwiener joined
[16:44] *** Ross joined
[16:44] *** Ross left
[16:44] *** Ross joined
[16:47] *** hercynium joined
[16:48] *** toebu joined
[16:49] *** toebu is now known as TobiOetiker[keyn

[16:49] *** TobiOetiker[keyn is now known as TobiOetiker[key]

[16:50] <bbkr> https://github.com/bbkr/jsonrpc - working JSON-RPC client. still TO-DO is bigger than CAN-DO. it should be polished by the end of the year.

[16:51] <takadonet> bbkr++

[16:52] <masak> nice. please add to the ecosystem.

[16:56] *** plainhao joined
[16:56] *** ggoebel joined
[16:57] <daxim> phenny, ecosystem?

[16:57] <daxim> needs moar factbots

[16:58] <masak> https://github.com/perl6/ecosystem

[16:58] <masak> it's the repository that feeds http://modules.perl6.org

[16:58] *** JimmyZ joined
[17:01] *** dual joined
[17:02] *** JimmyZ left
[17:03] *** wallberg joined
[17:03] *** JimmyZ joined
[17:04] <moritz_> aloha: ecosystem is at https://github.com/perl6/ecosystem and feeds http://modules.perl6.org

[17:04] <moritz_> aloha: ecosystem?

[17:05] *** waltermai joined
[17:06] *** MayDaniel joined
[17:13] *** kanishka left
[17:19] *** Bzek_ joined
[17:19] *** stkowski joined
[17:20] *** JimmyZ left
[17:21] <masak> &

[17:21] *** masak left
[17:22] *** Bzek left
[17:33] *** jaldhar left
[17:36] *** timbunce joined
[17:36] *** dakkar left
[17:38] <tadzik> PerlJam: it'd be nice to have a module installer not depending on git imho

[17:39] <dukeleto> tadzik: git is the new /bin/sh

[17:39] <dukeleto> tadzik: why don't you want it as a dep?

[17:39] *** diakopter joined
[17:39] <dukeleto> tadzik: i understand that non-developers might not have it, but what would you use instead?

[17:40] <tadzik> dukeleto: well, I'm just a bit allergic to additional dependencies and system(), that's all

[17:40] *** cdarroch joined
[17:40] *** cdarroch left
[17:40] *** cdarroch joined
[17:40] <tadzik> I remember on an #cpan6sketch, there was a discussion about whether to use git as a module source or not, pmichaud stated that it shouldn

[17:41] <tadzik> ...'t be to hard or bad to write a pure perl minimal git client

[17:43] <tadzik> bbkr: nice module, but it's Perl, not PERL :)

[17:45] <daxim> pure perl 6?

[17:47] *** risou left
[17:49] <bbkr> tadzik: changed :)

[17:52] *** justatheory left
[17:57] <dukeleto> libgit2 is being worked on by github

[17:57] <dukeleto> it is a pure C reentrant library that implements git

[17:57] <dukeleto> which will then be very easy to bind to

[17:57] <dukeleto> if someone wants to help me work on perl6 bindings to it, i would be up for that.

[17:58] <dukeleto> it is still a dependency though

[17:58] * dukeleto doesn't subscribe to the "allgeric to dependencies" philosophy

[17:59] <tadzik> hmm, well

[18:00] <tadzik> rather allergic to additional-dependencies-on-complex-things-while-the-idea-is-simple

[18:00] <tadzik> now, we want to fetch some files, and we depend on a version control system

[18:00] *** smash left
[18:01] <PerlJam> simple ideas are often not-so-simple upon closer inspection.

[18:02] <tadzik> I don't think the simplicity here is only skin deep

[18:02] <PerlJam> also, if there's an existing round wheel, the rationale for inventing another wheel had better be good :)

[18:07] *** am0c left
[18:13] *** impious joined
[18:16] *** timbunce left
[18:16] *** timbunce_ joined
[18:24] *** cognominal left
[18:31] *** cognominal joined
[18:31] *** mberends joined
[18:33] *** timbunce_ left
[18:37] *** justatheory joined
[18:41] *** TobiOetiker[key] left
[18:44] *** rindolf joined
[18:44] <rindolf> Hi all.

[18:45] <takadonet> rindolf: hey

[18:45] <rindolf> takadonet: hi, what's up?

[18:46] <tadzik> hey rindolf 

[18:46] <rindolf> Hi tadzik 

[18:46] *** timbunce joined
[18:48] <takadonet> rindolf: working u?

[18:48] <rindolf> takadonet: trying to work.

[18:56] *** Ross left
[19:04] *** mkramer1 joined
[19:06] *** mkramer1 left
[19:06] *** mkramer left
[19:07] *** mkramer joined
[19:08] *** justatheory_ joined
[19:10] *** TobiOetiker[key] joined
[19:11] *** justatheory left
[19:11] *** justatheory_ is now known as justatheory

[19:12] *** TobiOetiker[key] is now known as TobiOetiker[weda

[19:12] *** TobiOetiker[weda is now known as TobiO[weda]

[19:19] <rindolf> takadonet: OK, finished working for today. I set two tickets to merge today.

[19:19] <rindolf> takadonet: and made some progress with the Mandriva Cooker Testing rpm-5.x mishap.

[19:19] <rindolf> takadonet: and also helped some people on IRC.

[19:19] <rindolf> All in a day's work.

[19:19] *** kjeldahl joined
[19:22] *** pmichaud joined
[19:23] *** timbunce left
[19:23] <pmichaud> Good afternoon #perl6

[19:24] <pmichaud> Just checking in to say I'll likely miss today's call

[19:25] <pmichaud> (Out of office )

[19:26] <rindolf> pmichaud: hi.

[19:26] <pmichaud> Hello

[19:27] *** TobiO[weda] is now known as TobiO[weta]

[19:27] *** rgrau joined
[19:27] <pmichaud> (On my cell so slow response)

[19:28] <pmichaud> Lunch is here gtg obbligatos

[19:28] <pmichaud> Er.  Bbl

[19:28] *** pmichaud left
[19:33] *** cbibler joined
[19:33] *** cbibler left
[19:34] *** Chillance joined
[19:39] <patrickas> colomon, moritz_, smash: the problem with the primes script seems to be the binding :=

[19:40] <colomon> patrickas++

[19:40] <takadonet> stupid binding!

[19:40] <sorear> good * #perl6

[19:40] <takadonet> sorear: yo

[19:41] <patrickas> my @primes := 2, 3, &next-prime ... 73; works on recent rakudo but not on an old one

[19:41] <patrickas> my @primes = 2, 3, &next-prime ... 73; works on all versions

[19:42] <patrickas> colomon: also you need to use an exact prime at the right hand side so that it works for rakudos with old series code and new sequence code.

[19:44] <colomon> patrickas++

[19:45] <patrickas> is the target running time a few seconds ?

[19:45] <colomon> no, it's around 200

[19:46] <colomon> I'm working on the change right now.

[19:47] <sorear> moritz_: I have nested classes working, although not virtual

[19:47] *** impious left
[19:47] <patrickas> colomon: ok great, I guess in that case it would need to be moved to the heavy scripts part

[19:47] <sorear> moritz_: currently nested classes are the only way to have A::B in Niecza; I haven't figured out how "class A::B { }" is supposed to work

[19:48] <sorear> vxz: All you have to do is plug it in :p

[19:51] * PerlJam wonders what "nested classes" is supposed to mean.

[19:52] <sorear> niecza: class Foo { class Bar { method hi { 5 } } }; say Foo::Bar.hi

[19:52] <p6eval> niecza 4045e2e: OUTPUT«5␤»

[19:54] <patrickas> sorear++ niecza++

[19:54] *** daxim left
[19:54] <patrickas> sorear: how much of the spectest can niecza pass ?

[19:55] <sorear> none.  niecza is a static compiler and the spectest is heavily reliant on &eval

[19:56] <patrickas> oh!

[19:56] <sorear> "get eval working" is my long-term goal

[19:57] <patrickas> it would be cool if niecza would go from 0% to 50% in one day :-)

[19:57] <sorear> in order to make that happen, I need to 1. run STD.pm6 on Niecza's backend 2. port Niecza's middle end to a language which can run on the backend

[19:57] <sorear> #1 is almost done

[19:58] <sorear> I'm not totally sure about #2

[19:58] *** hercynium left
[19:58] <sorear> I'm still waffling between C# and Perl 6

[19:58] <dalek> bench-scripts: f9c4180 | colomon++ | prime (2 files):

[19:58] <dalek> bench-scripts: Try to rewrite the prime scripts to avoid := and sequence issues in older Rakudos.

[19:58] <dalek> bench-scripts: review: https://github.com/perl6/bench-scripts/commit/f9c4180b9b48a686753a4397b5a0c240611f1ca6

[19:58] <PerlJam> std: package Foo { module Bar { class Baz { }; }; }; Foo::Bar::Baz.new;

[19:58] <p6eval> std a194beb: OUTPUT«ok 00:01 118m␤»

[19:59] <sorear> C# will be vastly faster to compile and run, but Perl 6 has more style points :p

[19:59] <PerlJam> rakudo package Foo { module Bar { class Baz { }; }; }; Foo::Bar::Baz.new;  # curious  :)

[19:59] <patrickas> sorear: I can understand the dilemma :-)

[19:59] <PerlJam> rakudo: package Foo { module Bar { class Baz { }; }; }; Foo::Bar::Baz.new;  # curious  :)

[19:59] <p6eval> rakudo e6486e: OUTPUT«Can not find sub Foo::Bar::Baz␤  in main program body at line 1␤»

[20:00] <patrickas> colomon++, can we trigger a re-run of the benchmarks and regenrate the graphs ?

[20:00] <colomon> I can't, dunno if anyone other than smash++ can.

[20:01] <patrickas> I suppose we can phenny tell him to do that...

[20:02] <tadzik> seen smash

[20:02] <aloha> smash was last seen in #perl6 4 hours 16 mins ago saying "colomon: i can try to set the "do not run  before version XXX" flag".

[20:02] <patrickas> phenny: tell smash colomon++ fixed the prime scripts, it would be great if you can re-run the benchmarks to generate new graphs

[20:02] <phenny> patrickas: I'll pass that on when smash is around.

[20:03] <colomon> patrickas: did you try my new versions of the scripts?  I still don't have older R*s around to try them against.  all I know is they still work in current Rakudo.

[20:04] <patrickas> colomon: good idea ... no I just checked the change .... running right now

[20:07] *** hercynium joined
[20:11] <patrickas> yes they work

[20:13] *** waltermai left
[20:17] *** felliott left
[20:23] *** TobiO[weta] left
[20:25] *** ggoebel left
[20:30] <dalek> mu: 47e8aad | sorear++ | misc/perl6advent-2010/topic-brainstorming:

[20:30] <dalek> mu: Add a few advent ideas

[20:30] <dalek> mu: review: https://github.com/perl6/mu/commit/47e8aadb9af1abbbf5507db2b6812f5b089dcbb1

[20:32] <tadzik> I'm thinkiing about some voting mechanisms about advent topics. maybe doodle would be nice

[20:33] *** justatheory left
[20:36] *** Eevee left
[20:42] *** Eevee joined
[20:46] *** MayDaniel left
[21:13] *** justatheory joined
[21:14] <colomon> patrickas++

[21:18] *** masak joined
[21:18] <masak> ahoy!

[21:20] <sorear> hello masak

[21:21] <patrickas> lolitsmasak!

[21:22] <tadzik> yayitsmasak!

[21:22] <Tene> ohaimasak

[21:22] <masak> while I remember, may I remind you all that it is exactly one month before I make a Big Announcement? here's your first clue out of a possible four: http://www.amazon.com

[21:23] <tadzik> You have a Web branch working on master?

[21:23] <colomon> You're buying a book?

[21:23] <patrickas> You are traveling to Brazil ?

[21:23] <patrickas> :-)

[21:23] <tadzik> You are a new lead guitar in Korpiklaani?

[21:23] <sorear> You've been sued for violating some nebulous web patent?

[21:23] <masak> that would indeed be big. I hope to have a Web branch working on master by the end of November.

[21:24] <masak> you're all so cute. I love you.

[21:24] <tadzik> I love the atmosphere here

[21:25] <masak> I think the tapped water here is great.

[21:25] <Tene> You're launching a new business competing aginst amazon, running on Web.pm on Perl 6.

[21:26] <masak> the clue counter has closed for today. see you all in ten days.

[21:26] <tadzik> You're writing a book!

[21:26] <tadzik> damn, I was too slow

[21:26] <patrickas> It's got nothign to do with amazon, and the first clue you gave us is just to mess with our heads ?

[21:26] <colomon> You're publishing a tell-all book about the bugs in Rakudo?

[21:27] <masak> tadzik: I am, but so are a lot of other people. it's on github :)

[21:27] <Tene> Chapter 5: Snowman/Comet Quoting

[21:27] <masak> :D

[21:27] <masak> Snowman/Comet is a hit; it's both cool and hot.

[21:28] <jnthn> Oh, I know it! masak is going to announce that Amazon is doing hosted Perl 6 on its cloud service. They give him a kickback for every CPU hour they sell, which since it's Rakudo, will be a LOT of them.

[21:28] <moritz_> nice plan :-)

[21:28] <masak> clearly, I should pre-announce things more often.

[21:29] <tadzik> that should be  a Test.pm statement

[21:29] <tadzik> nice plan;

[21:31] *** plainhao left
[21:33] <PerlJam> masak: you're going to make a big announcement on Dec 10?  That's my son's birthday.  :)

[21:33] * arthur-_ giving up on the perl6/mongodb driver thing, coming back in a month to see if it gets easier

[21:34] <masak> PerlJam: didn't you say that last time too? :)

[21:34] <masak> arthur-_: sad to hear it. hope we'll have eliminated some bumps for you till then!

[21:35] <arthur-_> hope so too

[21:35] <PerlJam> masak: probably.  I'm getting old and senile.

[21:35] <arthur-_> i got a connection to the db, i'm already surprised to have gone that far

[21:35] <masak> PerlJam: either that, or it's my precognition acting up again.

[21:36] <PerlJam> Now if you have a big announcement for Jan 10, that'll be my twins' birthday

[21:36] <masak> PerlJam: you do like decimal, don't you? :)

[21:36] * masak .oO( there are 10 twins... )

[21:36] <PerlJam> masak: 10 is my favorite number.  the pun is just a bonus  :)

[21:37] <PerlJam> My other daughter was born Oct. 19.  Oct is the 10th month, 1 + 9 == 10.   I was born Oct 28 ... etc.  :)

[21:37] <PerlJam> I have 10 fingers and 10 toes.

[21:37] <PerlJam> The coincidences are astounding!

[21:38] <moritz_> there 10 kinds of people: those who know binary, and 9 others!

[21:38] <masak> moritz_: *lol*

[21:38] *** Guest83463 left
[21:43] * Tene reminded of the law of fives.

[21:44] <Tene> I had trouble remembering my girlfriend's birthday, so I worked out a mneumonic in pi: month 3, day (14-1)/.5 

[21:45] <masak> Tene++

[21:45] <rindolf> Tene: can't you use an organizer?

[21:45] <rindolf> Tene: with alerts?

[21:45] <Tene> rindolf: that assumes I want to be organized

[21:46] <masak> I have the same problem with organizers.

[21:46] <rindolf> Tene: you can just use it to remember birthdays.

[21:46] <Tene> rindolf: I guess.  Easier to just work up a mneumonic.  There are other reasons to want to know a birthday than "Is it today?" or "Is it one week from today?" or whatever.

[21:48] *** HarryS left
[21:48] *** x3nU joined
[21:49] <tadzik> hah, get it 3 days earlier and you'll hit my birthday :)

[21:49] *** x3nU left
[21:50] <tadzik> and $birthday.split('.').sum.sum is 10 again!

[21:50] *** x3nU joined
[21:50] <tadzik> oh, one more split

[21:55] <sjohnson> Tene == smart cookie

[21:56] <masak> pmichaud_: <?after> may have been a hack in PGE, but at least there was an implementation. sometimes I miss it in nqp-rx. there's a place in Yapsi where I work around it, for example.

[21:57] *** patrickas left
[21:57] *** MayDaniel joined
[21:59] <Grimnir_> how do I make the number 31 come out as an ascii '1'?

[21:59] <Grimnir_> rakudo: 31.chr.say

[21:59] <p6eval> rakudo e6486e: OUTPUT«␤»

[21:59] <Grimnir_> it comes out as a two byte character, it seems

[21:59] <Tene> rakudo: 1.ord.say

[21:59] <p6eval> rakudo e6486e: OUTPUT«49␤»

[22:00] <Tene> rakudo say 0x31

[22:00] <Tene> rakudo: say 0x31

[22:00] <p6eval> rakudo e6486e: OUTPUT«49␤»

[22:00] <Tene> wrong base, Grimnir_ 

[22:00] <Tene> rakudo: 0x31.chr.say

[22:00] <p6eval> rakudo e6486e: OUTPUT«1␤»

[22:00] <Grimnir_> ah, of course. stupid...

[22:00] <Tene> :)

[22:00] <Tene> No, it's an easy mistake to make.

[22:01] <Grimnir_> and I knew that, that's the most tsupid about it

[22:01] <Tene> I just recognized it easily since I've made it so many times myself.

[22:01] <Grimnir_> :)

[22:01] <Grimnir_> well, thx

[22:01] <masak> this also works:

[22:02] <masak> rakudo: say :16(31).chr

[22:02] <p6eval> rakudo e6486e: OUTPUT«1␤»

[22:02] <Grimnir_> nice

[22:02] <masak> but it means the same.

[22:02] <masak> maybe I should have written :16<31>, because that number (even if it doesn't in this case) might contain hexits.

[22:05] <Grimnir_> perl6 is so nice

[22:05] <sjohnson> perl6!

[22:06] <Grimnir_> rakudo: my $content = "30 31 30 30 31 31 31 30"; for $content.split(" ") { :16($_).Numeric.chr.print }

[22:06] <p6eval> rakudo e6486e: OUTPUT«01001110»

[22:06] <masak> Grimnir_: see also .comb

[22:06] <Grimnir_> but comb takes one character at a time, right?

[22:06] *** TobiO[weta] joined
[22:07] <masak> rakudo: for "30 31 30 30 31 31 31 30".comb(/\S+/) { print :16($_).chr }

[22:07] <p6eval> rakudo e6486e: OUTPUT«01001110»

[22:07] <masak> Grimnir_: no, it can match zero or more characters.

[22:07] <masak> rakudo: for "30 31 30 30 31 31 31 30".words { print :16($_).chr }

[22:07] <p6eval> rakudo e6486e: OUTPUT«01001110»

[22:07] <Grimnir_> what's the difference between split and comb then?

[22:08] <Grimnir_> rakudo: my $content = "30 31 30 30 31 31 31 30"; :for $content.split(" ") { :16($_).chr.print }

[22:08] <p6eval> rakudo e6486e: OUTPUT«===SORRY!===␤Confused at line 22, near ":for $cont"␤»

[22:08] <masak> Grimnir_: split throws away the matched things, comb keeps them.

[22:08] <Grimnir_> rakudo: my $content = "30 31 30 30 31 31 31 30"; for $content.split(" ") { :16($_).chr.print }

[22:08] <p6eval> rakudo e6486e: OUTPUT«01001110»

[22:08] <Grimnir_> ah, of course

[22:08] <Grimnir_> nice one

[22:10] <masak> Grimnir_: the Perl 6 culture has a bit of a .comb bias.

[22:10] <masak> (because we like to think positively) :)

[22:10] <Grimnir_> hehe :)

[22:10] <Grimnir_> it's also nice

[22:10] <Grimnir_> it makes great one-liners

[22:11] <Grimnir_> when some of my friends start to go on a "write in base64 or binary" mode, I always find that I don't have a script for it, so I try to make it in a one-liner

[22:11] <Grimnir_> it's good practice

[22:12] <masak> Grimnir_: you reminded me of this post: http://strangelyconsistent.org/blog/the-genetic-code-oneliner-in-perl-6

[22:12] <Grimnir_> rakudo: my $dna = "ttaagg"; sub translate($dna) { "FFLLSSSSYY!!CC!WLLLLPPPPHHQQRRRRIIIMTTTTNNKKSSRRVVVVAAAADDEEGGGG".comb[map { :4($\_) }, $dna.trans("tcag" => "0123").comb(/.../)] }; say translate($dna)

[22:12] <p6eval> rakudo e6486e: OUTPUT«===SORRY!===␤Non-declarative sigil is missing its name at line 22, near "$\\_) }, $d"␤»

[22:13] <masak> hm, that's a superfluous \

[22:13] *** TobiO[weta] is now known as TobiO

[22:13] <Grimnir_> hmm... can't get it to work

[22:13] <masak> rakudo: my $dna = "ttaagg"; sub translate($dna) { "FFLLSSSSYY!!CC!WLLLLPPPPHHQQRRRRIIIMTTTTNNKKSSRRVVVVAAAADDEEGGGG".comb[map { :4($_) }, $dna.trans("tcag" => "0123").comb(/.../)] }; say translate($dna)

[22:14] <p6eval> rakudo e6486e: OUTPUT«LR␤»

[22:14] <masak> \o/

[22:14] <sjohnson> >.>

[22:14] <masak> I'll see if I can fix the blog post. hadn't noticed that before.

[22:14] *** rindolf left
[22:14] <masak> must be a conversion error.

[22:14] *** fhelmberger left
[22:16] *** MayDaniel left
[22:16] <Grimnir_> I think I'm missing something here. what's the point with it?

[22:17] <masak> I'll explain, but how much do you know about DNA and amino acids?

[22:17] <Grimnir_> not so much ;)

[22:17] <Grimnir_> very little

[22:17] <Grimnir_> I know the A, C, G, T stuff, but only extremely basic

[22:17] <masak> oh, good.

[22:18] <masak> that's the DNA>

[22:18] <masak> now, that's just digital information; it needs to get "translated" into a physical structure.

[22:18] *** sheepy joined
[22:18] <masak> the physical structure is protein, made of amino acids.

[22:18] *** sheepy left
[22:18] <masak> there's a machine in our cells that takes DNA, three bases at a time, does a hash lookup and produces an amino acid.

[22:19] <masak> it strings those together into a long chain, and folds the chain.

[22:19] <masak> what the &translate sub above is doing is simulate the conversion from DNA bases to amino acids.

[22:20] <masak> TimToady said TTA GGG. that translates to the amino acids L and R.

[22:20] <masak> each letter there is actually a small molecule fragment of some sort.

[22:21] <masak> notice how I used .comb(/.../) -- that's the part that chunks the DNA up into three bases.

[22:21] <masak> it's all very evocative of how the cell itself does it :)

[22:21] <Grimnir_> very nice  :)

[22:22] <masak> in a way, all life on Earth indirectly contains that string, "FFLLSSSSYY!!CC!WLLLLPPPPHHQQRRRRIIIMTTTTNNKKSSRRVVVVAAAADDEEGGGG", sometimes with minor variations.

[22:22] <Grimnir_> is that string enough?

[22:22] <masak> well, it's more of a lookup table.

[22:23] *** mavrc left
[22:23] <masak> but neither the string nor the table is actually represented in our bodies, of course.

[22:23] <masak> it's just there implicitly, at least as far as I know.

[22:23] <Grimnir_> of course

[22:23] <Grimnir_> so how did you make that string?

[22:24] <masak> I went to the Wikipedia article and typed down the entries of the table in some order.

[22:25] <masak> don't remember any more exactly how I figured it out which order was right.

[22:25] <masak> probably the structure of the table makes the order obvious-ish.

[22:26] <Grimnir_> :)

[22:27] *** kjeldahl left
[22:27] *** _kaare left
[22:29] *** masonkramer left
[22:29] *** masonkramer joined
[22:30] <masak> tchrist on p6l!

[22:30] <flussence> http://www.youtube.com/watch?v=Ym1ZA8IckB8

[22:30] <masak> and, fittingly, he writes far more than you ever wanted to know about Unicode properties! :P

[22:30] <flussence> whoops

[22:30] <flussence> wrong button, sorry

[22:31] <flussence> (wrong channel too)

[22:32] * diakopter gets curious

[22:33] <sjohnson> cute video

[22:33] <Grimnir_> heh, pretty innocent video

[22:33] <Grimnir_> I imagined something really incriminating :D

[22:35] <sorear> diakopter: are there any tos or other issues with me installing a httpd on dalek's vps?

[22:35] <diakopter> no

[22:35] <diakopter> feel free; nginx, lighttpd, apache, whatevs

[22:35] <diakopter> that new ultra perl one

[22:36] <diakopter> starman

[22:38] *** gbacon left
[22:41] *** amkrankruleuen left
[22:41] <sorear> what do you recommend

[22:42] <sorear> the only httpd I've ever used is apache2

[22:42] <sorear> but that seems overkill for "I need to handle POST to /dalek"

[22:42] <diakopter> heh

[22:43] <diakopter> I'd use http://danga.com/perlbal/ or starman for that

[22:44] <flussence> I prefer lighttpd over apache, haven't tried others though...

[22:46] * sorear looks up what PSGI is

[22:46] <diakopter> plackperl.org

[22:49] <diakopter> ^^ anyone who wants to get excited by accurate/well-written/hype-inducing blurbs, see here

[22:50] <dukeleto> diakopter: that looks like a very nice site

[22:51] <masak> plack++ (plack team)++

[22:51] *** KyleHa left
[22:53] <sorear> diakopter: reading this wall of blurbs makes me just want to install apache2 and put a 20-line script in /usr/lib/cgi-bin

[22:53] *** HarryS joined
[22:53] <sorear> I AM NOT WRITING FACEBOOK HERE

[22:53] <diakopter> hee

[22:53] *** stkowski_ joined
[22:54] <masak> whoa, all caps. chill.

[22:54] * diakopter forgets to take off the think-long-term $dayjob hat

[22:55] *** stkowski left
[22:55] *** stkowski_ is now known as stkowski

[22:58] *** hercynium left
[23:03] *** xinming left
[23:03] *** TobiO left
[23:05] <vxz> I heard that perl 6 will let me write Skynet as a one-liner.

[23:05] <diakopter> basically

[23:06] <masak> oh, we did that back in 2006 with Pugs. it should still be in the Mu repo somewhere.

[23:06] <masak> but it was two lines, I think. might be one line nowadays.

[23:06] <arnsholt> =D

[23:12] *** thundergnat joined
[23:14] *** vxz left
[23:17] *** ggoebel joined
[23:17] <thundergnat> Hi perl6

[23:18] <ggoebel> o/

[23:18] *** ggoebel left
[23:18] *** lidden left
[23:18] <thundergnat> ping masak

[23:18] <masak> pong thundergnat 

[23:19] <thundergnat> masak Hey I was looking at your druid repository and you have a few broken links in the README.

[23:20] *** lidden joined
[23:20] <thundergnat> extreaneous &gt; attached to the end.

[23:20] <masak> thanks; will check.

[23:20] <masak> thundergnat++

[23:20] *** whiteknight joined
[23:20] <masak> thundergnat: did you get the game running? :)

[23:20] <thundergnat> didn't try yet

[23:21] <thundergnat> that was on my list for this evening. :)

[23:21] <masak> do try; but try it from the ng-compat branch.

[23:21] *** vxz joined
[23:21] <masak> should be just     ufo && make && PERL6LIB=`pwd`/lib perl6 druid

[23:22] <masak> blog post! http://strangelyconsistent.org/blog/november-10-2010-why-dont-you-bottom-up

[23:22] <tadzik> or use mbuild :)

[23:22] <masak> whatever lifts your suitcase.

[23:23] <arnsholt> masak: My friend who lived in Spain at the time commented that the really scandalous part was the familiar adress

[23:24] <arnsholt> Apparently the "shut up" part wasn't that important =D

[23:24] <masak> arnsholt: I can imagine.

[23:24] <masak> arnsholt: a French teacher of mine said he came to Sweden and the first thing he saw was an advert "Have you changed your underwear today?"

[23:24] <masak> arnsholt: for him too, the scandalous part was "du".

[23:25] <arnsholt> Indeed

[23:26] <arnsholt> I still struggle with the whole T/V distinction in French

[23:26] <arnsholt> Never quite sure which is appropriate in a baffling number of contexts

[23:26] <masak> thundergnat: seems the README itself is fine, but there's a rendering bug in github.

[23:27] <masak> unless it's a feature, and I'm just a victim of it.

[23:28] <masak> thundergnat: links should be fine now. thanks again for reporting.

[23:29] *** jhuni joined
[23:29] <masak> jhuni! \o/

[23:31] <jhuni> masak: hi

[23:31] * jhuni is learning FASM

[23:32] *** lidden left
[23:32] <thundergnat> masak: no problem, it was pretty easy to see what the links SHOULD have been, they were just render wierd.

[23:33] <masak> nodnod

[23:33] <thundergnat> weird weird weird ... I ALWAYS spell that wrong... 

[23:33] <masak> there's a programming language called wierd :)

[23:34] *** lidden joined
[23:34] <masak> http://catseye.tc/projects/wierd/doc/wierdspec.txt

[23:38] *** wallberg left
[23:40] <thundergnat> masak: wow. just... wow. That looks to be up there with brain**** for "languages I DON'T want to use."

[23:40] <masak> that's part of what makes them esoteric, I guess.

[23:41] <masak> actually, you could very well consider wierd a brainfuck clone.

[23:42] <thundergnat> "People for the Ethical Treatment of Data Structures", snork.

[23:45] <thundergnat> On another note: on the perl6.org compiler page - http://perl6.org/compilers/ -, the last three links in the supplementals section are giving me 403 and 404s when I try to visit them.

[23:46] <thundergnat> Have they been moved to another location? that anyone knows of?

[23:46] <diakopter> yes, sec

[23:46] <thundergnat> I'll even volunteer to fix them if I know the new locations. 

[23:46] <masak> thundergnat++ # noticing broken links

[23:47] <masak> seems diakopter++ is on it.

[23:47] <diakopter> for the elf ones, I don't know exactly where those are (setting & lisp) but the elf & elfish links on the left column are valid/updated.

[23:48] <sorear> mildew/smop needs an overhaul before it's usable again

[23:49] <sorear> recent versions of gcc are a lot more memory hungry and want >4GB to compile the million-line intermediate files mildew spits out

[23:49] <thundergnat> Also, it may just be me, but it took me about 30 minutes to figure out that the link for http://proto.perl6.org  was the link to http://modules.perl6.org.

[23:49] *** wamba left
[23:50] <masak> sorear: why not just use an older version of gcc?

[23:50] <thundergnat> It may be worth having a dedicated link to "Here's some perl6 modules contributed by the community!"

[23:51] <masak> thundergnat: that's modules.perl6.org -- or am I misunderstanding what you just asked for?

[23:51] <diakopter> suggesting a link

[23:51] <thundergnat> Yes. But ther is NO link anywhere on perl6.org for modules.perl6.org

[23:52] <thundergnat> proto.perl6.org gets rewritten to modules,perl6.org.

[23:52] *** cdarroch left
[23:52] <masak> that link should probably be modules.perl6.org

[23:53] <masak> proto.perl6.org was an old, misguided name.

[23:53] <thundergnat> silly me I was trying to find the modules page and was just hovering over the links looking for it.

[23:53] <tadzik> I feel like bringing smoketests back to life

[23:53] *** telmich joined
[23:53] * masak , having blogged, decides to go to bed

[23:54] <masak> 'night!

[23:54] <tadzik> o/

[23:54] *** masak left
[23:54] <thundergnat> modules.perl6.org definitely exists. it just isn't obviously linked.

[23:54] <thundergnat> night masak (belatedly)

[23:58] *** justatheory left
[23:58] *** thundergnat left
