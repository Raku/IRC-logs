[00:00] <jnthn> sleep &

[00:00] *** flussence left
[00:01] *** flussence joined
[00:02] *** Fuad left
[00:11] *** mkramer1 joined
[00:11] *** [hudnix] joined
[00:11] *** ashleyde1 joined
[00:12] *** mkramer left
[00:12] *** hudnix left
[00:12] *** ashleydev left
[00:12] *** araujo joined
[00:16] *** xinming_ left
[00:27] *** zby_home joined
[00:32] *** sftp left
[00:46] *** zby_home left
[00:46] *** QinGW joined
[00:53] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_lookup_tablet

[00:55] *** risou left
[01:11] <dalek> 6model: 40a0b88 | diakopter++ | dotnet/compiler/ (3 files):

[01:11] <dalek> 6model: [dotnet] tons of codegen api refactoring/cleanup.  for generation of efficient code in the regex engine:

[01:11] <dalek> 6model: implemented generation of native bool logical operation/comparison and native int bitwise comparison operators:

[01:11] <dalek> 6model: NOT, AND, OR, XOR, BAND, BOR, BXOR, and short-circuiting OR and AND.

[01:11] <dalek> 6model: More porting of the ginormous regex prologue (ported from Compiler-Regex.pir)

[01:11] <dalek> 6model: review: https://github.com/jnthn/6model/commit/40a0b881c6

[01:12] *** ashleyde1 is now known as ashleydev

[01:14] *** ch3ck joined
[01:16] <dalek> 6model: 7f92cdc | diakopter++ | dotnet/compiler/PAST2DNSTCompiler.pm:

[01:16] <dalek> 6model: [dotnet] remove debug/testing code.. (oops, free karma) diakopter--

[01:16] <dalek> 6model: review: https://github.com/jnthn/6model/commit/7f92cdcdf4

[01:23] *** __david__ left
[01:47] *** Holy_Cow joined
[01:51] *** bluescreen joined
[01:51] *** bluescreen is now known as Guest30561

[02:09] *** redicaps joined
[02:10] *** envi joined
[02:20] *** felipe left
[02:29] *** redicaps left
[02:35] *** ch3ck3r joined
[02:39] *** ch3ck left
[02:46] *** _twitch joined
[02:56] *** kanishka joined
[02:59] *** perigrin left
[02:59] *** edenc left
[02:59] *** perigrin joined
[03:00] *** edenc joined
[03:00] *** Holy_Cow left
[03:03] *** f00li5h left
[03:10] *** whiteknight left
[03:18] *** f00li5h joined
[03:28] *** felipe joined
[03:38] *** QinGW left
[03:38] *** QinGW joined
[03:39] *** QinGW left
[03:54] *** kanishka left
[04:05] *** Guest30561 left
[04:07] *** _twitch left
[04:09] *** satyavvd joined
[04:23] *** _twitch joined
[04:28] *** _twitch left
[04:33] *** _twitch joined
[04:38] *** zibri left
[04:46] *** zibri joined
[04:50] *** _twitch left
[04:52] *** simcop2387-lap left
[04:53] *** PZt left
[04:56] *** PZt joined
[04:57] *** nymacro joined
[04:58] *** QinGW joined
[05:08] *** simcop2387 joined
[05:09] *** `26 joined
[05:15] *** am0c left
[05:18] *** zibri left
[05:21] *** kanishka joined
[05:22] *** zibri joined
[05:32] *** frew_ joined
[05:39] *** am0c^ joined
[05:44] *** redicaps joined
[06:00] *** sftp joined
[06:04] *** yahooooo left
[06:05] *** _kaare joined
[06:05] *** yahooooo joined
[06:07] *** sftp left
[06:11] *** Patterner left
[06:11] *** Psyche^ joined
[06:11] *** Psyche^ is now known as Patterner

[06:20] *** yves_ joined
[06:31] *** jhuni joined
[06:43] *** kanishka left
[06:45] *** masak joined
[06:45] <masak> morning, #perl6

[06:47] <tadzik> hey masak

[06:47] <tadzik> good to see a friendly soul

[06:48] <masak> I... fell asleep before November blogging yesterday. seems I needed to catch up on sleep a bit.

[06:48] <masak> I'll make the best of it and blog a bit now.

[06:48] <tadzik> :)

[06:51] <tadzik> neutro wasn't building for Star? crap

[06:53] *** wtw joined
[06:56] <tadzik> what are star modules built with? ufo?

[07:01] <masak> think so.

[07:01] <tadzik> I thought it works well for bin/ only modules

[07:02] <sorear> good * #perl6!

[07:03] <moritz_> good mornin'

[07:05] <sorear> TimToady: Why does STD use temp $*STUB = ... instead of my $stub = ... ?

[07:05] <lue> HP&TMoR is a great book!

[07:07] <masak> Haskell is more easy to pick up after Perl 6. Haskell makes one grateful for certain things in Perl 6. http://comichunter.net/nowhere/opinions/perl6haskell.html

[07:08] *** frew_ left
[07:12] <lue> .oO(I completely forgot about the timey-wimey that was briefly introduced in Harry Potter)

[07:16] <masak> lue: how's Pod going?

[07:17] <masak> Greenpea, I mean.

[07:22] *** justatheory left
[07:23] <lue> Good. Although I already spy a refactor when I want blocks-in-blocks working, and I haven't created one test :/

[07:26] <lue> (I can't wait for that House style epiphany)

[07:28] *** am0c joined
[07:28] <masak> lue: I'd like you to meet this idea. lue, red-green-refactor. red-green-refactor, lue. http://agileinaflash.blogspot.com/2009/02/red-green-refactor.html

[07:30] <masak> lue: TDD has been among the most revolutionary ideas as I've learned to code better in the past few years. it keeps informing the way I approach a coding task.

[07:34] <lue> If I understood correctly, the process is: write tests -> fail tests -> write code -> pass tests -> refactor (change/add/remove code, moar tests, etc.) -> fail tests ...

[07:34] <masak> sounds about right.

[07:35] <masak> and they embody that in the three-step cycle red, green, refactor.

[07:36] *** am0c^ left
[07:37] <lue> hm, I feel temporarily ignoring the fact I've written any code is a Very Good Idea™. It also helps that after all of the interesting errors I talked about were fixed, I'm "bored" and can't figure out what to do next.

[07:38] <lue> This could be the reason why just about every coding project I've ever started is unfinished!!! O.o  [ thank you masak, I knew a House-style epiphany would come! ]

[07:39] <masak> my only remaining quibble with the idea of TDD is that sometimes I don't want to switch contexts between writing tests and writing code. so sometimes I cheat a bit and write lots of tests up front. it spoils the idea a bit, but I must confess it sometimes feels more "right".

[07:40] <masak> lue: finishing things is hard. however, I find my success rate increases if there are people downstream using the thing. that seems to be the biggest thing determining whether programming projects I start get completed.

[07:41] * sorear needs to find downstream users

[07:42] <dalek> niecza: 2390300 | sorear++ | lib/SAFE.setting:

[07:42] <dalek> niecza: Fix build errors

[07:42] <dalek> niecza: review: https://github.com/sorear/niecza/commit/239030061e

[07:43] <masak> sorear: downstream users were the success of Pugs and Rakudo. I believe a little implementation like niecza could really soar given a few dedicated downstream users, too.

[07:48] *** dual left
[07:48] <sorear> masak: Who used Pugs?

[07:49] *** wamba joined
[07:50] <masak> sorear: I did, and hundreds of others.

[08:03] *** palik joined
[08:04] *** Holy_Cow joined
[08:04] *** Holy_Cow left
[08:10] <dalek> niecza: 34db8bc | sorear++ | src/Optimizer/Simplifier.pm:

[08:10] <dalek> niecza: Implement optimized code for %h<foo>:exists and :delete

[08:10] <dalek> niecza: review: https://github.com/sorear/niecza/commit/34db8bcc7e

[08:23] <lue> Wow, I've been having many midnights during my vacation. It's fun though, I wish I could do it more often :)

[08:25] *** araujo left
[08:25] <sorear> lue: when I was your age, I thought the same thing.

[08:25] <sorear> now I'm 20 and I cannot fall asleep any earlier than 3AM

[08:26] <sorear> it's like I'm living on Melbourne time ... and I need to take classes in San Diego

[08:26] <lue> I'll be sure to remember that.

[08:31] <masak> blog post! I'm 29, and 

[08:31] <masak> blog post! http://strangelyconsistent.org/blog/november-24-1010-the-guilty-hiding-among-the-innocent

[08:31] <masak> that unfinished phrase was part of "I'm 29, and my sleep isn't describably by a simple rule anymore :/"

[08:31] <masak> s/bly/ble/

[08:32] <masak> but hopefully it'll get better now that I've turned it right to get my early mornings back.

[08:32] *** EXABTOPN joined
[08:37] * sorear wonders if that nick is trying to be cyrillic

[08:38] <masak> what would 5 be? not to mention T?

[08:40] *** Woodi left
[08:40] <lue> masak: about your blog post, I think you meant obligations instead of onligations (first paragraph after history bit)

[08:40] *** Woodi joined
[08:41] <masak> lue: thank you. lue++. fixing now.

[08:41] <masak> (maybe "onligations" are an onerous kind of obligations?) :)

[08:46] <lue> I wonder if onligations qualify as a malamanteau...

[08:46] <masak> fixed. new, better URL: http://strangelyconsistent.org/blog/november-24-2010-the-guilty-hiding-among-the-innocent

[08:47] <lue> I'll have fun with tests tomorrow! 'night o/

[08:51] <masak> night, lue.

[09:03] <Infinoid> That's a little odd

[09:03] <Infinoid> t/00-parrot/07-op-string.t       (Wstat: 11 Tests: 12 Failed: 0)

[09:03] <Infinoid>   Non-zero wait status: 11

[09:03] <Infinoid>   Parse errors: Bad plan.  You planned 18 tests but ran 12.

[09:03] <Infinoid> but I can't reproduce it

[09:04] <moritz_> Infinoid: that's the parrot GC going wild

[09:05] *** timbunce joined
[09:07] <Infinoid> sounds painful

[09:08] <moritz_> http://trac.parrot.org/parrot/ticket/1871

[09:08] <Infinoid> Thanks

[09:12] *** Woodi left
[09:12] <sorear> 11?  not 137?

[09:17] *** masonkramer left
[09:19] *** Woodi joined
[09:26] *** dakkar joined
[09:28] <Tene> masak: Heh; I wondered if that might be the case (re: blog post)

[09:35] *** Woodi left
[09:35] *** Woodi joined
[09:40] <masak> Tene: I should've suspected something, too.

[09:40] <masak> double-checking sure would've helped in that instance.

[09:42] *** satyavvd left
[09:42] <Tene> I considered asking you, but then I thought "Nah, I'm certain he would have checked that.  It wouldn't be worth asking."

[09:43] <masak> Tene: in other words, both of us overestimated me yesterday. :)

[09:44] <Tene> :)

[09:45] <masak> diakopter: do I understand correctly that one of your latest commits contains an optimization turning /foo/ into .index('foo')? nice.

[09:54] *** tzhs joined
[10:01] *** Woodi left
[10:01] *** Woodi joined
[10:06] <jnthn> o/

[10:08] <jnthn> diakopter++ # mad hacking

[10:08] <masak> jnthn! \o/

[10:08] * sorear wants love

[10:09] <dalek> niecza: ccbb9b8 | sorear++ | / (4 files):

[10:09] <dalek> niecza: Store contextuals in lexical arrays

[10:09] <dalek> niecza: review: https://github.com/sorear/niecza/commit/ccbb9b845b

[10:09] <masak> sorear: ♥

[10:09] <moritz_> hugme: hug sorear 

[10:09] * hugme hugs sorear

[10:19] *** xinming joined
[10:20] <frettled> hugme: hug sorear again

[10:20] * hugme hugs sorear

[10:22] <masak> hugme: hug sorear and blush

[10:22] * hugme hugs sorear

[10:24] <jnthn> I guess hugme only blushes spontaneously.

[10:24] <masak> just like people! :)

[10:24] *** masak left
[10:28] *** jhuni left
[10:37] *** lambdabot joined
[10:38] *** HarryS left
[10:43] *** HarryS joined
[10:52] *** scottp joined
[10:52] *** scottp left
[10:58] *** araujo joined
[11:00] *** gimix left
[11:07] *** QinGW left
[11:13] *** satyavvd joined
[12:03] *** satyavvd left
[12:07] *** bluescreen joined
[12:08] *** bluescreen is now known as Guest64114

[12:16] <flussence> whoa, something knocked half an hour off my nightly spectest run

[12:17] <flussence> oh, probably the 45 new failures.

[12:22] *** Fuad joined
[12:22] <Fuad> Hello

[12:22] *** daxim joined
[12:25] *** ilogger2 joined
[12:25] *** ChanServ sets mode: +v ilogger2

[12:29] *** orafu joined
[12:32] <Teratogen> is there a CPAN for Perl 6?

[12:33] <jnthn> Teratogen: Not as such but see http://modules.perl6.org/ 

[12:35] *** masak joined
[12:53] <ch3ck3r> hi masak \o

[12:54] <masak> o/

[13:11] *** whiteknight joined
[13:11] *** broquaint joined
[13:15] *** takadonet joined
[13:16] *** nymacro joined
[13:19] *** MayDaniel joined
[13:19] *** nadim joined
[13:25] *** Psyche^ joined
[13:25] *** sftp joined
[13:25] *** Psyche^ is now known as Patterner

[13:31] *** timbunce joined
[13:38] *** MayDaniel left
[13:52] *** alc joined
[13:55] *** broquaint left
[13:57] *** broquaint joined
[14:12] <tadzik> masak: happy birthday is today?

[14:12] <masak> tadzik: I'm sorry?

[14:12] * moritz_ thought today was sad turkey day

[14:13] <tadzik> masak | blog post! I'm 29

[14:13] <masak> tadzik: that was a mis-paste.

[14:13] <tadzik> oh, ok

[14:13] <jnthn> It confused me too :)

[14:13] <masak> sorry for the confusion.

[14:13] <tadzik> does anyone have an idea why didn't neutro build for star?

[14:13] <jnthn> "How many birthdays does this guy get a year?"

[14:14] <moritz_> tadzik: how did it not build?

[14:14] <masak> jnthn: no more than two, generally.

[14:14] <tadzik> moritz_: pmichaud commitmessaged so

[14:14] <masak> jnthn: one regular birthday, and one "rogue" birthday.

[14:15] <tadzik> rogue? Like on February 29th?

[14:16] <masak> February 29th is always worth celebrating.

[14:16] <moritz_> tadzik: then ask pmichaud 

[14:16] <masak> I mean, it's an entire extra day.

[14:16] <tadzik> msg pmichaud how didn't neutro build for Star, what was the reason?

[14:17] <moritz_> ... and I don't get paid for it :-)

[14:17] <masak> tadzik: ENOPURL

[14:18] <moritz_> phenny exists

[14:19] <tadzik> phenny: tell pmichaud how didn't neutro build for Star, what was the reason?

[14:19] <phenny> tadzik: I'll pass that on when pmichaud is around.

[14:20] <tadzik> thanks masak

[14:24] *** Lorn joined
[14:38] *** MindosCheng joined
[15:01] <masak> only one comment on the ycombinator thread so far, but a positive one: http://news.ycombinator.com/item?id=1939968

[15:10] <MindosCheng> interesting article.

[15:15] *** buu left
[15:18] *** XaRDaX joined
[15:18] *** MayDaniel joined
[15:31] *** whiteknight left
[15:53] *** fhelmberger joined
[15:55] *** MayDaniel left
[15:56] <masak> a few failures in the spectests.

[15:56] <masak> "bad plan" in t/spec/S02-literals/quoting-unicode.t -- planned 72 but ran 55.

[15:57] *** masonkramer joined
[15:57] *** MayDaniel joined
[15:57] <masak> non-zero wait status in t/spec/S12-introspection/methods.t and t/spec/S32-num/exp.t

[15:59] <moritz_> masak: if you repeat your spectest run, I bet other tests will fail instead

[16:00] <masak> moritz_: ah. known Parrot bug?

[16:02] *** risou joined
[16:03] <moritz_> masak: yes

[16:03] <moritz_> known and reported

[16:03] <masak> moritz_++

[16:03] *** rhr joined
[16:11] *** nymacro left
[16:17] *** masak` joined
[16:19] *** masak left
[16:19] *** masak` is now known as masak

[16:28] *** MayDaniel left
[16:35] *** rgrau_ joined
[16:52] *** mila__ joined
[17:12] *** risou_ joined
[17:13] *** risou left
[17:20] *** Guest64114 joined
[17:20] *** justatheory joined
[17:21] *** alc left
[17:33] *** buu joined
[17:35] *** lichtkind joined
[17:35] *** buubot joined
[17:36] <lichtkind> karma Herbert Breunung

[17:36] <aloha> Herbert Breunung has karma of 69.

[17:36] <lichtkind> aloha: thanks

[17:39] <lichtkind> jnthn: thanks

[17:40] *** buubot left
[17:41] <takadonet> lichtkind: good job man

[17:42] <lichtkind> takadonet: thanks but what you mean especially?

[17:42] *** buubot joined
[17:42] <takadonet> lichtkind: you are doing the perl 6 tablets stuff right?

[17:43] <lichtkind> yes

[17:43] <lichtkind> but its still in the beginning

[17:43] <lichtkind> but good to see someone reads my blog :)

[17:45] <lichtkind> takadonet: want to participate?

[17:46] *** buubot left
[17:47] <takadonet> lichtkind: writing is not my strong suit.  However I do read the blog and use it all the time

[17:48] <lichtkind> takadonet: also the kephra and soterik stuff i wrote a while ago? :)

[17:48] <takadonet> lichtkind: It makes it easier when I'm porting p5 module to p6

[17:48] <takadonet> lichtkind: kephra? soterik?

[17:48] <lichtkind> i ment esoteric

[17:49] <lichtkind> kephra the perl editor , my other big project

[17:51] <takadonet> urls?

[17:52] <lichtkind> http://kephra.sourceforge.net/site/en/home_news.shtml

[17:57] *** buubot joined
[17:57] *** buubot left
[17:58] <takadonet> nice

[17:58] <takadonet> no i have not seen it before

[18:00] *** buubot joined
[18:00] <lichtkind> takadonet: its nice and stable

[18:02] *** M_o_C joined
[18:03] *** jummy joined
[18:08] <diakopter> masak: to answer your question, not precisely; each literal in a regex pattern compiles to that

[18:08] <masak> oh; even better.

[18:08] <diakopter> (no smartness/optimization is going on yet)

[18:11] *** risou joined
[18:13] *** risou_ left
[18:13] *** jummy left
[18:16] <diakopter> nqpnet: say("zzzzabracadabra"~~/zzzzabra/)

[18:16] <p6eval> nqpnet: OUTPUT«zzzzabra␤»

[18:16] <diakopter> nqpnet: say("zzzzabracadabra"~~/kkkzzzzabra/)

[18:16] <p6eval> nqpnet: OUTPUT«␤»

[18:17] <diakopter> nqp: say("zzzzabracadabra"~~/kkkzzzzabra/)

[18:17] <p6eval> nqp: OUTPUT«␤»

[18:17] <diakopter> nqp: say("zzzzabracadabra"~~/zzzzabra/)

[18:17] <p6eval> nqp: OUTPUT«zzzzabra␤»

[18:24] *** isBEKaml joined
[18:32] *** Chillance joined
[18:33] <tadzik> ~~

[18:36] <masak> .ACCEPT

[18:36] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_variable_tablet

[18:36] <diakopter> S

[18:39] <masak> oh, indeed.

[18:39] <isBEKaml> Perl6 tablets? (Sorry, I haven't been here for some time. Btw, hi  folks!)

[18:39] <masak> isBEKaml! \o/

[18:40] <isBEKaml> masak: How's things? :)

[18:40] * masak is happy to see so many twitterpeople RT-ing http://twitter.com/rakudoperl/status/7850505862647808

[18:40] <masak> isBEKaml: things are good. almost done with November :)

[18:40] <tadzik> oh hi isBEKaml 

[18:40] <masak> (the month)

[18:40] <tadzik> seen alexm?

[18:40] <aloha> Sorry, I haven't seen alexm.

[18:40] <masak> seen sense

[18:40] <aloha> Sorry, I haven't seen sense.

[18:40] * masak titters

[18:40] <tadzik> seen the light?

[18:40] <aloha> Sorry, I haven't seen the light.

[18:40] <diakopter> hee

[18:41] <isBEKaml> tadzik: :)

[18:41] <isBEKaml> aloha: aloha

[18:41] <isBEKaml> aloha

[18:41] <masak> seen you in ages?

[18:41] <aloha> Sorry, I haven't seen you in ages.

[18:41] <isBEKaml> oh, it isn't that intelligent to answer back. :|

[18:41] <isBEKaml> seen the WHAT?

[18:41] <aloha> Sorry, I haven't seen the WHAT.

[18:42] <tadzik> alexm was giving my R* presentation in July, and I haven't spoken to him ever since

[18:42] <isBEKaml> masak: so RT stands for re-tweet. unTweeTer here. 

[18:43] <masak> isBEKaml: oh, yes. sorry. :)

[18:43] <masak> it's far too easy to soak up ingroup lingo.

[18:43] <isBEKaml> so it is. When in Rome.... 

[18:43] <isBEKaml> :)

[18:43] <masak> seen the Romans in a while?

[18:43] <aloha> Sorry, I haven't seen the Romans in a while.

[18:44] <isBEKaml> seen Pompeii?

[18:44] <aloha> Sorry, I haven't seen Pompeii.

[18:44] <isBEKaml> wunderbar!

[18:44] <masak> aloha: you need to travel more.

[18:44] <diakopter> seen my toes in ages?

[18:44] <isBEKaml> seen aloha

[18:44] <aloha> Sorry, I haven't seen my toes in ages.

[18:44] <aloha> aloha was last seen in #parrot 8 days 14 hours ago joining the channel.

[18:44] <masak> huh? aloha hasn't seen herself in 8 days?

[18:44] <isBEKaml> ejjactly

[18:45] <masak> aloha: you're a strange little bot.

[18:45] <isBEKaml> she never answers back too. 

[18:45] <diakopter> seen the inside of my eyelids ever?

[18:45] <aloha> Sorry, I haven't seen the inside of my eyelids ever.

[18:47] *** dual joined
[18:49] <isBEKaml> the HN post about haskell and perl6 strikes a good chord. Haskell certainly feels nice to program in, especially after looking at Perl6. :)

[18:50] <isBEKaml> I have been going over haskell tutorials the past couple of weeks. 

[18:53] <isBEKaml> The odd thing here is that, I didn't quite think of Perl6 as a functional programming language. It just made more sense. 

[18:55] <isBEKaml> Any haskellers here? If so, it'd be good to see some blog post comparing haskell and perl6 (even as it's too early to do that) :)

[18:56] <masak> too early? it's eight o'clock in the evening.

[18:56] <isBEKaml> and it's half past midnight. ;)

[18:56] <isBEKaml> (here)

[18:57] <isBEKaml> masak: you programmed in haskell?

[18:58] <masak> a bit.

[18:58] <masak> not nearly enough.

[18:58] <isBEKaml> job or fun?

[18:58] <masak> fun.

[18:59] <isBEKaml> nice. 

[19:00] <masak> I felt Haskell to be very mathematical in nature. and I mean that in a nice way.

[19:00] <edenc> haskell is awesome

[19:00] <masak> refactoring felt like rewriting math formulas in better ways.

[19:01] <isBEKaml> well, yeah. It's like those math function stuff from high school.

[19:02] <edenc> haha, high school?

[19:02] <isBEKaml> well, would elementary school be right? :D

[19:02] <edenc> there's a lot more than high school math in haskell

[19:03] <edenc> but yeah, it's nice to be able to write the theoretical formulae directly

[19:04] <edenc> straight from the textbook

[19:04] <edenc> no imperative munging

[19:04] <isBEKaml> no disagreement here. your last point was what I meant. 

[19:04] <edenc> isBEKaml: you know that operators in haskell are just functions right?

[19:05] <isBEKaml> yes. 

[19:06] <tadzik> familiar

[19:06] <isBEKaml> edenc: more than that, I liked how the type specification in functions is just more straightforward.

[19:07] <isBEKaml> and, that functions can take only one param at a time. It's basically chained all the way for the rest of the params. 

[19:07] <edenc> well yes, it uses the same notation as set theory/functions

[19:07] <isBEKaml> set theory was so long ago. I don't remember them at all. :/

[19:12] *** risou left
[19:12] *** risou joined
[19:21] <TimToady> <sorear> TimToady: Why does STD use temp $*STUB = ... instead of my $stub = ... ?

[19:22] <TimToady> probably because STD warns on variables that aren't used

[19:24] <diakopter> ajoy

[19:24] *** fhelmberger left
[19:26] <frettled> pmichaud++ - congrats on getting 2010.11 out the door!

[19:28] *** `26 joined
[19:28] *** `26 left
[19:28] *** `26 joined
[19:29] *** rgrau_ left
[19:30] *** yahooooo joined
[19:31] *** rgrau_ joined
[19:38] *** MayDaniel joined
[19:39] *** colomon joined
[19:46] <masak> rakudo: say "this sentence no verb".trans( / \s+ / => " " )

[19:46] <p6eval> rakudo : OUTPUT«this senten e n  ver ␤»

[19:46] <masak> :(

[19:46] * masak submits rakudobug

[19:46] <colomon> I thought you were fixing that?  ;)

[19:47] <masak> yeah. me too.

[19:47] <TimToady> masak++ is astrobugging

[19:47] <isBEKaml> that takes out a cob? ;)

[19:48] <masak> TimToady: oh, I wish I had the secret backing of a powerful organization :)

[19:48] <masak> I'm submitting the ticket, and then I'm *fixing* it.

[19:49] <masak> not least because I either caused it myself or didn't make it go away.

[19:49] <TimToady> bug-driven design

[19:50] <masak> that makes it sound better than it actually is... :)

[19:50] <TimToady> cobs are bugs too

[19:52] * masak thought they were birds

[19:52] <TimToady> though I daresay that most English speakers don't know cob === spider even while they use the term "cobwebs"

[19:52] <masak> oh!

[19:53] <isBEKaml> :)

[19:53] <TimToady> Tolkien of course knew this, which is why Bilbo uses Attercop! as a term of derision to the big spiders

[19:53] * moritz_ is an unEnglish speaker

[19:54] <TimToady> I always associated that dialect with Transylvania...

[19:54] <colomon> Attercop versus Attercob?

[19:54] * colomon has not read the Hobbit in 25 years...

[19:55] <moritz_> Tolkien was also from Frankonia, where the distinction between b and p is severly blurred :-)

[19:55] <TimToady> easy to lose voicing on word-final voiced consonants in indo-european

[19:55] <flussence> waitaminute...

[19:55] <flussence> rakudo: say 'hi';

[19:55] <p6eval> rakudo : OUTPUT«hi␤»

[19:55] <flussence> where's the version number?!

[19:56] <moritz_> gone with the wind, it seems

[19:56] <TimToady> maybe we need to unwind it

[19:56] <colomon> masak++ # usually I just fix it without submitting.   :)

[19:57] <TimToady> usually I just leave breadcrumbs for masak++ to pick up and submit  :)

[19:57] <masak> colomon: consider it a safety net. maybe I'll be hit by a meteor between reporting and fixing it. :)

[19:57] <masak> TimToady++ # you're the witch to my Hans and Gretl

[19:57] <TimToady> you're much more likely to die from an asteroid than from a meteor

[19:58] *** MayDaniel left
[19:58] <colomon> yes, but if he's hit by an asteroid, probably the rest of us won't be worried about fixing the bug

[19:58] <isBEKaml> cos that's a cursed bug? :D

[20:02] <colomon> cos we'll be wondering where Sweden went...

[20:02] * TimToady wonders how fast we could build nuclear plants if we decided we needed them Right Now, If Not Sooner

[20:04] <sorear> good * #perl6

[20:04] <TimToady> perhaps we shouldn't place all our bets on solar

[20:07] <sjohnson> Right Now(tm)

[20:08] <masak> the saying "we are stardust" could as well be "we are nuclear waste".

[20:10] <masak> blog post! http://strangelyconsistent.org/blog/november-25-2010-the-truth-emerges

[20:10] <sorear> isBEKaml: I know Haskell well

[20:11] *** wallberg joined
[20:11] <isBEKaml> sorear: then a blog post? :)

[20:11] <masak> sleep &

[20:11] *** masak left
[20:12] *** XaRDaX left
[20:13] *** XaRDaX joined
[20:16] *** isBEKaml left
[20:17] *** M_o_C left
[20:19] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_variable_tablet

[20:21] <sorear> IIUC there are a fair number of nuclear plants sitting idle due to environmental panic

[20:24] <sorear> interestingly, 80-90% of the *calls* to my LTM engine come from |, but 98% of the *time* is spent from protoregexes

[20:33] <TimToady> that probably makes sense, given | tends to be for low-level decisions, while protos are more for high-level decisions

[20:33] <sorear> I suspect the issue is superlinearity somewhere, and the profile being skewed by the 7000+ node 'term' NFA

[20:33] <sorear> hmm

[20:34] <TimToady> not trying to discourage you from optimizing protos, of course  :)

[20:35] <TimToady> are you counting the setup of lexers as part of the 98%?

[20:36] <sorear> yes, but if I didn't it would still be like 97%

[20:37] <sorear> 265784 time units for the main protoregex entry point, 48742 for GetProtoregexLexer

[20:37] <sorear> the Mono profiler only reports cumulative inclusive times, which is... interesting

[20:38] <TimToady> maybe small lexers are easier to keep in CPU caches at various levels

[20:39] *** Guest64114 left
[20:39] <TimToady> and high-level things like term still have to recurse down through many levels despite knowing their "fate" in advance

[20:40] <TimToady> or are you doing those with continuations these days?

[20:40] <TimToady> in which case it might be continuation overhead

[20:42] <TimToady> maybe we need to port NYTProf to that VM :)

[20:42] <sorear> I got rid of fates because they seem to be a pessimization now

[20:43] <sorear> [a | b | c] [d | e | f] generates a much bigger NFA with fates enabled

[20:43] * timbunce was summoned by a magic word

[20:43] <sorear> because the tail has to be duplicated

[20:43] *** Guest64114 joined
[20:43] *** kthakore joined
[20:43] <TimToady> then you're redoing a lot of work

[20:43] <kthakore> hello

[20:43] <sorear> also I think I've found my problem

[20:43] <TimToady> on recursion, not on seqs

[20:43] <kthakore> I can't seem to get a successfull build of  rakudo on linux

[20:44] <sorear> kthakore: RAM?

[20:44] <kthakore> sorear: not a problem I have 8GB. May I mention my problem first?

[20:44] <sorear> You didn't

[20:44] <sorear> of course

[20:45] <kthakore> PackFile_unpack: This Parrot cannot read bytecode files with version 9.2.

[20:45] <kthakore> I get that when I run ./perl6

[20:45] <sorear> you have stale files somewhere

[20:45] <kthakore> aww ...

[20:45] <sorear> rm -rf parrot_install parrot and try again

[20:45] <kthakore> ok

[20:45] <tadzik> also consider make realclean in parrot dir

[20:45] <kthakore> sorear: thanks .. sorry if I seemed rude. You are just really fast.

[20:46] <tadzik> oh, there is also a parrot after rm. I try to avoid this, Parrot repo is HUGE

[20:46] <sorear> TimToady: in cgexp:name [part of the Niecza syntax extensions], we have { <-[ ' " ( ) { } \[ \] \s ]>+ }

[20:47] <sorear> TimToady: this desugars to [ <![ . . . ]> . ]+, which generates LTM of .+

[20:47] <sorear> this causes quadratic behavior because .+ has to be matched to the end of the file

[20:49] <TimToady> yes, I think the LTMer must be aware of negated character classes more than the desugar would suggest

[20:49] <TimToady> sets of characters are the proper domain of LTM, so you can't afford to hide that construct behind a desugar

[20:53] *** Guest64114 left
[20:55] *** takadonet left
[20:58] *** wallberg left
[21:07] <TimToady> and re [a | b | c] [d | e | f], that seems like a really good place for a :: to stop LTM explosion rather than an excuse to redo a lot of work in submatches

[21:09] *** Guest64114 joined
[21:09] <TimToady> 'course, as LTM gets faster, that becomes less of an issue, I'll grant

[21:11] <TimToady> I'll also grant that an adequate profiler beats intuition most any day

[21:11] <TimToady> (the jury still being out on whether your profiler is adequate)

[21:12] *** florz joined
[21:17] <sorear> timbunce: How would you react to someone trying to do a 3rd party nytprof.out emitter?

[21:17] *** masonkramer left
[21:18] *** masonkramer joined
[21:18] <timbunce> sorear: I'd be delighted. That's one reason why Nicholas and I worked on factoring the writing code into FileHandle.xs

[21:19] <TimToady> some yaks need more shaving than others...

[21:21] *** jasonmay joined
[21:21] <timbunce> sorear: Ideally, though, the standard format ought to be an sqlite db file. (I almost went crazy trying to 'edit' the internal data structure in the reporting code to implement eval merging.) I figure we'll end up with a data file to slqite converter at some point then the reporting tools would work from the db.

[21:23] <sorear> hmm, I haven't seen FileHandle.xs, I guess it's been too long since I read through this :)

[21:23] <tadzik> where are contextual vars speced?

[21:24] <moritz_> probably S02 or S04

[21:25] <sorear> S02:2825

[21:25] <timbunce> sorear: FileHandle.xs would need refactoring to split out the raw C parts from the perl5 dependencies so you'd end up with a libnytprofwrite.so you could link into other things.

[21:26] <dalek> niecza: 85bf01e | sorear++ | src/Niecza/Actions.pm:

[21:26] <dalek> niecza: Expose complex character classes to LTM

[21:26] <dalek> niecza: review: https://github.com/sorear/niecza/commit/85bf01e019

[21:26] *** XaRDaX left
[21:27] <tadzik> thank you sorear 

[21:28] <sorear> timbunce: would be a little tricky since I'm not working in C

[21:29] <timbunce> sorear: ah, forgive my assumption. What's the use-case you're aiming for?

[21:30] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_variable_tablet

[21:30] <sorear> timbunce: I'm pondering a real Perl6-level profiler, and I would like to reuse somebody's pretty output generator

[21:33] <timbunce> sorear: Probably not tooo hard. You'd be at the mercy of file format changes, but they don't happen often.

[21:35] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_lookup_tablet

[21:42] <sorear> took 12 seconds off the niecza SAFE.setting parsing test

[21:45] <TimToady> WSJ headline today: "Shunned Profiling Technology on the Verge of Comeback"

[21:46] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_variable_tablet

[21:54] <sorear> TimToady: which?

[21:55] *** Guest64114 left
[21:56] <sorear> Lexer::Run now takes a much more reasonable 3699 time units, not ~240000

[21:56] *** timbunce_ joined
[21:57] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_index_tablet

[21:58] *** timbunce left
[21:58] *** timbunce_ is now known as timbunce

[22:07] <dalek> niecza: 914f55d | sorear++ | lib/Kernel.cs:

[22:07] <dalek> niecza: Str.Str was accidentally omitted for optimization

[22:07] <dalek> niecza: review: https://github.com/sorear/niecza/commit/914f55df16

[22:19] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_language_design_tablet

[22:19] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_history_tablet

[22:19] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_intro_tablet

[22:19] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_variable_tablet

[22:19] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_index_tablet

[22:20] <lichtkind> sorry reformat necesary stops soon

[22:23] <lue> Is there some sort of reference to the Test module used in all the testing in perl6 stuff (roast at least)? I can learn enough from looking at other tests, but it'd be nice to have some sort of reference in front of me.

[22:24] <lichtkind> TimToady: in s29 is written "each  See .pairs() method, above." but there is no pairs above , yet another fossil?

[22:24] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_links_tablet

[22:24] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?best_of_perl_6_tablet

[22:24] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_delta_tablet

[22:24] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_cookbook_tablet

[22:24] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_oop_tablet

[22:24] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_regex_tablet

[22:24] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_subroutine_tablet

[22:24] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_block_tablet

[22:24] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_io_tablet

[22:24] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_operator_tablet

[22:25] *** lichtkind left
[22:27] *** cotto joined
[22:34] <lue> rakudo: grammar A { token B { abcd } }; say "abcd" ~~ A.B

[22:34] <p6eval> rakudo : OUTPUT«Type objects are abstract and have no attributes, but you tried to access &!regex␤  in 'A::B' at line 22:/tmp/204fQIVc1D␤  in main program body at line 22:/tmp/204fQIVc1D␤»

[22:35] <lue> rakudo: grammar A { token B { abcd } }; say "abcd" ~~ Regex.new(A.B)

[22:35] <p6eval> rakudo : OUTPUT«Type objects are abstract and have no attributes, but you tried to access &!regex␤  in 'A::B' at line 22:/tmp/pqWA5j8lyy␤  in main program body at line 22:/tmp/pqWA5j8lyy␤»

[22:35] <lue> how would you do that?

[22:37] <sorear> you wouldn't

[22:37] <sorear> it makes no sense

[22:38] <sorear> A.^can('B') has an invocant of type A; it cannot be used on an invocant of type Cursor

[22:38] <lue> how so?

[22:38] <sorear> it's like trying to use Str.comb on a FileHandle

[22:39] <lue> rakudo: grammar A { token B { abcd } }; say A.parse("abcd", :rule<B>);

[22:39] <p6eval> rakudo : OUTPUT«abcd␤»

[22:39] <sorear> please take a step back and explain what you're *actually* trying to do

[22:41] <lue> I'm just writing tests.

[22:46] *** timbunce left
[23:13] *** risou_ joined
[23:14] <sjohnson> has anyone ever accidently piped vi something.txt | less ?

[23:14] <Tene> sjohnson: no, but you may be interested in vipe

[23:16] *** risou left
[23:17] <sjohnson> i make that mistake all the time

[23:24] <sjohnson> it hurts me

[23:26] *** hanekomu joined
[23:27] <sjohnson> seems that a decent hex editor doesn't exist, either

[23:27] <sjohnson> </rant>

[23:48] *** b0m1ro joined
[23:50] *** b0m1ro left
[23:57] *** orafu left
[23:59] <ingy> star: $_ = 'hello'; .say

[23:59] <p6eval> star 2010.09:  ( no output )

