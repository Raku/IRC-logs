[00:13] *** xinming_ left
[00:19] *** pythonian4000afk is now known as pythonian4000

[00:25] *** kcwu left
[00:28] *** risou_ left
[00:34] *** stkowski left
[00:37] *** kanishka joined
[00:45] <Tene> what about wrapped blocks, too?

[00:49] *** masonkramer left
[00:49] *** masonkramer joined
[00:58] *** QinGW joined
[00:59] *** QinGW1 joined
[01:00] *** QinGW2 joined
[01:03] *** QinGW left
[01:03] *** QinGW1 left
[01:13] *** molaf_ joined
[01:17] *** molaf left
[01:19] *** kcwu joined
[01:21] <sjohnson> hi

[01:32] *** TiMBuS left
[01:37] *** whiteknight left
[01:37] *** buubot left
[01:37] *** TiMBuS joined
[01:43] *** buubot joined
[01:46] *** emoken joined
[01:50] <dalek> 6model: 11dbee6 | mberends++ | dotnet/compiler/ (3 files):

[01:50] <dalek> 6model: [dotnet/compiler] replace all var declarations with actual types

[01:50] <dalek> 6model: review: http://github.com/jnthn/6model/commit/11dbee60fb59f51bb6b4db33d254e3c2e2f06ff3

[01:51] <mberends> .oO( insomnia can be useful at times :)

[02:09] *** agentzh joined
[02:34] *** jhuni left
[02:43] *** hugme left
[02:50] *** drbean_ is now known as drbean

[02:54] *** QinGW2 left
[02:58] *** jaldhar joined
[02:59] *** QinGW joined
[03:10] *** LoRe joined
[03:16] <dalek> 6model: 4ad79dd | mberends++ | dotnet/compiler/ (2 files):

[03:16] <dalek> 6model: [dotnet/compiler] move most Ops method return type definitions from DNST2CSharp.pm upstream to PAST2DNSTCompiler.pm

[03:16] <dalek> 6model: review: http://github.com/jnthn/6model/commit/4ad79dd1f832d0aa01381285b47c7c22cba36d4f

[03:36] *** starcoder left
[03:41] *** starcoder joined
[03:45] *** rvrgs joined
[03:48] *** pythonian4000 is now known as pythonian4000afk

[03:48] *** aesop left
[03:50] *** emoken left
[04:01] *** pythonian4000afk is now known as pythonian4000

[04:04] *** sftp left
[04:10] *** LoRe left
[04:10] *** LoRe joined
[04:29] *** meppl joined
[04:29] *** am0c^ joined
[04:40] *** Seahawk56 joined
[04:40] *** Seahawk56 left
[04:40] *** Seahawk56 joined
[04:41] <Seahawk56> Im new to this. Any advice?

[04:43] <Seahawk56> Anyone?

[04:43] <tylercurtis> Seahawk56: About what do you seek advice?

[04:43] *** kanishka left
[04:44] <Seahawk56> Yes

[04:46] <Seahawk56> Not sure how to use Chatrooms or what I' looking for.

[04:48] <tylercurtis> Are you looking to discuss or learn about Perl 6?

[04:49] <Seahawk56> learn

[04:49] <tylercurtis> Then this is a great place to be. Are you familiar with any other programming languages?

[04:50] <Seahawk56> No

[04:53] <plobsing> have you downloaded perl6 yet?

[04:53] <Seahawk56> thanks anyway and for your interest

[04:53] *** Seahawk56 left
[04:54] <florz> this bot still needs some improvements ;-)

[04:54] <TimToady> what I was thinking... :)

[05:09] *** masonkramer left
[05:14] *** tylercurtis left
[05:42] *** aesop joined
[06:00] *** _kaare joined
[06:02] *** masonkramer joined
[06:19] *** kiithroen joined
[06:20] *** kiithroen left
[06:26] *** uniejo joined
[06:33] *** justatheory left
[06:39] *** plobsing left
[06:41] *** plobsing joined
[07:06] *** eternaleye_ joined
[07:07] *** baux joined
[07:14] *** eternaleye_ left
[07:19] <cxreg> diakopter: hard to trade in a market with no going rates, eh?

[07:19] *** eternaleye_ joined
[07:23] *** jfried joined
[07:24] *** redicaps joined
[07:26] <diakopter> cxreg: to the contrary, I've bought hundreds of thousands at that price over the past few days

[07:26] *** eternaleye_ left
[07:27] <diakopter> you just gotta watch the listings and assume that most of the orders that disappear are filled

[07:28] <diakopter> cxreg: but yes the market-maker has great advantages. and it would be much better if essentia were able to be offered in those trades.

[07:28] <diakopter> much easier for prices to arise.

[07:31] <sorear> diakopter: have you seen my little STD exe? ;)

[07:32] <diakopter> I read about it

[07:32] <diakopter> tryfile.exe ?

[07:32] <sorear> yes

[07:33] *** mavrc joined
[07:34] <sorear> The biggest thing I need to make that work (as, for instance, p6eval's std:) is a way to save lexpads

[07:34] <diakopter> sorear: should I try it on a Nehalem 3.33Ghz tomorrow at work?

[07:34] <sorear> which means I need filesystem access, and a serialization framework, and it won't be standalone anymore :/

[07:34] <sorear> since it'll need a CORE.syml

[07:35] <sorear> and I don't see a sane way to make it use resources

[07:37] *** eternaleye_ joined
[07:38] * diakopter idly wonders how fast niecza will build on the "beefy"

[07:39] *** oyse joined
[07:43] *** eternaleye_ left
[07:45] * sorear wonders how much faster a Nehalem 3.33 is than a Northwood 2.00

[08:01] *** [particle] left
[08:06] <sjohnson> hi!

[08:07] <sorear> HI!

[08:16] *** tzhs joined
[08:20] *** redicaps left
[08:20] <sorear> diakopter: rebuilding niecza's setting and running the test suite takes 2:30 on this backwater box (Wikipedia says my processor was released in Jan 02)

[08:20] <sorear> diakopter: so I don't think *that* will be a problem

[08:20] <sorear> diakopter: unless you're talking about the compiler proper, which builds in 5 seconds (the Perl 5 compiler has to be fast, since it has no way to save object code)

[08:23] *** IllvilJa joined
[08:27] <sjohnson> sorear: hows perl6 life going

[08:29] <sorear> perl6 life!?

[08:35] <sorear> perl6 life will have to take a back seat to real life

[08:38] *** timbunce joined
[08:39] <sjohnson> perl6 will enrich other people's lives though

[08:40] <sjohnson> seems like it might be worth the cost

[08:42] <sorear> If I pass classes, I might graduate.  If I graduate, I might get a better job.  If I have a better job, I won't have to work as many hours to pay for food.  And I'll have more for Perl 6.

[08:42] <sorear> A small sacrifice now.

[08:44] <sjohnson> you seem to be one of the big players for perl 6, you'll be fine

[08:44] <sjohnson> no need to worry about food on the table

[08:44] <sorear> Me?  A big player?

[08:44] <sorear> Seriously?

[08:47] *** daxim joined
[08:47] <Tene> sorear: you mentioned hardware difficulties with audio or video conferencing.  Is your development notably constrained by your available hardware?

[08:48] <Tene> sorear: You're definitely one of the notable names in my book, fwiw.

[08:49] *** uniejo left
[08:51] <sjohnson> yeah, you have nothing to worry about

[08:52] <Tene> sjohnson: I wouldn't say that.  It's definitely not clear that perl 6 notability will translate into money.

[08:53] <sorear> How many times have you heard jnthn say "afk, $dayjob"?

[08:53] <Tene> I've had far more employment success come out of screwing around on IRC than from working on perl six. :)

[08:53] <sjohnson> i don't really mean that, i just mean the knowledge of the internals of p6 that baffle me seem clear to him.  if i can make a living doing my modest p5 work, he should have no problem

[08:53] *** xinming joined
[08:54] <Tene> Eh, I wouldn't say "no problem".  Employment and financial issues don't just disappear at a certain level of compiler knowledge, afaict.

[08:55] <sorear> I rather suspect that my inability to work with pmichaud reflects underlying issues that will bite me when I need to join a company

[08:56] <sjohnson> being articulate and p6 knowledge should do well for him

[08:56] <sjohnson> with charisma, i think most anything is possible

[08:56] <sorear> Perl 6 is a toy language for the forseeable future.

[08:56] <sorear> It's not going to get me a job.

[08:58] * sorear out.

[09:01] *** dakkar joined
[09:06] *** broquaint left
[09:11] <sjohnson> sorear: if you think perl 6 was going to get you a job, that wasn't at all what i meant.

[09:11] <sjohnson> i mean, if you thought that's what i meant

[09:12] <sjohnson> i'll leave it as an exercise to you to figure out what i really meant

[09:35] *** icwiener joined
[09:41] *** [particle] joined
[10:02] *** am0c joined
[10:03] *** QinGW left
[10:05] *** kanishka joined
[10:12] *** standz left
[10:14] *** tadzik joined
[10:27] *** jfried left
[10:30] *** pythonian4000 is now known as pythonian4000afk

[10:34] *** MayDaniel joined
[10:36] *** wamba joined
[10:40] *** wamba left
[10:43] *** dnl joined
[10:43] <tadzik> o/

[11:02] *** jfried joined
[11:13] *** agentzh left
[11:15] *** donaldh joined
[11:15] <araujo> http://pastie.org/1250042

[11:19] *** broquaint joined
[11:24] *** broquain1 joined
[11:25] *** donaldh left
[11:27] <tadzik> "fun fact"

[11:29] *** am0c left
[11:31] <araujo> hehe

[11:33] *** Chat8173 joined
[11:36] *** Chat8173 left
[11:40] *** tadzik left
[11:42] *** [Sec] joined
[11:42] *** masak joined
[11:42] <masak> oh hai, #perl6!

[11:43] *** orafu joined
[11:44] <araujo> hi masak :)

[11:48] *** MayDaniel left
[11:51] *** jhuni joined
[12:00] <pmichaud> good morning, #perl6

[12:01] <masak> morning, pmichaud.

[12:05] <pmichaud> (star release)  I had planned to do that last night, but we had a surprise visit from relatives.  It's on my morning agenda.

[12:06] <colomon> o/

[12:06] *** broquaint left
[12:07] <takadonet> morning all

[12:08] <araujo> http://pastie.org/1250042

[12:16] <pmichaud> afk, kid deliveries

[12:19] <masak> sorear: [backlog] why should stringifying a Block need to be good for 'serializing closures'? that feels like two quite different things.

[12:23] *** DarthGandalf left
[12:24] *** DarthGandalf joined
[12:25] <masak> araujo: is that (non-Reverse) Polish Notation I see? http://pastie.org/1250042

[12:25] <araujo> masak, 

[12:25] <araujo> yes

[12:26] <masak> araujo: sometimes "do..end", sometimes "do..done". eww :(

[12:26] *** dnl left
[12:27] <araujo> masak, I am trying to find a keyword actually

[12:27] <masak> also, what about | :num | with pipes on both sides but :x | with only a pipe on one side?

[12:27] *** mm_ joined
[12:27] <araujo> masak, you can use any style

[12:27] <araujo> you can even omit the | if oyu want

[12:27] *** mm_ left
[12:27] <masak> ah. the latter style is hard to read for me.

[12:28] <masak> do I guess correctly that unary minus is distinguished by (lack of) whitespace?

[12:28] <araujo> masak, about the keyword, I am trying to find a name that could probably be used as an "end" ... but that doesn't make too much noise, so far I only found done .... 

[12:28] <masak> suggestion: "end" :)

[12:28] <araujo> yes masak 

[12:29] <masak> just not both "done" and "end" :(

[12:29] <masak> if you're using Polish Notation, are the parentheses really needed for the if statements?

[12:30] <araujo> yeah, I know what you mean ... I have not implemented the 'done' ... it was just an idea :P

[12:30] *** kanishka left
[12:30] <araujo> masak, they are .... 

[12:30] <masak> and this is just feedback :P

[12:30] <araujo> because I made the 'if' a little bit special ... allowing several conditionals

[12:30] <araujo> of course! :D

[12:31] <masak> even there, I was surprised that you didn't go with an 'else if' or 'elsif' keyword...

[12:31] <araujo> well .. because .. what you see there .. actually translates to this form:

[12:32] <araujo> if (cond0) { ..... } (cond1) { .... } ..... else { }

[12:32] <masak> "translates to"? seems to me it is of that form already.

[12:34] <araujo> ^{ :num | if (< num 0) { -1 } (= num 0) { 0 } else { 1 } } 982.8

[12:34] <araujo> you can actually write like that 

[12:34] <masak> sure.

[12:34] <masak> in Perl 6 too.

[12:34] <araujo> well, when I said "translate" .. I actually meant that the do/end kwyrods are actually replaced by '{ }'

[12:34] *** ascent_ left
[12:34] <araujo> they are just other names

[12:35] <masak> rakudo: say { if $^num < 0 { -1 } elsif $num == 0 { 0 } else { 1 } }($_) for -5, 0, 42

[12:35] <p6eval> rakudo bc6c6d: OUTPUT«-1␤0␤1␤»

[12:36] <araujo> print for [ -5 0 42 ] { :num | if (< num 0) { -1 } (= num 0) { 0 } else { 1 } }

[12:36] <araujo> that would be in koan

[12:37] *** kanishka joined
[12:38] <araujo> though I am thinking to turn if <expr> ... to an if <block>

[12:40] *** colbseton` joined
[12:41] *** MayDaniel joined
[12:49] *** masonkramer left
[12:51] *** am0c joined
[12:54] *** rgrau_ joined
[12:57] *** ascent_ joined
[13:00] *** Trashlord joined
[13:05] *** donaldh joined
[13:05] *** ggoebel joined
[13:12] *** plainhao joined
[13:15] *** am0c left
[13:16] *** plainhao left
[13:16] *** plainhao joined
[13:20] *** Patterner left
[13:22] <masak> http://twitter.com/farlerdm/status/28888468542

[13:22] * masak is tempted to write "It's a butterfly!!! o/"

[13:25] <takadonet> masak: what's stopping u?

[13:26] <masak> takadonet: http://twitter.com/carlmasak/status/28889526198

[13:27] <masak> basically the same thing, but with fewer exclamation marks, and with more feigned innocent sincerity.

[13:27] <takadonet> nice

[13:28] <masak> "The Internet treats sarcasm as damage and routes around it." So it's best not to design things with sarcasm in the first place.

[13:29] <huf_> i think eventually we'll find a sign for it just like we have one for questions

[13:30] <masak> ya think¿¡

[13:30] <masak> :)

[13:30] <huf_> :)

[13:30] <flussence> there's an "irony mark" already, apparently...

[13:30] <huf_> well, we'd need one that exists on current english keyboards...

[13:30] <masak> it's very pretty¿¡ and suitable for the occasion¿¡

[13:30] <masak> plus, it's on everyone's keyboard already¿¡

[13:31] <huf_> yes but it's very uncomfortable to type from behind the monitor

[13:31] <masak> :)

[13:31] <masak> lots of walking back and forth.

[13:32] *** Psyche^ joined
[13:32] *** Psyche^ is now known as Patterner

[13:41] <drbean> The butterfly is the butterfly that 莊子 dreamed he was.

[13:41] <masak> or was it the other way around? :P

[13:45] <masak> (here's the reference: http://en.wikipedia.org/wiki/Zhuangzi#The_butterfly_dream )

[13:45] *** _twitch joined
[13:46] <masak> wow, I've found Google Translate's big weakness. it's called Classical Chinese. :)

[13:47] <masak> maybe I shouldn't be surprised about that.

[13:48] *** dnl joined
[13:48] *** bluescreen joined
[13:49] <masak> Classical Chinese: the ultimate compression algorithm. afterwards, if it's not small enough, you can always run it through a second time. :)

[13:49] *** bluescreen is now known as Guest86661

[13:53] <takadonet> is this working as speced?

[13:53] <takadonet> rakudo: for ( < a a > ) -> $x is rw { $x ~~ s:g/a/b/; say $x;}

[13:53] <p6eval> rakudo bc6c6d: OUTPUT«Cannot modify readonly value␤  in '&infix:<=>' at line 1␤  in <anon> at line 22:/tmp/S2l1z4M4_9␤  in main program body at line 1␤»

[13:53] <Trashlord> ha, that makes me think

[13:54] <Trashlord> if I take some big file (~100MB), compress it, then compress it again, and again, and again, could I eventually hit something like 1MB?

[13:54] <Trashlord> in theory

[13:54] <sbp> nope

[13:54] <PerlJam> no

[13:54] <Trashlord> I'd never actually do it for real

[13:55] <sbp> probably because of something to do with the http://en.wikipedia.org/wiki/Pigeonhole_principle

[13:55] <PerlJam> Well, you can do that if "compression" actually destroys information.  But typically the idea is to find a minimal representation without destroying information.

[13:55] <PerlJam> :-)

[13:55] <sbp> the first thing we do is, kill all the vowels

[13:56] <Trashlord> hm, yeah, I didn't consider that

[13:56] *** cosimo left
[13:57] *** cosimo joined
[14:01] * masak submits rakudobug

[14:01] <takadonet> nuts

[14:01] <masak> takadonet: any chance you could golf that to something a bit shorter?

[14:01] <masak> rakudo: for 'a' -> $x is rw { $x ~~ s:g/a/b/ }

[14:01] <p6eval> rakudo bc6c6d: OUTPUT«Cannot modify readonly value␤  in '&infix:<=>' at line 1␤  in <anon> at line 22:/tmp/2sNZcwyijV␤  in main program body at line 1␤»

[14:02] <masak> oh wait!

[14:02] <masak> it's not a bug at all, of course.

[14:02] <masak> the 'a' is what's constant here.

[14:02] <masak> nothing to see here, move along.

[14:02] <masak> if you do 'is copy', it should work.

[14:03] <masak> (or sit back and think about what you really want to accomplish.)

[14:03] <takadonet> rakudo: for 'a' -> $x is copy{ $x ~~ s:g/a/b/ }

[14:03] <p6eval> rakudo bc6c6d: OUTPUT«===SORRY!===␤Missing block at line 22, near "-> $x is c"␤»

[14:04] <takadonet> rakudo: for 'a' -> $x is copy { $x ~~ s:g/a/b/ }

[14:04] <p6eval> rakudo bc6c6d:  ( no output )

[14:04] <takadonet> rakudo: for 'a' -> $x is copy { $x ~~ s:g/a/b/ ; say $x}

[14:04] <p6eval> rakudo bc6c6d: OUTPUT«b␤»

[14:04] *** _kaare left
[14:06] <masak> I could submit and LTA ticket, I guess. the "in '&infix:<=>'" part of the error message is mighty confusing.

[14:07] <takadonet> little

[14:08] *** tadzik joined
[14:09] <tadzik> \o

[14:10] <masak> o/

[14:10] <colomon> \o/

[14:14] <sbp> |o_

[14:14] <sbp> _o/

[14:14] <sbp> I'm hoping that spelled perl6 in semaphore

[14:16] <colomon> sbp++

[14:17] <PerlJam> http://www.plat-forms.org/   Assuming they do this again in 4 or so years, it would be nice to have a perl 6 team.

[14:18] <colomon> What's the matter with next years contest?

[14:20] *** alester joined
[14:20] <PerlJam> I'm not sure Perl 6 is ready for it.  It would be great if there were a Perl 6 team that could put forth a good showing though.

[14:21] *** tadzik left
[14:22] <PerlJam> But it could backfire.  The two possible extreme outcomes are "Wow! Perl 6 really *is* useable!"  and "See? Perl 6 is totally useless!  You can't even build a simple web app with it!"

[14:23] <masak> nod.

[14:23] <PerlJam> And naysayers always seem to have a louder voice.  :(

[14:23] <masak> still, it's a nice goal to have in mind.

[14:24] *** tadzik joined
[14:33] *** tadzik left
[14:37] *** cotto left
[14:38] *** _twitch left
[14:45] <masak> oh, and it's *because* naysayers always seem to have a louder voice that it's worth building unquestionably praiseworthy apps with Perl 6. :)

[14:45] *** _kaare joined
[14:47] <Trashlord> masak: would you say I could do everything that I do in Perl 5, with Perl 6?

[14:48] <Trashlord> I mean, any program that I could conceive, any problem I need to solve right now, which I could solve in Perl 5

[14:48] *** tadzik joined
[14:48] <PerlJam> Trashlord: you just invoked Turing, so the answer is, of course, yes :)

[14:49] <Trashlord> well, sure, technically

[14:49] <Trashlord> but if I need some module which doesn't exist, I'd have to write it myself

[14:49] <PerlJam> Trashlord: some problems will be harder to solve in Perl 6 because the implementations aren't as mature.

[14:49] <Trashlord> that's more of what I meant

[14:49] <Trashlord> yes

[14:50] <takadonet> Trashlord: I'm working on that part. Porting some of the most used modules over

[14:50] <PerlJam> takadonet++

[14:50] <takadonet> here is a good list of the mosted used modules: http://ali.as/top100/ 

[14:50] *** tadzik left
[14:51] <Trashlord> what if I wanted to also contribute by porting modules, can I just do it out of the top of my head, or do I have to pass some sort of test?

[14:51] <takadonet> The volatile list is what I will be using in determining what I;m porting next.

[14:51] <takadonet> Trashlord: Top of your head and put it on github

[14:51] *** wtw left
[14:52] <Trashlord> ah, cool

[14:52] <takadonet> also add it to the perl 6 module list .... anyone have the url?

[14:52] *** tadzik joined
[14:52] <PerlJam> though it would be nice if the test suite for the Perl 5 module could be reused for the Perl 6 version.

[14:53] <PerlJam> takadonet: http://github.com/perl6/ecosystem

[14:53] <takadonet> PerlJam: thanks! gtg meeting time

[14:54] <masak> Trashlord: what PerlJam said about Turing. but of course, since Perl 6 doesn't have CPAN, it'll always be at a disadvantage. or should I say "until Perl 6 has CPAN..."?

[14:55] <masak> maybe we should have a "Porting Modules Program" for people who want to help.

[14:55] <PerlJam> masak: +1

[14:56] <PerlJam> moritz_: Are you listening?  Sounds like a good challenge :)

[14:56] <tadzik> that's what I thought :)

[14:56] <PerlJam> a good series of challenges even

[14:57] <masak> maybe there needs to be a page. porting.perl6.org or something.

[14:57] * masak just hopes that the "Perl 5 and Perl 6 together in the same runloop" dream doesn't die if such an effort takes root

[14:58] <colomon> +1

[15:01] <Trashlord> well, that's really cool. first I'll need to learn to code in Perl 6, though ;)

[15:01] <Trashlord> I imagine it wouldn't be too different from Perl 5

[15:02] <PerlJam> Trashlord: you suffer a lack of imagination  :)

[15:02] <Trashlord> depends on the topic ;p

[15:03] <masak> the topic is Perl 6. see /topic :)

[15:03] <Trashlord> oh, right

[15:03] <Trashlord> I didn't notice that

[15:03] <masak> channel name is another tip-off :P

[15:10] *** _kaare left
[15:10] *** silug left
[15:14] *** dnl left
[15:15] *** spq1 joined
[15:20] *** mavrc left
[15:21] *** mavrc joined
[15:26] *** oyse left
[15:27] *** Ross joined
[15:27] *** chturne joined
[15:28] *** patspam joined
[15:29] <masak> Ovid++ # http://blogs.perl.org/users/ovid/2010/10/perl101-finding-words-in-words.html

[15:29] <masak> maybe someone'd like to provide a Perl 6 port of that script?

[15:30] <masak> should be a relatively straightforward task. might take a while for it to run, though.

[15:30] *** jhuni left
[15:31] *** risou joined
[15:38] *** Lorn left
[15:43] *** cdarroch joined
[15:43] *** cdarroch left
[15:43] *** cdarroch joined
[15:44] *** dnl joined
[15:47] *** zby joined
[15:48] *** tzhs left
[15:50] *** icwiener left
[15:51] *** icwiener joined
[15:55] *** justatheory joined
[15:57] <PerlJam> http://forums.pragprog.com/forums/190/topics/7207

[15:59] <masak> I will do that, in a way. I'm doing another blog-every-day thing this November.

[16:01] *** Chat6670 joined
[16:02] *** Chat6670 is now known as lilvixenxoxo

[16:02] <lilvixenxoxo> hey :)

[16:04] <masak> hi, lilvixenxoxo

[16:04] *** lilvixenxoxo left
[16:06] <masak> bye, lilvixenxoxo

[16:07] <mkramer> haha

[16:10] <tadzik> bye, #perl6

[16:10] *** tadzik left
[16:14] *** baux left
[16:20] *** silug joined
[16:21] *** mkramer left
[16:22] *** masak left
[16:34] *** risou left
[16:36] *** risou joined
[16:46] *** colbseton` left
[16:46] *** colbseton` joined
[16:49] *** guest__ left
[16:51] *** icwiener_ joined
[16:53] *** sftp joined
[16:54] *** icwiener left
[16:54] *** MayDaniel left
[16:59] *** dakkar left
[17:00] <takadonet> rakudo: my $a='adf'; say $a.graphs

[17:00] <p6eval> rakudo bc6c6d: OUTPUT«Method 'graphs' not found for invocant of class 'Str'␤  in main program body at line 22:/tmp/E5JSGam_fK␤»

[17:00] <takadonet> bug?

[17:01] <TimToady> nyi

[17:01] *** kensanata joined
[17:02] <takadonet> TimToady: so what is the work around for now?

[17:03] <TimToady> .chars works as long as you don't use modifier characters

[17:03] *** am0c joined
[17:03] <TimToady> rakudo: my $a = 'adf'; say $a.chars

[17:03] <p6eval> rakudo bc6c6d: OUTPUT«3␤»

[17:04] <TimToady> rakudo: my $a = 'adf' ~ "\x0301"; say $a.chars

[17:05] <p6eval> rakudo bc6c6d: OUTPUT«4␤»

[17:05] <TimToady> that should be 3

[17:05] <TimToady> if we really were doing graphemes

[17:05] <TimToady> rakudo: my $a = 'adf' ~ "\x0301"; say $a

[17:05] <p6eval> rakudo bc6c6d: OUTPUT«adf́␤»

[17:05] <TimToady> rakudo: my $a = 'foo' ~ "\x0301"; say $a

[17:05] <p6eval> rakudo bc6c6d: OUTPUT«foó␤»

[17:05] *** flussence left
[17:06] <takadonet> TimToady: thanks

[17:07] *** IllvilJa left
[17:07] <takadonet> TimToady: also I really enjoyed your perl 6 talk at  YAPC:Asia

[17:08] *** donaldh left
[17:10] *** nwellnhof joined
[17:11] *** jedai left
[17:14] <nwellnhof> I have some patches to Rakudo that fix some Parrot deprecations. What's the best way to get them into trunk?

[17:15] <nwellnhof> Submit them to [email@hidden.address]
[17:15] *** cdarroch left
[17:17] *** flussence joined
[17:18] <takadonet> nwellnhof: that is one way to do it yes

[17:19] *** xiaolongxia left
[17:19] <takadonet> nwellnhof:I'm not sure what is the best way. Might want to ask someone else with more knowledge then me

[17:20] <nwellnhof> takadonet: OK, thanks.

[17:21] <colomon> nwellnhof: do you have them as git patches?

[17:22] <nwellnhof> colomon: Yes, created with git format-patch

[17:23] <colomon> Cc me a copy when you make them to rakudobug, and I'll see if I can squeeze in spectesting them in between being climbed on by a two-year-old singing "Matty Groves".

[17:24] <nwellnhof> What's your email address?

[17:24] <colomon> irc nick @gmail.com

[17:25] *** jedai joined
[17:27] <nwellnhof> OK, email sent

[17:28] *** daxim left
[17:32] *** _kaare joined
[17:35] *** wamba joined
[17:36] *** risou left
[17:39] *** jfried left
[17:42] *** tadzik joined
[17:47] *** rvrgs left
[17:53] *** radu joined
[18:02] *** radu left
[18:05] *** MayDaniel joined
[18:06] *** timbunce left
[18:08] *** cotto joined
[18:10] <colomon> nwellnhof: trying to compile your changes now.

[18:12] *** timbunce joined
[18:18] *** kensanata left
[18:23] *** molaf_ left
[18:24] *** am0c left
[18:36] *** cdarroch joined
[18:36] *** cdarroch left
[18:36] *** cdarroch joined
[18:46] *** nymacro joined
[18:52] *** envi left
[18:54] <takadonet> man porting this module is a lot harder then i thought

[18:56] <PerlJam> takadonet: which module?

[18:56] <takadonet> PerlJam: Finished Text::Tabs and working on Text::wraps

[18:56] <takadonet> http://search.cpan.org/dist/Text-Tabs+Wrap/

[18:57] <colomon> takadonet++

[18:57] <takadonet> still making progress and it's forces me to really understand regex in Perl 5 and 6

[19:00] <PerlJam> takadonet: excellent!  Once you do that, you'll be ready to port a more interesting module like: http://search.cpan.org/dist/Text-Autoformat/   :-)

[19:01] <PerlJam> takadonet++

[19:01] *** nymacro_ joined
[19:01] *** nymacro left
[19:01] *** nymacro_ is now known as nymacro

[19:02] <takadonet> meeting

[19:02] <takadonet> bbl

[19:04] *** kanishka left
[19:05] *** alester left
[19:09] <dalek> nqp-rx/master: d2d1682 | pmichaud++ | src/cheats/hll-compiler.pir:

[19:09] <dalek> nqp-rx/master: From Nick Wellnhofer [email@hidden.address] Remove deprecated charset ops

[19:09] <dalek> nqp-rx/master: review: http://github.com/perl6/nqp-rx/commit/d2d1682d49e9091adfe98dba3cecd3491263d793

[19:11] *** timbunce left
[19:14] *** ggoebel left
[19:14] *** ggoebel joined
[19:17] *** timbunce joined
[19:20] *** pythonian4000afk is now known as pythonian4000

[19:23] *** sECuRE left
[19:23] *** sECuRE joined
[19:33] *** jaldhar left
[19:34] <colomon> nwellnhof: pushed your changes.  cheers!

[19:34] *** ggoebel left
[19:34] <nwellnhof> colomon++ # thanks a lot

[19:35] <dalek> rakudo: 3804f4f | nwellnhof++ | src/ops/perl6.ops:

[19:35] <dalek> rakudo: Replace string_ord with Parrot_str_indexed

[19:35] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/3804f4f58c60552cc3daa17e63387fd408474337

[19:35] <dalek> rakudo: 2da9645 | nwellnhof++ | src/core/Str.pm:

[19:35] <dalek> rakudo: Don't use deprecated charset opcodes

[19:35] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/2da9645f016e20c4828755fb85a2ab6babd2e74c

[19:35] <dalek> rakudo: 4288f53 | nwellnhof++ | src/ (3 files):

[19:35] <dalek> rakudo: Switch to utf8:"" PIR string literals

[19:35] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/4288f53314c243b4d02b16fc91291e4bbacf9a17

[19:35] <dalek> rakudo: ead429f | nwellnhof++ | src/Perl6/Module/Locator.pm:

[19:35] <dalek> rakudo: Use UTF-8 encoding in get_module_info

[19:35] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/ead429f57d11e72a4f351ca214fcb16988a5dd2e

[19:35] <colomon> takadonet, PerlJam: just wrote Damian++ to see if he had already ported Text::Autoformat

[19:36] *** nymacro left
[19:40] *** ggoebel joined
[19:44] *** nwellnhof left
[19:47] *** meppl left
[19:49] <tadzik> is Damian likely to have ported some modules without saying a word?

[19:49] *** plainhao left
[19:54] *** Chillance joined
[19:55] <takadonet> tadzik: maybe

[19:57] <dalek> nqp-rx/master: 56b142f | pmichaud++ | src/stage0/ (3 files):

[19:57] <dalek> nqp-rx/master: Update bootstrap files.

[19:57] <dalek> nqp-rx/master: review: http://github.com/perl6/nqp-rx/commit/56b142f59e5a39e715569781b2571fd8078633e4

[20:00] *** _kaare left
[20:04] *** orafu left
[20:05] *** justatheory left
[20:06] <colomon> tadzik: Damian's ported / rewritten a number of modules.  he listed them (or some of them?) in a talk at YAPC::NA.

[20:07] <colomon> In addition to asking him if he'd ported Text::Autoformat, I asked him if we could get the full list of ports he's done.  ;)

[20:07] <tadzik> :)

[20:07] <tadzik> The question remains, whether his Perl6 modules will be working in Rakudo :)

[20:08] <colomon> well, I tried to point out that if got in the modules.perl6.org framework, we'd have automatic testing on that question.  :)

[20:08] <tadzik> (emmentaller is not working, but shshsh)

[20:13] *** skangas joined
[20:22] <takadonet> going home &

[20:22] *** takadonet left
[20:42] *** muixirt joined
[20:46] *** colbseton` left
[20:46] <muixirt> hi, will the --doc switch be implemented in rakudo or will be (or is) a separate program?

[20:47] <tadzik> what do you mean, --doc?

[20:48] <flussence> tadzik: http://perlcabal.org/syn/S19.html

[20:48] <flussence> 75% down the page

[20:49] <tadzik> oh nice

[20:49] <muixirt> tad with --doc perl6 doesn't execute the program but shows documentation (like perldoc)

[20:51] <tadzik> I see

[20:51] *** ggoebel left
[20:53] *** molaf joined
[20:54] *** ggoebel joined
[20:56] <pmichaud> tadzik: I'm guessing --doc will load+run a specialized setting (module)

[20:57] <tadzik> muixirt: ↑

[20:57] <pmichaud> (oops, sent to wrong nick)

[20:57] <tadzik> np :)

[20:57] <muixirt> got it

[20:58] <muixirt> pmichaud: anyone working on that?

[20:58] <pmichaud> muixirt: not actively that I know of

[21:04] *** masak joined
[21:04] <masak> muixirt: I plan to submit a grant for that. just need to clear some old grant baggage before I do.

[21:05] <masak> I have a grant draft somewhere if you're interested in those plans.

[21:05] <tadzik> hello, The One Who Hears

[21:06] <muixirt> masak: nice (time horizon?)

[21:06] *** avuserow left
[21:06] *** pyrimidine left
[21:06] <masak> muixirt: good question. I planned to have $OLD_GRANT done long ago, but it seems I haven't managed to pull myself together to finish it.

[21:07] <masak> that's the only real unknown. after that, it's a simple thing to put together the grant request, submit it, (hopefully) get it accepted, and start working on it.

[21:07] <masak> I reckon it'll be about two months of work, in clock time.

[21:08] *** avuserow joined
[21:08] *** LoRe left
[21:09] <masak> I don't like the proposal at http://www.nntp.perl.org/group/perl.perl6.language/2010/10/msg34294.html -- I don't see an immediate need for the feature, and it'll complicate the core language. I agree that the idea is a bit neat, and sorta-kinda rhymes with the way routines work... but beyond that I simply don't want it.

[21:10] *** justatheory joined
[21:10] <tadzik> this feature seams a bit confusing to me

[21:11] *** justatheory left
[21:11] *** justatheory joined
[21:12] <pmichaud> gitorious.org is down for me... down for anyone else?

[21:13] <masak> "It's not just you!" -- http://downforeveryoneorjustme.com/gitorious.com

[21:13] <masak> er. ".org".

[21:13] <masak> still not just you :)

[21:17] <flussence> that "multi vars" sounds too scary - I can barely get my head around junctions.

[21:18] <masak> right. it's a matter of someone implementing it, too.

[21:19] <tadzik> for me, it sounds a bit like a feature only spectests will know we are missing

[21:19] *** donaldh joined
[21:19] <masak> for each cool new extra core feature, the load gets a little heavier, and Christmas moves a bit further away.

[21:19] <masak> we need to get back to thinking about what's important for Perl 6.

[21:20] <tadzik> ah, this is a proposed feature, or alredy speced?

[21:21] <masak> proposed.

[21:21] <masak> it's p6l :)

[21:22] *** pyrimidine joined
[21:22] <tadzik> oh coo

[21:22] <tadzik> .append(l)

[21:23] <masak> when I found this page: http://dev.perl.org/perl6/architecture.html

[21:23] <masak> I first thought, "my, that's an archaic page".

[21:23] <masak> but then I started looking at it, and realized that it's a very clear and succinct statement of the "core goal" of Perl 6. and (as far as I know) it still holds.

[21:24] <masak> this is what we're working to realize.

[21:26] <muixirt> Parser -> Code generator -> machine code would be better :-)

[21:27] <tadzik> well, it'd be Bytecode → Jit → Machine Code anyway

[21:27] <masak> please elaborate.

[21:27] <masak> I don't think "better" does the complexity of things justice here.

[21:30] <muixirt> well a bytecode interpreter and bytecode optimizer and a jit are more complex than generating machine code (even if that machine code is lousy and bloated)

[21:34] * muixirt hates bytecode nowadays

[21:34] <tadzik> why so?

[21:34] *** ggoebel left
[21:35] <muixirt> it's a dead end

[21:36] *** masak` joined
[21:36] *** masak left
[21:36] <muixirt> it's a superfluous step 

[21:37] <tadzik> oh, I very doubt it, observing the world nowadays

[21:37] <tadzik> even at the low level: look at llvm

[21:38] <flussence> bytecode may be superfluous, but I'd rather install a runtime than an entire OS to run someone else's software

[21:39] <tadzik> zzz time, see you folks

[21:39] <colomon> o/

[21:39] *** tadzik left
[21:39] <Tene> muixirt: The semantics of Perl 6 execution (and many other modern languages) are sufficiently complex that generated machine code would basically have to implement a VM anyway.

[21:40] <muixirt> linux distros have no problem with supporting several cpus and architectures

[21:40] <flussence> yes, but I'd have to install an entire OS in a 32-bit chroot just to use wine :)

[21:41] <Tene> flussence: Eh?  What distro are you using?  Sane distros allow parallel installation of 64bit and 32bit libs.

[21:41] *** masak` is now known as masak

[21:41] <flussence> I went with the lib64-only-even-though-I-have-virtually-infinite-resources option

[21:42] <Tene> So, it's not that you "have to install", but that you voluntarily choose to do it the more-awkward way? ;)

[21:42] <flussence> pretty much yeah :)

[21:43] <Tene> :)

[21:44] *** pyrimidine left
[21:44] *** alester joined
[21:44] <flussence> I was trying to think of an excuse for it, but it seems I just like doing things the hard way...

[21:45] <muixirt> Tene: sorry I repeat myself, but look at V8, is there any evidence that this is possible fo javascript but not for perl6?

[21:47] <Tene> muixirt: You're more than welcome to work on it if you'd like.  I'd recommend you look at jnthn's 6model work.  He's currently working on Parrot, JVM, and .Net backends, so you could certainly look at adding something you like better.

[21:47] <Tene> muixirt: I'd be glad to discover that I'm wrong.

[21:48] <muixirt> Tene: you caught me, I'm not qualified for such work

[21:48] <pmichaud> the semantic gap between "code generator" and "machine code"  is likely too far to be bridged in a single step.

[21:48] <pmichaud> s/far/wide/

[21:49] <Tene> muixirt: I'm not all that familiar with v8.  I expect that the code generated basically implements a VM, but I haven't actually checked.

[21:50] <pmichaud> ultimately there's likely to be at least one intermediate representation somewhere, and whatever it is, it can be considered a form of "bytecode".

[21:50] <Tene> Exactly.

[21:50] <muixirt> pmichaud: I don't get it, the code generator of your C compiler produces machine code, the V8 code generator produces machine code

[21:51] <flussence> you can do anything with any language, given enough time and resources

[21:51] <pmichaud> muixirt: sure, but C is semantically close to the machine

[21:51] <muixirt> pmichaud: can you elaborate a bit on that swubject?

[21:51] <flussence> V8 took the resources of Google for a well-known language though.

[21:51] <pmichaud> I can't speak to V8 yet.

[21:51] <Tene> muixirt: With C, you don't maintain much state or semantics that are separate from that of the machine you're executing on.

[21:52] <Tene> muixirt: Higher-level languages have a much more complicated execution model though, for one example.

[21:52] *** Chat1964 joined
[21:52] *** Chat1964 left
[21:53] <Tene> So you can't just use naive C stack frames, you instead have to do something like holding separate stack frame, lexpad, etc. structs somewhere else in memory, and have a separate bit of code that moves between them iteratively instead of recursively.

[21:53] <Tene> You keep doing all that to represent the concepts not supported natively by the machine, and when you're done, you have a VM.

[21:55] *** ggoebel joined
[21:55] <masak> ta-daa!

[21:55] <muixirt> btw. I don't argue that it is simple, but compared to the huge difficulties implementing perl6 on a vm like parrot (or the jvm) it looks like an alternative

[21:55] <masak> right. the VM is just the machinery required to play out the execution model.

[21:56] <Tene> when the execution model is naively representable on the machine, you have a much easier time of it.

[21:56] <donaldh> http://code.google.com/apis/v8/design.html

[21:56] <Tene> x86 CPUs don't support continuations, coroutines, exceptions, etc.

[21:56] *** Raynes left
[21:57] <Tene> and then you also have closures, dynamic variables, OUTER::, CALLER::, etc.

[21:57] <Tene> The generated code to handle this ends up being a VM, and the generated representation of the instructions that this basic VM looks at is bytecode.

[21:58] *** Ross left
[21:58] *** Ross joined
[21:59] <masak> all this talk of execution models makes me eager to hack on Yapsi.

[21:59] <muixirt> masak: with a x86 assembler backend :-)

[21:59] <Tene> It's kind of like greenspun's tenth rule.

[22:00] <masak> muixirt: actually, a C backend has been sort of teasing my thoughts lately. or a C runtime. or both.

[22:00] <Tene> Any implementation of a sufficiently complicated language will contain a VM implementation of some sort.

[22:00] <masak> Tene: indeed

[22:00] <masak> you forgot "badly" :)

[22:00] <masak> and "partial".

[22:00] <Tene> masak: Well, it doesn't have to be bad if you address it directly.

[22:00] <Tene> Or partial.

[22:01] <masak> right.

[22:01] <masak> hence "kind of like" Greenspun's Tenth, I guess.

[22:01] <Tene> If you plan up front to need to deal with a VM, you can use an existing VM, like the JVM, or you can implement your own explicitly, like Parrot.

[22:02] *** Guest86661 left
[22:03] <Tene> muixirt: Having said all this, it *is* true that there is a lot of optimization potential here, and that's a big part of what Jonathan is working on these days.

[22:03] *** timbunce left
[22:03] *** dnl- joined
[22:05] *** Entonian joined
[22:05] *** Guest86661 joined
[22:06] *** justatheory left
[22:07] *** MayDaniel left
[22:07] <muixirt> but existing VMs aren't a perfect fit for perl6 requirements

[22:07] *** dnl left
[22:07] <masak> true.

[22:08] <masak> I'm not sure how much of a problem that'll be.

[22:08] <Tene> masak: That was the original reason for Parrot, actually.

[22:08] <masak> yeah.

[22:08] <Tene> Existing VMs were a very poor fit at the time.  They're a bit better these days, but still a significant semantic gap.

[22:09] <masak> I see some problems with specific things, such as exception handling/stack unrolling. that seems to be very VM-specific.

[22:09] *** justatheory joined
[22:09] <muixirt> Tene: well because of parrot rakudo ends up in a mix of pir, nqp, perl6 and C code (I admire everyone who masters that)

[22:09] <Tene> I need to get working on that in Parrot for jnthn.

[22:10] <Tene> muixirt: That's true.  I don't follow what you're trying to say about it, though.  Any compiler is going to use a variety of languages.

[22:10] <Tene> muixirt: nqp is just a restricted subset of Perl 6.

[22:10] <pmichaud> 2010.10 star release is blocked a bit on gitorious.org being down.  I'll work around if gitorious isn't back online in a few hours.

[22:12] <Tene> muixirt: It's even going to get worse, btw.  jnthn is working on porting nqp to .net and jvm, so there will be some of those involved too.

[22:12] *** takadonet joined
[22:12] <takadonet> hey all

[22:13] <Tene> takadonet!

[22:13] *** masak left
[22:14] *** masak joined
[22:14] *** masak left
[22:18] <Tene> muixirt: Have we answered your questions?  Was there anything we missed, or do you have any pending questions?

[22:19] <muixirt> Tene: sort of :-) thanks

[22:20] <Tene> muixirt: Glad to help.  This stuff is very interesting to many of us here.  I'm always glad to chat about this.

[22:20] * muixirt is mumbling 'lorito'

[22:20] *** icwiener_ left
[22:21] <Tene> :)

[22:21] <Tene> I've been meaning to get involved in the lorito work for a while, but haven't been able to get myself together.

[22:23] *** Raynes joined
[22:27] *** Chillance left
[22:27] * cotto takes note

[22:31] *** cognominal left
[22:33] *** wamba left
[22:35] *** Raynes left
[22:46] *** donaldh left
[22:47] *** Raynes joined
[22:48] *** PuraVida joined
[22:51] <dukeleto> Tene: lorito is going to start ramping up soon. As soon as I have time to finish the git migration

[22:51] <takadonet> dukeleto: lorito?

[22:51] <dukeleto> takadonet: a refactoring of parrot internals to use LLVM

[22:51] <takadonet> dukeleto: cool. Will that help with speed ? :)

[22:51] <dukeleto> takadonet: just a tiny bit ;)

[22:52] <takadonet> dukeleto: sweet

[22:52] <muixirt> dukeleto: what does this mean for rakudo?

[22:52] <dukeleto> takadonet: we need LLVM to implement a better JIT. We deleted our old JIT in 1.7.0

[22:52] <takadonet> muixirt: free beer

[22:52] <muixirt> takadonet: I'm in

[22:53] <takadonet> muixirt: I heard that if you port a perl 5 module and put it on github... they give a case of 24 beers

[22:56] <muixirt> takadonet: root beer I assume

[22:57] <takadonet> muixirt: ..... sure if that's what it takes sure

[22:57] <Tene> I'd buy beer for anyone who wants to exchange Perl 6 work for beer.

[22:58] <muixirt> Tene: it did work for jnthn ?

[22:58] <cotto> dukeleto, it's not just llvm, though we certainly hope that'll be one of the possibilities opened up

[22:58] <Tene> muixirt: I've met jnthn once, and I've never bought beer for him.

[23:00] * muixirt would only accept Rothaus Tannenzäpfle beer

[23:01] <dukeleto> cotto: i know, i was simplifying :) Please feel free to describe all the gory details

[23:06] <cotto> Sure.  Just let me figure out the details first. ;)

[23:07] <takadonet> nuts!

[23:08] <takadonet> this is going to make it little more complex : 'Only integers or '*' allowed as range quantifier endpoint at line 69'

[23:10] *** Chat1964 joined
[23:11] <Chat1964> 2hey

[23:11] <colomon> takadonet: that's a perl 5 error message?

[23:12] <takadonet> colomon: no perl6

[23:12] <takadonet> Chat1964: hey

[23:12] <takadonet> converting : $t =~ /\G([^\n]{0,$ll})($break|\n+|\z)/xmgc  to the perl6 regex

[23:12] <colomon> takadonet: ... oh.  in a regex?

[23:13] <takadonet> \G and \z do not exist anymore . \G is replace with :p and \z is completely gone ( '$' replaces it)

[23:13] <Chat1964> 2takadonet: wats up??

[23:13] <takadonet> Chat1964: coding u?

[23:18] *** simon left
[23:19] *** mavrc left
[23:20] *** Chat1964 left
[23:27] *** envi joined
[23:29] *** simon joined
[23:32] *** dnl joined
[23:33] *** dnl- left
[23:35] *** muixirt left
[23:39] *** Ross left
[23:47] *** simon left
