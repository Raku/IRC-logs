[00:00] *** ggoebel left
[00:03] *** ggoebel joined
[00:26] *** hudnix left
[00:30] *** hudnix joined
[00:36] *** hudnix left
[00:37] <frooh> dukeleto: the link you put in your twitter requires a password :-(

[00:39] <dukeleto> frooh: yeah, just realized that. It will be opened soon. I had it cached and forgot

[01:35] *** cotto left
[01:43] *** Chillance left
[01:46] *** nymacro joined
[01:49] *** Viestinik joined
[01:50] *** ggoebel left
[01:54] *** pythonian4000 is now known as pythonian4000afk

[01:54] *** pythonian4000afk is now known as pythonian4000

[02:02] *** nymacro left
[02:06] *** nymacro joined
[02:07] *** ggoebel joined
[02:09] *** nym joined
[02:12] *** Viestinik left
[02:12] *** Viestinik joined
[02:13] *** nymacro left
[02:14] *** orafu left
[02:30] *** whiteknight left
[02:38] *** ggoebel left
[02:42] *** skangas joined
[02:43] *** pythonian4000 is now known as pythonian4000afk

[02:43] *** pythonian4000afk is now known as pythonian4000

[02:51] *** justatheory left
[02:57] *** nym left
[03:01] *** orafu joined
[03:01] *** araujo left
[03:07] *** meppl joined
[03:10] *** nymacro joined
[03:23] *** meppl left
[03:26] *** meppl joined
[03:29] *** knewt2 left
[03:32] *** _twitch joined
[03:32] *** sECuRE left
[03:35] *** Limbic_Region left
[03:36] *** knewt2 joined
[03:37] *** sECuRE joined
[03:42] *** araujo joined
[03:45] *** justatheory joined
[03:49] *** pjcj_ left
[03:52] <dalek> niecza/master: 87a15a5 | sorear++ | / (3 files):

[03:52] <dalek> niecza/master: Implement abbreviated pair syntax :$foo

[03:52] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/87a15a5ff2dd20ed22d5e8791a56c9d7c0ab95c8

[03:52] <dalek> niecza/master: e2b18ba | sorear++ | src/ (2 files):

[03:52] <dalek> niecza/master: Implement classes with enclosing superclasses

[03:52] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/e2b18bacebe977c41584cf9fc2503b5187ce2ea8

[03:52] <dalek> niecza/master: dfcce51 | sorear++ | src/ (3 files):

[03:52] <dalek> niecza/master: Allow superclasses with double colons

[03:52] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/dfcce517a6051bd8e7500922fc84d3c9460cc7e4

[04:07] *** felipe joined
[05:01] <dalek> niecza/master: 76bef32 | sorear++ | src/Metamodel.pm:

[05:01] <dalek> niecza/master: Implement simple need aliasing

[05:01] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/76bef32bae36effbe6f58abf67aa930ae4aee3e0

[05:01] <dalek> niecza/master: a5b470c | sorear++ | src/C (2 files):

[05:01] <dalek> niecza/master: Debugging aids for 'csharp' phase

[05:01] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/a5b470c60b8099a2ac4f055b6822462b91c4448c

[05:01] <dalek> niecza/master: b48c8db | sorear++ | src/Niecza/Actions.pm:

[05:01] <dalek> niecza/master: Improve subnames for grammars

[05:01] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/b48c8db12cac145779e138b1d21c0526945b1e45

[05:02] *** REPLeffect left
[05:15] *** REPLeffect joined
[05:23] *** starcoder left
[05:25] *** starcoder joined
[05:34] *** sftp joined
[05:34] *** sftp_ left
[05:37] *** _kaare joined
[06:07] <sorear> -rwxr-xr-x 1 stefan stefan 2802176 Oct 23 23:05 STD.dll

[06:09] <diakopter> heh

[06:10] *** lue left
[06:10] * diakopter curious to see how it works on the new p6eval

[06:10] <dalek> niecza/master: 3268035 | sorear++ | src/ (2 files):

[06:10] <dalek> niecza/master: Implement <text=.sym>

[06:10] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/3268035e565aa76d95f42fb8f1179a518c6e0848

[06:10] <dalek> niecza/master: 38e1e66 | sorear++ | src/ (2 files):

[06:10] <dalek> niecza/master: Allow $Â¢ inside :lang( )

[06:10] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/38e1e666e2b628a8833b4fded0e4b0453cf7f50f

[06:10] <dalek> niecza/master: 07fbac0 | sorear++ | v6/STD.pm6:

[06:10] <dalek> niecza/master: A few more small STD fixes

[06:10] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/07fbac0e0c78d84186f7cd3d513d0a766af5c3ef

[06:11] <diakopter> sorear: does niecza pass around a global environment/context object?

[06:11] <diakopter> or is it globally referencable somehow? per root invocation?

[06:12] <diakopter> (assuming there is one)

[06:12] <sorear> niecza doesn't have a single coherent model of a "global environment"

[06:13] <sorear> you'll need to give more specifics

[06:17] *** zulon joined
[06:26] *** zulon left
[06:28] *** PZt left
[06:34] *** pythonian4000 is now known as pythonian4000afk

[06:34] *** pythonian4000afk is now known as pythonian4000

[06:46] <sorear> arghf.  STD defines a 'Regex' which shadows SAFE::Regex and causes massive failure when the runtime tries to instantiate Regex objects.

[06:48] *** PZt joined
[06:54] *** cotto joined
[06:57] <sorear> whee, actual runtime errors!

[07:04] *** wormwood left
[07:46] *** _twitch left
[07:46] *** Axius joined
[07:55] *** Axius left
[07:55] * sorear out

[07:55] *** justatheory left
[08:08] *** Axius joined
[08:19] *** cafeblue joined
[08:28] *** Ross joined
[08:31] *** Axius left
[08:33] *** cafeblue left
[08:39] <tadzik> can compilers written with PCT be written in something else than NQP?

[08:42] *** pythonian4000 is now known as pythonian4000afk

[08:45] *** zulon joined
[08:46] *** Axius joined
[08:49] *** pythonian4000afk is now known as pythonian4000

[08:59] <dalek> niecza/master: d1fae71 | sorear++ | / (3 files):

[08:59] <dalek> niecza/master: Implement cursor_fresh and mixin

[08:59] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/d1fae719651fe6c631e2cae30cf44a6598e66af3

[08:59] <dalek> niecza/master: 6742210 | sorear++ | / (3 files):

[08:59] <dalek> niecza/master: Improve double fault reporting

[08:59] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/67422107ca2a3dfc5eb81291fbad847b33e43afd

[08:59] <dalek> niecza/master: 4e17da4 | sorear++ | lib/Kernel.cs:

[08:59] <dalek> niecza/master: Fix off-by-one in VarDeque grow

[08:59] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/4e17da49eda785470f87211dcf1faee132151fc0

[09:03] <mberends> tadzik: not easily. PCT is built in the grammars and actions structure, and NQP is the only language for executing the actions afaik.

[09:03] *** Axius left
[09:03] <sorear> didn't PCT predate NQP?

[09:04] *** Axius joined
[09:04] <dalek> niecza/master: 8fe1193 | sorear++ | lib/Kernel.cs:

[09:04] <dalek> niecza/master: It helps if you copy the elements into the new array.

[09:04] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/8fe11930ec8fe57627d21b15a13317a0bcd32508

[09:07] *** Chillance joined
[09:12] *** envi joined
[09:22] *** rgrau left
[09:42] *** am0c^ joined
[09:42] *** am0c^ left
[09:46] *** Axius left
[09:51] *** kjeldahl joined
[09:52] *** szabgab left
[09:52] *** szabgab joined
[09:56] *** Axius joined
[09:57] *** mavrc joined
[09:57] *** lambdabot joined
[10:03] *** kjeldahl left
[10:08] *** wamba joined
[10:19] *** Axius left
[10:21] *** Axius joined
[10:50] *** Axius left
[10:50] *** jhuni left
[10:54] *** whiteknight joined
[10:55] *** shelling_lab left
[10:58] *** icwiener joined
[11:00] *** M_o_C joined
[11:03] *** sbp is now known as [sbp]

[11:10] *** tadzik left
[11:10] *** nsh_ joined
[11:10] *** sbp joined
[11:11] *** sbp left
[11:11] *** nsh_ left
[11:13] *** nsh_ joined
[11:13] *** sbp joined
[11:14] *** sbp left
[11:16] *** sbp joined
[11:18] *** snarkyboojum left
[11:19] *** snarkyboojum joined
[11:22] *** pythonian4000 is now known as pythonian4000afk

[11:22] *** pythonian4000afk is now known as pythonian4000

[11:22] *** pythonian4000 left
[11:23] *** pythonian4000 joined
[11:28] *** MayDaniel joined
[11:29] *** masak joined
[11:29] <masak> \o/

[11:31] *** kjeldahl joined
[11:32] *** tadzik joined
[11:32] <tadzik> masak: oh hai

[11:32] <masak> salutations.

[11:35] *** Ross left
[11:36] *** Ross joined
[11:36] *** risou joined
[11:37] *** ggoebel joined
[11:39] *** nymacro left
[11:40] *** rgrau_ left
[11:44] *** ggoebel left
[11:46] <masak> we're being compared against such distinguished things as IPv6 and Java 7: http://twitter.com/gleicon/status/28557567821

[11:47] <flussence> so, comcast users had Java 7 several months ago!

[11:48] *** ggoebel joined
[11:49] *** ggoebel left
[11:52] *** nsh_ left
[11:52] *** sbp left
[11:54] *** sbp joined
[11:55] *** nsh_ joined
[12:13] *** timbunce joined
[12:13] *** Eevee left
[12:13] *** Eevee joined
[12:23] *** zostay left
[12:23] *** felipe left
[12:23] *** zostay joined
[12:26] *** ggoebel joined
[12:28] *** krunen left
[12:28] *** krunen joined
[12:29] *** Alias_ joined
[12:30] *** sftp left
[12:30] *** sftp joined
[12:31] *** Alias left
[12:34] *** ggoebel left
[12:56] *** renormalist joined
[12:56] *** mavrc left
[12:57] *** tadzik left
[13:02] *** am0c joined
[13:07] *** M_o_C left
[13:09] *** tadzik joined
[13:14] *** Ross left
[13:14] *** whiteknight left
[13:20] *** Patterner left
[13:26] *** mavrc joined
[13:32] *** Psyche^ joined
[13:32] *** Psyche^ is now known as Patterner

[13:36] *** Alias_ left
[13:39] *** zulon left
[13:40] *** icwiener left
[13:42] *** pythonian4000 is now known as pythonian4000afk

[14:00] *** pjcj joined
[14:09] *** dual left
[14:53] *** zulon joined
[14:54] *** rgrau joined
[15:02] *** M_o_C joined
[15:04] *** M_o_C_ joined
[15:07] *** M_o_C left
[15:08] *** M_o_C_ is now known as M_o_C

[15:08] *** M_o_C left
[15:08] *** M_o_C joined
[15:10] *** Axius joined
[15:18] *** Axius left
[15:20] *** Axius joined
[15:22] *** pjcj left
[15:22] *** icwiener joined
[15:23] *** zby_home_ joined
[15:24] *** [sbp] left
[15:24] *** nsh left
[15:26] *** nsh joined
[15:26] *** [sbp] joined
[15:30] *** risou left
[15:32] *** [sbp] left
[15:32] *** nsh left
[15:34] *** nsh joined
[15:43] *** am0c left
[15:52] *** dju joined
[15:55] *** _jaldhar left
[15:56] *** dju left
[15:57] *** dju joined
[15:57] *** lambdabot left
[15:59] <masak> very quiet here today.

[15:59] <masak> no jnthn here to pun the silence away :P

[16:00] <tadzik> This silence is spunning me stiff

[16:02] <masak> let's talk about something interesting, then.

[16:03] * tadzik contemplates fingernails

[16:03] <tadzik> oh, Module::Tools as a backend for pls?

[16:03] <masak> \o/

[16:03] <masak> except that it'd have to be a local snapshot, then. pls is supposed to be dependency-less.

[16:04] <tadzik> well, neutro has deps too, and they're bundled so it can be boostraped

[16:04] <masak> nod.

[16:04] <masak> I once planned to make a couple of changes to S26. maybe the quiet today makes for a good background to attempt a (possibly controversial) patch.

[16:05] <tadzik> avoiding deps at all costs is silly imho. Especially if some of them are candidates to be the "3rd core" ones

[16:05] <tadzik> what kind of patch?

[16:06] <masak> well, deps are either avoidable, or essential for the installer to even bootstrap. I don't think we're in disagreement there.

[16:07] <masak> the patch was about changing the way declarator blocks attach to declarations.

[16:07] *** jaldhar joined
[16:08] <masak> at present, they attach through clever magic a la TheDamian. I'd like to change them to attaching through a less clever but more robust method.

[16:10] <masak> I'll try to locate the relevant backlog.

[16:23] *** felipe joined
[16:27] *** molaf joined
[16:32] *** justatheory joined
[16:37] *** tzhs joined
[16:37] *** Ross joined
[16:37] *** Ross left
[16:37] *** Ross joined
[16:37] <masak> ah! found it!

[16:37] <masak> http://irclog.perlgeek.de/perl6/2010-06-18#i_2453615

[16:44] <tadzik> oh, this thing

[16:47] *** Trashlord left
[16:48] *** icwiener_ joined
[16:49] *** Axius left
[16:51] *** icwiener left
[16:52] *** Trashlord joined
[16:54] *** zulon left
[16:55] *** dju left
[16:57] *** Axius joined
[16:58] *** exodist is now known as Exodist

[17:12] * masak reads that backlog and tries to summarize

[17:14] * tadzik reads Pls.pm once again. . o O ( So implementing Pls is actually writing 8 methods... )

[17:14] <masak> :)

[17:14] <masak> something like that.

[17:15] <masak> there's still a yet-unrealized idea about making different multi methods correspond to different repository types. (GitHub, Gitorious, Google Code, etc)

[17:15] <tadzik> App::Pls::ProjectsState is about a config file mostly, so deps-of should be known before fetching?

[17:15] <tadzik> App::Pls::Fetcher is git in our case, and App::Pls::Builder/Tester/Installer is what M::Tools should do

[17:15] <masak> no, it can only be known after fetching.

[17:16] <tadzik> I see

[17:16] *** dju joined
[17:16] <masak> but pls is currently in a slightly inconsistent state wrt that.

[17:16] *** meppl left
[17:16] <masak> maybe that's what I should focus on tonight, rather than S26.

[17:17] <tadzik> I think JSON can be avoided now

[17:18] <tadzik> but right, that's a matter of implementation, not Pls itself

[17:19] <masak> it's tricky -- I picked JSON, because proto had only done a poor man's YAML subset, and I wanted something more robust. on the other hand, the JSON module is quite slow.

[17:19] *** Axius left
[17:19] *** dju left
[17:20] <tadzik> there is a in-parrot JSON implementation, which I partly got working

[17:20] *** dju joined
[17:20] <tadzik> well, it doesn't work for arrays

[17:20] <masak> ooh

[17:20] <masak> tadzik: I'm increasingly amazed at the number of things you have going on. :)

[17:20] *** Axius joined
[17:21] <tadzik> masak: I'm a lazy person, so I'm wasting my time on numerous things :)

[17:21] <masak> :P

[17:22] <tadzik> The semester has just started, and I'm the less-than-30-persons group of people who don't have any failed classes on their backs

[17:22] <masak> kudos.

[17:22] <tadzik> so, how do I get Parrot array from the Rakudo array? :)

[17:23] <tadzik> s:2nd/array/Array/

[17:23] <masak> let's go to #parrot and ask :)

[17:23] <tadzik> :)

[17:23] <tadzik> by the way, it's astonishing how 54% of CS students on the year fail the Programming classes

[17:23] *** Axius left
[17:23] <masak> tadzik: every heard of the camel's two humps?

[17:24] <tadzik> humps are those things on the camels' backs?

[17:24] <tadzik> they sounds like those

[17:24] *** Axius joined
[17:24] <masak> http://www.codinghorror.com/blog/2006/07/separating-programming-sheep-from-non-programming-goats.html

[17:24] <tadzik> I image one seats on it with a "Hump" sound

[17:25] <tadzik> s/seats/sits/

[17:25] <masak> also here: http://www.secretgeek.net/camel_kay.asp

[17:28] <tadzik> interesting

[17:28] <tadzik> about JSON: http://wklej.org/id/406539/

[17:30] <tadzik> hrm, I just realized it's about producing, not parsing :)

[17:30] <masak> pls needs to be able to do both.

[17:31] <tadzik> To generate a PMC from a JSON string, see L<compilers/data_json>.

[17:45] <masak> std: my @a; @a\    .\    foo

[17:45] <p6eval> std a194beb: OUTPUTÂ«ok 00:01 119mâ¤Â»

[17:54] *** au|irc joined
[17:55] <au|irc> rakudo: <1 2 3>.pick(4, :replace)

[17:55] <p6eval> rakudo acce29:  ( no output )

[17:55] <au|irc> rakudo: <1 2 3>.pick(4, :replace).say

[17:55] <masak> needs 'say'

[17:55] <p6eval> rakudo acce29: OUTPUTÂ«312â¤Â»

[17:55] <masak> oh, and .pick is now .roll

[17:55] <au|irc> ok :)

[17:55] <masak> er, .pick(:replace) is now .roll

[17:55] <tadzik> what was changed to .roll... aha

[17:55] <au|irc> rakudo: <1 2 3>.roll(4)

[17:55] <au|irc> rakudo: <1 2 3>.roll(4).say

[17:55] <masak> we should probably have a warning there.

[17:55] <p6eval> rakudo acce29:  ( no output )

[17:55] <p6eval> rakudo acce29: OUTPUTÂ«1232â¤Â»

[17:55] * masak tries adding one

[17:55] <au|irc> masak++

[17:55] *** zby_home_ left
[17:56] <tadzik> I remember filing a bug, or thinking about filing a bug for it

[17:56] <masak> au: nice to see you here. I've been enjoying your tweets lately.

[17:56] <tadzik> ah, there was a reason I didn't

[17:56] <masak> tadzik: still not too late!

[17:56] <tadzik> shame I don't remember why

[17:57] <tadzik> no, I was suprised .pick eats this :replace argument, even though it's not in the signature

[17:57] <masak> that's typical of methods.

[17:57] <masak> see, um, "Interface consistency" in S12.

[17:58] <masak> subs, however, throw an error on unrecognized named parameters.

[17:58] <masak> rakudo: my @a = 1..3; pick @a

[17:58] <p6eval> rakudo acce29:  ( no output )

[17:58] <masak> rakudo: my @a = 1..3; say pick @a

[17:58] <p6eval> rakudo acce29: OUTPUTÂ«â¤Â»

[17:58] <masak> rakudo: my @a = 1..3; say pick @a, 2

[17:58] <p6eval> rakudo acce29: OUTPUTÂ«2Â»

[17:59] <masak> rakudo: my @a = 1..3; say pick @a, 2, :replace

[17:59] <p6eval> rakudo acce29: OUTPUTÂ«Unexpected named parameter 'replace' passedâ¤  in 'pick' at line 1786:CORE.settingâ¤  in main program body at line 22:/tmp/ex7H4r6bmoâ¤Â»

[18:00] <au|irc> masak: thank you :) ditto - I was just writing a simple script for calcualting a md5 fixpoint 

[18:00] <au|irc> # http://gist.github.com/643748

[18:00] <masak> ooh!

[18:01] <au|irc> this goes into http://github.com/elliottkember/The-Kember-Identity soon - any stylistic suggestions? :)

[18:01] <tadzik> au|irc: you could just use Perl6's Digest::MD5, no?

[18:01] *** tzhs left
[18:02] <au|irc> tadzik: indeed, it'll be part of 2010-10 - I was using HEAD checkout and forgot that. fixed

[18:02] <au|irc> tadzik++

[18:03] <masak> au|irc: why the infix:<===> instead of 'eq' and '==', respectively?

[18:03] <au|irc> false symmetry? :) ok, fixed

[18:03] <tadzik> au|irc: you can install it with neutro # self-advertising :)

[18:03] *** whiteknight joined
[18:04] <masak> tadzik++ # better at both self-advertizing and actually getting things done

[18:05] <masak> (than I am, that is)

[18:05] <tadzik> oh well

[18:05] <tadzik> it's actually worse-but-good-enough, at least for now

[18:05] *** Axius left
[18:05] <masak> that counts for a lot.

[18:06] <masak> now I have to compete on excellence, which is much more challenging than competing by being the only alternative! :P

[18:06] <au|irc> ==> neutro depends on perl6-File-Tools, installing now

[18:06] <au|irc> ==> Building perl6-File-Tools

[18:06] <au|irc> Could not load oplib `perl6_ops'

[18:06] <au|irc> ==> Building perl6-File-Tools failed

[18:06] <tadzik> oh noes, wat do

[18:06] <tadzik> but really, never encountered this. Will try to bootstrap it myself now

[18:06] <au|irc> let's see. probably pwd has changed

[18:06] <au|irc> was running it in a side-by-side checkout with rakudo

[18:06] <au|irc> PERL6LIB=~/neutro/tmplib ../neutro/bin/neutro  neutro

[18:07] <au|irc> with pwd in ~/rakudo

[18:07] <tadzik> I don't think it should matter

[18:07] <masak> au|irc: please use a nopaste service when pasting many lines. thank you. :)

[18:07] <au|irc> wilco :)

[18:07] <masak> that's funny because you once taught me that. :)

[18:08] <au|irc> =)

[18:08] <tadzik> apprentice outgrew the master :)

[18:08] <masak> I doubt it. :)

[18:08] <tadzik> au|irc: it just flawlessly installed for me

[18:09] <tadzik> http://wklej.org/id/406574/

[18:11] <au|irc> ok, it's a missing "make install" on my part. pebcak

[18:11] <tadzik> I was thinking about this, but I thought rakudo won't even run w/o it

[18:13] <masak> au|irc: seems your fixpoint thingy is about as efficient as bogosort. any particular reason you don't feed the old md5 back into $string?

[18:13] <masak> I'm currently running a modified version that does that.

[18:14] <au|irc> makes sense. fixed

[18:14] <masak> http://gist.github.com/643769

[18:15] <masak> it just passed 2e4 iterations, and hasn't converged yet...

[18:15] <masak> oh! oh!

[18:15] <masak> (++$count % 10) === 0

[18:15] <masak> better written ++$count %% 10

[18:15] <masak> also, consider ditching outer parentheses after all 'if' keywords.

[18:16] <au|irc> ok, both fixed

[18:16] <masak> gives a bit more air to the é£æ°´ of the program. :)

[18:16] <au|irc> added advertisement to neutro

[18:17] <tadzik> \o/

[18:17] <tadzik> where?

[18:17] <au|irc> http://gist.github.com/643748 

[18:17] <au|irc> line 4

[18:17] <au|irc> use Digest::MD5; # available as "neutro perl6-digest-md5"

[18:17] <tadzik> oh cute :) au|irc++

[18:18] *** timbunce left
[18:24] *** timbunce joined
[18:26] * tadzik fleeing

[18:26] <tadzik> o.

[18:26] <tadzik> o/

[18:27] <masak> fly softly, tadzik.

[18:27] <tadzik> heh, I could imitate flapping wings, but that'd flood the channel

[18:27] <masak> the mental image is enough, I'm sure :)

[18:28] * tadzik http://wklej.org/id/406592/txt/

[18:28] *** tadzik left
[18:28] <au|irc> â½Â·~

[18:28] <masak> cute :)

[18:29] <masak> in other news, both 'flee' and 'fly' originate from the same Old Norse root.

[18:29] <masak> 'fljuga' -- which is quite close to the modern Swedish word for 'fly'.

[18:31] <au|irc> nice :)

[18:32] *** Axius joined
[18:32] <masak> the md5 fixpoint finder shows no sights of converging over here.

[18:32] <masak> just passed 1.5e5 iterations.

[18:34] <au|irc> well we're not even sure there is one

[18:35] <au|irc> it's just yet another exercise in chrestomathy really :)

[18:35] *** MayDaniel left
[18:38] <masak> I see. :)

[18:38] <masak> I feel better now about the program going on without having found a fixpoint.

[18:39] <masak> maybe someone should contribute it to Rosetta Code, if it's chrestomanthy.

[18:40] <au|irc> *nod*

[18:45] <masak> I think it would be an interesting exercise to make Yapsi target C.

[18:47] * au|irc slowly lurks back to the background... :) &

[18:49] <masak> phenny: tell isBEKaml that I'd like to conspire over Yapsi with him. :)

[18:49] <phenny> masak: I'll pass that on when isBEKaml is around.

[18:51] <colomon> awe, man, I just missed au|irc++ on here.

[18:51] <colomon> errr... aw

[18:51] <colomon> but I suppose awe is appropriate as well.

[18:52] *** lue joined
[18:53] <lue> .u â½

[18:53] <phenny> U+203D INTERROBANG (â½)

[18:53] <lue> unicode is fun :)

[18:54] <masak> I'm sometimes reminded of a line from the Matrix: "Take a look at his neurokinetics, they're way above normal." that's what it feels like when au is applying changes to code.

[18:54] <lue> (o hai o/ as well)

[18:54] <masak> lollue, hai \o

[18:59] <masak> lue: I've been thinking a bit more about some kind of game written in Perl 6.

[18:59] *** M_o_C left
[19:00] <masak> lue: my latest idea is a fairly simple ASCII-based RPG map-traversing thing, in which levels persist and in which a big part of the game is building the levels.

[19:00] <lue> me as well, but more in a passing though format.

[19:00] <lue> s/gh/ght/

[19:00] <masak> it's just an idea so far. I'll happily discuss it further.

[19:01] <cxreg> masak: does it teach you perl 6 as you play it?

[19:01] <masak> cxreg: I guess it could. I hadn't thought of putting that in as an essential part.

[19:01] <cxreg> it could be like nethack, but each of the monsters is a p6 operator

[19:01] <lue> It sounds like a good idea. The most interesting part would be refreshing the screen.

[19:01] <cxreg> "You're fighting a Whatever"

[19:01] <masak> cxreg: I thought of tying it to Perl 6 by first making a quick draft of the game, and then building it from scratch over the course of 30 days or so.

[19:02] <flussence> ooh

[19:02] <cxreg> masak: i'm down

[19:02] <masak> \o/

[19:02] * flussence imagines a game like minecraft, but with a REPL instead of blocks

[19:02] <masak> lue: some curses library would be needed.

[19:02] <cxreg> flussence: > dig. dig. dig. dig. dig. 

[19:03] <lue> .oO(curses, if only we had a library like that)

[19:03] <masak> :)

[19:03] <masak> lue: there's one in Parrot.

[19:04] <masak> oh, and it would be multiplayer and networked. I'm not sure how realistic that is at this point.

[19:04] <masak> but it'd be fun to try.

[19:04] <cxreg> "You're fighting an infinite lazy list.  But you win easily, because it was lazy."

[19:04] <lue> "You're fighting infinity! Next time don't divide by zero"

[19:04] <flussence> cast eager on it to make it explode...

[19:04] <masak> lue: a division by zero doesn't result in infinity.

[19:04] <lue> rakudo: say 1/0

[19:04] <p6eval> rakudo acce29: OUTPUTÂ«Infâ¤Â»

[19:05] <lue> QED

[19:05] <masak> ...except in some IEEE standards :)

[19:05] <masak> but not in real maths.

[19:06] <masak> the thing that becomes infinity is the limit of division by ever smaller numbers. and even then, only the limit from the right.

[19:06] <lue> .oO(Although graphs of f(x)=1/x could be used to suggest 1/0=Inf)

[19:06] <masak> lue: no, they would act as counterevidence.

[19:06] <masak> because the limit from the left would be -Inf.

[19:06] <masak> and hence the "actual" limit is undefined.

[19:07] <lue> I think we can agree x/0 is Very Interestingâ¢

[19:08] <masak> it's not like it's a concept in need of deeper study in analysis.

[19:08] <masak> though many crackpots would have you think so.

[19:08] <lue> .oO(Let's see how far down the Layers of the Internet we have to go for networking :P)

[19:08] <masak> here's a common crackpot "explanation" of 1/0: http://www.bbc.co.uk/berkshire/content/articles/2006/12/06/divide_zero_feature.shtml

[19:09] <masak> sadly, such nonsense is treated as news because people don't know enough maths.

[19:10] <lue> I don't know, 'nullity' is a very mathy-sounding term, so I believe it. [JOKE]

[19:11] <masak> wow, wikinews has great coverage of the whole thing: http://en.wikinews.org/wiki/British_computer_scientist's_new_%22nullity%22_idea_provokes_reaction_from_mathematicians

[19:12] <lue> I knew I saw that piece of news somewhere before! (on wikinews)

[19:13] <lue> "Imagine you're landing on an aeroplane and the automatic pilot's working," he suggests. "If it divides by zero and the computer stops working - you're in big trouble. If your heart pacemaker divides by zero, you're dead." Isn't that why IEEE has it equal Inf instead of an error?

[19:13] <masak> I believe I might have learned about it through Mark C. Chu-Carroll's blog.

[19:14] <masak> lue: I don't know why IEEE has it that way.

[19:15] <lue> .oO(A Doctor Who story where everthing bad happened because the TARDIS divided by zero... *evil grin/laugh*)

[19:17] <masak> lue: I'm enjoying some of the new Doctor Who episodes now, by the way. lovely stuff.

[19:17] <lue> wikinews: "Anderson's proof that one can divide by zero ('written [...] on the back of an envelope for added authenticity')" :D

[19:18] <lue> did you see the season 31/series 5 finale?

[19:19] <masak> no, I'm only at the beginning of series 4 so far.

[19:20] <lue> I'll shut up then :)

[19:20] <masak> thank you :)

[19:20] *** Axius left
[19:21] <lue> I, on the other hand, need to watch the first 26 seasons (all of the old series). I started during the 2009 gap year.

[19:21] <dalek> roast: 4f15296 | masak++ | S32-list/pick.t:

[19:21] <dalek> roast: [S32-list/pick.t] test for deprecated :replace

[19:21] <dalek> roast: review: http://github.com/perl6/roast/commit/4f15296df2614c995dae7b7a3e5e19caea0d6d7f

[19:22] <lue> When I kept reading about the old series, I thought "For Last of the Time Lords, there sure were a lot of them in the old series" before discovering the Time War was a new Who invention

[19:22] <masak> building/testing a deprecation error for C<.pick>.

[19:23] * lue continues considering a P6 RPG

[19:24] <arnsholt> As an aside, division by zero is an exceptional state according to IEEE floating point, according to Wikipedia =)

[19:26] <masak> let me see what it gets me in Java.

[19:27] * masak .oO( System.out.println( 1.0 / 0.0 ); )

[19:28] <masak> gives me 'Infinity'. so Rakudo is not alone in doing that.

[19:28] <masak> pugs: say 1/0

[19:28] <p6eval> pugs: OUTPUTÂ«*** Illegal division by zeroâ¤    at /tmp/MYjMw49tpR line 1, column 5 - line 2, column 1â¤Â»

[19:29] <masak> huh

[19:29] <masak> rakudo: say 1/0

[19:29] <p6eval> rakudo acce29: OUTPUTÂ«Infâ¤Â»

[19:29] <masak> rakudo: say (-1)/0

[19:29] <p6eval> rakudo acce29: OUTPUTÂ«-Infâ¤Â»

[19:30] <lue> rakudo: say 1/Inf # just for kicks

[19:30] <p6eval> rakudo acce29: OUTPUTÂ«0â¤Â»

[19:34] <lue> "You meet Bob, a hyperoperator. He'll give you the Important Thing, but only after you get him some decaf. Pleeeeease?"

[19:36] <masak> it sounds like customizing monster appearance and behavior is perhaps more important than building levels.

[19:36] <masak> and maybe some kind of per-level networking is more realistic than real-time networking.

[19:36] <lue> levels are important too. And we can abuse unicode on the way :)

[19:36] <masak> heh.

[19:37] *** molaf left
[19:37] <lue> "[Level 32] You come to the base of Parrot Mountain. Be careful, as there's something at the summit hurling PMC's at you"

[19:42] <lue> I think it's a great idea, but the networking should wait until the game works :)

[19:46] *** pjcj joined
[19:47] <masak> you're most likely right.

[19:47] <masak> and until Rakudo provably supports it.

[19:48] <masak> (not just on paper, but in practice, too)

[19:50] <cxreg> "Steve Kramarsky lamented that Dr Anderson is not from the "University of 'Rithmetic". # lol

[19:51] *** pjcj left
[19:52] * sorear wonders if and how perl 6 can ever match perl 5's efficient list context implementation

[19:53] <sorear> laziness is, on the surface at least, a huge hurdle

[19:53] *** dual joined
[19:53] *** pjcj joined
[19:54] <flussence> I think the answer there is more laziness, doing nothing until something asks you for a .Array or .Num etc.

[19:54] *** MayDaniel joined
[19:55] <flussence> though that only helps if everything that depends on the context is called lazily...

[19:57] <flussence> having to learn functional programming to get the most efficient code does seem a bit suboptimal

[19:57] <sorear> laziness only helps if the value is never needed

[20:00] <lue> masak: I'll think more about that RPG. If it weren't for my drastically reduced P6 time (school :/), I'd have more chances to help as well.

[20:00] <lue> afk

[20:00] <masak> we're all on some kind of time budget.

[20:02] *** molaf joined
[20:02] *** Chillance left
[20:13] *** hudnix joined
[20:24] <diakopter> au|irc: can an md5 prog detect loops of any length? (oh look, we've seen this hash before, x hashes ago)

[20:25] *** molaf left
[20:28] <diakopter> even if there's not a loop with size 1, there could be others with higher sizes

[20:28] <diakopter> masak: want to tackle it? :)

[20:28] *** hudnix left
[20:28] <masak> diakopter: that's a nice idea. Floyd's cycle-finding algorithm can probably be made to do that, even if the linked list in question is generated on the spot. http://stackoverflow.com/questions/2663115/interview-question-how-to-detect-a-loop-in-a-linked-list/

[20:29] <diakopter> masak: cool, good idea

[20:29] *** rvrgs joined
[20:29] <masak> ooh, that means that the memory consumption can be kept constant.

[20:29] <masak> nice!

[20:29] *** rvrgs left
[20:30] <simon> compiling rakudo on a netbook. this is the first time I regret my choice of CPU.

[20:30] <diakopter> plus, the list only needs traversed if the md5 bitmapspace (16 GB?) shows a hit

[20:32] <masak> simon: how much memory does it have?

[20:33] <masak> RAM, I mean.

[20:35] *** mavrc left
[20:38] <dukeleto> simon: are you using ccache?

[20:45] <masak> those are some inexplicable sortings: http://mail.pm.org/pipermail/moscow-pm/2010-October/009063.html

[20:45] <masak> and fairly suspious uses of the Whatever star, too.

[20:46] <masak> Moscow.pm seems to have an active list.

[20:49] <simon> masak, 1G.

[20:49] <simon> dukeleto, probably not. I just hit 'make'.

[20:49] <simon> it's stalled for a long time on /usr/local/bin/parrot  src/gen/perl6.pbc --target=pir src/gen/core.pm > src/gen/core.pir

[20:49] <simon> not stalled, it seems to be working

[20:50] <masak> simon: I think 1G is just on the limit. many people with less memory than that have been complaining about excessive slowness (due to swapping).

[20:50] <simon> masak, I'm using <800M currently, so should be fine.

[20:50] *** hudnix joined
[20:51] <masak> yes. it's the compilation of src/gen/core.pm that's the memory bottleneck, by the way.

[20:51] <flussence> fwiw I can compile on my 1G machine without any swap at all

[20:51] <simon> I should've timed it. :)

[20:52] *** PacoLinux left
[20:52] <flussence> hmm, I should check this cron output on my other atom box...

[20:52] <simon> ah yes, atom is the name of the processor.

[20:54] <dalek> rakudo: d49eea2 | masak++ | src/core/Any-list.pm:

[20:54] <dalek> rakudo: [core/Any-list.pm] deprecation note .pick :replace

[20:54] <dalek> rakudo: 

[20:54] <dalek> rakudo: Prior to this change, the C<.pick> method accepted the :replace

[20:54] <dalek> rakudo: parameter (which no longer applies and has been replaced by the

[20:54] <dalek> rakudo: C<.roll> method) without complaining. Now it throws an error.

[20:54] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/d49eea2e49e8b3a308836776cfac8c368cd523ed

[20:57] <flussence> rakudo: say (DateTime.new('2010-10-24T05:16:00Z').Instant - DateTime.new('2010-10-24T03:00:00Z').Instant) - (1*3600 + 54*60 + 34)

[20:57] <p6eval> rakudo acce29: OUTPUTÂ«1286â¤Â»

[20:57] <flussence> 21 minutes to compile from git, more or less

[20:58] <flussence> (there's probably something I'm missing in that code, it's not as nice as I'd like...)

[21:05] *** envi left
[21:20] *** wamba left
[21:22] *** sftp left
[21:23] *** sftp joined
[21:23] *** _kaare left
[21:25] *** Ross left
[21:38] *** timbunce left
[21:39] *** Trashlord left
[21:45] <sorear> aloha, karma sorear

[21:45] <aloha> sorear: sorear has karma of 150.

[21:45] <masak> sorear++ # definitely more than that

[21:46] <sorear> things that frustrate me: 11 minute compile cycles that give me back the same error.

[21:48] *** pythonian4000afk is now known as pythonian4000

[21:54] <masak> I remember similar delays with GGE. that's when things like tote and a good movie come in handy.

[21:54] <masak> ooh! haven't released tote to the world yet, have I? :)

[21:54] <masak> always things to do...

[21:59] <dalek> roast: 794519e | masak++ | S32-list/pick.t:

[21:59] <dalek> roast: [S32-list/pick.t] removed TODO fudging

[21:59] <dalek> roast: review: http://github.com/perl6/roast/commit/794519eee0fd463d3ac66f1f4e3874d253686b39

[21:59] <masak> well, that's it for me. time for my regeneration cycle.

[21:59] <masak> sleep. I mean sleep.

[21:59] <masak> 'night, #perl6.

[21:59] *** masak left
[22:04] *** spacebat_ is now known as spacebat

[22:09] <dalek> niecza/master: 1e0277e | sorear++ | src/RxOp.pm:

[22:09] <dalek> niecza/master: Fix subrule-induced backtracking under :ratchet

[22:09] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/1e0277eaf9fbf0bf873b02c63033b3658fef8410

[22:09] <dalek> niecza/master: 9895e91 | sorear++ | src/RxOp.pm:

[22:09] <dalek> niecza/master: <!!{ }> blocks should create Bool context

[22:09] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/9895e9165023655a68cea2067c68d657bde37c5a

[22:09] <dalek> niecza/master: 967b37e | sorear++ | src/Niecza/Actions.pm:

[22:09] <dalek> niecza/master: Implement augment class Foo::Bar

[22:09] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/967b37ecbbaa4d10f0ffd3b8faa0ff8d19031f2b

[22:30] *** rvrgs joined
[22:42] *** bluescreen left
[22:50] *** risou joined
[22:50] *** icwiener_ left
[22:55] *** bluescreen joined
[23:01] *** MayDaniel left
[23:06] *** sftp left
[23:19] <sorear> well, I finally got STD.parse("2 + 2") to not *crash*

[23:19] <sorear> it does, though, panic("Malformed subset")

[23:19] <sorear> wtf.

[23:25] *** envi joined
[23:29] <sorear> oh, there's an insidious precedence bug.

[23:29] <sorear> <sym> [ ... ... ] || <.panic: "Malformed subset">

[23:30] *** risou_ joined
[23:33] *** risou left
[23:58] *** rgrau left
