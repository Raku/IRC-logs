[00:00] *** jan_ left
[00:03] *** cognominal joined
[00:07] *** jan_ joined
[00:16] *** stephenlb left
[00:16] <ash_> colomon: well, i'll look into it to see if i can narrow it down 

[00:18] <ash_> _bob_k master builds fine with the latest parrot trunk for me

[00:18] <_bob_k> ash_: Interesting.  Which platform and such are you on?

[00:19] <ash_> os x 10.6.2, apple gcc 4.2, 64-bit if that makes a difference

[00:20] <_bob_k> OK, so what can I do from here?

[00:21] <ash_> a bug report would be good

[00:21] <_bob_k> Got an URL?

[00:23] <ash_> email perl6-bugs at perl.org the 

[00:23] <ash_> the bug report

[00:23] <ash_> it automattically adds it in from there and notifies people

[00:23] <_bob_k> Will do.

[00:23] <_bob_k> Thanks for your help ash_ and colomon.

[00:23] <ash_> the bug tracker is at: http://rt.perl.org/rt3/Public if you want to take a look around and see if you can find any other bug reports like yours

[00:34] *** meppl left
[00:43] *** dukeleto joined
[00:44] *** soupdragon left
[00:46] *** justatheory left
[00:49] *** rgrau` left
[01:01] *** ash_ left
[01:05] *** ashizawa joined
[01:13] *** lest_away is now known as lestrrat

[01:15] *** simcop2387_ joined
[01:16] *** justatheory joined
[01:24] *** fridim_ left
[01:25] *** agentzh joined
[01:27] *** simcop2387 left
[01:30] *** japhb left
[01:30] *** cdarroch left
[01:32] *** Wolfman2000 joined
[01:32] <Wolfman2000> sorry for not being here in awhile. Finally got my school schedule figured out.

[01:33] <Wolfman2000> Did anything recent take place with Perl 6 development within the past few weeks?

[01:34] <Juerd> I think that everything that took place within the past few weeks can be classified as recent.

[01:35] <Wolfman2000> I'm a bit behind on what took place.

[01:35] <Juerd> Join the club :)

[01:35] <Wolfman2000> fair enough

[01:35] <Juerd> I still feel I'm years behind

[01:36] <Juerd> I wonder if I will ever catch up

[01:36] <Wolfman2000> and yet you develop it directly

[01:37] *** _bob_k left
[01:46] *** xomas left
[01:46] *** Exodist left
[01:46] *** xomas joined
[01:52] *** mikehh_ left
[01:53] <Juerd> http://juerd.nl/i/5e6f1b41fb0beb7f878d01fe3b069776.png

[01:53] <Juerd> Is googlebot killing feather, indirectly?

[01:57] <Juerd> Oh my

[01:57] <Juerd> I understand why generating the timeline is so consuming

[01:57] <Juerd> http://juerd.nl/i/837c8ca338c036903129875e8147f0c0.png

[01:59] <Juerd> svnweb re-enabled, trac disabled

[02:00] <diakopter> I got chided the other week for disabling dev.pugscode.org

[02:01] <diakopter> Juerd: ^^

[02:02] <Juerd> I don't know what chided means but it's probably no good

[02:03] <Juerd> Whoever finds and fixes the cause, can reenable it afterwards :)

[02:03] <diakopter> amen

[02:04] <diakopter> chide: To scold mildly so as to correct or improve; reprimand

[02:04] <Juerd> Ah

[02:18] *** orafu left
[02:18] *** orafu joined
[02:26] *** japhb joined
[02:27] *** lestrrat is now known as lest_away

[02:27] <colomon> ng: my $a = list; say $a.WHAT

[02:28] <p6eval> ng b65331: List()␤

[02:28] <colomon> ng: my $a = list; say $a.elems

[02:28] <p6eval> ng b65331: 0␤

[02:31] *** JimmyZ joined
[02:35] <colomon> defining my own List.new doesn't seem to help; it just doesn't get called when you say List .new.

[02:35] <colomon> :(

[02:43] *** agentzh left
[02:51] *** synth joined
[02:56] *** lest_away is now known as lestrrat

[02:59] *** Exodist joined
[03:00] *** agentzh joined
[03:21] *** justatheory left
[03:36] *** JimmyZ left
[03:57] *** Baggiokwok joined
[04:00] *** cognominal left
[04:05] *** Limbic_Region left
[04:07] <scp1> ng: sub postfix:<!>($n) { [*] 1..$n }; say [+] gather { for 3..50_00 -> $x { if $x == [+](map { $^a! }, $x.comb()) { take $x; } } }

[04:07] <p6eval> ng b65331: Unable to parse blockoid, couldn't find final '}' at line 1␤current instr.: 'perl6;Regex;Cursor;FAILGOAL' pc 1664 (src/stage0/Regex-s0.pir:907)␤

[04:10] *** solarion left
[04:11] *** solarion joined
[04:14] *** astrojp left
[04:16] *** lestrrat is now known as lest_away

[04:21] *** Wolfman2000 left
[04:26] *** Exodist left
[04:32] *** pnate joined
[04:46] *** Guest91012 left
[04:47] *** Chazz joined
[04:47] *** Chazz is now known as Guest44003

[04:55] *** scp1 left
[04:59] *** cognominal joined
[05:19] *** pardunci1 left
[05:45] *** Exodist joined
[05:47] *** c0tt0 left
[05:54] *** jaldhar joined
[05:56] <diakopter> hum dee dum

[05:58] *** c0tt0 joined
[05:59] *** lest_away is now known as lestrrat

[06:01] <sjohnson> rakudo: say 'hi'

[06:02] <p6eval> rakudo 3867ff: hi␤

[06:09] <diakopter> ng: {}()=0

[06:09] <p6eval> ng b65331: Null PMC access in getprop()␤current instr.: '&infix:<=>' pc 14291 (src/builtins/Junction.pir:113)␤

[06:09] <diakopter> ng: {}()()=0

[06:09] <p6eval> ng b65331: Null PMC access in invoke()␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[06:09] <diakopter> ng: {}()[0]=0

[06:09] <p6eval> ng b65331: Null PMC access in can()␤current instr.: '!postcircumfix:<[ ]>' pc 278104 (src/gen/core.pir:33442)␤

[06:11] <diakopter> ng: { { { { { Mu } } } } }()()

[06:11] <p6eval> ng b65331: invoke() not implemented in class 'Mu'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[06:21] <diakopter> ng: multi token() { }; token infix:<token> { };

[06:21] <p6eval> ng b65331: Method 'isa' not found for invocant of class 'Undef'␤current instr.: 'perl6;Perl6;Actions;_block956' pc 145792 (src/gen/perl6-grammar.pir:29583)␤

[06:25] *** JimmyZ joined
[07:02] <saschi> good morning

[07:09] *** Su-Shee joined
[07:12] <Su-Shee> good morning

[07:21] *** kaare joined
[07:21] *** kaare is now known as Guest43202

[07:31] *** Baggiokwok left
[07:33] *** Baggiokwok joined
[07:40] *** JimmyZ left
[07:48] <jaldhar> Good morning.  Anyone know why when building the latest rakudo, I get "No ICU lib loaded" when trying to do unicode stuff?

[07:49] <jaldhar> I do have ubuntus' libicu-dev package installed

[07:50] <jaldhar> e.g. say "\c[GUJARATI LETTER JA]"; gives the error

[07:53] <Tene> jaldhar: your parrot was probably compiled without ICU enabled.  Check the configure output.

[07:55] <jaldhar> ah parrot.  Yes I noticed it didn't download parrot so it must be using the old ubuntu parrot or one of my previous experiments.

[07:55] <jaldhar> Will try again...

[07:55] *** iblechbot joined
[07:55] <Tene> Yes, that would do it. :)

[07:55] <Tene> Glad to help.

[08:03] *** cognominal left
[08:12] <jaldhar> say "\c[GUJARATI LETTER JA]\c[GUJARATI LETTER LA]\c[GUJARATI LETTER DHA]\c[GUJARATI LETTER RA]";

[08:12] <jaldhar> જલધર

[08:13] <jaldhar> \o/

[08:13] *** cognominal joined
[08:14] <diakopter> ja la dha ra

[08:14] <diakopter> oh. heh

[08:15] <jaldhar> yeah.  Gujaratis typically don't pronounce the a at the end of syllables which is why the English transliteration of my name is missing a couple

[08:16] <sjohnson> snurghi

[08:18] *** snearch joined
[08:19] *** snearch left
[08:19] *** snearch_ joined
[08:29] *** snearch_ left
[08:29] *** snearch_ joined
[08:30] *** snearch_ left
[09:00] *** mj41 left
[09:09] *** agentzh left
[09:09] *** agentzh joined
[09:11] *** dakkar joined
[09:17] *** krakan left
[09:18] *** lestrrat is now known as lest_away

[09:25] *** meneldor joined
[09:28] <jaldhar> trans substitutes one character in an array with a character from another.  Which operator does one to many mapping?

[09:28] <moritz_> jaldhar: also trans

[09:28] <jaldhar> hmm...

[09:29] <moritz_> rakudo: say 'abc'.trans([<a b c>] => [12, 34, 56])

[09:29] <p6eval> rakudo 3867ff: 123456␤

[09:29] <moritz_> rakudo: say 'aba'.trans([<a b c>] => [12, 34, 56])

[09:29] <p6eval> rakudo 3867ff: 123412␤

[09:30] <moritz_> hugme: list projects

[09:30] <hugme> moritz_: I know about book, gge, hugme, ilbot, json, november, nqp-rx, nqpbook, perl6-examples, proto, svg-matchdumper, svg-plot, temporal-flux-perl6syn, tufte, web

[09:33] <jaldhar> moritz: 

[09:33] <jaldhar> my @tr = ( "\C[DEVANAGARI LETTER JA]" => 'ja' );

[09:33] <jaldhar> my $s = "\C[DEVANAGARI LETTER JA]";

[09:33] <jaldhar> $s.trans(@tr).say;

[09:34] <jaldhar> doesn't give 'ja'.

[09:35] <moritz_> that's because you're passing an array, not a pair

[09:36] <moritz_> rakudo: my @tr = ( "\C[DEVANAGARI LETTER JA]" => 'ja' ); my $s = "\C[DEVANAGARI LETTER JA]"; $s.trans(|@tr).say;

[09:36] <p6eval> rakudo 3867ff: jaaaaaaaaaaaaaaaaaaaaaa␤

[09:36] <moritz_> wtf?

[09:36] <jaldhar> yup

[09:37] <moritz_> rakudo: say "\c[DEVANAGARI LETTER JA]"

[09:37] <p6eval> rakudo 3867ff: ज␤

[09:37] <moritz_> rakudo: say "\C[DEVANAGARI LETTER JA]"

[09:37] <p6eval> rakudo 3867ff: C[DEVANAGARI LETTER JA]␤

[09:37] <moritz_> jaldhar: that's the problem

[09:37] <moritz_> jaldhar: you need to use a lower-case \c

[09:37] <moritz_> \C only makes sense in regexes, iirc

[09:38] <jaldhar> but I am using \c

[09:39] <moritz_> 10:33 < jaldhar> my @tr = ( "\C[DEVANAGARI LETTER JA]" => 'ja' );

[09:39] <moritz_> that's a capital C

[09:39] <moritz_> not c

[09:39] <moritz_> rakudo: my @tr = ( "\c[DEVANAGARI LETTER JA]" => 'ja' ); my $s = "\c[DEVANAGARI LETTER JA]"; $s.trans(|@tr).say;

[09:39] <p6eval> rakudo 3867ff: j␤

[09:39] <jaldhar> hmm my IRC client capitalized it?  It is definitely \c in my code

[09:40] <moritz_> then it's time to get another IRC client :-)

[09:40] <jaldhar> and it should give ja not j

[09:40] <moritz_> that I agree with

[09:41] <moritz_> rakudo: my @tr = ( "\c[DEVANAGARI LETTER JA]" => 'ja' ); my $s = "\c[DEVANAGARI LETTER JA]"; $s.trans(@tr[0]).say;

[09:41] <p6eval> rakudo 3867ff: j␤

[09:41] <moritz_> rakudo: my @tr = ( "\c[DEVANAGARI LETTER JA]" => 'ja' ); my $s = "\c[DEVANAGARI LETTER JA]"; $s.trans(|@tr[0]).say;

[09:41] <p6eval> rakudo 3867ff: flattened parameters must be a hash or array␤in Main (file <unknown>, line <unknown>)␤

[09:42] <moritz_> rakudo: "\c[DEVANAGARI LETTER JA]".trans(["\c[DEVANAGARI LETTER JA]"] => "ja").say

[09:42] <p6eval> rakudo 3867ff: j␤

[09:42] <moritz_> rakudo: "\c[DEVANAGARI LETTER JA]".trans(["\c[DEVANAGARI LETTER JA]"] => ["ja"]).say

[09:42] <p6eval> rakudo 3867ff: ja␤

[09:42] <moritz_> jaldhar: ah

[09:42] <moritz_> jaldhar: if the RHS of the pair is an array, it uses the array elements

[09:42] <moritz_> jaldhar: if it's a string, it uses the first character of the string

[09:43] <moritz_> that's... confusing and not very DWIMmy

[09:44] <moritz_> but it conforms to the spec

[09:44] <moritz_> http://perlcabal.org/syn/S05.html#Transliteration

[09:44] *** krakan joined
[09:46] <jaldhar> even with an array I still get only j

[09:46] <jaldhar> oh wait

[09:54] <jaldhar> one last question.  In the line

[09:54] <jaldhar> $line.comb.trans(@tr).join('').say

[09:55] <jaldhar> The output still gives a space between each character group.  i.e. ja la dha ra

[09:55] <jaldhar> how do I supress that?

[09:55] <moritz_> leave out the .comb

[09:55] <moritz_> it splits it into characters, and returns a list

[09:55] <moritz_> and then calling .trans on it treats it as a string again

[09:56] <moritz_> and the default joining uses a space as the separator

[09:56] <jaldhar> ok got it.  The last time I tried it, rakudo needed the comb to split the line into characters.

[09:59] *** payload joined
[10:22] <avar> 6/w 4

[10:24] *** riffraff joined
[10:28] *** GeJ joined
[10:32] <jnthn> morning #perl6

[10:32] <Juerd> Good morning!

[10:33] <frettled> Good #perl6!

[10:33] *** frettled sets mode: +o jnthn

[10:33] <Juerd> frettled: It appears not to have been svnweb, but trac instead

[10:33] <frettled> aha

[10:34] <frettled> So no more bugtracking.  ;)

[10:34] <moritz_> I think taking down trac wouldn't hurt too much

[10:34] <Juerd> http://juerd.nl/i/5e6f1b41fb0beb7f878d01fe3b069776.png

[10:34] <moritz_> basically it's just spam

[10:34] <Juerd> http://juerd.nl/i/837c8ca338c036903129875e8147f0c0.png

[10:34] <frettled> eh, urh, yes

[10:34] <Juerd> Digging up that timeline takes a long time, and when Googlebot does that for many dates at once, boom.

[10:35] <frettled> Juerd: so it was just a red herring that the webserver was busy in the /svnweb/ directory when using lots of memory, I see.

[10:35] <Juerd> I think so

[10:35] <Juerd> I had disabled svnweb and then the gigantic load increase happened again

[10:36] <frettled> Elimination works :)

[10:37] <Juerd> Now let's hope that either nobody really needs trac, or someone can fix it.

[10:37] <Juerd> 02:59 <@diakopter> I got chided the other week for disabling dev.pugscode.org

[10:37] <Juerd> 03:01 <@diakopter> Juerd: ^^

[10:37] <Juerd> 03:02 <@Juerd> I don't know what chided means but it's probably no good

[10:37] <Juerd> 03:02 <@Juerd> Whoever finds and fixes the cause, can reenable it afterwards :)

[10:37] <Juerd> (dev.pugscode.org is trac)

[10:38] <frettled> aha

[10:39] <frettled> If someone feels like implementing captcha plus a hidden input field that must be empty, then that could help a lot.

[10:39] <jaldhar> I can't resist...one more question.  If I wanted to make an array of pairs out of two arrays.  Is this the right way to go about it? @c = @a >>=><< @b;

[10:39] <jaldhar> ?

[10:39] <frettled> The trick is to hide the input field with CSS; web scrapers don't know what to make of that.

[10:40] <Juerd> Ehm

[10:40] <Juerd> Most web scrapers don't even see css, so they don't see it's hidden either.

[10:40] <Juerd> And it's likely that they have a prefab spam template for trac anyway

[10:40] <moritz_> rakudo: say (<a b> »=>« <c d>).perl

[10:40] <p6eval> rakudo 3867ff: Confused at line 2, near "\x{bb}=>\x{ab} <c d>"␤in Main (file <unknown>, line <unknown>)␤

[10:40] <huf> so add some js trickery to it

[10:41] <frettled> Juerd: that's the point

[10:41] <Juerd> huf: Do you feel like implementing this? :)

[10:41] <moritz_> jaldhar: I think it should work

[10:41] <Juerd> frettled: Oh. Then I don't understand how it would work ;)

[10:41] <frettled> Juerd: if the field has values in it, it means it's spam

[10:41] <Juerd> Ah!

[10:41] <frettled> usually, they fill it with junk values

[10:41] <moritz_> rakudo: say %(<a b> Z <c d>).pairs.perl

[10:41] <Juerd> That's a smart trick

[10:41] <p6eval> rakudo 3867ff:  ( no output )

[10:42] *** lest_away is now known as lestrrat

[10:42] <frettled> huf: javascript is bad because it means that paranoid people can't use your website.

[10:42] <moritz_> jaldhar: the trick with the zip operator works locally, I have no idea why p6eval doesn't like it

[10:42] <huf> frettled: yeah, i knew that was going to come up ;)

[10:42] <huf> w3m users ftw

[10:42] <frettled> I just use NoScript when using Firefox.

[10:42] <moritz_> jaldhar: (and need to apologize for asking, these are interesting questions)

[10:43] <frettled> In Opera, I disable JS by default, and then edit site preferences for trusted websites.

[10:43] *** agentzh left
[10:44] <jaldhar> moritz: I hope my questions help in some way.  I'll brb and try your suggestions.

[10:49] <jnthn> std: <a b c> >>=><< (1,2,3)

[10:49] <p6eval> std 29531: ok 00:01 108m␤

[10:49] <jnthn> Probably should work, then...

[10:52] <frettled> std: <a b c> »=>« (1,2,3)

[10:52] <p6eval> std 29531: ok 00:01 106m␤

[10:52] <frettled> just checking ;)

[10:53] <moritz_> rakudo: say Pair.new('a', 'b').perl

[10:53] <p6eval> rakudo 3867ff: undef => undef␤

[10:53] <frettled> Is there an appropriate unicode symbol for =>, which is supported by Perl 6?

[10:53] <moritz_> nope

[10:53] <frettled> ng: say Pair.new('a', 'b').perl

[10:53] <p6eval> ng b65331: Pair.new(:key(Mu), :value(Mu))␤

[10:53] <Juerd> Hm. Can't we just go one step further and use µ instead of Mu? :)

[10:54] <frettled> But that's an important symbol!  Quick, halt all development until we can fix that!  ;)

[10:54] <frettled> Juerd: \o/

[10:54] <Juerd> It's in latin1 even.

[10:54] <Juerd> The meaning of Mu would get SO obscure :)

[10:54] <frettled> Juerd: except that µ isn't «mu» :(

[10:54] <frettled> as if it wasn't obscure already :D

[10:54] <frettled> it could be a symbolic cow.

[10:54] <Juerd> Good point there :)

[10:55] <Juerd> No, that would be Moo

[11:04] *** clintongormley joined
[11:10] *** meppl joined
[11:18] <frettled> Yes, but the pronunciation is very nearly the same.  :D

[11:18] <mathw> Is there a cow in unicode?

[11:19] <moritz_> copy on write? :-)

[11:19] <mathw> no, a cow that goes moo

[11:20] <moritz_> COW implemented in Moose? *g*

[11:20] <mathw> argh

[11:21] <clintongormley> in Perl6, cows go Mu

[11:21] <mathw> Kopfschmerzen

[11:21] *** cotto_work left
[11:25] <frettled> besser als Herzschmerzen

[11:26] <moritz_> besser als Herzversagen :-)

[11:32] <mathw> probably

[11:35] *** araujo left
[11:40] <Su-Shee> in Perl 6, there is no nothing, there is mu. 

[11:45] *** baz joined
[11:47] *** baz left
[11:47] *** baz joined
[11:48] <Su-Shee> isn't this something where a rakudo example blogged would nicely fit in? http://transfixedbutnotdead.com/2010/01/13/anyone_for_metaprogramming/

[11:49] *** payload left
[11:51] *** draegtun joined
[11:52] <mathw> Su-Shee: yes

[11:53] <sjohnson> mu == nothingness in Japanese

[11:53] <huf> but in english it means somethig different

[11:53] *** bluescreen joined
[11:54] <Su-Shee> sjohnson: I know. :) 

[11:54] <Su-Shee> german cows say muh. 

[11:54] <mathw> english cows say moo

[11:54] <mathw> or sometimes mooooooo

[11:54] <mathw> if they're trying to get an urgent point across

[11:55] <Su-Shee> yes, german cows can extend the u to muuuuuuuuh. 

[11:55] <huf> ours say "mú", unless they're fighting for the right of bovine freedom

[11:55] <Su-Shee> huf: as long as they're not suddenly saying mü ;)

[11:56] <huf> no, that's μ

[11:56] <saschi> well

[11:56] <saschi> that's true

[11:57] <draegtun> Su-Shee: Like this - http://gist.github.com/276591

[11:57] <Su-Shee> draegtun: ah, yours anyway. :)

[11:57] <draegtun> :-)

[11:58] * Su-Shee is looking forward to the book "metaprogramming in perl 6" and "higer order six" ;)

[11:59] <draegtun> I have a question on my gist.   How do you define dynamic methods in perl6?

[11:59] <draegtun> ie. in Perl5:  *{'subname'} = sub { ... };

[12:00] <draegtun> lots of trawling didn't turn up anything :(

[12:00] <sjohnson> well bed time!!! cya

[12:00] <moritz_> draegtun: it probably will work through the metaclass

[12:01] <jnthn> draegtun: That'd be something done through the metamodel; Rakudo master doesn't provide a good way to do it yet. We've got a branch that would let you do it though, or almost would.

[12:01] <moritz_> draegtun: so you can say things like YourClass.^add_method('name', sub { ... })

[12:01] <draegtun> mortiz_: can u give me some pointers to docs.  I trawled for metaclass but couldn't find anything specific

[12:02] <draegtun> moritz_: ah... tried something close to that.. let me just try it again :)

[12:02] <moritz_> as jnthn said, it probably doesn't quite work yet

[12:02] <moritz_> draegtun: http://github.com/rakudo/rakudo/blob/ng/docs/metamodel.pod

[12:05] <draegtun> just tested it and it does work!

[12:05] <moritz_> cool

[12:05] <moritz_> draegtun: then you're encouraged to reply to http://transfixedbutnotdead.com/2010/01/13/anyone_for_metaprogramming/ :-)

[12:06] <draegtun> I'm doing a followup post to that with Perl6 (re: gist)

[12:07] <moritz_> cool; please post the URL of your post here once you're done

[12:07] <draegtun> btw:  draegtun == transfixedbutnotdead :)

[12:07] <moritz_> oh

[12:07] *** baz left
[12:08] *** Baggiokwok left
[12:08] <Su-Shee> though I really liked the blogname fingernailsinoatmeal 

[12:10] *** Baggiokwok joined
[12:11] <draegtun> I've just updated the gist with the ^add_method change

[12:11] <draegtun> I'll do a blog on it later on or tomorrow morning

[12:12] <draegtun> many thanks for you help moritz, jnthn

[12:16] <Su-Shee> hm, the perl 6 example looks very nice, visually compared to the ruby and javascript code. 

[12:18] <draegtun> Su-Shee: Methinks so to

[12:19] *** cognominal left
[12:20] <Su-Shee> and I really mean it, it just hit me how clean perl 6 looks.

[12:22] <draegtun> Su-Shee: yep... I found it very intuitive.  Everything worked as I expected. Only bumps in road was "is also" to reopen class (trawling web seemed to bring up "is augment*" most which didn't work) and the dynamic method (^add_method)

[12:23] <draegtun> I love the:  "$drew does ThrowStar;" bit

[12:23] *** cognominal joined
[12:24] <moritz_> ng: class A { }; augment class A { method b { say "hi" } }; A.b()

[12:24] <p6eval> ng b65331: hi␤

[12:24] <draegtun> did try:  $drew does role { ... };

[12:24] <draegtun> but that didn't work

[12:25] *** cognominal left
[12:25] <moritz_> it's just rakudo (master branch) that's behind

[12:25] <moritz_> std: my $drew; $drew does role { ... };

[12:25] <jnthn> draegtun: It will in the future; anonymous roles are just not yet implemented.

[12:25] <p6eval> std 29531: ok 00:01 109m␤

[12:25] <draegtun> moritz_:  yes came across that but I preferred   class A is also {}    Is there a difference?

[12:25] *** cognominal joined
[12:26] *** payload joined
[12:26] <moritz_> draegtun: 'is also' is removed from the spec

[12:26] <draegtun> moritz_:  re: does role - Excellent... very intuitive

[12:26] <moritz_> draegtun: because it collides with a potential class named 'also'

[12:27] <draegtun> moritz_:  OK... I'll change that to "augment class A {}" then

[12:27] <moritz_> draegtun++ #nice blog post

[12:28] <moritz_> draegtun++ # exploring Perl 6

[12:30] <draegtun> moritz_:  augment doesn't work for me in my version of rakudo :(

[12:30] <moritz_> draegtun: yes, it only works in the "ng" branch :/

[12:31] <draegtun> moritz_:  OK... I'll put that in the blog post about "augment"

[12:31] <meneldor> guys is this http://cog.cognitivity.com/perl6/1_intro/ enough up to date for OO learning?

[12:32] <jnthn> draegtun: The spec changed and Rakudo is still catching up. It's done in a branch, so it'll land in master in not too long, hopefully. :-)

[12:33] <moritz_> meneldor: I wouldn't recommend it, it's full of unclear terminology

[12:33] *** ruoso joined
[12:33] *** fridim_ joined
[12:33] <meneldor> moritz_:  please tell me where to learn about p6 OO 

[12:33] <moritz_> meneldor: the perl 6 book currently being written has one chapter on classes and one on roles

[12:34] <moritz_> http://github.com/perl6/book/

[12:34] <meneldor> thank you

[12:34] <meneldor> im starting to learn from wrong places for second time

[12:34] <meneldor> there are too much obsolete tutorials

[12:35] <moritz_> aye

[12:35] <moritz_> that's why I started perl6.org, to link to those which are (mostly) up-to-date

[12:37] *** baz joined
[12:37] <moritz_> (just an example for the inaccuracies: http://cog.cognitivity.com/perl6/1_intro/2.html the "properties" are actually called "traits", and you can't just make them up; either you have to use existing traits, or write roles which are specifically designed to work as traits)

[12:38] <moritz_> also it doesn't show what you can do with these "properties", so I guess the author hasn't really understood them

[12:38] *** jaldhar left
[12:39] <meneldor> :) so if i learn p6 "that way" ill be completely confused later

[12:39] <meneldor> those people have to remove these documents or keep them up to date

[12:40] <moritz_> on http://cog.cognitivity.com/perl6/ at least they write "IMPORTANT: This document is obsolete. The design of Perl6 has changed in important ways since this was written: refer to the Perl6 documentation efforts elsewhere. These pages will stay up for archival interest only: don't rely on them! -- Mike"

[12:42] *** rodi joined
[12:48] <meneldor> so this is my bad :) i have to read more carefuly

[12:49] *** payload left
[12:50] *** payload joined
[12:50] *** iblechbot left
[12:50] <moritz_> well, if google sends you straight to a sub page, you'll never see that warning

[12:50] *** mikehh joined
[12:52] <takadonet> morning all!

[12:53] *** SmokeMachine joined
[13:02] *** baz left
[13:04] *** takadonet left
[13:17] <moritz_> btw I thought http://cog.cognitivity.com/perl6/  looked like a wiki, and registered, but I couldn't actually edit anything

[13:18] *** zibri left
[13:25] *** ignacio_ joined
[13:26] <huf> hai guis, what does "ningen nante" mean in japanese?

[13:26] <huf> i have a hunch someone here speak it

[13:34] <Su-Shee> afaik it's some singer. 

[13:35] *** breinbaas joined
[13:42] *** plainhao joined
[13:42] *** bpphillips joined
[13:43] *** payload left
[13:52] *** Baggiokwok left
[13:53] *** Lorn joined
[13:54] *** perlpilot joined
[13:55] <perlpilot> feather is out of ptys again.

[13:56] *** payload joined
[13:56] <frettled> Hmm, that's a typical xen problem IIRC.  Is this a xen thingy?

[13:57] <perlpilot> dunno if Juerd uses xen or one of the other virtualization thingys

[13:57] <frettled> s/xen problem/xen configuration problem/

[13:57] <frettled> 2.6.18-6-xen-686

[13:58] <frettled> looks like it

[13:59] <frettled> Juerd: the pty problem may have something to do with udev support

[14:03] *** ignacio_ left
[14:03] *** slavik left
[14:04] <Juerd> It is a xen thing, yes

[14:05] <Juerd> I have a few dozen xen boxes, but only feather users a lot of pty's.

[14:05] <Juerd> Do you happen to know how to fix it?

[14:05] <Juerd> s/users/uses/

[14:05] *** takadonet joined
[14:06] * Juerd upgrades udev. Maybe that does something useful :)

[14:06] <frettled> Juerd: http://www.xen-support.com/?p=16

[14:07] <Juerd>  | You are currently upgrading udev to a version that is not compatible with the currently running   |  

[14:07] <Juerd>  | kernel.      

[14:07] <Juerd> Woops. Bailing out.

[14:07] <frettled> :D

[14:07] <perlpilot> Juerd++ frettled++

[14:08] <Juerd> Oh my. Do an ls /dev

[14:08] <Juerd> I think the current udev is also not quite compatible.

[14:08] <Juerd> At least not terribly functional

[14:08] <frettled> hmm

[14:08] <Juerd> 1;0 root@feather:/dev# /etc/init.d/udev start

[14:08] <Juerd> udev requires a kernel >= 2.6.26, not started. ... failed!

[14:08] <Juerd> Hah.

[14:08] <Juerd> And nobody noticed thus far? :)

[14:09] <frettled> ah, and Debian doesn't package Xen kernels > 2.6.18

[14:09] <frettled> (IIRC)

[14:09] <Juerd> They do

[14:09] <Juerd> Somewhere.

[14:09] <frettled> oh

[14:09] <frettled> perhaps in volatile or backports, then.

[14:09] <Juerd> But I don't really have time for that right now :(

[14:10] <frettled> and that requires a bit of attention to get right

[14:10] *** PhilHibbs joined
[14:10] <frettled> since you probably ought to do aptitude update && aptitude safe-upgrade

[14:10] <frettled> Is there any particular reason why it's running a mix of unstable and experimental=

[14:11] <frettled> s/=/?/

[14:13] *** takadonet left
[14:13] <frettled> perlpilot: I had two shells on feather, I logged out from one now.

[14:13] <frettled> so that might help a tiny bit

[14:14] <perlpilot> frettled: thanks.  :)

[14:14] *** slavik joined
[14:14] <perlpilot> Juerd: anyone else have root on the "real" feather that could do it?

[14:14] <moritz_> any ideas what I could blog about in the upcoming 5 hours of train ride?

[14:15] <slavik> moritz_: how to install rakudo?

[14:15] <mathw> moritz_: http://transfixedbutnotdead.com/2010/01/13/anyone_for_metaprogramming/

[14:15] <moritz_> slavik: that's covered in three different places already

[14:15] <perlpilot> slavik: that's been done a few times and hasn't changed since.

[14:15] <slavik> oh, ok

[14:16] <moritz_> mathw: the author has already told us that he'll write a Perl 6 followup

[14:16] <mathw> woo

[14:16] <perlpilot> moritz_: blog about book material  :)

[14:17] <moritz_> perlpilot: :-)

[14:17] <frettled> I'm also looking for something to blog about :)

[14:17] *** perlpilot left
[14:19] *** iblechbot joined
[14:20] <Juerd> frettled: Too many people have had root access on feather, and most choices were never documented

[14:21] *** ignacio_ joined
[14:22] <frettled> yay

[14:23] *** PhilHibbs left
[14:23] <Juerd> It's unlikely that you'll encounter a bigger mess in debian context, except perhaps a box where even more things are custom compiled :)

[14:24] <Juerd> I've seen the "Yes, do as I say" safety prompt a few times on feather, when trying to upgrade.

[14:25] <Juerd> (For those who are unfamiliar with that: apt asks you to type this sentence when you're about to uninstall a vital package; in general that shouldn't happen when upgrading.)

[14:26] <Juerd> I think that unless someone wants to find out what goes on on feather1, perhaps a new virtual machine should be erected and the old one deprecated

[14:27] <frettled> I think that's a very sound idea.

[14:28] <frettled> Also, it could pay to separate functionality a bit more.

[14:28] <frettled> Perhaps use mpm-itk for different virtualhosts, that will make it easier to see which is the culprit/victim.

[14:29] <frettled> Unfortunately, I haven't had a chance of learning how to use mpm-itk yet, too little time on my hands.  :(

[14:29] <Juerd> These things are also from before the time feather was virtualised

[14:29] <Juerd> There's a different VM for production stuff, but some things were never migrated there.

[14:29] <frettled> /o\

[14:29] <frettled> they were never production ready, then ;)

[14:29] <moritz_> it would be good to migrate svn there

[14:29] <Juerd> frettled: Agreed.

[14:30] <Juerd> moritz_: Now all we need is someone to do it :)

[14:30] <moritz_> Juerd: right

[14:30] <Juerd> (and maintain it)

[14:30] <moritz_> and migrate commitbit along with it :/

[14:30] <Juerd> Commitbit has been the cause of several problems in the past.

[14:30] <Juerd> I forgot what kind of problems.

[14:31] * moritz_ thinks about writing something more lightwight on top of an IRC bot

[14:31] <Juerd> That would perhaps make a little bit too much sense.

[14:32] <PerlJam> moritz_: you can blog about your experiences setting up the new feather  ;-)  When's that train ride again?  :)

[14:32] <moritz_> too soon :-)

[14:32] <moritz_> I'd much prefer to just convert it all to git, and put it up on github

[14:33] <PerlJam> \o/

[14:33] *** moritz_ sets mode: +o PerlJam

[14:34] <moritz_> but it requires some more thoughts and planning

[14:34] <moritz_> but that's something I could blog about, yes

[14:34] <frettled> I still need a blogging topic! :D

[14:34] <moritz_> I think I've missed to 10 days deadline for the ironman anyway

[14:35] <moritz_> but since my score was never recorded properly... whatever

[14:40] <Juerd> frettled: Blog about the mess you found when you first logged in on feather yesterday :)

[14:41] <mathw> Blog about something utterly terrible but ultimately insignificant you heard on the news today, and how it made you think of a cool thing in Perl 6

[14:45] <frettled> Juerd: heh

[14:46] <frettled> mathw: also a nice idea

[14:47] <mathw> of course, it only works if he did think of a cool thing in Perl 6

[14:49] *** jaldhar joined
[14:51] * Juerd closed a shell, so there's a pty available now :)

[14:52] <Juerd> Be quick!

[14:52] <Juerd> :P

[14:53] *** cognominal left
[14:54] *** colomon__ joined
[14:54] *** colomon left
[14:54] *** colomon__ is now known as colomon

[14:58] *** takadonet joined
[14:59] *** iblechbot left
[15:03] *** colomon_ joined
[15:03] *** colomon left
[15:03] *** colomon_ is now known as colomon

[15:05] *** cdarroch joined
[15:05] <takadonet> morning colomon

[15:09] *** nihiliad joined
[15:09] *** nihiliad left
[15:13] *** perigrin_ joined
[15:13] *** orevdiabl joined
[15:13] *** nothingmuch left
[15:13] *** tomaw_ left
[15:13] *** hatseflats left
[15:13] *** revdiablo left
[15:13] *** perigrin left
[15:14] *** Psyche^ joined
[15:14] *** hatseflats joined
[15:14] *** tomaw_ joined
[15:18] *** stepnem left
[15:23] *** KyleHa joined
[15:23] *** stepnem joined
[15:25] *** leedo joined
[15:26] *** Patterner left
[15:26] *** Psyche^ is now known as Patterner

[15:26] *** leedo left
[15:28] *** Guest43202 left
[15:30] *** soupdragon joined
[15:34] *** simcop2387_ is now known as simcop2387

[15:36] <saschi> noch wer da?

[15:40] *** clintongormley left
[15:45] *** araujo joined
[15:48] *** jaldhar left
[15:51] *** ash_ joined
[15:52] <ash_> jnthn: ping?

[15:52] <colomon> takadonet: morning

[15:53] * colomon has glasses.  what a strange thing!

[15:53] *** mberends joined
[15:54] <mdxi> glasses++

[15:56] <ash_> how do i leave a message for someone again? i forget

[15:56] <jnthn> ash_: phenny tell ...

[15:56] <jnthn> oh, wait...

[15:56] <jnthn> ash_: pong! :-)

[15:56] <ash_> lol

[15:56] <colomon> ash_: phenny tell masak ....

[15:57] * jnthn was afk making a cuppa and missed the ping :-)

[15:57] <mberends> phenny, tell ash_ something

[15:57] <phenny> mberends: I'll pass that on when ash_ is around.

[15:57] <ash_> $P1= get_hll_global 'Role'

[15:57] <phenny> ash_: 15:57Z <mberends> tell ash_ something

[15:57] <ash_>     $P0 = '&infix:<~~>'(mixin_role, $P1)

[15:57] <ash_>     say $P0  # inside add_meta_method returns 0 

[15:57] <ash_> that's why the infix:<does> isn't being dispatched

[15:58] *** pnate left
[15:58] <jnthn> ash_: Oh, that is...odd...

[15:58] <jnthn> ash_: But good find.

[15:58] *** pnate joined
[15:59] <jnthn> That's an easier point to debug from.

[15:59] <ash_> so, P6role ~~ Role = 0

[15:59] <jnthn> ash_: Oh, gah, yes. Hm.

[15:59] <jnthn> ash_: Does liberalizing infix:does's signature a bit help?

[15:59] <jnthn> e.g. if you s/Role/Mu/

[16:00] <ash_> probably, i'll try

[16:00] <jnthn> It's in src/core/operators.pm iirc.

[16:01] <colomon> jnthn: don't know if you saw this weirdness in the backlog:

[16:01] <colomon> ng: my $a = List.new; say $a.WHAT; say $a.elems;

[16:01] <p6eval> ng b65331: List()␤Method 'elems' not found for invocant of class ''␤current instr.: 'perl6;Mu;' pc -1 ((unknown file):-1)␤

[16:01] <ash_> jnthn: it gets further, but fails on 'Method '!select' not found for invocant of class 'P6role''

[16:03] *** zaphar_ps joined
[16:03] <jnthn> ash_: aha.

[16:04] <jnthn> ash_: That probably means mixing in parametric roles is broken.

[16:04] *** clintongormley joined
[16:04] <jnthn> Which woudln't surprise me.

[16:05] <jnthn> ash_: I can try and fix that.

[16:05] <jnthn> ash_: In the meantime rather than passing a P6Role you could try doing:

[16:06] <jnthn> oh, wait...

[16:06] <jnthn> No, that's a messy fix. :/

[16:06] <jnthn> I guess answer is to fix the real issue.

[16:06] <jnthn> ash_: I can do that later today...

[16:06] <jnthn> ash_: Part of it relates to an open question I postd here a day or two ago though.

[16:08] <ash_> ah, okay

[16:08] <ash_> well, i guess i'll go find something else to break and fix then, like Lists.elems :p

[16:09] *** Exodist left
[16:09] <colomon> List.new is the real issue, I'm pretty sure.  :)

[16:10] <ash_> ng: my $a = List.new; say $a.WHAT;

[16:10] <p6eval> ng b65331: List()␤

[16:10] <ash_> hmm

[16:10] <colomon> ng: my $a = list; say $a.WHAT; say $a.elems;

[16:10] <ash_> so is it probably not initializing the attribute? 

[16:10] <p6eval> ng b65331: List()␤0␤

[16:10] <ash_> o.0

[16:11] <jnthn> ash_: I'll try and think of other OO-ish tasks you may be interested in too. :-)

[16:11] <ash_> sure, would be gald to help

[16:11] <ash_> AUTO*? 

[16:11] <jnthn> ash_: My cold has been getting worse rather than better, so my thinkiness today is not on great form... :-/

[16:11] *** payload left
[16:12] <ash_> no good, its no biggy, i'll just try to find ng bugs if you don't think of anything, its not a big deal

[16:12] * colomon went to the doctor his morning for his cold...

[16:13] <colomon> *this

[16:14] *** meneldor left
[16:16] *** soupdragon left
[16:16] *** bloonix left
[16:19] *** araujo left
[16:21] *** araujo joined
[16:26] <sjn> jnthn: hey, I read that you're moving north? :)

[16:27] <jnthn> sjn: Yes!

[16:27] <sjn> jnthn: Malmö or Lund or something?

[16:27] <sjn> or further north

[16:27] <jnthn> sjn: Around there, yes.

[16:27] <jnthn> Not arctic circle far north. ;-)

[16:28] <sjn> Well, it'll be "close" to cph.pm at least :)

[16:28] <jnthn> Yeah.

[16:28] <jnthn> Closer to Oslo.pm :-)

[16:28] <sjn> do tell if you take a trip to Oslo though

[16:28] <sjn> really?

[16:28] <jnthn> erm

[16:28] <jnthn> closer than I am now ;-)

[16:28] <sjn> ah :)

[16:28] <jnthn> Not closer than to Copenhagen. :-)

[16:28] <ash_> i have class, i'll see if i can find the List.elems issue out, be back later

[16:29] <jnthn> Maybe I cam make an Oslo.pm meeting some month though. :-)

[16:29] *** ash_ left
[16:29] <jnthn> It's a train journey rather than a flight now. :-)

[16:29] <sjn> jnthn: well, I hope you'll enjoy staying in the land of the Mai-stang, Surströmning and Must :)

[16:30] *** mberends left
[16:31] <jnthn> sjn: I may give the surströmning a miss... :-)

[16:34] <sjn> booo! ;-)

[16:34] <sjn> ypi

[16:34] <sjn> you'll miss out on some of the best food in sweden!

[16:34] <sjn> ("best" on some as-of-yet undetermined scale, of course)

[16:34] <jnthn> There are many fermented substances I like, but I don't class herring as one of them. :-)

[16:35] <sjn> I'm sure you can aquire that taste, with a little effort ;-)

[16:35] <sjn> (and enough aquavit)

[16:40] *** araujo left
[16:41] <IllvilJa> jnthn: kudos to you for regarding 'surstr􏿽xF6mming' as fermented (which it is) and not rotten (which it really isn't, despite some slander ignorant souls spreads)...

[16:43] <jnthn> There's More Than One Way To Taste Bad. ;-)

[16:43] <jnthn> .oO( oops, no more kudos for me )

[16:45] <IllvilJa> jnthn: heh, 'surstr􏿽xF6mming' isn't the 'worst' Sweden has produced.  The candy known as 'Jungelvr􏿽xE5l' (English translation: "Djungle roars") at least makes US workmates of mine to retreat in horror when I offer it to them.

[16:45] *** araujo joined
[16:46] <IllvilJa> Maybe that says more about US candy taste than it says about 'Jungelvr􏿽xE5l'  though ;-).

[16:46] *** Exodist joined
[16:46] *** kaare_ joined
[16:47] <IllvilJa> ('Jungelvr􏿽xE5l' is licorice candy covered with salmiak powder or something similar that have a darn intense, almost corroding, licorice taste...)

[16:47] <jnthn> Oh, I like licorice.

[16:48] *** nihiliad joined
[16:48] *** payload joined
[16:48] <sjn> IllvilJa: that's not so bad....

[16:49] <Su-Shee> hm, my favorite licorice shop isn't available in english... 

[16:49] <sjn> the intensity doesn't last long, right?

[16:49] *** uniejo joined
[16:51] *** justatheory joined
[16:51] *** KyleHa left
[16:51] <IllvilJa> Well, I like them.  Yes, the intensity lasts for a moment just when you put them in your mouth (it is some sort of salmiak salt powder that covers them).  After that, they are just like any tasty licorice candy you chew on.  A URL is here: http://sv.wikipedia.org/wiki/Djungelvr%C3%A5l#Djungelvr.C3.A5l.  Swedish page, but check out the picture with 8 black candy pieces to the right, there you got them.

[16:52] *** KyleHa joined
[16:52] <jnthn> IllvilJa: Oh, I have had those!

[16:52] <jnthn> IllvilJa: I actually like them.

[16:52] <jnthn> Bit of a surprise the first time though. ;-)

[16:55] <jnthn> IllvilJa: I prefer these though: http://my.opera.com/kirstycat/blog/billar

[16:56] *** ruoso left
[17:00] *** xinming joined
[17:09] *** bpphillips left
[17:09] *** pnate2 joined
[17:09] <frettled> Juerd: blogified, sortof :)

[17:09] *** cotto_work joined
[17:11] *** ash_ joined
[17:12] *** xinming_ left
[17:13] <hejki> ng: sub postfix:<!>($n) { [*] (1..$n) }; say 5!;

[17:13] <p6eval> ng b65331: Unable to parse blockoid, couldn't find final '}' at line 1␤current instr.: 'perl6;Regex;Cursor;FAILGOAL' pc 1664 (src/stage0/Regex-s0.pir:907)␤

[17:14] <hejki> ng: sub postfix:<!>($n) { [*] (1..$n); }; say 5!;

[17:14] <p6eval> ng b65331: Unable to parse blockoid, couldn't find final '}' at line 1␤current instr.: 'perl6;Regex;Cursor;FAILGOAL' pc 1664 (src/stage0/Regex-s0.pir:907)␤

[17:15] <colomon>  hejki: I'm pretty sure .. still doesn't work properly in ng.  

[17:15] <colomon> [*] probably doesn't either.

[17:15] <hejki> ng: sub fac($n) { [*] (1..$n); }; say fac(5);

[17:15] <p6eval> ng b65331: Unable to parse blockoid, couldn't find final '}' at line 1␤current instr.: 'perl6;Regex;Cursor;FAILGOAL' pc 1664 (src/stage0/Regex-s0.pir:907)␤

[17:15] <hejki> mm..

[17:16] <ash_> ... works though

[17:16] <ash_> ng: say 1...3;

[17:16] <p6eval> ng b65331: 123␤

[17:16] <colomon> ng; sub postfix:<!>($n) { say $n }; 5!

[17:16] <ash_> but they kinda mean 2 different things, if only slightly different

[17:16] <hejki> ng: sub fac($n) { reduce { $^a * $^b }, (1..$n); }; say fac(5);

[17:16] <p6eval> ng b65331: Could not find non-existent sub &reduce␤current instr.: '&fac' pc 119 (EVAL_1:50)␤

[17:16] <hejki> rakudo: sub fac($n) { reduce { $^a * $^b }, (1..$n); }; say fac(5);

[17:16] <p6eval> rakudo 3867ff: 120␤

[17:16] <hejki> =(

[17:16] <colomon> ng: sub postfix:<!>($n) { say $n }; 5!

[17:16] <p6eval> ng b65331: sh: ./perl6: No such file or directory␤

[17:17] *** rodi left
[17:17] <colomon> I kind of think operator overloading doesn't work for new operators in ng yet either.

[17:17] *** rodi joined
[17:17] <hejki> ng: sub fac($n) { my $prod = 1; for 2..$n -> $x { $prod *= $x; }; $x }; say fac(5);

[17:17] <p6eval> ng b65331: sh: ./perl6: No such file or directory␤

[17:18] <colomon> yeah, it doesn't.

[17:18] <hejki> dang. it seems a real long way to got

[17:18] <hejki> s/t$$//;

[17:19] <colomon> ng: sub fac($n) { my $prod = 1; for 2...$n -> $x { $prod *= $x; }; $x }; say fac(5);

[17:19] <p6eval> ng b65331: Symbol '$x' not predeclared in &fac␤current instr.: 'perl6;PCT;HLLCompiler;panic' pc 137 (src/PCT/HLLCompiler.pir:101)␤

[17:19] <ash_> there is still always master rakudo 

[17:19] <colomon> :\ 

[17:19] <hejki> y :<

[17:19] <hejki> ng: sub fac($n) { my $prod = 1; my $x; for 2..$n -> $x { $prod *= $x; }; $x }; say fac(5);

[17:19] <p6eval> ng b65331: Method 'Num' not found for invocant of class 'Range'␤current instr.: 'perl6;Mu;' pc -1 ((unknown file):-1)␤

[17:20] *** pnate left
[17:21] <ash_> wonder what it would take to get new operators working in ng... that seems difficult

[17:21] *** rodi left
[17:22] <hejki> what's the current suggested parrot revision?

[17:23] <PerlJam> hejki: for master or ng?

[17:23] <hejki> master

[17:25] *** ingy left
[17:25] *** ingy joined
[17:30] <ash_> can you do a backtrace in parrot to see the stack frame if your not sure where you are? 

[17:30] <colomon> ash_: I believe it would take modifying the grammar on the fly to add new operators in ng.

[17:34] <ash_> colomon: sounds like a reasonable assumption, how does master handler it? by augmenting the grammar on the fly?

[17:36] *** jackyf joined
[17:36] <IllvilJa> jnthn: Regarding those 'bilar' (Swedish word for 'cars' BTW), our Swedish astronaut Christer Fugelsang got a special edition of those manufactured for him.  Instead of having the shapes of cars, the candy had the shape of space shuttles.  Only 100 bags were made though and unfortunately it were just a one off :-(.

[17:38] <IllvilJa> jnthn: but he took the opportunity to eat those in space in microgravity during a real time press conference, which were sort of fun :-).  Most of the bags were given to readers of his blog down here on earth.

[17:40] *** baest left
[17:44] *** ignacio_ left
[17:45] <Juerd> "Juerd had already stopped Apache, but someone -- I don't know who -- started it again at 12:00, probably anxious that SVN and such didn't work."

[17:45] <Juerd> frettled: Yea, that was probably /usr/local/bin/incredibly_ugly_hack_to_restart_apache

[17:45] <frettled> Juerd: oooh

[17:46] <frettled> my goodness, that's actually what its name is!

[17:46] <Juerd> That filename is one of the rare cases of good documentation on feather ;)

[17:46] <frettled> hee-hee

[17:46] <frettled> I don't understand what's happening, though.  I try to write shorter blog entries, but they just end up becoming longer and longer and longer.

[17:47] <Juerd> So far I'm enjoying the read :)

[17:47] <frettled> Soon I'll need to create a wiki page for each of my blog entries!

[17:47] <frettled> Juerd: \o/

[17:47] *** rodi joined
[17:48] <Juerd> "It's just as if someone was waiting for me to go idle in order to produce the problem that I was looking for." -- So horribly familiar.

[17:49] *** bluescreen left
[17:49] <Juerd> frettled: I don't think the spam itself is the DOS attack. I think Google's indexing of the spam might have been it :)

[17:49] <frettled> mmm :)

[17:49] <frettled> Juerd: good point.

[17:49] <Juerd> The IPs in the server-status screenshot are googlebots

[17:49] <frettled> aha!

[17:50] <Juerd> s/plural/singular/

[17:50] <frettled> excuse me while I edit reality.

[17:50] <Juerd> Getting that trac timeline page took 50 seconds when I tried it myself

[17:50] <Juerd> So that, times a few, lead to server death

[17:51] <Juerd> Googlebot isn't always very friendly. It has been crawling vortaro.nl for more than a year, averaging at 1 GB per month

[17:51] <Juerd> (More, if you count headers, but Apache doesn't)

[17:51] *** ignacio_ joined
[17:51] <frettled> Yahoo! is worse.

[17:51] * Juerd likes to think that Googlebot is in love with vortaro.nl

[17:51] <Juerd> It just can't get enough

[17:51] <frettled> I've blocked access to our webservers (we're a web hosting provider) from Yahoo!'s /16.

[17:52] <frettled> Juerd: hee-hee

[17:52] <frettled> But Google's bots usually don't come in large hunting packs.

[17:52] *** c0tt0 left
[17:53] <Juerd> Well, it initiates a new request once every so many seconds, usually

[17:53] <frettled> mm

[17:53] <frettled> Yahoo! have no such petty concerns.

[17:53] <Juerd> But apparently that interval is not increased when the responses take very long.

[17:53] <frettled> okay, that's hardly ideal.

[17:53] *** dakkar left
[17:54] <Juerd> At least, that's what I think was happening to feather

[17:54] <Juerd> In fact, perhaps the simple fix could be a robots.txt

[17:54] <Juerd> (Although Googlebot would probably kill the server again before checking robots.txt)

[17:55] <frettled> I think they check for it every time.

[17:55] <frettled> So if robots.txt blocks for Trac, that might help a bit.

[17:56] *** KyleHa left
[17:56] <Juerd> What makes a "time"?

[17:56] <frettled> Every time a bot starts indexing.

[17:57] <Juerd> When do you reckon that will be on dev.pugscode.org?

[17:58] <frettled> I have no clue :D

[17:59] <Juerd> :)

[18:00] *** ash_ left
[18:01] <frettled> Ooh, masakbot is submitting again!

[18:04] *** bluescreen joined
[18:08] *** nihiliad left
[18:16] *** |JackYF| joined
[18:18] *** riffraff left
[18:20] *** jackyf left
[18:21] *** snearch_ joined
[18:26] *** soupdragon joined
[18:26] *** Chillance joined
[18:26] *** ash_ joined
[18:27] *** rodi left
[18:29] *** nihiliad joined
[18:30] <ash_> colomon: so... i think the issue is the List.new doesn't assign a value to $.values 

[18:31] <ash_> ng: my $a = List.new(values => (1, 2, 3)); 

[18:31] <p6eval> ng b65331:  ( no output )

[18:31] <ash_> ng: my $a = List.new(values => (1, 2, 3)); say $a.elems;

[18:31] <p6eval> ng b65331: get_pmc_keyed() not implemented in class 'List'␤current instr.: 'perl6;List;!generate' pc 11209 (src/builtins/Str.pir:187)␤

[18:31] <ash_> gives you a whole new error

[18:33] <ash_> ng: my $a = List.new(values => 'a'); say $a.elems;

[18:33] <p6eval> ng b65331: Method 'succ' not found for invocant of class ''␤current instr.: 'perl6;Mu;' pc -1 ((unknown file):-1)␤

[18:34] *** snearch_ left
[18:34] <ash_> so, List needs a new method to initialize all of its internal variables properly, what properly is, i am not sure yet

[18:34] <ash_> values, i think, needs to be a ResizablePMCArray but I am not sure

[18:39] *** stephenlb joined
[18:41] <jnthn> ash_: Sounds reasonable

[18:41] <jnthn> ash_: Maybe try like

[18:41] <jnthn> $P0 = new ['ResizablePMCArray']

[18:42] <jnthn> setattribute self, '$!values', $P0

[18:42] <jnthn> Somewhere

[18:42] <jnthn> brb, store

[18:42] <ash_> in src/core/List.pm i tried adding a method new(*@args) there but it's not being called

[18:46] *** Su-Shee_ joined
[18:46] *** Su-Shee left
[18:47] *** Su-Shee_ is now known as Su-Shee

[18:50] *** snearch_ joined
[18:51] *** colomon left
[18:51] *** snearch_ left
[18:51] *** colomon joined
[18:52] *** snearch_ joined
[18:52] <TimToady> .oO(backlog, or fix my mailserver...choices...choices...)

[18:53] *** mj41 joined
[18:54] *** simcop2387_ joined
[18:54] <jnthn> TimToady: Fixing your mail server gives you more things to read at the end of it. Backlogging gives you less things to read at the end of it. :-)

[18:55] <ash_> jnthn: where would i do that? Should i add a BUILD or a new to List? also, should I do it in the .pir or .pm? 

[18:56] <jnthn> ash_: BUILD may be a good place.

[18:56] <jnthn> Provided list doesn't have a PIR new method that's getting called, anyways.

[18:56] *** IllvilJa left
[18:56] <ash_> no, .new is falling back to Mu's 

[18:58] <jnthn> OK, that should wind up calling a BUILD you write then.

[19:00] <ash_> but List.new is supposed to be able to take a bunch of arguements to make the list, so you can do List.new(1, 2, 3); doesn't that mean i'd need to do a .new also? 

[19:01] <jnthn> BUILD is passed that argument.

[19:01] *** riffraff joined
[19:01] *** ive joined
[19:02] <jnthn> ash_: Take a look at some of the tests for a better idea of BUILD.

[19:02] <ash_> kk, i still don't know when to use new vs BUILD

[19:04] <jnthn> new = needs to actually manufacture an instance of the object 

[19:04] <jnthn> BUILD = does the init work for this particular class assuming we already have an object.

[19:05] *** simcop2387 left
[19:09] <ash_> well that fixes 1 issue... sorta, now i get:  get_pmc_keyed() not implemented in class 'Array' in List;!generate

[19:10] *** rgrau` joined
[19:15] *** simcop2387 joined
[19:17] <ash_> oh, got it

[19:19] *** supernovus joined
[19:20] <ash_> hm, no, it not raising an error but its not working right 

[19:27] *** simcop2387_ left
[19:29] *** KyleHa joined
[19:31] <lisppaste3> supernovus pasted "rakudo master build error" at http://paste.lisp.org/display/93395

[19:32] *** ruoso joined
[19:32] <ash_> supernovus what version of parrot are you using? 

[19:32] <supernovus> 1.9.0-devel

[19:32] <supernovus> I haven't been able to build rakudo in a while.

[19:33] <ash_> on ubuntu? 

[19:33] <supernovus> I tried the 'ng' branch and it died as well in a similar manner.

[19:33] <ash_> or linux? 

[19:33] <supernovus> Ubuntu 9.10 64bit

[19:35] <supernovus> blizkost dies on me too, haven't tried any other parrot languages.

[19:35] <ash_> yeah, i am not sure exactly what the problem is, are you using trunk parrot? or PARROT_REVISION parrot? 

[19:36] <supernovus> trunk

[19:36] <ash_> can you try with PARROT_REVISION trunk? 

[19:36] <ash_> its in build/PARROT_REVISION 

[19:37] <ash_> or do perl Configure.pl --gen-parrot and it automatically does it

[19:41] <ash_> brb, supernovus if your still here when i get back i'll see if i can help you figure out whats wrong

[19:41] *** ash_ left
[19:54] *** dakkar joined
[19:55] <TimToady> email back up, can backlog in peese

[19:58] *** ms16004 joined
[19:59] *** ms16004 left
[20:03] *** IllvilJa joined
[20:12] *** Chillance left
[20:12] *** ignacio_ left
[20:14] *** Chillance joined
[20:14] *** ash_ joined
[20:15] <supernovus> Well, rakudo built fine with the PARROT_REVISION version of parrot. So, it's parrot 'trunk' that is currently broken. blizkost still bails horridly, but I think it's been broken for a while.

[20:18] <ash_> blizkost hasn't been updated in a while

[20:19] <ash_> thats good PARROT_REVISION built for you, i think masak has been notified of the trunk one

[20:19] *** ignacio_ joined
[20:22] <ash_> well, i think there is a ticket in the bug tracker about it, i don't know if its all linux or just ubuntu but so far, someone else using ubuntu 8.10 had problems building it too, i am on os x and it builds fine for me with trunk parrot, gcc 4.2, might be gcc related, i am not sure

[20:22] *** clintongormley left
[20:23] *** fglock joined
[20:23] *** meppl left
[20:24] *** uniejo left
[20:25] <fglock> hi

[20:25] <PerlJam> greetings

[20:26] *** jonasbn joined
[20:26] <supernovus> ash_: using gcc 4.4.1 over here, so it may be a gcc related issue.

[20:27] <fglock> some news in miniperl6,

[20:27] <fglock>  $ perl mp6.pl -v -Bgo util/mp6.pl

[20:28] <fglock>  $ ./6.out util/mp6.pl

[20:28] <colomon> ash_: apologies for disappearing on you there.

[20:28] <ash_> no worries

[20:28] <fglock> the Go backend now can compile mp6 source

[20:29] <ash_> wait, so you can have miniperl6 with a Go backend? 

[20:29] *** arthur-_ left
[20:29] <ash_> doesn't Go use the gcc as a backend? 

[20:29] <fglock> not bootstrapped yet, needs writing some tools

[20:30] <ash_> thats cool

[20:30] <fglock>  $ ./6.out -Clisp util/mp6.pl    # compile mp6 to lisp, using Go

[20:31] <fglock> the speed is about the same as the perl5 backend

[20:32] <PerlJam> fglock: um ... how fast is the perl5 backend?

[20:33] <fglock> I can only compare between backends, Perl5 is 1x, Go is 1x, Javascript is 3x, Lisp is 5x

[20:34] <fglock> Parrot only runs 'hello, World!' for now

[20:34] *** riffraff left
[20:35] *** simcop2387_ joined
[20:35] <fglock> oh, and today I also tested with Java, through Rhino: 

[20:35] <fglock>   $ perl mp6.pl -Brhino -e ' say "hello, World!" '

[20:36] *** snearch_ left
[20:36] <fglock> checking Rhino speed now

[20:36] <fglock> hmm - not so easy, needs some scripting

[20:37] <fglock> will do later

[20:38] *** ignacio_ left
[20:38] <PerlJam> fglock: having a comparison between parrot and perl5 and others would be meaningful 

[20:39] <PerlJam> without the parrot metric, I can't get too excited about "as fast as the perl 5 backend"  :)

[20:39] <fglock> actually, Rakudo should be able to run mp6 directly

[20:40] *** simcop2387 left
[20:40] *** simcop2387_ is now known as simcop2387

[20:42] <fglock>  $ ./perl6 ~/projects/perlito/lib/Test.pm   # no errors!

[20:46] <fglock> (updating rakudo)

[20:52] *** ignacio_ joined
[20:54] *** meppl joined
[20:56] *** arthur-_ joined
[20:56] *** mikehh left
[20:56] *** mikehh joined
[20:59] *** meppel joined
[21:00] *** arthur-_ left
[21:00] <fglock> how can I set @*INC for rakudo?

[21:02] <fglock> PERL6INC and -I didn't work

[21:02] <ash_> fglock: are you in ng? 

[21:02] <supernovus> A rather obscure question... I can find the hex unicode representation of a character using "æ".ord.fmt("%04X");  Is there a way to return the character description that you can use in \c[]  (in this case "LATIN SMALL LETTER AE") ?

[21:02] <fglock> no, plain rakudo

[21:03] *** arthur-_ joined
[21:04] *** cotto_w0rk joined
[21:05] *** arthur-_ left
[21:06] *** japhb left
[21:07] *** plainhao left
[21:07] <TimToady> supernovus: not that I know; but check out qx/perl -e 'print do "unicore/Name.pl"'/ maybe

[21:08] <TimToady> rakudo: say qx/perl -e 'print do "unicore/Name.pl"'/;  # probable fail

[21:08] <p6eval> rakudo 3867ff: Confused at line 2, near "Name.pl\"'/"␤in Main (file <unknown>, line <unknown>)␤

[21:09] <TimToady> eh?

[21:09] <TimToady> rakudo: say qx[perl -e 'print do "unicore/Name.pl"'];  # probable fail

[21:09] <p6eval> rakudo 3867ff: operation not permitted in safe mode␤in Main (file /home/p6eval//p1/lib/parrot/1.9.0-devel/languages/perl6/lib/Safe.pm, line 24)␤

[21:09] *** bluescreen left
[21:10] *** cotto_working joined
[21:10] <TimToady> works locally though

[21:10] *** cotto_work left
[21:11] *** riffraff joined
[21:11] <Tene> fglock: PERL6LIB

[21:11] <Tene> supernovus: you'll need to write some code that talks to libicu

[21:11] <ash_> fglock: in master rakudo it checks your ~/.perl6/lib folder and the $perl6install/lib folder by default i know, i think it checks an enviorment variable dont' know which

[21:12] <ash_> but Tene++ knows apparently 

[21:12] <fglock> Tene: thanks!

[21:14] *** meppl left
[21:15] *** cotto_w0rk left
[21:18] *** |JackYF| left
[21:35] *** payload left
[21:42] *** japhb joined
[21:43] <fglock> I've fixed a couple of problems, but mp6 doesn't run in rakudo yet

[21:43] <fglock> sleep &

[21:43] *** fglock left
[21:46] *** patspam joined
[21:47] *** SmokeMachine left
[21:49] *** zaphar_ps left
[21:53] *** Su-Shee left
[22:00] *** s1n left
[22:00] *** lisppaste3 left
[22:00] *** lisppaste3 joined
[22:01] *** pnate joined
[22:04] *** KyleHa left
[22:04] *** riffraff left
[22:09] *** dakkar left
[22:10] <GeJ> Good morning everyone.

[22:12] *** tylerni8 joined
[22:12] *** tylerni7 left
[22:12] *** tylerni8 is now known as tylerni7

[22:13] *** pnate2 left
[22:14] *** ruoso left
[22:26] *** iblechbot joined
[22:30] *** jonasbn left
[22:31] <zamolxes> so were those actual search engine crawlers, or were they spammers?

[22:39] *** kaare_ left
[22:44] *** ive left
[22:48] <diakopter> zamolxes: ?

[22:49] <diakopter> oh, on feather/trac?

[22:52] *** hicx174 left
[22:59] *** jferrero joined
[22:59] *** like joined
[22:59] *** like left
[23:06] <zamolxes> cause yep

[23:06] <zamolxes> yep

[23:09] *** Juerd left
[23:09] *** Juerd joined
[23:10] <zamolxes> so, one important thing is adding %D to the format log. Then you can do stuff like : what types of requests are most expensive 

[23:10] *** PerlJam left
[23:10] *** PerlPilot joined
[23:10] <zamolxes> frettled: o/

[23:12] <zamolxes> and if I can help with the varnish part, i'm here, just let me know

[23:13] *** jferrero left
[23:15] *** jferrero joined
[23:18] *** rgrau` left
[23:20] *** ash_ left
[23:23] *** supernovus left
[23:29] *** hicx174 joined
[23:29] *** ash_ joined
[23:30] *** Psyche^ joined
[23:31] *** ignacio_ left
[23:39] <ash_> isn't BUILD supposed to be passed all of the arguments from new? 

[23:39] *** rjh left
[23:45] *** rjh joined
[23:45] *** Patterner left
[23:45] *** Psyche^ is now known as Patterner

[23:46] *** iblechbot left
[23:47] <ash_> ng's build isn't functioning properly 

[23:47] <diakopter> ng: ''

[23:47] <p6eval> ng b65331: sh: ./perl6: No such file or directory␤

[23:51] <frettled> zamolxes: Hey!  That's great!

[23:51] <diakopter> ng: ''

[23:51] <p6eval> ng b65331:  ( no output )

[23:52] <frettled> zamolxes: if you're around here sometime during the day, I'm sure Juerd is here, too, and we can talk a bit more about it, okay?  (I'm just popping by because of sleeplessness now)

