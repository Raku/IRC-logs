[00:00] *** thundergnat joined
[00:02] *** thundergnat left
[00:02] *** risou joined
[00:03] *** sftp left
[00:06] <dalek> 6model: 0d13a6c | diakopter++ | / (4 files):

[00:06] <dalek> 6model: [dotnet] implement coercive lt, le, gt, ge; add tests to 10-cmp.t

[00:06] <dalek> 6model: update LHF.txt ;)

[00:06] <dalek> 6model: review: https://github.com/jnthn/6model/commit/0d13a6cebc2fa21232a74c3029d7d83d90cbea6b

[00:06] <dalek> roast: 91b1991 | KodiB++ | S12-construction/construction.t:

[00:06] <dalek> roast: [construction.t] Added tests for an unreported bug fixed in Rakudo 037775eb.

[00:06] <dalek> roast: review: https://github.com/perl6/roast/commit/91b19912f60b66acedae7f42a43c7d0b6173028f

[00:06] <dalek> roast: b540d54 | KodiB++ | S (3 files):

[00:06] <dalek> roast: Removed some Rakudo TODOs for passing tests.

[00:06] <dalek> roast: review: https://github.com/perl6/roast/commit/b540d54c526fefc694329acae1a88d6c963c8904

[00:06] <dalek> rakudo: 037775e | KodiB++ | src/builtins/ (2 files):

[00:06] <dalek> rakudo: Tweaked Parcel.item.

[00:06] <dalek> rakudo: 

[00:06] <dalek> rakudo: This fixes the regression in trans.t introduced by 5ce8fcf.

[00:06] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/037775ebc6a7d6f2cf5835a4bd00e9099b3dcf22

[00:07] <diakopter> moritz_: we could add a 6model backend now

[00:07] <diakopter> now that basic control flow & comparisons & iterations work

[00:07] <diakopter> moritz_: for p6eval, I mean

[00:10] *** icwiener left
[00:36] *** timbunce joined
[00:36] *** timbunce left
[00:39] *** QinGW joined
[00:39] *** Bzek_ left
[00:39] *** Bzek joined
[00:44] *** mhitza joined
[00:46] *** stkowski left
[00:50] *** justatheory joined
[01:00] <lue> y o hai o/

[01:02] <sjohnson> HI

[01:02] *** colomon left
[01:02] *** colomon_ joined
[01:03] *** boggytwo left
[01:03] *** boggytwo joined
[01:11] *** meppl left
[01:17] *** ggoebel joined
[01:21] *** ggoebel left
[01:23] *** ggoebel joined
[01:23] <ggoebel> sorear: faster to compile and run sounds practical

[01:25] *** dd-sphere joined
[01:26] *** Chillance left
[01:28] *** ch3ck3r left
[01:49] *** ggoebel left
[02:11] *** mhitza left
[02:14] *** toebu joined
[02:14] *** toebu is now known as TobiO[light]

[02:26] *** risou left
[02:27] *** lidden_ joined
[02:28] *** lidden left
[02:34] *** REPLeffect left
[02:38] *** bluescreen joined
[02:38] *** ggoebel joined
[02:38] *** bluescreen is now known as Guest36040

[02:45] *** jaldhar joined
[02:59] *** ggoebel left
[03:04] *** whiteknight left
[03:11] *** am0c joined
[03:14] *** telmich left
[03:14] *** felipe left
[03:27] *** plobsing joined
[03:27] *** Guest36040 left
[03:32] *** TobiO[light] left
[03:42] *** lidden_ left
[03:54] *** toebu joined
[03:54] *** toebu is now known as TobiO

[04:11] *** am0c^ joined
[04:27] *** TobiO left
[04:39] *** mberends left
[05:11] <cxreg> https://github.com/lopnor/p6-plackdo

[05:19] <jasonmay> whoa

[05:24] *** snearch joined
[05:27] *** justatheory left
[05:37] *** kjeldahl joined
[05:54] *** sftp joined
[06:02] *** sftp left
[06:05] <cxreg> any hints on making rakudo build against parrot.git?

[06:05] <cxreg> Parrot revision r49711 required (currently r1)

[06:08] *** PerlJam left
[06:12] * cxreg short-circuits the check

[06:24] *** _kaare joined
[06:26] *** nymacro joined
[06:34] *** kjeldahl left
[06:40] <sorear> good * #perl6

[06:40] <sorear> cxreg: moritz_ is working on that

[07:01] <dukeleto> cxreg: that is because we don't have a build system for HLL's yet that talks git fluently

[07:02] <dukeleto> cxreg: but moritz had a way to comment out some code and get it to work. obviously we need a better solution

[07:02] <dukeleto> cxreg: basically, disable that check, if you want to test Rakudo on the latest parrot

[07:02] <moritz_> once http://trac.parrot.org/parrot/ticket/1845 is resolved, I know how to fix rakudo.

[07:04] <dukeleto> moritz_: we currently have 2 scripts in tools/dev, create_language.pl and mk_language_shell.pl that generate the code that needs to be fixed

[07:04] <dukeleto> moritz_: there is already a ticket for them, i just remembered. It is like a battlefield, with much bloodshed.

[07:04] <cxreg> dukeleto: that's what i did

[07:04] <dukeleto> cxreg++

[07:05] <dukeleto> moritz_: http://trac.parrot.org/parrot/ticket/1491

[07:06] *** Raynes left
[07:06] <dukeleto> moritz_: those tickets can almost be merged. If 1491 were fixed, 1845 wouldn't exist

[07:06] *** Raynes joined
[07:07] <dukeleto> moritz_: but it doesn't matter. we just need to get it to work

[07:07] * moritz_ doesn't really see the relation

[07:07] <moritz_> 1491 is a pre-git ticket

[07:08] <dukeleto> moritz_: yes.

[07:09] <dukeleto> moritz_: the problem is we are maintaining 2 almost identical things that generate the code that 1845 needs to convert to git

[07:09] <dukeleto> moritz_: what is the simplest possible thing that can work for Rakudo?

[07:10] <dukeleto> moritz_: perhaps we should just try to get Rakudo building from parrot.git, and worry about the general case of those scripts after

[07:10] <moritz_> dukeleto: building from parrot.git is not a problem at all. Identifying too old revisions is.

[07:10] <dukeleto> moritz_: perhaps we implement purely checking sha1's? and then describe strings after?

[07:10] <dukeleto> moritz_: ah yes. which is the much more *interesting* issue

[07:11] <dukeleto> moritz_: but you have to patch Rakudo right now to build on parrot.git, and that isn't optimal

[07:11] <moritz_> dukeleto: -1 to sha1s. It needs a parrot git repo to work

[07:11] <moritz_> it's not just not optimal. It's wrong.

[07:11] <dukeleto> moritz_: i thought Rakudo devs usually worked against parrot git repos, to test the latest revs. Am I wrong about that?

[07:11] <moritz_> It's a regression.

[07:12] <dukeleto> moritz_: can a regression exist in between developer releases?

[07:12] <dukeleto> moritz_: in the sense of "define regression" 

[07:13] <dukeleto> moritz_: moving to git was more important to us that fixing those scripts, and we didn't have the resources to do everything at once.

[07:13] <moritz_> dukeleto: the point is that rakudo's Configure.pl checks for an existing parrot, and if the one that exists is too old, and the user asked for it, it can download parrot from git

[07:13] * moritz_ doesn't need those scripts fixed.

[07:13] <dukeleto> moritz_: awesome!

[07:13] * moritz_ just needs a mostly linear revision number

[07:13] *** wtw joined
[07:13] <dukeleto> moritz_: so you are only experiencing the "too old rev" problem, gotcha.

[07:13] <moritz_> right

[07:14] <dukeleto> moritz_: if i provided you with a "git_describe" parrot_config key, would that give you mostly what you need?

[07:14] <moritz_> right

[07:14] <dukeleto> moritz_: that is very doable.

[07:14] <moritz_> just like I wrote in TT #1845

[07:15] <dukeleto> moritz_: i hear ya. I was trying to make life more complicated than it already is. I am quite good at that.

[07:18] *** kjeldahl joined
[07:23] *** Eevee left
[07:28] *** Eevee joined
[07:30] *** Mimisbrunnr joined
[07:32] *** Statistician joined
[07:33] *** Mimisbrunnr is now known as zellio

[07:33] <zellio> hrmm

[07:33] *** zellio left
[07:33] <moritz_> hi

[07:35] *** zellio joined
[07:35] <zellio> sorry about that, client troubles

[07:38] * moritz_ -> $work

[07:38] *** PerlJam joined
[07:39] <zellio> upon further reflection my question is better for #perl

[07:39] <zellio> cheers all

[07:39] *** zellio left
[07:41] <dalek> niecza/moo: 0123456 | sorear++ | Hi:

[07:41] <dalek> niecza/moo: xyz

[07:41] <dalek> niecza/moo: review: https://github.comX

[07:41] <sorear> sorear--

[07:44] <dalek> niecza: 4045e2e | sorear++ | v6/tryfile:

[07:44] <dalek> niecza: [v6/STD] get heredocs working

[07:44] <dalek> niecza: review: https://github.comhttps://github.com/sorear/niecza/commit/4045e2ebf9e31f5f46620311c44a12ef7ebb0410

[07:44] <dalek> niecza: 9d97d25 | sorear++ | / (2 files):

[07:44] <dalek> niecza: Implement LTM for role parameters

[07:44] <dalek> niecza: review: https://github.comhttps://github.com/sorear/niecza/commit/9d97d25aa78a913c4dd01ed6e6b2386b849e58d1

[07:44] <dalek> niecza: 13cdb07 | sorear++ | v6/ (2 files):

[07:44] <dalek> niecza: Fix heredoc tweaking

[07:44] <dalek> niecza: review: https://github.comhttps://github.com/sorear/niecza/commit/13cdb074f72c688e114c4a7d248124a08285b125

[07:45] <sorear> IT WORKS.

[07:46] *** Statistician left
[07:46] *** Statistician joined
[07:49] *** rgrau left
[07:50] *** lestrrat left
[07:51] *** lestrrat joined
[07:53] *** wallberg joined
[07:57] <dukeleto> sorear++ 

[08:00] <dalek> mu: 6574f39 | sorear++ | misc/dalek-conf.json:

[08:00] <dalek> mu: Remove all perl6/ and sorear/ from poll list

[08:00] <dalek> mu: review: https://github.comhttps://github.com/perl6/mu/commit/6574f39721605713424b739bae763f41050bd98c

[08:01] <sorear> everyone who can is now encouraged to migrate to push notifications

[08:02] <sorear> they're much faster, use less resources, don't require a commit bit, and don't require you to list branches manually

[08:02] <sorear> dalek announced that mu change less than 5 seconds after the push

[08:02] <sorear> the post-commit URL to use is    {

[08:02] <sorear> http://host04.appflux.net:5000/dalek?t=freenode,perl6

[08:03] <sorear> if you want to hit >1 channel, use t=freenode,perl6&magnet,parrot or so

[08:03] <sorear> er

[08:03] <sorear> t=freenode,perl6&t=magnet,parrot

[08:05] <moritz_> sorear: could you please put those instruction in a file somewhere?

[08:05] <sorear> Where

[08:05] <moritz_> mu repo if you have no better idea

[08:06] <sorear> hmm, my web service is already getting hammered with requests for favicon.ico

[08:06] <moritz_> :-)

[08:06] <sorear> perhaps this wasn't such a good idea :p

[08:07] <moritz_> if you have a range github IPs, you might filter by IP

[08:08] <moritz_> have you switched the repos under perl6/ to push?

[08:08] <moritz_> afk

[08:08] *** JimmyZ joined
[08:09] <JimmyZ> mu: review: https://github.comhttps://gith[…]bae763f41050bd98c the link is wrong

[08:11] <sorear> moritz_: yes

[08:11] <dalek> mu: 89628a7 | sorear++ | misc/dalek-push.txt:

[08:11] <dalek> mu: [misc] Add preliminary documentation for dalek push

[08:11] <dalek> mu: review: https://github.comhttps://github.com/perl6/mu/commit/89628a77c4b632cdf78b8839a370789e8d20ab5d

[08:13] *** wallberg left
[08:16] *** JimmyZ left
[08:19] <dalek> dalek-poller: 320e165 | sorear++ | push.psgi:

[08:19] <dalek> dalek-poller: Try a better multichannel way (2)

[08:19] <dalek> dalek-poller: review: https://github.com/sorear/dalek-poller/commit/320e165a71e5861c31cce4a2441cff628b6b7473

[08:19] <dalek> dalek-poller: ebba952 | sorear++ | push.psgi:

[08:19] <dalek> dalek-poller: Try a better multichannel way

[08:19] <dalek> dalek-poller: review: https://github.com/sorear/dalek-poller/commit/ebba952b0e7b0dad8b7fcadc55d3af16a074d765

[08:19] <dalek> dalek-poller: 51c6b9b | sorear++ | push.psgi:

[08:19] <dalek> dalek-poller: Fix link generation for push mode JimmyZ++

[08:19] <dalek> dalek-poller: review: https://github.com/sorear/dalek-poller/commit/51c6b9bce3513b62723affe979df889c3d879813

[08:20] <dalek> dalek-poller: a74c570 | sorear++ | push.psgi:

[08:20] <dalek> dalek-poller: Try a better multichannel way (3)

[08:20] <dalek> dalek-poller: review: https://github.com/sorear/dalek-poller/commit/a74c5707cf9a97b517e3404e883bc7f741929713

[08:20] <dalek> mu: c13a8ee | sorear++ | misc/dalek-push.txt:

[08:20] <dalek> mu: [misc] Document working multichannel way

[08:20] <dalek> mu: review: https://github.com/perl6/mu/commit/c13a8ee078fed722614b4618129e1e701f2aecf3

[08:34] *** cosimo left
[08:34] <sorear> https://github.com/perl6/mu/blob/master/misc/dalek-push.txt

[08:42] *** cosimo joined
[08:45] *** redicaps joined
[08:58] <moritz_> sorear++

[09:03] *** rgrau joined
[09:03] *** nymacro left
[09:07] *** kensanata joined
[09:07] *** mavrc joined
[09:08] *** meppl joined
[09:09] <mavrc> Hello.

[09:09] <sorear> hi

[09:16] <dalek> niecza: 4f676f7 | sorear++ | test (2 files):

[09:16] <dalek> niecza: Add a test for dynamic method names

[09:16] <dalek> niecza: review: https://github.com/sorear/niecza/commit/4f676f7e48576799155d240ad51b789041a07d9f

[09:16] <dalek> niecza: 2c4b771 | sorear++ | v6/ (2 files):

[09:16] <dalek> niecza: [v6] Add Stash.iterator

[09:16] <dalek> niecza: review: https://github.com/sorear/niecza/commit/2c4b7711826dc223c685884538194b134a3dfc49

[09:16] *** mathw left
[09:16] *** mathw joined
[09:17] *** mathw left
[09:17] *** mathw joined
[09:29] *** dakkar joined
[09:35] *** redicaps left
[09:45] *** neroxx joined
[09:51] <diakopter> sorear: that's super-cool

[09:58] *** masak joined
[09:58] <masak> oh hai, #perl6!

[10:00] <moritz_> \o masak

[10:10] <tadzik> o/

[10:14] *** arthur-_ left
[10:23] *** wallberg joined
[10:26] *** am0c^ left
[10:29] *** masonkramer_ joined
[10:29] *** masonkramer left
[10:29] *** masonkramer_ is now known as masonkramer

[10:33] *** wallberg left
[10:35] *** QinGW left
[10:39] <masak> urgh, Gerd Pokorra suggests on parrot-dev that they simulate SVN commit numbers with a git commit hook. :(

[10:39] <masak> sounds like SVN withdrawal syndrome to me.

[10:41] <flussence> aargh

[10:41] * moritz_ wonders how branch merges will affect that number

[10:42] <flussence> if they want serial numbers, use the date!

[10:42] <masak> or that number in describe.

[10:42] <flussence> that too, though it's (intentionally?) harder to get at

[10:43] <moritz_> git-describe is much more robust

[10:44] <moritz_> if you take an old branch, and make one commit, you have a very new date

[10:44] <moritz_> (that was also a possible problem with svn branches)

[10:46] <masak> nom &

[11:05] *** ggoebel joined
[11:05] *** whiteknight joined
[11:06] <dd-sphere> moin

[11:07] *** dd-sphere is now known as ch3ck

[11:09] <moritz_> http://blog.mathgladiator.com/2010/11/3-programming-languages-you-need-to.html

[11:09] <moritz_> nice idea

[11:16] *** ggoebel left
[11:20] *** daxim joined
[11:38] *** xinming joined
[11:44] *** ggoebel joined
[11:50] *** _twitch joined
[11:55] *** ggoebel left
[12:04] *** frettled left
[12:07] *** bluescreen joined
[12:07] *** bluescreen is now known as Guest19408

[12:15] *** whiteknight left
[12:16] *** ggoebel joined
[12:18] *** lidden joined
[12:22] *** frettled joined
[12:26] *** Guest19408 left
[12:29] *** orafu left
[12:29] *** OuLouFu joined
[12:29] *** OuLouFu is now known as orafu

[12:32] *** nero2x joined
[12:33] *** nero__ joined
[12:35] *** neroxx left
[12:36] *** ggoebel left
[12:37] *** nero2x left
[12:39] *** uniejo joined
[12:42] *** wamba joined
[12:46] <nero__> Hello, there :)

[12:47] <tadzik> hello nero__ 

[12:47] <nero__> I there something similar to qw on perl6 

[12:47] <moritz_> sure

[12:47] <nero__> like @x=qw(1, 2,3)

[12:47] <moritz_> rakudo: say <a b c d>.join('|')

[12:47] <p6eval> rakudo 037775: OUTPUT«a|b|c|d␤»

[12:47] <moritz_> it's even shorter than in p5

[12:48] <moritz_> also qw works, but not with () (because round parenthesis nearly always mean subroutine call)

[12:48] <moritz_> rakudo: say qw/a b c d/.join('|')

[12:48] <nero__> aha that's why rakudo was complain 

[12:48] <p6eval> rakudo 037775: OUTPUT«Could not find sub &qw␤  in main program body at line 22:/tmp/KqlGan_oP6␤»

[12:48] <moritz_> uhm, it seems that qw isn't implemented :(

[12:48] <nero__> I got the same error message 

[12:48] <tadzik> who cares, <> is funnier anyway :)

[12:48] <moritz_> alpha: say qw/a b c d/.join('|')

[12:48] <p6eval> alpha : OUTPUT«a|b|c|d␤»

[12:49] <moritz_> it's a regression

[12:49] * moritz_ submits bug report

[12:50] <nero__> thanks a lot moritz, BTW the book is awesome  

[12:50] <tadzik> moritz_: is it something that can be fixed messing with grammar only?

[12:50] <moritz_> nero__: you're welcome, and thanks. If there's anything unclear about the book, don't hesitate to tell us/me, so that it can be improved further

[12:51] <nero__> moritz_, sure 

[12:51] <moritz_> tadzik: nearly, yes

[12:52] *** tzhs joined
[12:52] <moritz_> it's probably just a call to quote_EXPR, and then an action rule that just says   make $<quote_EXPR>.ast;

[12:53] <moritz_> tadzik: see the rules for circumfix:sym<ang> and quote:sym<q> for example

[12:56] <tadzik> there is q, qq, qx, qqx. I'll see if I can hack something out

[12:56] <moritz_> you'll need <quote_EXPR: ':q', ':w'>

[12:56] *** wallberg joined
[12:57] *** jhuni left
[12:58] <tadzik> funny, I was just looking for something to code

[13:00] <tadzik> where does STD.pm6 live?

[13:02] *** neroxx joined
[13:02] <neroxx> msg/ p6eval

[13:02] <tadzik> qw/1 2 3/.join('|')

[13:02] <tadzik> Method 'returns' not found for invocant of class 'Undef'

[13:03] <tadzik> ah, I'll probably need some Actions too

[13:04] *** nero__ left
[13:04] <moritz_> right

[13:05] <moritz_> just  make $<quote_EXPR>.ast   should be enough

[13:05] <tadzik> yeah, just looked at ang

[13:06] <tadzik> yay, I'm fixing stuff

[13:09] <tadzik> > qw/1 2 3/.join('|')

[13:09] <tadzik> 1|2|3

[13:09] <moritz_> \o/

[13:09] <moritz_> spectest, submit patch, profit

[13:10] <masak> tadzik++

[13:10] <tadzik> right, spectests, I just wanted to ask about that.

[13:10] <tadzik> I need to uncomment stuff or something?

[13:11] <moritz_> S02-literals/quoting.t

[13:11] <moritz_> 175:#?rakudo skip 'qw'

[13:11] <tadzik> that's the spectest repo?

[13:11] <moritz_> right

[13:11] <moritz_> I just did

[13:11] <moritz_> cd t/spec/

[13:11] <moritz_> ack -w qw

[13:12] <tadzik> I even have a commit bit there

[13:12] <tadzik> will run the tests, send the patch and aquire glory and fame

[13:13] <moritz_> right; but it makes no sense to push your patch to the spectest repo before the rakudo patch is applied

[13:14] <tadzik> yea. Can I run the spectests w/o having to pull from GH?

[13:14] <moritz_> yes

[13:14] <moritz_> perl t/harness --fudge --keep-exit-code --icu=1 --jobs --tests-from-file=t/spectest.data

[13:15] *** ggoebel joined
[13:15] <moritz_> or --icu=0 if you don't have ICU installed

[13:15] *** ggoebel left
[13:16] <tadzik> that will take a moment

[13:16] <moritz_> you can also use  --long=0  to skip some long running tests

[13:16] <moritz_> (that's what 'make quicktest' does)

[13:17] <tadzik> it starts from S02 anyway, so it's not a problem. Also, I'm not in such a hurry, I'd rather make sure I didn't break anything

[13:18] <moritz_> will be your 5th rakudo patch

[13:18] <moritz_> we should start discussing giving you a commit bit

[13:18] <tadzik> t/spec/S02-literals/quoting.rakudo ............................. ok       

[13:19] <tadzik> I can just create my fork, like KodiB did

[13:20] *** Patterner left
[13:20] <moritz_> well, it still requires a committer to review and merge your stuff, so in the long run it's less work for us to give you access

[13:20] *** Kodi joined
[13:22] <tadzik> I'd still feel better with my code being reviewed, at least for now

[13:23] <moritz_> that's ok

[13:23] <moritz_> that's why I said 'start discussing', not 'give you one right away' :-)

[13:23] <Kodi> masak: With respect to http://rt.perl.org/rt3//Public/Bug/Display.html?id=78896: I disallowed Duration ** Int because Duration ** 2 is mathematically the same as Duration * Duration, which the spec forbids (S02:1343). Am I misunderstanding the spec?

[13:24] <tadzik> sure :)

[13:24] <masak> Kodi: I don't know, but personally I hope that we'll tend towards allowing things in this case.

[13:25] <Kodi> masak: I suppose that if I do allow Duration ** Int, nobody will complain, and it's following at least one interpretation of S02.

[13:25] <masak> aye.

[13:29] <flussence> I'm sure someone will have a reason to want it, but relative units of measurement raised to powers don't make sense to me...

[13:30] <moritz_> flussence: you might want to calculate a geometric average over durations, for some reason

[13:30] <masak> flussence: I wanted to calculate a standard deviation of a set of values that turned out to be Duration objects. standard deviation involves squaring.

[13:30] <flussence> oh, yeah. :)

[13:33] <masak> my general point is that it's OK to go around disallowing things and putting up idealized boundaries between things, unless you actually plan to use those things for, you know, reall stuff.

[13:33] <masak> s/reall/real/

[13:34] *** Psyche^ joined
[13:34] *** Psyche^ is now known as Patterner

[13:34] <moritz_> so are there some operations that actually make sense to disallow on Duration objects?

[13:34] <moritz_> if there are none, I'd suggest to make it a subclass of a numeric type, instead of a has-a relation

[13:34] <Kodi> How would one intrepret sin(Duration)?

[13:34] <moritz_> Kodi: in terms of a power series

[13:34] *** uniejo left
[13:35] <Kodi> (It actually is supposed to be a numeric type, not a has-a.)

[13:35] <masak> I'm not even sure we need a Duration type, so I don't think I'm the right person to ask.

[13:35] <flussence> well, Duration * Duration is nonsense, even if the .Int values are sensible...

[13:35] <masak> what's the horrible use case we're trying to prevent here?

[13:35] <masak> people *mistakenly* multiplying Durations?

[13:35] <Kodi> My understanding is that the Real Point of having a Duration type is to keep the spec from forcing implementations to represent durations with a particular numeric type.

[13:35] <masak> when does that happen?

[13:35] <moritz_> flussence: didn't we just give good examples for no-nonsense Duration * Duration usages?

[13:36] <moritz_> Kodi: then we can just spec it ~~ Real

[13:36] <Kodi> moritz_: That's what we've got. I don't know the whole philosophy behind the operator restrictions.

[13:36] *** felipe joined
[13:37] <masak> I'm officially representing the rebel group who wants to remove Duration and just put a Num or Rat in its place, representing number of seconds.

[13:37] <masak> I think that'd be better in all ways.

[13:37] <flussence> ++ to that.

[13:37] <Kodi> I think FatRat would be preferable to either.

[13:37] <moritz_> what about Instant?

[13:37] <masak> instant is fine.

[13:38] <masak> it feels less like a number to me in the first place.

[13:39] <flussence> .oO( things would be a lot simpler if someone went and measured the exact age of the universe, so we could all use absolute units... )

[13:39] <Kodi> Looks like TimToady wrote the restrictions on Duration arithmetic. Perhaps we should ask him what his thinking was.

[13:39] <moritz_> flussence: no way. You forgot about relativity

[13:41] <flussence> then we'd also need to know how far from the centre we are, and ... Whatever :(

[13:41] <moritz_> flussence: we're in the centre, of course

[13:42] <moritz_> flussence: the universe expanded, so the whole universe is what used to be the centre

[13:42] <masak> flussence: my reflex is still to scowl when people start half-joking about Temporal. it's the only time I've kicked three people from this channel, when I was re-writing the Temporal spec, and people were goofing off about it.

[13:42] <tadzik> . o O (a Star metamodule: just a deps.proto with Star modules)

[13:43] <Kodi> Time is Serious Business.

[13:43] *** tzhs left
[13:44] <masak> here: http://irclog.perlgeek.de/perl6/2010-04-04#i_2194094

[13:45] * moritz_ notices that the logs don't record who was kicked

[13:45] <masak> it was arnsholt, lue and slavik1.

[13:46] <moritz_> yes, I got that from the context

[13:46] <moritz_> but it's a good sign: it's such a rare operation here that I never optimized the logs for it :-)

[13:47] <masak> :)

[13:48] * moritz_ ordered a new laptop - and it actually got cheaper between my decision and ordering it

[13:49] <tadzik> nice. Which one?

[13:49] <masak> someone points out that Scala's startup time equals Rakudo's: http://twitter.com/__gfx__/status/2672047780012032

[13:49] *** _kaare left
[13:49] <moritz_> tadzik: a HP 625 Business

[13:49] <tadzik> this gravar looks like a Mouse author

[13:49] <tadzik> * gravatar

[13:50] <moritz_> (quite low-end actually, because a new bike is also forthcoming)

[13:50] <tadzik> All tests pass, besides config.rakudo of course

[13:51] <tadzik> oh crap, I didn't save that test file...

[13:52] <moritz_> you can rerun it with running the whole spectest

[13:53] <tadzik> that's what I'm doing

[13:54] <tadzik> hmm, quoting.rakudo is tested, and quoting.t is not

[13:54] <moritz_> as soon as fudge markers are present, rakudo runs the .rakudo file instead of .t

[13:55] <tadzik> so nothing actually got tested? I don't get it

[13:56] <moritz_> it just took the .t file, ran it through fudge, and ran the resulting .rakudo file

[13:57] <tadzik> oh, ok

[13:57] <tadzik> looks like it passes, but I'll wait for the whole spectest

[14:06] *** plainhao joined
[14:11] *** bartj joined
[14:15] *** hudnix left
[14:16] *** plobsing left
[14:17] *** hudnix joined
[14:18] <tadzik> a'right, tests pass with the new shiny qw//. Preparing a patch

[14:19] <dalek> roast: bfcf5ed | (Kodi Arfer)++ | S02-builtin_data_types/instants-and-durations.t:

[14:19] <dalek> roast: Allow Duration ** Int.

[14:19] <dalek> roast: review: https://github.com/perl6/roast/commit/bfcf5ed2ff51da1e2b8f1189e729b02563e0ab49

[14:19] *** hudnix left
[14:19] *** bartj left
[14:19] <flussence> on the Scala subject, Rakudo's startup time is more noticeable because people start it up more often :)

[14:20] <tadzik> :>

[14:20] <moritz_> why?

[14:20] <flussence> the JVM is complete overkill for shell one-liners :D

[14:21] *** fhelmberger joined
[14:21] <flussence> (someone will likely hit me in the face with a counterexample in the next 3 seconds...)

[14:21] <masak> I wish Java had a default REPL. Beanshell sucks.

[14:21] <tadzik> how do I reply to a perlbug? Replying to perl6-compiler@ won't work, will it?

[14:22] <masak> tadzik: not in the sense of adding something to RT, no.

[14:22] <moritz_> just hitting reply-to in your mail client should work

[14:22] <moritz_> afaict RT monitors perl6-compiler

[14:22] <masak> oh?

[14:23] <dalek> rakudo: d9e2246 | KodiB++ | src/core/Duration.pm:

[14:23] <dalek> rakudo: [core/Duration] Allow Duration ** Real.

[14:23] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/d9e22463479927fa8f1f594753979022de35970d

[14:23] *** Lorn left
[14:23] *** Statistician left
[14:23] *** Lorn joined
[14:24] <tadzik> Mail sent.

[14:25] *** sftp joined
[14:26] *** wamba left
[14:26] *** wamba joined
[14:29] *** Kodi left
[14:33] *** KyleHa joined
[14:33] *** hudnix joined
[14:39] *** x3nU left
[14:42] *** hercynium joined
[14:44] *** nymacro joined
[14:55] <moritz_> patch applied.

[14:56] <tadzik> moritz_++

[14:56] <moritz_> tadzik++

[14:56] <tadzik> shall I enable the tests in roast?

[14:56] <moritz_> please do

[14:56] <moritz_> even moar karma for you :-)

[14:56] *** kjeldahl left
[14:57] <tadzik> :)

[14:58] <tadzik> done

[14:58] <dalek> roast: c3e7f27 | (Tadeusz Sośnierz)++ | S02-literals/quoting.t:

[14:58] <dalek> roast: Enabled qw tests (implemented in Rakudo 3aa3c)

[14:58] <dalek> roast: review: https://github.com/perl6/roast/commit/c3e7f27b332fadbca715c95406ba9a895e6a4181

[14:58] <tadzik> now why isn't it tadzik?

[14:59] <moritz_> because you're missing in CREDITS

[14:59] <moritz_> please submit another patch for that :-)

[14:59] <tadzik> where do CREDITS live?

[14:59] <moritz_> in rakudo

[14:59] <dalek> rakudo: 9b94551 | tadzik++ | src/Perl6/ (2 files):

[14:59] <dalek> rakudo: Implemented qw

[14:59] <dalek> rakudo: 

[14:59] <dalek> rakudo: Signed-off-by: Moritz Lenz [email@hidden.address]
[14:59] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/9b94551f4c8e1697074429cb75e46969404ab31c

[15:00] <tadzik> duh, this prepare-send-apply cycle again :)

[15:00] <moritz_> I did talk about a commit bit, didn't I? :-)

[15:00] <tadzik> yeah :)

[15:01] <moritz_> I can add you to CREDITS if you wish

[15:01] <tadzik> and get the karma? No way :)

[15:02] <tadzik> https://gist.github.com/672606

[15:02] <tadzik> OTOH, it wouldn't look so... what is that word

[15:03] <moritz_> honest?

[15:03] <tadzik> heh, I meant the negative term. Describing "look, I'm so awesome I'm adding myself to CREDITS"

[15:03] <moritz_> tadzik: fwiw, I prefer present tense in commit mesages ("Add myself" instead of "Added myself"), but that's only a minor nit

[15:04] <tadzik> will keep that in mind

[15:04] <moritz_> tadzik: I know what you mean. But CREDIT entries actually do help with keeping an overview, and since you did contribute stuff, you're not an imposter :-)

[15:05] <dalek> rakudo: d859644 | tadzik++ | CREDITS:

[15:05] <dalek> rakudo: Added myself to CREDITS

[15:05] <dalek> rakudo: 

[15:05] <dalek> rakudo: Signed-off-by: Moritz Lenz [email@hidden.address]
[15:05] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/d8596445b096be99106e86238c8febcdc07585a5

[15:05] <moritz_> modesty is so imprinted in us that we exaggerate a bit from time to time

[15:05] <tadzik> alright :) Btw, isn't that Impostor?

[15:05] <moritz_> probably

[15:05] <tadzik> or it could be in-poster :)

[15:08] <tadzik> alright, I'm out for today. See you!

[15:08] <moritz_> ciao

[15:10] <masak> tadzik: I think the word is "boastful". and adding oneself to the CREDITS file is not that.

[15:14] *** snearch left
[15:19] *** meraxes left
[15:27] *** mavrc left
[15:27] *** nymacro left
[15:28] *** kjeldahl joined
[15:29] *** MayDaniel joined
[15:29] *** wtw left
[15:33] *** mavrc joined
[15:34] *** _kaare joined
[15:36] *** slavik1 left
[15:38] *** timbunce joined
[15:47] *** tzhs joined
[15:54] *** alester left
[15:54] *** ggoebel joined
[15:57] *** wamba left
[16:03] *** rgrau_ joined
[16:06] *** sftp left
[16:07] *** risou joined
[16:08] *** justatheory joined
[16:09] *** tzhs left
[16:18] *** risou left
[16:25] *** risou joined
[16:33] *** timbunce left
[16:43] *** icwiener joined
[16:45] *** sftp joined
[16:46] *** molaf joined
[16:49] *** Ross joined
[16:49] *** Ross left
[16:49] *** Ross joined
[16:52] *** timbunce joined
[16:54] *** plobsing joined
[16:59] *** wamba joined
[16:59] *** sftp left
[17:00] *** sftp joined
[17:05] *** Ross left
[17:06] *** alester joined
[17:10] *** kensanata left
[17:19] *** Bzek left
[17:20] *** Bzek joined
[17:24] *** cdarroch joined
[17:24] *** cdarroch left
[17:24] *** cdarroch joined
[17:26] * masak is still chuckling at moritz_++' "9 other types" punchline

[17:27] <colomon_>  ;)

[17:27] <masak> I have a soft spot for derivative-joke punchlines.

[17:33] *** M_o_C joined
[17:33] *** REPLeffect joined
[17:37] *** MayDaniel left
[17:41] <masak> nom &

[17:41] *** masak left
[17:41] *** patrickas joined
[17:41] <patrickas> o/

[17:43] <dukeleto> So a two functions walk into a bar...

[17:44] <patrickas> dang I missed masak by a few seconds !

[17:44] <dukeleto> The bartender says "Watch out!" There is a derivative operator on the loose! He is going around differentiating everything he sees!

[17:45] <dukeleto> The consant function ran and hid in the bathroom, because he didn't want to become the zero function

[17:45] <neroxx> rakudo: my @x=<foo bar bazar>.join('-'); say @x;

[17:45] <p6eval> rakudo d85964: OUTPUT«foo-bar-bazar␤»

[17:45] <dukeleto> The derivative operator busts thru the front door and says "I differentiate you!", but the other function says "Whatever, I am e^x, i don't care"

[17:46] <neroxx> rakudo: my @x=<foo bar bazar>; for @x -> $n {say $n.join('-');}

[17:46] <p6eval> rakudo d85964: OUTPUT«foo␤bar␤bazar␤»

[17:46] <dukeleto> And then the derivative operator says "Yeah, but I am df/dy!".

[17:46] * dukeleto stops.

[17:47] <neroxx> is join is not working while on loop ? or I'm doing something wrong ?

[17:47] <patrickas> neroxx the loop is taking each element

[17:47] <patrickas> and doing a join on it

[17:48] <neroxx> but the output don't have the (-) join 

[17:48] <patrickas> rakudo: my $n='foo'; say $n.join('-');

[17:48] <p6eval> rakudo d85964: OUTPUT«foo␤»

[17:49] <neroxx> the square character is my - ?

[17:49] <patrickas> neroxx no

[17:49] <patrickas> join will put - between two elements, you only have one element

[17:50] <patrickas> the square charater is a newline that your font probably does not support

[17:50] <neroxx> ah I see, so this should be like this my @x<foo bar bazar>.join('-')

[17:51] <neroxx> rakudo: my @x= <foo bar bazar>.join('-'); say @x;

[17:51] <p6eval> rakudo d85964: OUTPUT«foo-bar-bazar␤»

[17:52] <patrickas> yes

[17:56] *** tobij joined
[17:59] *** justatheory_ joined
[17:59] *** justatheory left
[17:59] *** justatheory_ is now known as justatheory

[17:59] *** dakkar left
[18:00] *** hercynium_ joined
[18:02] <neroxx> where I can found documentation for p6 core modules ?

[18:02] *** hercynium left
[18:02] *** hercynium_ is now known as hercynium

[18:04] *** timbunce left
[18:07] <patrickas> by p6 core modules do you mean http://modules.perl6.org/ ? If so n the github page of each module.

[18:16] *** Chillance joined
[18:18] *** MayDaniel joined
[18:18] *** hercynium_ joined
[18:18] *** am0c left
[18:20] *** risou left
[18:21] *** hercynium left
[18:21] *** hercynium_ is now known as hercynium

[18:33] *** plobsing left
[18:36] *** kjeldahl left
[18:37] *** risou joined
[18:54] *** patrickas left
[18:54] *** neroxx left
[19:01] *** risou left
[19:02] *** justatheory left
[19:04] *** dual left
[19:06] *** M_o_C left
[19:09] <moritz_> next time somebody asks about core modules, point them to http://perlgeek.de/blog-en/perl-6/how-core-is-core.html

[19:11] <dukeleto> maybe we need to start talking about onion modules, since onions don't have cores, and the Perl community is a fractal onion, according to TimToady 

[19:12] *** justatheory joined
[19:28] *** daxim left
[19:33] *** direction joined
[19:35] *** colomon_ left
[19:46] *** meraxes joined
[19:47] <direction> ... so perl6 is ready to use just not adopted yet?

[19:47] <lue> ohayo o/

[19:47] <direction> mornin

[19:48] <direction> according to the status page, the only problem i might run into is Threading

[19:49] <PerlJam> direction: ready to use for some purposes, not for others.

[19:50] <direction> anything noteworthy that its not ready for besides threading?

[19:50] <direction> is there a timeline / schedule for perl6 completion?

[19:51] <PerlJam> There's no schedule for completion because that concept doesn't make enough sense

[19:51] <PerlJam> For instance, is Perl 5 "complete"?  (no, it's not)

[19:51] <direction> ok i mean widespread release

[19:52] <direction> and widespread adoption

[19:52] <PerlJam> Um ... it's available for "widespread release" right now  :-)

[19:52] <direction> yea thats why i said the latter

[19:52] <PerlJam> Adoption we can't control as that's up to the users.

[19:53] <simon> I like the "use v6;" convention.

[19:54] *** molaf left
[19:56] <PerlJam> A more useful question might be "When will a Perl 6 implementation be developed to a level that's comparable to other languages like Python, PHP, Ruby, Haskell, etc.?"   Unfortunately, I really don't have an answer to that question either.

[19:58] *** vxz left
[19:59] <PerlJam> I suppose the answer is: when there are enough people using Perl 6 that we're able to flesh out all of the details of the spec and foibles of implementation.  

[20:10] <takadonet> hey all

[20:10] <direction> hi

[20:11] * direction peace out (^_~)

[20:12] <sorear> good * #perl6

[20:12] <takadonet> sorear: yo

[20:15] *** wamba left
[20:16] *** plobsing joined
[20:18] <sorear> moritz_: the CREDITS file that matters is the one in the Parrot repository

[20:20] <sorear> neither tadzik nor KodiB have CREDITS lines

[20:20] *** masak joined
[20:20] <masak> ahoy!

[20:20] <takadonet> masak: hey!

[20:20] <masak> great to see you all. again.

[20:21] <frettled> masak: o/

[20:21] <takadonet> masak: were you gone long?

[20:21] <masak> nah, just for nom.

[20:21] <frettled> hours!

[20:21] <masak> potato pancakes! mmm.

[20:29] *** mavrc left
[20:29] <masak> (with lingonberry jam, sour cabbage and Turkish yoghurt)

[20:31] <takadonet> nice

[20:31] <masak> and super-simple to make.

[20:42] <lue> hai masak o/

[20:42] <masak> lue! \o/

[20:43] <dalek> specs: ad8e423 | TimToady++ | S05-regex.pod:

[20:43] <dalek> specs: [S05] now use :Foo and :Foo<Bar> for uniprops

[20:43] <dalek> specs: 

[20:43] <dalek> specs: The old isFoo notation was fragile and could not easily extend to Unicode

[20:43] <dalek> specs: properties with values.  We'll use pair notation instead.  The match of

[20:43] <dalek> specs: a pair value is via smartmatch, so both string and numeric comparisons

[20:43] <dalek> specs: are available, for instance.

[20:43] <dalek> specs: review: https://github.com/perl6/specs/commit/ad8e4234c219c6ef581690e97eaf7e00608c2d9b

[20:43] <lue> did you catch my pull request on Tardis?

[20:44] <sorear> oooh!

[20:44] <PerlJam> TimToady is really making use of that colon.

[20:44] <takadonet> PerlJam: i think he likes it

[20:47] *** kjeldahl joined
[20:49] <masak> lue: hm, haven't seen a pull request. just the diff you sent along, which I commented on.

[20:50] <sorear> has rakudo/* been moved to push yet?

[20:51] <masak> the pair syntax seems to work for uniprops. in some sense it's a bit arbitrary, but on the other hand it seems to map well onto what it's describing.

[20:51] <diakopter> .beats

[20:51] <phenny> @910

[20:51] <diakopter> oh; whatevs

[20:52] <sorear> masak: %hash ~~ :key<value> = %hash<key> ~~ value

[20:52] <sorear> masak: it's sort of like the characters are being interpreted as their property hash

[20:53] <masak> I'll consider that a strangely consistent rationale :)

[20:55] * lue considers asking what uniprops are and how the isFoo notation was used, but fears the "look at the specs" answer

[20:57] <masak> lue: that's nothing to fear. when you get a "look at the spec" answer, it's because we want to help you reach enlightenment by the quickest way possible, and the spec is the best start on that road.

[20:57] <huf> you mean you'd like to set him on fire, right?

[20:57] *** KyleHa left
[20:58] *** patrickas joined
[20:58] <PerlJam> huf: no, we'd like him to set himself on fire.

[20:58] <PerlJam> repeatedly.

[20:58] <huf> oh, even better!

[20:59] <huf> i guess that's the free software methodology

[20:59] <patrickas> re o/

[20:59] <lue> I considered asking, but then I realized the most likely answer and stopped myself (but apparently that didn't stop me from talking about what I almost did. Hmm)

[21:00] *** KyleHa joined
[21:01] <masak> lue: http://en.wikipedia.org/wiki/Apophasis

[21:02] <patrickas> masak ready to be distracted ?

[21:02] <masak> patrickas: bring it on! :)

[21:03] *** plainhao left
[21:04] *** rgrau_ left
[21:11] *** MayDaniel left
[21:17] *** KyleHa left
[21:21] *** plobsing left
[21:21] <lue> ololiblog: https://rdstar.wordpress.com/2010/11/11/yapsi-and-tardis/

[21:22] * masak reads

[21:22] *** KyleHa joined
[21:22] <dalek> dalek-poller: 95a85a7 | sorear++ | push.psgi:

[21:22] <dalek> dalek-poller: Fix handling of defined-or with arrays

[21:22] <dalek> dalek-poller: 

[21:22] <dalek> dalek-poller: // puts the left side into scalar context, so @{foo} // () is wrong.

[21:22] <dalek> dalek-poller: Changed it to @{ foo // [] }.

[21:22] <dalek> dalek-poller: review: https://github.com/sorear/dalek-poller/commit/95a85a764421a0888370205a82030eab667c623e

[21:22] <dalek> dalek-poller: efec941 | bacek++ | push.psgi:

[21:22] <dalek> dalek-poller: Rename IGNORE into OK and always return it.

[21:22] <dalek> dalek-poller: review: https://github.com/sorear/dalek-poller/commit/efec9417c98525225ab56d2e2c31d711a78c5e05

[21:22] <dalek> dalek-poller: 95e4263 | bacek++ | push.psgi:

[21:22] <dalek> dalek-poller: Reindent code.

[21:22] <dalek> dalek-poller: review: https://github.com/sorear/dalek-poller/commit/95e4263c333f2234715d0223656e146d2efc07da

[21:22] <dalek> dalek-poller: fd5ea6b | bacek++ | push.psgi:

[21:22] <dalek> dalek-poller: Simplify (and speed-up) creating of @files list.

[21:22] <dalek> dalek-poller: review: https://github.com/sorear/dalek-poller/commit/fd5ea6bbd11759aa5b6cea0d641ad77505aacade

[21:22] <dalek> dalek-poller: 92fab84 | bacek++ | push.psgi:

[21:22] <dalek> dalek-poller: Use space after C<if>

[21:22] <dalek> dalek-poller: review: https://github.com/sorear/dalek-poller/commit/92fab84657f4b9bd685f055d9573278a5a377520

[21:22] <dalek> dalek-poller: ac797df | bacek++ | push.psgi:

[21:22] <dalek> dalek-poller: Use constant to return constant response.

[21:22] <dalek> dalek-poller: review: https://github.com/sorear/dalek-poller/commit/ac797df05b3cf0987f52c99d6935e6ef1338562f

[21:22] * PerlJam reads too

[21:23] <masak> lue: you're right in that Yapsi has a much lower threshold for starting to contribute.

[21:24] <dalek> dalek-poller: ee0aebc | sorear++ | push.psgi:

[21:24] <dalek> dalek-poller: Fix backward message output

[21:24] <dalek> dalek-poller: 

[21:24] <dalek> dalek-poller: GitHub-- for wrong documentation. :/

[21:24] <dalek> dalek-poller: review: https://github.com/sorear/dalek-poller/commit/ee0aebc3f65be7dc395a5409c59d73bd3df2dc84

[21:24] <masak> I think the main reason for that is that it sits at ~500 lines of code.

[21:25] <PerlJam> masak: and fewer conceptual hurdles to leap

[21:26] <masak> right. fewer everything, really. features, layers of abstraction...

[21:26] *** mavrc joined
[21:28] <PerlJam> Well, I meant that to hack Rakudo, you have to know all sorts of things ... Perl 6, PIR, C, how these things interact, where the dragons in the existing code are, etc.

[21:28] <masak> nod.

[21:30] <patrickas> PerlJam: unless you are lucky to find things where you don't need all that .. then working on rakudo feels just like working on Yapsi (from my very minor working on rakudo experience)

[21:31] <PerlJam> I think that's the limiting factor for Rakudo contributors actually.   Even if you start off hacking on a "pure Perl" problem, you can quickly run into dragons without realizing it.

[21:31] <PerlJam> (until it's too late :)

[21:32] <sorear> You think hacking Perl 5 might be easier?  It's 100% C

[21:32] <masak> to Rakudo's credit, it's becoming easier to hack with every rewrite :)

[21:32] <PerlJam> masak: indeed

[21:33] <lue> I don't think I didn't try, but Rakudo is just so complex, and there's nothing really easy to do (even the LHF, in my experience, requires you know *something* about the codebase)

[21:36] <lue> Or, perhaps the real problem is not that the codebase is too complex, but that there's no Hitchhiker's Guide for it.

[21:37] <PerlJam> lue: perhaps

[21:38] <masak> lue: I feel your pain. I would hack more on Rakudo as well if I found it more approachable.

[21:38] <masak> it's not so much that I can't do it, as that it's not a good short-term investment of my time.

[21:38] <PerlJam> masak++ that's *exactly* how I feel.

[21:39] <masak> PerlJam: and I'm just dressing what lue wrote in my own words :)

[21:39] <PerlJam> Well, I like your words  :)

[21:39] <masak> \o/

[21:39] <sorear> lue: help me to write a Hitchhiker's Guide to the niecza codebase

[21:40] <masak> lue: yes! become a niecza contributor!

[21:42] * moritz_ back

[21:42] <lue> That's a good idea. I've always thought of a Perl 6 documentation repository.

[21:44] <PerlJam> lue: I wouldn't help sorear.  That was an almost godwinian way he brought up Perl 5 earlier   ;-)

[21:46] <PerlJam> Though, if there were a HHGTN, that would increase the odds that "occasional hackers" like myself participate.

[21:46] <masak> same here.

[21:47] <masak> I *want* to participate in niecza. but I don't see a good way in. some documentation would help.

[21:47] <sorear> I think I could write one better if I knew what people were looking for

[21:49] <lue> I should really start on my POD parser to go with this vision of a document repo. [Believe me, I've planned this whole documentation thing more than I'm letting on.] Now that I think about it, documentation is the most pleasing to me, seeing as it isn't there.

[21:49] *** plobsing joined
[21:50] <lue> &afk; # nom time, afterwards I'll start fleshing out these ideas more.

[21:51] *** _kaare left
[21:58] *** kjeldahl left
[22:00] *** sidek joined
[22:01] <sidek> are there any tutorials for perl 6? I found one but it was half in German.

[22:01] <sidek> and, although I know basic german, I know BASIC german

[22:02] <PerlJam> sidek: there are all sorts of resources on perl6.org

[22:02] <sidek> thanks

[22:02] <moritz_> chances are the tutorial you found was from me (or lichtkind)

[22:03] <sidek> it was on perlfoundation and looked like it was in the process of being translated

[22:03] <PerlJam> lichtkind

[22:03] <sidek> alright

[22:03] <moritz_> mine are on perl-6.de

[22:03] <takadonet> sidek: You can ask questions here any time

[22:04] <moritz_> though I haven't been writing about Perl 6 in German for a year or so

[22:04] <sidek> thanks for the offer, takadonet. I know quite a bit of perl 5, though, so hopefully I'll be fine

[22:04] <moritz_> the audience is just too small

[22:04] <dalek> niecza: 2e15054 | sorear++ | docs/compiler.pod:

[22:04] <dalek> niecza: Add some overview of the compiler IRs

[22:04] <dalek> niecza: review: https://github.com/sorear/niecza/commit/2e150542ee85032a88367abb7bbdf3eabc29b381

[22:05] <PerlJam> moritz_: just the two of you?  :)

[22:05] <moritz_> PerlJam: no, more than that, but still not enough

[22:06] <takadonet> sidek: Looks like we are in the same boat

[22:07] * direction jumps on that boat

[22:08] <PerlJam> Perl 6 does make more sense if you shift your thinking slightly away from perl-5-think and slightly towards haskell-think

[22:08] <takadonet> PerlJam: never wrote a single line of Haskell... yet

[22:09] <PerlJam> s/haskell/lisp-or-scheme-but-without-the-parens/  then  :)

[22:09] * direction happens to be writing LISP as we speak

[22:10] <PerlJam> takadonet: I didn't even really know haskell existed until pugs came along.  Now it's my favorite of the FP languages.

[22:10] <PerlJam> direction: you have my condolences  :)

[22:11] <direction> eh its not so bad after you write a few thousand lines

[22:12] <sorear> ugh, LISP

[22:12] <direction> i write it in C-style then it gets converted to LISP style

[22:12] <sorear> who still uses LISP?

[22:12] <direction> Texas Instruments

[22:12] <PerlJam> sidek: all those emacs fans 

[22:12] <PerlJam> er, sorear 

[22:13] <sidek> I use lisp :(

[22:13] <sidek> and haskell

[22:13] <moritz_> lots of people use lisp. Lots of people use C. Lot's of people use Perl.

[22:13] * masak wants to use Lisp more

[22:13] <sorear> Lisp is one thing

[22:13] <sorear> LISP is something else entirely

[22:13] <sidek> well, I use scheme

[22:13] <sidek> but meh

[22:14] <sidek> it's a LISP 

[22:14] <PerlJam> masak: there's something deeply wrong with you

[22:14] <sorear> elisp is closer to LISP than Lisp; I'm trying to remember where it ranks

[22:14] <masak> PerlJam: I've learned to accept that. you should, too.

[22:16] *** stkowski joined
[22:19] * moritz_ is fascinated by people with whom something's deeply wrong

[22:20] *** [particle] left
[22:22] *** [particle] joined
[22:29] *** masonkramer left
[22:29] *** masonkramer joined
[22:29] *** toebu joined
[22:29] *** toebu is now known as TobiO|ref

[22:30] *** alester left
[22:41] *** whiteknight joined
[22:43] *** sidek left
[22:45] *** cdarroch left
[22:45] <Tene> I'd also like to use lisp more.  I had a lot of fun writing a scheme compiler for parrot.

[22:46] <simon> hehe

[22:47] *** KyleHa left
[22:51] *** risou joined
[23:03] *** envi left
[23:10] *** colomon joined
[23:12] *** icwiener left
[23:16] <diakopter> moritz_: then you're fascinated by everybody ;)

[23:17] *** wallberg left
[23:17] <masak> diakopter: that's the most dystopian I've ever seen someone add a winking smiley to.

[23:19] <diakopter> dystopian, or theologically mainstream globally

[23:19] <masak> that is true.

[23:20] <masak> I like how in ancient China, there essentially was one philosophical school arguing that people were fundamentally good-natured, and one school arguing that people were fundamentally rotten.

[23:21] <masak> and that nurture and society pulled people in the respective other direction.

[23:22] <diakopter> too bad the respective camps' definitions of "good" and "rotten" probably didn't align very perfectly :D

[23:22] <diakopter> let alone "nurture/society" vs "fundamentally"

[23:22] *** mavrc left
[23:23] <masak> I'm not sure I'm relaying this thousand-years-ago piece of history with total fidelity, mind.

[23:24] <sorear> closer to 2300

[23:25] <masak> I can't even get the dates right :P

[23:25] <masak> yes, 300 BCE.

[23:25] <masak> blog post! http://strangelyconsistent.org/blog/november-11-2010-avast

[23:25] <diakopter> I wonder when the Uncommon Era will begin

[23:26] <dalek> niecza: 4c09c28 | sorear++ | / (5 files):

[23:26] <dalek> niecza: Implement computed method names in generic roles

[23:26] <dalek> niecza: review: https://github.com/sorear/niecza/commit/4c09c2852d1b202147ca304594dfeebdbfea5f67

[23:28] *** hercynium left
[23:29] <masak> the "two languages, same family" meme spotted in a Japanese blog: http://www.publickey1.jp/blog/09/perl5perl6perl2.html

[23:30] *** timbunce_ joined
[23:31] *** TobiO|ref left
[23:34] *** jedai joined
[23:35] *** maluco_ joined
[23:36] *** jasonmay_ joined
[23:36] *** jrockway_ joined
[23:38] *** masak left
[23:39] <dalek> std: fc30a21 | TimToady++ | STD.pm6:

[23:39] <dalek> std: [STD] add colonpair as valid cclass_elem

[23:39] <dalek> std: 

[23:39] <dalek> std: In line with recent S05 change, <:foo['bar']> and such are now allowed

[23:39] <dalek> std: as valid character class designators, along with <alpha> and <[0-9]>.

[23:39] <dalek> std: The colon forms are always taken as Unicode properties.

[23:39] <dalek> std: review: https://github.com/perl6/std/commit/fc30a21686c20b598376cc547b6d78592706df10

[23:39] *** colomon_ joined
[23:41] *** colomon left
[23:41] *** meppl left
[23:41] *** jedai_ left
[23:41] *** Woody4286 left
[23:41] *** maluco left
[23:41] *** jasonmay left
[23:41] *** jrockway left
[23:41] *** literal left
[23:41] *** colomon_ is now known as colomon

[23:42] *** jasonmay_ is now known as jasonmay

[23:43] <sorear> TimToady++

[23:43] *** sftp left
[23:44] <diakopter> TimToady: what about variable properties ...  <:foo[$scalr]>

[23:46] <sorear> diakopter: <:foo($scalr)>

[23:47] <sorear> it's just a [ :lang(%*LANG<MAIN>) <colonpair> ]

[23:47] *** meppl joined
[23:47] *** Woody4286 joined
[23:53] *** plobsing left
[23:55] *** TobiO|ref joined
[23:57] <sorear> STD 20101111 pushed to CPAN

[23:57] *** literal joined
[23:57] *** fhelmberger left
