[00:00] <colomon> ash_: can you give an example I would understand of what's not working with BUILD?

[00:00] <ash_> t/spec/S12-construction/BUILD.t

[00:00] <ash_> try running that, its the issue i am talking about

[00:00] *** Chillance left
[00:03] <ash_> its not passing paramters to BUILD, if you do Foo.new(1); BUILD should get the 1, and its currently not at the moment

[00:04] <ash_> the *right way* for me to fix List.new is to use BUILD so, i just found the problem

[00:06] * colomon is still trying to understand the issue....

[00:07] <ash_> so, http://perlcabal.org/syn/S12.html#Construction_and_Initialization says if you want to say initialize some variables right? like my class has an attribute $!values, i can use BUILD($values) { $!values = $values; } to do that

[00:07] <ash_> it also says if you do Foo.new(5); it should be passing the 5 along to BUILD

[00:08] <ash_> in ng, the paramaters passed to new aren't getting passed to BUILD like they are supposed to be 

[00:11] <colomon> The error I get is "Unexpected named parameter 'b' passed" -- is that what you're seeing?

[00:12] <ash_> yeah

[00:13] <zamolxes> frettled: right :) it's 2 AM here as well, but we'll get in touch in a few hours

[00:14] <ash_> ng: class Foo { submethod BUILD($a) { say $a }; }; my $f = Foo.new(5);

[00:14] <p6eval> ng b65331: Not enough positional parameters passed; got 1 but expected 2␤current instr.: 'perl6;Foo;BUILD' pc 266 (EVAL_1:115)␤

[00:14] <ash_> colomon: thats a simple example of what I mean

[00:14] <ash_> that should say '5' 

[00:17] <colomon> ash_: oh, I wonder if :a(5) works at all....

[00:17] <ash_> ng: class Foo { submethod BUILD(:$a) { say $a }; }; my $f = Foo.new(:a(5));

[00:17] <p6eval> ng b65331: sh: ./perl6: No such file or directory␤

[00:17] <ash_> hmm

[00:17] <ash_> that worked locally

[00:18] <colomon> yeah, it looks like b => 5 gets the same result.

[00:18] <zamolxes> frettled: dug this out of my bash history :  tail -n 10000 /var/log/apache2/access.log |  perl -nE '($url, $s, $d) = m{"[A-Z]+ (/[^/ ]*)[/ ][^"]+" \d+ (\d+) (\d+) "}; $urls{"$url"}+=$d;$dt+=$d; END {print for map {  $d =int($urls{$_}/1000000);$p =int($urls{$_}*100/$dt); "$d $p% $_\n"} sort { $urls{$a}<=>$urls{$b} }keys %urls;}'

[00:19] <zamolxes> it aggregates resource consumption per first token from the URL

[00:23] *** xomas is now known as xomas_

[00:23] *** xomas_ is now known as xomas

[00:36] *** japhb left
[00:40] *** nihiliad left
[00:41] *** soupdragon left
[00:46] *** cognominal joined
[01:00] *** fridim_ left
[01:01] *** payload joined
[01:01] *** sbilik joined
[01:04] *** s1n joined
[01:04] <justatheory> TimToady, chromatic: What, has Twitter replaced IRC?

[01:07] *** PerlPilot is now known as PerlJam

[01:08] <PerlJam> justatheory: I think this thing called "life" may have replaced IRC

[01:09] <diakopter> PerlJam: I suspect justatheory is referring to chromatic_x's and TimToady's conversation on twitter this afternoon

[01:10] <justatheory> corect

[01:11] <cognominal> ha, ha,  as often, @chromatic_x shoot before aiming

[01:12] *** meppel left
[01:16] *** cdarroch left
[01:17] *** cotto joined
[01:23] *** lestrrat is now known as lest_away

[01:25] *** tideflat joined
[01:26] <tideflat> perl6: say 3

[01:26] <p6eval> elf 29531, pugs, rakudo 3867ff: 3␤

[01:26] <tideflat> perl6: say 1 + 1

[01:26] <p6eval> elf 29531, pugs, rakudo 3867ff: 2␤

[01:26] <tideflat> perl6:my $a = 10;say a

[01:27] <tideflat> perl6:my $a = 10;say $a

[01:27] <tideflat> perl6: my $a = 10;say $a

[01:27] <p6eval> elf 29531, pugs, rakudo 3867ff: 10␤

[01:27] *** Exodist left
[01:28] <tideflat> perl6: for $i in 1..1 say $a

[01:28] <p6eval> pugs: *** ␤    Unexpected " in"␤    expecting "::"␤    Variable "$i" requires predeclaration or explicit package name␤    at /tmp/gBzz33TGX6 line 1, column 7␤

[01:28] <p6eval> ..rakudo 3867ff: Confused at line 2, near "in 1..1 sa"␤in Main (file <unknown>, line <unknown>)␤

[01:28] <p6eval> ..elf 29531: Parse error in: /tmp/gaFeglxI4x␤panic at line 1 column 0 (pos 0): Can't understand next input--giving up␤WHERE: for $i in 1..1 say $a␤WHERE:/\<-- HERE␤  STD_red/prelude.rb:99:in `panic'␤  STD_red/std.rb:76:in `scan_unitstopper'␤  STD_red/std.rb:224:in `comp_unit'␤ 

[01:28] <p6eval> ..STD_red/std.rb:210:in `…

[01:29] <tideflat> perl6: for $i in 1..1 say $i

[01:29] <p6eval> pugs: *** ␤    Unexpected " in"␤    expecting "::"␤    Variable "$i" requires predeclaration or explicit package name␤    at /tmp/gvTTB8mbAm line 1, column 7␤

[01:29] <p6eval> ..rakudo 3867ff: Confused at line 2, near "in 1..1 sa"␤in Main (file <unknown>, line <unknown>)␤

[01:29] <p6eval> ..elf 29531: Parse error in: /tmp/xYm3D2KzlO␤panic at line 1 column 0 (pos 0): Can't understand next input--giving up␤WHERE: for $i in 1..1 say $i␤WHERE:/\<-- HERE␤  STD_red/prelude.rb:99:in `panic'␤  STD_red/std.rb:76:in `scan_unitstopper'␤  STD_red/std.rb:224:in `comp_unit'␤ 

[01:29] <p6eval> ..STD_red/std.rb:210:in `…

[01:29] <ash_> rakudo: .say for 1..3;

[01:30] <p6eval> rakudo 3867ff: 1␤2␤3␤

[01:30] <ash_> is that what you meant  to do tideflat? 

[01:30] <tideflat> yes

[01:30] <tideflat> Can i just play with perl6 here?

[01:31] <ash_> sure, or you can message p6eval 

[01:31] <ash_> if you don't want everyone to see it

[01:31] <tideflat> OK

[01:31] <tideflat> rakudo: .say for 1..3;

[01:31] <p6eval> rakudo 3867ff: 1␤2␤3␤

[01:31] <tideflat> rakudo: .say for 1..10 * 2;

[01:31] <p6eval> rakudo 3867ff: 1␤2␤3␤4␤5␤6␤7␤8␤9␤10␤11␤12␤13␤14␤15␤16␤17␤18␤19␤20␤

[01:32] *** ash_ left
[01:33] <tideflat> rakudo: say $_ * 2 for 1..10;

[01:33] <p6eval> rakudo 3867ff: 2␤4␤6␤8␤10␤12␤14␤16␤18␤20␤

[01:33] <tideflat> rakudo: say $_ ** 2 for 1..10;

[01:33] <p6eval> rakudo 3867ff: 1␤4␤9␤16␤25␤36␤49␤64␤81␤100␤

[01:33] <tideflat> rakudo: say $_ ** -2 for 1..10;

[01:34] <p6eval> rakudo 3867ff: 1␤0␤0␤0␤0␤0␤0␤0␤0␤0␤

[01:34] <tideflat> $_ * $_ for 1..10;

[01:34] <PerlJam> rakudo: say 4 ** -2

[01:34] <p6eval> rakudo 3867ff: 0␤

[01:34] <PerlJam> rakudo: say 4.0 ** -2

[01:34] <p6eval> rakudo 3867ff: 0.0625␤

[01:34] <PerlJam> rakudo: say 4 ** -2.0

[01:34] <p6eval> rakudo 3867ff: 0.0625␤

[01:35] <PerlJam> That's got to be a bug

[01:35] <tideflat> rakudo: say $_ * $_ for 1..10;

[01:35] <p6eval> rakudo 3867ff: 1␤4␤9␤16␤25␤36␤49␤64␤81␤100␤

[01:35] <tideflat> rakudo: say $_ ** $_ for 1..10;

[01:35] <p6eval> rakudo 3867ff: 1␤4␤27␤256␤3125␤46656␤823543␤16777216␤387420489␤10000000000␤

[01:36] <tideflat> rakudo: say "\$_ is $_" for 1..10;

[01:36] <p6eval> rakudo 3867ff: $_ is 1␤$_ is 2␤$_ is 3␤$_ is 4␤$_ is 5␤$_ is 6␤$_ is 7␤$_ is 8␤$_ is 9␤$_ is 10␤

[01:39] <tideflat> rakudo: say [+] 1..10;

[01:39] <p6eval> rakudo 3867ff: 55␤

[01:40] <tideflat> rakudo: say [+] 1..50;

[01:40] <p6eval> rakudo 3867ff: 1275␤

[01:40] <tideflat> rakudo: say [>] 1..50;

[01:40] <p6eval> rakudo 3867ff: 0␤

[01:40] <tideflat> rakudo: say [<] 1..50;

[01:41] <p6eval> rakudo 3867ff: 1␤

[01:41] <tideflat> rakudo: say [=<] 1..50;

[01:41] <p6eval> rakudo 3867ff: say requires an argument at line 2, near " [=<] 1..5"␤in Main (file src/gen_setting.pm, line 2593)␤

[01:41] <tideflat> rakudo: say [<=] 1..50;

[01:41] <p6eval> rakudo 3867ff: 1␤

[01:41] <tideflat> rakudo: say [>=] 1..50;

[01:41] <p6eval> rakudo 3867ff: 0␤

[01:42] <tideflat> rakudo: say [*] 1..5;

[01:42] <p6eval> rakudo 3867ff: 120␤

[01:43] <tideflat> say 1!;

[01:43] <tideflat> rakudo: say 1!

[01:43] <p6eval> rakudo 3867ff: Confused at line 2, near "!"␤in Main (file <unknown>, line <unknown>)␤

[01:44] <tideflat> rakudo: say (3,3,3) <<+>> (3,3,3)

[01:44] <p6eval> rakudo 3867ff: 666␤

[01:44] <diakopter> tideflat: you can msg p6eval directly

[01:44] <tideflat> I know. do you want me to?

[01:44] *** sbilik left
[01:45] <PerlJam> tideflat: sub postfix:<!>($n) { [*] 1..$n }; say 5!;  # for your factorial

[01:45] <diakopter> well, just remember there are a bunch of folks who read the irclogs (in their client or on the web)

[01:46] <tideflat> oh, i will msg p6eval directly from now on

[01:47] *** takadonet left
[01:48] *** japhb joined
[01:48] <colomon> tideflat: if you find something that puzzles you, please feel free to send it to p6eval here in #perl6.  :)

[01:49] <tideflat> Ok

[01:53] *** tideflat left
[01:57] *** snarkyboojum joined
[01:59] *** agentzh joined
[02:11] *** sbilik joined
[02:11] *** sbilik left
[02:12] *** snarkyboojum left
[02:14] *** lest_away is now known as lestrrat

[02:19] *** orafu left
[02:19] *** orafu joined
[02:19] *** jferrero left
[02:20] *** araujo left
[02:22] <drbean> http://doraku.asahi.com/ "An exclusive Asahi Newspaper entertainment site for the Beatles generation"

[02:23] <drbean> doraku = Do 楽

[02:31] *** jaldhar joined
[02:44] <pugs_svn> r29532 | diakopter++ | [sprixel] add action() combinator (inject arbitrary JS code into the parser function on node success).\ 

[02:44] <pugs_svn> r29532 | Add notes about plans for an analysis phase for Boyer-Moore & JS literal RegExp (fastest by far on \

[02:44] <pugs_svn> r29532 | the shootout language game) substitution.

[02:51] *** agentzh left
[02:54] <diakopter> ENOPM

[02:57] <Infinoid> ohnoes

[03:01] *** nihiliad joined
[03:02] *** agentzh joined
[03:04] *** tideflat joined
[03:04] *** rachelBROWN left
[03:05] <tideflat>  /msg p6eval perl6: for ['cats','dogs','fish'] {say "$_ are the best amimal"}

[03:06] <diakopter> pmi<tab>: do nqp-rx's grammars run the Actions during the parse (so potentially multiple times incl backtracking), or after the parse once?

[03:06] <diakopter> or anyone else who might know.

[03:09] *** agentzh left
[03:25] *** am0c left
[03:27] *** cls_bsd left
[03:28] <tideflat> perl6: my $a = 'abe';for 1..10 {say $a;$a ~= 'abe'}

[03:28] <p6eval> pugs, rakudo 3867ff: abe␤abeabe␤abeabeabe␤abeabeabeabe␤abeabeabeabeabe␤abeabeabeabeabeabe␤abeabeabeabeabeabeabe␤abeabeabeabeabeabeabeabe␤abeabeabeabeabeabeabeabeabe␤abeabeabeabeabeabeabeabeabeabe␤

[03:28] <p6eval> ..elf 29532: Unknown rule: infix_postfix_meta_operator:=␤It needs to be added to ast_handlers.␤ at ./elf_h line 2850␤

[03:39] *** araujo joined
[03:40] *** tideflat left
[03:59] *** agentzh joined
[04:06] *** dalek left
[04:06] *** Baggiokwok joined
[04:07] *** Juerd left
[04:07] *** Juerd joined
[04:08] *** dalek joined
[04:08] *** hatsefla1s joined
[04:08] *** hatseflats left
[04:12] *** synth left
[04:12] *** nihiliad left
[04:20] *** Khisanth left
[04:31] *** cognominal left
[04:53] *** gfx joined
[05:17] *** stephenlb left
[05:35] *** Khisanth joined
[05:39] *** pinc0de left
[05:48] *** jrockway joined
[05:48] *** youwin left
[05:56] *** agentzh left
[06:00] *** cls_bsd joined
[06:00] *** cls_bsd left
[06:01] *** cls_bsd joined
[06:22] *** szabgab left
[06:25] *** agentzh joined
[06:29] *** Baggiokwok left
[06:35] *** justatheory left
[06:42] *** szabgab joined
[07:00] *** cognominal joined
[07:04] *** kaare joined
[07:05] *** kaare is now known as Guest43559

[07:05] *** rgrau` joined
[07:11] *** allbery_b left
[07:11] *** rgrau` left
[07:17] *** allbery_b joined
[07:18] *** Su-Shee joined
[07:19] *** redicaps joined
[07:37] *** patspam left
[07:39] *** iblechbot joined
[07:52] *** lestrrat is now known as lest_away

[08:03] *** baest joined
[08:09] *** idemal left
[08:09] *** akl left
[08:09] *** silug left
[08:09] *** allbery_b left
[08:09] *** redicaps left
[08:09] *** IllvilJa left
[08:09] *** perigrin_ left
[08:09] *** buubot left
[08:09] *** pnu left
[08:09] *** skeptical_p left
[08:09] *** rgrau left
[08:09] *** kst left
[08:09] *** xenoterracide left
[08:09] *** ascent_ left
[08:09] *** cosimo left
[08:09] *** p6eval left
[08:09] *** Helios-- left
[08:09] *** Trey left
[08:09] *** c1sung left
[08:09] *** moritz_ left
[08:09] *** cls_bsd left
[08:09] *** payload left
[08:09] *** Patterner left
[08:09] *** mathw left
[08:09] *** Grrrr left
[08:09] *** wolverian left
[08:09] *** betterworld left
[08:09] *** tkr left
[08:09] *** charsbar_ left
[08:09] *** cxreg left
[08:09] *** TimToady left
[08:09] *** omega__ left
[08:09] *** Caelum left
[08:09] *** tarbo2_ left
[08:09] *** IRSeekBot left
[08:09] *** awwaiid left
[08:09] *** agentzh left
[08:09] *** jrockway left
[08:09] *** japhb left
[08:09] *** rjh left
[08:09] *** mikehh left
[08:09] *** slavik left
[08:09] *** Guest44003 left
[08:09] *** hudnix left
[08:09] *** PZt left
[08:09] *** frew left
[08:09] *** Intensity left
[08:09] *** Tene left
[08:10] *** hanekomu left
[08:10] *** buu left
[08:10] *** he_ left
[08:10] *** frettled left
[08:10] *** rhr left
[08:10] *** diakopter left
[08:10] *** BooK left
[08:10] *** szbalint left
[08:10] *** Supaplex left
[08:10] *** broquaint left
[08:10] *** obra left
[08:10] *** ilbot2 left
[08:10] *** Ryan52 left
[08:10] *** hejki left
[08:10] *** huf left
[08:11] *** mikehh joined
[08:11] *** Tene joined
[08:11] *** redicaps joined
[08:11] *** allbery_b joined
[08:11] *** agentzh joined
[08:11] *** cls_bsd joined
[08:11] *** jrockway joined
[08:11] *** japhb joined
[08:11] *** payload joined
[08:11] *** rjh joined
[08:11] *** Patterner joined
[08:11] *** IllvilJa joined
[08:11] *** perigrin_ joined
[08:11] *** slavik joined
[08:11] *** Guest44003 joined
[08:11] *** hudnix joined
[08:11] *** buubot joined
[08:11] *** pnu joined
[08:11] *** akl joined
[08:11] *** PZt joined
[08:11] *** skeptical_p joined
[08:11] *** cxreg joined
[08:11] *** frew joined
[08:11] *** Intensity joined
[08:11] *** rgrau joined
[08:11] *** kst joined
[08:11] *** xenoterracide joined
[08:11] *** ascent_ joined
[08:11] *** hanekomu joined
[08:11] *** buu joined
[08:11] *** tkr joined
[08:11] *** broquaint joined
[08:11] *** BooK joined
[08:11] *** Helios-- joined
[08:11] *** silug joined
[08:11] *** szbalint joined
[08:11] *** betterworld joined
[08:11] *** omega__ joined
[08:11] *** idemal joined
[08:11] *** c1sung joined
[08:11] *** Trey joined
[08:11] *** p6eval joined
[08:11] *** charsbar_ joined
[08:11] *** TimToady joined
[08:11] *** awwaiid joined
[08:11] *** IRSeekBot joined
[08:11] *** irc.freenode.net sets mode: +ovov Tene p6eval TimToady IRSeekBot

[08:11] *** Grrrr joined
[08:11] *** cosimo joined
[08:11] *** Caelum joined
[08:11] *** diakopter joined
[08:11] *** rhr joined
[08:11] *** huf joined
[08:11] *** moritz_ joined
[08:11] *** wolverian joined
[08:11] *** tarbo2_ joined
[08:11] *** mathw joined
[08:11] *** irc.freenode.net sets mode: +oooo diakopter moritz_ wolverian mathw

[08:11] *** Ryan52 joined
[08:11] *** frettled joined
[08:11] *** Supaplex joined
[08:11] *** ilbot2 joined
[08:11] *** hejki joined
[08:11] *** obra joined
[08:11] *** he_ joined
[08:11] *** irc.freenode.net sets mode: +ov frettled ilbot2

[08:12] *** ashizawa left
[08:12] *** partisan left
[08:12] *** solarion left
[08:14] *** ssm left
[08:15] *** drbean left
[08:15] *** drbean joined
[08:22] *** lest_away is now known as lestrrat

[08:23] *** lestrrat is now known as lest_away

[08:39] *** dalek left
[08:39] *** dalek joined
[08:40] *** drbean left
[08:40] *** elmex left
[08:40] *** elmex joined
[08:43] *** drbean joined
[08:43] *** stepnem left
[08:48] *** stepnem joined
[08:53] *** Mantis joined
[08:57] *** Baggiokwok joined
[08:59] <draegtun> Morning all.  Has promised I posted my perl6 followup (last night):  http://transfixedbutnotdead.com/2010/01/14/anyone-for-perl-6-metaprogramming/

[08:59] <Su-Shee> draegtun: I already read it before breakfast!

[09:00] *** Trey left
[09:00] <draegtun> Su-Shee: Hope if didn't upset the breakfast :-)

[09:00] *** Trey joined
[09:02] <Su-Shee> no, not at all. 

[09:03] <Su-Shee> though every time I read something like this I keep thinking how much a good book about contemporary oo mixed with meta programming NOT based on Java is needed...

[09:04] <draegtun> Su-Shee: I agree.  Perl needs a good meta programming book methinks

[09:04] <mathw> draegtun: thanks for that, I am reading now...

[09:05] <draegtun> mathw: Thanks for reading, hope you enjoy

[09:05] <Su-Shee> draegtun: I went through the shelf with "OO" recently .. all java. annoying. 

[09:06] <mathw> draegtun: Mmm nice. I did find your consistent use of {} for interpolation interesting.

[09:06] *** dakkar joined
[09:08] <draegtun> mathw: thanks.  I think I was just keeping it consistent to original Ruby/Javascript examples

[09:09] <sjohnson> hi matt!

[09:11] <mathw> draegtun: It might lead a few people to think it's compulsory even for simple scalars, but maybe I'm just being twitchy and paranoid

[09:11] <mathw> sjohnson: hi

[09:11] <mathw> draegtun: They can always be informed otherwise

[09:13] <draegtun> draegtun: I see... I thought {} were compulsory ;-)

[09:13] <draegtun> mathw: I see.. I thought  {} were compulsory  (oops!)

[09:15] <mathw> no, ordinary scalars interpolate as in Perl 5

[09:16] <draegtun> mathw: cool.   Obviously reading an old doc again :(

[09:16] <mathw> {} is for more complex things like method calls and arrays

[09:17] <mathw> I don't think they were ever compulsory

[09:17] <mathw> Unless they were for a time in the period where I wasn't paying attention

[09:20] *** JohnDoe365 joined
[09:20] *** JohnDoe365 left
[09:30] *** rekhajos joined
[09:31] *** jogla_ joined
[09:31] *** go|dfish left
[09:31] *** jogla left
[09:35] *** drbean left
[09:37] <draegtun> mathw: Well everything on the web isn't always true :)

[09:37] <draegtun> mathw: I've amended my gist accordingly:   http://gist.github.com/276591

[09:37] <draegtun> mathw: only place I needed the {} was on   "{$.name}'s colour is $colour_name "   (same reason as in Perl5)

[09:37] <draegtun> mathw: I'll add a comment to my blog post referring to this gist

[09:45] <moritz_> good morning

[09:52] *** agentzh left
[09:55] *** redicaps1 joined
[09:55] *** redicaps left
[09:55] *** baest left
[09:57] <mathw> draegtun: Great stuff

[09:57] *** zamolxes_ joined
[09:57] *** zamolxes left
[09:58] <moritz_> aye, draegtun++

[10:01] *** JimmyZ joined
[10:03] *** sbp left
[10:04] *** redicaps1 left
[10:06] *** mberends joined
[10:07] *** baest joined
[10:08] *** sbp joined
[10:11] *** meneldor joined
[10:11] <meneldor> Hi all

[10:13] <Supaplex> all is on vacation

[10:13] <pugs_svn> r29533 | mberends++ | [vill] Code generator groundwork for 'my $foo="bar";'. Various parts are now awaiting a formal runtime metamodel... 

[10:13] *** JimmyZ left
[10:14] *** payload left
[10:15] *** ssm joined
[10:15] *** ssm left
[10:16] *** ssm joined
[10:21] *** cognominal left
[10:21] *** cognominal joined
[10:27] *** payload joined
[10:29] *** drbean joined
[10:29] *** cognominal left
[10:30] *** cognominal joined
[10:42] *** meppl joined
[11:01] *** jaldhar left
[11:13] *** jaldhar joined
[11:15] *** draegtun left
[11:26] *** go|dfish joined
[11:32] *** barney joined
[11:34] *** gfx left
[11:40] *** payload left
[11:48] *** hanekomu left
[12:00] *** SmokeMachine joined
[12:04] *** bluescreen joined
[12:07] *** ssm left
[12:08] *** rekhajos left
[12:12] *** Baggiokwok left
[12:22] *** Mantis left
[12:22] *** cotto_w0rk joined
[12:24] *** cotto_working left
[12:29] *** payload joined
[12:32] *** ruoso joined
[12:44] *** cognominal left
[12:46] *** iblechbot left
[12:50] *** clintongormley joined
[12:53] *** cognominal joined
[12:53] *** IllvilJa left
[12:55] *** payload left
[13:03] *** ssm joined
[13:23] *** soupdragon joined
[13:32] *** plainhao joined
[13:34] *** takadonet joined
[13:34] <takadonet> morning all

[13:37] <colomon> morning!

[13:38] <takadonet> colomon: alive and well sir?

[13:39] <colomon> not yet slain by this cold, anyway. :)

[13:40] <jnthn> eww cold :-(

[13:40] *** korpenkraxar joined
[13:40] <jnthn> Get well soon.

[13:40] * jnthn 's is better today than yesterday.

[13:41] <colomon> It's been a whole week now, so I think it's reached the point where I have to pretend it's better and just get on with life.

[13:43] <colomon> Is rakudo supposed to have a release next week?

[13:45] <jnthn> I guess so.

[13:46] <colomon> eeek!

[13:50] *** synth joined
[13:51] *** bluescreen left
[13:55] *** payload joined
[14:04] *** lichtkind joined
[14:05] *** bluescreen joined
[14:17] *** y3llow joined
[14:19] *** Slug joined
[14:20] *** nihiliad joined
[14:35] *** Baggiokwok joined
[14:35] *** Baggiokwok left
[14:36] *** Guest43559 left
[14:38] *** jan_ left
[14:53] *** ash_ joined
[14:57] *** ash_ left
[15:01] *** ash_ joined
[15:02] *** s1n left
[15:04] <ash_> rakudo: my $a = List.new(1, 2, 3); say $a.perl; $a = list(1, 2, 3); say $a.perl;

[15:05] <p6eval> rakudo 3867ff: []␤[1, 2, 3]␤

[15:05] <ash_> should those be the same?

[15:09] *** pnate left
[15:10] *** pnate joined
[15:14] *** bluescreen left
[15:15] *** cdarroch joined
[15:17] *** s1n joined
[15:19] *** mberends left
[15:21] *** iblechbot joined
[15:25] *** payload left
[15:27] *** payload joined
[15:29] <ash_> rakudo: my $a = Array.new(1, 2, 3); say $a.perl;

[15:29] <p6eval> rakudo 3867ff: []␤

[15:29] <ash_> i am begining to wonder what the "right" functionality of .new on List/Array is...

[15:30] *** Exodist joined
[15:30] <colomon> ash_: I would think those should be the same.

[15:30] <colomon> I doubt it is spec'd one way or another...

[15:30] <ash_> yeah, digging in S32-Containers i haven't seen any specs on .new for List/Array

[15:30] <colomon> This is where we get to use our judgement and influence the future.  :)

[15:31] *** am0c joined
[15:32] <ash_> rakudo: class Foo { submethod BUILD(*@args) { say @args.perl; } }; Foo.new(1, 2, 3);

[15:32] <ash_> slurpies in BUILD seem to function funny 

[15:32] <ash_> ng: class Foo { submethod BUILD(*@args) { say @args.perl; } }; Foo.new(1, 2, 3)

[15:32] <p6eval> rakudo 3867ff:  ( no output )

[15:32] <p6eval> ng b65331: Method 'perl' not found for invocant of class 'Undef'␤current instr.: 'perl6;Array;_block3582' pc 240746 (src/gen/core.pir:20091)␤

[15:33] <ash_> i guess that's the next thing, should a slupry in a BUILD work? 

[15:33] <ash_> i haven't seen that in the specs either

[15:34] <jnthn> ash_: No, you probably want to do something like (if you want List.new(1,2,3) to be like list(1,2,3)

[15:35] <jnthn> method new(*@values) { self.bless(values => @values) }; submethod BUILD(:@values) { ... }

[15:35] <jnthn> That is, transform the positionals into a single named arg that BUILD will receive.

[15:36] <ash_> hm, k

[15:36] <PerlJam> but should List.new and Array.new be that way out of the box?

[15:37] <jnthn> PerlJam: In what sense?

[15:37] <jnthn> YOu mean, should they be spec'd to work like that?

[15:37] <PerlJam> aye

[15:37] <ash_> ng: augment class List { method new(*@args) { say 'me'; } }; List.new(1, 2, 3) # any reason that's not dispatching to new(*@args)? 

[15:37] <p6eval> ng b65331:  ( no output )

[15:38] <colomon> ash_: should be multi method, yes?  But I remember that not working yesterday for me...

[15:39] <jnthn> ash_: No, that's...odd.

[15:39] <ash_> ng: augment class List { multi method new(*@args) { say 'me'; } }; List.new(1, 2, 3)

[15:39] <p6eval> ng b65331:  ( no output )

[15:39] * ash_ shrug *out of my knowledge of rakudo now* 

[15:40] <colomon> .oO(hope jnthn has a clue, 'coz I'm stumped...)

[15:41] *** justatheory joined
[15:41] <PerlJam> Can you turn a multi into an only via augment?

[15:41] <PerlJam> (sure it'll cause breakage, but can it be done?)

[15:42] *** synth left
[15:44] *** nihiliad left
[15:46] <ash_> ng: augment class List { method new(*%kwargs, *@args) { say 'me'; } }; List.new(1, 2, 3) # adding a named slurpy doesn't help, i tried it both as  the first and second argument too

[15:46] <p6eval> ng b65331:  ( no output )

[15:47] * jnthn has to go out for meeting with freinds now...back later...

[15:47] <ash_> cya jnthn 

[15:50] <ash_> commuting ^ 

[15:50] <ash_> s/\^/&/

[15:50] *** ash_ left
[15:54] *** Psyche^ joined
[15:58] *** alester joined
[16:00] *** Slug left
[16:01] *** soupdragon left
[16:01] *** Patterner left
[16:01] *** Psyche^ is now known as Patterner

[16:02] *** hanekomu joined
[16:05] *** jan_ joined
[16:07] *** Exodist left
[16:07] *** Exodist joined
[16:08] *** KyleHa joined
[16:12] *** soupdragon joined
[16:12] *** cotto left
[16:13] *** cotto joined
[16:16] *** barney left
[16:16] *** soupdragon left
[16:18] *** soupdragon joined
[16:27] *** jaldhar left
[16:28] *** jaldhar joined
[16:28] *** ignacio_ joined
[16:37] *** tylerni7 left
[16:38] *** tylerni7 joined
[16:42] *** jackyf joined
[16:44] <TimToady> PerlJam: functions are not search for in packages (except maybe as a last resort); you may put an only in an inner scope that hids outer multies

[16:44] <TimToady> *searched

[16:46] <TimToady> (and by putting CORE as an outer lexical scope, this is how we guarantee that a user's function defs are future proof against new keywords)

[16:52] *** korpenkraxar left
[16:58] *** meneldor left
[17:07] *** alester left
[17:10] *** ive joined
[17:21] *** synth joined
[17:24] *** KyleHa left
[17:24] *** KyleHa joined
[17:38] *** hercynium joined
[17:43] *** payload left
[17:45] <TimToady> *hides

[17:45] <diakopter> eh

[17:46] <TimToady> (correcting a typo from an hour ago)

[17:47] <takadonet> ...

[17:47] <diakopter> '*hides' was correcting the typo

[17:48] <TimToady> ablutions &

[17:49] *** pincode joined
[17:51] *** pincode is now known as pinc0de

[17:57] <pugs_svn> r29534 | kyle++ | [t/spec] Test for RT 72084: sub name beginning with last- 

[17:57] <pugs_svn> r29535 | kyle++ | [t/spec] Test for RT 72048: !~~ of role on instance is always true 

[18:04] <Tene> what's the motivation for asking "Was I called as a sub or as a method"?  I'm missing something.

[18:07] *** dakkar left
[18:10] *** pnate left
[18:11] *** pnate joined
[18:16] *** jackyf left
[18:22] *** stephenlb joined
[18:23] *** kaare_ joined
[18:24] *** uniejo joined
[18:24] *** ive left
[18:24] *** ive joined
[18:24] <PerlJam> Tene: me too

[18:25] <PerlJam> (at least I don't understand it in a Perl 6 context)

[18:25] *** jackyf joined
[18:26] <TimToady> he's using it to solve a P5 namespace collision that P6 doesn't have

[18:26] <TimToady> (hence my remark yesterday about "namespace superstition")

[18:27] *** ash_ joined
[18:28] *** ash__ joined
[18:28] *** ash_ left
[18:28] *** ash__ left
[18:28] *** ash_ joined
[18:29] <PerlJam> I guess I was puzzled by "...I worry that the method/sub invocation isomorphism will be a trap just as in Perl 5."

[18:30] * ruoso .oO( IRC is always more productive than twitter )

[18:30] *** petsepes joined
[18:30] <petsepes> hi

[18:30] <ruoso> If someone really needs the distinction, he can install a different routine in the sub

[18:30] <PerlJam> petsepes: greetings

[18:32] <TimToady> it's a trap in P5 because P5 conflates the method and subroutine namespaces

[18:33] *** lumi joined
[18:33] <TimToady> P6 doesn't, so it's not a trap unless you write a custom dispatcher that confuses things

[18:33] <diakopter> or a compiler/runtime that confuses things.

[18:34] <diakopter> note the lack of closing </snark> tag

[18:34] <PerlJam> TimToady: right, I was confused by the worry, because it seems you have to do it to yourself 

[18:34] <PerlJam> (in perl 6)

[18:35] *** petsepes left
[18:36] *** rgrau` joined
[18:37] *** Chillance joined
[18:39] <TimToady> the upside of the isomorphism is that a dispatcher never has to worry about what kind of thing it's calling, because dispatchers only ever call functions, even when that function is implementing a method

[18:39] <TimToady> which makes it easy to write dispatcher that shoots yourself in the foot if you want to :)

[18:39] <ruoso> and methods are not our by default anymore, right?

[18:39] <TimToady> but also allows us to export methods without writing wrappers

[18:39] <TimToady> correct

[18:40] <TimToady> if you *do* declare it our, you may call it as a subroutine

[18:40] <TimToady> (or my)

[18:40] <ruoso> I think the issue is pretty much addressed...

[18:40] <PerlJam> It's only a real problem if you're coming from a Perl 5 background and expect that you have do Perl 5ish things  :)

[18:41] <TimToady> the downside from the VM perspective is that if your VM compartmentalizes, you end up writing wrappers anyway

[18:41] <ruoso> and then the question is not "was this called as a method or as a sub", but "which was the dispatcher that called this?" since we could eventually have some other type of dispatcher

[18:41] <TimToady> or you just don't rely on the VM's dispatcher from the user level

[18:42] <TimToady> since it probably doesn't implement nextsame anyway...

[18:42] <TimToady> from the P6 perspective, it's a no-brainer to say that underneath, everything gets invoked as a function

[18:42] <ruoso> but I think that someone asking "which dispatcher was used here" can deal with implementation-specific stuff

[18:43] <TimToady> well, a VM is not guaranteed to be able to tell you which dispatcher was used either, for that matter

[18:43] *** cognominal left
[18:44] <ruoso> it needs to some extent if it supports nextsame

[18:45] <TimToady> we want to support custom dispatchers in any case; use of a specialized VM dispatcher would be an optimization from the general case

[18:46] <TimToady> in some cases a very good optimization

[18:46] <TimToady> but not at the expense of broken semantics

[18:46] <TimToady> (unless you predeclare broken semantics :)

[18:48] <PerlJam> a custom dispatcher seems like an "all bets are off" kind of thing.  If you're worried about shooting yourself in the foot, you've only got yourself to blame because the default dispatcher(s) protect you.   

[18:48] <PerlJam> Is that an accurate statement?

[18:48] <PerlJam> (with some wiggle room on "protect"  :)

[18:50] <TimToady> seems about right

[18:50] <TimToady> but people coming from the world of P5 programming have a peculiar set of phobias which will take time to cure

[18:51] <ash_> rakudo: my $a = List.new(1, 2, 3); say $a.perl; my $b = list(1, 2, 3); say $b.perl; say $a == $b; # should this be true? 

[18:51] <p6eval> rakudo 3867ff: []␤[1, 2, 3]␤0␤

[18:56] <TimToady> a great many Perl 5 "Best Practices" are really workarounds to design flaws, but prescriptive grammarians will continue to try to apply those workarounds after they are no longer needed.

[18:57] <PerlJam> That first clause seems like a really good answer to why Perl 6 is so different from Perl 5

[18:57] <diakopter> who really needs vowel points anyway

[19:03] <diakopter> .oO( writing emitters specialized to particular permutations of its variations should eventually be resolved back to writing one emitter with lots of checks per instruction to-be-emitted. longer compilation time, but much more composably optimizable. )Oo.

[19:10] *** mssm joined
[19:15] *** tolkad joined
[19:16] <tolkad> perl6: print "test";

[19:16] <p6eval> elf 29535, pugs, rakudo 3867ff: test

[19:16] <tolkad> !help

[19:19] <tolkad> tell lambdabot @echo

[19:19] <tolkad> @echo

[19:19] <tolkad> ooh nvm

[19:19] *** tolkad left
[19:24] <ash_> so, according the dispatch mechanism, if there are 2 methods, 1 with foo(*@args); and another with foo(*@args, *%kwargs); and you call foo(1, 2, 3); that should dispatch to the one only with the arg's slurpy, not kwargs, right? 

[19:30] <TimToady> it's arguable whether a (nilable) slurpy should be considered an extra constraint, but we really need an opinion from the implementors whether it's practical to make the distinction

[19:30] <TimToady> the fact that theres another declaration effectively turns the * into a +, by that reckoning

[19:31] <TimToady> which seems a bit bogus

[19:31] <TimToady> why not just write the one method to handle the Nil case

[19:33] <ash_> so, 1 with foo ( ) # no params? you mean? 

[19:36] *** tylerni7 left
[19:36] <ash_> I guess i am trying to figure out why this isn't working: 

[19:36] <ash_> ng: augment class List { multi method new(*@args) { say @args; } }; class Foo { multi method new(*@args) {say @args;}}; List.new(1, 2, 3); Foo.new(1, 2, 3);

[19:36] <p6eval> ng b65331: 123␤

[19:37] <ash_> it should of printed 123 twice, not once

[19:37] <ash_> hmmm

[19:37] <ash_> might be a bug in the dispatcher, rather than an issue with the dispatching strategy

[19:39] <ash_> I thought that might of been related to the fact that Mu has a new(*@args, *%kwargs) but it doesn't look like thats the problem

[19:40] *** tylerni7 joined
[19:47] *** cotto_working joined
[20:04] *** cotto_w0rk left
[20:06] *** RaceCondition joined
[20:06] <PerlJam> RaceCondition: greetings

[20:06] <RaceCondition> PerlJam: hi again

[20:07] <RaceCondition> quiet here

[20:07] <PerlJam> RaceCondition: it's you imagination  :)

[20:07] <PerlJam> (lots of out-of-#perl6-band communication happens too)

[20:08] <PerlJam> RaceCondition: What's your interest in Perl 6?  Have you tried Rakudo yet?  Or was it more just curiousity about the state of things?

[20:08] *** tylerni7 left
[20:08] <RaceCondition> PerlJam: curiosity, yeah... I don't have the need and time to learn perl

[20:09] <PerlJam> What languages are you already familiar with?

[20:09] <RaceCondition> well most of the mainstream ones, but I've peeked into many

[20:10] <ash_> i personally like multi-methods and roles in perl 6, not many languages have either of those, and even fewer have both

[20:11] <ash_> that and you can define your own operators, that ones kinda cool 

[20:12] <ash_> rakudo: sub postfix:<!>(Int $x) { [*] 1..$x }; say 5!;

[20:12] <p6eval> rakudo 3867ff: 120␤

[20:12] <ash_> moritz_++ for that one 

[20:14] <KyleHa> I like type constraints.

[20:15] *** sjohnson sets mode: +o PerlJam

[20:15] <KyleHa> rakudo: sub postfix:<!>(Int $x) { [*] 1..$x }; say "five"!

[20:15] <p6eval> rakudo 3867ff: Nominal type check failed for parameter '$x'; expected Int but got Str instead␤in Main (file src/gen_setting.pm, line 324)␤

[20:16] <ash_> rakudo: multi sub postfix:<!>(Int $x) { [*] 1..$x }; mutli sub postfix:<!>(Str $x) { $x.uc }; say "five"!; say 5!;

[20:16] <p6eval> rakudo 3867ff: Could not find non-existent sub mutli␤in Main (file src/gen_setting.pm, line 324)␤

[20:16] <ash_> oops

[20:18] <ash_> rakudo: multi sub postfix:<!>(Int $x) { [*] 1..$x }; multi sub postfix:<!>(Str $x) { $x.uc }; say "five"!; say 5!;

[20:18] <p6eval> rakudo 3867ff: FIVE␤120␤

[20:18] <ash_> silly spelling  

[20:19] <KyleHa> How hard is it to get Perl 6 to recognize 'mutli' as 'multi'?

[20:20] <ash_> macro mutli { 'multi' } ? 

[20:20] <KyleHa> Macros make me think of TeX.

[20:20] <ash_> they make me think #define 

[20:24] <lichtkind> can anybody here answer to me some things about proto regexen?

[20:25] <ash_> sure, we can try 

[20:32] *** rgrau` left
[20:35] *** Exodist left
[20:40] <RaceCondition> how does Perl 6 compare with Lisp? I see it has macros and multimethods

[20:45] *** clintongormley left
[20:46] <ash_> in what respects? would you like to compare them in? 

[20:46] <ash_> i think perl 6 has less ( )

[20:47] <ash_> well most of the time :P 

[20:47] <KyleHa> Perl 6 has more funny characters for some definitions of 'funny'.

[20:48] <ash_> perl 6's syntax doesn't fit on a 2"x"4 note card 

[20:48] <ash_> i think

[20:48] <ash_> well maybe if you had a really good printer 

[20:48] <RaceCondition> so why does Lisp's syntax fit?

[20:48] <TimToady> doesn't have any :)

[20:49] <RaceCondition> oh, in that sense

[20:49] <ash_> lol lisp's syntax is very simple 

[20:49] <RaceCondition> I thought you mean "lisp code doesn't fit on a ..."

[20:50] <TimToady> to the first approximation, Perl 6 is Lisp with a decent syntax, and minus a lot of assumptions about how lists should be represented :)

[20:51] <TimToady> but that's also a vast oversimplification...

[20:52] <KyleHa> I thought LISP was a vast oversimplification.

[20:52] <TimToady> nevertheless, despite all the trappings of OO, Perl 6 is fundamentally more in the FP camp

[20:52] *** alester joined
[20:54] <diakopter> ENOPMSTILL

[20:54] *** clintongormley joined
[20:54] <diakopter> does anyone know when the Actions in an nqp-rx grammar are run?

[20:56] <TimToady> I believe they are run at reduction time, but note that Perl 6 grammar isn't supposed to backtrack much.

[20:57] <KyleHa> Is moritz_ around today?  I'd like to reorganize (or disorganize) S03-operators/smartmatch.t, but I don't want to overcrud the spectests.

[20:57] <TimToady> there are still only two spots that we rely heavily on backtracking, and neither of them is likely to prove a performance problem.

[20:58] <KyleHa> @seen moritz_

[20:59] <TimToady> rakudo: say [+42].perl

[20:59] <p6eval> rakudo 3867ff: [42]␤

[20:59] <TimToady> there's one of 'em

[21:00] <TimToady> rakudo: $_ = "foo"; say "$_.notamethod"

[21:00] <p6eval> rakudo 3867ff: foo.notamethod␤

[21:00] <TimToady> there's the other

[21:01] *** plainhao left
[21:01] <ash_> in the second case, is that backtracking to find the most recent defintiion of $_ ?

[21:01] <TimToady> no

[21:01] <TimToady> it's distinguishing from this:

[21:01] <TimToady> rakudo: $_ = "foo"; say "$_.notamethod()"

[21:01] <p6eval> rakudo 3867ff: foo.notamethod()␤

[21:01] <TimToady> well, it should be :)

[21:02] <ash_> oh, okay, so it has to string interpolation? 

[21:02] <TimToady> finding the end of the interpolation involves looking for trailing brackets of some kind or other

[21:03] <TimToady> and not just the first brackets, but the last brackets

[21:03] <TimToady> "$foo.bar().baz()"

[21:04] <TimToady> or a more likely case, "$x[$y]{$z}"

[21:04] <sjohnson> go to baktiz!!

[21:04] *** Woody2143 left
[21:07] *** mssm left
[21:08] *** clintongormley left
[21:09] <frettled> oh!

[21:13] <uniejo> Is the interpolation length also depending on does Callable, Positional and does Associative ?

[21:16] <KyleHa> Is dev.pugscode.org relocated or just out of the picture?

[21:21] <frettled> KyleHa: if you're missing Trac, see the top post at howcaniexplainthis.blogspot.com :)

[21:21] <KyleHa> frettled: Thanks, that's just what I was missing.

[21:23] <frettled> Someone™ just needs to get enough tuits to fix the spam problem.

[21:25] *** rgrau` joined
[21:26] *** RaceCondition left
[21:28] *** Woody2143 joined
[21:31] *** lumi left
[21:31] *** lumi joined
[21:32] <KyleHa> The first thing that pops into my mind is to block Google via robots.txt.

[21:34] <KyleHa> The spammers are submitting bogus tickets, which I don't think anyone legitimately uses anyway, so lets amputate that.

[21:34] <PerlJam> Starting with a new VM is probably the most important thing IMHO

[21:34] <frettled> mm

[21:34] <PerlJam> I'm a fan of clean slates where I can get them.

[21:35] <diakopter> KyleHa: do you know anyone who was using dev.pugscode.org?  (and if you were, what were you using on it?)

[21:36] <KyleHa> diakopter: I looked at the timeline to see recent commits to the pugs repo.  From there I'd look at diffs, etc.

[21:36] <diakopter> oh

[21:36] <KyleHa> That's how I kept up with spectest activity, back when I was keeping up.  It's been a while since I looked.

[21:36] <diakopter> KyleHa: may I interest you in this instead?  http://perlcabal.org/svn/pugs/log

[21:37] <diakopter> its rss feed has been <ahem> customized for use by pugs_svn

[21:38] <diakopter> KyleHa: that SVN::Web installation is also on feather.

[21:39] <diakopter> also, it's the one to which the irclog web ui constructs links

[21:41] <KyleHa> Oh, very nice.  Thank you, diakopter++

[21:42] <ash_> rakudo: class List is also { method new(*@args) { say 'hi'} }; List.new(1, 2, 3);

[21:42] <p6eval> rakudo 3867ff:  ( no output )

[21:42] * diakopter fights cisco anyconnect

[21:44] *** SmokeMachine left
[21:44] <pugs_svn> r29536 | kyle++ | [t/spec] split S03-operators/smartmatch.t into S03-smartmatch/*.t 

[21:44] <KyleHa> OK, I'm going for forgiveness over permission.

[21:45] <ash_> i think there is something wrong with how 'new' is getting dispatched

[21:45] <ash_> in both rakudo and ng 

[21:46] <PerlJam> rakudo: class Foo is List { method new(*@args) { say "hi" } }; Foo.new(1,2,3);

[21:47] <p6eval> rakudo 3867ff:  ( no output )

[21:47] <PerlJam> blame jnthn  :)

[21:47] <ash_> maybe its augmenting/is also 's fault

[21:48] <PerlJam> ash_: Well, I just tried inheritance and the result was the same.

[21:50] <PerlJam> although that worked fine on my local perl6  (not sure if it's ng or master since I haven't compiled it in a while)

[21:52] *** cotto left
[21:52] *** takadonet left
[21:55] *** mssm joined
[22:00] <dalek> rakudo/ng: a57ebba | (Kyle Hasselbacher)++ | t/spectest.data:

[22:00] <dalek> rakudo/ng: [spectest.data] update according to pugs r29536

[22:00] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/a57ebba0f2b4ba6a85e14da2051de9877c1fa878

[22:00] <ash_> PerlJam: if you use is also its master

[22:01] <ash_> but also rakudo in here times out if you define a class

[22:01] <ash_> it seems like its okay if you don't define a new method in an augment or in an 'is also'

[22:01] <PerlJam> ash_: I meant the inheritance example ... but that's a good litmus test to find out which version I have  :)

[22:03] *** meppl left
[22:06] *** ruoso left
[22:06] *** Exodist joined
[22:07] *** cotto_w0rk joined
[22:07] *** cotto joined
[22:07] <ash_> i wonder why rakudo: still time's out on class definitinos 

[22:08] *** cotto_working left
[22:10] *** meppl joined
[22:16] *** meppel joined
[22:16] *** colomon left
[22:16] *** colomon___ joined
[22:17] *** uniejo left
[22:29] *** snearch joined
[22:31] *** meppl left
[22:36] *** pinc0de left
[22:40] *** soupdragon left
[22:41] *** ignacio_ left
[22:41] *** szabgab left
[22:41] *** szabgab joined
[22:41] *** soupdragon joined
[22:41] *** lumi left
[22:41] *** s1n left
[22:41] *** y3llow left
[22:41] *** jogla_ left
[22:41] *** Trey left
[22:41] *** Khisanth left
[22:41] *** Juerd left
[22:41] *** simcop2387 left
[22:41] *** orevdiabl left
[22:41] *** Lorn left
[22:41] *** krakan left
[22:41] *** xomas left
[22:41] *** jjore left
[22:41] *** cj left
[22:41] *** mdxi left
[22:41] *** Infinoid left
[22:41] *** gju left
[22:41] *** f00li5h[HireMe] left
[22:41] *** GeJ left
[22:41] *** kcwu left
[22:41] *** hugme left
[22:41] *** sunnavy left
[22:42] *** KyleHa left
[22:42] *** jaldhar left
[22:42] *** simcop2387_ joined
[22:42] *** Trey joined
[22:42] *** krakan joined
[22:43] *** Su-Shee left
[22:46] *** akl left
[22:46] *** silug left
[22:47] *** stephenlb left
[22:47] *** synth left
[22:47] *** araujo left
[22:47] *** PerlJam left
[22:47] *** lisppaste3 left
[22:47] *** breinbaas left
[22:47] *** dukelet0 left
[22:47] *** mtve left
[22:47] *** REPLeffect_ left
[22:47] *** sjn left
[22:47] *** yves left
[22:48] *** sjn joined
[22:48] *** jaldhar joined
[22:51] *** Juerd joined
[22:51] *** akl joined
[22:51] *** silug joined
[22:53] *** breinbaa1 joined
[22:53] *** lumi joined
[22:53] *** dukelet0 joined
[22:54] *** Infinoid joined
[22:56] *** lest_away is now known as lestrrat

[22:56] *** silug left
[22:57] *** PerlJam joined
[23:00] *** silug joined
[23:00] *** mdxi joined
[23:00] <ash_> Mu == undef? right?

[23:02] *** avar left
[23:02] *** literal left
[23:02] <frettled> not quite

[23:02] <frettled> But it's one of the undef-like values, depending on type.

[23:08] *** avar joined
[23:08] *** literal joined
[23:09] *** soupdragon left
[23:09] *** alester left
[23:10] *** bbkr left
[23:11] *** constant_ joined
[23:11] *** cognominal joined
[23:12] *** sbp left
[23:12] *** zamolxes_ left
[23:12] *** orafu left
[23:12] *** hicx174 left
[23:12] *** dukeleto left
[23:12] *** pugs_svn left
[23:12] *** LionMade1fLions left
[23:12] *** meteorjay left
[23:12] *** pjcj left
[23:12] *** yahooooo left
[23:12] *** constant left
[23:12] *** eiro left
[23:12] *** nsh left
[23:12] *** PacoLinux left
[23:12] *** phenny left
[23:13] *** hicx174_ joined
[23:13] *** LionMadeOfLions joined
[23:14] *** OuLouFu joined
[23:14] <TimToady> arguably it's the most undefined value

[23:14] <TimToady> insofar as all other undefined values derive from it

[23:14] *** dukelet0 left
[23:14] *** breinbaa1 left
[23:14] *** jaldhar left
[23:14] *** Trey left
[23:14] *** simcop2387_ left
[23:14] *** snearch left
[23:14] *** colomon___ left
[23:14] *** cotto left
[23:14] *** Exodist left
[23:14] *** ash_ left
[23:14] *** ive left
[23:14] *** hercynium left
[23:14] *** am0c left
[23:14] *** cdarroch left
[23:14] *** he_ left
[23:14] *** frettled left
[23:14] *** rhr left
[23:14] *** diakopter left
[23:14] *** frew left
[23:14] *** hudnix left
[23:14] *** slavik left
[23:14] *** rjh left
[23:14] *** szbalint left
[23:14] *** japhb left
[23:14] *** jrockway left
[23:14] *** BooK left
[23:14] *** buu left
[23:14] *** Supaplex left
[23:14] *** PZt left
[23:14] *** broquaint left
[23:14] *** obra left
[23:14] *** ilbot2 left
[23:14] *** Ryan52 left
[23:14] *** hejki left
[23:14] *** huf left
[23:14] *** Intensity left
[23:14] *** Tene left
[23:14] *** Guest44003 left
[23:15] *** pjcj_ joined
[23:15] *** yahooooo joined
[23:15] *** xenoterracide_ joined
[23:17] *** synth joined
[23:17] *** sunnavy joined
[23:17] *** cj joined
[23:17] *** s1n joined
[23:17] *** Khisanth joined
[23:17] *** jjore joined
[23:17] *** kcwu joined
[23:17] *** hugme joined
[23:17] *** irc.freenode.net sets mode: +v hugme

[23:19] *** zamolxes joined
[23:22] *** eiro joined
[23:22] *** Tene joined
[23:22] *** pugs_svn joined
[23:22] *** bbkr joined
[23:22] *** dukelet0 joined
[23:22] *** breinbaa1 joined
[23:22] *** jaldhar joined
[23:22] *** Trey joined
[23:22] *** simcop2387_ joined
[23:22] *** snearch joined
[23:22] *** colomon___ joined
[23:22] *** cotto joined
[23:22] *** Exodist joined
[23:22] *** ash_ joined
[23:22] *** ive joined
[23:22] *** hercynium joined
[23:22] *** am0c joined
[23:22] *** cdarroch joined
[23:22] *** jrockway joined
[23:22] *** japhb joined
[23:22] *** rjh joined
[23:22] *** slavik joined
[23:22] *** Guest44003 joined
[23:22] *** hudnix joined
[23:22] *** PZt joined
[23:22] *** frew joined
[23:22] *** Intensity joined
[23:22] *** buu joined
[23:22] *** broquaint joined
[23:22] *** BooK joined
[23:22] *** szbalint joined
[23:22] *** diakopter joined
[23:22] *** rhr joined
[23:22] *** huf joined
[23:22] *** Ryan52 joined
[23:22] *** frettled joined
[23:22] *** Supaplex joined
[23:22] *** ilbot2 joined
[23:22] *** irc.freenode.net sets mode: +ooov Tene diakopter frettled ilbot2

[23:22] *** hejki joined
[23:22] *** obra joined
[23:22] *** he_ joined
[23:22] *** araujo joined
[23:22] *** lisppaste3 joined
[23:22] *** REPLeffect_ joined
[23:22] *** yves joined
[23:22] *** mtve joined
[23:23] *** meteorjay joined
[23:23] *** ingy left
[23:23] *** astinus left
[23:23] *** OuLouFu left
[23:23] *** PacoLinux_ joined
[23:23] *** meteorjay left
[23:23] *** REPLeffect_ left
[23:23] *** mtve left
[23:23] *** yves left
[23:23] *** araujo left
[23:23] *** lisppaste3 left
[23:24] *** phenny joined
[23:24] *** Helios-- left
[23:24] *** kst left
[23:24] *** rgrau left
[23:24] *** sbp joined
[23:24] *** GeJ joined
[23:24] *** GeJ left
[23:24] *** snearch left
[23:24] *** kst` joined
[23:24] *** xenoterracide left
[23:24] *** rgrau joined
[23:24] *** nsh_ joined
[23:24] *** Helios-- joined
[23:24] *** constant_ is now known as constant

[23:24] *** silug left
[23:25] *** kaare_ left
[23:25] <sjohnson> TimToady: those two lines u wrote might end up as messages in an irc bottle

[23:25] *** stepnem left
[23:25] *** lichtkind left
[23:29] *** dukeleto joined
[23:29] *** mikehh left
[23:29] *** silug joined
[23:29] *** hudnix left
[23:31] <ash_> colomon___: ping? 

[23:32] *** elmex left
[23:32] *** ive left
[23:33] *** OuLouFu joined
[23:34] *** GeJ joined
[23:36] *** rgrau left
[23:36] *** rgrau joined
[23:37] <colomon___> ash_: pong?

[23:37] <ash_> I fixed List.new, i have  patch for it

[23:38] <colomon___> \o/

[23:38] <ash_> i figured i could bug you instead of jnthn, also he's not here :P 

[23:38] <colomon___> sure

[23:39] <ash_> http://gist.github.com/278521 is a copy of it, or i can email it to someone

[23:39] *** cj left
[23:39] *** zamolxes left
[23:39] *** OuLouFu left
[23:39] *** zamolxes_ joined
[23:39] <colomon___> I will be slightly erratic for a few (reading to son)...

[23:39] <ash_> no worries

[23:40] *** astinus joined
[23:40] *** orafu joined
[23:40] *** stepnem joined
[23:42] *** cj joined
[23:45] <colomon___> Are there tests?

[23:45] <colomon___> :)

[23:45] <ash_> not yet, i'll do those next

[23:46] <ash_> List.new(1, 2, 3) should ~~ list(1, 2, 3) 

[23:46] <ash_> I'll work on some though

[23:48] *** cj left
[23:48] *** PacoLinux_ left
[23:48] *** hugme left
[23:48] *** s1n left
[23:48] *** synth left
[23:48] *** kcwu left
[23:48] *** Khisanth left
[23:48] *** jjore left
[23:48] *** sunnavy left
[23:48] <colomon___> m u

[23:49] *** ingy joined
[23:54] *** meteorjay joined
[23:54] *** elmex joined
[23:58] *** tylerni7 joined
[23:58] *** cj joined
[23:58] *** PacoLinux_ joined
[23:58] *** synth joined
[23:58] *** sunnavy joined
[23:58] *** s1n joined
[23:58] *** Khisanth joined
[23:58] *** jjore joined
[23:58] *** kcwu joined
[23:58] *** hugme joined
[23:58] *** irc.freenode.net sets mode: +v hugme

[23:58] <colomon___> yay, works for Array too!

[23:59] <ash_> should work for anything that inherits from List 

[23:59] <ash_> so apparently augment and 'is also' can't add 'new' to a class

[23:59] <ash_> ng: class Foo { }; augment class Foo { method new(*@args) { say 'hi'} }; Foo.new(1, 2);

[23:59] <p6eval> ng a57ebb:  ( no output )

