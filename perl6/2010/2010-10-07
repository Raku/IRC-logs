[00:02] *** alester left
[00:03] *** ggoebel left
[00:03] *** cggoebel left
[00:11] *** [particle]1 joined
[00:12] *** [particle] left
[00:16] *** ggoebel joined
[00:16] *** cggoebel joined
[00:24] *** risou joined
[00:26] *** bluescreen joined
[00:28] *** risou left
[00:30] *** risou joined
[00:30] *** Chillance left
[00:30] *** hercynium joined
[00:38] *** Dunearhp joined
[00:41] *** mavrc left
[00:44] *** ggoebel left
[00:44] *** cggoebel left
[00:52] *** ggoebel joined
[00:52] *** cggoebel joined
[00:53] *** aloha left
[00:53] *** aloha joined
[00:57] *** lue left
[00:58] *** risou left
[00:58] *** risou joined
[01:02] *** risou left
[01:03] *** alester joined
[01:05] *** lue joined
[01:08] *** lue left
[01:09] *** lue joined
[01:10] *** nymacro joined
[01:13] *** nymacro left
[01:23] *** ggoebel left
[01:23] *** cggoebel left
[01:35] *** bpalmer` joined
[02:07] *** leprevost joined
[02:42] *** ash_ left
[02:46] *** ash_ joined
[02:52] <ash_> rakudo: say 1

[02:53] <ash_> i think it died...

[02:55] <p6eval> rakudo e9e7fc: OUTPUT«1␤»

[02:55] <ash_> no... just slow?

[02:59] <plobsing> slow startup? or slow box?

[02:59] <plobsing> rakudo: for 1..3 { say now }

[02:59] *** leprevost left
[02:59] <ash_> plobsing: do you know much about the packfileannotation and packfileconstanttable? 

[03:00] <ash_> my gsoc_nci branch is passing all tests except tests for those

[03:00] <plobsing> I know a lot about the constant table. Not much about the annotations.

[03:00] <plobsing> I'll take a look

[03:01] <ash_> they both claim: "too few positional arguments: 2 passed, 3 (or more) expected" to functions that are clearly defined to take 2 params, which is odd but consistent 

[03:02] <plobsing> maybe invocant is being counted?

[03:02] <plobsing> 2 args + invocant = 3

[03:02] *** imarcust1is joined
[03:02] *** szbalint_ joined
[03:03] *** flussence_ joined
[03:03] *** BinGOs_ joined
[03:03] *** clkao_ joined
[03:03] *** pjcj_ joined
[03:03] *** flussence left
[03:03] *** pochi_ joined
[03:03] *** slavik left
[03:03] *** clkao left
[03:03] <p6eval> rakudo e9e7fc: OUTPUT«Instant:2010-10-07T02:40:9.695935Z␤Instant:2010-10-07T02:40:10.188288Z␤Instant:2010-10-07T02:40:10.416203Z␤»

[03:04] <ash_> why would it only be for 2 random packfile methods that i never touched though and nothing else? 

[03:04] <plobsing> answer - glacial startup, runtime a little slow

[03:04] <ash_> as far as i can all other PMC multi's and vtable methods are still fine in my branch, just these two that were effected :-\

[03:04] <ash_>  

[03:05] <plobsing> because those are probably multis. multis still use NCI pmc's under the hood for implementation. normal (non-multi) native pmc methods use NativePCCMethod.

[03:05] *** cdarroch left
[03:05] <plobsing> vtables also don't use NCI pmc's for implementation (for obvious circular-logic reasons)

[03:06] <ash_> one's a multi, the others set_name i don't think it was a multi, i think it was just a method

[03:06] <ash_> and rakudo builds fine, even passes its tests

[03:06] <ash_> all other tests pass

[03:06] *** slavik joined
[03:07] <ash_> correction, all tests i have tried except those 2 pass

[03:07] *** pythonian4000 is now known as pythonian4000afk

[03:10] <ash_> http://trac.parrot.org/parrot/browser/branches/gsoc_nci/src/pmc/packfileannotation.pmc#L125 and http://trac.parrot.org/parrot/browser/branches/gsoc_nci/src/pmc/packfileconstanttable.pmc#L313 are the 2 functions that say "too few positional arguments: 2 passed, 3 (or more) expected"

[03:16] <plobsing> Parrot_pcc_fill_params_from_c_args (interp=0x60a080, call_object=0x6f5498,  signature=0x6e9e20 "PSS")

[03:16] <plobsing> generated PCC signature is incorrect

[03:16] <plobsing> that is called from ffi_call_unix64

[03:18] <plobsing> ffi framebuilder takes nci:"IJPN" and makes pcc:"PSS"

[03:19] <plobsing> s/IJPN/IJPS/

[03:20] <plobsing> sorry

[03:28] <ash_> hmm, i'll look into that, and maybe add some tests to nci.t

[03:29] <plobsing> gdb - is there anything it can't do?

[03:29] <plobsing> (answer: sadly, ... yes)

[03:40] *** meppel joined
[03:41] *** bpalmer` left
[03:44] *** meppl left
[03:46] *** meppel left
[03:50] *** meppl joined
[04:07] *** alester left
[04:09] *** justatheory joined
[04:09] *** pythonian4000afk is now known as pythonian4000

[04:09] *** mfollett joined
[04:10] *** dream joined
[04:15] *** satyavvd joined
[04:20] *** aloha left
[04:20] *** justatheory left
[04:29] *** kst left
[04:29] *** kst joined
[04:30] *** aloha joined
[04:34] *** Intensity joined
[04:34] *** Intensity left
[04:34] *** Intensity joined
[04:34] *** justatheory joined
[04:56] *** Intensity left
[04:56] *** LionMadeOfLions joined
[04:59] *** Intensity joined
[05:02] *** kaare joined
[05:03] *** kaare is now known as Guest30712

[05:17] *** sftp left
[05:22] *** cls_bsd left
[05:22] *** cls_bsd joined
[05:26] *** lamstyle left
[05:26] *** envi joined
[05:26] <mberends> coffee++

[05:27] *** Mowah joined
[05:27] <moritz_> good morning

[05:28] <mberends> today I'll take masak++ and jnthn++ to http://www.escherinhetpaleis.nl/index.php?set_cms_session_language=en :-)

[05:28] <mberends> hi moritz_ :)

[05:30] *** lamstyle joined
[05:32] <dream> hello ..am trying to run my first CGI program ..am able to run on command line but not on browser ..can anyone pls help ..am following this link :http://www.perltutorial.org/perl-cgi-helloworld.aspx

[05:33] *** f00li5h left
[05:33] *** f00li5h joined
[05:36] <diakopter> dream: I suggest #perl instead of #perl6 for that question

[05:37] <mberends> dream: this is a developer channel for new perl implementations. Try #friendly-coders or http://www.perl101.org

[05:38] *** lamstyle left
[05:39] <dream> thanks 1

[05:40] *** lamstyle joined
[05:41] <moritz_> or perlmomks.org

[05:43] *** emoken joined
[05:44] *** emoken left
[05:46] <mberends> s/perlmomks/perlmonks/ # unless you're a mom

[05:48] *** Mowah left
[05:49] <diakopter> .. in kansas

[05:51] <moritz_> in sovjet kansas, moms program YOU!

[05:51] *** sftp joined
[05:55] *** pythonian4000 is now known as pythonian4000afk

[06:04] *** xabbu42 joined
[06:06] *** mfollett left
[06:10] *** justatheory left
[06:10] *** wtw joined
[06:25] <sorear> good * #perl6

[06:28] *** ash_ left
[06:30] *** cjk101010 joined
[06:30] <sorear> How many times is the body of a parameterize role called?

[06:34] <TimToady> probably just once, if it follows S10:88

[06:39] <sjohnson> HI

[06:41] <diakopter> LO

[06:42] <sjohnson> .oO(hilo reminds me of ohgr)

[06:47] *** BinGOs_ is now known as BinGOs

[06:48] *** BinGOs left
[06:48] *** BinGOs joined
[06:54] *** mberends left
[06:56] <sorear> TimToady: but what about the parameters>

[06:56] <sorear> phenny: msg jnthn Read this. http://www.research.ibm.com/people/d/dgrove/papers/oopsla01.pdf # Efficient compilation of roles in a gradually typed environment

[06:57] <sorear> phenny: tell jnthn Read this. http://www.research.ibm.com/people/d/dgrove/papers/oopsla01.pdf # Efficient compilation of roles in a gradually typed environment

[06:57] <phenny> sorear: I'll pass that on when jnthn is around.

[07:01] *** krakan joined
[07:24] *** agentzh joined
[07:36] *** xabbu42 left
[07:37] *** HarryS left
[07:46] *** envi left
[07:50] *** mavrc joined
[07:51] *** lamstyle left
[07:57] *** tadzik joined
[08:03] *** lamstyle joined
[08:28] *** tadzik left
[08:38] *** bluescreen left
[08:38] *** dakkar joined
[08:43] *** kst left
[08:45] *** kst joined
[08:45] *** cls_bsd left
[08:45] *** cls_bsd joined
[09:03] *** kjeldahl joined
[09:09] *** xabbu42 joined
[09:19] *** icwiener joined
[09:19] *** icwiener left
[09:19] *** icwiener joined
[09:38] *** wamba joined
[09:40] *** tadzik joined
[09:44] *** am0c^ joined
[09:47] *** timbunce joined
[09:50] *** daxim joined
[10:01] *** sundar joined
[10:04] *** baux joined
[10:14] *** flussence_ is now known as flussence

[10:15] *** envi joined
[10:17] *** envi left
[10:19] *** kjeldahl left
[10:24] *** envi joined
[10:25] *** Mowah joined
[10:32] *** VABMOL8 joined
[10:32] *** CABBMKR joined
[10:33] *** ruoso left
[10:33] *** pythonian4000afk is now known as pythonian4000

[10:35] *** nadim left
[10:47] *** bbkr joined
[10:48] *** dju left
[10:49] *** am0c^ left
[10:50] *** nadim joined
[10:57] *** agentzh left
[10:57] *** Trashlord joined
[11:05] *** icwiener left
[11:05] *** icwiener joined
[11:14] *** kst left
[11:15] *** kst joined
[11:21] *** envi left
[11:21] *** envi_ joined
[11:25] *** icwiener left
[11:30] *** szbalint_ is now known as szbalint

[11:35] *** Sarten-X left
[11:36] *** tadzik left
[11:42] *** zby joined
[11:51] *** satyavvd left
[11:58] *** zby left
[12:10] *** pythonian4000 is now known as pythonian4000afk

[12:18] *** sundar left
[12:23] *** orafu left
[12:27] *** timbunce left
[12:29] *** stepnem joined
[12:31] *** ruoso joined
[12:34] *** timbunce joined
[12:36] <takadonet> morning all

[12:51] *** satyavvd joined
[13:16] *** orafu joined
[13:16] *** [particle]1 is now known as [particle]

[13:19] *** Patterner left
[13:21] *** nymacro joined
[13:30] *** Psyche^ joined
[13:30] *** Psyche^ is now known as Patterner

[13:40] *** kst left
[13:41] *** kst joined
[13:46] *** HarryS joined
[13:57] *** M_o_C joined
[13:59] *** satyavvd left
[14:11] *** justatheory joined
[14:15] *** _buno_ joined
[14:16] *** _buno_ left
[14:18] *** Axius joined
[14:18] *** MayDaniel joined
[14:21] *** justatheory left
[14:22] *** Axius left
[14:23] *** jferrero joined
[14:26] *** pyrimidine joined
[14:31] *** Axius joined
[14:34] *** mfollett joined
[14:41] *** risou joined
[14:45] *** cls_bsd left
[14:45] *** cls_bsd joined
[14:47] *** wtw left
[14:49] *** am0c joined
[14:49] *** am0c left
[14:59] *** am0c^ joined
[15:06] *** kst left
[15:06] *** kst joined
[15:09] *** Axius left
[15:09] *** masak joined
[15:09] <masak> \o/

[15:09] <flussence> hai!

[15:09] <am0c^> \o/

[15:09] <flussence> .oO( quiet day, here... )

[15:10] *** Axius joined
[15:12] <masak> we've been to the Escher museum, and only now are coming back to the online world.

[15:12] * moritz_ springs into life

[15:16] <colomon> Escher!  museum?

[15:16] <masak> aye.

[15:16] <masak> (they had normal stairs, and I was disappointed over that. the rest was very nice, though)

[15:17] <PerlJam> heh, I was just about to ask how you escaped the endless staircase

[15:17] <masak> that's easy. there are points where you get on and off.

[15:18] <masak> we had a fruitful discussion about the probably speed of the water in the infinite waterfall, too.

[15:18] *** am0c^ left
[15:20] <jnthn> o/

[15:20] <phenny> jnthn: 06:57Z <sorear> tell jnthn Read this. http://www.research.ibm.com/people/d/dgrove/papers/oopsla01.pdf # Efficient compilation of roles in a gradually typed environment

[15:21] <jnthn> sorear: Thanks, will look at that one.

[15:23] <jnthn> sorear, TimToady: A parametric role's body runs once per parameterization (e.g. per equivalent capture).

[15:23] <jnthn> If S10 says otherwise it's fossil - S14 may be more clear.

[15:27] *** zby joined
[15:34] *** molaf joined
[15:35] *** Axius left
[15:35] *** nymacro left
[15:36] *** ruoso left
[15:44] *** Ross joined
[15:44] *** Ross left
[15:44] *** Ross joined
[15:51] *** ruoso joined
[15:54] *** Italian_Plumber joined
[15:54] *** jferrero left
[16:03] <masak> yay! http://twitter.com/worr/status/26573940235

[16:04] <masak> boo! http://twitter.com/gotofritz/status/26571272694

[16:05] <masak> std: 4 =~ 5

[16:05] <p6eval> std 237d266: OUTPUT«===SORRY!===␤Unsupported use of =~ to do pattern matching; in Perl 6 please use ~~ at /tmp/DocAM0wdAo line 1:␤------> 4 =~⏏ 5␤Parse failed␤FAILED 00:01 115m␤»

[16:06] <moritz_> rakudo: 4 =~ 5

[16:06] <p6eval> rakudo e9e7fc: OUTPUT«===SORRY!===␤Unsupported use of =~ to do pattern matching; in Perl 6 please use ~~ at line 22, near " 5"␤»

[16:14] *** tadzik joined
[16:15] <tadzik> oh hello

[16:15] <jnthn> o/

[16:16] * masak replied to @gotofritz: http://twitter.com/carlmasak/status/26662069116

[16:17] <tadzik> what's the original tweet

[16:17] <perigrin> 7:04 < masak> boo! http://twitter.com/gotofritz/status/26571272694

[16:17] <tadzik> oh, I ate a '?'

[16:17] <tadzik> thanks perigrin 

[16:17] *** Italian_Plumber left
[16:17] <perigrin> np

[16:17] *** cdarroch joined
[16:17] *** cdarroch left
[16:17] *** cdarroch joined
[16:18] <PerlJam> I wonder what the 15 years actually refers to?

[16:18] <tadzik> maybe it's his age

[16:18] <PerlJam> was it a typo?  An attempt to reference the birth of perl 5?  what?

[16:18] <perigrin> reletavistic effects

[16:18] <PerlJam> or, as masak seems to think, an attempt at exaggeration

[16:19] <perigrin> he's just slow.

[16:19] <masak> :)

[16:19] <masak> I think it's just a 3d6 number.

[16:19] <moritz_> perigrin: wrong sign for relativistic effects :-)

[16:19] <masak> moritz_++ # lol

[16:22] <moritz_> .oO( hooray for physics -- it makes me a better troll! )

[16:22] <perigrin> :)

[16:22] <masak> his reply: http://twitter.com/gotofritz/status/26662475472 -- my reply: http://twitter.com/carlmasak/status/26663200733

[16:23] <moritz_> :-)

[16:24] *** cjk101010 left
[16:24] *** daxim left
[16:24] <takadonet> masak: you are having too much fun with this

[16:25] <masak> takadonet: guilty. :)

[16:25] *** n0den1te joined
[16:25] <sjohnson> morning friends of perl

[16:25] <masak> sjohnson: heartfelt salutations.

[16:26] <PerlJam> masak:  beware the chasm at the end of sarcasm.  (it's a mild poison that eats away at the community over time)

[16:26] <PerlJam> (not that I'm not guilty of it myself; I just think we all need to be reminded every once in a while :)

[16:27] *** Italian_Plumber joined
[16:27] <masak> PerlJam: you're right, as usual. I don't want to become a full-time sarcast.

[16:27] <masak> (unless the rate's good, that is)

[16:27] * dukeleto applies for a troll internship

[16:28] <PerlJam> Who needs the Lacuna Expanse, when you have #perl6?  ;)

[16:28] <masak> PerlJam: I'm wondering if there are different types of sarcasm, some more hurtful than others.

[16:29] <PerlJam> could be.

[16:29] <masak> not that I'm trying to justify what I wrote in retrospect or anything.

[16:29] <moritz_> surely not.

[16:29] <moritz_> SCNR

[16:29] <masak> :)

[16:29] <dukeleto> masak: there is functional trolling and then there is just vindictive trolling

[16:29] *** Italian_Plumber left
[16:30] <masak> it's just that I've found that I'm getting through better to some twitterers by applying humour.

[16:30] *** Axius joined
[16:30] <PerlJam> http://www.thefuntheory.com/

[16:31] <PerlJam> Although slightly different, the memes are closely related

[16:31] *** ruoso left
[16:32] *** s1n joined
[16:34] *** n0den1te left
[16:35] *** ash_ joined
[16:37] <masak> dukeleto++'s reply to @gotofritz: http://twitter.com/dukeleto/status/26664282479

[16:39] <dukeleto> masak: i think we, as a community, have gotten better at taking negative external FUD and turning it into motivation to hack. That is what I tried to convey.

[16:39] <masak> dukeleto: I think you're right.

[16:39] <PerlJam> dukeleto++ indeed.

[16:40] <masak> not least because we're in a position that gives us much more reason to be proud than we were only a few years ago. still some ways to go, but we're not at "barely started" anymore.

[16:41] *** xabbu42 left
[16:43] <dukeleto> masak: yes, i think the negative feedback we get these days is very valuable. We know we have something good, so it just propells us further.

[16:43] * moritz_ just noticed some fun irony about the "modern perl" thing

[16:43] <moritz_> I thought Perl was a post modern language

[16:43] <moritz_> so going from "post modern" to "modern" is a step backwards, linguistically

[16:43] <masak> moritz_: yes, but this is the Modern Post Modern.

[16:44] <masak> I think Twitter is a fine tool for putting us in touch with 'outgroup' thoughts. it's a hole in the wall of the echo chamber.

[16:44] <PerlJam> It's perl 5 that's "modern perl".  We've got Perl 6  :)

[16:44] <moritz_> post modern Perl 6? :-)

[16:44] <masak> Perl 6 is a post-modern Perl 5. :)

[16:45] * sjn always thought "modern" meant "what's cool today", leading to "post-modern" meaning "what's up and coming"

[16:46] <sjn> with "cool" meaning "current" or "state-of-the-art" or something like that

[16:46] *** risou left
[16:46] *** risou joined
[16:46] <sjn> "Perl 6, the language of the future" :-P

[16:47] <ash_> masak: your issue with sub's in for loops, i know of a kind of work around if your interested

[16:47] *** justatheory joined
[16:48] <masak> ash_: put the sub outside the for loop? :)

[16:48] <ash_> rakudo: for 1..4 { my &foo = -> { 1 }; say $_, foo; }; say 'alive'

[16:48] <p6eval> rakudo e9e7fc: OUTPUT«11␤21␤31␤41␤alive␤»

[16:48] <masak> ash_: ooh. nice.

[16:48] <ash_> odd to me that -> blocks don't have the same problem as sub { } blocks 

[16:48] <masak> we discovered that it was the 'sub' that caused it.

[16:48] <masak> even anon subs.

[16:49] <ash_> ew

[16:49] <ash_> doing the for loop like that reminds me of javascript :P 

[16:49] <ash_> (with my pointy block) 

[16:50] * moritz_ wonders if 'sub' somehow turns an intermediate block into something else

[16:50] <ash_> var foo = function () { return 1; };  foo(); is a lot like my &foo = sub { 1 }; foo; 

[16:50] <masak> moritz_: what's an intermediate block?

[16:50] *** envi_ left
[16:51] *** MayDaniel left
[16:55] <ash_> alpha: say $a; my $a;

[16:55] <p6eval> alpha 30e0ed: OUTPUT«Null PMC access in type()␤in Main (file <unknown>, line <unknown>)␤»

[16:56] *** timbunce left
[16:56] <ash_> masak: does alpha support IO::Socket::INET?

[16:56] <masak> ash_: think so. try it and see?

[16:57] <ash_> i don't have alpha installed, i'll downloaded it though

[16:57] <ash_> or do you mean using p6eval?

[16:57] <ash_> alpha: say IO::Socket::INET

[16:57] <p6eval> alpha 30e0ed: OUTPUT«Null PMC access in type()␤in Main (file <unknown>, line <unknown>)␤»

[16:57] <masak> that's the old error message for "module not found".

[16:57] <ash_> i like "module not found" better 

[16:58] <masak> you could look in the .tar.gz file whether there's an IO::Socet::INET module in src/

[16:58] <masak> if it has one, it probably supports it.

[16:58] <ash_> rakudo: say IO::Socket::INET

[16:58] <p6eval> rakudo e9e7fc:  ( no output )

[16:58] <masak> ISTR mberends and I wrote one in April 2009.

[16:58] <ash_> rakudo: say IO::Socket::INET, 1;

[16:59] <p6eval> rakudo e9e7fc:  ( no output )

[16:59] <masak> which means it's in alpha.

[16:59] <ash_> i thought it worked at some point, it would be kinda nice to try playing with some of those kinds of features, sockets, tcp sockets, etc. i could always look at what needs to be done to get it working in rakudo...

[17:00] <ash_> or i could fix the last bug in my gsoc project and get it merged into parrot...

[17:02] *** Axius left
[17:02] *** timbunce joined
[17:07] <x3nU> why there's no config::ini in r* 2009.09? i thought it was fixed

[17:08] <moritz_> seems nobody put it back

[17:08] <moritz_> into the R* makefile

[17:10] *** Axius joined
[17:10] <tadzik> Duh, I thought I did

[17:10] <tadzik> but isn't there neutro in 2010.09?

[17:11] <moritz_> star: use Config::INI

[17:11] <p6eval> star 2010.09: OUTPUT«===SORRY!===␤Unable to find module 'Config::INI' in the @*INC directories.␤(@*INC contains:␤  /home/p6eval/.perl6/lib␤  /home/p6eval/rakudo-star-2010.09/install/lib/parrot/2.8.0/languages/perl6/lib␤  .)␤»

[17:12] <x3nU> also i (and probably other windows users) will appreciate if someone would put rakudo-star win32 installer on rakudo-star github download section

[17:12] *** Italian_Plumber joined
[17:13] <dukeleto> ash_: yes, please get gsoc_nci merged, please :)

[17:13] <moritz_> tadzik: you added Fiel::Tools, Module::Tools and neutro, but not Config::INI

[17:13] <ash_> plobsing++ basically found what was wrong, i am trying to remedy it now 

[17:13] *** dakkar left
[17:13] <tadzik> moritz_: I remember reverting the commit in which I removed it

[17:13] <tadzik> commit 37f97c5db373373a10f1a11289b8e4d4da7a90a3

[17:14] <moritz_> tadzik: it's in skel/build/Makefile.in but not in Makefile

[17:14] <tadzik> bah, it doesn't add enough

[17:14] <dukeleto> ash_: awesome. PL/Parrot+PL/Perl6 really will benefit from your nci branch.

[17:15] <ash_> it will make linking to stuff a lot easier, when its 100% done

[17:15] <moritz_> this manual synchronizing really needs to go away

[17:16] <dalek> star: 3218b55 | tadzik++ | Makefile:

[17:16] <dalek> star: Re-added Config::INI, as it got lost somehow

[17:16] <dalek> star: review: http://github.com/rakudo/star/commit/3218b55b63919e25b0e741211fcae4f3164c8be6

[17:16] * sjn wonders where that rakudo benchmark page was

[17:17] <moritz_> http://gil.di.uminho.pt/users/smash/rakudo-bench.html

[17:17] <sjn> moritz_: thanks! ^^

[17:17] <dukeleto> ash_: your NCI branch will allow PL/Parrot+PL/Perl6 to call postgres C library functions, which is needed to implement SPI (Server Programming Interface), which allows stored procedures to run SQL queries

[17:17] <sjn> oh, it's not updated for 2010.09

[17:17] <sjn> whois smash

[17:18] <moritz_> the quesiton is "whereis smash" :-)

[17:18] * sjn finds his / key

[17:18] <sjn> !seen smash

[17:18] <sjn> seen smash

[17:18] <aloha> smash was last seen in #parrot 6 days 23 hours ago saying "http://github.com/mirrors/perl/tree/perl-1-maint".

[17:19] <tadzik> Heh, Perl Kit

[17:20] <sjn> btw, what's with the test graph on rakudo.de? anything big going on?</ignorant>

[17:20] <ash_> dukeleto: how would i go about setting up PL/parrot? 

[17:20] <ash_> that sounds like a great use case to test the nci stuff 

[17:21] <dukeleto> ash_: http://pl.parrot.org/docs.html

[17:22] <dukeleto> ash_: the top presentation on that page has some install instructions, there are also some README files

[17:22] *** Axius left
[17:23] *** sundar joined
[17:23] *** sundar left
[17:23] <dukeleto> ash_: you will need to have a postgres user that is a "superuser" to install C extensions, which you can do with "createuser". I need to add that to the docs

[17:25] <dukeleto> ash_: this branch http://github.com/leto/plparrot/tree/spi (by cxreg++) it what requires the NCI branch to move forward

[17:25] * dukeleto is working on a blog post to show how to use Perl 6 grammars inside PostgreSQL

[17:26] * ash_ installing postgresql now 

[17:27] *** Italian_Plumber left
[17:28] <ash_> dukeleto: what kind of signatures do the SPI functions have? 

[17:29] *** risou left
[17:31] <dukeleto> ash_: some of them have signatures that current parrot doesn't support. cxreg++ would know best which ones he needs to finish the branch

[17:31] <dukeleto> cxreg: ping?

[17:32] <ash_> the current nci system can generate new signatures you can load at runtime, they just aren't dynamic, but if it uses some odd things like structs (not a pointer to a struct) as a param, then the old one won't support that, but the new one should 

[17:34] <dukeleto> ash_: cool. I am pretty sure the function signatures are pretty diverse, so that sounds good.

[17:35] <dukeleto> ash_: if you have rakudo installed into your path, and PL/Parrot can find the parrot_config associated with it, you will get PL/Parrot + PL/Perl 6

[17:36] *** Ross left
[17:38] <dukeleto> ash_: if it only finds Parrot's parrot_config, only PL/Parrot will be available from Postgres

[17:38] <ash_> i'll probably set it up to run both 

[17:43] <dukeleto> ash_: yes, that is more fun :) Please let me know if you hit some snags! You are on the bleeding edge. What version of postgres are you using? you probably need >= 8.3

[17:43] <ash_> macports just made me a fresh copy of 8.4.4 

[17:44] * cxreg wakes up

[17:44] <dukeleto> ash_: should should be feasible

[17:44] <dukeleto> cxreg: which function signatures do you need to merge the spi branch of PL/Parrot?

[17:44] <dukeleto> cxreg: ash_ is getting close to getting it merged

[17:45] <cxreg> i had a list of static ones i was using during testing

[17:45] <cxreg> but aiui the new system doesn't require that?

[17:45] *** timbunce left
[17:46] <ash_> if you have libffi, it won't require any static building of sigs, they are built at runtime 

[17:47] <cxreg> honestly it's been a couple months since i played with it so i don't recall exactly what was needed to continue

[17:47] <cxreg> i think structs were part of it though

[17:48] <cxreg> plparrot has an advantage though

[17:48] <cxreg> since it's already being compiled, we can add our own wrappers with better signatures

[17:50] <dalek> sprixel: 33ac3c0 | diakopter++ | sprixel/ (3 files):

[17:50] <dalek> sprixel: breaking the build; interim checkin.

[17:50] <dalek> sprixel: review: http://github.com/diakopter/sprixel/commit/33ac3c04b259aeb5df0db4f5f99ceda039608608

[17:50] *** tadzik left
[17:56] *** Kodi joined
[17:56] <Kodi> rakudo: my @a = 1, 2; @a >>=<< 4, 5; say @a.perl

[17:56] <p6eval> rakudo e9e7fc: OUTPUT«Cannot modify readonly value␤  in '&infix:<=>' at line 1␤  in <anon> at line 205:CORE.setting␤  in 'hyper' at line 1␤  in main program body at line 1␤»

[17:57] *** draxil joined
[18:04] <ash_> rakudo: my @a = 1, 2; say @a >>+<< 4, 5

[18:05] <p6eval> rakudo e9e7fc: OUTPUT«Sorry, sides are of uneven length and not dwimmy.␤  in 'hyper' at line 180:CORE.setting␤  in 'hyper' at line 212:CORE.setting␤  in main program body at line 1␤»

[18:09] *** justatheory left
[18:10] <diakopter> note for the curious: the terms Modernism and Modernity (and Post-) once denoted chronologically relative to the time of usage, but today do not; see more at http://en.wikipedia.org/wiki/Modernity and the linked articles.  <sorry_if_you_already_knew_this/>

[18:10] <colomon> rakudo: my @a = 1, 2; say @a >>+<< (4, 5)

[18:10] <p6eval> rakudo e9e7fc: OUTPUT«57␤»

[18:11] *** pyrimidine left
[18:11] <masak> excellent nom &

[18:25] *** colomon left
[18:28] *** espadrine` joined
[18:35] *** dual left
[18:38] *** Chillance joined
[18:45] *** dual joined
[18:51] *** Italian_Plumber joined
[18:52] *** plainhao joined
[18:55] *** baux left
[18:55] *** kjeldahl joined
[18:59] *** espadrine` left
[19:11] *** Italian_Plumber left
[19:13] *** Italian_Plumber joined
[19:14] *** plainhao left
[19:20] *** jaldhar left
[19:21] *** wamba left
[19:26] *** Italian_Plumber left
[19:30] *** colomon joined
[19:33] *** MayDaniel joined
[19:35] *** amkrankruleuen joined
[19:38] *** MayDaniel left
[19:38] *** justatheory joined
[19:42] <masak> ...and we're back.

[19:43] * ash_ waves

[19:46] <colomon> \o

[19:47] <sjohnson> hi

[19:49] *** Italian_Plumber joined
[19:50] *** tylercurtis joined
[19:50] *** Raynes_ joined
[19:51] *** kjeldahl_ joined
[19:51] * masak , jnthn and mberends laughing heartily at words in http://folk.uio.no/alied/TMoL.html

[19:53] *** Italian_Plumber left
[19:54] *** Juerd_ joined
[19:57] *** justatheory left
[19:57] *** M_o_C left
[19:58] *** M_o_C joined
[19:58] *** frodwith_ joined
[19:59] *** frodwith_ left
[20:00] *** frodwith_ joined
[20:00] *** Aleph_ joined
[20:02] *** Ross joined
[20:02] *** Ross left
[20:02] *** Ross joined
[20:03] *** \xF0_ joined
[20:03] *** kjeldahl_ left
[20:04] *** cottoo joined
[20:04] *** standz_ joined
[20:05] *** jnthn_ joined
[20:05] *** kcwu_ joined
[20:06] *** sjn__ joined
[20:06] *** hatsefla1s joined
[20:06] *** zby left
[20:06] *** cotto left
[20:06] *** standz left
[20:06] *** jnthn left
[20:06] *** hatseflats left
[20:06] *** kcwu left
[20:06] *** spinclad left
[20:06] *** spinclad_ joined
[20:06] <dalek> rakudo: 377615e | KodiB++ | src/Perl6/Actions.pm:

[20:06] <dalek> rakudo: [Actions] Permit »+=», «*=», etc.

[20:06] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/377615ed106ac814e7354214853772cfe49ea8bb

[20:06] <dalek> rakudo: 99c80ec | KodiB++ | src/core/metaops.pm:

[20:06] <dalek> rakudo: Permit hyperoperators to modify their arguments.

[20:06] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/99c80ec01f22e76f60b339437d2cc60845d7ee1d

[20:07] <masak> rakudo: subset Greeting of Str where { /:i ^oh \s+ \w+ '!'?$/ }; subset LolGreeting of Str where { .words[1].lc eq 'hai' }; multi detect(Str) { "not a greeting" }; multi detect(Greeting) { "regular greeting" }; multi detect(LolGreeting) { "lol-greeting" }; say detect "OH HAI"

[20:07] <p6eval> rakudo e9e7fc: OUTPUT«Null PMC access in isa_pmc()␤  in '&infix:<=>' at line 1␤  in 'Regex::Bool' at line 5970:CORE.setting␤  in 'detect' at line 22:/tmp/p52bvhygzd␤  in 'detect' at line 22:/tmp/p52bvhygzd␤  in main program body at line 22:/tmp/p52bvhygzd␤»

[20:07] * masak submits rakudobug

[20:08] *** kjeldahl left
[20:08] *** kst left
[20:08] *** Guest30712 left
[20:08] *** Dunearhp left
[20:08] *** Raynes left
[20:08] *** xinming_ left
[20:08] *** Juerd left
[20:08] *** renormalist left
[20:08] *** meraxes left
[20:08] *** frodwith left
[20:08] *** Juerd_ is now known as Juerd

[20:08] *** hatsefla1s is now known as hatseflats

[20:10] *** meraxes joined
[20:10] *** xinming joined
[20:11] <ash_> rakudo: say 'foo' ~~ /:i foo/;

[20:11] <p6eval> rakudo e9e7fc: OUTPUT«foo␤»

[20:11] *** zby joined
[20:12] <masak> ash_: it's to do with multies, and subtypes.

[20:12] <ash_> rakudo: say 'FOO' ~~ /:i foo/;

[20:12] *** estrabd_rice joined
[20:12] <p6eval> rakudo e9e7fc: OUTPUT«FOO␤»

[20:12] <dalek> roast: f471cc0 | KodiB++ | S03-metaops/hyper.t:

[20:12] <dalek> roast: [hyper.t] Tests for RT #77876.

[20:12] <dalek> roast: review: http://github.com/perl6/roast/commit/f471cc034654ed8c47adde98d2d811d54cb3d091

[20:12] <ash_> got ya

[20:15] <masak> rakudo: subset G of Str where { /O/ }; sub detect(G) {}; detect "O"

[20:15] <p6eval> rakudo e9e7fc: OUTPUT«Method 'match' not found for invocant of class ''␤  in 'Regex::Bool' at line 5971:CORE.setting␤  in 'detect' at line 22:/tmp/YSAVVICxBE␤  in 'detect' at line 22:/tmp/YSAVVICxBE␤  in main program body at line 22:/tmp/YSAVVICxBE␤»

[20:16] <masak> rakudo: subset G of Str where { /O/ }; multi detect(G) {}; detect "O"

[20:16] <p6eval> rakudo e9e7fc: OUTPUT«Null PMC access in isa_pmc()␤  in '&infix:<=>' at line 1␤  in 'Regex::Bool' at line 5970:CORE.setting␤  in 'detect' at line 22:/tmp/5IduFyExov␤  in 'detect' at line 22:/tmp/5IduFyExov␤  in main program body at line 22:/tmp/5IduFyExov␤»

[20:16] <masak> clues about this would be helpful.

[20:18] *** Kodi left
[20:18] <masak> rakudo: multi detect(Str where { /O/ }) {}; detect "O"

[20:18] <p6eval> rakudo e9e7fc: OUTPUT«===SORRY!===␤Can not do non-typename cases of type_constraint yet at line 22, near ") {}; dete"␤»

[20:18] <masak> "non-typename cases of type_constraint"?

[20:20] *** ash_ left
[20:21] <masak> rakudo: subset G of Str where { .chars > 0 }; multi detect(G) {}; detect "O"

[20:21] <p6eval> rakudo e9e7fc:  ( no output )

[20:21] <masak> rakudo: subset G of Str where { .chars > 0 }; multi detect(G) {}; detect "O"; say "alive"

[20:21] <p6eval> rakudo e9e7fc: OUTPUT«alive␤»

[20:24] *** pythonian4000afk is now known as pythonian4000

[20:26] *** jura05 joined
[20:26] *** jura05 left
[20:28] *** M_o_C left
[20:36] *** amkrankruleuen left
[20:37] *** Ross left
[20:37] *** Mowah left
[20:42] *** ruoso joined
[20:54] *** draxil left
[20:56] *** draxil joined
[21:00] *** tylercurtis left
[21:02] *** tylercurtis joined
[21:02] <tylercurtis> rakudo: multi detect(Str $foo where { /O/ }) {}; detect "O"

[21:02] <p6eval> rakudo 377615: OUTPUT«Null PMC access in isa_pmc()␤  in '&infix:<=>' at line 1␤  in 'Regex::Bool' at line 5976:CORE.setting␤  in 'detect' at line 1:/tmp/I_HYrv1mPf␤  in 'detect' at line 1:/tmp/I_HYrv1mPf␤  in main program body at line 22:/tmp/I_HYrv1mPf␤»

[21:03] <tylercurtis> rakudo: multi detect(Str $foo where /O/) {}; detect "O"

[21:03] <p6eval> rakudo 377615:  ( no output )

[21:03] <tylercurtis> rakudo: multi detect(Str $foo where /O/) {say 'hi'}; detect "O"

[21:03] <p6eval> rakudo 377615: OUTPUT«hi␤»

[21:04] * masak adds this to the ticket

[21:04] <masak> tylercurtis++

[21:04] <masak> rakudo: subset G of Str where /O/; multi detect(G) {}; detect "O"

[21:04] <p6eval> rakudo 377615:  ( no output )

[21:05] <masak> rakudo: subset G of Str where /O/; multi detect(G) {}; detect "O"; say "alive"

[21:05] <p6eval> rakudo 377615: OUTPUT«alive␤»

[21:06] <tylercurtis> rakudo: for 'O' { say m/O/; }

[21:06] <p6eval> rakudo 377615: OUTPUT«O␤»

[21:06] <tylercurtis> rakudo: for 'O' { /O/; say $/ }

[21:06] <p6eval> rakudo 377615: OUTPUT«Any()␤»

[21:06] <masak> rakudo: "O" ~~ { /O/ }

[21:06] <p6eval> rakudo 377615:  ( no output )

[21:06] <masak> rakudo: "O" ~~ { /O/ }; say "alive"

[21:07] <p6eval> rakudo 377615: OUTPUT«alive␤»

[21:07] <tylercurtis> rakudo: multi detect(Str $foo where { m/O/ } ) {say 'hi'}; detect "O"

[21:07] <p6eval> rakudo 377615: OUTPUT«hi␤»

[21:07] <masak> another clue. nice!

[21:08] <jnthn_> Curioser and curioser.

[21:09] <jnthn_>  /nick jnthn

[21:09] *** jnthn_ is now known as jnthn

[21:09] <jnthn> d'oh :-)

[21:09] *** PerlJam left
[21:16] <tylercurtis> If you return a /foo/ regex from a function that is called in value context, should the $_ of the scope from which the regex was returned or the $_ of the contextualizing scope be matched?

[21:17] <masak> functions aren't really called in any particular context in Perl 6.

[21:17] <masak> the return value can be used in different ways, however.

[21:19] <masak> to answer your question, I think it's always the $_ in the function itself.

[21:21] <masak> often an outer value is sent in to a $_ parameter, however.

[21:22] *** sjn__ left
[21:24] <tylercurtis> I'm not sure I agree. I think that { /O/ } should produce a nullary block that always returns a Regex object.

[21:25] <masak> I'm not too sure either way.

[21:26] <tylercurtis> Actually, maybe { /O/ } should be -> $_? { /O/ }

[21:26] <masak> it is.

[21:27] <masak> rakudo: my $b = { /O/ }; say $b.signature.count; say $b.signature.arity

[21:27] <p6eval> rakudo 377615: OUTPUT«1␤0␤»

[21:27] <jnthn> I'ts more like -> $_ = $OUTER::_ I guess

[21:27] <masak> fair enuf.

[21:27] <tylercurtis> Well, yes, that.

[21:27] <masak> OUTER, and not CALLER?

[21:28] <jnthn> rakudo: multi detect(Str $foo where { .say; /O/ }) {}; detect "O"

[21:28] <p6eval> rakudo 377615: OUTPUT«O␤Null PMC access in isa_pmc()␤  in '&infix:<=>' at line 1␤  in 'Regex::Bool' at line 5976:CORE.setting␤  in 'detect' at line 1:/tmp/hplW6YEKFI␤  in 'detect' at line 1:/tmp/hplW6YEKFI␤  in main program body at line 22:/tmp/hplW6YEKFI␤»

[21:29] <tylercurtis> rakudo: say 'O' ~~ where { .say; /O/ }

[21:29] <p6eval> rakudo 377615: OUTPUT«Could not find sub &where␤  in main program body at line 22:/tmp/0p747KLAE2␤»

[21:29] <masak> rakudo: my $b; { $_ = 5; $b = { .say } }; $_ = 42; $b()

[21:29] <p6eval> rakudo 377615: OUTPUT«42␤»

[21:29] <tylercurtis> rakudo: say 'O' ~~ { .say; /O/ }

[21:29] <p6eval> rakudo 377615: OUTPUT«O␤_block141␤»

[21:29] <masak> seems to be $_ defaults to $CALLER::_

[21:29] <masak> s/be/me/

[21:30] *** Entonian joined
[21:30] *** xabbu42 joined
[21:33] * masak submits rakudobug

[21:34] *** frodwith_ is now known as frodwith

[21:34] <tylercurtis> How does that distinguish between $OUTER::_ and $CALLER::_? The calling scope is the same as the outer scope, no?

[21:35] <masak> no, the outer scope has $_ = 5, but the calling scope has $_ = 42

[21:36] *** estrabd_rice is now known as estrabd

[21:36] <tylercurtis> rakudo: my $b; { $_ = 5; $b = { .say } }; .say;

[21:36] <p6eval> rakudo 377615: OUTPUT«5␤»

[21:37] <tylercurtis> rakudo: my $b; -> $_ is rw = $OUTER::$_ { $_ = 5; $b = {.say}}(); .say; $_ = 42; $b();

[21:37] <p6eval> rakudo 377615: OUTPUT«===SORRY!===␤Missing block at line 22, near "-> $_ is r"␤»

[21:38] <tylercurtis> rakudo: my $b; -> $_ is rw = $OUTER::_ { $_ = 5; $b = {.say}}(); .say; $_ = 42; $b();

[21:38] <p6eval> rakudo 377615: OUTPUT«Null PMC access in getprop()␤  in '&infix:<=>' at line 1␤  in <anon> at line 22:/tmp/qIgFQN0qMm␤  in main program body at line 22:/tmp/qIgFQN0qMm␤»

[21:39] <tylercurtis> I think that could be explained by the implicit $_ parameter being rw.

[21:39] *** mj41_ joined
[21:39] *** jferrero joined
[21:39] <jnthn> rakudo: my $b; { my $_ = 5; $b = { .say } }; $_ = 42; $b()

[21:39] <p6eval> rakudo 377615: OUTPUT«5␤»

[21:39] * masak submits rakudobug for tylercurtis Null PMC access

[21:41] *** mj41 left
[21:41] *** mj41_ is now known as mj41

[21:41] <masak> rakudo: my $b; -> $_ is rw = $OUTER::_ { $_ = 5; $b = {.say}}()

[21:41] <p6eval> rakudo 377615: OUTPUT«Null PMC access in getprop()␤  in '&infix:<=>' at line 1␤  in <anon> at line 22:/tmp/29sGwzgyL0␤  in main program body at line 22:/tmp/29sGwzgyL0␤»

[21:41] <masak> rakudo: my $b; -> $_ is rw = $OUTER::_ { $b = {.say}}()

[21:41] <p6eval> rakudo 377615:  ( no output )

[21:42] <masak> rakudo: my $b; -> $_ is rw = $OUTER::_ { $_ = 5 }()

[21:42] <p6eval> rakudo 377615: OUTPUT«Null PMC access in getprop()␤  in '&infix:<=>' at line 1␤  in <anon> at line 22:/tmp/S9AHBqQhmJ␤  in main program body at line 22:/tmp/S9AHBqQhmJ␤»

[21:42] *** ruoso left
[21:42] <masak> rakudo: -> $_ is rw = $OUTER::_ { $_ = 5 }()

[21:42] <p6eval> rakudo 377615: OUTPUT«Null PMC access in getprop()␤  in '&infix:<=>' at line 1␤  in <anon> at line 22:/tmp/Da9xPtq55b␤  in main program body at line 22:/tmp/Da9xPtq55b␤»

[21:43] <masak> rakudo: -> $_ is rw = $FOO::_ { $_ = 5 }()

[21:43] *** tylercurtis left
[21:43] <p6eval> rakudo 377615: OUTPUT«Null PMC access in getprop()␤  in '&infix:<=>' at line 1␤  in <anon> at line 22:/tmp/0GtE_VXval␤  in main program body at line 22:/tmp/0GtE_VXval␤»

[21:43] <masak> rakudo: -> $_ is rw = $a { $_ = 5 }()

[21:43] <p6eval> rakudo 377615: OUTPUT«===SORRY!===␤too few positional arguments: 2 passed, 3 (or more) expected␤»

[21:44] <masak> rakudo: -> $_ is rw = $FOO::a { $_ = 5 }()

[21:44] <p6eval> rakudo 377615: OUTPUT«Null PMC access in getprop()␤  in '&infix:<=>' at line 1␤  in <anon> at line 22:/tmp/L0n2265ZPQ␤  in main program body at line 22:/tmp/L0n2265ZPQ␤»

[21:44] <masak> hihihi

[21:45] <masak> rakudo: -> $_ = $FOO::a { $_ = 5 }()

[21:45] <p6eval> rakudo 377615: OUTPUT«Cannot modify readonly value␤  in '&infix:<=>' at line 1␤  in <anon> at line 22:/tmp/f5KasVE7e1␤  in main program body at line 22:/tmp/f5KasVE7e1␤»

[21:46] *** Italian_Plumber joined
[21:46] <jnthn> rakudo: $FOO::a = 42

[21:46] <p6eval> rakudo 377615: OUTPUT«Null PMC access in getprop()␤  in '&infix:<=>' at line 1␤  in main program body at line 22:/tmp/2jMwQmnTc9␤»

[21:46] * masak changes the ticket

[21:49] *** Italian_Plumber left
[21:51] *** jaldhar joined
[21:57] *** jaldhar left
[21:58] *** breinbaas joined
[21:59] *** molaf left
[22:02] *** dream left
[22:13] *** jql joined
[22:13] *** justatheory joined
[22:16] *** mavrc left
[22:16] <dalek> rakudo: 9702438 | masak++ | src/core/Temporal.pm:

[22:16] <dalek> rakudo: [Temporal] made Dateish into a role

[22:16] <dalek> rakudo: 

[22:16] <dalek> rakudo: If nothing else, we get rid of one level of inheritance this way. jnthn

[22:16] <dalek> rakudo: and I discussed it a bit, and it feels wrong-ish in Perl 6 to use a

[22:16] <dalek> rakudo: base class as a collector of convenience methods.

[22:16] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/97024389f53918037df8483fe35bfb5792f77bc3

[22:17] *** fod joined
[22:18] <masak> 'night, #perl6.

[22:18] *** PZt left
[22:18] *** masak left
[22:24] *** mfollett left
[22:27] *** estrabd is now known as estrabd_amf

[22:40] *** PZt joined
[22:40] *** Sarten-X joined
[22:56] *** aesop joined
[23:09] *** Raynes_ is now known as Raynes

[23:09] *** Raynes left
[23:09] *** Raynes joined
[23:22] *** gottreu joined
[23:27] *** cdarroch left
[23:32] *** FurnaceBoy joined
[23:40] *** gottreu left
[23:40] *** jaldhar joined
