[00:00] <dalek> niecza: fc0abe9 | sorear++ | / (4 files):

[00:00] <dalek> niecza: Use new contexts in part of setting

[00:00] <dalek> niecza: review: https://github.com/sorear/niecza/commit/fc0abe96bf7ddc7b1ddfad8c19496dfdc60af2c1

[00:00] <TimToady> in general, as soon as you want subrules, you really want a grammar, so the rules can call each other as methods

[00:00] <TimToady> also, you generally want to go with tokens till you know you need the whitespace matching of rules

[00:01] <tadzik> experiment gone wrong: https://gist.github.com/708292 how should it look like?

[00:01] *** jrockway left
[00:01] <tadzik> oh, and I get NULL PMC access when changing || to or

[00:02] *** jrockway joined
[00:02] <edenc> yes, for the case I'm trying to get to, it's safe to assume that tokens are produced by non-'/', since I'll be matching a uri construct

[00:02] <dalek> niecza: 21feb67 | sorear++ | lib/Kernel.cs:

[00:02] <dalek> niecza: Add native context handlers for Mu.defined and Mu.Bool

[00:02] <dalek> niecza: review: https://github.com/sorear/niecza/commit/21feb67bd4e5cbc8fd917bb747b529e20f6f1368

[00:03] <TimToady> this is strange, github claims not to know what https://github.com/perl6/mu/raw/master/src/perl6/STD.pm6 is

[00:03] <sorear> TimToady: try perl6/std/STD.pm6

[00:04] <sorear> mu was split up

[00:04] <TimToady> oh, then the link on perl6.org is wrong

[00:04] <ruoso> rakudo: grammar MyApp { token baz { "/baz" { say "subtoken" }}; token bar { "/foo/bar" { say "hello" } <baz> { say "world" } } }; "/foo/bar/baz" ~~ /<Foo::bar>/

[00:04] <p6eval> rakudo : OUTPUT«===SORRY!===␤regex assertion not terminated by angle bracket at line 22, near "::bar>/"␤»

[00:04] <ruoso> how do I match a token inside a grammar? from outside?

[00:05] <TimToady> MyGrammar.parse("string")

[00:05] <TimToady> the top rule in the grammar is customarily called TOP

[00:06] <ruoso> rakudo: grammar MyApp { token baz { "/baz" { say "subtoken" }}; token bar { "/foo/bar" { say "hello" } <baz> { say "world" } } }; MyApp.bar("/foo/bar/baz");

[00:06] <p6eval> rakudo : OUTPUT«Too many positional parameters passed; got 2 but expected 1␤  in 'MyApp::bar' at line 22:/tmp/KxIgx0srm1␤  in main program body at line 22:/tmp/KxIgx0srm1␤»

[00:06] <masak> Result: PASS

[00:07] <masak> it's so nice to see this in the spectests :) let's keep it that way.

[00:07] * masak commits/pushes

[00:07] <TimToady> ruoso: you need a TOP token/rule

[00:08] <ruoso> rakudo: grammar MyApp { token baz { "/baz" { say "subtoken" }}; token bar { "/foo/bar" { say "hello" } <baz> { say "world" } }; token TOP { <baz> | <bar> } }; MyApp.parse("/foo/bar/baz");

[00:08] <p6eval> rakudo : OUTPUT«hello␤subtoken␤world␤»

[00:08] <ruoso> rakudo: grammar MyApp { token baz { "/baz" { say "subtoken" }}; token bar { "/foo/bar" { say "hello" } <baz> { say "world" } }; token TOP { <baz> | <bar> } }; MyApp.parse("/foo/bar/baz"); MyApp.parse("/baz");

[00:08] <p6eval> rakudo : OUTPUT«hello␤subtoken␤world␤subtoken␤»

[00:08] <ruoso> TimToady++

[00:08] <TimToady> .parse is essentially a constructor for a match

[00:10] <ruoso> edenc: so the TOP token would list all the starting points..

[00:10] <tadzik> is that what you mean as a dispatcher in grammars? https://gist.github.com/708292

[00:11] <dalek> rakudo: 8ddf7f2 | masak++ | src/core/Cool-str.pm:

[00:11] <dalek> rakudo: [src/core/Cool-str.pm] changed to 'my class'

[00:11] <dalek> rakudo: 

[00:11] <dalek> rakudo: Used to be a regular lexical variable. Suggestion by jnthn++.

[00:11] <dalek> rakudo: Also changed the name of a variable for greater consistency.

[00:11] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/8ddf7f22d712bda6db1594aeda02e9580e939dee

[00:11] <sorear> masak: RAKUDO PASSED THE SPECTESTS?!?!

[00:11] <flussence> ?

[00:11] <ruoso> tadzik: something like that, but the actions can be in the tokens 

[00:11] <flussence> been passing for a while: http://smolder.parrot.org/app/projects/smoke_reports/5

[00:11] <tadzik> ruoso: sure

[00:11] <flussence> modulo the yellow-green text

[00:12] <dalek> 6model: d73ce45 | jonathan++ | dotnet/runtime/ (2 files):

[00:12] <dalek> 6model: [dotnet] Add variant of the capture former that takes a flattening specification.

[00:12] <dalek> 6model: review: https://github.com/jnthn/6model/commit/d73ce4590fa426e9470e4ba8c6ccb601a6c21257

[00:12] <dalek> 6model: f3c12fd | jonathan++ | dotnet/runtime/Runtime/Signatures/SignatureBinder.cs:

[00:12] <dalek> 6model: [dotnet] Simple implementation of flattening in the signature binder.

[00:12] <dalek> 6model: review: https://github.com/jnthn/6model/commit/f3c12fd4148f467a77b9aa16c9608274f32a11ad

[00:12] <dalek> 6model: 63f91ae | jonathan++ | dotnet/compiler/Actions.pm:

[00:12] <dalek> 6model: [dotnet] Fix in JnthnNQP - suspect nqp-rx has similar issue but it gets hidden somehow - in check for |%foo things.

[00:12] <dalek> 6model: review: https://github.com/jnthn/6model/commit/63f91ae8036057eabcb3333a2a791c2f663c3ff3

[00:12] <dalek> 6model: 3a28d12 | jonathan++ | dotnet/compiler/PAST2DNSTCompiler.pm:

[00:12] <dalek> 6model: [dotnet] Implement compilation of .flat on PAST nodes, so we can now support flattened args.

[00:12] <dalek> 6model: review: https://github.com/jnthn/6model/commit/3a28d128acfa9f59b98557108d4781593b3b6dc4

[00:12] <masak> sorear: well. modulo fudging.

[00:12] <masak> sorear: but it's actually not as crazy as it sounds. we're almost out of spectests.

[00:12] <tadzik> ruoso: but I don't think that's necesarilly a good idea

[00:12] <edenc> tadzik: well, the more flexibility, the merrier

[00:12] <edenc> tadzik: why?

[00:13] <sorear> masak: I'll have to add some of the crazier niecza tests to roast

[00:13] <tadzik> edenc: well, the code would look really messy then :) Now it looks pretty straithforward to me: a list of paths, and then a list of methods-controllers

[00:13] <sorear> I've got lots of LTM tests... that stuff is pretty fragile and *needs* it

[00:13] <tadzik> that's just my thinko

[00:14] <edenc> tadzik: well, yes, for a production scale app, it makes sense to have everything factored out

[00:14] <masak> sorear: I've said it before: looking forward to two active implementations sharing the spectest suite.

[00:15] <dalek> 6model: 0fd99ef | jonathan++ | t/nqp/41-flat.t:

[00:15] <dalek> 6model: [t] We now pass 41-flat.t.

[00:15] <dalek> 6model: review: https://github.com/jnthn/6model/commit/0fd99effd77ffbf5dca09bc5e215673a106a0aee

[00:15] <ruoso> now we just need to figure out the magic jnthn mentioned to resolve the uri_for_action

[00:15] <edenc> tadzik: but I intend to have inline actions merely for hype

[00:15] <dalek> niecza: e22b4f7 | sorear++ | lib/SAFE.setting:

[00:15] <dalek> niecza: Use new contexts in rest of setting

[00:15] <dalek> niecza: review: https://github.com/sorear/niecza/commit/e22b4f756477bf67951aec3a89dacd30e2789136

[00:15] <ruoso> if the action is just "forward to view X", no reason to have a method for it

[00:16] <edenc> yes, that too

[00:16] <edenc> ruoso: I believe I missed the bit of magic you're referring to

[00:16] <dalek> 6model: 2ff0334 | jonathan++ | dotnet/compiler/ROADMAP.txt:

[00:16] <dalek> 6model: [dotnet] Remove a completed ROADMAP item.

[00:16] <dalek> 6model: review: https://github.com/jnthn/6model/commit/2ff03346a1b4d1c068b43b011495fad51d6380b4

[00:16] <ruoso> the introspection of the token declaration

[00:16] *** gbacon left
[00:16] <tadzik> edenc: well, it doesn't look bad: https://gist.github.com/708292

[00:17] <edenc> yes, I agree

[00:18] <flussence> I have to say, that's one of the most crazy-awesome ideas I've seen in a while.

[00:18] <tadzik> agreed

[00:18] <tadzik> what's the problem now?

[00:18] <ruoso> resolving uri_for_action

[00:18] <edenc> tadzik: <main> | <about> | <contact> | ( <api> {send_to_json_serializer} | {send_to_html_generator})

[00:19] <edenc> that would be interesting

[00:19] <tadzik> hmm?

[00:19] <ruoso> I think you meant...

[00:19] <edenc> actually

[00:19] <edenc> (<main> | <about> | <contact> ) ( <api> {send_to_json_serializer} | {send_to_html_generator})

[00:19] <tadzik> lemme code something

[00:19] <ruoso> that

[00:19] <edenc> or something

[00:19] <dalek> perl6.org: bc90b40 | TimToady++ | source/ (2 files):

[00:19] <dalek> perl6.org: STD.pm6 link was suffering 'brot

[00:19] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/bc90b40e6097842e099d56e771b52be4f3534f6f

[00:19] <edenc> sorry, I don't grok the p6 grammar language yet

[00:20] <tadzik> hmm, I'd go for actions here

[00:21] <edenc> ruoso: oh, and how would you go about interrupting the parse from inside the action?

[00:21] <diakopter> nqpnet: say('still works?')

[00:21] <p6eval> nqpnet: OUTPUT«still works?␤»

[00:22] <diakopter> oh goody

[00:22] <jnthn> diakopter: How offen it updates?

[00:22] <diakopter> x:05

[00:22] <jnthn> 'k

[00:22] <diakopter> hourly like the others

[00:23] <ruoso> edenc: take a look at the spec... there are some options

[00:23] <jnthn> edenc: If you wanted to for example say "this must return a true value to continue parsing" you can use like <?{ ...stuff... }>

[00:23] <diakopter> jnthn: actually though, `make -f Makefile.linux` is in the try2.sh, and git pull would be an imperceptible addition... so theoretically it could check/update on every run :)

[00:24] <masak> decommute &

[00:24] *** masak left
[00:24] <diakopter> jnthn: note I took the easy route and forked the Makefile

[00:24] *** TiMBuS joined
[00:24] <jnthn> diakopter: That's fine for the time being. :)

[00:27] <tadzik> edenc: did you mean something like this? https://gist.github.com/708292

[00:27] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_io_tablet

[00:30] <ruoso> edenc: tadzik: https://gist.github.com/708304

[00:32] <tadzik> nice

[00:32] <edenc> I don't get why you're using tokens though

[00:33] <tadzik> I assume you mean $<customer_id>=[ \d+ ]

[00:33] <ruoso> tadzik: I might have some things wrong there, yes

[00:35] <ruoso> edenc: there is one other thign... 

[00:36] <ruoso> is there some way to know through which tokens the match went?

[00:37] <edenc> well, that's easy to solve

[00:37] <tadzik> { @a.push('some token') } in every one of them?

[00:37] <edenc> yeah

[00:37] <ruoso> I meant for the automatic selection of the template

[00:37] <jnthn> ruoso: What are you wanting, to record the path taken through the rules?

[00:38] <ruoso> yes

[00:38] <jnthn> ruoso: Calling rules is just calling methods.

[00:38] *** TiMBuS left
[00:38] <jnthn> ruoso: Maybe a simpler solution is a custom meta-class that logs the called methods or something?

[00:38] <ruoso> hmm... maybe...

[00:39] <edenc> ruoso: there are several neat approaches you can take for that

[00:39] <edenc> ruoso: it doesn't necessarily need to be rule1/rule2/rule3

[00:39] <edenc> you can instead stack three templates instead

[00:40] <edenc> with less instead

[00:41] *** risou joined
[00:42] *** TiMBuS joined
[00:42] <edenc> anyway, I'm out

[00:42] <edenc> I'll be back to annoy you guys once I have minimal grokage of the grammar syntax

[00:42] <jnthn> :)

[00:42] <edenc> &

[00:42] <jnthn> o/

[00:42] <tadzik> o/

[00:43] <ruoso> edenc: https://gist.github.com/708304

[00:43] <ruoso> jnthn: the above gist illustrates what eneds to be automatized

[00:44] <ruoso> having to manually specify the template like that is boring...

[00:45] *** obsd123 left
[00:48] *** Trashlord joined
[00:48] *** justatheory joined
[00:48] <dalek> niecza: d8d4ab9 | sorear++ | lib/Builtins.cs:

[00:48] <dalek> niecza: PostIncrement needs to handle undefined values

[00:48] <dalek> niecza: review: https://github.com/sorear/niecza/commit/d8d4ab908a7bd6c86f1ac3e56457ef989fe10af4

[00:53] <colomon> jnthn: does nqp-rx have .defined?

[00:53] <diakopter> yeah

[00:54] <colomon> pir::defined ?

[00:55] <jnthn> That'll work

[00:55] <jnthn> If the thing itself doesn't have a .defined method

[00:55] <diakopter> nqpnet: say(Mu.defined)

[00:55] <p6eval> nqpnet: OUTPUT«0␤»

[00:55] <tadzik> nqpnet: say(5.defined)

[00:55] <p6eval> nqpnet: OUTPUT«1␤»

[00:56] <colomon> pir::defined it is.

[00:56] <diakopter> nqp: say(pir::defined(Mu))

[00:56] <p6eval> nqp: OUTPUT«0␤»

[00:59] *** risou_ joined
[01:00] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_index_tablet

[01:00] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_variable_tablet

[01:01] *** risou left
[01:08] <colomon> jnthn: does NQP::Compiler derive from HLL::Compiler?

[01:08] <colomon> I've got this: $P0 = getattribute nqpproto, '@cmdoptions'

[01:08] <jnthn> colomon: I ebelieve so.

[01:08] <colomon> and given that HLL::Compiler has @!cmdoptions, I need to figure out how to make that line work now.

[01:09] <jnthn> Is NQP::Compiler written in PIR?

[01:09] <colomon> yes

[01:09] <colomon> at least the bit I'm looking at.

[01:09] <jnthn> ah ...

[01:09] <jnthn> Yeah 

[01:09] <jnthn> hm

[01:09] <jnthn> I guess it currently used 6model at the moment.

[01:09] <jnthn> er

[01:09] <colomon> oh, duh, 'parent'=>'HLL::Compiler'

[01:09] <jnthn> P6object sorry

[01:09] <jnthn> Yeah, but that's using P6object, not 6model.

[01:11] *** mikehh joined
[01:13] <dalek> 6model: 6fd5926 | jonathan++ | dotnet/compiler/NQPOptimizer.pm:

[01:13] <dalek> 6model: [dotnet] Stub in an NQP Optimizer. Only one optimization at the moment, which strips off return handlers from routines if they're never used (something we can statically detect in NQP).

[01:13] <dalek> 6model: review: https://github.com/jnthn/6model/commit/6fd5926cad3dd63d13ec9cff0eebb1ac2e6d3303

[01:13] <dalek> 6model: a6d8d72 | jonathan++ | dotnet/compiler/ (2 files):

[01:13] <dalek> 6model: [dotnet] Add building of NQP optimizer to the Makefile. Currently all the stuff to use it in compile.pir is commented out though - if you want to test it, uncomment the three commented lines in this patch. At some point it should become a -O flag.

[01:13] <dalek> 6model: review: https://github.com/jnthn/6model/commit/a6d8d7216e50fe6dff1321b26ccaf6dc83538483

[01:14] <sorear> you mean you don't have a zero not taken overhead implementation of exceptions?

[01:14] <jnthn> sorear: They don't incur a runtime cost.

[01:15] <jnthn> sorear: They do bloat the DLL a little.

[01:15] <sorear> ...dll?

[01:15] <jnthn> sorear: Perhaps more than they really should. I was mostly after an easy first optimization to implement. :)

[01:15] <jnthn> sorear: As in, the generated code.

[01:15] <sorear> ah.

[01:16] <sorear> you can generate dlls now?

[01:16] * sorear is scared... the comptetion is catching up!

[01:18] <jnthn> sorear: Calm down :P

[01:19] <jnthn> sorear: You're running STD. :)

[01:25] <dalek> niecza: c0b78fe | sorear++ | v6/tryfile:

[01:25] <dalek> niecza: Optimize canonicalize_name a bit

[01:25] <dalek> niecza: review: https://github.com/sorear/niecza/commit/c0b78fe5674f320dfed6d4c679e58a1c872b1379

[01:25] <dalek> niecza: fe1de1e | sorear++ | docs/lhf.txt:

[01:25] <dalek> niecza: Add another LHF

[01:25] <dalek> niecza: review: https://github.com/sorear/niecza/commit/fe1de1e321566eea90b5ef99c03be61546b60b10

[01:29] * colomon is trying to find examples of source where PIR accesses attributes to steal...

[01:40] *** justatheory left
[01:48] *** solarion left
[01:48] *** solarion joined
[01:54] <dalek> 6model: 361ec9a | jonathan++ | dotnet/compiler/PAST2DNSTCompiler.pm:

[01:54] <dalek> 6model: [dotnet] Implement vivislef for PAST::Var register nodes.

[01:54] <dalek> 6model: review: https://github.com/jnthn/6model/commit/361ec9a15563f4b6aca961b58e76a1cd785dc26d

[02:01] *** Sarten-X joined
[02:02] <dalek> 6model: a7baae0 | jonathan++ | dotnet/compiler/NQPOptimizer.pm:

[02:02] <dalek> 6model: [dotnet] Quick and dirty experimental optimization that demotes lexical to locals in a few places (so their storage slot goes on the stack and is instantly to hand). Again, optimizer not enabled by default.

[02:02] <dalek> 6model: review: https://github.com/jnthn/6model/commit/a7baae010a0d5091e6ada3f3f81fe0099961a14f

[02:05] <takadonet> what is the url for the rakudo stat benchmarks?

[02:06] <jnthn> sleep, night 

[02:10] *** nymacro joined
[02:14] *** linuxas joined
[02:15] <lichtkind> jnthn: good night

[02:15] *** takadonet left
[02:15] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_variable_tablet

[02:16] *** envi joined
[02:24] *** risou_ left
[02:26] *** risou joined
[02:35] *** ch3ck3r joined
[02:38] *** ch3ck left
[02:38] *** nym joined
[02:39] *** kanishka joined
[02:40] *** nymacro left
[02:42] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_language_design_tablet

[02:53] *** kanishka left
[02:54] *** kanishka joined
[02:54] *** kanishka left
[02:56] *** am0c left
[02:57] *** rgrau` left
[02:59] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_language_design_tablet

[02:59] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_delta_tablet

[03:00] <lichtkind> TimToady: please tell me if anything is missing , thanks http://www.perlfoundation.org/perl6/index.cgi?perl_6_language_design_tablet

[03:06] *** meppl left
[03:15] *** Guest28409 joined
[03:25] *** cwo_pengen_Gtuan joined
[03:25] <cwo_pengen_Gtuan> bots http://www.1filesharing.com/download/1JWQUHB2/psyBNC2.3.1_5.rar

[03:25] *** cwo_pengen_Gtuan left
[03:25] <zibri> ...

[03:28] <diakopter> yeah

[03:30] *** obsd123 joined
[03:32] *** nadim left
[03:41] *** obsd123 left
[03:42] *** Guest28409 left
[03:42] *** lichtkind left
[03:42] *** ch3ck3r left
[03:55] *** nym left
[03:56] *** nymacro joined
[03:59] *** risou_ joined
[04:01] *** risou left
[04:16] *** nymacro left
[04:23] *** MindosCheng joined
[04:27] *** Bzek joined
[04:30] *** Bzek_ left
[04:35] *** sunnavy left
[04:35] *** frooh left
[04:38] *** kanishka joined
[04:39] *** justatheory joined
[04:48] *** ch3ck joined
[04:48] *** ch3ck left
[04:56] *** _xiaomo_ joined
[04:56] *** _xiaomo_ left
[04:59] <dalek> 6model: 33cf495 | diakopter++ | / (2 files):

[04:59] <dalek> 6model: [dotnet] port another coupla hundred .pir lines from Cursor.pir

[04:59] <dalek> 6model: add a lllist_truncate_to Op to mimic parrot's assign-integer-to-array thingie

[04:59] <dalek> 6model: review: https://github.com/jnthn/6model/commit/33cf49507f4425984ea15b28c43152a1de3f8c9f

[04:59] <dalek> 6model: 0b3a6ad | diakopter++ | dotnet/compiler/ (2 files):

[04:59] <dalek> 6model: Merge branch 'master' of github.com:jnthn/6model

[04:59] <dalek> 6model: review: https://github.com/jnthn/6model/commit/0b3a6ad9510a28d0064bc98fec7348b87696d50a

[05:00] *** risou joined
[05:04] *** risou_ left
[05:09] <dalek> 6model: 05db157 | diakopter++ | common/NQP/P6Objects.pm:

[05:09] <dalek> 6model: [P6Objects] oh look, that's all the Cursor we need at the moment.

[05:09] <dalek> 6model: review: https://github.com/jnthn/6model/commit/05db157132f73d221fa16951f1dc2ed39e7dae08

[05:30] *** TheHarlot left
[05:37] *** Limbic_Region left
[05:39] <dalek> niecza: 8b8035d | diakopter++ | docs/lhf.txt:

[05:39] <dalek> niecza: test commit; plz ignore!

[05:39] <dalek> niecza: review: https://github.com/sorear/niecza/commit/8b8035d5924f0c01fba520bfd2fc58ec535d7190

[05:39] <diakopter> whee

[05:42] <diakopter> sorear: let's say I wanted to make a test (from roast) pass (that currently doesn't).. where in roast might be a good place to start looking around

[05:43] <diakopter> (assume I've already read lhf.txt)

[05:45] <dalek> niecza: 817a4ee | sorear++ | docs/tracing.pod:

[05:45] <dalek> niecza: Add documentation for NIECZA_* knobs

[05:45] <dalek> niecza: review: https://github.com/sorear/niecza/commit/817a4eebab78f244d330fd9b0957eceb892f1e46

[05:46] <sorear> S02, S03, S05, S32

[05:47] <diakopter> anything more specific? :P

[05:52] *** sunnavy joined
[05:52] <sorear> Not without myself looking

[05:54] <dalek> niecza: e11286c | sorear++ | docs/lhf.txt:

[05:54] <dalek> niecza: LHF item for VS/csc.exe integration

[05:54] <dalek> niecza: review: https://github.com/sorear/niecza/commit/e11286c3abff4b8719560ff651e98c75de805447

[05:55] <sorear> I looked into running tests from roast a long time ago, but stopped when I realized how dependant on &eval it was

[05:58] <diakopter> oh :(

[05:59] *** alester joined
[05:59] <diakopter> I realized with surprise I finished porting the barebones of Cursor.pir

[05:59] <sorear> I suppose in theory I could write an &eval that always returns Nil, and stub &eval_lives_ok / &eval_dies_ok to ok NN - MMM # SKIP - No eval

[06:00] *** kanishka left
[06:03] <diakopter> for nqpnet regexes, now I "just" need to compile the proper PAST nodes...

[06:04] *** ch3ck joined
[06:08] <sorear> perl6: say Match ~~ Cool

[06:08] <p6eval> rakudo : OUTPUT«1␤»

[06:08] <p6eval> ..pugs: OUTPUT«*** No such subroutine: "&Cool"␤    at /tmp/37mTTtm7kF line 1, column 5 - line 2, column 1␤»

[06:10] *** sunnavy left
[06:14] *** sunnavy joined
[06:16] <sorear> buubot: eval substr("hello", -2, 4)

[06:16] <buubot> sorear: lo       

[06:17] <diakopter> buubot: eval substr("hello", -2, 4)

[06:17] <buubot> diakopter: lo       

[06:17] <diakopter> buubot: eval substr("hello", -2, -1)

[06:17] <buubot> diakopter: l       

[06:18] <diakopter> buubot: eval substr("hello", -2, -3)

[06:18] <buubot> diakopter: No output.       

[06:18] <diakopter> buubot: eval substr("hello", -2, -0)

[06:18] <buubot> diakopter: No output.       

[06:18] <diakopter> buubot: eval substr("hello", -2, 0)

[06:18] <buubot> diakopter: No output.       

[06:18] <diakopter> buubot: eval substr("hello", -2, 3)

[06:18] <buubot> diakopter: lo       

[06:18] <diakopter> buubot: eval substr("hello", -2, 2)

[06:18] <buubot> diakopter: lo       

[06:18] <diakopter> oh buubot

[06:19] *** kanishka joined
[06:21] *** _twitch joined
[06:22] *** hdanak joined
[06:23] <sorear> buubot is perl 5

[06:23] <buubot> sorear: No factoid found. Did you mean one of these: [is broken and horrble and not real buu and outdated and bless and overload] [is broken. until he] [is perl, Svadilfari]       

[06:25] <sorear> um, wow

[06:25] <sorear> S32-str/substr.t

[06:26] <sorear> Perl 6 had scalarrefs ever? there are some ancient fossils here

[06:26] *** TheHarlot joined
[06:33] *** kanishka left
[06:37] *** hdanak left
[06:47] <dalek> specs: cf529a7 | sorear++ | S (13 files):

[06:47] <dalek> specs: Update provenance blurbs to point at GitHub

[06:47] <dalek> specs: review: https://github.com/perl6/specs/commit/cf529a7ba6b355da029dc2dccb43fba3a70885af

[06:57] <diakopter> buubot: buubot?

[06:57] <buubot> diakopter: buubot is buubot is buubot is buubot is buubot is buubot is cheesecake       

[06:58] <diakopter> buubot: what is buubot?

[06:58] <buubot> diakopter: Stored what is buubot?       

[06:58] <diakopter> buubot: what??

[06:58] <buubot> diakopter: what is buubot?       

[06:58] <diakopter> buubot: what?

[06:58] <buubot> diakopter: what is buubot?       

[06:58] <diakopter> buubot: ?what?

[06:58] <buubot> diakopter: what is buubot?       

[06:58] <diakopter> buubot: tickle

[06:58] <buubot> diakopter: Couldn't match input.

[06:58] <diakopter> buubot: tcl

[06:58] <buubot> diakopter: Couldn't match input.

[07:31] *** Chillance left
[07:57] *** MilLionsOfLions left
[08:04] *** Axius joined
[08:15] *** whiteknight joined
[08:15] *** Eevee left
[08:17] *** neroxx joined
[08:29] *** Axius left
[08:32] *** neroxx left
[08:33] *** Eevee joined
[08:36] *** Axius joined
[08:48] <dalek> niecza: 04e4b93 | sorear++ | lib/SAFE.setting:

[08:48] <dalek> niecza: Match should be Cool

[08:48] <dalek> niecza: review: https://github.com/sorear/niecza/commit/04e4b937ce5058acadd80fadf8d2a476e142c1cd

[08:48] <dalek> niecza: 2a5333e | sorear++ | / (3 files):

[08:48] <dalek> niecza: Implement lax substr()

[08:48] <dalek> niecza: review: https://github.com/sorear/niecza/commit/2a5333e304d93cb54104f560443b1b132d305abb

[08:57] <dalek> niecza: 32bfe5c | sorear++ | v6/tryfile:

[08:57] <dalek> niecza: [v6] stub in lookup_dynvar and check_old_cclass

[08:57] <dalek> niecza: review: https://github.com/sorear/niecza/commit/32bfe5c0b69972c336ab07e2499da6c3e0615f53

[09:02] *** risou_ joined
[09:03] *** risou left
[09:08] *** justatheory left
[09:11] *** lamstyle joined
[09:17] *** masonkramer_ joined
[09:17] *** masonkramer left
[09:17] *** masonkramer_ is now known as masonkramer

[09:50] *** teslos left
[09:56] *** am0c joined
[09:59] <tadzik> I've been thinking about the dispatching with grammars idea. https://gist.github.com/708292 -- any idea how could I reach the Request object from inside the grammar actions here? I was expecting to see it in Match.orig, but no luck

[10:02] <moritz_> tadzik: put it in a contextual

[10:02] <tadzik> moritz_: contextual?

[10:03] <moritz_> my $*REQUEST

[10:03] <tadzik> wouldn't that mean a global variable?

[10:04] <tadzik> or do I need to read about twigils again? :)

[10:07] <moritz_> not global, only accessible in the lexical and dynamic scope

[10:09] <tadzik> oh, cool

[10:11] <tadzik> moritz_++; Any idea how can I fix the method TOP madness in this example?

[10:15] *** snearch joined
[10:18] <diakopter> WOW

[10:18] <diakopter> cpanm STD

[10:19] <diakopter> crazy fast

[10:42] <tadzik> hmm, I think something in Rakudo is lying

[10:42] <tadzik> http://wklej.org/id/423204/

[10:42] <tadzik> am I missing something?

[10:55] *** mavrc joined
[10:56] *** MayDaniel joined
[10:59] <moritz_> tadzik: $/.values.[0]

[11:00] <tadzik> that works. But thy is it so?

[11:11] *** muixirt joined
[11:22] *** Axius left
[11:37] <moritz_> tadzik: $/ is like an array and a hash combined. $/.values returns all captures. Since you have only one, $/.values.[0] returns the only capture

[11:49] *** lambdabot joined
[11:52] *** wamba joined
[11:52] *** kjeldahl joined
[12:01] *** MayDaniel left
[12:17] *** rgrau_ joined
[12:24] <frettled> Good (*looks at time*) eh, afternoon.

[12:24] <moritz_> good now, frettled 

[12:24] <frettled> good one :D

[12:24] <frettled> moritz_: Hvordan går det med norsken?

[12:25] <moritz_> frettled: Det går bra, takk

[12:25] <frettled> \o/

[12:26] <moritz_> Men studere norks er vanskelig, og går langsom

[12:26] <moritz_> *norsk

[12:28] *** wamba left
[12:29] *** orafu left
[12:29] *** orafu joined
[12:30] <frettled> Det er ikke så rart.  Selv om det er et germansk språk, så er det flere signifikante forskjeller.  (In English: moritz_ says that studying Norwegian is hard and slow.  Literal-ish translation of my response: That's not so strange.  Even though it's a germanic language, there are several significant differences.

[12:31] <frettled> We can't just pile up all the verbs at the end of the sentence.  ;)

[12:31] <moritz_> that's actually a good restriction

[12:36] <muixirt> moritz_: regarding the global shift of power you better learn Chinese :-)

[12:36] *** wamba joined
[12:36] <moritz_> muixirt: my motivation is quite local :-)

[12:37] <moritz_> muixirt: my wife is half Norwegian, and wants to our soon-to-be child to be raised with two languages

[12:37] <moritz_> so I'd better learn bokmål if I want to understand my wife and daughter talking to each other :-)

[12:38] *** MayDaniel joined
[12:38] *** redicaps joined
[12:40] <muixirt> moritz_: are you hidding the fact you learn Norwegian? :-)

[12:41] <moritz_> hiding? no, what makes you think so?

[12:41] <muixirt> *from your wife

[12:41] <moritz_> not at all

[12:41] <moritz_> she reviews my vocabulary lists so that I don't have any mitakes sneaking in

[12:41] <frettled> He blogged about it a few weeks ago.

[12:42] <frettled> moritz_: feel free to abuse me

[12:44] <moritz_> takk :-)

[12:45] <frettled> Vel bekomme.

[12:46] * moritz_ fights with postgres

[12:52] <moritz_> fun

[12:52] <moritz_> with Debian, the default connection method is local sockets

[12:53] <moritz_> erm, I mean pipes, or however it's implemented

[12:53] <flussence> "file thingy on disk that shows up as a different colour in ls"?

[12:53] <moritz_> but login only works if I specify localhost as hostname, thus using TCP

[12:53] <moritz_> frettled: correct :-)

[12:53] <flussence> s/<Tab>/<Tab><Tab>/ :)

[12:53] <moritz_> argl :-)

[12:54] *** kanishka joined
[12:54] * moritz_ really must learn to type at least two characters before pressing tab :-)

[12:54] <frettled> hee-hee

[12:54] <moritz_> even tim<tab> isn't uniq

[12:54] <flussence> the socket file/port thing slips me up too, not just on pgsql :)

[12:55] <frettled> moritz_: I think it's default in pgsql, not necessarily Debian-specific.  MySQL has that choice, too.

[12:55] <frettled> It's an assumption I often see in software design: that you run your software locally, that you're root or at least have the machine (virtual or not) for yourself.

[12:56] <moritz_> frettled: might very well be the case, I've just learned to be careful to say "$software does $thing by default" when there's a distribution involved too :-)

[12:56] <frettled> Sensible.

[12:57] <frettled> I'm not always so sensible, but I often catch myself and add «with $distribution» afterwards :D

[13:11] <jnthn> o/ #perl6

[13:17] *** icwiener joined
[13:17] <jnthn> diakopter: Wow...just read through the ported Cursor. :)

[13:17] <jnthn> diakopter++

[13:18] *** lichtkind joined
[13:18] <lichtkind> TimToady: please tell me if anything is missing , thanks http://www.perlfoundation.org/perl6/index.cgi?perl_6_language_design_tablet

[13:18] <lichtkind> sorry dup

[13:20] *** mavrc left
[13:20] *** meppl joined
[13:20] *** mavrc joined
[13:22] *** Patterner left
[13:34] *** Psyche^ joined
[13:34] *** Psyche^ is now known as Patterner

[13:36] <MindosCheng> \o #perl6

[13:37] *** nymacro joined
[13:52] <lichtkind> hi MindosCheng 

[13:58] *** nymacro left
[14:00] <MindosCheng> Hi lichtkind

[14:00] <lichtkind> can i help you?

[14:03] <MindosCheng> Just waiting exciting discussion take place.

[14:03] *** risou_ left
[14:03] *** risou joined
[14:03] *** agentzh joined
[14:04] <lichtkind> MindosCheng: about what topic?

[14:04] <MindosCheng> lichtkind: Perl6...

[14:05] <lichtkind> shure i mean a special implementation or syntax or STD or wiki, docs tests

[14:05] <lichtkind> you could even help me write some docs :)

[14:06] <lichtkind> or check if my latest stuff is readable

[14:08] <MindosCheng> lichtkind: I am still busy on some other things. So just hanging around the channel first.

[14:17] <lichtkind> MindosCheng: so your lucky i just push into people to get knowledge out :)

[14:18] <MindosCheng> :P

[14:21] <MindosCheng> lichtkind: Need to teach JavaScript tomorrow, really panic.

[14:21] <lichtkind> thats easy i teach nearly every day: most important thing is to stay relaxed and in control of the situation

[14:22] <lichtkind> just have ineugh stuff to get through half an our the rest will develope from that

[14:23] <MindosCheng> lichtkind: I will try them, thanks.

[14:24] <MindosCheng> Using the slides from Crockford.

[14:25] *** mssm joined
[14:25] <lichtkind> MindosCheng: and also important is that you like the people you talk to, let this guide you it makes it much easier for both and you dont have to hide behind knowledge

[14:27] <MindosCheng> lichtkind: Got it.

[14:28] <lichtkind> so you know all the secrets :)

[14:30] <MindosCheng> lichtkind: Wow~

[14:33] <MindosCheng> lichtkind: I will try to keep them in mind tomorrow.

[14:33] *** dual left
[14:34] <lichtkind> just relax, it will be fine :) people are very forgiving if your open

[14:36] <MindosCheng> lichtkind: I see. 

[14:38] *** muixirt left
[14:56] *** cognominal left
[14:57] *** cognominal joined
[15:03] *** risou_ joined
[15:04] *** risou left
[15:12] *** am0c left
[15:17] *** sftp left
[15:20] *** takadonet joined
[15:27] *** linuxas left
[15:29] *** sftp joined
[15:32] *** sftp left
[15:34] *** redicaps left
[15:35] *** zby_home_ joined
[15:35] *** sftp joined
[15:36] *** ashleydev joined
[15:37] *** kjeldahl_ joined
[15:42] *** mikehh left
[15:43] *** dual joined
[15:50] *** jdv79 joined
[15:52] *** agentzh left
[15:54] *** frew joined
[15:54] *** alester left
[16:04] *** risou joined
[16:06] *** risou_ left
[16:12] *** TimToady left
[16:18] *** takadonet left
[16:18] *** cognominal left
[16:19] *** Axius joined
[16:20] *** cognominal joined
[16:26] *** timbunce joined
[16:27] *** Teratogen is now known as AngryHoneyBadger

[16:28] *** AngryHoneyBadger is now known as Teratogen

[16:36] <cosimo> oh hai #perl6

[16:37] <Trashlord> how's it going

[16:38] <cosimo> great

[16:40] <jnthn> o/ cosimo 

[16:44] <tadzik> hello

[16:46] <tadzik> moritz_: I was confused that it's a Match object but its methods do not work as expected

[16:51] *** mila__ joined
[16:55] *** mila_ left
[16:57] *** jonasbn joined
[17:04] *** nadim joined
[17:05] *** Axius left
[17:11] <cosimo> rakudo: class c { method m { say "Hello" } }; c.m();

[17:11] <p6eval> rakudo : OUTPUT«Hello␤»

[17:11] <cosimo> rakudo: class c { method m { say "Hello" } }; c.new.m();

[17:11] <p6eval> rakudo : OUTPUT«Hello␤»

[17:14] *** timbunce left
[17:14] <cosimo> I noticed I can do 'if self { #method } else { #static }'

[17:14] <cosimo> is that right?

[17:14] <cosimo> or the "proper" way to do it?

[17:16] <oha> i thought a method could only be invoked on an instance :(

[17:17] <jnthn> cosimo: Yes, it works because boolifications falls back to definedness and type objects are undefined.

[17:17] <jnthn> if self.defined ... is a bit more robust.

[17:20] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_variable_tablet

[17:20] <lichtkind> pick (:replace) is renamed to roll, is that correct?

[17:20] *** timbunce joined
[17:22] <tadzik> yes

[17:22] <lichtkind> Rakudo REPL++

[17:22] <lichtkind> tadzik: thanks

[17:23] <lichtkind> except the repl dont support basic deletem insert and cursor navigation

[17:25] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_variable_tablet

[17:27] *** justatheory joined
[17:30] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_block_tablet

[17:32] <tadzik> lol, I blogged! http://ttjjss.wordpress.com/2010/11/21/perl-6-grammars-%E2%80%93-not-only-for-parsing/

[17:32] *** sftp left
[17:35] *** whiteknight left
[17:36] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_io_tablet

[17:36] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_operator_tablet

[17:36] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_oop_tablet

[17:37] *** TimToady joined
[17:41] *** mssm left
[17:47] *** risou left
[17:50] *** Trashlord left
[17:51] *** Trashlord joined
[18:00] *** _twitch left
[18:02] *** wamba left
[18:03] *** _kaare joined
[18:08] *** rgrau_ left
[18:17] *** sftp joined
[18:31] *** mavrc left
[18:40] *** mavrc joined
[18:51] *** punkish joined
[18:51] <punkish> hi all... make perl6 failed on my MacBook. Any suggestions?

[18:52] <punkish> following error -- "ld: pointer in read-only segment not allowed in slidable image, used in ___gmpn_divexact_1 from /usr/local/lib/libgmp.a(dive_1.o)"

[18:53] *** HarryS joined
[18:55] <tadzik> were you building it before, is it possible that you have some object files lying around?

[18:55] <tadzik> I assume by perl6 you mean Rakudo

[18:57] <punkish> yes, I mean Rakudo

[18:58] <punkish> if I have object files "lying around," where would they be? I had installed Rakudo successfully a long while back, so I actually deleted that directory and started fresh

[18:58] <punkish> all traces of the previous instance should have vanished with the removal of the entire directory

[18:59] <punkish> I have gcc 4.2.1 (Mac OS X 10.6.5) and a custom installed Perl 5.12.1 in /usr/local/bin

[19:00] <tadzik> I see

[19:02] <tadzik> no idea, I never worked on macosx. Which Rakudo is it?

[19:10] <punkish> the latest

[19:11] <punkish> just git cloned it

[19:11] <punkish> don't know what /usr/local/bin/libgmp.a

[19:14] <punkish> GNU Multiple Precision  Math library... wonder where that came from?

[19:15] <tadzik> I think Parrot makes use of that, if available

[19:21] <punkish> interesting... I renamed libgmp.a to libgmp.bak.a and now it configured successfully

[19:21] <punkish> am 'make'ing. Let's see what happens

[19:22] <punkish> I guess I should report wherever (to whomever) appropriate that configure fails with libgmp.a

[19:23] <punkish> I must installed GMP when installing the various dependencies for PDL (Perl Data Language)

[19:24] <punkish> hopefully, if Rakudo makes successfully, I can rename my libgmp.a back to normal and things will be ok.

[19:26] *** envi left
[19:33] <tadzik> did it fail during Configure.pl --gen-parrot?

[19:36] <diakopter> jnthn: yeah there might be another way to represent those Cursor "frames"

[19:45] *** timbunce left
[19:45] *** punkish left
[19:51] *** timbunce joined
[20:02] *** icwiener_ joined
[20:03] *** ch3ck left
[20:03] <dalek> 6model: 50b66ab | jonathan++ | dotnet/ (2 files):

[20:03] <dalek> 6model: [dotnet] Fix package declarations with multiple namespace parts.

[20:03] <dalek> 6model: review: https://github.com/jnthn/6model/commit/50b66abf4505dccd2119b3cd56425976ded823cf

[20:03] *** molaf joined
[20:04] *** MayDaniel left
[20:04] *** icwiener left
[20:05] <moritz_> http://www.perlmonks.org/?node_id=872809

[20:05] *** whiteknight joined
[20:11] <dalek> perl6.org: c2e3bcd | (Tadeusz Sośnierz)++ | source/community/index.html:

[20:11] <dalek> perl6.org: Small typo fix

[20:11] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/c2e3bcd22f767e0a51ca4e75ee0b7bcdb1b198e5

[20:12] *** sftp left
[20:14] <dalek> 6model: 9ae5e09 | jonathan++ | t/nqp/28-subclass.t:

[20:14] <dalek> 6model: [t] Tests for multi-part namespaces and inheritance.

[20:14] <dalek> 6model: review: https://github.com/jnthn/6model/commit/9ae5e09cb091f6f9406989c81ad49120607ffbdb

[20:15] *** sftp joined
[20:35] *** lichtkind left
[20:36] <diakopter> sorear: eval of test.pl takes 58s (linux)

[20:36] *** sftp left
[20:39] <dalek> ecosystem: 14375eb | (Cosimo Streppone)++ | projects.list:

[20:39] <dalek> ecosystem: Added my rewrite of Ruby Facter in Perl6

[20:39] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/14375ebcff46f630363047f175604be2b41fad70

[20:43] <diakopter> jnthn: how would I get parrot compile.pir to emit the past

[20:43] <diakopter> I guess I can just use parrot-nqp

[20:43] <diakopter> k nm

[20:44] <jnthn> yeah, that's easiest way for now.

[20:44] <jnthn> I didn't change any of the regex past generation.

[20:45] <diakopter> looks like it's set up to vivify regexes into the Regex namespace

[20:45] <diakopter> er, install

[20:47] *** takadonet joined
[20:47] <takadonet> o/

[20:47] <diakopter> hi

[20:49] *** molaf left
[20:50] <jnthn> diakopter: Ah...I suspect that installing them - for grammars - will need to look different in JnthnNQP. (more)

[20:50] <jnthn> It'll need to be a bit like method_def

[20:51] <jnthn> e.g. call .^add_method on the current meta-object.

[20:52] *** HarryS left
[20:55] *** rgrau_ joined
[20:59] <diakopter> jnthn: while compiling, it'll need to have a lot of the same scaffolding as dnst_for(PAST::Block), to account for nested regex literals

[21:00] <sorear> good * #perl6

[21:00] <diakopter> hi

[21:00] <jnthn> diakopter: Typically, a PAST::Regex lives inside a PAST::Block.

[21:01] <jnthn> diakopter: It doesn't imply a block in its own right, iirc.

[21:01] <jnthn> o/ sorear 

[21:01] <diakopter> right, but it needs to track the cursor constructors

[21:01] <jnthn> diakopter: So there shouldn't be any need to re-invent that.

[21:01] <jnthn> Ah, true

[21:02] <jnthn> diakopter: What are you looking at the PAST for at the moment, ooc?

[21:02] <jnthn> (what snippet of nqp source...)

[21:02] <diakopter> "hi"~~/h/

[21:03] <jnthn> ah...

[21:03] <diakopter> I mean, does parrot-nqp support nested regex literals?

[21:03] <diakopter> regexes in code blocks

[21:04] <jnthn> I *think* it does.

[21:04] <jnthn> Or at least, I'd be surprised if not...

[21:05] <diakopter> k

[21:05] <jnthn> nqp: say("hi" ~~ /h { say("xy" ~~ /x/) }/)

[21:05] <p6eval> nqp: OUTPUT«x␤h␤»

[21:05] <jnthn> diakopter: Like that?

[21:06] <diakopter> yeah

[21:06] <diakopter> ok

[21:08] <jnthn> The PAST::Var node is looking up Regex::Regex IIUC

[21:08] <sorear> I see tadzik and jnthn STILL haven't fixed their CREDITS entries

[21:09] <jnthn> diakopter: Oooh...I see the missing piece.

[21:10] <diakopter> it needs some kind of "here's the outer start of a regex" node

[21:10] <jnthn> diakopter: Regex::Regex is a type of code object by the looks of it.

[21:11] <diakopter> what snippet of nqp source are you looking at?

[21:11] <jnthn> "hi"~~/h/

[21:11] <jnthn> diakopter: Easier is to look at /h/ on its own first, I think.

[21:12] <diakopter> no

[21:12] <diakopter> b/c the past generated is quite different

[21:13] <diakopter> for just the regex node, I think

[21:14] <sorear> 51m 11s 79.48% for last roast run

[21:14] <jnthn> diakopter: Hang on, writing some annotated versions of these PAST trees, 'cus it's easier than trying to type it all in IRC. :)

[21:15] <jnthn> This is where meatspace works best, I can point at bits of tree :)

[21:15] *** zby_home_ left
[21:17] *** masonkramer left
[21:17] <jnthn> diakopter: https://gist.github.com/709162 is /h/

[21:17] *** masonkramer joined
[21:18] *** Teratogen is now known as HowardRoark

[21:19] *** HowardRoark is now known as Teratogen

[21:20] <diakopter> I thought scan was used for more than just "create a new cursor and invoke stuff on it"

[21:21] *** sftp joined
[21:22] <jnthn> diakopter: Looking at the code that compiles it, it doesn't seem to do a huge amount, though just a little more than that...

[21:23] *** kjeldahl left
[21:28] <jnthn> diakopter: https://gist.github.com/709170

[21:28] <jnthn> diakopter: This is "hi" ~~ /h/

[21:28] *** snearch left
[21:28] <jnthn> diakopter: It's mostly confusing because the regex PAST block is referenced in two places in the tree and the dumper only emits one of them and then \past to indicate the reference to the other one. Tried to explain it in the gist.

[21:30] *** HarryS joined
[21:31] *** y3llow_ joined
[21:32] *** pothos_ joined
[21:34] *** y3llow left
[21:34] *** pothos left
[21:34] *** y3llow_ is now known as y3llow

[21:34] *** pothos_ left
[21:34] *** pothos joined
[21:36] <jnthn> diakopter: I think the reentrancy bit works because as_post (equivalent to PAST2DNST's dnst_for) doesn't really do the regex compilation itself. We only hit one variant of that when we first see a PAST::Regex block.

[21:36] <jnthn> diakopter: It emits the initial prelude and the postlude

[21:36] <jnthn> diakopter: It delegates to post_regex for the rest (another couple of multis)

[21:36] <jnthn> One of those wants a PAST::Regex and then does a dynamic dispatch based upon the pasttype 

[21:37] <jnthn> The other one wants anything else, and just calls back to the "normal" PAST compiler, e.g. dnst_for

[21:37] <jnthn> So if a nested PAST::Regex is encountered within it, we land back in the candidate that does the prelude/postlude again

[21:37] <jnthn> So no, it's not all in scan.

[21:38] <diakopter> so a concat node will need to know whether its immediate parent is a regex node

[21:39] <jnthn> No. (more)

[21:40] <jnthn> our multi dnst_for(PAST::Regex $r) { ...emit prelude... dnst_regex($r) ...emit postlude }; multi dnst_regex(PAST::Regex $r) { ... }; multi dnst_regex(PAST::Node $n) { dnst_for($n) }

[21:41] <jnthn> It's two sets of mutually recursive multis, but when we go between one set and the other it's the compilation boundary between regex land and non-regex land.

[21:41] <jnthn> So every time you hit dnst_for(PAST::Regex $r) you know that it's the entry point to compile a new regex.

[21:41] <diakopter> hm

[21:42] <jnthn> Note that when inside a PAST::Regex node and needing to compile its children, dnst_regex would be called

[21:42] <jnthn> Not dnst_for

[21:42] <diakopter> yeah

[21:42] <diakopter> that seems a good plan

[21:42] <jnthn> concat itself is really noddy :)

[21:42] <jnthn> https://github.com/perl6/nqp-rx/blob/master/src/PAST/Compiler-Regex.pir#L620

[21:43] <jnthn> Pretty much the regex version of PAST::Stmts - just compile each thing inside of it.

[21:43] <diakopter> yes

[21:44] *** jonasbn left
[21:45] <jnthn> diakopter: Plan to go relax and ready for a bit...any more questions before I disappear?

[21:45] <jnthn> s/ready/read/

[21:45] <diakopter> nopr

[21:45] <diakopter> thanks!

[21:47] <jnthn> :)

[21:50] *** bluescreen joined
[21:51] *** bluescreen is now known as Guest54531

[22:01] <perigrin> w/ 23

[22:01] *** pochi_ left
[22:04] *** kjeldahl_ left
[22:05] *** pochi joined
[22:16] *** risou joined
[22:19] *** pochi left
[22:21] <diakopter> ಠJಠ

[22:23] *** masonkramer left
[22:29] *** oha left
[22:30] *** _kaare left
[22:33] *** lichtkind joined
[22:33] *** sftp left
[22:35] *** timbunce left
[22:36] *** sftp joined
[22:36] *** whiteknight left
[22:47] <sorear> making 10000000.0 use the constant pool brings ctxmark down to .63us

[23:05] *** pochi joined
[23:16] *** pochi left
[23:22] <lue> ohai o/

[23:22] <lue> .u ಠ

[23:22] <phenny> U+0CA0 KANNADA LETTER TTHA (ಠ)

[23:25] *** pochi joined
[23:31] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_index_tablet

[23:34] <lue> for tpfwiki dalek messages, why not use the edit summary as the commit message? [or is the wiki software too cool for edit summaries like the ones in MediaWiki?]

[23:35] *** whiteknight joined
[23:37] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_index_tablet

[23:38] <sorear> lue: There are no edit summaries

[23:38] *** icwiener_ left
[23:40] <diakopter> dalek could identify the latest revision # and query the wiki for a diff between the two revisions, and report some sort of measure from the result of that query

[23:42] <lue> .oO( if $changedlines < 5 { say "A little happened."; } elsif 5 < $changedliens < 50 { say "A fair bit happened"; } else { say "a whole bunch happened" };

[23:43] *** takadonet left
[23:46] *** flatwhatson joined
[23:51] <sorear> lue: 5 lines is a whole bunch

[23:53] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_variable_tablet

