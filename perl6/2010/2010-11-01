[00:00] *** __david__ joined
[00:01] <masak> jnthn: "abuse of a proto"/"someone will probably find a way to [abuse it more]". you must be new here. :P

[00:01] * masak cackles evilly

[00:02] <colomon> "This week's challenge is to figure out how to abuse proto...."

[00:03] <masak> jnthn++ # nice blug post

[00:03] *** whiteknight joined
[00:04] <dalek> 6model: e7e4edb | diakopter++ | / (3 files):

[00:04] <dalek> 6model: [dotnet] implement push, pop, unshift, shift in NQPArray

[00:04] <dalek> 6model: add some tests in 54-array.t

[00:04] <dalek> 6model: review: http://github.com/jnthn/6model/commit/e7e4edb43213931c55ff48952554ebe344fd71cf

[00:04] <colomon> jnthn++ # what masak said, plus sounds like good hacking!

[00:05] <jnthn> 'twas a fun weekend :-)

[00:07] <lue> jnthn++ # everything said above + reminding me to check on the P6 community more often

[00:10] *** risou left
[00:14] <sorear> woah, diakopter is hacking 6model now?

[00:16] <masak> diakopter++

[00:24] <jnthn> I only wrote the "stuff to hack on" file yesterday and diakopter++ has already demolished over half the tasks. :-)

[00:26] <masak> what a delightful destructive activity!

[00:26] <jnthn> :-)

[00:28] * jnthn goes to get some rest - $dayjob tomorrow

[00:28] <jnthn> night o/

[00:28] <sorear> I should make one of those!

[00:30] <masak> night, jnthn.

[00:35] <lichtkind> good night everyone

[00:38] <perigrin> jnthn: that just suggests you need to write a larger TODO list next time

[00:38] <perigrin> or pick harder things

[00:42] <masak> lol, I bloggethed: http://strangelyconsistent.org/blog/yet-another-month-of-november

[00:46] <lue> masak++ # I feel like I haven't done Actual Real Coding™ as well

[00:47] * masak adds the '™' to the post

[00:49] <lue> Web.pm is the thingy that (theoretically at least) would let me evilly code my site in P6 instead of, say, PHP, right?

[00:49] <masak> right.

[00:50] <masak> there's even been talk about making a Rakudo distribution optimized for that.

[00:50] <masak> I think that would be a very nice goal.

[00:52] <flussence> from what I understand, it'd be really easy to make a setting library to make rakudo php-like.

[00:52] <flussence> (auto http headers and stuff like that, not the functions :)

[00:53] <lue> I tried building meself a site (no place online yet though), and I was wearing my P6-colored glasses while coding javascript, and couldn't bear it :D

[00:53] <diakopter> perigrin: yes, harder things :)

[00:53] <diakopter> (or just lots more things)

[00:54] <diakopter> well-expressed/defined (aka easy) things are good too.

[00:54] <masak> lue: have you seen the "Good Parts" talk by Doug Crockford? http://www.youtube.com/watch?v=hQVTIJBZook

[00:56] <perigrin> diakopter++

[00:56] <lue> No, and I can't.

[00:57] <lue> [ A ~10 year old laptop does not a video player make :/ ]

[00:57] <masak> oh. sorry. :/

[00:57] <masak> anyway, it's a good talk.

[00:59] <lue> It's fine. I tried watching Patent Absurdity once by downloading it first.

[00:59] <lue> It was the day I learned this computer cannot play any sort of 'video' or other visual wonder.

[01:00] <lue> (I just tried compiling LibreOffice. Letting it run 24/7, it took days (as in several) and still didn't finish. *sob*)

[01:01] *** leprevost joined
[01:01] <masak> possibly a sign that it's time to upgrade?

[01:03] <lue> I got this laptop for free though. :)

[01:04] <lue> Compared to LibreOffice, Rakudo takes no time (I heard LibreOffice takes 2 hours on a quad-core!)

[01:06] <flussence> I can sympathise with that, chromium is a nightmare to compile too :)

[01:07] <lue> Then Chromium would be a Steve Moffat story for me ;)

[01:07] <flussence> on my quad-core desktop, it takes longer than rakudo on my netbook...

[01:10] <flussence> I think that's due to it bundling half an OS worth of duplicate libs, though. Hopefully that'll be gone by version 10ish

[01:12] <colomon> the last november for masak?!?!!!

[01:13] <masak> well, I'll still exist afterwards :)

[01:13] <masak> I hope.

[01:14] <lue> as long as you don't have a legally binding contract with any deity that tied you to those novembers, you'll be fine.

[01:14] <colomon> and you're making a secret announcement in december, eh?

[01:14] <masak> yep.

[01:14] <sorear> lue: do you also have free electricity/

[01:14] <colomon> (well, the announcement isn't secret)

[01:14] <masak> colomon: clue. you'll like it.

[01:15] <colomon> \o/

[01:15] <sorear> lue: if not, a reasonable upgrade will pay for itself

[01:15] <sorear> power conservation tech improved a *lot* from 2000-2007, and 3 year old computers are still pretty cheap

[01:18] <lue> My computer could be wasting energy and I don't even know it!? WOW! [not sarcastic there]

[01:20] *** lichtkind left
[01:20] *** masonkramer left
[01:21] <flussence> I've actually checked mine a few times...

[01:21] <flussence> barebones P3 server - ~70W, P4 desktop - 200W, PhenomII X4 - 120W

[01:21] <colomon> masak: I'm having a hard time imagining what you'd know for certain now and yet want to keep a secret.

[01:22] <masak> colomon: good. :)

[01:22] <colomon> but I like good surprises!

[01:27] <sorear> the P4 is one of the worst processors in history as far as power consumption

[01:27] <sorear> they had to switch to the Core line cause P5 prototypes kept melting

[01:28] <masak> that processor was hot!

[01:33] <lue> the PPC G5 suffered like that, why it's not in any Apple laptops (unless I missed something and P5=G5)

[01:39] <sorear> no, the P4 was an Intel chip, the G5 came from IBM

[01:42] *** rgrau_ left
[01:43] * masak sleeps

[01:43] *** masak left
[01:48] *** Chillance left
[01:55] *** pythonian4000 is now known as pythonian4000afk

[01:57] * diakopter afraid; I did stuff not in LHF.txt or ROADMAP

[01:58] <dalek> 6model: ad6fd43 | diakopter++ | / (3 files):

[01:58] <dalek> 6model: [dotnet] finish implementing pasttype while; implement until, repeat_while, repeat_until; add 14-while.t (all pass); add 05-comments.t b/c it passes.

[01:58] <dalek> 6model: review: http://github.com/jnthn/6model/commit/ad6fd437aec15ebcce419133203c2d45257fc93a

[01:59] <diakopter> actually I guess those are in ROADMAP under "Other types of loop"

[02:00] * sorear needs to make up a LHF and a ROADMAP

[02:00] <sorear> and finish up the docs

[02:00] <diakopter> :)

[02:02] <diakopter> sorear: jnthn's overall compilation approach is _incredibly_ similar to [what I thought I was inventing, novelly, in] Perlesque's

[02:03] * diakopter starts to guess it's kindof a common pattern

[02:12] *** whiteknight left
[02:16] <sorear> I'm going to need to implement real continuations at some point, hmm

[02:19] *** lestrrat left
[02:20] *** rjbs left
[02:21] *** starcoder left
[02:21] *** mdxi left
[02:26] <diakopter> sorear: :P

[02:29] *** rjbs joined
[02:30] *** starcoder joined
[02:30] *** starcoder left
[02:30] *** lestrrat joined
[02:33] *** starcoder joined
[02:33] *** mdxi joined
[02:42] *** starcoder left
[02:46] *** starcoder joined
[03:04] *** plainhao left
[03:05] *** dnl joined
[03:05] <dnl> moinsen

[03:06] <sorear> hi

[03:13] *** galf joined
[03:13] *** galf left
[03:15] <diakopter> sigh. stupid merge branch master, again.

[03:16] <diakopter> [CursorBase] special thanks to NYTProf; apply some inlining and CSE for a 10-15% speedup when parsing grammar-heavy input.  http://github.com/perl6/std/commit/c3fb774f664492f8dcb0dfc7875aeee1a683181a

[03:17] *** f00li5h is now known as skeleton_feline

[03:17] *** pythonian4000afk is now known as pythonian4000

[03:25] *** skeleton_feline is now known as f00li5h

[03:56] *** ash_ joined
[04:23] *** nadim left
[04:23] *** Alias left
[04:24] *** Alias joined
[04:25] *** Limbic_Region left
[04:27] *** nymacro joined
[04:40] *** dnl left
[04:46] *** Chat5550 joined
[04:50] *** Chat5550 left
[04:57] *** leprevost left
[05:04] *** vx64z left
[05:06] *** iWork joined
[05:15] *** molaf joined
[05:30] *** rvrgs joined
[05:37] *** molaf left
[05:52] *** Elise joined
[05:53] *** Elise left
[05:54] *** rvrgs- joined
[05:55] *** rvrgs left
[06:00] *** justatheory left
[06:06] *** sftp joined
[06:07] *** rvrgs- left
[06:33] *** meppl joined
[06:34] *** Chat0660 joined
[06:34] <Chat0660> hi room

[06:34] *** kaare joined
[06:35] *** drbean left
[06:35] *** kaare is now known as Guest60740

[06:35] <sorear> hello

[06:35] <Chat0660> whatsup

[06:36] <sorear> How long of a timespan do you care about?

[06:37] *** drbean joined
[06:37] <Chat0660> what do u mean

[06:40] *** Chat0660 left
[06:47] *** nadim joined
[06:55] *** HarryS left
[06:56] *** HarryS joined
[06:57] *** ash_ left
[07:08] *** uniejo joined
[07:24] *** cognominal left
[07:39] *** wallberg joined
[07:43] *** QinGW joined
[08:04] *** Bzek_ joined
[08:08] *** Bzek left
[08:10] *** jfried joined
[08:10] *** clkao left
[08:18] *** agentzh joined
[08:27] *** clkao joined
[08:28] *** sftp left
[08:29] *** starcoder left
[08:31] *** starcoder joined
[08:33] *** Axius joined
[08:38] *** starcoder left
[08:42] <jnthn> o/ #perl6

[08:45] <moritz_> \o

[08:46] <uniejo> |o|

[08:47] <LoRe> /o\

[08:53] *** uniejo left
[08:55] *** Axius left
[08:55] *** uniejo joined
[08:56] *** nymacro left
[08:58] *** starcoder joined
[09:00] *** Axius joined
[09:03] *** nymacro joined
[09:05] *** Axius left
[09:06] *** Axius joined
[09:08] *** _iWork_ joined
[09:12] *** iWork left
[09:32] *** nymacro left
[09:36] *** Axius left
[09:39] *** Guest60740 left
[09:41] *** timbunce joined
[09:42] *** kaare joined
[09:42] *** kaare is now known as Guest94482

[09:43] *** mavrc joined
[09:50] *** Guest94482 is now known as kaare_

[09:56] *** lamstyle left
[10:00] *** lamstyle joined
[10:01] *** mavrc left
[10:02] *** mavrc joined
[10:03] *** QinGW left
[10:06] *** nymacro joined
[10:29] *** _iWork_ left
[10:40] *** tadzik joined
[10:41] <tadzik> o/

[10:41] <jnthn> o/ tadzik 

[10:48] *** tadzik left
[10:50] *** tadzik joined
[11:00] *** icwiener joined
[11:05] *** masak joined
[11:05] <masak> oh hai, #perl6!

[11:08] * moritz_ looks forward to masak's next November blog post

[11:08] <masak> aka "masak's first November blog post"... :)

[11:08] <tadzik> oh hai masak

[11:09] <tadzik> so, is pls going to use Module::Tools maybe?

[11:10] <masak> possibly.

[11:11] <masak> will investigate.

[11:11] <masak> but now, lunch &

[11:14] *** rgrau_ joined
[11:30] *** plobsing left
[11:31] *** PacoLinux left
[11:32] *** wamba joined
[11:43] *** pythonian4000 is now known as pythonian4000afk

[11:54] *** Trashlord left
[12:04] <jnthn> diakopter: Just read over ad6fd437 - it looks good. :-) Yes, that was what the relevant item in the ROADMAP meant.

[12:04] * jnthn digs back into $dayjob after nice noms

[12:07] *** kensanata joined
[12:13] *** meppl left
[12:14] *** iWork joined
[12:15] *** agentzh left
[12:17] *** plainhao joined
[12:17] *** iWork left
[12:18] *** iWork joined
[12:21] *** iWork left
[12:22] *** iWork joined
[12:23] *** iWork left
[12:25] *** satyavvd joined
[12:31] *** Trashlord joined
[12:32] *** am0c joined
[12:33] *** tadzik left
[12:34] *** am0c left
[12:45] <masak> they what? http://twitter.com/pjf/status/29265124349

[12:46] <jnthn> hehe

[12:46] * moritz_ giggles

[12:47] <masak> now it feels like I'm missing out... :)

[12:47] <masak> Perl 7.9. fancy that.

[12:48] <jnthn> I want to think it's a typo for 5.9, apart from that woulda been a development version...

[12:48] <masak> yeah. it's odd.

[12:49] <jnthn> Literally *and* figuratively. ;-)

[12:49] <takadonet> morning

[12:49] <sjn> 5.7.9? :)

[12:49] <sjn> Perl6, version 7.9

[12:49] <sjn> Perl5*

[12:51] <moritz_> sjn: would be weird, since that's an (old) development version

[12:51] <sjn> yep

[12:52] <sjn> doesn't seem like a typo either

[12:52] <sbp> they're using a fractional base, not decimal

[12:52] <sjn> 7 and 5 aren't really next to eachother on the keyboard

[12:53] <sjn> perhaps they mean the "september 2007" release? :-P

[12:59] *** satyavvd left
[13:00] <moritz_> rakudo: sub factors($n) { ($n X/ 1..$n).grep: { .Int == $_ } }; say factors(15).join(', ')

[13:00] <p6eval> rakudo 5f5bae: OUTPUT«15, 5, 3, 1␤»

[13:09] <masak> rakudo: sub factors($n) { grep { $_ %% $n } 1..$n }; say factors(15).fmt(", ")

[13:09] <p6eval> rakudo 5f5bae: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 22␤»

[13:09] <masak> rakudo: sub factors($n) { grep { $_ %% $n }, 1..$n }; say factors(15).fmt(", ")

[13:09] <p6eval> rakudo 5f5bae: OUTPUT«, ␤»

[13:10] <masak> huh.

[13:10] <masak> oh!

[13:10] <masak> rakudo: sub factors($n) { grep { $_ %% $n }, 1..$n }; say factors(15).fmt

[13:10] <p6eval> rakudo 5f5bae: OUTPUT«15␤»

[13:10] <masak> rakudo: sub factors($n) { grep { $n %% $_ }, 1..$n }; say factors(15).fmt

[13:10] <p6eval> rakudo 5f5bae: OUTPUT«1 3 5 15␤»

[13:10] <PerlJam> heh

[13:11] <masak> rakudo: sub factors($n) { grep { $_ R%% $n }, 1..$n }; say factors(15).fmt # :)

[13:11] <p6eval> rakudo 5f5bae: OUTPUT«1 3 5 15␤»

[13:13] * moritz_ tries to find nice non-junction versions of Damian's examples

[13:13] <masak> moritz_: I had missed you in that thread. kudos for entering it.

[13:14] <jnthn> I really want to read that thread and get to grips with it.

[13:14] <jnthn> But multi-dispatch has been nomming all my brain tuits.

[13:14] <jnthn> :-)

[13:16] <masak> I find nowadays that I'm not too invested in junctions. they may be a central part of Perl 6, but they're not a central part of my Perl 6 coding.

[13:16] <masak> they're occasionally nice, that's all.

[13:16] <sbp> moritz_++ # entering the thread

[13:16] <jnthn> I find them like hyper-operators. I won't use them in every bit of code I write, but when they're useful they're really useful.

[13:17] <PerlJam> so ... you guys use || more than | in regex?  :)

[13:17] <moritz_> jnthn, masak: I fully agree

[13:18] <masak> PerlJam: I tend to use ||, because (I'm not aware that) | works as spec'd yet.

[13:18] <masak> urgh. parens fail.

[13:18] <masak> | doesn't work as spec'd in regexes. at least I'm not aware that they do.

[13:18] *** MayDaniel joined
[13:18] <masak> hence, I tend to use ||, for future compatibility.

[13:19] <masak> I tend to avoid writing bitrottable code when I can. :)

[13:20] *** dnl joined
[13:21] *** Patterner left
[13:22] <jnthn> The link with | in regexes is also more fluffy than deep implementation level too, I suspect.

[13:22] <masak> moritz_++ # making a lot of sense in the thread

[13:22] <masak> but urgh, sigil-less constants. do not want. :)

[13:23] <Util> Having created a class ReallyLongClassName, I want to make a shorter typename R, so that I can say

[13:23] <Util> multi sub infix:<+> ( R $a, R $b ) {...}

[13:23] <Util> instead of

[13:23] <masak> those sigils are there for a reason! why would I, after choosing a sigil-full language as Perl, choose to deprive the reader of the information that UNACCEPTABLE is an array?

[13:23] <Util> multi sub infix:<+> ( ReallyLongClassName $a, ReallyLongClassName $b ) {...}

[13:23] <Util> What is the Perl 6 syntax for such an alias, and does Rakudo support it yet?

[13:23] <masak> Util: constant R := ReallyLongClassName

[13:23] <moritz_> Util: in a perfect world, my ::R := ReallLongClassName

[13:24] <masak> Util: or subtype R of ReallyLongClassName, but that's assymetric in that ReallyLongClassName !~~ R, I think.

[13:24] <moritz_> masak: that will result in parse errors when you try to use the constant in place of a type name

[13:24] <masak> moritz_: oh?

[13:24] <masak> rakudo: class A {}; subtype B of A; say A ~~ B; say B ~~ A

[13:24] <p6eval> rakudo 5f5bae: OUTPUT«Could not find sub &of␤  in main program body at line 22:/tmp/gMeharChHr␤»

[13:24] <Util> Single colons instead of double colons on the := ?

[13:24] <masak> rakudo: class A {}; subset B of A; say A ~~ B; say B ~~ A

[13:24] <p6eval> rakudo 5f5bae: OUTPUT«Bool::True␤1␤»

[13:25] <masak> interesting answer :)

[13:25] <moritz_> std: constant R = Int; sub f(R $x) { }

[13:25] * masak submits rakudobug

[13:25] <p6eval> std a194beb: OUTPUT«Potential difficulties:␤  $x is declared but not used at /tmp/iCojxN1Gyb line 1:␤------> constant R = Int; sub f(R ⏏$x) { }␤ok 00:01 123m␤»

[13:25] <moritz_> std: constant R = Int; sub f(R $x) { $x }

[13:25] <p6eval> std a194beb: OUTPUT«ok 00:01 123m␤»

[13:25] * moritz_ wonders why that works

[13:25] <masak> Util: double colons are probably better.

[13:25] <jnthn> rakudo: ::I = Int; my I $x; say $x.WHAT

[13:25] <p6eval> rakudo 5f5bae: OUTPUT«===SORRY!===␤In "my" declaration, typename I must be predeclared (or marked as declarative with :: prefix) at line 22, near " $x; say $"␤»

[13:25] <jnthn> rakudo: my ::I = Int; my I $x; say $x.WHAT

[13:25] <p6eval> rakudo 5f5bae: OUTPUT«===SORRY!===␤Malformed my at line 22, near "::I = Int;"␤»

[13:25] <masak> moritz_: why wouldn't it work?

[13:25] <jnthn> :/

[13:26] <masak> moritz_: oh, I see now.

[13:26] <moritz_> masak: because only type names are allowed before parameters

[13:26] <masak> right, and the parser doesn't know that the constant represents a type name.

[13:26] *** MayDaniel left
[13:28] <moritz_> http://www.perlmonks.org/?node_id=868728

[13:28] *** estrabd joined
[13:29] * moritz_ thinks he now knows how to describe meta object protocols to the curious perl programmer

[13:29] <moritz_> it just takes a lot of work to write down

[13:29] *** MayDaniel joined
[13:29] *** dnl left
[13:30] <masak> the meta object protocol is just an API to OO stuff.

[13:30] <masak> an OO API to OO stuff, even.

[13:30] <moritz_> right

[13:30] <jnthn> moritz_: Dunno if any of my slides or blog posts make good things to link to.

[13:31] <moritz_> jnthn: they do, but I'm thinking of a somewhat different approach

[13:31] <moritz_> outline:

[13:31] <jnthn> I have explained this stuff, though it's often in the context of other things.

[13:31] *** araujo left
[13:31] * masak likes jnthn's "innocent questions" approach :)

[13:31] <moritz_> let's start with a simple class, where each instance stores a callback

[13:32] <moritz_> if it makes this callback invocable through a method call, it's a very simple MOP

[13:32] <moritz_> if all instances share the same callbacks, it acts like a class implementation

[13:33] <masak> sounds like the "let's build it ourselves" approach.

[13:33] <moritz_> indeed

[13:33] *** Psyche^ joined
[13:33] *** Psyche^ is now known as Patterner

[13:33] <masak> I like that, too.

[13:33] <moritz_> starting from something very common (callbacks)

[13:33] <masak> aye.

[13:34] <Util> Thanks, all. Since none of these are supported in Rakudo yet, I will workaround, and make a note to revisit after one of those solutions is fully implemented.

[13:35] <jnthn> Yes, showing how to build a simple one up is nice.

[13:35] <masak> Util: huh? the subset thing seemed to work.

[13:35] <jnthn> Worth noting that the core primitive in 6model is actually really, really simple too.

[13:35] *** Trashlord left
[13:35] <jnthn> Though its factoring is tied up in representation poly, which is less fun if you're still trying to get your head around meta-models. 

[13:36] *** lidden joined
[13:36] <jnthn> But all it manages to do is dispatch methods and hold a list of attributes.

[13:36] <Util> masak: creating the subset works, but using the subset in a param-list declaration is failing. Hmm. Let me look closer.

[13:37] <masak> rakudo: class A {}; subset R of A; sub foo(R $x) { say $x }; foo(A.new)

[13:37] <p6eval> rakudo 5f5bae: OUTPUT«A()<0x5db87f0>␤»

[13:37] *** Trashlord joined
[13:37] <masak> seems to work here.

[13:38] <masak> of course, among the different approaches, this is the Wrong one, conceptually.

[13:38] <masak> but it works.

[13:40] *** MayDaniel left
[13:40] <jnthn> e.g. you could accidentally a candidate narrower like this and affect multi-dispatch.

[13:41] <jnthn> Since R is narrower than A here.

[13:42] *** nymacro left
[13:42] <moritz_> rakudo: my ::A

[13:42] <p6eval> rakudo 5f5bae: OUTPUT«===SORRY!===␤Malformed my at line 22, near "::A"␤»

[13:42] <jnthn> std: my ::A;

[13:42] <p6eval> std a194beb: OUTPUT«===SORRY!===␤Illegal redeclaration of symbol 'A' (see line 1) at /tmp/2_oKyMhSZP line 1:␤------> my ::A⏏;␤Multiple prefix constraints not yet supported at /tmp/2_oKyMhSZP line 1:␤------> my ::A⏏;␤Malformed my at

[13:42] <p6eval> ../tmp/2_oKyMhSZ…

[13:42] <moritz_> that's a LTA error

[13:43] <jnthn> std: my ::AAAAAAAAAAAAAAAAA;

[13:43] <p6eval> std a194beb: OUTPUT«===SORRY!===␤Illegal redeclaration of symbol 'AAAAAAAAAAAAAAAAA' (see line 1) at /tmp/KnwUjRMmkd line 1:␤------> my ::AAAAAAAAAAAAAAAAA⏏;␤Multiple prefix constraints not yet supported at /tmp/KnwUjRMmkd line 1:␤------> my

[13:43] <p6eval> ..::AAAAAAAAAAAAAAAA…

[13:43] <perigrin> masak: I've been telling people that MOPs are Object Models of how to build Object Models.

[13:43] * masak submits rakudobug

[13:43] <masak> perigrin: yes, exactly. they're an OOD for OO.

[13:43] <perigrin> yep

[13:44] <jnthn> I tend to see a meta-object as just an object that describes how another object behaves and/or provides introspection for it.

[13:44] *** araujo joined
[13:44] <moritz_> perigrin: do people actually understand that, if they haven't worked with a MOP before?

[13:45] <perigrin> moritz_: sometimes

[13:45] <perigrin> it depends on their exposure to OO

[13:45] <perigrin> a lot of people write very procedural code in OO

[13:46] *** dnl joined
[13:47] <masak> sometimes that's what you want.

[13:47] <Util> Aha! Subset *does* work. I was using Q instead of R, which fails (I think) because single caps are reserved for meta-ops.

[13:47] <Util> Using Qu works:  subset Qu of Quaternion;

[13:48] <masak> Util: quoting.

[13:48] <masak> Util: Q fails because it's used for quoting.

[13:48] <Util> Oh , of course; R is a meta-op anyway.

[13:48] <masak> it's a known, and quite annoying, bug.

[13:48] <Util> Thanks!

[13:49] *** perlygatekeeper joined
[13:50] <moritz_> std: subset Q of Int; my Q $x;

[13:50] <p6eval> std a194beb: OUTPUT«ok 00:01 119m␤»

[13:56] *** mkramer joined
[14:02] *** PacoLinux joined
[14:04] *** hanekomu_ joined
[14:06] *** meppl joined
[14:08] *** wamba left
[14:30] *** orafu joined
[14:42] *** tadzik joined
[14:43] *** alester left
[14:48] <tadzik> hello

[14:49] *** cognominal joined
[14:49] *** broquain1 is now known as broquaint

[14:51] <masak> tadzik: hi!

[14:51] <masak> "perl 1.0 patch 8: perl needed an eval operator and a symbolic debugger" -- wow. http://github.com/mirrors/perl/commit/a559c25918b1466cdb50c9f978a86f01be0bac10

[14:51] <masak> Perl was small at that time.

[14:51] <tadzik> oh wow

[14:52] *** PacoLinux left
[14:53] <jnthn> ...is that debugger really a source filter that inserts debug hooks? :-)

[14:53] *** spq1 joined
[14:54] *** kaare_ left
[14:54] <jnthn> "What has been seen..." :-)

[14:54] <tadzik> :)

[14:55] <tadzik> seen smash

[14:55] <aloha> smash was last seen in #perl6 2 days 23 hours ago saying "pmichaud: mornin'".

[14:55] <tadzik> I'm curious about http://gil.di.uminho.pt/users/smash/rakudo-bench.html

[15:01] *** ash_ joined
[15:02] *** kanishka joined
[15:10] *** dukeleto left
[15:11] *** dukeleto joined
[15:11] *** bluescreen joined
[15:11] *** bluescreen is now known as Guest49255

[15:13] *** uniejo left
[15:16] *** nymacro joined
[15:22] *** MayDaniel joined
[15:24] *** slavik1 left
[15:24] <masak> so far Perl 1 and Perl 6 are tied in moritz_++' poll. http://www.perlmonks.org/?node_id=868728

[15:24] <masak> I wonder if people know that they're voting for Perl 1, and not for (say) vanilla Perl 5.

[15:25] <masak> either that, or they're simply punie humans. :P

[15:28] * tadzik voted and changed the situation :)

[15:29] *** _kaare joined
[15:29] *** slavik1 joined
[15:34] *** miso_soup joined
[15:38] <masak> (Buddha Buck)++ # introducing *real* quantum theory on p6l, not the pop-culture trivialized versions of which junctions are but one example

[15:39] <colomon> pmichaud++ # listening to his interview with merlyn now...

[15:40] *** timbunce left
[15:40] <masak> but, unfortunately, due to junctions only being a distant relative to real quantum superpositions, I doubt that "asking for the eigenstates of a quantum superposition is asking the wrong object for the property" translates to anything sensible in Perl 6.

[15:40] <masak> of course, that's just one more argument for .eigenstates being the wrong name for the method.

[15:41] *** Trashlord left
[15:43] *** Trashlord joined
[15:43] *** Trashlord is now known as Guest94158

[15:44] <pmichaud> hello, all

[15:44] <masak> hi pmichaud o/

[15:44] <tadzik> hello, pmichaud 

[15:44] <masak> pmichaud++ # interview

[15:44] <tadzik> indeed

[15:44] *** nymacro left
[15:44] <pmichaud> I'm stuck offline most of the day -- we're getting new broadband service at the house today

[15:44] <colomon> pmichaud: listening to you talk right now...

[15:45] <masak> today is Yapsi release day, by the way.

[15:45] <pmichaud> yapsi++

[15:45] <colomon> masak: \o/

[15:45] <jnthn> o/ pmichaud 

[15:45] <tadzik> (Official Perl 6)++

[15:45] <jnthn> pmichaud: Will you make #phasers tomorrow?

[15:45] <pmichaud> colomon: how does the talk sound?  I haven't heard it yet

[15:45] <colomon> sounds great

[15:45] <pmichaud> jnthn: definitely, unless something unexpected comes up

[15:46] <jnthn> pmichaud: OK. I'll haz a question or two. :-)

[15:46] <masak> question is, should I spend time adding some feature to Yapsi today, or should I just release it as-is? hm...

[15:46] <pmichaud> masak: whatever facilitates the release

[15:47] <jnthn> pmichaud: The main one is: if you were doing pasttype for, and the underlying implementation looked however you fancied, what would you do? Something like Parrot iterators, or...

[15:47] <masak> pmichaud: good point.

[15:47] <tadzik> masak: it didn't change much since the last release, did it?

[15:47] <masak> no, not much.

[15:47] <masak> but there was a bugfix that went in.

[15:47] <masak> ooh!

[15:47] <masak> I know!

[15:47] <pmichaud> jnthn: hmmm, I'll have to think about that one (1 day)

[15:47] <masak> I'll restore Tardis to a working condition.

[15:47] <masak> that's not much work.

[15:47] <tadzik> "I'll implement threading!"

[15:48] <pmichaud> I don't have a solid answer

[15:48] <jnthn> pmichaud: It's fine, I wasn't planning to do it tonight. :-)

[15:48] <jnthn> pmichaud: But would really like to have for loops soon. For one because not being able to iterate hashes is gonna block me soon. :-)

[15:48] <jnthn> I figure we don't want the full-blown Perl 6 iterator model at NQP level though.

[15:48] <pmichaud> I'm wondering if perhaps we do.

[15:49] *** PacoLinux joined
[15:49] <tadzik> jnthn: are you basically rewriting the whole NQP?

[15:50] <jnthn> tadzik: Not really. It's just that pasttype<for> on Parrot compiles down to Parrot's iterator model. I don't have one of those yet for the 6model on .Net implementation though.

[15:51] <tadzik> I see

[15:52] *** justatheory joined
[15:53] <masak> bottom icon at http://modules.perl6.org/fame-and-profit has bitrotted. :/

[15:53] <pmichaud> afk for a while

[16:04] *** hanekomu_ left
[16:04] *** iWork joined
[16:04] <masak> wow, Tardis is not a very big project :)

[16:04] <masak> this is promising. :)

[16:05] <flussence> it's bigger on the inside!

[16:06] <masak> I see now that I really had that one coming. :)

[16:06] *** timbunce joined
[16:10] <masak> good news! Tardis, while written for alpha and since unmodified, workd fine on master! \o/

[16:10] <moritz_> masak: wow, that's impressive

[16:10] <masak> maybe because it's so small.

[16:10] <colomon> \o/

[16:10] <masak> it's basically a subclassing of the Yapsi runtime.

[16:11] <masak> hm. it runs, but not 100% flawlessly.

[16:11] <masak> time to tinker a bit.

[16:12] <colomon> time to add more tests!

[16:12] <colomon> ;)

[16:13] <masak> indeed.

[16:13] <masak> I haven't run the tests yet.

[16:15] *** silug left
[16:16] *** ggoebel joined
[16:17] *** MayDaniel left
[16:19] <jnthn> home &

[16:19] *** stkowski joined
[16:20] <moritz_> masak: that would have been my first thing to do - running tests :-)

[16:20] <moritz_> that's what you write them for, after all

[16:20] * masak mumbles something about backseat coders... :)

[16:21] <masak> I'm going to run the tests. of which, I'm sure, there are several... :)

[16:22] <moritz_> "several"

[16:22] *** miso_soup left
[16:22] * moritz_ mumbles something about backseat testers

[16:22] <masak> :D

[16:23] <moritz_> :-)

[16:23] <masak> I'm not sure we agree on the term "backseat X-er" here. but nvm.

[16:23] <masak> http://en.wikipedia.org/wiki/Back-seat_driver

[16:24] *** plobsing joined
[16:24] <moritz_> I know it wasn't the best term to use, but worth the retort anyway :-)

[16:25] <masak> nod

[16:30] *** cdarroch joined
[16:30] *** cdarroch left
[16:30] *** cdarroch joined
[16:30] *** sftp joined
[16:31] *** mberends joined
[16:31] *** simon1 joined
[16:31] *** Ross^ joined
[16:32] *** wamba joined
[16:32] <masak> the tests tell me the same thing that running the program manually did. ordinarily, I would have run the tests first as well. but I'm a pessimist, and I actually thought I'd get a compiler error :)

[16:33] <moritz_> so you think your programs are half broken :-)

[16:34] <masak> that's not a matter of debate :P

[16:34] *** simon1 left
[16:35] <masak> rakudo: my $a = "fool!"; $a ~~ / (foo) /; say $0

[16:35] <p6eval> rakudo 5f5bae: OUTPUT«foo␤»

[16:35] <masak> rakudo: my $a = "fool!"; $a !~~ / (foo) /; say $0

[16:35] <p6eval> rakudo 5f5bae: OUTPUT«foo␤»

[16:35] <masak> ooh!

[16:35] * masak resolves http://rt.perl.org/rt3/Ticket/Display.html?id=76892

[16:39] *** patspam left
[16:41] <masak> also interesting: last time I wrote this, I had the runtime do self.*tick rather than self.?tick -- my reasoning was that if there are several subclasses, each subclass will want to run their .tick method.

[16:41] <masak> but this time it seems that I'm going with self.?tick again.

[16:42] <masak> reasoning as follows: it's always the responsibility of the .tick method in the most derived class to determine how the rest of the dispatch is to be performed.

[16:42] <TimToady> it can control it either way

[16:43] <masak> is the result the exact same, though?

[16:43] <TimToady> but one way you use lastcall, and the other way you use nextsame

[16:43] <masak> ah, right.

[16:43] <TimToady> all you're changing is the default

[16:43] <masak> nod.

[16:43] <TimToady> the main thing is that they all have to agree

[16:43] <masak> anyway, I think I want the default to be .? and nextsame.

[16:44] *** jhuni left
[16:44] <masak> just as I want the default in my email client to be "reply" and not "reply to all" :)

[16:47] <masak> by the way, I don't remember if http://cacm.acm.org/magazines/2010/11/100618-sir-please-step-away-from-the-asr-33/fulltext has been linked here yet.

[16:47] <colomon> I haven't seen it linked here.

[16:48] <colomon> I think he's a bit daft.

[16:48] <colomon> :)

[16:48] <masak> please elaborate.

[16:48] <masak> (I haven't read the article.)

[16:48] <colomon> but I'm shocked at how many people out there responding to the article want nothing to do with Unicode.

[16:50] <colomon> He disses Perl, operator overloading, and heaven forbid the notion you might define your own operators.

[16:50] *** rvrgs joined
[16:51] <masak> some people don't like the idea of freedom under responsibility.

[16:51] <colomon> and is pro-things like having colors be important in your code.

[16:51] <moritz_> colomon: most people don't know about Unicode until something goes wrong

[16:51] <moritz_> colomon: so they always associated Unicode with something hard to understand that you have to fiddle with to unbreak stuff

[16:51] <colomon> moritz_: rather more darkly, I think a lot of people don't give a rat's ass if languages are not great for working with anything but English.

[16:52] *** rgrau_ left
[16:53] <colomon> mostly, though, I think the article is just confused.

[16:54] <colomon> or maybe that's just from my perspective.

[16:55] <colomon> I guess the quick summary is, he wants to widely open the scope of what might constitute your language's syntax, while at the same time mocking the idea of freedom under responsibility. (as masak++ so nicely put it)

[16:55] <masak> I work with Java people daily.

[16:55] <tadzik> wait, is he implying that Perl is unreadable because of the ability to define new operators?

[16:56] <colomon> no, he's imply Perl was unreadable before that.

[16:56] <colomon> but he says that if C++ had let you define new operators, it would have been unreadable even before Perl was.

[16:56] <masak> ok. swimming, then nom, then November blogging, then Yapsi release. :)

[16:56] <masak> &

[16:57] <moritz_> "Why not make color part of the syntax?" seems he hasn't heard of ColorForth

[16:57] <moritz_> "And, yes, me too: I wrote this in vi(1), which is why the article does not have all the fancy Unicode glyphs in the first place." -- what about :help digraphs ?

[16:57] <TimToady> that would be vim

[16:58] *** colbseton` joined
[16:58] <TimToady> there are tests for colorblindness; maybe we need some tests for Unicodeblindness...

[16:58] <masak> :)

[16:58] <masak> "does this just look like dots to you?"

[16:59] <TimToady> ⣮

[17:02] <masak> I know that's Braille, but my first association was to the front panel of the computer in War Games.

[17:02] <allbery_b> <moritz_> "Why not make color part of the syntax?" seems he hasn't heard of ColorForth

[17:02] <allbery_b> Piet

[17:02] <masak> I've heard Whitespace uses colors, too :P

[17:04] *** masak left
[17:05] <colomon> re ColorForth -- yeah, that's the other thing, the guy doesn't seem terribly well-informed, either.

[17:06] <moritz_> well, it was an amusing read

[17:08] * allbery_b wonder if there are any toy languages yet which use fonts for syntax

[17:08] <TimToady> English?

[17:08] <allbery_b> (you'd think this would be a no-brainer, considering that the Algol community always used specific conts for keywords vs. variables etc.)

[17:09] <allbery_b> specific fonts

[17:09] <colomon> TimToady: are you kidding?  that language is write-only!  ;)

[17:09] <diakopter> I thought it was read-only

[17:09] <allbery_b> ...that's why we're here...

[17:09] <TimToady> not if you add in all the Unicode glyphs, apparently :)

[17:09] *** rvrgs left
[17:09] * moritz_ remebers the windows 3.11 days, where you'd use a different font to get non-Latin-1 glyphs. Then changing the font made the whole document useless

[17:10] <TimToady> changing to a non-Unicode font can still do that :P

[17:10] <moritz_> yes, but a simple change back fixes it again

[17:13] *** lamstyle left
[17:19] *** timbunce left
[17:19] <dalek> roast: 4d4775e | moritz++ | S05-capture/subrule.t:

[17:19] <dalek> roast: [subrule.t] tests for RT #76892

[17:19] <dalek> roast: review: http://github.com/perl6/roast/commit/4d4775ea1060268cda04bb7a0d0abdce54827284

[17:23] * moritz_ would like to give Nick Wellnhofer a Rakudo commit bit. He has submitted various good patches (often related to parrot changes).

[17:24] *** lamstyle joined
[17:24] *** lamstyle left
[17:24] *** lamstyle joined
[17:24] <moritz_> maybe somebody can propose it in #phasers tomorrow, I might not be able to make it (or I might forget it)

[17:25] *** MayDaniel joined
[17:29] *** iWork left
[17:30] *** lamstyle left
[17:37] <dalek> 6model: 412d72d | mberends++ | java/runtime/ (22 files):

[17:37] <dalek> 6model: [java/runtime] sync with dotnet/runtime up to this point

[17:37] <dalek> 6model: review: http://github.com/jnthn/6model/commit/412d72dd41606a500a8de3f56144cddddbbd62a2

[17:38] <diakopter> mberends: :)

[17:38] <mberends> the java/compiler side is almost caught up, but the generated code is still faulty :/

[17:39] <mberends> currently creating a test harness for the runtime to make sure the bugs are not over there...

[17:40] *** colbseton` left
[17:41] *** colbseton` joined
[17:42] *** peters_mops left
[17:42] *** peters_mops joined
[17:48] *** lamstyle joined
[17:52] *** Chillance joined
[17:53] *** lamstyle left
[17:55] *** skangas joined
[17:57] *** drbean left
[17:57] <jnthn> mberends: Wow, that's quite some catching up!

[17:58] *** patspam joined
[17:58] <jnthn> (generated code faulty) doesn't compile, or crashes at runtime? Got a stack trace?

[18:02] <ash_> jnthn, how does 6model work? 

[18:03] <moritz_> with magic!

[18:03] <moritz_> ash_: there are lots of blog posts on http://6guts.wordpress.com/ that describe it

[18:04] <ash_> i am just curious because i have been thinking about my thing i started last spring, nq-nqp, and the biggest problem i was the parse, could something along the lines of 6model help me with that?

[18:04] <diakopter> ash_: currently it emits C# using a compiler written in NQP, and the C# code is compiled against a runtime manually written in C#

[18:04] *** drbean joined
[18:04] *** lamstyle joined
[18:04] <ash_> i guess i wouldn't shoot for p6 code, i'd aim at parsing and emitting for nqp 

[18:04] *** Alias_ joined
[18:04] <moritz_> ash_: it uses the parrot nqp-rx thing for parsing

[18:05] <jnthn> ash_: What diakopter++ said.

[18:05] <moritz_> ... until it's bootstrapped

[18:05] <jnthn> ash_: The aim for parsing is to write a PAST::Regex emitter to C#.

[18:05] *** lamstyle left
[18:05] *** lamstyle joined
[18:05] <jnthn> And then compile use the nqp-rx grammar.

[18:05] <jnthn> And bootstrap it.

[18:06] <ash_> the emitters and the PAST of parrot/nqp/p6 are all still really foreign to me, thats one area i haven't looked at to try to understand how it works yet 

[18:07] <jnthn> ash_: The PAST to C# emitter is written in NQP

[18:07] <jnthn> ash_: Which may well make it easier to get your head around than the PAST to PIR one, which is written in PIR.

[18:08] <ash_> is that in dotnet or common?

[18:08] *** Alias left
[18:09] <jnthn> ash_: dotnet/compiler/

[18:09] <jnthn> ash_: See PAST2DNST.pm

[18:10] <jnthn> ash_: DNST is a dotnet-y syntax tree.

[18:10] <jnthn> ash_: The idea is that rather than converting it to C#, we'll eventually turn it right into IL.

[18:10] *** wallberg left
[18:10] <jnthn> Without having to re-write all of PAST2DNST.pm

[18:10] <ash_> IL? 

[18:11] *** drbean left
[18:11] *** hanekomu_ joined
[18:11] <ash_> is IL the .net intermediate language?

[18:12] <jnthn> ash_: Yes

[18:12] <ash_> got ya

[18:12] *** MayDaniel left
[18:13] <ash_> is that independent of mono vs ms's runtime? i don't really know anything about C# or .NET or the CLR

[18:13] <jnthn> ash_: It works on both. mberends++ regularly tries it out on Mono, and I work against the MS one.

[18:13] <jnthn> The switch to IL shouldn't cause issues there.

[18:15] <jnthn> ash_: DNST and JST (same thing for Java) will, ideally, get merged at some point soonish, and then we'll have a DNST2[worreva we call it], and then [worreva we call it]2C# and [worreva we call it]2Java or some such. They're already really similar, and it'll save some duplication of work.

[18:15] <jnthn> Up to mberends++ when that happens. :-)

[18:16] <ash_> i wonder if that could work with the llvm too, thats the whole point of the nq-nqp i was working on, was to try to compile nqp down to llvm code when possible, with the appropriate runtime defined of course 

[18:17] <diakopter> the switch to IL won't exactly be ... trivial, since IL is stack-based

[18:17] <diakopter> and the C# is currently generated inside-out

[18:17] *** drbean joined
[18:19] *** lamstyle left
[18:22] <jnthn> diakopter: Agree it'll be non-trivial. I started out with generating C# 'cus it's just...a load simpler to make something work. :-)

[18:22] *** pyrimidine joined
[18:23] *** silug joined
[18:25] <jnthn> ash_: Maybe take a look through either dotnet/runtime/ or java/runtime/ (whichever of the two you find easier to read), and see what it might take to get that kinda thing in place on llvm. I've really not that much idea how hard it'd be. Also nom branch in nqp-rx has some work on doing 6model bits in C. LLVM is a bunch more low-level than the CLR or JVM. May be worth dragging in the APR to provide hashes and a bunch of other stuff to save re-inventing various wheels

[18:25] *** Nahra joined
[18:26] *** kensanata left
[18:26] *** MaL0 left
[18:28] <ash_> i am using C++ currently to save myself from having to re-inventing some wheels, and some of the llvm lib's too, they have a StringMap that is an optimized hash template for C++ for instance

[18:30] <jnthn> That works too. :-)

[18:30] *** timbunce joined
[18:33] <jnthn> nom &

[18:34] <sjohnson> nom = nom nom?

[18:34] <sjohnson> eating?

[18:34] <tadzik> yep

[18:35] <moritz_> nom nom, but with less repetition :-)

[18:35] *** Nahra left
[18:36] <sjohnson> i eated a cheezburger

[18:41] <colomon> pumpkin seeds

[18:42] *** Nahra joined
[18:45] *** orafu left
[18:45] *** MayDaniel joined
[18:46] *** orafu joined
[18:47] *** Chat8156 joined
[18:47] *** Chat8156 left
[18:50] *** kensanata joined
[18:51] <sjohnson> colomon++ # halloween spirit

[18:51] *** MayDaniel left
[18:52] *** hanekomu_ left
[18:54] *** Nahra left
[18:56] *** Nahra joined
[18:58] *** lamstyle joined
[19:09] *** Nahra left
[19:12] <sorear> argh now I've lost ash_

[19:12] <ash_> hmm?

[19:12] <sorear> I don't have enough tuits to fight the JnthnNQP Borg ;)

[19:12] *** Nahra joined
[19:12] *** Chat6869 joined
[19:13] *** Chat6869 left
[19:13] <ash_> assimiliate !

[19:13] *** Ross^ is now known as Ross

[19:19] *** lamstyle left
[19:19] <sorear> yeah, you and mberends and now even diakopter...

[19:22] *** lamstyle joined
[19:22] <mberends> sorear, don't despair, when 6model reaches a certain critical mass we'll all come over to niecza to have a play as well :-)

[19:26] *** ggoebel left
[19:39] *** simon1 joined
[19:42] *** simon1 left
[19:46] *** Chat5704 joined
[19:46] *** Chat5704 left
[19:46] *** plainhao left
[19:49] <Util> New RC:  http://rosettacode.org/wiki/Simple_Quaternion_type_and_operations#Perl_6

[19:51] <shortcircuit> Hm. Looks like the Perl6 syntax highlighting could use some improvements in the interpolation department.

[19:51] <shortcircuit> Not sure whether or not that's possible in this version of GeSHi, though.

[19:51] *** ggoebel joined
[19:52] <slavik1> sqrt ( [+] ( self.reals X** 2 ) ) square root of all the numbers squares added?

[19:52] <slavik1> [+] is a folder?

[19:52] <TimToady> yes

[19:52] <slavik1> that is awesome! :D

[19:52] *** Nahra left
[19:52] <TimToady> all those parens are useless though

[19:53] <slavik1> TimToady: not disagreeing. :)

[19:53] <slavik1> TimToady: how good is your understanding of russian? there is a funny bash.org type quote you might enjoy

[19:53] <TimToady> I don't really grok russian.

[19:54] <slavik1> :(

[19:54] *** ash_ left
[19:54] *** simon5_ joined
[19:54] <TimToady> and don't tell me: "It's only funny in Russian."  :)

[19:58] <slavik1> http://translate.google.com/?hl=en#auto|en|%D0%92%D0%BA%D0%BB%D1%8E%D1%87%D0%B8%D0%BB%20%D1%82%D0%B5%D0%BB%D0%B5%D0%B2%D0%B8%D0%B7%D0%BE%D1%80%2C%20%D0%BF%D0%BE%D0%BF%D0%B0%D0%BB%20%D0%BD%D0%B0%20%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B2%D1%8C%D1%8E.%20%D0%A1%D0%BB%D1%83%D1%88%D0%B0%D1%8E%3A%0A%0A-%20%D0%A1%D0%B5%D0%B9%D1%87%D0%B0%D1%81%20%D0%B8%D0%B4%D1%91%D1%82%20%D0%BE%D1%87%D0%B5%D0%BD%D1%8C%20%D0%BE%D0%BF%D0%B0%D1%81%D0%BD%D0%B0%D1%8F%20%D1%82%D0%B5%D0%BD%D0%B4%

[19:58] <slavik1> D0%BC%D0%B8.%0A-%20%D0%95%D0%B3%D0%BE%20%D1%87%D1%82%D0%BE%3F%0A-%20%D0%9D%D1%83%20%D0%BA%D0%BE%D0%BD%D1%82%D0%B0%D0%BC%D0%B8%D0%BD%D0%B0%D1%86%D0%B8%D1%8F%2C%20%D1%82%D0%BE%20%D0%B5%D1%81%D1%82%D1%8C%20%D0%B7%D0%B0%D0%B3%D1%80%D1%8F%D0%B7%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5%2C%20%D0%B7%D0%B0%D1%81%D0%BE%D1%80%D0%B5%D0%BD%D0%B8%D0%B5.

[19:58] <slavik1> oh man

[19:58] <slavik1> that is horrible

[19:58] *** molaf joined
[19:58] <slavik1> http://tinyurl.com/24j627t

[19:58] *** Nahra joined
[19:59] *** MayDaniel joined
[19:59] <slavik1> basically, the interviewer used the word that came from english (meaning to contaminate) when talking about russian being contaminated with words from english

[19:59] <TimToady> I guess it's only funny in Russian.  :)

[20:00] <tadzik> subset Qu of Quaternion; # Makes a short alias

[20:00] <tadzik> interesting. How local is it?

[20:00] *** kanishka left
[20:01] <TimToady> subset defaults to 'our', but you could say 'my subset'

[20:01] <jnthn> lol...контаминация :-)

[20:01] <tadzik> cool

[20:01] <tadzik> kontaminacja?

[20:02] *** kanishka joined
[20:02] <jnthn> kontaminacie po slovensky :-)

[20:04] <jnthn> slavik1: I'm getting the impression that there's often a "proper" Russian word along with an English loan for quite a few things. :-)

[20:04] <TimToady> I demand that we desist from utilizing French words.

[20:04] *** patspam1 joined
[20:04] <tadzik> I think French people have some beaurocracy behind finding pure-French equivalents for english worlds

[20:05] <tadzik> that's why they have Ordinateur instead of Computer, and stuff

[20:05] <Util> tadzik: I reall wanted something more to the point, like "my ::Qu ::= Quaternion", but it does not work yet.

[20:05] <tadzik> how about my $q = Quaternion, like with anonymous classes?

[20:06] <TimToady> well, constant Q = Quaternion ought to work

[20:06] *** patspam left
[20:06] <TimToady> type names are just funny constants

[20:06] <TimToady> std: constant I = Int;

[20:06] <p6eval> std a194beb: OUTPUT«ok 00:01 119m␤»

[20:07] <Util> tadzik: That would look odd in a signature, if it worked: multi sub infix:<+> ( $q $a, Real $b ) {...}

[20:07] <jnthn> std:  constant I = Int; sub foo(I $houlda-thought-so) { }

[20:07] <p6eval> std a194beb: OUTPUT«Potential difficulties:␤  $houlda-thought-so is declared but not used at /tmp/_VK1TERBpP line 1:␤------> constant I = Int; sub foo(I ⏏$houlda-thought-so) { }␤ok 00:01 123m␤»

[20:08] <tadzik> std: say "ok 00:01 {rand}m"

[20:08] <p6eval> std a194beb: OUTPUT«ok 00:01 119m␤»

[20:08] <tadzik> oh look, an implementation :)

[20:08] <tadzik> Util: oh, probably

[20:08] <slavik1> jnthn: yes

[20:08] <slavik1> TimToady: I agree

[20:09] <TimToady> std: sub foo (42 $x) {...}

[20:09] <p6eval> std a194beb: OUTPUT«Potential difficulties:␤  $x is declared but not used at /tmp/sZdrIUgizn line 1:␤------> sub foo (42 ⏏$x) {...}␤ok 00:01 121m␤»

[20:09] <Util> TimToady: would have loved the constant, but "Constant type declarator not yet implemented"

[20:09] *** spq1 left
[20:10] <TimToady> I'll have to glare at the parameter grammar.

[20:11] *** jaldhar left
[20:11] *** icwiener left
[20:11] <jnthn> rakudo: sub foo(42 $x) { ... }

[20:11] <p6eval> rakudo 5f5bae:  ( no output )

[20:11] <jnthn> bwaha

[20:11] <jnthn> rakudo: sub foo(42 $x) { say "ok" }; foo(42)

[20:11] <p6eval> rakudo 5f5bae: OUTPUT«ok␤»

[20:12] <jnthn> rakudo: sub foo(42 $x) { say "ok" }; foo(69)

[20:12] <p6eval> rakudo 5f5bae: OUTPUT«Constraint type check failed for parameter '$x'␤  in 'foo' at line 1:/tmp/uW3WPdLswg␤  in main program body at line 22:/tmp/uW3WPdLswg␤»

[20:12] <jnthn> Wow.

[20:12] <jnthn> Rakudo is...smart enough to promote it to a constraint?!

[20:12] <jnthn> rakudo: sub foo(42 $x) { ... }; say &foo.signature

[20:12] <p6eval> rakudo 5f5bae: OUTPUT«Signature()<0x634e3e0>␤»

[20:12] <jnthn> rakudo: sub foo(42 $x) { ... }; say &foo.signature.perl

[20:12] <p6eval> rakudo 5f5bae: OUTPUT«:(Int $x where (42))␤»

[20:12] *** lamstyle left
[20:13] *** Nahra left
[20:13] <jnthn> That's a...surprise win. :-)

[20:14] * Util removes some excess parens. TimToady++

[20:14] *** Nahra joined
[20:15] <TimToady> you don't really need the parens around the args to Z* either

[20:15] <TimToady> (you would if it were a hyper though)

[20:17] <TimToady> the parens inside the [+] are also being useless, since Z* is tighter than [+]

[20:18] *** simon2 joined
[20:20] *** simon5_ left
[20:21] <Util> TimToady: Fixed. Thanks!

[20:21] <Util> BBL; will backscroll

[20:21] <TimToady> o/

[20:24] *** aindilis joined
[20:25] <sjohnson> hi

[20:25] *** arnsholt left
[20:26] *** simon2 left
[20:29] *** Chat2481 joined
[20:30] *** Chat2481 left
[20:38] *** Nahra left
[20:43] *** MayDaniel left
[20:44] *** simon_ joined
[20:45] *** icwiener joined
[20:48] *** arnsholt joined
[20:52] *** Guest94158 left
[20:52] *** Trashlord joined
[20:53] *** ash_ joined
[20:55] *** ggoebel left
[21:02] *** icwiener left
[21:03] *** lamstyle joined
[21:03] *** kensanata left
[21:05] *** _kaare left
[21:07] *** pinkstarrpunk24 joined
[21:08] *** aesop left
[21:10] <pinkstarrpunk24> can anyone tell me how this chat thing works?

[21:10] <diakopter> I don't know

[21:10] <sjohnson> heh

[21:10] <colomon> and there you have it.

[21:11] *** ggoebel joined
[21:11] <sjohnson> people chat, you find something funny, you write back

[21:11] <jnthn> pinkstarrpunk24: To take part, type /part

[21:11] <pinkstarrpunk24> well that doesnt help me lol

[21:12] <pinkstarrpunk24> no, i have been in plenty of chat rooms, i get that part, lol...this particular chat site, i dont get

[21:12] <pinkstarrpunk24> at least i found one where ppl speak English tho...haha

[21:12] <diakopter> which site is that

[21:13] <pinkstarrpunk24> some blackberry app i downloaded.

[21:13] <pinkstarrpunk24> chatmosphere irc 

[21:14] <diakopter> did it randomly select #perl6 on freenode  (where you are now)?

[21:15] *** ggoebel left
[21:16] *** simon_ left
[21:17] <mberends> presumably pinkstarrpunk24 asked chatmosphere to find the friendliest channel on Freenode ;)

[21:17] <perigrin> and it didn't pick #perl?

[21:17] * perigrin hides.

[21:17] * diakopter chides

[21:18] *** pinkstarrpunk24 left
[21:19] *** pythonian4000afk is now known as pythonian4000

[21:19] *** pythonian4000 left
[21:19] *** pythonian4000 joined
[21:20] *** aesop_ joined
[21:21] *** whiteknight joined
[21:28] *** pinkstarrpunk24 joined
[21:29] <pinkstarrpunk24> It just popped up when i put in USA....

[21:29] <diakopter> interesting...

[21:30] <pinkstarrpunk24> why? 

[21:30] <diakopter> interesting that there is an app that does such a thing

[21:31] *** masak joined
[21:31] <pinkstarrpunk24> really? yeah, id never seen it before in my blkberry app world but it was there one day. its only a trial version tho. i wont have it in 9 days.

[21:31] <masak> ahoy!

[21:32] *** justatheory left
[21:33] <pinkstarrpunk24> 4soooooo this is kinda boring. 

[21:33] <masak> are you kidding?

[21:34] <masak> this is the best thing since... since Perl 5!

[21:34] *** patspam1 left
[21:34] <masak> pinkstarrpunk24: you know what I'm doing tonight? I'm embarking on a 30-day journey of ascetism, coding, and blogging.

[21:34] <pinkstarrpunk24> 13hahahahaha huh, well, this is the first time ive been in here and im still kinda lost. 

[21:35] <masak> that is to be expected.

[21:35] <colomon> masak++

[21:35] <masak> solution: come back more often.

[21:35] *** ggoebel joined
[21:35] <masak> pmichaud++'s interview is doing a lot of good: http://twitter.com/johndcook/status/29390988890

[21:36] <flussence> I was convinced that 69.41.* was some sort of not-particularly-effective spambot. Guess I was wrong :/

[21:36] <colomon> I like Cook's blog.  Lots of tasty math.

[21:36] <pinkstarrpunk24> 13huh, i dont know anything about that stuff....i do everything online related from my phone. lol 

[21:37] <masak> oh noes, the postfix "lol". that is a strong signal that you're a one-time visitor.

[21:37] <masak> pinkstarrpunk24: well, it was nice to know you.

[21:38] <diakopter> masak: see the backlog.. it was a random chatroom selection :)

[21:38] <masak> I'm reading backlog as fast as I can! :)

[21:38] <pinkstarrpunk24> 13lol is it that obvious? haha well, good luck on your 30 day bender :)

[21:38] <diakopter> why the app includes freenode in the list of networks at all is ... surprising.

[21:38] <Tene> Lots of non-english in "Perl 6" search on twitter.

[21:38] <masak> ascetism is the opposite of a bender, isn't it? :)

[21:39] <masak> Tene: it's TimToady++'s fault.

[21:39] <szabgab> I wish I had some time to write Perl 6

[21:39] <masak> pinkstarrpunk24: I don't mean to scare you off at all. I'm happy you're here.

[21:40] <masak> szabgab: I wish I had money to pay you to write Perl 6 for me.

[21:40] <szabgab> I am working on that :)

[21:40] <masak> \o/

[21:41] <szabgab> we have a Perl devroom at FOSDEM

[21:42] <masak> slavik1: so... it's an autopun, and that's the funny part?

[21:42] *** pythonian4000 left
[21:42] *** pythonian4000 joined
[21:42] <Tene> Haha, the last item on this page: http://help.webcity.com.au/categories/WEB-HOSTING/Perl-and-CGI/

[21:43] <pinkstarrpunk24> 13lol thanks. im just confused with all the lingo. so, im trying to read and understand. :) 

[21:43] <masak> Tene: we discussed it earlier today.

[21:43] <Tene> :)

[21:43] <szabgab> Tene: they are in .au, they come from the future :)

[21:43] <masak> pinkstarrpunk24: I've been here for 5 years. *I'm* confused with all the lingo.

[21:44] <pinkstarrpunk24> 13masak: hahahahahaha okay, good. i dont feel so bad now. so what exactly are all of you here for? i mean, is it just to chat? 

[21:45] <masak> we're building a programming language that we hope will last for the coming 20 years.

[21:45] <masak> or is that 20 years since 2000?

[21:45] <masak> anyway. that's what we're up to.

[21:46] <masak> rakudo: say "OH HAI pinkstarrpunk24!"

[21:46] <p6eval> rakudo 5f5bae: OUTPUT«OH HAI pinkstarrpunk24!␤»

[21:46] <masak> there it is. we have a program called Rakudo that can run our language.

[21:46] <masak> I just typed in a short program, and it ran it, right here on the channel.

[21:46] <colomon> also one called yapsi

[21:46] <masak> and one called Pugs.

[21:47] <szabgab> and one called TimToady 

[21:47] <masak> :)

[21:47] <pinkstarrpunk24> 13whoa! thats cool! idk what a programming language is but i im sure whatever it is, its prolly pretty awesome. 

[21:47] <diakopter> _._

[21:48] <mkramer> I'm calling troll

[21:48] <Tene> ⍨

[21:48] <masak> a programming language is a language for communicating intent to a computer, and to other programmers.

[21:48] <pinkstarrpunk24> 13thats neat. how do u know how to do all that? 

[21:48] <masak> that's something one has to learn over time.

[21:48] <diakopter> mkramer: it's light-hearted. it's still entertainment. 

[21:49] *** lamstyle left
[21:50] <pinkstarrpunk24> 13oh, i see....thats really neat. i wish i could relate. lol 

[21:50] *** troll joined
[21:50] <masak> pinkstarrpunk24: we take pride in our particular programming language being easy to learn and use, and a good language for experienced programmers.

[21:50] *** troll is now known as Guest58610

[21:50] <Guest58610> mkramer: did you call me ?

[21:50] <masak> :)

[21:51] *** Guest58610 left
[21:51] *** kensanata joined
[21:52] <pinkstarrpunk24> 13u should take pride in that. that is certainly a skill that not many have. ive never understood computers past logging onto my facebook. lol 

[21:52] <masak> well, there are programmers behind Facebook as well.

[21:53] <masak> for every computer application you use, someone somewhere has coded it up.

[21:53] *** lamstyle joined
[21:53] <pinkstarrpunk24> 13my uncle designed and programmed  the first micro chip for ATM machines. 

[21:53] <masak> that's a bit more to the hardware side of things, but fair enough.

[21:55] <pinkstarrpunk24> 13yeah, he works with computers. i know he gets paid 6 figures for his computer knowlege so i assume he would understand all this. lol 

[21:56] <diakopter> pinkstarrpunk24: how did you make your text pink?

[21:57] <pinkstarrpunk24> 13to the right of the text bar there is a box with colors in it. i just picked one. 

[21:57] <diakopter> regarding the FLOSS weekly page, "Rakudo Star is a more usable and stable distribution of Perl 6."  more usable and stable .. than what?

[21:57] <szabgab> welcome to the new age of IRC :)

[21:58] <flussence> diakopter: more usable and stable than... before?

[21:58] <masak> diakopter: more usable and stable than really unusable and unstable things.

[21:58] <diakopter> no offense, but those don't really make sense

[21:59] * jnthn found it a slightly curious wording too, tbh

[21:59] <masak> there's a slight chance they weren't meant to :)

[21:59] <diakopter> masak: granted/noted :D

[22:01] *** mavrc left
[22:05] *** rgrau_ joined
[22:06] *** patrickas joined
[22:06] <patrickas> o/

[22:06] <masak> patrickas! \o/

[22:07] <patrickas> LOLITSMASAK!

[22:11] *** patspam joined
[22:11] *** colbseton_ joined
[22:14] *** colbseton` left
[22:15] *** Ross left
[22:16] <pinkstarrpunk24> 13masak: okay, im gonna go. thanks for trying to explain all of this to me. :) good luck doing all of this! 

[22:16] <masak> pinkstarrpunk24: thanks! good luck with your stuff too!

[22:17] *** pinkstarrpunk24 left
[22:17] <patrickas> oh by the way that's the second time a bb user has joined accidentally the channel in the past couple of days!

[22:17] <masak> must be some bug somewhere :)

[22:18] <patrickas> Never underestimate the appeal of #perl6 for bb users! 

[22:23] *** kensanata left
[22:24] <ash_> can we get rakudo (or other implementation) running on the bb? :P

[22:25] <tadzik> Star works on n900 iirc

[22:28] <dalek> yapsi: 567c031 | masak++ | lib/Yapsi.pm:

[22:28] <dalek> yapsi: [Yapsi] adapted to Tardis

[22:28] <dalek> yapsi: 

[22:28] <dalek> yapsi: This meant adding back the .tick method calls, as well as exposing the

[22:28] <dalek> yapsi: $.current-lexpad as an attribute, so that the .pick method in the deriving

[22:28] <dalek> yapsi: Tardis::Debugger class can see it. (It could see a private $!current-lexpad

[22:28] <dalek> yapsi: too, but that's a deficiency in Rakudo, that shouldn't be exploited.)

[22:28] <dalek> yapsi: review: http://github.com/masak/yapsi/commit/567c0313523ef6e271eeae51870d1af0994191af

[22:28] <jnthn> .pick? :-)

[22:30] <masak> nope, .tick

[22:31] <masak> as in one atomic step in a program, as in debugging.

[22:32] *** skangas left
[22:34] *** masonkramer joined
[22:35] <jnthn> masak: There was a .pick in the commit message, thus my confusion. :-)

[22:36] <masak> oh dang :)

[22:36] <masak> I could go back and change, it but it's pushed history, so I'll just let it stay confusing.

[22:36] <masak> orz

[22:41] <tadzik> you can push --force

[22:41] <tadzik> git star wars style

[22:42] <masak> right; I know.

[22:43] <masak> I'm not sure I think it's worth it.

[22:47] <tadzik> night.good()

[22:48] *** tadzik left
[22:48] <masak> tadzik: night!

[22:49] *** justatheory joined
[22:52] *** colbseton_ left
[22:55] <patrickas> night all

[22:55] *** patrickas left
[23:00] *** greatflamingfoo joined
[23:02] *** Guest49255 left
[23:02] *** dnl- joined
[23:04] *** dnl left
[23:08] *** timbunce left
[23:15] *** timbunce joined
[23:18] <masak> blog post! http://strangelyconsistent.org/blog/november-1-2010-quick-decisive-action

[23:18] <colomon> masak++

[23:18] <masak> just a teeny tiny bit over the mark. :)

[23:18] <masak> oh well, it's the 1st somewhere :)

[23:19] <jnthn> yay, November! \o/

[23:19] * masak goes into Yapsi release mode

[23:20] <jnthn> :-)

[23:20] <colomon> it's the 1st here!

[23:20] <flussence> Yayvember!

[23:23] *** dnl- left
[23:28] *** dnl joined
[23:35] * jnthn -> sleep

[23:36] <masak> 'night, jnthn.

[23:36] *** wamba left
[23:37] <masak> any comments on http://github.com/masak/yapsi/blob/master/doc/announce/2010.11 ?

[23:37] <masak> please let me know if I'm missing any obvious ways to be silly.

[23:37] <dalek> yapsi: 16b2615 | masak++ | doc/announce/2010.11:

[23:37] <dalek> yapsi: [doc/announce/2010.11] added

[23:37] <dalek> yapsi: review: http://github.com/masak/yapsi/commit/16b2615e71d675bf28c73ec90cf3900970cb1c8b

[23:37] <dalek> yapsi: 7809b61 | masak++ | doc/ChangeLog:

[23:37] <dalek> yapsi: [doc/ChangeLog] updated for 2010.11 release

[23:37] <dalek> yapsi: review: http://github.com/masak/yapsi/commit/7809b619bb11538b860379289f09fdef2a2e3d78

[23:38] * masak finds grammar parsefail on line 14

[23:38] <masak> fixing.

[23:41] *** justatheory left
[23:42] <masak> ok, making a tarball. last call for comments on the release announcement.

[23:43] <dalek> yapsi: 36dfe5c | masak++ | doc/announce/2010.11:

[23:43] <dalek> yapsi: [doc/announce/2010.11] fixed grammar-o

[23:43] <dalek> yapsi: review: http://github.com/masak/yapsi/commit/36dfe5c5735850b9b00709f725d487b4b4ad7418

[23:43] <dalek> yapsi: cce1b5a | masak++ | doc/announce/2010.11:

[23:43] <dalek> yapsi: [doc/announce/2010.11] small fix

[23:43] <dalek> yapsi: review: http://github.com/masak/yapsi/commit/cce1b5af3af590f0f32278e4db3cb650ee36c7b6

[23:50] *** cdarroch left
[23:59] *** ash_ left
[23:59] *** hatseflats left
[23:59] <masak> curses! http://github.com/masak/yapsi/downloads is down, so I can't upload my tarball.

