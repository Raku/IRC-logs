[00:03] *** hercynium joined
[00:04] *** jaldhar left
[00:05] *** jaldhar joined
[00:12] *** mfollett left
[00:13] *** Italian_Plumber joined
[00:47] <diakopter> no phenny

[00:50] *** nym joined
[00:58] *** QinGW joined
[01:00] *** nym is now known as nymacro

[01:05] *** QinGW left
[01:06] *** QinGW joined
[01:12] *** redicaps joined
[01:13] *** __rnddim__ is now known as lue

[01:18] *** Chillance joined
[01:46] *** rgrau` left
[01:49] *** satyavvd joined
[01:54] *** satyavvd left
[02:07] *** leprevost joined
[02:08] *** satyavvd joined
[02:09] *** LaVolta joined
[02:14] *** Italian_Plumber left
[02:21] *** s1n left
[02:23] *** agentzh joined
[02:36] *** s1n joined
[02:37] *** meppl left
[02:39] *** satyavvd left
[02:54] *** thowe joined
[02:55] *** sundar joined
[02:55] *** cdarroch left
[02:56] *** bbkr left
[02:56] *** bbkr joined
[02:59] <diakopter> quiet afternoon/evening

[03:01] <nymacro> *nod*

[03:02] <LaVolta> make some noise!

[03:05] *** molaf joined
[03:06] *** proller_ left
[03:07] *** proller joined
[03:12] <thowe> Hi

[03:15] <thowe> it's odd, but looking at Perl6 lately has me semi interested in Perl 5 again...  I want to replace my nanoc site with some perlish concoction

[03:17] <thowe> I think I want template toolkit for perl6

[03:17] <ash_> i don't think there are any actively developed template toolkits for perl6 yet

[03:17] <ash_> but feel free to start one

[03:18] <ash_> there are a number for perl5 based ones however

[03:18] <thowe> I'm on Chapter 3 of the perl6 book.  I think me building anything that other people use should wait a bit.

[03:19] <ash_> if you want a simple tool for a perl based site you could try Mojolicious::Lite 

[03:19] <thowe> I'm not enjoying the font selections in this book...  I'm curious as to the software used to make the pdf

[03:20] <thowe> it looks like learning the template toolkit would be knowledge that pays off in other ways.

[03:20] <thowe> I'll bet it is much faster than erb, which might help me with some stuff at work.

[03:21] <ash_> its all auto generated from tex

[03:21] <ash_> well, i think its .pod -> latex -> pdf 

[03:22] <thowe> hmm.  then I wonder if my issues are xpdf related?  It seems I don't have these readability problems with other PDFs.  I'm tempted to blame the fonts

[03:22] <ash_> it might be font related

[03:22] <ash_> but pdf's should have to font's embedded, but you could re-configure the build process to use a different font

[03:23] *** alester joined
[03:23] <nymacro> thowe, 2010.08 one? Reads fine in Evince

[03:23] <thowe> they may look great on paper...  I had to set to 200% to see that a - was really a ~  

[03:24] <thowe> I'm using 2010.07 one.  2010.08 failed to build for me so I went back.

[03:24] *** proller left
[03:24] <ash_> http://github.com/perl6/book is the source code, you can read it all there

[03:24] *** proller joined
[03:25] <thowe> It looks swell at 200%.  I'll bet it will look great on paper.

[03:25] <ash_> hmm, i don't have the same problem 

[03:26] <thowe> I (or XPDF) must be missing something

[03:26] <nymacro> you could try one of the pre-built PDFs. Not sure if it would help at all

[03:26] <nymacro> http://github.com/perl6/book/downloads

[03:27] <ash_> ya, if you built the pdf yourself, you may be missing a font or something 

[03:27] <thowe> is the one in the docs folder built when I build rakudo?

[03:27] <ash_> umm, i am not sure

[03:27] <thowe> I hadn't noticed, but I am getting by with it.

[03:29] *** fod joined
[03:31] *** molaf left
[03:34] <sorear> good * #perl6

[03:36] *** sundar left
[03:36] *** echosystm joined
[03:36] <echosystm> why does perl6 have 3 different ways to pass parameters?

[03:37] <echosystm> i dont get it

[03:37] *** Chillance left
[03:37] <echosystm> isnt this the kind of insanity that made so many people leave perl in the first place?

[03:37] *** fod left
[03:37] <sorear> perl 6 only has one way to pass parameters

[03:37] <echosystm> wikipedia says 3 : positional, named, "slurpy"

[03:37] <ash_> i don't understand what you mean by 3 different ways 

[03:38] <echosystm> http://en.wikipedia.org/wiki/Perl_6#Parameter_passing_modes

[03:38] <sorear> those are actually parameter parsing modes, not passing...

[03:39] <echosystm> ok

[03:40] <echosystm> the point remains though... why 3 ?

[03:40] <sorear> because they're all useful

[03:40] <ash_> they are all expressive ways of passing parameters, a lot of languages support those 3 kinds of ways of passing args, including ruby and python 

[03:41] <sorear> what's your favorite programming language?  I'd be happy to make inflammatory remarks about its parameter passing system

[03:41] <echosystm> probably java

[03:43] <ash_> they are useful because you can use them to express different things with different types of parameters, for instance you can also add a constraint that is based off of the type of an arg

[03:43] <echosystm> right

[03:43] *** mfollett joined
[03:43] <ash_> sigil on the parameter can add meaning too, like @ means your expecting a Positional type 

[03:44] <ash_> Positional is a fancy way of saying its array like 

[03:44] <echosystm> yep

[03:44] <ash_> array/list whatever word you want to describe 

[03:44] <ash_> errr

[03:44] <ash_> however you want to describe it 

[03:44] *** silug left
[03:44] <echosystm> a big concern for me is the general lack of convention in most programming languages

[03:45] <nymacro> echosystm, most modern languages support these 3 modes. They're somewhat conventional -- the only difference is how languages denote them

[03:45] *** satyavvd joined
[03:45] <echosystm> is perl6 goign to be really anal about naming ?

[03:45] *** sjn_ left
[03:45] <nymacro> Perl 6 slurpy is the equivalent of C/Java varargs

[03:46] <ash_> as an alternative to named params, most languages look for a hash with the values set in it, it solves a similar problem to pass a hash 

[03:48] <echosystm> does anyone know about my previous question?

[03:48] <echosystm> this is a big issue for me and im curious if perl6 is going to be a fresh start in this regard

[03:48] *** DemoFreak left
[03:48] <ash_> you mean naming? 

[03:48] <nymacro> naming conventions?

[03:48] <ash_> like with var names, subs names, obj names? 

[03:48] <echosystm> yeah like method/variable/package naming

[03:48] <echosystm> yes

[03:48] <ash_> they are pretty free

[03:49] <ash_> rakudo: my $a-b-c = "can have dashes even";

[03:49] <p6eval> rakudo be80e9:  ( no output )

[03:49] <LaVolta> btw, does it have particular convertion?

[03:49] <echosystm> i mean, are we going to have strong conventions in the standard library etc?

[03:49] <ash_> std: class foo-bar { };

[03:49] <p6eval> std : OUTPUT«ok 00:01 114m␤»

[03:50] <echosystm> i learned java as my first language, where everything is really strict about naming

[03:50] <echosystm> you'll never see underscores etc.

[03:50] <nymacro> echosystm, I believe the general Perl community has its own pseudo-standard naming conventions, but you're free to do whatever you want

[03:50] <echosystm> then i learned php and wanted to stab my eyes out

[03:50] <LaVolta> this is Perl

[03:50] <LaVolta> :)

[03:50] <ash_> in the std library, you'll see dashes in things on occasion, its generally a single word for each sub names when possible 

[03:50] <sorear> echosystm: What, precisely, is your goal here?

[03:51] <echosystm> trying to work out whether to learn perl6

[03:51] <ash_> have you learned perl5? 

[03:51] <echosystm> yep

[03:52] <nymacro> ash_, is that a trick question? :P

[03:52] <LaVolta> echosystm:  what's your opinion on  Perl 5?

[03:52] <ash_> not really, the are perl5 and 6 have so many similarities that its useful to understand perl5 to see why things are the way they are in perl6 

[03:52] <echosystm> i think perl5 is a good language in itself

[03:52] <echosystm> its what people have done with it that is the problem

[03:53] <echosystm> most of the perl code i see is an unmaintainable pile of crap that doesnt even try adhere to any kind of standard practice or conventions

[03:53] <thowe> its what people have done with it that is often the solution! =)

[03:53] <sorear> Perl 5, the language, is garbage

[03:53] <nymacro> ash_, I'm just making fun. :)

[03:54] <sorear> the only reason to ever use it is the fact that it has a real library culture

[03:54] <LaVolta> ah...people write Perl doesn't mean they are good at it

[03:54] <ash_> i fail at english right now, sorry if i don't make sense

[03:54] <LaVolta> though, ""

[03:54] <echosystm> well

[03:54] <echosystm> when im using modules off CPAN (popular ones too)

[03:54] <echosystm> theyre just all over the place

[03:54] <LaVolta> "get your job done", pardon me

[03:54] <echosystm> sometimes you see method calls like (-var => x, etc.

[03:55] <LaVolta> and? :)

[03:55] <echosystm> other times you see ({var => x}), (Var => x) etc

[03:56] <echosystm> it makes the code horrible to look at and i basically just want nothing to do with it

[03:56] <nymacro> echosystm, nb. Perl is expressive and doesn't have "one way" to do anything

[03:56] <echosystm> evidently

[03:56] <thowe> poor programming practices are universal.  I have seen Perl that has made me angry, but I probably run into that more with PHP

[03:56] <LaVolta> modules I met often offer both ways to specify 'var'

[03:57] <LaVolta> like a directly one and a 'named' one

[03:57] <sorear> echosystm: TIMTOWDI is non-negotiable.

[03:57] <LaVolta> and i think's it's just reflect the way of doing it Perlly, nothing else

[03:57] <LaVolta> grok it or leave it

[03:57] <LaVolta> that's my understanding

[03:58] <ash_> TIMTOWDI in every language, you can make python look just as bad as php if you try hard enough even though python swears by the 'there is one way to do it' way of thinking

[03:58] <echosystm> python is a lie

[03:58] <echosystm> all the hype about that language is false

[03:59] <LaVolta> you can write assembly in any language :)

[03:59] <sorear> a good FORTRAN programmer can write FORTRAN in any language.

[03:59] <thowe> I really wanted to like Python...  I just couldn't do it

[03:59] <echosystm> same thowe 

[04:00] <ash_> i work with python all the time, i don't mind it, its just another way of doing things 

[04:00] <echosystm> i heard all these claims of it being such a beautiful and elegant language... total nonsense

[04:00] <echosystm> its no better than perl/php/whatever

[04:00] <ash_> i only use it when i have to use libraries it has that other's dont 

[04:00] *** gottreu_ joined
[04:00] <nymacro> there is nothing wrong with Python

[04:00] <echosystm> the irony is that python folk always slam PHP for its naming conventions (or lack of)

[04:00] <nymacro> this is coming down to personal preference

[04:01] <thowe> I find that Perl6 seems to be easier to read the way my brain wants to read it without needing to think as much as perl5 made me think.  I find a lot of what I like about Ruby in Perl6

[04:01] *** proller_ joined
[04:02] <ash_> thowe: same, i liked ruby a lot, but i realize perl6 offers more flexibility and power in a number of areas

[04:02] <LaVolta> "Ruby: Because I can't wait until Perl 6 is finished"

[04:02] <thowe> and that's just me.  I sighed a big sigh and moved to Ruby about 7 years ago.  Perl6 currently is drawing me back in by being cool.

[04:02] *** proller left
[04:02] <thowe> LaVolta, EXACTLY!  

[04:02] <ash_> thowe: http://try.rakudo.org/ 

[04:02] <nymacro> d8-)

[04:03] *** DemoFreak joined
[04:03] *** ash_ left
[04:03] <thowe> ash_ , I have Rakudo here and I am going through the perl6 book already =]

[04:04] <thowe> The Wiki book kind of sold me, plus I read some of the Apocalypse stuff

[04:04] *** ash_ joined
[04:05] <thowe> some of those Perl/Parrot guys are just crazy smart...

[04:05] <ash_> thowe: have you read the current spec? 

[04:05] <ash_> its useful if you don't mind technical babble 

[04:06] <nymacro> I learnt words which I didn't even know existed

[04:06] <thowe> ash_ I have looked at it a little, but I haven't read it.

[04:07] <ash_> the Apocalypse are a bit dated, same with the Exegesis 

[04:07] <ash_> the spec, however, is current

[04:09] *** ggoebel left
[04:09] <ash_> alpha: ([\,] 1..3).perl.say

[04:10] <p6eval> alpha 30e0ed: OUTPUT«Syntax error at line 10, near "([\\,] 1..3"␤in Main (file <unknown>, line <unknown>)␤»

[04:10] <ash_> rakudo:  ([\,] 1..3).perl.say

[04:10] <p6eval> rakudo be80e9: OUTPUT«(1, (1, 2), ((1, 2), 3))␤»

[04:15] *** proller_ left
[04:15] <ash_> thowe: http://perlcabal.org/syn/ is the spec if you need a link

[04:16] *** proller joined
[04:26] *** ash_ left
[04:28] *** proller left
[04:28] *** proller joined
[04:29] *** nymacro left
[04:29] <cbk> how does one set up a hash when declaring a default constructor in perl6?

[04:30] <cbk> or a array for that matter?

[04:34] <plobsing> rakudo: class B { has $.x = { :x('y'), :y('z'), :z('x') }; }; B.new.x

[04:34] <p6eval> rakudo be80e9:  ( no output )

[04:35] <plobsing> rakudo: class B { has $.x = { :x('y'), :y('z'), :z('x') }; }; B.new.x.perl.say

[04:35] <p6eval> rakudo be80e9: OUTPUT«{"x" => "y", "y" => "z", "z" => "x"}␤»

[04:35] <cbk> plobsing, ok i'll try that.... Thanks.

[04:39] *** cls_bsd left
[04:39] *** LaVolta left
[04:40] *** LaVolta joined
[04:45] *** satyavvd left
[04:45] *** mjk joined
[04:49] *** gottreu_ left
[04:55] *** hercynium left
[05:03] *** proller left
[05:03] *** gottreu_ joined
[05:03] *** proller joined
[05:06] *** cls_bsd joined
[05:14] *** mfollett left
[05:21] *** alester left
[05:22] *** kaare joined
[05:22] *** kaare is now known as Guest7356

[05:24] *** Guest7356 is now known as kaare_

[05:53] *** justatheory left
[05:58] *** pythonian4000 is now known as pythonian4000afk

[05:59] *** nymacro joined
[06:02] *** mfollett joined
[06:03] *** mfollett left
[06:13] *** gottreu_ left
[06:25] *** Su-Shee joined
[06:25] <moritz_> good morning

[06:26] <Su-Shee> good morning to the south!

[06:50] *** wtw joined
[07:03] *** mberends joined
[07:07] *** rgrau` joined
[07:07] *** rgrau` left
[07:10] *** baest_ is now known as baest

[07:22] *** echosystm left
[07:24] *** sftp left
[07:36] *** tadzik joined
[07:52] *** dju joined
[08:02] <tadzik> good morning

[08:03] *** gfldex left
[08:03] *** gfldex joined
[08:17] *** Tene left
[08:22] *** wamba joined
[08:22] *** dakkar joined
[08:24] *** boggy joined
[08:34] *** boggy left
[08:35] *** mjk left
[08:47] <jnthn> morning, #perl6

[08:47] <mberends> hola jnthn

[08:49] <jnthn> o/ mberends 

[08:51] <mberends> jnthn: no 6model updates from me today, still surveying the overall approach. More than half the nqp code seems to fit without any change \o/

[08:52] <jnthn> Yes, I kinda hoped a bunch of it would be re-usable by you. :-)

[08:52] <jnthn> I kinda got lazy and used var in a couple of places

[08:52] <jnthn> That should be eliminated in the .Net one too at some point though

[08:53] <jnthn> (So anything you do in the Java on towards that, the C# one will borrow back at some point :-)).

[08:54] <jnthn> s/on /one/

[08:55] *** pnu left
[08:57] <mberends> :)

[08:57] *** pnu joined
[08:58] <jnthn> mberends: I got another few bits of the C implementation in place last night too. :-)

[08:58] <mberends> mberends: cool!

[08:58] *** dalek left
[08:59] <mberends> er, jnthn: cool!

[08:59] <jnthn> .oO( Is talking to yourself one of the first signs of madness if you do it on IRC? )

[08:59] <mberends> (sign of semility)

[08:59] <mberends> s/m/n/

[08:59] *** wamba left
[09:00] <mberends> it's gonna be one of those days...

[09:02] *** dalek joined
[09:02] *** ChanServ sets mode: +v dalek

[09:11] *** timbunce joined
[09:21] *** hudnix joined
[09:25] *** [hudnix] left
[09:29] *** redicaps left
[09:31] *** aloha left
[09:32] *** aloha joined
[09:41] *** nymacro left
[09:44] *** mikehh joined
[09:46] *** LaVolta left
[09:53] *** Italian_Plumber joined
[10:01] *** QinGW left
[10:05] *** lamstyle joined
[10:08] *** tadzik left
[10:17] *** pythonian4000afk is now known as pythonian4000

[10:18] *** dju left
[10:22] *** dju joined
[10:32] *** ggoebel joined
[10:33] *** leprevost left
[10:33] *** pythonian4000 is now known as pythonian4000afk

[10:38] *** pythonian4000afk is now known as pythonian4000

[10:39] *** Italian_Plumber left
[10:47] *** mjk joined
[10:54] *** sjn_ joined
[10:57] *** ruoso left
[10:58] *** boggytwo joined
[10:59] *** Italian_Plumber joined
[11:04] *** agentzh left
[11:10] *** pythonian4000 is now known as pythonian4000afk

[11:27] *** meppl joined
[11:30] *** wallberg joined
[11:51] *** daxim joined
[12:05] <moritz_> http://github.com/moritz/perlgeek.de/blob/master/source/blog-source-en/perl-6/announcing-try-rakudo-org.txt any comments before I publish?

[12:16] <jnthn> moritz_: +1

[12:16] <takadonet> I will post it to reddit asap :)

[12:17] <moritz_> http://perlgeek.de/blog-en/perl-6/announcing-try-rakudo-org.writeback

[12:18] <takadonet> http://www.reddit.com/r/programming/comments/dgt8x/announcing_tryrakudoorg_an_interactive_perl_6/

[12:18] <jnthn> wow, that was fast :)

[12:20] <takadonet> I have a perl6 macro.....

[12:22] *** pythonian4000afk is now known as pythonian4000

[12:24] *** pythonian4000 is now known as pythonian4000afk

[12:25] *** pythonian4000afk is now known as pythonian4000

[12:27] *** pythonian4000 is now known as pythonian4000afk

[12:28] *** phenny joined
[12:28] *** ChanServ sets mode: +v phenny

[12:30] *** ruoso joined
[12:36] <arnsholt> .u ṣ

[12:36] <phenny> U+1E63 LATIN SMALL LETTER S WITH DOT BELOW (ṣ)

[12:43] *** masak joined
[12:43] <masak> nämen hej, #perl6!

[12:43] <phenny> masak: 20 Sep 12:09Z <moritz_> tell masak that some code seems to be incomplete at http://strangelyconsistent.org/blog/idiomatic-perl-6

[12:43] <masak> moritz_: thanks -- will investigate.

[12:44] <takadonet> maybe I should have posted in r/perl instead of r/programming

[12:44] <masak> indeed. previously bolded code didn't make it though the convesion.

[12:44] <masak> takadonet: r/programming generally gets more comment.

[12:44] <masak> s/comment/comments/

[12:45] <arnsholt> .u ḥ

[12:45] <phenny> U+1E25 LATIN SMALL LETTER H WITH DOT BELOW (ḥ)

[12:45] <takadonet> masak: indeed but Perl 6 gets lots of downvotes normally 

[12:46] <moritz_> takadonet: you can always do both :-)

[12:46] <moritz_> I usually do

[12:47] <takadonet> sometime I do

[12:48] * masak upvotes

[12:48] <moritz_> who's doing the release on Thursday?

[12:48] <moritz_> mathw?

[12:48] <jnthn> masak: "nämen"?

[12:49] <masak> jnthn: interjection, expressing mild surprise. nej + men.

[12:49] <jnthn> yeahbut nobut...

[12:49] <masak> jnthn: possibly the closest one gets to "oh hai" in Swedish.

[12:49] <masak> jnthn: well, those are used when arguing. this one isn't.

[12:49] <jnthn> :)

[12:50] <masak> I'd translate it back to English as "well", as in "well hello".

[12:50] *** ash_ joined
[12:52] <jnthn> .oO( Swedes greet their wells? In English we just pulled the water out of them... )

[12:52] <ash_> hi

[12:52] <phenny> ash_: 15 Sep 09:24Z <moritz_> ask ash_ what to do when try.rakudo.org is unresponsive - is there a way to restart the backend? if yes, how?

[12:53] <jnthn> *England

[12:53] <arnsholt> .u ḫ

[12:53] <phenny> U+1E2B LATIN SMALL LETTER H WITH BREVE BELOW (ḫ)

[12:54] <jnthn> Aww, my font is missing that one.

[12:54] <moritz_> hi ash_. I just blogged about try.rakudo.org

[12:54] <masak> moritz_++

[12:54] <ash_> moritz_: currently, if try.rakudo.org is messed up, you have to ssh into the screen and reset it, i know its not the best way of doing it

[12:54] <ash_> hey, i blogged about it too, last night

[12:55] <moritz_> where 'it' = what?

[12:56] <masak> url?

[12:56] <moritz_> http://perlgeek.de/blog-en/perl-6/announcing-try-rakudo-org.writeback

[12:56] *** tadzik joined
[12:56] <ash_> umm, that depends on which part is unresponsive, it's currently 1 screen for the repl server and 1 screen for the http server (its a mojo daemon)

[12:57] <mathw> moritz_: I'm down for it. I really probably should try and persuade someone else to do it though, things are a bit... mad

[12:57] <ash_> i haven't ever written a /etc/init.d script or anything like that, so i wasn't sure how to go about making a daemon to start the repl server

[12:57] <moritz_> mathw: if nobody else chimes in, I can do it

[12:58] <mathw> thanks

[12:58] <moritz_> ash_: I don't think it's really necessary; having a README that tells which process to kill and how to start them again would be a great start

[12:58] <moritz_> and under which user IDs

[12:58] <mathw> most things don't seem to be working out properly this week!

[12:59] <ash_> alright, i'll set that up, where can i put the readme?

[12:59] <moritz_> ash_: in the repo, I'd say

[12:59] <ash_> kk

[12:59] <ash_> i'll write that up now 

[12:59] <moritz_> ash_++

[12:59] <ash_> i have noticed it going unresponsive a few times, i wish i knew a better way of restarting it to keep it up and running

[13:00] <moritz_> ash_: Infinoid uses some supervision for the dalek bot... maybe we can steal that mechanism

[13:01] <ash_> do you have a link to infinoid? so i can read up on it

[13:01] <moritz_> ash_: Infinoid is a nick in here :-)

[13:01] <ash_> http://greaterthaninfinity.com/2010/09/try-rakudo-in-your-browser/ btw 

[13:01] <ash_> ah 

[13:02] <moritz_> oh, I missed that

[13:02] <ash_> but my blog doesn't go many places, so the more that write about it the better chances it will be found

[13:02] *** patspam joined
[13:02] <flussence> is anyone aware that the graphs on smolder.parrot.org are broken?

[13:02] <moritz_> flussence: best ping dukeleto about it

[13:04] <moritz_> ash_: I've now added a link to your blog too

[13:05] <arnsholt> .u ṭ

[13:05] <phenny> U+1E6D LATIN SMALL LETTER T WITH DOT BELOW (ṭ)

[13:06] <ash_> .u ¢

[13:06] <phenny> U+00A2 CENT SIGN (¢)

[13:06] <ash_> cool, thanks moritz_ 

[13:07] <tadzik> hah, try.rakudo.org got some reddit effect

[13:08] <takadonet> really?

[13:08] <takadonet> how badly?

[13:08] <takadonet> sorry :(

[13:09] <tadzik> hah, I managed to get to it

[13:09] <ash_> hmm, something is wrong with the repl server, someone just tried "Zażółć gęślą jaźn".chars and it crashed the repl server, i don't know why :-\ 

[13:09] <ash_> i'll look into it 

[13:09] <flussence> s/Unfurtounately/Unfortunately/

[13:10] <mberends> Yesterday - The Backup Song http://www.iks-jena.de/mitarb/lutz/usenet/yesterday.html :)

[13:10] <jnthn> rakudo: say "Zażółć gęślą jaźn".chars

[13:10] <p6eval> rakudo be80e9: OUTPUT«17␤»

[13:10] <tadzik> > say 'Zażółć gęślą jaźń'

[13:10] <tadzik> ZaÅ¼Ã³ÅÄ gÄÅlÄ jaÅºÅ

[13:10] <tadzik> ↑ REPL

[13:10] *** kaare_ left
[13:11] <ash_> tadzik: commandline repl ?

[13:11] <tadzik> ash_: ywis

[13:11] <moritz_> mberends: nice :-)  hope there's no specific reason for you to sing it :-)

[13:12] <tadzik> ash_: → say 'Zażółć gęślą jaźń'

[13:12] <tadzik> ERROR: failed to gather a result Wide character in syswrite at /usr/local/share/perl/5.10.1/IO/Pty/HalfDuplex/Ptyish.pm line 191, <$cfg> line 1.

[13:12] <ash_> hmm

[13:12] <ash_> i'll keep trying it locally, and try to update the server when i can 

[13:12] <moritz_> probably a missing encode_utf8() before writing to the REPL

[13:14] <ash_> hmm "£æ".say and "¢£".chars both worked

[13:17] *** Patterner left
[13:18] *** dju left
[13:20] *** dju joined
[13:23] *** leprevost joined
[13:24] *** nymacro joined
[13:24] <ash_> i didn't know there was a version of pugs that ran in your browser

[13:24] *** rgrau` joined
[13:26] <[Coke]> wow, ages ago, yes.

[13:26] <[Coke]> try.rakudo.org seems to have hung my copy of IE8.

[13:27] <moritz_> wow

[13:27] <flussence> I'm installing Konqueror just so I can have something to complain about

[13:27] <flussence> (and maybe fix)

[13:28] <ash_> unicode seems to break the repl server, but not all unicode, which is annoying.

[13:28] <[Coke]> repl is using readline under the covers. perhaps there's a setting to be tweaked.

[13:28] *** Psyche^ joined
[13:28] *** Psyche^ is now known as Patterner

[13:29] <ash_> i configured it to not use readline 

[13:29] <[Coke]> ah, IE8 is fine. it just goes haywire if I <do too much of thing X I haven't figured out>

[13:29] <[Coke]> ash_: ah, then it's probably the REPL. =-)

[13:30] *** mjk left
[13:31] <ruoso> er... try.rakudo.org seem to have gone offline

[13:31] <takadonet> good old reddit 

[13:31] <ash_> i keep restarting it because i keep breaking it

[13:31] <ash_> i don't recommend trying to print unicode characters, they seem to cause problems

[13:36] <ruoso> javascript utf8 support is terrible

[13:37] <moritz_> rakudo utf8 support is also fragile

[13:38] <tadzik> well, rather REPL, no?

[13:38] <moritz_> it works well for files, but used to have lots of bugs for -e, REPL, modules etc.

[13:38] *** nymacro left
[13:40] *** javs joined
[13:41] <ruoso> std: my @c = map -> $n, $s { $n ~ $s }, @n Z @s;

[13:41] <p6eval> std : OUTPUT«===SORRY!===␤Variable @n is not predeclared at /tmp/kOwviqJ5aQ line 1:␤------> my @c = map -> $n, $s { $n ~ $s }, @n⏏ Z @s;␤Variable @s is not predeclared at /tmp/kOwviqJ5aQ line 1:␤------>  @c = map -> $n, $s { $n ~ $s }, @n Z @s⏏[31…

[13:41] <ruoso> std: my @s; my @n; my @c = map -> $n, $s { $n ~ $s }, @n Z @s;

[13:41] <p6eval> std : OUTPUT«ok 00:01 121m␤»

[13:41] <ruoso> rakudo: my @s; my @n; my @c = map -> $n, $s { $n ~ $s }, @n Z @s;

[13:41] <p6eval> rakudo be80e9: OUTPUT«No candidates found to invoke for method 'map' on object of type 'Array'; available candidates have signatures:␤:(Mu : &block;; *%_)␤␤  in 'map' at line 1758:CORE.setting␤  in main program body at line 22:/tmp/QAYidGPLJo␤»

[13:42] <ruoso> rakudo: my @s; my @n; my @c = map -> $n, $s { $n ~ $s }, (@n Z @s);

[13:42] <p6eval> rakudo be80e9:  ( no output )

[13:42] *** tadzik left
[13:42] <ruoso> bug?

[13:43] <ash_> is Z the right precedence? (just checking) 

[13:43] <moritz_> rakudo: my @n; my @c = map -> $n, $s { $n ~ $s }

[13:43] <p6eval> rakudo be80e9:  ( no output )

[13:43] <masak> ruoso: you're not outputting anything.

[13:43] *** tadzik joined
[13:43] <ruoso> masak, the bug was about the earlier eval

[13:43] <moritz_> masak: I think it's the "No candidates found"

[13:43] <masak> oh, I see now.

[13:43] <masak> no, that's correct.

[13:43] <moritz_> why?

[13:43] <masak> STD never tries to call &map.

[13:43] <masak> Rakudo does.

[13:44] <masak> and Z has very loose prec.

[13:44] <moritz_> but why is it an error?

[13:44] <moritz_> I read that as

[13:44] <moritz_> (map $block, @n) Z @s

[13:44] *** molaf joined
[13:44] * masak checks the prec of Z just to be sure

[13:45] <ruoso> hmm... that would be surprising..

[13:45] <masak> it's tighter than 'list prefix', of which &map is a member.

[13:45] <moritz_> ok

[13:45] <ruoso> makes more sense

[13:45] <moritz_> ah

[13:45] <masak> so, no bug.

[13:45] <moritz_> it's parsed as

[13:45] <ruoso> no bug?

[13:45] * ruoso read it the other way

[13:45] <moritz_> map(($block, @n) Z @s)

[13:45] <masak> ruoso: no, it's tighter. no bug.

[13:45] <moritz_> so it's basically     map(@list)

[13:46] <masak> right.

[13:46] <moritz_> which misses the block

[13:46] <moritz_> so masak++ is right

[13:46] <masak> for once :P

[13:46] <masak> I don't very much like being right here.

[13:46] <masak> but TimToady knows about this one.

[13:46] <masak> it's one of those which you can't get right for every single use case, so you have to get it wrong sometimes.

[13:47] <moritz_> I think map is supposed to have a slurpy block, but even then: @s is empty, so the zip returns the empty list

[13:47] <masak> a good lint tool should be able to detect it, though.

[13:47] <moritz_> masak: it's one of the reasons I like the method form of map

[13:48] <masak> moritz_: aye. I don't use Z enough in that position to have been burnt by this a lot.

[13:48] <ruoso> yeah... after thinking for a while I realize why it is a bug...

[13:48] <ruoso> but it looks quite odd

[13:49] <moritz_> ruoso: as a comfort, you'd use Z~ instead of the map + Z anyway :-)

[13:50] <ash_> is there a bigger pi? 

[13:50] <ash_> rakudo: more-accurate-pi 

[13:50] <p6eval> rakudo be80e9: OUTPUT«Could not find sub &more-accurate-pi␤  in main program body at line 22:/tmp/gnNZ41c7Rr␤»

[13:50] <tadzik> . o O ( Math::Pi )

[13:50] <moritz_> rakudo: say 0.1+pi # bigger pi :-)

[13:51] <p6eval> rakudo be80e9: OUTPUT«3.24159265358979␤»

[13:51] <ash_> lol

[13:51] <masak> rakudo: say pi ** pi

[13:51] <p6eval> rakudo be80e9: OUTPUT«36.4621596072079␤»

[13:51] <ash_> s/bigger/more decimals of accuracy/ 

[13:51] <ash_> :pi<123> # o.0

[13:51] <masak> ruoso: it looks a bit odd at first, but the more I think about it, the more I realize that Z *has* to have that precedence.

[13:51] <tadzik> or rather Math::π

[13:52] <tadzik> .u π

[13:52] <phenny> U+03C0 GREEK SMALL LETTER PI (π)

[13:52] <ruoso> masak, yes... the problem is not from Z, actually

[13:52] <ruoso> masak, the origin of that parsing comes from accepting lists without the parenthesis

[13:52] <ash_> rakudo: "{GREEK BIG LETTER PI}".perl

[13:52] <p6eval> rakudo be80e9: OUTPUT«Could not find sub &PI␤  in main program body at line 22:/tmp/Go6JFO8TaR␤»

[13:52] <ash_> um... is that a bug? 

[13:52] <ash_> or did i do it wrong? 

[13:52] <tadzik> hm?

[13:52] <tadzik> what is the bug here?

[13:52] <moritz_> {...} is closure interpolation

[13:53] <moritz_> you want \c[...]

[13:53] <jnthn> \c[GREEK BIG LETTER PI]

[13:53] <jnthn> rakudo: "\c[GREEK BIG LETTER PI]".perl.say

[13:53] <p6eval> rakudo be80e9: OUTPUT«===SORRY!===␤Unrecognized character name GREEK BIG LETTER PI at line 22, near "]\".perl.sa"␤»

[13:53] <moritz_> s/BIG/CAPITAL

[13:53] <jnthn> rakudo: "\c[GREEK CAPITAL LETTER PI]".perl.say

[13:53] <p6eval> rakudo be80e9: OUTPUT«"Π"␤»

[13:53] <ash_> ah, i was thinking the opposite of small was big 

[13:53] <jnthn> rakudo: "\c[GREEK CAPITAL LETTER PIE]".perl.say

[13:53] <p6eval> rakudo be80e9: OUTPUT«===SORRY!===␤Unrecognized character name GREEK CAPITAL LETTER PIE at line 22, near "]\".perl.sa"␤»

[13:53] <jnthn> Aww

[13:53] <jnthn> :-)

[13:53] <tadzik> The Pie is a Lie!

[13:54] <jnthn> .u pie

[13:54] <phenny> U+A03D YI SYLLABLE PIE (ꀽ)

[13:54] <ash_> rakudo: "\c[CAKE]".say

[13:54] <p6eval> rakudo be80e9: OUTPUT«===SORRY!===␤Unrecognized character name CAKE at line 22, near "]\".say"␤»

[13:54] <tadzik> rakudo: Pie.isa('Lie')

[13:54] <p6eval> rakudo be80e9: OUTPUT«Could not find sub &Pie␤  in main program body at line 22:/tmp/_bC9hruJtH␤»

[13:54] <tadzik> rakudo: class Lie {}; class Cake {}; say Cake.isa('Lie').Bool

[13:54] <p6eval> rakudo be80e9: OUTPUT«0␤»

[13:54] <tadzik> pff

[13:54] <tadzik> rakudo: class Lie {}; class Cake is Lie {}; say Cake.isa('Lie').Bool

[13:54] <p6eval> rakudo be80e9: OUTPUT«1␤»

[13:55] <moritz_> the quotes aren't necessary

[13:55] <jnthn> The quotes are hateful.

[13:55] <tadzik> oh

[13:55] <tadzik> right

[13:55] <jnthn> Trouble is, which Lie?

[13:55] <moritz_> The Lie

[13:55] <jnthn> What if there's different ideas of what a Lie is in different scopes?

[13:56] <arnsholt> Sophus Lie?

[13:56] *** snearch joined
[13:56] <moritz_> sorry, unrecognized Lie at line 2,

[13:57] <ash_> hmm, should i setup the library that lets you use perl5 in rakudo? (that did work, right?) 

[13:57] <ash_> on the server, the try.rakudo.org server

[13:58] <moritz_> nope

[13:58] <moritz_> too high risk

[13:58] <ash_> kk

[13:58] <moritz_> it would be a cool demo, but dangerous

[13:59] <ash_> i'd have to override a bunch of things in perl5 i guess to make it safe 

[14:01] <moritz_> "a bunch of things" sounds like a broad oversimplification :-)

[14:01] <jnthn>  /me går för att köpa öl...bbiab

[14:01] *** dju left
[14:02] <moritz_> that sounds like "I'm going to buy some beer"

[14:02] <moritz_> not an unlikely thing for jnthn to say

[14:02] <masak> if you interp "going" quite literally, it does mean that.

[14:03] <masak> jnthn++ # Swedish is getting better -- at least the beer-related parts :)

[14:03] <moritz_> yeah, more like "going (to the shop) to buy"

[14:03] <tadzik> ól is beer?

[14:03] <masak> aye.

[14:03] <tadzik> nice word to know

[14:04] <masak> English has 'ale' there in the same clade.

[14:05] <tadzik> ale is "but" in Polish :)

[14:07] *** Guest23195 joined
[14:07] <masak> we could keep on like this all evening :P

[14:12] <tadzik> http://www.reddit.com/r/programming/comments/dgt8x/announcing_tryrakudoorg_an_interactive_perl_6/ -- there is a sad someone

[14:12] *** dju joined
[14:13] <szbalint> jnthn: http://www.youtube.com/watch?v=IpHniCEHY7I # learning swedish

[14:14] <ash_> jnthn: you use windows, right? 

[14:14] * [Coke] listens to _Camilla_ by the art of noise, which is close enough to camelia that he had to double check.

[14:15] <ash_> oh, he's buying beer, nevermind, anyone else use windows? 

[14:15] <ash_> or more specifically, has anyone had any issues with try.rakudo.org on windows?

[14:16] <ruoso> rakudo: my @numbers = 2..10, «J Q K A»;my @suits = «hearts diamonds clubs spades»;my @deck = @numbers X| @suits;my @hand = @deck.pick(5); say @hand; say (([eq] @hand) && (!grep { $_ == any(2..10) }, @hand)) ?? 'royal flush' !! 'not a royal flush';

[14:16] <p6eval> rakudo be80e9: OUTPUT«any("J", "spades")any(5, "clubs")any(6, "hearts")any(7, "spades")any(5, "spades")␤not a royal flush␤»

[14:18] *** wtw left
[14:19] * ruoso notes that it only works because poker hands have 5 cards and the deck has only 4 suits

[14:20] <moritz_> ash_: perlmonks chatterbox reports a few successes on windows

[14:20] <ash_> k

[14:21] <ash_> well, i'll have to find a windows computer to test this on 

[14:22] * ash_ changing classrooms bbl 

[14:22] *** ash_ left
[14:23] <moritz_> 16:23 <@cbstream> [mje] google chrome on Windows XP - > 3 minutes and still no answer

[14:28] *** wallberg left
[14:30] *** ash_ joined
[14:30] *** alester joined
[14:31] <gfldex> std: my @a = <foo.txt bar.txt baz.txt>; @a>>.split('.')[-1].say;

[14:31] <p6eval> std : OUTPUT«===SORRY!===␤Unsupported use of [-1] subscript to access from end of array; in Perl 6 please use [*-1] at /tmp/fWzwoveIpb line 1:␤------> xt bar.txt baz.txt>; @a>>.split('.')[-1]⏏.say;␤Parse failed␤FAILED 00:01 119m␤»

[14:32] <gfldex> std: my @a = <foo.txt bar.txt baz.txt>; @a>>.split('.')[*-1].say;

[14:32] <p6eval> std : OUTPUT«ok 00:01 119m␤»

[14:32] <gfldex> rakudo: my @a = <foo.txt bar.txt baz.txt>; @a>>.split('.')[*-1].say;

[14:32] <p6eval> rakudo be80e9: OUTPUT«txt␤»

[14:33] <gfldex> am i asking for something unreasonable?

[14:33] <masak> gfldex: why not do the split after the indexing?

[14:33] <masak> gfldex: depends what you want to do, of course.

[14:33] <moritz_> gfldex: no; you get exactly what you're asking for

[14:33] <gfldex> :(

[14:33] <moritz_> rakudo: my @a = <foo.txt bar.txt baz.txt>; @a>>.split('.')>>.[*-1].say;

[14:33] <p6eval> rakudo be80e9: OUTPUT«footxtbartxtbaztxt␤»

[14:33] <masak> gfldex: start by exaplaining what you expected.

[14:34] <[Coke]> ash_ i used try.rakudo.org with IE8 no problems.

[14:34] <gfldex> i want to split by '.' and get the last element for each element in @a

[14:34] <ash_> [Coke]++ thanks for trying it, i don't have regular access to windows

[14:34] <masak> I see. seems moritz_++ caught on before I did.

[14:34] *** pmurias joined
[14:34] *** Su-Shee left
[14:35] <moritz_> problem is that >>. flattens the left-hand side

[14:35] <masak> nod.

[14:35] <gfldex> i c

[14:35] <masak> so that can't work.

[14:35] <masak> probably use a map instead.

[14:35] <gfldex> so >>. is not so hot if i want to modify values of a list

[14:35] <gfldex> unless the method is doing it ofc

[14:35] <masak> rakudo: my @a = <foo.txt bar.txt baz.txt>; .say for map { .split('.')[*-1] }, @a

[14:36] <p6eval> rakudo be80e9: OUTPUT«txt␤txt␤txt␤»

[14:36] <masak> \o/

[14:36] <jnthn> I'm back. Nu jag har öl! Moja chladnička je vesela.

[14:36] <masak> gfldex: it's not so much about modifying values as it is about flattening.

[14:38] <ash_> is there much of a difference between @a.map: { } and map { }, @a ? 

[14:39] <moritz_> precedence!

[14:39] <moritz_> as ruoso demonstrated above

[14:39] *** alester left
[14:40] <masak> although to be fair, both can bite you precedence-wise :P

[14:41] <moritz_> yes

[14:42] <tadzik> ash_: the first one is better for you don't have to remember the order of arguments to map :)

[14:42] <tadzik> jnthn: "My fridge is happy"?

[14:43] <ash_> rakudo: my @a = <a b c>; .say for @a.map: { $^x eq 'b' | 'c' }

[14:43] <p6eval> rakudo be80e9: OUTPUT«any(Bool::False)␤any(Bool::True, Bool::False)␤any(Bool::False, Bool::True)␤»

[14:43] <jnthn> tadzik: 'cus it's full of beer now :-)

[14:43] <moritz_> instead you have to remember if the list or the block is used as invocant

[14:43] <tadzik> jnthn: yeah, I figured that out. I was just checking my Slovak (Czech?) understanding :)

[14:43] <jnthn> 'twas Slovak. :-)

[14:43] <moritz_> my hovercraft is full of eels!

[14:43] <tadzik> I recently bought the beer in a shop and it was outdated :(

[14:44] <jnthn> Which is too bad, because otherwise you coulda czeched your understanding... :-)

[14:44] <ash_> s/hovercraft/lovercraft/ ? 

[14:44] <tadzik> lovecraft rather :)

[14:44] <jnthn> tadzik: Eww :-(

[14:44] <tadzik> and it was my favourite one!

[14:44] <tadzik> At least they give back 0.5 PLN for a bottle

[14:44] <jnthn> I loved that scheme.

[14:45] <jnthn> You collected enough bottles, then you eventually could take enough back to get "free" beer :-)

[14:45] <tadzik> haha, we call that the deriviate (?) of the party

[14:45] *** leprevost left
[14:45] <tadzik> how is it spelled...

[14:46] <moritz_> derivative?

[14:46] <moritz_> or derivate?

[14:46] <jnthn> ...dunno, I just know that beer is an integral part of a party. :-)

[14:46] <tadzik> derivative

[14:46] <moritz_> that makes sense

[14:46] <ash_> oh, the math jokes :P 

[14:46] <tadzik> so the derivative of the party is an amount of beer you can buy for selling the bottles from the party

[14:46] <masak> a derivative is something you can get in maths; a derivate is something you can get in chemistry

[14:46] <tadzik> and a good party is one of which the 2nd derivative is positive

[14:47] <[Coke]> jnthn: ... I think you've taken this joke to the limit.

[14:48] <tadzik> hah, Math jokes. <i> Get rational! – <pi> Get real!

[14:48] <tadzik> s/Get/Be/

[14:48] <pmichaud> good morning, #perl6

[14:49] <tadzik> good morning pmichaud 

[14:49] <moritz_> good morning

[14:49] <jnthn> morning, pmichaud 

[14:49] <pmichaud> did we ever pick a time for #cpan6sketch?

[14:50] <tadzik> 70 minutes remaining

[14:50] <masak> mo'nin', pm.

[14:50] *** meraxes joined
[14:50] *** hirschnase left
[14:50] <[Coke]> ~~

[14:51] <masak> std: ~~

[14:51] <p6eval> std : OUTPUT«===SORRY!===␤Expecting a term, but found either infix ~~ or redundant prefix ~␤  (to suppress this message, please use space between ~ ~) at /tmp/FRCh9Q68g0 line 1:␤------> ~~⏏<EOL>␤Parse failed␤FAILED 00:01 115m␤»

[14:51] <[Coke]> Given how hard it seems to be to meet on IRC for cpan6sketch, wouldn't email be a good fallback?

[14:51] <masak> [Coke]: ssh, don't ruin it! this meeting will be the one that everyone makes it to! :)

[14:52] <[Coke]> HEE!

[14:52] <[Coke]> good luck, we're all counting on you!

[14:53] <masak> speaking of which, will sorear++ attend?

[14:55] *** mfollett joined
[14:55] * masak finds himself using T much more since the PGE-to-nqp-rx regression re charclasses with backslashed things in them

[14:55] <masak> probably a good thing.

[15:00] <moritz_> what is \T ?

[15:01] <masak> anything but \t

[15:01] <masak> the general rule is...

[15:01] <moritz_> right

[15:01] <masak> ...right.

[15:01] <moritz_> you don't talk about the fight club.

[15:01] <masak> :)

[15:02] <tadzik> I'm tempted to watch this film

[15:03] <[Coke]> I read the book first. I'm not sure which I recommend doing first.

[15:03] <tadzik> When I watch the films after reading the book, I'm always disappointed and I happen to hate the films after all

[15:03] *** leprevost joined
[15:03] *** lamstyle left
[15:04] <tadzik> Forrest Gump, Night Watch... maybe Hannibal series wasn't _that_ bad

[15:04] *** Italian_Plumber left
[15:06] *** justatheory joined
[15:08] *** lamstyle joined
[15:08] *** mberends left
[15:22] *** plainhao joined
[15:24] <masak> rakudo: my @a = <foo bar baz>; say @a[3] ~~ /foo/

[15:24] <p6eval> rakudo be80e9: OUTPUT«Method 'match' not found for invocant of class ''␤  in 'Regex::ACCEPTS' at line 5948:CORE.setting␤  in main program body at line 22:/tmp/_OtNlBNk6k␤»

[15:24] *** arnsholt left
[15:24] <masak> this feels familiar? might I have reported this one previously?

[15:24] <masak> rakudo: my @a = <foo bar baz>; say @a[3].WHAT

[15:25] <p6eval> rakudo be80e9: OUTPUT«Any()␤»

[15:25] <masak> rakudo: say Any ~~ /foo/

[15:25] <p6eval> rakudo be80e9: OUTPUT«Method 'match' not found for invocant of class ''␤  in 'Regex::ACCEPTS' at line 5948:CORE.setting␤  in main program body at line 22:/tmp/rdxfe0X2Om␤»

[15:26] <masak> I think I'd maybe like for the match to appear to have been done against an empty string. and then a warning.

[15:26] <moritz_> that can be arranged, if specced

[15:27] * masak glances at the spec. the spec glances back.

[15:27] <jnthn> It must be love!

[15:28] <masak> ♥

[15:29] <masak> Any       Regex     pattern match           .match(X)

[15:29] <moritz_> indeed

[15:29] <masak> there's already a line in the smartmatch table for it.

[15:29] <moritz_> then it's probably a simple matter of moving .match from Cool to Any

[15:29] *** JimmyZ_ joined
[15:30] <masak> "The spec: in half of the cases, it already had it that way" :)

[15:31] *** Italian_Plumber joined
[15:32] <masak> Any       Match     identity                $_

[15:32] <masak> I find that line confuddling.

[15:32] <masak> it's about regex Match objects, yes?

[15:32] <masak> how does the description "identity" square against checking only $_ (which should be only the lhs of the infix:<~~>)?

[15:33] <masak> s/square against/square with/

[15:34] <JimmyZ_> 晚上好，麦高

[15:34] <moritz_> it returns the Match, not the Any

[15:34] <masak> well, that's not "identity". that's "was the Match true?"

[15:35] <moritz_> it's one of two possible identities

[15:35] *** takadonet left
[15:35] <masak> 下午好,卓明亮

[15:35] <masak> moritz_: ok, fair enough.

[15:36] <moritz_> I agree it's not very accurate though

[15:36] <JimmyZ_> 呵呵

[15:36] *** Ross joined
[15:36] <masak> moritz_: I also question whether it's very useful. if I want identity, most often I do... nothing. and that tends to work.

[15:36] <masak> I realize that this is for 'when' semantics.

[15:36] <masak> and I still question whether it's useful.

[15:37] <masak> generally, I'd expect string comparison against the stringified Match in that case.

[15:37] <moritz_> masak: so you expect 'abc' ~~ m/b/ to fail?

[15:37] *** Holy_Cow joined
[15:38] <masak> depends what's in $_

[15:38] *** takadonet joined
[15:38] <moritz_> ~~ sets $_ to 'abc'

[15:38] <masak> oh right!

[15:38] <masak> new semantics.

[15:38] <moritz_> "new"

[15:38] <masak> :)

[15:38] <masak> newer than those in my brain, that is.

[15:39] *** ruoso left
[15:43] <moritz_> \o/ Stuttgart.pm currently brainstorms about making a Rakudo workshop

[15:43] <jnthn> \o/

[15:43] <masak> \o/

[15:43] <jnthn> Ooh, I never went there.

[15:43] <moritz_> they invited me, and offered to pay train ticket and a pizza :-)

[15:44] <jnthn> oooh

[15:44] <jnthn> pizza++

[15:44] <jnthn> That's how know know it's a *real* hackathon.

[15:44] <moritz_> :-)

[15:47] <gottreu> should the perl6.org homepage point to the STD.pm6 and viv files directly in github, or to the perl6/std repo as a whole?

[15:47] * gottreu is finding bugfixes that are at his level.

[15:47] <moritz_> probably to the repo as a whole

[15:50] <dalek> nqp-rx/master: f59925c | pmichaud++ | examples/fib.nqp:

[15:50] <dalek> nqp-rx/master: Add fib.nqp as a recursion benchmark example.

[15:50] <dalek> nqp-rx/master: review: http://github.com/perl6/nqp-rx/commit/f59925ced7063e24384e7708a40384dc23e48221

[15:51] *** mberends joined
[15:52] *** Intensity left
[15:58] *** JimmyZ_ left
[15:59] <mberends> #cpan6sketch in 1 min?

[15:59] *** Holy_Cow left
[16:00] *** Holy_Cow joined
[16:00] <masak> mberends: now now now

[16:00] <Trashlord> now now now

[16:00] <Trashlord> NOW

[16:00] *** dju left
[16:00] *** dju_ joined
[16:00] <Trashlord> oh, I mean hey

[16:01] <masak> hey

[16:01] <gottreu> there's a parrot sketch and a cpan6 sketch, are there perl6 or rakudo sketches?

[16:02] <masak> there used to be a perl6sketch, but it changed names to '#phasers'

[16:02] <masak> and it's three hours from now, I think.

[16:02] <gottreu> masak: Danke.

[16:05] *** JimmyZ_ joined
[16:07] <TimToady> Alias_: they're looking for someone who knows something on #cpan6sketch  :)

[16:08] <masak> Alias_: halp!

[16:09] *** ruoso joined
[16:13] *** leprevost left
[16:17] *** stkowski joined
[16:20] *** JimmyZ_ left
[16:27] *** cdarroch joined
[16:27] *** cdarroch left
[16:27] *** cdarroch joined
[16:31] *** daxim left
[16:35] *** risou joined
[16:39] *** rgrau` left
[16:48] *** uniejo joined
[16:53] *** Holy_Cow left
[16:53] *** masak left
[16:54] *** dju joined
[16:54] *** Holy_Cow joined
[16:55] *** dju_ left
[17:00] *** dju left
[17:01] *** dju joined
[17:01] *** mberends left
[17:01] *** rgrau_ joined
[17:07] *** alester joined
[17:08] *** risou left
[17:14] *** dakkar left
[17:18] *** sjn is now known as __sjn

[17:18] *** sjn_ is now known as sjn

[17:27] <flussence> huh... konqueror accepts -webkit- css prefixes now.

[17:27] *** __sjn is now known as sjn_

[17:27] * flussence is attempting to get try.rakudo.org working in KHTML

[17:28] *** orafu joined
[17:29] *** Chillance joined
[17:31] <moritz_> rakudo: say [+] False, False, True, False

[17:31] <p6eval> rakudo be80e9: OUTPUT«1␤»

[17:32] <ash_> flussence: i use webkit, mozilla and css3 identifiers in the stylesheet on try.rakudo.org, so if it supports css3 properly it just uses that 

[17:32] *** svetlins joined
[17:32] *** svetlins left
[17:32] *** svetlins joined
[17:32] <ash_> the great thing about css, is if it sees a completely bogus statement, it just ignores it, so having all 3 doesn't cause any problems 

[17:33] <flussence> ash_: yeah, it seems to work fine (KDE 4.5.1). Used to be the case that -khtml- had better compatibility than -webkit-.

[17:33] <flussence> now I need to figure out why the JS doesn't work...

[17:34] <flussence> oh, F5 fixed it.

[17:35] *** dju left
[17:35] *** orafu left
[17:37] *** rainerschuster joined
[17:39] *** dju joined
[17:39] *** dju left
[17:39] *** dju joined
[17:43] *** rschuster joined
[17:43] *** rschuster left
[17:44] *** dju left
[17:45] *** dju joined
[17:48] *** frodwith_ is now known as frodwith

[17:50] *** Holy_Cow left
[17:50] *** Holy_Cow joined
[17:50] *** molaf left
[18:02] *** ggoebel left
[18:05] *** uniejo left
[18:09] *** javs left
[18:12] *** ggoebel joined
[18:20] *** pmurias left
[18:24] <dalek> ecosystem: f7b94ff | supernovus++ | projects.list:

[18:24] <dalek> ecosystem: Added hash-has, HashConfig and WebRequest. Removed ww6.

[18:24] <dalek> ecosystem: review: http://github.com/perl6/ecosystem/commit/f7b94ff3dbe1065aaea43cc61ef65b5d72579616

[18:26] *** javs joined
[18:28] *** ggoebel left
[18:28] *** sftp joined
[18:29] *** estrabd_afk is now known as estrabd

[18:30] <ash_> gah, i feel like the second i exit my ssh to the try.rakudo server, it gets all slow and i get worried its about to barf again 

[18:33] *** mberends joined
[18:38] <ash_> .u  

[18:38] <phenny> U+00A0 NO-BREAK SPACE ( )

[18:38] <ash_> .u  

[18:38] <phenny> ash_: 1 SPACE (U+0020)

[18:40] <ash_> when did the spec remove the AUTO* from packages? i see its all handled by a multi CANDO now 

[18:41] <ash_> err, CANDO is for checking if it something responds to a method name, i guess thats not the same

[18:45] <ash_> std: package Foo { AUTOSUB { { "foo" } } }

[18:45] <p6eval> std : OUTPUT«===SORRY!===␤Undeclared name:␤      'AUTOSUB' used at line 1␤Check failed␤FAILED 00:01 116m␤»

[18:51] <ash_> can you inspect a namespace? 

[18:55] *** masak joined
[19:00] *** c9s_ is now known as c9s

[19:03] *** timbunce left
[19:09] *** lamstyle left
[19:09] *** timbunce joined
[19:10] <masak> "Perl 6 has Moose built in" -- while not strictly true, has a certain truthiness to it. http://twitter.com/bingosnet/status/25143238401

[19:10] *** rschuster joined
[19:10] *** rainerschuster left
[19:10] *** rschuster is now known as rainerschuster

[19:10] *** nymacro joined
[19:13] <tadzik> the part of my Rakudo Star talk was about "what modules we won't need now", there were a few

[19:14] <tadzik> . o O ( Perl 6 doesn't have to steal its successor OOP )

[19:14] <masak> tadzik: I might have a section on that in my madness/method talk in Paris next month.

[19:14] <jnthn> method madness() { ... }

[19:14] <tadzik> btw, what happened to alexm?

[19:15] <tadzik> He was giving my a talk with a traslated slides of mine on the day of first R* release, and I haven't seen him ever since to ask how it was

[19:16] <tadzik> btw, you may know, where on the http://trac.parrot.org/parrot/wiki/Languages page is the url to LOLCODE repo?

[19:18] <ash_> tadzik: what do you mean? like https://svn.parrot.org/languages/lolcode/ ? 

[19:18] <tadzik> ash_: exactly, thank you. Where is that url?

[19:19] *** lamstyle joined
[19:19] <ash_> i guessed it? all the stuff in the parrot trac for languages is in the svn.parrot.org/langauges repo 

[19:19] <ash_> https://svn.parrot.org/languages/ has the whole lot of them 

[19:20] <tadzik> I guessed. Exactly. I think it'd be nice for it to be listed on the page somewhere

[19:20] <tadzik> Parrot folks are busy optimizing stuff now, I'll maybe poke them later :)

[19:21] *** jaldhar left
[19:23] *** wamba joined
[19:37] <diakopter> masak: oi

[19:37] <masak> diakopter: io

[19:38] *** nymacro left
[19:38] *** Guest23195 left
[19:39] <masak> question: can http://rt.perl.org/rt3/Ticket/Display.html?id=58022 be closed?

[19:39] <moritz_> yes

[19:40] <masak> what's the status on tests for 'as'?

[19:41] <moritz_> t/spec/S06-traits/as.t has some

[19:41] * masak closes

[19:41] <diakopter> may I ask what 'as' is

[19:41] <moritz_> coercion

[19:41] <Util> perl6: my @z = 1,2 X 3,4 X 5,6; @z.perl.say;

[19:41] <p6eval> rakudo be80e9: OUTPUT«No applicable candidates found to dispatch to for 'infix:<X>'. Available candidates are:␤:(Any $lhs, Any $rhs)␤␤  in main program body at line 22:/tmp/Fb9IZKjNqn␤»

[19:41] <p6eval> ..pugs: OUTPUT«[1, 2]␤»

[19:41] <masak> rakudo: sub foo($a as Str) { say $a.WHAT }; foo(42)

[19:41] <moritz_> rakudo: sub f($x as Int) { say $x.perl }; f('123')

[19:42] <p6eval> rakudo be80e9: OUTPUT«Str()␤»

[19:42] <p6eval> rakudo be80e9: OUTPUT«123␤»

[19:42] <masak> :P

[19:42] <moritz_> :-)

[19:42] <diakopter> masak: http://blogs.msdn.com/b/ericlippert/archive/2010/09/16/is-is-as-or-is-as-is.aspx

[19:43] <Util> perl6: ( 1,2 X 3,4 X 5,6 ).perl.say;

[19:43] <p6eval> rakudo be80e9: OUTPUT«No applicable candidates found to dispatch to for 'infix:<X>'. Available candidates are:␤:(Any $lhs, Any $rhs)␤␤  in main program body at line 22:/tmp/lMbqBtJgTL␤»

[19:43] <p6eval> ..pugs: OUTPUT«((1, 3, 5), (1, 3, 6), (1, 4, 5), (1, 4, 6), (2, 3, 5), (2, 3, 6), (2, 4, 5), (2, 4, 6))␤»

[19:43] <Util> Why does this fail in Rakudo?

[19:43] <masak> pugs is right. rakudo used to handle this.

[19:43] <masak> it's some parsing issue.

[19:43] <moritz_> not parsing

[19:43] <moritz_> absence of slice/tree context

[19:43] <masak> oh!

[19:44] <masak> diakopter: love the title :P

[19:44] *** itz joined
[19:44] <sbp> "I do not necessarily write about things that are important for developers to understand; I write about things that are fabulous! And the person who gets to decide what is fabulous is me."

[19:44] <sbp> (from is is as or is as is, a comment by the author)

[19:45] *** wamba left
[19:46] <masak> sbp: "all your money back if you're not satisfied" :)

[19:47] *** takadonet left
[19:48] <Util> moritz_: S03 says it should work as stated.

[19:48] <moritz_> Util: right; I just disagree with masak's diagnosis of why it doesn't work today

[19:48] <masak> and I agree with moritz_. :P

[19:48] <moritz_> (at least in rakudo)

[19:48] <diakopter> masak: so basically, in C#, they're the the same operation, just with different return types at the type-checking level.

[19:49] <masak> diakopter: cute.

[19:49] <Util> Is there a workaround syntax? (for a RosettaCode solution I am working on)

[19:49] * moritz_ knows none

[19:50] <diakopter> does Perl 6 have a "coercion succeeded" test (similar to "is" in C# as mentioned above)

[19:50] <pmichaud> rakudo:  (( 1,2 X 3,4 ) X (5,6)).perl.say

[19:50] <p6eval> rakudo be80e9: OUTPUT«((1, 5), (1, 6), (3, 5), (3, 6), (1, 5), (1, 6), (4, 5), (4, 6), (2, 5), (2, 6), (3, 5), (3, 6), (2, 5), (2, 6), (4, 5), (4, 6))␤»

[19:50] <masak> Util: writing your own sub that DTRT.

[19:50] <pmichaud> oh, that's flattening.

[19:51] <pmichaud> bleh.

[19:51] <masak> flattening will get you nowhere!

[19:51] <moritz_> any objections to bumping PARROT_REVISION?

[19:51] <diakopter> I mean, I retract my question.

[19:51] <jnthn> .oO( She really flattened me... )

[19:51] <pmichaud> moritz_: no objection... I tested earlier (it worked) but didn't get to commit the bump.

[19:52] *** patspam left
[19:52] <masak> jnthn: you probably shouldn't have gone to her flat, then.

[19:53] <dalek> rakudo: 1222485 | moritz++ | t/spectest.data:

[19:53] <dalek> rakudo: run two more test files

[19:53] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/12224852589433922e6ae657b73bbb2ac96e58b1

[19:53] <dalek> rakudo: acc8fcb | moritz++ | build/PARROT_REVISION:

[19:53] <dalek> rakudo: bump PARROT_REVISION to 2.8.0 release

[19:53] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/acc8fcbdf15aa25e31992169ec47184a0d1a58ce

[19:53] <dalek> rakudo: ac9fdb9 | moritz++ | t/spectest.data:

[19:53] <dalek> rakudo: fix test nmae, moritz--

[19:53] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/ac9fdb9f4beee9ba3c6a46824028ce4934e3b88d

[19:54] <Util> jnthn: Do you have MSI-building directions for R* written up anywhere? (presuming you did the 2010.07 MSI)

[19:54] <jnthn> Util: No, writing them up is on my todo list.

[19:54] <moritz_> anybody wants to do the release on Thursday?

[19:54] <Util> jnthn: OK, thanks

[19:54] <jnthn> Util: But basically, just used the MSI builder built into Visual Studio.

[19:55] <jnthn> A setup project or worreva it's called

[19:55] <Util> (which I lack)

[19:55] <jnthn> So the instructions won't be very useful to anyone without VS

[19:55] <jnthn> Right. 

[19:55] <moritz_> if nobody wants to, I can do it; but I've done two releases before, and don't need practise anymore :-)

[19:58] <flussence> rakudo: say Hash.new(:key('A'|'B'|'C'), :value<bronze>).perl # is it possible to write this out shorter? (from http://irclog.perlgeek.de/perl6/2010-09-20#i_2845966)

[19:58] <p6eval> rakudo be80e9: OUTPUT«{"key" => any("A", "B", "C"), "value" => "bronze"}␤»

[19:58] <masak> huh.

[19:59] <moritz_> rakudo: say { key => any(<A B C>), :value<bronze> }.perl

[19:59] <p6eval> rakudo be80e9: OUTPUT«{"key" => any("A", "B", "C"), "value" => "bronze"}␤»

[19:59] <masak> flussence: that doesn't look like it means what you probably think it means.

[19:59] <masak> then again, I haven't checked the backlog reference.

[19:59] <moritz_> anyway, { ... } is shorter than Hash.new(...)

[19:59] *** Italian_Plumber left
[19:59] <masak> :)

[20:00] <ash_> rakudo: {key => 'A'|'B'|'C', :value<bronze>}.perl.say

[20:00] <p6eval> rakudo be80e9: OUTPUT«{"key" => any("A", "B", "C"), "value" => "bronze"}␤»

[20:00] <flussence> yeah, I was being verbose there just to rule out everything...

[20:00] <masak> the essence of flussence's question is very worthwhile, though. I'd definitely like for all of the basic types to be creatable via constructors on their type objects.

[20:00] *** Italian_Plumber joined
[20:00] <Util> rakudo: my %h = < A B C > X=> 'bronze'; %h.perl.say;

[20:00] <p6eval> rakudo be80e9: OUTPUT«{"A" => "bronze", "B" => "bronze", "C" => "bronze"}␤»

[20:01] <flussence> (it's not originally my question, so I don't know the right answer :)

[20:01] <ash_> Util++ i didn't even think of that 

[20:01] <masak> flussence: what I meant was that you have one key named 'key' and one key named 'value'. I figured that with those names, there was a high probability in confusion in the questioner. :)

[20:02] <masak> ash_: that's not the same, though. doesn't have the junction.

[20:02] <Util> ash_: RosettaCode is honing my golfing^Widioms.

[20:02] <Util> masak: I was assuming that flussence did not really want the junction; that it was in error.

[20:02] <ash_> it's probably closer to what the original questioner wanted though, i imagine... 

[20:03] <flussence> whoops, yeah that line of code I wrote was completely wrong

[20:03] <masak> Util: an assumption as good as any, I think.

[20:03] * flussence needs more coffee

[20:03] * ash_ has spent the last 2 weeks trying to not drink coffe... or caffeine 

[20:05] *** Italian_Plumber left
[20:10] *** ash_ left
[20:11] *** daemon left
[20:11] *** daemon joined
[20:12] <moritz_> any suggestions for a release name?

[20:12] <hudnix> rakudo: ([X] 1,2).perl.say

[20:12] <dalek> rakudo: 750a024 | moritz++ | docs/announce/2010.09:

[20:12] <dalek> rakudo: [release] initial 2010.09 announcement

[20:12] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/750a02453757aea2443311c6630c64c11b186dd6

[20:12] <moritz_> any perlmongers group that did something Perl 6 related in the last few months?

[20:12] <jnthn> Did we already have an Oslo?

[20:12] <jnthn> I guess so

[20:12] <p6eval> rakudo be80e9: OUTPUT«maximum recursion depth exceeded␤  in 'Block::count' at line 5898:CORE.setting␤  in 'Block::count' at line 5902:CORE.setting␤  in 'Any::join' at line 1␤  in 'List::perl' at line 2631:CORE.setting␤  in <anon> at line 1␤  in 'Any::join' at line 1␤  in 'List::perl' at line

[20:12] <p6eval> ..2631:CORE.s…

[20:12] <masak> I believe in finding ways to code that don't require stimulants. :)

[20:12] <moritz_> jnthn: yes, after NPW

[20:13] <jnthn> masak: I did.

[20:13] <jnthn> masak: I use a depressant instead.

[20:13] <jnthn> :P

[20:13] <jnthn> But I drink coffee in a morning too.

[20:13] <jnthn> So it all balances out perfectly.

[20:14] <jnthn> moritz_: Yeah, I seemed to remember they'd already had it. Otherwise woulda been good.

[20:14] <masak> or, put differently, I don't want to limit my coding to moments of some kind of chemical high. I like coding too much for that.

[20:14] *** frew is now known as frooh

[20:14] *** masak left
[20:17] <sjohnson> yo dudes

[20:19] *** pjcj left
[20:19] *** timbunce left
[20:20] <jnthn> o/ sjohnson 

[20:20] <sjohnson> hi!

[20:24] *** pjcj joined
[20:26] *** timbunce joined
[20:30] <avuserow> hello #perl6!

[20:31] <avuserow> I'd like to give some kudos to all the people who have been optimizing rakudo. It's certainly a big difference from when I last wrote code for it.

[20:32] <jnthn> avuserow: Thanks for the encouragement. :-) There's plenty of optimization to go yet, but happy that you're finding what's improved so far helpful. :-)

[20:32] <avuserow> (that was about a year ago, and at least the startup time has been improved a ton.)

[20:33] <avuserow> it's to the point now where I'll start using it for random one-off things for classwork instead of perl5

[20:39] <tadzik> how likely is it to use some post-2.8.0 Parrot for the Rakudo release?

[20:42] <PerlJam> tadzik: you mean to get the recent optimizations in?

[20:42] <tadzik> ywis :)

[20:43] <tadzik> and maybe even gc_massacre

[20:50] *** Mowah left
[20:53] *** mberends left
[20:56] <flussence> yay, I got a try.rakudo.org server running locally

[20:57] <flussence> now to see if I can break it...

[20:58] *** timbunce left
[21:01] *** snearch left
[21:03] *** mberends joined
[21:05] *** timbunce joined
[21:07] *** Ross left
[21:07] *** justatheory left
[21:11] *** Intensity joined
[21:11] *** ruoso left
[21:14] *** estrabd left
[21:16] *** estrabd joined
[21:19] *** leprevost joined
[21:26] *** javs left
[21:34] *** ZZamboni joined
[21:34] *** ZZamboni left
[21:38] *** justatheory joined
[21:47] *** NordQ joined
[21:47] *** Trashlord left
[21:50] *** linux-m00n joined
[21:52] *** tadzik left
[21:54] *** pythonian4000afk is now known as pythonian4000

[21:55] *** leprevost left
[21:57] *** NordQ left
[21:57] *** NordQ joined
[21:59] *** NordQ left
[21:59] *** NordQ joined
[22:00] *** LionMadeOfLions joined
[22:01] *** flatwhatson left
[22:03] *** lamstyle left
[22:05] *** NordQ left
[22:07] *** lamstyle joined
[22:10] *** Holy_Cow left
[22:12] *** rainerschuster left
[22:14] *** linux-m00n left
[22:14] *** flatwhatson joined
[22:19] *** timbunce left
[22:19] <TimToady> so I'm translating a relatively large program, and now it compiles, and I run it and I get "Too many positional parameters passed; got 2 but expected 1"

[22:19] <TimToady> from somewhere...

[22:20] <jnthn> It...really says "somewhere"?

[22:20] <TimToady> no, it says nothing

[22:20] <TimToady> that's all it says

[22:20] <TimToady> the stuff in quotes

[22:21] <jnthn> :|

[22:21] <diakopter> this is in pugs, right? ;)

[22:21] <TimToady> perhaps it's because I have a:     say $! if $!;

[22:21] <jnthn> TimToady: Can sometimes happen when something goes horribly wrong with e.g. code running to set up meta-objects.

[22:22] <TimToady> well, I did just tranlate a hash/array solution to a class-based solution... :/

[22:23] <jnthn> Sounds possible. I can probably track it down if I have the code.

[22:23] *** dju left
[22:23] <TimToady> trying to run it without the try, which was really just a safegard in raw mode

[22:23] <TimToady> ah, $! is apparently only reporting the first line

[22:24] <jnthn> Oh.

[22:24] <jnthn> Yeah, I guess it doesn't dump the whole backtrace by default.

[22:24] <TimToady> all the location info is in subsequent lines

[22:24] <jnthn> That's probably right much of the time...

[22:24] <jnthn> Well, it's more that when it's caught at the top level, it prints $! and then goes and prints the backtrace.

[22:25] <jnthn> Rather than the actual message containing that all stringified too.

[22:25] <TimToady> well, perl 5's message usually has a line number in the first line

[22:25] <jnthn> Ah.

[22:25] <TimToady> with rakudo I usually have to look down the list for the one line number that makes sense

[22:26] <jnthn> The first one in the list is usually meant to, unless the failure occurs somewhere in CORE

[22:27] <TimToady> which it was, in this case

[22:27] <jnthn> *nod*

[22:27] <TimToady> EnumMap::new, specifically :)

[22:27] <jnthn> I can argue showing the core frames by default either way.

[22:27] <sjohnson> hi!

[22:27] <jnthn> When the failure is in some closure, it's maybe less confusing to know it was actually invoked by map, for example.

[22:30] <jnthn> TimToady: Anyways, opinions on improving/re-shuffling error info welcome. Especially in email-to-rakudobug form.

[22:31] <jnthn> Once I get my head out of the meta-model re-implementation, I can take a look at improvements there. Other @other can.

[22:32] <jnthn> Morning meeting in Malmö, sleep time. o/

[22:32] *** estrabd is now known as estrabd_afk

[22:34] *** araujo left
[22:37] *** dju joined
[22:51] *** mjk joined
[22:53] *** leprevost joined
[22:56] *** Trashlord joined
[22:58] *** mfollett left
[23:00] *** mfollett joined
[23:00] *** mfollett left
[23:08] *** leprevost left
[23:16] <flussence> rakudo: sub tetrate { [**] * xx * }; say tetrate(2, 4)

[23:16] <p6eval> rakudo 750a02: OUTPUT«PackFile_unpack: This Parrot cannot read bytecode files with version 8.4.␤␤PackFile header failed during unpack␤»

[23:16] <flussence> caught it at a bad time?

[23:17] <diakopter> weird

[23:18] <flussence> just tried it locally and it wouldn't work anyway, it wanted $^a and $^b instead :(

[23:25] *** ash_ joined
[23:27] *** s1n left
[23:27] <ash_> so

[23:27] <ash_> who wants to help me with something? 

[23:27] <ash_> i know someone wants to, who knows javascript and/or json? :P 

[23:27] <flussence> !

[23:27] <flussence> me(-ish)

[23:28] <ash_> i want to get working on the tutorial system in try.rakudo, it would be nice/awesome/useful/helpful if you want to help out 

[23:29] <flussence> ok, I've been poking around the code already :)

[23:29] <flussence> (not that bit so far)

[23:31] *** alester left
[23:31] <ash_> http://github.com/moritz/try.rakudo.org/blob/master/frontend/public/js/try.js#L82 i have a command in there already that is the beginings of this 

[23:32] <ash_> basically, i have a list of commands in javascript, and if the stdin (the textbox) has something that matches, then i execute the command 

[23:33] <ash_> so, saying, 'chapter 1' should load chapter 1's text and so on

[23:35] <ash_> http://github.com/moritz/try.rakudo.org/blob/master/frontend/data/chapters/index.js has the index of the chapters, i was going to build all of the content from those, in that folder i started a 1.js which should be chapter 1, i need to figure out a bit more on how you'll specify input and output, so you can tell when to progress through the tutorial though. i haven't figured that out yet, i imagine it will be a lot of regex's though 

[23:37] <flussence> seems straightforward enough

[23:37] *** rgrau_ left
[23:39] <ash_> i'll need to add commands to move forward/backwards through the steps of the chapter, but each chapter will be a set of steps, i imagine, along the lines of "try typing 1 + 3" "try [+] 1..3" 

[23:42] *** s1n joined
[23:46] <flussence> I've made a start on it, anyway: http://github.com/flussence/try.rakudo.org/commit/d085ee7

[23:47] *** araujo joined
[23:48] <ash_> ping moritz_ 

[23:50] <ash_> have you figured out how to run the server andstuff on your computer? 

[23:50] <flussence> yep

[23:51] <ash_> cool, i tried to keep the requirements basic, it uses Mojo and IO::HalfDuplex so far 

[23:52] *** mjk left
[23:54] *** Italian_Plumber joined
[23:55] <ash_> flussence: do you want me to merge any of your changes up? 

[23:56] <flussence> go ahead if you think they're useful

[23:57] <ash_> kk

[23:57] *** ggoebel joined
[23:59] <ash_> hmm

