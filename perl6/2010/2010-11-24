[00:03] *** Guest72060 left
[00:03] <jnthn> sleep &

[00:12] *** meppl joined
[00:13] <masak> decommute &

[00:13] *** masak left
[00:28] *** whiteknight joined
[00:28] *** lue left
[00:28] *** lue joined
[00:34] *** mikehh left
[00:34] *** sftp left
[00:39] *** risou left
[00:43] *** Grimnir_ joined
[00:57] <lichtkind> blog post: http://blogs.perl.org/users/lichtkind/2010/11/grantreport---perl-6-tablets---third-week.html

[00:58] <lichtkind> good night  @all

[00:58] *** lichtkind left
[00:59] *** QinGW joined
[01:01] *** Chillance left
[01:03] *** pmichaud left
[01:04] *** Juerd left
[01:04] *** tadzik left
[01:04] *** hatseflats left
[01:05] *** redicaps joined
[01:11] *** envi joined
[01:16] *** wamba left
[01:19] *** rgrau__ left
[01:44] *** tadzik joined
[01:45] *** cdarroch left
[01:47] *** hatseflats joined
[01:48] *** pmichaud joined
[01:48] *** Util joined
[01:51] *** ch3ck joined
[02:00] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_index_tablet

[02:05] *** Juerd joined
[02:07] *** nowl joined
[02:08] *** pmichaud left
[02:10] *** tadzik left
[02:11] *** Juerd left
[02:11] *** Util left
[02:12] *** hatseflats left
[02:30] *** bluescreen joined
[02:30] *** bluescreen is now known as Guest8161

[02:35] *** ch3ck3r joined
[02:37] *** molaf_ joined
[02:39] *** ch3ck left
[02:40] *** molaf left
[02:42] *** whiteknight left
[02:49] *** nymacro joined
[02:50] *** _twitch joined
[02:53] *** tadzik joined
[02:55] *** pmichaud joined
[02:55] *** Util joined
[02:56] *** hatseflats joined
[03:01] *** hercynium left
[03:05] *** Juerd joined
[03:05] *** geoffrey joined
[03:05] *** geoffrey left
[03:06] *** geoffrey joined
[03:09] *** geoffrey left
[03:21] *** Guest8161 left
[03:40] *** geoffrey joined
[03:43] *** am0c joined
[03:43] <edenc> how do I decl

[03:43] <edenc> uhm

[03:43] <edenc> how do I declare named captures in a rule?

[03:45] <Tene> edenc: $<foo>=(...)

[03:46] *** TiMBuS left
[03:46] <edenc> hmm, "symbol foo not predeclared"

[03:46] <edenc> I have an inline code block after the match

[03:47] <edenc> that's trying to access the value of foo

[03:47] *** geoffrey left
[03:47] <edenc> apparently, the wrong way

[03:47] <TimToady> paste or nopaste it?

[03:49] <edenc> https://gist.github.com/713076

[03:49] *** TiMBuS joined
[03:49] <TimToady> use $<id> inside the block too

[03:49] <edenc> ah

[03:49] <edenc> sweetness

[03:52] <edenc> what if I want to declare a named rule multiple times and have that imply '|', as in: rule foo { '/bar' }, rule foo { '/baz' }, instead of rule foo { '/bar' | '/baz' }

[03:52] <diakopter> protoregex

[03:53] <diakopter> http://perl6advent.wordpress.com/2009/12/24/day-24-the-perl-6-standard-grammar/

[03:53] <edenc> yeah, I saw that in S05 but couldn't quite grasp how to use it

[03:53] <diakopter> search in that article

[03:53] <diakopter> for protoregex :)

[03:54] <edenc> right, thanks

[03:55] <diakopter> TimToady: is that article right?  'proto token' vs 'proto rule' ?

[03:58] <edenc> ok, that worked, thanks

[03:58] <diakopter> yay; /me knew something correct for once

[03:58] <edenc> what does the "sym<>" construct after the rule name mean?

[03:58] <edenc> and... why is it needed

[03:59] *** jaldhar joined
[03:59] <diakopter> that tells the rule what <sym> means inside the rule

[03:59] <TimToady> and remembers the string in case you want to make an operator later

[03:59] <diakopter> so actually those literals  ('if' etc) can be replaced with  <sym>

[04:00] <TimToady> nowadays the proto wants {*} instead of { <...> }

[04:00] <TimToady> at least in STD, not sure whether rakudo has tracked that yet

[04:00] <edenc> yeah, it doesn't work in rakudo

[04:00] <edenc> I just built it fresh

[04:01] <TimToady> dinner &

[04:01] <edenc> I'm confused as to why I declare "proto token" but then extend it via rules

[04:02] <diakopter> what I was asking

[04:02] <diakopter> (also)

[04:02] <diakopter> does it work with token also?

[04:02] <edenc> yes

[04:02] <edenc> I just swapped it out for rule

[04:03] <diakopter> probably it should enforce them to be the same, I'd think

[04:06] <edenc> swapping the literals out for <sym> doesn't work

[04:06] <diakopter> hm

[04:07] <diakopter> oh, try <.sym>

[04:07] <edenc> not on rakudo, at least

[04:07] <edenc> nope

[04:07] <edenc> well

[04:07] <edenc> actually

[04:07] <edenc> I might be doing something wrong

[04:08] * diakopter might be very mistaken about able to swap them out

[04:08] <edenc> yeah, it works with literals, but obviously, doesn't work with subrules

[04:13] *** shortcircuit left
[04:17] *** jaldhar left
[04:22] *** shortcircuit joined
[04:29] *** cognominal left
[04:29] *** nowl left
[04:32] *** meppel joined
[04:33] *** shortcir1uit joined
[04:36] *** meppl left
[04:38] *** shortcircuit left
[04:38] *** Trashlord left
[04:39] *** TiMBuS_ joined
[04:39] <dalek> 6model: f443c7e | diakopter++ | dotnet/runtime/Runtime/Ops/Primitive.cs:

[04:39] <dalek> 6model: [dotnet] add a length_str Op

[04:39] <dalek> 6model: review: https://github.com/jnthn/6model/commit/f443c7e52f

[04:39] <dalek> 6model: c46ad28 | diakopter++ | / (5 files):

[04:39] <dalek> 6model: [dotnet] bunches of integer expression (binary operations returning int & bool) code-generators

[04:39] <dalek> 6model: incremental progress on regex dynamic register (for integer variables & labels) generation

[04:39] <dalek> 6model: fix typo in DNST::Class

[04:39] <dalek> 6model: slight adjustments in Cursor

[04:39] <dalek> 6model: fix plan count in 28-subclass.t

[04:39] <dalek> 6model: review: https://github.com/jnthn/6model/commit/c46ad28d45

[04:41] *** TiMBuS left
[04:43] *** meppel left
[04:52] *** Sarten-X left
[04:54] *** geoffrey joined
[04:54] *** geoffrey left
[05:00] *** Sarten-X joined
[05:13] <lue> y o hai o/

[05:19] *** Trashlord joined
[05:25] *** jaldhar joined
[05:27] *** araujo left
[05:33] <dalek> mu: 714cf3a | cotto++ | misc/dalek-conf.json:

[05:33] <dalek> mu: add plobsing's extraction of pirc to dalek

[05:33] <dalek> mu: review: https://github.com/perl6/mu/commit/714cf3a233

[05:47] <plobsing> it appears pirc has 16 open tickets

[05:58] *** sftp joined
[06:15] *** sftp left
[06:16] *** masak joined
[06:21] <masak> lue: watched last ep of DW. laughed. cried.

[06:22] *** flatwhatson left
[06:23] <mberends> masak: o/

[06:23] <masak> mberends! \o/

[06:23] * mberends -> $work :(

[06:23] *** mberends left
[06:24] * masak hopes mberends comes back soon

[06:35] *** flatwhatson joined
[06:41] *** am0c left
[06:54] *** wtw joined
[06:57] *** Woodi left
[07:05] *** Woodi joined
[07:07] <ch3ck3r> morgääähn

[07:08] <masak> o/

[07:10] <ch3ck3r> morrn masak 

[07:11] <masak> ch3ck3r: any Perl 6 plans for the day?

[07:12] *** _kaare joined
[07:12] <ch3ck3r> masak: not yet

[07:14] *** Woodi left
[07:14] <sorear> edenc: diakopter: rule/token/regex just set the initial states of :sigspace and :ratchet, they don't affect the inherent type of the Regex object in any way

[07:15] <sorear> token {...} is exactly equivalent to regex {:ratchet ...} or rule {:!sigspace ...}

[07:15] <sorear> proto token, proto rule, and proto regex are all exactly the same, since {*} is not affected by regex modes

[07:20] <sorear> hrm, nearly half of niecza-std's time was spent in the LTM module

[07:24] *** Woodi joined
[07:35] <diakopter> oh

[07:46] * masak .oO( Longest-Time Matching )

[07:47] <sorear> well, I haven't really bothered to optimize LTM up to now

[07:51] *** sunnavy_ left
[07:52] <masak> Su-Shee can has snow, too :) http://twitter.com/sheeshee/status/7339644857352192

[07:53] <sorear> masak: you wouldn't happen to know [anyone who knows]? Croatian, would you?

[07:53] <masak> not anyone who knows it in depth, no.

[08:17] <sorear> masak: no, GGE is still longer-time.

[08:17] <masak> :)

[08:17] *** Woodi left
[08:19] *** Woodi joined
[08:21] *** justatheory left
[08:34] *** agentzh joined
[08:37] *** plobsing left
[08:37] *** burning_aces joined
[08:39] *** fhelmberger joined
[08:41] *** _twitch left
[08:45] *** snearch joined
[08:56] <cosimo> sorear: i know one

[09:03] <sorear> where is tadzik from?

[09:03] <tadzik> Poland

[09:03] <tadzik> I've been to Croatia once, but I don't think that counts :)

[09:03] <tadzik> hello btw

[09:03] <masak> hi, tadzik 

[09:04] <sorear> tadzik: NotFound tells me that modern Spanish has a degenerate CharLingua, and suggested that I investigate one of the Slavic languages that uses Latin or vice versa

[09:05] *** proller_ left
[09:05] <sorear> Does Polish have any cases where .chars in grapheme mode is intuitively wrong?

[09:05] <tadzik> I don't think I understand this

[09:05] <tadzik> Care to provide an example?

[09:07] <sorear> That's exactly the problem

[09:07] <sorear> I haven't seen a single case where CharLingua is different from Grapheme

[09:10] <sjohnson> masak: o/

[09:11] *** xinming_ joined
[09:11] <masak> sjohnson: \o

[09:12] <sorear> Grapheme is very much different from Codepoint; graphs "n̈" is 1, but codes "n̈" is 2

[09:12] <sorear> Is there any case in Polish where graphs and chars should disagree?

[09:13] <tadzik> oh, yes, I think

[09:13] <tadzik> like thre is 'ch', which is 2 letters, but pronounced exactly like 'h'. Is that what you mean?

[09:14] <sorear> imagine you know nothing about data representation and you're playing with Perl 6 for the first time.  You know that > chars "A" prints 1 and > chars "tadzik" prints 6.  What do you expect after > chars "ch" ?

[09:14] *** xinming left
[09:15] <tadzik> same with rz - ż

[09:15] <tadzik> sorear: 2 chars

[09:15] <sorear> Would you expect 1 after chars "ż"?

[09:16] <tadzik> for there are exceptions: marznąć is pronounced "marznąć", not mażnąć

[09:16] <tadzik> sorear: yes

[09:17] <sorear> tadzik: are there any basic string operations that intuitively should treat "rz" as a unit?

[09:18] <tadzik> I don't think so

[09:19] <tadzik> it matters only when speaking

[09:28] *** ch3ck3r left
[09:35] *** cjk101010 joined
[09:39] *** dakkar joined
[09:42] <dalek> niecza: 6a9add7 | sorear++ | lib/Cursor.cs:

[09:42] <dalek> niecza: Use a more clever algorithm for collecting fates

[09:42] <dalek> niecza: 

[09:42] <dalek> niecza: Takes 12% off STD SAFE.setting time.

[09:42] <dalek> niecza: review: https://github.com/sorear/niecza/commit/6a9add7829

[09:45] <sorear> one thing I'm quickly learning is that System.Collections.Generic.Dictionary`1 and all its kin are hopelessly inefficient

[09:46] <moritz_> that's basically a hash, right?

[09:51] <sorear> yes

[09:53] *** araujo joined
[09:54] <sorear> the one gripe I have with the mono profiler is how it handles recursive functions

[09:58] *** palik joined
[09:59] *** redicaps left
[10:02] <dalek> rakudo: de61cd9 | moritz++ | build/PARROT_REVISION:

[10:02] <dalek> rakudo: bump PARROT_REVISION to get some testing

[10:02] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/de61cd9e8c

[10:03] *** QinGW left
[10:05] *** mavrc joined
[10:06] *** snearch left
[10:06] *** satyavvd joined
[10:14] *** redicaps1 joined
[10:30] *** ch3ck joined
[10:33] <dalek> niecza: b77fc74 | sorear++ | lib/Kernel.cs:

[10:33] <dalek> niecza: Use preallocated Bool objects

[10:33] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b77fc742ed

[10:33] <dalek> niecza: 923d289 | sorear++ | lib/Cursor.cs:

[10:33] <dalek> niecza: Avoid reallocating Close buffer

[10:33] <dalek> niecza: review: https://github.com/sorear/niecza/commit/923d2899b0

[10:35] *** timbunce joined
[10:37] <jnthn> o/ #perl6

[10:38] <moritz_> \o

[10:40] <masak> jnthn: \o

[10:40] <jnthn> masak! \o/

[10:42] *** am0c joined
[10:43] <ch3ck> masak's one is a hitler smiley

[10:43] * sorear out

[10:43] <moritz_> ch3ck: not every stretched out arm is a hitler greeting

[10:45] <ch3ck> the one in the smiley is very straight upwards

[10:45] <masak> still, it's nice to have triggered the Godwin switch. we don't do that very often in here at all.

[10:45] <ch3ck> just like they did

[10:45] <moritz_> so what? soccer referees use that gesture all the time too

[10:46] <masak> moritz_: oh wow. I never realized that.

[10:46] <ch3ck> masak is a soccer referee?

[10:46] <ch3ck> oO

[10:46] <masak> ch3ck: I must say your logic is impeccable.

[10:46] *** tzhs joined
[10:49] <ch3ck> the logic is very clear.. if this greeting is used mainly by soccer referees and nazis, i hope you're a soccer referee

[10:49] <moritz_> actually I'm not a good swimmer, but I suspect that if you swim the crawl, there are also times when you extend one arm

[10:49] <moritz_> so I kinda think that masak++ is a swimmer

[10:50] <masak> yes, but I swim like this: /o\

[10:50] <masak> :)

[10:50] <moritz_> as a table tennis referee I usually don't put the arm up that high, but ASCII gives little choice regarding the angle for the forward slash

[10:51] <moritz_> masak: with deflector shields at the front? :-)

[10:51] <huf> i dont think it's the greeting that makes the nazi

[10:52] <huf> rather, the murderous rampage ;)

[10:52] <moritz_> ... which masak only displays towards bugs :-)

[10:52] <huf> awwwww. hug a bug?

[10:53] <huf> good thing version control keeps them alive indefinitely :)

[10:53] *** hugme joined
[10:53] *** ChanServ sets mode: +v hugme

[10:53] <moritz_> hugme: hug ch3ck 

[10:53] * hugme hugs ch3ck

[10:55] <ch3ck> well, we could just wait and see if masak one day makes a /nick massaker

[10:55] <ch3ck> or even with the 2 s upper case

[10:56] <ch3ck> if not, he probably is a swimmer or a soccer referee :D

[10:56] <moritz_> or maybe just a normal-ish dude who happens to like ASCII art

[10:57] <moritz_> (I wouldn't go as far as calling masak "normal" :-)

[10:57] <masak> thanks, I think. :)

[10:57] <moritz_> you're welcome

[10:57] <moritz_> otoh I don't think I've ever met somebody whom I'd call "normal"

[10:59] *** Raynes left
[11:00] <jnthn> I did once. I was stood up and they were lying down. Seemed very normal to me.

[11:01] <moritz_> ah, the pain

[11:02] *** rgrau_ joined
[11:03] <thepain> ;)

[11:03] <moritz_> hugme: hug thepain

[11:03] * hugme hugs thepain

[11:04] <ch3ck> hugme: hug me

[11:04] * hugme hugs ch3ck

[11:04] <ch3ck> thx

[11:13] *** molaf_ left
[11:20] <tadzik> new rakudo can't make reaclclean

[11:21] <tadzik> one needs to manually perl Configure.pl so the Makefile works

[11:22] *** satyavvd left
[11:23] <masak> not sure I follow. you're saying you have to generate the Makefile in order to do 'make realclean'? how could it not be so?

[11:26] <tadzik> masak: things changed, and Makefile used files that now do not exist

[11:26] *** jedai_ joined
[11:29] *** jedai left
[12:01] *** _sri left
[12:01] <masak> tadzik: hm, that does sound wrong.

[12:02] *** _sri joined
[12:07] <jnthn> Mmmm....bratwurst for lunch :)

[12:07] *** cognominal joined
[12:08] <tadzik> masak: they have removed PIRC, and the old makefile referred to it; new one does not

[12:18] *** bluescreen joined
[12:19] <masak> tadzik: is there an easy/obvious fix?

[12:19] *** bluescreen is now known as Guest16272

[12:23] <moritz_> tadzik: just use 'git clean -xdf' to clear out your parrot repo

[12:24] <moritz_> or use a fresh checkout

[12:24] <tadzik> moritz_: I manually regenerated the makefile and then --gen-parrot worde

[12:25] <tadzik> * worked

[12:26] <tadzik> masak: what I said

[12:29] *** orafu left
[12:29] *** OuLouFu joined
[12:29] *** OuLouFu is now known as orafu

[12:59] *** Guest16272 left
[13:02] *** daxim joined
[13:03] *** am0c left
[13:06] *** ggoebel joined
[13:14] *** Guest16272 joined
[13:14] *** Guest16272 left
[13:17] *** takadonet joined
[13:19] *** MayDaniel joined
[13:23] *** Patterner left
[13:25] <takadonet> morning all

[13:26] *** Chillance joined
[13:26] <masak> takadonet: \o

[13:26] *** wamba joined
[13:27] *** flussence joined
[13:29] *** am0c joined
[13:29] *** wamba left
[13:29] *** wamba joined
[13:29] *** MayDaniel left
[13:35] *** Psyche^ joined
[13:35] *** Psyche^ is now known as Patterner

[13:55] *** bluescreen joined
[13:56] *** bluescreen is now known as Guest77136

[13:58] *** burning_aces left
[13:58] *** masonkramer joined
[14:00] <ch3ck> masak: \o

[14:06] *** mavrc left
[14:23] *** mavrc joined
[14:26] *** plobsing joined
[14:26] *** sftp joined
[14:27] *** Guest77136 left
[14:28] *** palik left
[14:30] *** palik joined
[14:33] *** qeru joined
[14:39] *** masak left
[14:40] *** Guest77136 joined
[14:45] *** plobsing left
[14:47] *** plobsing joined
[14:55] *** shortcir1uit is now known as shortcircuit

[14:55] *** am0c left
[14:55] *** mavrc left
[14:57] *** Grimnir_ left
[14:58] *** am0c^ joined
[14:59] *** Grimnir_ joined
[15:02] *** mavrc joined
[15:05] *** alester joined
[15:11] *** flatwhatson left
[15:12] *** qeru left
[15:13] *** felipe left
[15:13] *** _kaare left
[15:17] *** wtw left
[15:19] *** mavrc left
[15:19] *** am0c joined
[15:20] *** mavrc joined
[15:21] *** Chillance left
[15:21] *** ggoebel left
[15:21] *** orafu left
[15:21] *** ch3ck left
[15:21] *** cjk101010 left
[15:21] *** sunnavy left
[15:21] *** Lorn left
[15:21] *** simcop2387-lap left
[15:22] *** Grimnir_ left
[15:23] *** flatwhatson joined
[15:24] *** MayDaniel joined
[15:24] *** Chillance joined
[15:24] *** ggoebel joined
[15:24] *** orafu joined
[15:24] *** ch3ck joined
[15:24] *** cjk101010 joined
[15:24] *** sunnavy joined
[15:24] *** Lorn joined
[15:24] *** simcop2387-lap joined
[15:24] *** Guest93666 joined
[15:25] *** muixirt joined
[15:26] <muixirt> current parrot/rakudo spit out some error messages for perl6 spectest

[15:27] <muixirt> past experience say I do something wrong then I get weird error messages :-)

[15:27] *** felipe joined
[15:37] *** ch3ck left
[15:40] *** cjk101010 left
[15:43] *** flatwhatson left
[15:48] *** Grimnir joined
[15:48] *** mkramer1 joined
[15:48] *** mkramer left
[15:49] *** Grimnir is now known as Guest2926

[15:56] *** am0c^ left
[15:56] *** flatwhatson joined
[16:01] *** XaRDaX joined
[16:02] *** risou joined
[16:08] *** wamba left
[16:11] *** Guest77136 left
[16:16] *** tzhs left
[16:24] <muixirt> getting some 'invalid pointer' messages while spectesting

[16:24] *** justatheory joined
[16:26] *** Guest77136 joined
[16:28] <muixirt> hmm, t/spec/S02-literals/char-by-number.rakudo hangs, without eating cpu time

[16:28] <colomon> muixirt: what platform?

[16:29] <muixirt> linux x86-64

[16:30] <colomon> I'll give it a try here.

[16:38] *** Guest93666 left
[16:38] *** TheHarlot left
[16:38] <colomon> building...

[16:39] <muixirt> sh*t, can't reproduce it

[16:40] *** mkramer1 left
[16:41] *** agentzh left
[16:42] *** nymacro left
[16:42] *** plainhao joined
[16:42] *** Guest29181 joined
[16:43] *** plainhao left
[16:43] *** plainhao joined
[16:50] <takadonet> anyone noticed the whole speed up when running an empty perl6 script?

[16:50] <gfldex> parrot++

[16:50] <takadonet> s /whole/huge/

[16:51] <gfldex> :)

[16:51] <takadonet> gfldex: was that you? :)

[16:51] <gfldex> no

[16:51] <gfldex> i'm not good with birds

[16:51] *** rgrau_ left
[16:51] *** TheHarlot joined
[16:52] <takadonet> on the latest rakudo star it average around 1.3 s and on the latest compiler i get .8 s

[16:53] <gfldex> they improved the GC and fixed a few memory leaks

[16:53] <takadonet> by a lot it seems

[16:53] <takadonet> that is a big difference

[16:54] <gfldex> the old GC was rather horrible :)

[16:54] <gfldex> i can't wait to see the JIT to come back

[16:54] <gfldex> we will need seat belts :D

[16:55] <muixirt> gfldex: keep on dreaming

[16:56] *** mila_ left
[16:58] <takadonet> muixirt: why is that?

[16:58] *** mssm joined
[17:01] <muixirt> takadonet: first of all is jitting not the answer to rakudo perf problems

[17:01] *** redicaps1 left
[17:01] *** _kaare joined
[17:02] <muixirt> second I doubt that a Parrot with JIT will materialize in the near future (let's say in 12 months)

[17:02] <takadonet> muixirt: ok good to know

[17:03] *** slavik left
[17:05] *** hercynium joined
[17:06] <muixirt> and as far I can remember the former Parrot jit system didn't work with perl6/rakudo (most of the time?)

[17:06] *** cjk101010 joined
[17:08] *** mila_ joined
[17:08] <muixirt> takadonet: but as a dev you do know better than me, what's your take?

[17:08] *** MayDaniel left
[17:09] <takadonet> module developer not core good sir :) 

[17:09] <muixirt> (but, of course, a significant smaller startup time *is* progress)

[17:09] <takadonet> well that what everyone was complain when rakudo star was release

[17:10] <takadonet> so if we can speed up that startup time, perhaps more people would be interesting in hacking with perl 6

[17:12] <muixirt> I agree

[17:14] <moritz_> well, currently all built-in types are created at startup time

[17:14] <moritz_> that's very costly

[17:15] <moritz_> if we could build them at compile time (we can), and then serialize them (we can't yet), we would just need to deserialize the types at startup

[17:15] <moritz_> actually the first "we can" is also only partially true

[17:15] <moritz_> jnthn++ is working on both points

[17:17] <muixirt> colomon: do the tests work for you

[17:18] <colomon> muixirt: spectest is still running, but no fails at all into S05 as far as I can tell

[17:18] <muixirt> colomon: in the second run I got other errors, like

[17:19] <muixirt> t/spec/integration/man-or-boy.t ................................ 1/10 *** glibc detected *** ./perl6: free(): invalid next size (normal): 0x0000000006638620 ***

[17:19] <moritz_> muixirt: welcome to the wonderful world of parrot GC

[17:19] <diakopter> sigh; it fails man-or-boy now

[17:19] <muixirt> moritz_: so these errors are known?

[17:20] <diakopter> "it" used loosely

[17:20] <moritz_> muixirt: I get some random test failures

[17:20] <moritz_> typically between 2 and 4 per spectest run

[17:22] <muixirt> moritz_: I thought I did something wrong here (parrot fulltest was clean)

[17:22] <moritz_> muixirt: either it's an old rakudo bug that has been triggered by the new GC, or rakudo just exercises parrot much more thoroughly than parrot's own test suite

[17:23] *** ggoebel left
[17:23] <moritz_> well, the latter wouldn't be enws at all

[17:23] <moritz_> *news

[17:26] <muixirt> well I don't see a better startup time

[17:27] *** am0c left
[17:27] <colomon> looks like t/spec/S19-command-line/dash-e.t failed

[17:27] <colomon> (spectest still running)

[17:29] *** daxim left
[17:29] *** isBEKaml joined
[17:30] <isBEKaml> hello, #perl6! :)

[17:32] <colomon> \o

[17:32] <isBEKaml> colomon: surprisingly silent here. Long weekend? :)

[17:32] *** impious joined
[17:34] <colomon> The long weekend has not yet started for me.  :)

[17:34] <moritz_> long weekend? no such thing in the old worold

[17:35] <isBEKaml> Oh, I don't know. I have seen lazy weekends and busy ones. ;)

[17:37] *** PZt left
[17:38] <colomon> hmmm... looks like I got the "Parse errors: No plan found in TAP output" error for about seven files in spectest

[17:38] *** PZt joined
[17:38] <moritz_> colomon: with local patches?

[17:38] <colomon> moritz_: nope, fresh checkout

[17:39] <colomon> t/spec/S05-modifier/ignorecase....

[17:39] <colomon> ===SORRY!===

[17:39] <colomon> Unable to parse postcircumfix:sym<( )>, couldn't find final ')' at line 41

[17:39] <colomon> that's ... different

[17:39] <moritz_> works here

[17:39] *** cdarroch joined
[17:39] *** cdarroch left
[17:39] *** cdarroch joined
[17:39] <moritz_> two failing TODO tests at the end

[17:40] <moritz_> but that's to be expected

[17:41] <colomon> huh.  unicode issues?

[17:41] <isBEKaml> moritz_: Parrot moved to git completely? So, does rakudo build with --gen-parrot checkout the parrot git tree now?

[17:41] <colomon> isBEKaml: yes

[17:41] <colomon> moritz_++

[17:41] <isBEKaml> o// moritz_++ 

[17:42] <colomon> on the other hand, t/spec/S32-trig/cosh.t failed during "make spectest" and was fine when run directly.  

[17:42] <colomon> sigh.

[17:43] <isBEKaml> that reminds me, I still have to package rakudo for Slackbuilds.org. Slow builds on an ancient machine put me off. :|

[17:43] <isBEKaml> parrot builds are available now without the git modifications, though. 

[17:44] *** impious left
[17:45] <isBEKaml> I'll give it a try at packaging again this weekend. 

[17:45] *** MayDaniel joined
[17:52] *** lamstyle left
[18:01] *** Raynes joined
[18:02] *** dakkar left
[18:03] *** lamstyle joined
[18:03] *** isBEKaml left
[18:12] *** mkramer joined
[18:14] *** envi left
[18:14] *** ggoebel joined
[18:16] *** meppl joined
[18:21] <muixirt> moritz_: wrt Ticket #1871, does it really segfault? (error conditions intercepted by glibc)

[18:24] *** mssm left
[18:34] *** TypeNameHere joined
[18:35] *** mkramer left
[18:39] <moritz_> muixirt: it exits with status 11. Afaict that's a segfault

[18:41] *** MayDaniel left
[18:48] <muixirt> ok, I saw exit status 6 too

[18:48] *** mkramer joined
[18:49] <lue> ohai o/

[19:01] *** risou left
[19:07] *** wamba joined
[19:16] *** palik left
[19:23] *** meppl left
[19:24] *** Chillance left
[19:29] *** timbunce left
[19:30] *** oha joined
[19:32] *** cjk101010 left
[19:35] *** timbunce joined
[19:36] *** slavik joined
[19:39] <sorear> good * #perl6

[19:39] <sjohnson> hi

[19:39] *** plainhao left
[19:40] <tadzik> hello

[19:40] <takadonet> sorear: yo

[19:42] <colomon> \o

[19:43] <sjohnson> colomon !

[19:45] *** rgrau` joined
[19:47] *** TSa joined
[19:49] *** am0c joined
[19:49] *** oha left
[19:50] *** oha_ joined
[19:50] *** oha_ is now known as oha

[20:00] *** MayDaniel joined
[20:08] *** MayDaniel left
[20:20] *** oha left
[20:24] *** oha joined
[20:24] *** fhelmberger left
[20:30] *** fhelmberger joined
[20:30] *** fhelmberger left
[20:31] *** fhelmberger joined
[20:33] *** proller joined
[20:37] *** hudnix left
[20:38] *** fhelmberger left
[20:43] *** oha left
[20:43] *** wamba left
[20:45] *** oha joined
[20:50] *** takadonet left
[20:51] *** Guest29181 left
[20:58] *** hudnix joined
[20:59] *** jaldhar left
[21:04] *** jaldhar joined
[21:04] *** florz left
[21:04] *** florz joined
[21:13] <dalek> 6model: b34f13f | diakopter++ | dotnet/runtime/Runtime/Ops/Boxing.cs:

[21:13] <dalek> 6model: [dotnet] add variants of the boxing Ops that use the current thread's default types' representations

[21:13] <dalek> 6model: review: https://github.com/jnthn/6model/commit/b34f13f759

[21:13] <dalek> 6model: ecb0d09 | diakopter++ | dotnet/compiler/DNST (2 files):

[21:13] <dalek> 6model: [dotnet] add $!type and $!result parameters to DNST::If, so the result temporary can optionally be ignored/left out,

[21:13] <dalek> 6model: and if not, the type can be set (other than the default RakudoObject.

[21:13] <dalek> 6model: review: https://github.com/jnthn/6model/commit/ecb0d0916d

[21:13] <dalek> 6model: 8fd401d | diakopter++ | dotnet/compiler/PAST2DNSTCompiler.pm:

[21:13] <dalek> 6model: [dotnet] finish the success path of PAST::Regex(:pasttype('literal')), of which I'm proud:

[21:13] <dalek> 6model: $stmts.push(if_then(

[21:13] <dalek> 6model:     ge(emit_call($*re_tgt, 'IndexOf', 'int', lits((@($r))[0]), lit($*re_pos) ), lit(0)),

[21:13] <dalek> 6model:     DNST::Bind.new($*re_pos, plus(lit($*re_pos), lit(pir::length((@($r))[0]))))

[21:13] <dalek> 6model: ));

[21:13] <dalek> 6model: Compiles to C# string ops using C# ints.

[21:13] <dalek> 6model: review: https://github.com/jnthn/6model/commit/8fd401d797

[21:15] *** XaRDaX left
[21:17] *** masonkramer left
[21:18] *** masonkramer joined
[21:25] *** Guest77136 left
[21:28] *** palik joined
[21:32] *** TSa left
[21:35] *** y3llow_ joined
[21:36] *** pothos_ joined
[21:37] *** palik left
[21:37] *** y3llow left
[21:37] *** y3llow_ is now known as y3llow

[21:38] *** pothos_ left
[21:38] *** pothos left
[21:38] *** pothos joined
[21:40] *** palik joined
[21:42] *** muixirt left
[21:53] *** kfo_ joined
[21:57] *** knewt2 left
[21:58] *** knewt2 joined
[22:00] *** rgrau` left
[22:11] *** ggoebel left
[22:17] *** risou joined
[22:20] *** palik left
[22:23] *** TheHarlot left
[22:27] *** _kaare left
[22:28] *** alester left
[22:29] *** oha left
[22:31] *** alester joined
[22:33] *** timbunce left
[22:36] *** palik joined
[22:37] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_lookup_tablet

[22:40] *** BooK joined
[22:42] *** lichtkind joined
[22:53] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_index_tablet

[22:55] *** palik left
[22:55] *** mavrc left
[22:58] <lichtkind> added scope declerator

[23:00] *** proller left
[23:12] <sorear> %foo{$bar} is about 90 times slower than perl 5... hmm

[23:12] <sorear> for me

[23:17] <diakopter> how many reps

[23:17] <sorear> 100,000, why does it matter?

[23:17] <diakopter> just hoping it was more than 1 or something

[23:17] <sorear> also it looks like an artefact of "slow" Num->Str coercions

[23:17] <diakopter> (sry)

[23:18] <sorear> no, 1 iteration is below my limits of measurement

[23:18] <sorear> I run stuff enough times to fill up a 5-30s timing window

[23:18] <sorear> (9s)

[23:19] <sorear> yeah, down to 4.7s after implementing an optimized Num.Str

[23:19] <dalek> niecza: 8e193aa | sorear++ | lib/Kernel.cs:

[23:19] <dalek> niecza: Implement optimized Num.Str coercion

[23:19] <dalek> niecza: review: https://github.com/sorear/niecza/commit/8e193aa75b

[23:19] <sorear> I usually go for shorter runs when using the profiler, since it has rather high overhead

[23:20] <sorear> I think it calls gettimeofday twice per function call... insane

[23:20] <sorear> seriously there has to be a faster way.  why can't I just mmap("/dev/jiffies/")

[23:26] *** dual left
[23:26] <sorear> oh dear

[23:27] <diakopter> I guess to keep the overheard somewhat consistent across platforms

[23:27] <diakopter> overhead

[23:27] <sorear> if this profile is to be beleived, System.Double.ToString alone takes more microseconds than a single iteration of $hash{$i} = $i on Perl 5

[23:27] <sorear> (2.5)

[23:28] * sorear goes prying in NumberFormatter to see what's wasting so many cycles

[23:29] <sorear> *headdesk* It's written in C#

[23:29] <sorear> Not an icall

[23:30] <sorear> No wonder it's so slow

[23:30] <diakopter> well it has to conform to the spec, which might not....

[23:31] <diakopter> actually, technically, it is supposed to conform to .net....

[23:31] *** hacktor joined
[23:31] <dalek> star: 8d848b7 | pmichaud++ | / (2 files):

[23:31] <dalek> star: Update Rakudo and Parrot version numbers.

[23:31] <dalek> star: review: https://github.com/rakudo/star/commit/8d848b7a89

[23:31] <dalek> star: 5d02f3d | pmichaud++ | / (2 files):

[23:31] <dalek> star: Update Makefiles; disable neutro for this release (it doesn't build).

[23:31] <dalek> star: review: https://github.com/rakudo/star/commit/5d02f3df33

[23:32] *** dual joined
[23:32] <sorear> this code is ridiculous

[23:32] <sorear> it uses thread-local singletons.

[23:33] *** hercynium left
[23:40] *** hacktor is now known as Fuad

[23:41] *** araujo left
[23:42] <lichtkind> good night

[23:42] *** lichtkind left
[23:44] <sorear> diakopter: the spec doesn't say whether any given method is C or C#

[23:44] <sorear> System.Runtime.Serialization means that Mono classes need to have exactly the same fields as their .NET counterparts, but doesn't affect methods

[23:45] <diakopter> yeah; for all those operations on value types that are very small sizes, they should definitely be copied/sent to much more native editions.

[23:50] <sorear> well, Perl 5 is just using sprintf

[23:50] <sorear> it's not *particularly* native

[23:52] <dalek> niecza: 1bda7f5 | sorear++ | / (3 files):

[23:52] <dalek> niecza: Use simplifier to optimize simple &postcircumfix calls

[23:52] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1bda7f52a1

[23:53] *** cdarroch left
[23:53] <sorear> 46.9 -> 43.2

[23:56] *** Fuad left
[23:56] *** Fuad joined
[23:57] *** whiteknight joined
[23:58] <dalek> niecza: 7d54b1c | sorear++ | / (3 files):

[23:58] <dalek> niecza: Optimize &defined as a builtin

[23:58] <dalek> niecza: review: https://github.com/sorear/niecza/commit/7d54b1c473

