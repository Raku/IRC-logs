[00:00] *** M_o_C left
[00:07] *** pythonian4000 is now known as pythonian4000afk

[00:31] *** hercynium left
[00:36] *** justatheory left
[00:44] *** [hudnix] joined
[00:45] *** hudnix left
[00:52] *** redicaps joined
[00:53] *** redicaps left
[01:00] *** hercynium joined
[01:04] *** jasonmay left
[01:09] *** jasonmay joined
[01:15] *** sjn joined
[01:15] <sjn> o/

[01:15] <sjn> Video of jnthn's talk in Oslo: http://www.nuug.no/aktiviteter/20100914-little-tools-large-apps/

[01:15] * sjn thinks it was very well done :D

[01:16] <sjn> jnthn++

[01:21] <sorear> good * #perl6

[01:22] <sorear> lichtkind: still here?

[01:22] <lichtkind> shure

[01:23] <sorear> Niecza uses STD.pmc to parse Perl 6

[01:23] <sorear> it's a Perl 5 module, and currently the niecza frontend is all Perl 5

[01:23] *** QinGW joined
[01:24] <lichtkind> ah thanks

[01:25] <sorear> any more technical questions from anyone?

[01:25] <sorear> jnthn: Why is dalek reporting nqp-rx/nom but not niecza/mm?

[01:29] *** lichtkind_ joined
[01:29] <lichtkind_> sorear: and the backend?

[01:30] <sorear> lichtkind_: currently, src/CodeGen.pm generates C#, which is then linked to lib/Kernel.cs and lib/Cursor.cs and run

[01:30] <lichtkind_> thanks but i ment what written in?

[01:31] *** lichtkind left
[01:31] <sorear> .pm files are Perl 5, .cs files are C#, .pm6 and .setting files are Perl 6

[01:32] *** lichtkind joined
[01:32] <lichtkind> thanks but i ment what written in?

[01:32] <lichtkind> shit this conenction sucks

[01:33] <sorear> .pm files are Perl 5, .cs files are C#, .pm6 and .setting files are Perl 6

[01:33] <sorear> ping Juerd, he can fix that for you

[01:33] <lichtkind> i go sleep soon :)

[01:35] *** lichtkind_ left
[01:37] <lichtkind> sorear: thanks a lot if anything impiortant comes to your mind tell me or post directly on http://www.perlfoundation.org/perl6/index.cgi?perl_6_history_tablet

[01:43] *** gottreu_ joined
[01:44] *** LaVolta joined
[01:51] *** risou left
[01:52] *** molaf__ joined
[01:54] <flussence> aaaaaagh, I just realised why that spectest cronjob crashed my machine

[01:55] <flussence> "* 4 * * *" does not run it once at 04:00

[01:56] *** molaf_ left
[01:56] <flussence> that'd be "0 4 * * *"...

[01:59] * sjn is very, very happy with jnthn's presentation video

[02:10] <sorear> flussence: ... "crashed"?

[02:11] <flussence> I had to power cycle it to get it back to life again

[02:12] <flussence> doesn't handle OOM nicely for some reason

[02:25] <Infinoid> moritz_: Looks like it worked, even though it could use some flood protection.  The refresh rate is once per hour

[02:32] <colomon> rakudo: say (+(0.Int)).WHAT; say (+(0.Int + 0.Int)).WHAT

[02:32] <p6eval> rakudo ccde8d: OUTPUT«Int()␤Num()␤»

[02:34] <sorear> Infinoid does #perl6 now?

[02:35] <sorear> Infinoid: Do you know why nqp-rx reports non-master branches but niecza doesn't?

[02:38] *** WinstonSmith left
[02:46] <colomon> rakudo: say ((0.Int + 0.Int)).WHAT

[02:46] <p6eval> rakudo ccde8d: OUTPUT«Int()␤»

[02:47] <colomon> rakudo: say (+(0.Int)).PARROT; say (+(0.Int + 0.Int)).PARROT

[02:47] <p6eval> rakudo ccde8d: OUTPUT«Int␤Num␤»

[02:48] <colomon> rakudo: say (+(0.Int)).PARROT; say (0.Int + 0.Int).PARROT

[02:48] <p6eval> rakudo ccde8d: OUTPUT«Int␤Integer␤»

[02:48] <colomon> bingo

[02:51] *** Warlord left
[03:01] <Infinoid> sorear: nqp-rx reports the "nom" branch because moritz added that branch to the config.

[03:02] <Infinoid> sorear: http://github.com/perl6/mu/blob/master/misc/dalek-conf.json

[03:02] *** meppl left
[03:03] <sorear> NIFTY!

[03:03] <sorear> I can add to that file without using my feather1 sudo bit!

[03:03] <Infinoid> The refresh rate is once an hour, so there will be some delay before it picks it up

[03:03] <Infinoid> Also, it doesn't detect deletions, only a bot restart will kill old feeds.

[03:04] <Infinoid> Any further thoughts on push-based commit notifications?

[03:04] <sorear> sudo killall -HUP botnix?

[03:05] <Infinoid> Depending on how smart killall is (the top level command is "perl")

[03:07] <diakopter> well its pid hasn't changed in a long time

[03:08] <diakopter> 'tis just to grep for its pid

[03:08] <Infinoid> That's what I do

[03:08] <Infinoid> But killing the bot isn't the nicest thing anyway... patches welcome to make the feed management more dynamic (of course)

[03:09] * diakopter dropped 'faster'

[03:09] <diakopter> 'tis faster just to grep for its pid

[03:10] <Infinoid> Though every single time, I make the mistake of grepping for "dalek" instead of "botnix" :)

[03:11] * diakopter fails to find who/when hilited me on #perl6

[03:11] <Infinoid> diakopter: It wasn't me, but hi :)

[03:13] <diakopter> hi :)

[03:15] <sorear> 2010.09.17.17.50.21 < diakopter> oh, try_rakudo uses it.

[03:15] <sorear> 2010.09.18.04.20.25 <+phenny> moritz_: 17 Sep 22:49Z <diakopter> tell moritz_ I sigtermed your pugssvn on feather3; sorry if I wasn't supposed to

[03:15] <sorear> 2010.09.18.04.20.32 < moritz_> diakopter++

[03:15] <sorear> 2010.09.18.22.07.46 < diakopter> well its pid hasn't changed in a long time

[03:15] <sorear> ?

[03:15] <diakopter> heh

[03:15] <diakopter> I guess yeah; I missed moritz_'s almost immediate reply

[03:15] <sorear> grep++

[03:16] <sorear> irssi's universal logging could stand to work saner though

[03:20] <Infinoid> it works for me

[03:20] *** envi^home joined
[03:31] *** jan_ joined
[03:32] *** kuzuha left
[03:35] *** jfried left
[03:35] *** lichtkind left
[03:37] *** justatheory joined
[03:57] *** sftp left
[04:00] *** barika left
[04:02] *** xinming left
[04:02] <sorear> Infinoid: Does "branches" : [ "mm" ] mean "branches" : [ "mm", "master" ] ?

[04:04] <sorear> Infinoid: I see niecza isn't in dalek-conf.json at all.  ?

[04:06] *** thowe joined
[04:07] <thowe> Is there some way I can view the documentation for the CGI class?

[04:17] <sorear> Which one?

[04:17] <thowe> mm, the built-in one.  When I say "use CGI;"

[04:17] <thowe> I assume it is much like the Perl5 version, but I don't know.

[04:18] <sorear> it's probably a tiny subset of it

[04:18] <sorear> we don't have much in the way of big libraries yet

[04:18] <thowe> November seems to use it to some degree, but I don't know if there is any API docs yet or if it is complete.  I was told there is no such thing as "perl6doc"

[04:19] <sorear> rakudo star?

[04:19] <thowe> yes, but rakudo site seems down(?)

[04:19] <sorear> it would have to be, no other distribution comes with more than a handful of modules

[04:20] <thowe> I admit, it's been a long time since I played with Perl5, so if there are equiv ways to do these things I am not going to be super familiar.  I am kind of going at Perl6 without much Perl knowledge

[04:20] <thowe> coming from Ruby, if anything.

[04:23] <sorear> hmm, modules.perl6.org doesn't even list CGI

[04:23] <sorear> are you sure it exists?

[04:23] <sorear> star: use CGI;

[04:23] <p6eval> star 2010.07: OUTPUT«===SORRY!===␤Unable to find module 'CGI' in the @*INC directories.␤(@*INC contains:␤  /home/p6eval/.perl6/lib␤  /home/p6eval/rakudo-star-2010.07/install/lib/parrot/2.6.0/languages/perl6/lib␤  .)␤»

[04:25] <thowe> hrm...  I got the idea it was there from looking at November code...

[04:26] <thowe> http://github.com/viklund/november/blob/master/t/cgi/cgi_post_test

[04:27] <thowe> maybe it somes from elsewhere...

[04:27] *** Trashlord left
[04:28] *** Chillance left
[04:28] <thowe> s/somes/comes/

[04:29] *** Trashlord joined
[04:33] *** xinming joined
[04:43] <sorear> well, github was written for alpha

[04:43] <sorear> er

[04:43] <sorear> november

[04:54] <sorear> Infinoid: ping

[05:01] <diakopter> sorear: i'm taking a look at how loosely-coupled niecza's regex engine is

[05:01] <sorear> the one big place where it's coupled is the handling of backtracking into subrules

[05:02] <sorear> S05 specs that a rule is a method which returns a lazy list of cursors

[05:02] <diakopter> it's all in Cursor.cs ?

[05:02] <sorear> lines 284-296 of Cursor.cs set up a gather/take lazy list and are *very* coupled to the niecza data model

[05:03] <sorear> yes

[05:03] <diakopter> ah, ok

[05:04] <diakopter> and any routine mentioning slots

[05:05] <sorear> GetKey and SimpleWS are support routines for the Perl6 'Match' and 'Cursor' classes

[05:05] <sorear> the slots-mentioning chunk in Backtrack serves to terminate a gather list

[05:06] *** [Sec] left
[05:07] <diakopter> what's QueryLiteral

[05:07] <sorear> S05:46

[05:08] <sorear> it's used to tiebreak longest tokens

[05:08] <sorear> food\w+ beats foo\w+ because it returns a larger value on QL

[05:09] <sorear> niecza implements rules 1-4

[05:09] <diakopter> sorear: you might be able to s/out /ref /g and get a compile-time speed improvement (i'm not certain though). it's fewer checks for the C# compiler (and IL JIT) to do, and it might be fewer assignments in the generated code.

[05:12] * diakopter boggles at public Lexer(DynMetaObject, string, LAD[])

[05:14] <diakopter> sorear: do you use mono from trunk (with .net4 enabled and new gc built)?

[05:15] <sorear> ... oh right, DynMetaObject

[05:15] <araujo> I need a name for a small language .... say something now

[05:15] <diakopter> s

[05:15] <sorear> arange

[05:15] <thowe> stick

[05:15] <thowe> sock

[05:15] <sorear> I use mono from trunk with .net4 and new gc

[05:15] <diakopter> cool

[05:16] <sorear> I use the new gc, it's a huge win, but I don't plan to switch to dmcs until 2.8 is released

[05:16] <sorear> sometimes as much as 2x speed

[05:16] <sorear> total, not gc only

[05:16] <araujo> sorear, Arange .. from Orange ??

[05:17] <sorear> or maybe it's A-Lang from a japonophone

[05:17] <sorear> or maybe I was just looking at araujo

[05:17] <araujo> hahaha hehe

[05:17] *** rurban left
[05:18] <sorear> diakopter: uh, right, DynMetaObject, there's some stuff being done with that to generate LTM nodes for <foo>, also protoregex candidate lists

[05:20] <ingy> how do I install nqp?

[05:24] <LaVolta> rakudo: 123.sprintf("%x", 456).say;

[05:24] <p6eval> rakudo ccde8d: OUTPUT«123␤»

[05:24] <thowe> as of Star 2010.08 it is failing to build for me again :(

[05:24] *** gottreu_ left
[05:24] <LaVolta> Int can sprintf, but what's the purpose of it?

[05:25] <LaVolta> just turn it into Str?

[05:26] *** [Sec] joined
[05:34] <sorear> LaVolta: most Str, Int, Num, List methods are actually defined in their common superclass and do relevant coercions

[05:34] <sorear> (Cool)

[05:35] <sorear> thowe: what is failing to build for you?

[05:35] <sorear> ingy: installing parrot automatically installs nqp under the name parrot-nqp

[05:35] <LaVolta> sorear:  thanks...and can you point me to some related documents?

[05:36] <thowe> once I start a make it goes for a while and then says something about a VM problem.  I already removed it to try to build 2010.07 again

[05:36] <sorear> I think moritz blogged about Cool last month

[05:37] <sorear> thowe: For all I know you're talking about the Linux kernel

[05:38] <thowe> I'm sorry, I don't have it in front of me any more to give more details.  If it fails again I will have more information.  This is on OpenBSD 4.7

[05:39] <thowe> I had had the error before and it was fixed, I thought there might be some kind of known regression

[05:39] <sorear> You could at least tell me the name of the program you're trying to build

[05:39] <sorear> That would help a lot

[05:39] <clkao_> win 27

[05:39] <thowe> Rakudo star 2010.08

[05:40] <thowe> I had done "perl Configure.pl --gen-parrot" and then "make"

[05:40] <sorear> Ah.

[05:55] *** Guest23195 joined
[06:10] *** icwiener joined
[06:13] *** gfx joined
[06:14] *** envi^home left
[06:18] *** envi^home joined
[06:18] *** leprevost joined
[06:24] *** hirschnase joined
[06:32] <ingy> sorear: does installing rakudo install parrot?

[06:34] <ingy> I see parrot-nqp in my path...

[06:34] *** cognominal left
[06:48] <sorear> rakudo depends on parrot

[06:48] <sorear> you can't install rakudo without first installing parrot

[06:49] <sorear> configuring rakudo with --gen-parrot installs parrot

[06:49] *** cognominal joined
[06:54] *** wamba joined
[07:17] *** colomon left
[07:18] *** hirschnase left
[07:19] *** hirschnase joined
[07:28] *** mjk joined
[07:33] *** mjk left
[07:34] <moritz_> good morning lambdabutterflies

[07:41] <hirschnase> snork

[07:42] *** hirschnase left
[07:46] *** jan_ left
[07:50] *** hirschnase joined
[07:50] *** hirschnase left
[07:56] <mberends> hi moritz_, coffee smells good today

[07:56] <moritz_> hola mberends

[07:56] * moritz_ considers baking waffels for breakfast

[07:56] *** Mowah joined
[07:56] * mberends is hacking on 6model/java

[07:58] <sorear> moritz_: hi

[07:58] <sorear> moritz_: what's up w/ dalek?

[07:58] <moritz_> dalek: I don't know; is it misbehaving?

[07:59] <moritz_> sorry, meant sorear :-)

[07:59] * moritz_ hasn't backlogged yet

[08:00] *** pythonian4000afk is now known as pythonian4000

[08:01] <sorear> moritz_: well, niecza isn't mentioned in the new dalek conf file; why is it being reported?

[08:01] <moritz_> sorear: the old format with one module per repo is still supported, and it hasn't been switched over yet

[08:02] <sorear> moritz_: I want dalek to report niecza/mm, what do I have to do

[08:02] <moritz_> sorear: see my last commit to the mu repo; simply do the same for niecza

[08:03] <moritz_> when you add the mm branch, it will continue to report the master branch as before

[08:03] *** QinGW1 joined
[08:03] <sorear> ah, nqp master is still being tracked by perl code?

[08:03] <moritz_> right

[08:04] *** QinGW left
[08:04] <sorear> why is the last url https?

[08:05] <moritz_> dunno; maybe as a test case

[08:05] *** f00li5h left
[08:05] <dalek> mu: 00ebcc2 | sorear++ | misc/dalek-conf.json:

[08:05] <dalek> mu: [misc] Track niecza/mm

[08:05] <dalek> mu: review: http://github.com/perl6/mu/commit/00ebcc270f2d4edb326fa1b79622cab33690d076

[08:06] <moritz_> sorear: fwiw, that file is read every 60 minutes

[08:08] <sorear> yes, Infinoid told me that much

[08:26] *** zulon joined
[08:34] <LaVolta> rakudo: "Perl"*(6).isa(Cool)+'language'or not 0??0!!0

[08:35] <p6eval> rakudo ccde8d:  ( no output )

[08:35] <LaVolta> rakudo: say "Perl"*(6).isa(Cool)+'language'or not 0??0!!0

[08:35] <p6eval> rakudo ccde8d: OUTPUT«0␤»

[08:35] <LaVolta> cool

[08:35] <LaVolta> fail

[08:36] <moritz_> 'Perl' as a number evaluates to 0

[08:36] <LaVolta> ...actually the no output one is 1

[08:36] <LaVolta> so...just having some fun with my basic knowledge

[08:38] <LaVolta> try.rakudo.org showed me the right answer :-P

[08:41] <sorear> eval: use warnings; print "Perl"*(6)

[08:41] <sorear> buubot: eval: use warnings; print "Perl"*(6)

[08:41] <buubot> sorear: Argument "Perl" isn't numeric in multiplication (*) at (eval 40) line 1. 01      

[08:41] <moritz_> rakudo: say ("Perl"*(6).isa(Cool)+'language'or not 0??0!!0)

[08:41] <p6eval> rakudo ccde8d: OUTPUT«1␤»

[08:42] <moritz_> without the parens it's parsed as  say(....) or not 0??0!!0

[08:42] *** rhebus joined
[08:43] <LaVolta> ah...yeah...have to run it in REPL

[08:44] <LaVolta> can someone show me a better one? :)

[08:45] *** tadzik joined
[08:45] *** zulon left
[08:47] <tadzik> oh hai #perl6

[08:52] <sorear> hi tadzik 

[08:56] <dalek> niecza/mm: 85f1192 | sorear++ | src/Metamodel.pm:

[08:56] <dalek> niecza/mm: [mm] implement my class {}

[08:56] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/85f11926badb3a2624ea27b6858b14a32c2b4ea0

[08:56] <dalek> niecza/mm: dc6824e | sorear++ | src/Metamodel.pm:

[08:56] <dalek> niecza/mm: [mm] implement has $!foo, a few more sub bits

[08:56] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/dc6824e0da119fb16e1d646393ac29a28c661dc0

[08:56] <dalek> niecza/mm: 2bc3b94 | sorear++ | src/Metamodel.pm:

[08:56] <dalek> niecza/mm: [mm] Extend once-detection logic

[08:56] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/2bc3b9451332676635d0fd34936332c52c5b8642

[08:56] <dalek> niecza/mm: 72f125c | sorear++ | src/Metamodel.pm:

[08:56] <dalek> niecza/mm: [mm] Implement augment

[08:56] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/72f125c255a912c26b5289e06921bc17b1a7204c

[08:56] <dalek> niecza/mm: 4b77974 | sorear++ | src/Metamodel.pm:

[08:56] <dalek> niecza/mm: [mm] Implement methods

[08:56] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/4b77974f7a20d19ffb1b20e96b6c9e0b6a757af3

[08:56] <dalek> niecza/mm: 0cb1071 | sorear++ | src/Metamodel.pm:

[08:56] <dalek> niecza/mm: [mm] Implement signature processing

[08:56] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/0cb107150c6c23a79f8864cb4b80451883a364ef

[08:56] <dalek> niecza/mm: c73de8d | sorear++ | src/Metamodel.pm:

[08:56] <dalek> niecza/mm: [mm] do a bit of reference pruning

[08:56] <dalek> niecza/mm: 

[08:56] <dalek> niecza/mm: Don't link parser Bodys into the metamodel

[08:56] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/c73de8d6d7dd493dac04b608e315b403d9bfe318

[08:56] <dalek> niecza/mm: a7ff91c | sorear++ | src/Metamodel.pm:

[08:56] <dalek> niecza/mm: [mm] Implement superclasses

[08:56] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/a7ff91c18b9d6bf120332b47f1dcb0bb9e2a175a

[08:56] <dalek> niecza/mm: 31b2aaa | sorear++ | src/Metamodel.pm:

[08:56] <dalek> niecza/mm: [mm] Implement automatic subclassing of Any

[08:56] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/31b2aaa2b41f2864f60d6686ec64a7b57a56dd2d

[08:56] <dalek> niecza/mm: 51c12fe | sorear++ | src/ (2 files):

[08:56] <dalek> niecza/mm: [mm] Connect to the compiler driver

[08:56] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/51c12feebefdcdd69a6b496e8d3550550d8754ab

[08:56] <dalek> niecza/mm: 26f8301 | sorear++ | src/Metamodel.pm:

[08:56] <dalek> niecza/mm: [mm] Implement state variables

[08:56] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/26f83019a8ac5ec959059a7abf6d6a6a7ae51c8c

[08:56] <sorear> wait, wait

[08:56] <sorear> did dalek just push the entire history of the branch?

[08:56] <sorear> I thought I only pushed five commits

[09:06] *** dual left
[09:08] *** masak joined
[09:08] <masak> o/

[09:08] <sorear> o/ masak

[09:08] <tadzik> lolitsmasak!

[09:10] <LaVolta> hej masak

[09:10] <masak> http://www.cis.upenn.edu/~byorgey/haskell-alphabet/I.html # 哈哈

[09:10] <sorear> byorgey!

[09:10] <sorear> haven't seen THAT name in a while

[09:12] <masak> old acquaintance?

[09:13] <sorear> eh, sortof

[09:13] <sorear> #haskell old times

[09:13] <masak> I stumbled over the link through Planet Haskell.

[09:14] <sorear> I like Y

[09:15] * sorear ponders the nature of my $x is export

[09:15] <LaVolta> /dev/disk0s2   149Gi  148Gi  750Mi   100%    /  # stort problem, jeg behov mere diskplads

[09:16] <masak> T is for Types, which keep coders in check.

[09:16] <masak> “You didn’t mean that.” “Yes I did! I… oh, heck.”

[09:16] <masak> :)

[09:16] <masak> heh, I like Y too.

[09:17] *** gottreu_ joined
[09:17] <masak> and Z, kinda.

[09:18] <sorear> LaVolta: ?

[09:18] *** Mowah left
[09:19] <LaVolta> sorear:  just got a warning from osx :( I need TimeCapsule

[09:19] <LaVolta> and it's okay...just a complain

[09:22] <tadzik> masak: how about some ecosystem decomplicating?

[09:23] <sorear> tadzik: up for 1600 UTC Tue?

[09:24] <tadzik> sorear: nah, I'll be gone holidaying

[09:24] <sorear> :/

[09:24] <tadzik> cpan6sketch?

[09:24] <sorear> aye; I'm still holding onto hope that I'll be able to do something with that

[09:24] <tadzik> I'll be gone tue-fri, or even tue-sat

[09:25] <sorear> but I need an agenda

[09:25] <masak> I'll be there.

[09:25] <sorear> so anyone with ecosystem grievances please step forward!

[09:25] <masak> tadzik: I fear I'm too busy/scattered today. but I'll be happy to set a time with you.

[09:26] <masak> today is election day in Sweden. and I have to clean, and do laundry. :)

[09:26] <sorear> I should send a mail to p6l and maybe ask #p5p/#toolchain for extra lists

[09:26] <tadzik> masak: I think about just moving this from json to a simple " ^^ <name>\h+<url>\n $$" lines

[09:27] <masak> tadzik: wfm.

[09:27] <tadzik> masak: shall I do it?

[09:27] <masak> go ahead.

[09:27] <sorear> seen TimToady

[09:27] <aloha> TimToady was last seen in #perl6 10 hours 40 mins ago saying "YOU_ARE_HERE is what the setting thinks your mainline code is called".

[09:27] <tadzik> It'll save me making my own list for neutro

[09:28] <masak> then pls can drop its JSON module, too.

[09:28] <tadzik> ywis

[09:28] <masak> hm, but it uses it twice...

[09:28] <masak> oh, no worries.

[09:28] <masak> my only concern is that we're leaving a structured format for something that has to be hand-parsed.

[09:28] <sorear> masak: tadzik: please make lists of things you want addressed from the toolchain people

[09:29] <tadzik> sorear: what do you mean?

[09:29] <masak> sorear: my list is really short: make it feasible and attractive to put my modules on CPAN.

[09:29] <sorear> I don't know, that's why I need help

[09:29] <tadzik> oh, and I have a random thought about vcs integration

[09:29] <sorear> creating momentum out of confusion is hard

[09:30] <tadzik> so you can put your repo url on cpan6, and if it's supported, it should be available to make it autodetect tags and make tarballs out of tags

[09:30] <tadzik> so cpan6 will be up to date w/o you doing anything really

[09:30] *** dual joined
[09:31] *** tomaw left
[09:33] <sorear> tadzik: github does that automatically

[09:33] *** gfx left
[09:33] <sorear> my agenda for now is basically 'ask Alias what CPAN does wrong and what CPAN does very right.  Have pmichaud there.'

[09:33] <sorear> I need more to go on

[09:33] <sorear> I need specific issues that need discussion

[09:34] *** rurban joined
[09:34] <sorear> should CPAN be unified with whatever Perl6 uses?

[09:34] <tadzik> sorear: tarballing, yes. Making tarballs automagically a cpan6 release, no

[09:34] <sorear> (probably not; it makes "reinvent everything that needs reinventing" hard)

[09:34] <tadzik> sorear | should CPAN be unified with whatever Perl6 uses? -- what do you mean?

[09:35] <sorear> tadzik: having perl5 and perl6 modules side by side on cpan.org

[09:35] <tadzik> hmm

[09:35] <masak> sorear: without CPAN and Perl 5, Perl 6 is basically doomed to obscurity.

[09:36] <Alias> CPAN6 should be superset

[09:37] <Alias> Think IPv4 vs IPv6

[09:37] <sjohnson> （　｀ー´）

[09:37] <Alias> Although it doesn't necesarily need to be so on day 1

[09:37] <sjohnson> hi alias

[09:39] <tadzik> lolpushed

[09:39] <tadzik> oh noes, commit msg typo

[09:39] *** BaggioKwok joined
[09:40] <masak> in other words, CPAN6 should asymptotically approach a superset. :)

[09:40] <tadzik> I feel wrong every time I do git push --force

[09:41] <dalek> ecosystem: 0f22da0 | tadzik++ | projects.list:

[09:41] <dalek> ecosystem: Simplified projects.list, no longer uses JSON

[09:41] <dalek> ecosystem: review: http://github.com/perl6/ecosystem/commit/0f22da050ff414470299a53e96956e37681bd3c2

[09:41] <tadzik> (force-push would be hell nicer)

[09:42] * sorear thinks discussion of agenda items on #cpan6sketch would be a neat idea

[09:44] <tadzik> oh, idea

[09:44] <tadzik> http://doodle.com/ know that one?

[09:45] <tadzik> we always plan pm group appointments here

[09:46] *** tomaw joined
[09:47] *** arthur-_ joined
[09:47] <Alias> masak: That's my feeling, so long as parrot/perl6 want multi-language support

[09:47] *** arthur-_ left
[09:47] <Alias> Which, as far as I'm concerned, is the last big problem for repositories nobody has solved yet

[09:48] <masak> I keep being rooted in the extreme pragmatic's camp. give me something I can use today, and I will use it. if I can't, I will likely build something I can use out of chewing gum and bailing wire.

[09:48] <Alias> I understand

[09:48] <Alias> Me too

[09:49] <sorear> tadzik: I prefer logged IRC channels over web 2.0 stuff

[09:50] <Alias> But CPAN really solves everything else that's needed, well except for a few bits and pieces we have yet to steal from Microsoft

[09:50] <Alias> So the next step needs to be a big step up to support multi-lang

[09:52] <tadzik> sorear: I don't disregard IRC here, it's just about planning the date

[09:52] <sorear> Funny, all these years I thought that distribution and packaging were the only place Microsoft's toolchain really *failed*

[09:52] *** timbunce joined
[09:53] *** constant left
[09:53] *** redicaps1 joined
[09:53] <Alias> And it shouldn't REALLY take too long to write it all

[09:53] <Alias> The problem is that it's easy to get the design wrong, and then correcting the design takes ages

[09:53] <Alias> The average new CPAN feature takes about 2 years to implement

[09:53] <Alias> 1 to be sure it's a good idea, then 1 to get everyone to play along

[09:53] <Alias> Then 5 before we can be sure all the end users have it :)

[09:54] *** felipe left
[09:54] <Alias> sorear: Don't conflate the overall ecosystem with the individual pieces within it

[09:54] <Alias> CPAN is an excellent ecosystem with some problematic pieces (which we're working our way through)

[09:54] <Alias> Microsoft has a lackluster ecosystem, with a couple of excellent pieces buried in it

[09:56] <tadzik> seen supernovus

[09:56] <aloha> supernovus was last seen in #perl6 1 days 9 hours ago saying "Well I'm off for the day. Anyway, it's far from finished, but the first version of Flower is now available on Github. Petal templates come to Perl 6 :-)".

[09:56] <tadzik> phenny: tell supernovus you may want to add perlite6 to ww6's deps.proto

[09:56] <phenny> tadzik: I'll pass that on when supernovus is around.

[09:57] <tadzik> (and the other deps by the way)

[10:00] *** BaggioKwok left
[10:01] <sorear> my module Foo { }; augment module Foo { my module Bar is export { } }; augment module Foo::Bar { import Foo :OUR<Bar> }  # Should this be legal?

[10:02] *** lasse_ joined
[10:03] *** constant joined
[10:03] *** constant left
[10:03] *** constant joined
[10:08] *** QinGW1 left
[10:08] *** redicaps1 left
[10:13] <moritz_> I don't think you can augment module Foo::Bar

[10:13] <moritz_> because Bar is lexical under Foo, not in the namespace

[10:19] <sorear> erp. yes, should be our module Bar

[10:21] <moritz_> then I don't know the answer

[10:25] <tadzik> hmm, how is feed operator really different from just chained method calling via '.'?

[10:26] <moritz_> in lots of ways

[10:26] <moritz_> feeds are supposed to parallelize, and pass the objects through

[10:26] <moritz_> just like a unix pipe

[10:27] <moritz_> they don't, in rakudo

[10:27] <tadzik> hmm

[10:27] * sorear has decided that my class Foo {} should only really use one slot

[10:28] *** LaVolta left
[10:29] <tadzik> oh, it messes with multiple objects

[10:29] <moritz_> it's really closer to >>. than to .

[10:30] <tadzik> yes, I see now

[10:31] *** sftp joined
[10:33] *** pythonian4000 is now known as pythonian4000afk

[10:34] <masak> Perl 6 is about "building a set of abstractions so that people can achieve decent results without knowing what they're doing" :)

[10:34] *** pythonian4000afk is now known as pythonian4000

[10:34] *** Mowah joined
[10:34] <masak> paraphrased from http://www.youtube.com/watch?v=F6k8lTrAE2g , where the context was about concurrency.

[10:41] * moritz_ just made a nice experiment

[10:41] <moritz_> --- a/src/core/YOU_ARE_HERE.pm

[10:41] <moritz_> +++ b/src/core/YOU_ARE_HERE.pm

[10:41] <moritz_> @@ -1 +1,3 @@

[10:41] <moritz_> -YOU_ARE_HERE;

[10:41] <moritz_> +for lines() {

[10:41] <moritz_> +    YOU_ARE_HERE;

[10:41] <moritz_> +}

[10:41] <moritz_> $ echo 'foo' | ./perl6 -e '.say'

[10:41] <moritz_> Could not find sub &infix:<!eq>

[10:42] <masak> moritz_++ # for even entertaining the thought

[10:43] <masak> I'm sorely tempted to submit that as a rakudobug :)

[10:43] <masak> but is it really a bug if you change the source code?

[10:43] <moritz_> no

[10:43] <masak> dang.

[10:43] <moritz_> you must resist.

[10:43] * masak succeeds, barely

[10:44] <masak> &

[10:44] *** masak left
[10:46] * moritz_ re-reads S06 on YOU_ARE_HERE

[10:47] <sorear> there are a few dark corners

[10:47] <sorear> I have user-defined settings and nested settings working

[10:47] <sorear> though I haven't figured out how to make perl6 -n -e 'FIRST { }' work et

[10:48] * moritz_ had hoped to implement -n as   multi MAIN(*@, :$v) { for lines() { YOU_ARE_HERE } }

[10:48] <moritz_> erm,, :$n!

[10:49] <sorear> it would be cute

[10:49] <sorear> the Rakudo setting stubber (to be fair, mine too) is fragile black magic

[10:49] <tadzik> I thought about it some time ago, unfortunately, command line switches live somewhere in Parrot

[10:50] <moritz_> details :-)

[10:50] <moritz_> I just wonder how -p is supposed to work

[10:50] <tadzik> REPLalike?

[10:50] <moritz_> it would have to access the inner scope's $_ in some way

[10:53] <sorear> S02:2563 ;)

[10:53] <sorear> it looks like the dependance on $_ is going away

[10:54] <sorear> perl6 -pe '$^a ** 2'

[10:56] *** pythonian4000 is now known as pythonian4000afk

[10:57] *** rindolf joined
[10:59] * sorear out

[11:04] *** jaldhar left
[11:04] <dalek> niecza/mm: 78739fd | sorear++ | src/Metamodel.pm:

[11:04] <dalek> niecza/mm: [mm] Implement START

[11:04] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/78739fde7ef9abca6ee2f6e025eecd6922be9ee1

[11:04] <dalek> niecza/mm: 76df230 | sorear++ | src/ (2 files):

[11:04] <dalek> niecza/mm: [mm] implement WhateverCode and transparent blocks

[11:04] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/76df230a3da65007c0d9f3a3b10e7d7ceb2b7e89

[11:04] <dalek> niecza/mm: fbc89d5 | sorear++ | src/ (2 files):

[11:04] <dalek> niecza/mm: [mm] Implement our packages, package access

[11:04] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/fbc89d5f20e3595c730c8abda3dd98f1dcf496c4

[11:04] *** jaldhar joined
[11:08] <tadzik> IO::Slurp is broken, is it known?

[11:08] *** x3nU is now known as sedzimir

[11:11] *** sedzimir is now known as x3nU

[11:17] *** ruoso joined
[11:20] <tadzik> rakudo: sub foo { say 'wurks' }; class A { method foo { foo() } }; A.new.foo

[11:20] <p6eval> rakudo ccde8d: OUTPUT«wurks␤»

[11:20] <tadzik> hrm

[11:27] <rindolf> Hmmm....

[11:29] <tadzik> rakudo: (1, 2, 3, 4, 6).first(9).Bool.perl # shouldn't it be Bool::False?

[11:30] <p6eval> rakudo ccde8d:  ( no output )

[11:30] <tadzik> rakudo: (1, 2, 3, 4, 6).first(9).Bool.perl.say # shouldn't it be Bool::False?

[11:30] <p6eval> rakudo ccde8d: OUTPUT«0␤»

[11:30] <tadzik> rakudo: (1, 2, 3, 4, 6).first(6).Bool.perl.say # it's ok here

[11:30] <p6eval> rakudo ccde8d: OUTPUT«Bool::True␤»

[11:40] *** whiteknight joined
[11:42] *** meppl joined
[11:48] *** f00li5h joined
[11:50] *** f00li5h left
[11:50] *** f00li5h joined
[11:52] *** WinstonSmith joined
[11:53] *** am0c joined
[11:54] *** colomon joined
[12:01] *** colbseton joined
[12:18] *** pmurias joined
[12:18] <pmurias> hi

[12:19] <moritz_> hi pmurias 

[12:19] *** makkksimal is now known as makkksimal_off

[12:28] *** colbseton left
[12:29] *** colbseton joined
[12:36] <pmurias> moritz_: anything interesting happened in #perl6?

[12:36] <moritz_> pmurias: you did notice the pugs repo move?

[12:36] *** masak joined
[12:36] <moritz_> and splitup

[12:43] *** hirschnase joined
[12:44] *** Kodi joined
[12:49] <jnthn> Afternoon, 6folk

[12:49] <masak> o/

[12:50] <flussence> rakudo: say "good {<morning day evening>[DateTime.now.hour div 8]}, #perl6"

[12:50] <p6eval> rakudo ccde8d: OUTPUT«good day, #perl6␤»

[12:50] <flussence> \o/

[12:51] <flussence> oh, my spectest cron job works now too!

[12:51] <masak> \o/

[12:51] <jnthn> sjn: Yay video! \o/

[12:52] <jnthn> sjn: Wow, these are done slickly!

[12:52] <tadzik> video?

[12:53] <jnthn> tadzik: Of my Oslo talk

[12:53] <jnthn> http://www.nuug.no/aktiviteter/20100914-little-tools-large-apps/

[12:54] <tadzik> oh nice, I've been reading the slides today

[12:54] *** paul1234 joined
[12:54] <masak> <-> is like -> but it puts 'is rw' on everything, right?

[12:55] <jnthn> right

[12:55] <masak> what about parameters in nested siggies?

[12:55] <moritz_> what about them?

[12:56] <masak> does using <-> make them 'is rw' as well?

[12:57] <jnthn> I suspect the impl doesn't curse, but perhaps it should...

[12:57] <jnthn> er, recurse

[12:57] <jnthn> :-)

[12:57] <moritz_> :-)

[12:57] <moritz_> nice freudian

[12:57] <masak> the impl doesn't have <-> yet.

[12:57] <jnthn> masak: Oh

[12:57] <masak> GGE regressed on that when moving to master.

[12:57] <jnthn> masak: OK, the compile time signature object has a method that changes all the stuff to rw

[12:57] <moritz_> it doesn't properly parse them, I guess LTM fail

[12:57] <jnthn> masak: Which <-> should just use when it will parse.

[12:58] <masak> ok, nice.

[12:58] <moritz_> rakudo: <-> $x { }

[12:58] <p6eval> rakudo ccde8d: OUTPUT«===SORRY!===␤Confused at line 22, near "<-> $x { }"␤»

[12:58] <moritz_> token term:sym<lambda>             { <?lambda> <pblock> }

[12:58] <moritz_> token lambda { '->' | '<->' }

[12:59] <jnthn> Oh, I wonder if <?lamba> is considered non-declarative...

[13:00] <moritz_> that would be bad

[13:00] * moritz_ tries to split up lambda into a proto token

[13:01] <moritz_> maybe the | alternative doesn't play well with nqp-rx's limited LTM

[13:03] <pmurias> moritz_: yes the repo move was suprising

[13:03] <jnthn> moritz_: I think it may be more the <?foo>

[13:03] <jnthn> Dunno though.

[13:03] <moritz_> pmurias: for me too

[13:04] <moritz_> pmurias: if you want any of the v6/ or mildew/ or smop/ things extracted into a separate repo, I can certainly do that

[13:04] <moritz_> jnthn: seems like, yes

[13:05] <pmurias> moritz_: i don't think there's any need for that

[13:05] <pmurias> moritz_: i thought you were the one doing the repo move

[13:06] <moritz_> yes. But it wasn't planned

[13:06] <moritz_> Juerd had to shut down the pugs repo, so I took emergency action

[13:06] <moritz_> I would have preferred a well-prepared move, with a nice cleanup, notifying all devs in advance etc.

[13:09] *** pmurias left
[13:13] * masak watches jnthn++ at http://www.nuug.no/aktiviteter/20100914-little-tools-large-apps/

[13:13] *** colbseton left
[13:13] *** Patterner left
[13:14] *** colbseton joined
[13:14] <jnthn> .oO( creepy, I'm being watched )

[13:14] *** orafu left
[13:14] *** orafu joined
[13:15] <masak> "Build a new Perl" -- I like that meme.

[13:16] * moritz_ welcomes masak to the Perl development team :-)

[13:16] <masak> :P

[13:16] <flussence> jnthn++ # really liking that multi sub MAIN() example

[13:16] <masak> jnthn: I think there is a clinical name for the irrational fear that one is being googled.

[13:17] <jnthn> .oO( Just because you're paranoid doesn't meant they aren't watching you... )

[13:17] *** rurban left
[13:18] <Kodi> rakudo: my $x = Hash.new(a => 1); $x<a> = 2; say $x.perl

[13:18] <p6eval> rakudo ccde8d: OUTPUT«Cannot modify readonly value␤  in '&infix:<=>' at line 1␤  in main program body at line 22:/tmp/hf21sGtKvO␤»

[13:18] *** zulon joined
[13:19] * masak submits rakudobug

[13:20] <moritz_> this makes some perverted sense.

[13:20] <Kodi> The implementation of hash initialization does indeed look fishy.

[13:20] <masak> moritz_: the error? I disagree.

[13:20] *** paul1234 left
[13:20] <Kodi> moritz_: What's your reasoning?

[13:21] <moritz_> Kodi: it binds $x<a> to 1

[13:21] <moritz_> and since 1 is not a container, you can't assign to $x<a> subsequently

[13:21] *** barika joined
[13:21] <moritz_> rakudo: my $x = 4; my $h = Hash.new(:$x); $h<a> = 42; say $x

[13:21] <p6eval> rakudo ccde8d: OUTPUT«4␤»

[13:22] <moritz_> rakudo: my $a = 4; my $h = Hash.new(:$a); $h<a> = 42; say $a

[13:22] <p6eval> rakudo ccde8d: OUTPUT«42␤»

[13:22] <moritz_> mind you, I'm not saying it's right; I just said it made some perverted sense.

[13:22] <Kodi> Shouldn't Hash.new assign rather than bind, since hashes are supposed to be mutable?

[13:22] <Kodi> Oh.

[13:23] <jnthn> Yeah, perverted sense, but I'm quite sure it's rong.

[13:25] <masak> jnthn++ # using the phrase "...then, just out of associativity, ..." in a talk :)

[13:26] <jnthn> I did...? :-)

[13:26] <masak> re [max]

[13:26] <jnthn> Ah :-)

[13:27] <moritz_> jnthn: you're under surveilance. Anything you say in a talk will be held for or against you :-)

[13:28] *** zulon left
[13:28] <masak> I'm enjoying the talk very much so far.

[13:28] *** Psyche^ joined
[13:28] *** Psyche^ is now known as Patterner

[13:28] *** pmurias joined
[13:30] <masak> rakudo: my $x = Hash.new(a => 1); $x<b> = 2; say $x.perl

[13:30] <p6eval> rakudo ccde8d: OUTPUT«{"b" => 2, "a" => 1}␤»

[13:32] <moritz_> huh

[13:32] <moritz_> I'm surprised that [+] .<destination> works

[13:32] <moritz_> in jnthn's talk

[13:32] <moritz_> shouldn't capture arrays be non-flattening?

[13:32] <jnthn> moritz_: You've let me reach the next slide to complete the example?

[13:32] <moritz_> rakudo: '123' ~~ /<alpha>+/; say [+] $<alpha>

[13:32] <p6eval> rakudo ccde8d: OUTPUT«0␤»

[13:33] <moritz_> oh.

[13:33] <jnthn> [+] .<destination>>>.<sales>

[13:33] <moritz_> so ». doesn't respect the nonflatteness?

[13:33] <jnthn> I think it probably puts whatever is on the left into (flattening) list context.

[13:33] <sjn> jnthn: yeah, the videos are nice! Only need to rehearse a little on timing and when to show text. :)

[13:33] <moritz_> rakudo: '123' ~~ /<alpha>+/; say [+] $<alpha>».Str

[13:34] <p6eval> rakudo ccde8d: OUTPUT«0␤»

[13:34] <moritz_> rakudo: '123' ~~ /<alpha>+/; say [+] $<alpha>.map: { $_ }

[13:34] <p6eval> rakudo ccde8d: OUTPUT«0␤»

[13:34] <moritz_> rakudo: '123' ~~ /<alpha>+/; say [+] $<alpha>[0]

[13:34] <p6eval> rakudo ccde8d: OUTPUT«Use of uninitialized value in numeric context␤0␤»

[13:34] * moritz_ stupid

[13:34] <jnthn> rakudo: '123' ~~ /<alpha>+/; say $/

[13:34] <p6eval> rakudo ccde8d: OUTPUT«␤»

[13:34] <jnthn> :-)

[13:34] <moritz_> it doesn't match :-)

[13:35] *** colbseton left
[13:35] <moritz_> rakudo: '123' ~~ /(.)+/; say [+] $0

[13:35] <p6eval> rakudo ccde8d: OUTPUT«3␤»

[13:35] <moritz_> rakudo: '123' ~~ /(.)+/; say [+] $0».Str

[13:35] <p6eval> rakudo ccde8d: OUTPUT«6␤»

[13:35] *** colbseton joined
[13:35] * moritz_ sometimes really wishes for an identify method or sub

[13:36] <masak> rakudo: sub id { $_ }; say id 42

[13:36] <p6eval> rakudo ccde8d: OUTPUT«Too many positional parameters passed; got 1 but expected 0␤  in 'id' at line 22:/tmp/mpmlhSAzZT␤  in main program body at line 22:/tmp/mpmlhSAzZT␤»

[13:36] <masak> rakudo: sub id { $^_ }; say id 42

[13:36] <p6eval> rakudo ccde8d: OUTPUT«===SORRY!===␤Multiple declarations of lexical '$_'␤␤»

[13:36] <masak> hm. fair enough.

[13:36] <jnthn> std:  sub id { $^_ }; 

[13:37] <p6eval> std : OUTPUT«[31m===[0mSORRY![31m===[0m␤$_ has already been used as a non-placeholder in the surrounding sub block,␤  so you will confuse the reader if you suddenly declare $^_ here at /tmp/aIk9H5pZux line 1:␤------> [32msub id { $^_[33m⏏[31m };[0m␤Check failed␤FAILED 00:01 115m␤»

[13:37] <masak> rakudo: sub id { $^a }; say id 42

[13:37] <p6eval> rakudo ccde8d: OUTPUT«42␤»

[13:37] <jnthn> std++ for the ncie errror

[13:37] <jnthn> jnthn-- for the unnice typing

[13:37] * jnthn visits da nomshop

[13:43] <moritz_> seems the drunken gymnast is the canonical role conflict example by now :-)

[13:43] <masak> \o/

[13:43] <masak> if I were a drunken gymnast, I too would be conflicted when thinking of going to the bar :)

[13:44] <moritz_> masak: if you were a drunken gymnast, you probably couldn't appreciate the joke :-)

[13:44] <masak> it's clearly better than the tree-dog-bark example :)

[13:45] <masak> moritz_: I think you're right. as a drunken gymnast, I might even feel a little singled out. :)

[13:46] *** whiteknight left
[13:49] *** pmurias left
[13:53] *** dual left
[14:01] <jnthn> "Perl 6 project deemed insensitive by Association of Drunken Gymnasts, barred from further use."

[14:01] <masak> *groan*

[14:01] *** sjn_ joined
[14:02] * moritz_ chuckles

[14:03] *** tadzik left
[14:03] *** colbseton left
[14:04] *** colbseton joined
[14:04] <masak> question re Rakudo: "is it close to being frozen?". huh?

[14:05] <masak> sometimes I'm amazed at how many people seem to reason this way.

[14:05] <moritz_> "what browser do you use?" -  "firefox" - "is it close to being frozen?"

[14:05] <masak> how close is the Perl 5 implementation to being frozen?

[14:07] <flussence> if they meant to say "finished", I'm not sure I've ever seen a frozen language...

[14:08] <flussence> okay, maybe VB6...

[14:08] *** rhebus left
[14:08] *** rgrau joined
[14:09] <Kodi> Maybe the person who asked that question meant to ask when Rakudo would commit to backwards compatibility. Whether it ever should, to the degree that Perl 5 does, is another story.

[14:09] <masak> Perl 6 was at a disadvantage from day 1 on the 'finished' point. it's impossible not to compare Perl 6 against Perl 5.

[14:09] <masak> Kodi: oh, then I guess it's more a question about the Spec than about Rakudo.

[14:10] <jnthn> I get more questions about spec freezes than Rakudo ones.

[14:11] <Kodi> masak: Partly, but also I think it's a given that Rakudo's behavior is never going to be entirely defined by the spec. It will always have its own eccentricities and extensions, however few.

[14:11] <Kodi> Besides bugs, I mean. :P

[14:11] <masak> I guess many people fall into the group "want to learn Perl 6, but want it to stop moving around first".

[14:12] <masak> i.e. non-early adopters.

[14:12] <Kodi> Right.

[14:16] *** tadzik joined
[14:19] *** rgrau left
[14:19] <Kodi> rakudo: my $x = (5, 6); say $x.WHAT; say $x[0].PARROT;

[14:19] <p6eval> rakudo ccde8d: OUTPUT«Seq()␤Int␤»

[14:20] <Kodi> rakudo: my $x = [5, 6]; say $x.WHAT; say $x[0].PARROT;

[14:20] <p6eval> rakudo ccde8d: OUTPUT«Array()␤Perl6Scalar->Int␤»

[14:21] *** Kodi left
[14:34] *** Su-Shee joined
[14:34] <Su-Shee> heyho.

[14:34] *** leprevost left
[14:38] <masak> Su-Shee: \o

[14:39] *** mj41 left
[14:39] <Su-Shee> can I make objects in rakudo and clone them without making classes? (javascript style OO)?

[14:39] <masak> sure.

[14:39] <Su-Shee> of course. ;)

[14:39] <masak> rakudo: my $a = Mu.new; my $b = $a.clone

[14:39] <p6eval> rakudo ccde8d:  ( no output )

[14:39] <masak> probably better to start from an anon class, though.

[14:40] <masak> since then you can give the objects attributes.

[14:40] *** satyavvd joined
[14:40] <Su-Shee> $a is an empty object if it comes from Mu, right?

[14:40] <masak> rakudo: my $a = (class { has $.name }).new( name => "Otto" ); my $b = $a.clone( name => "Beatrice" ); say .name for $a, $b

[14:40] <p6eval> rakudo ccde8d: OUTPUT«Otto␤Beatrice␤»

[14:41] <masak> Su-Shee: yeah, fsvo "empty"

[14:41] <masak> actually, for most values of "empty" :)

[14:42] <Su-Shee> yeah, I remember so far. ;)

[14:42] *** sjn_ left
[14:43] <masak> but the above practice, with anon classes and cloning, basically gives you JS-style prototype OO.

[14:43] <masak> you can even add in new methods with 'does' or 'but'.

[14:43] <masak> and anon roles.

[14:45] <jnthn> afk, kyrka

[14:45] *** mj41 joined
[14:50] *** dual joined
[14:52] *** sjn_ joined
[15:05] *** hercynium left
[15:14] *** felipe joined
[15:14] *** felipe left
[15:14] *** leprevost joined
[15:27] *** timbunce_ joined
[15:30] *** timbunce left
[15:30] *** timbunce_ is now known as timbunce

[15:44] <masak> ok, folks. I have a new blog: http://strangelyconsistent.org/

[15:44] <masak> much remains to be done, but at least it's up now :)

[15:45] <masak> notably, within the next week or so, I intend to add an atom feed, and the comments from use.perl.org

[15:48] <masak> the whole blog engine (just loose ends for now, but will eventually grow into a general static page generator) is written in Perl 6, except for the Markdown conversion, which I currently outsource to Perl 5.

[15:51] *** whiteknight joined
[16:04] *** h1rschnase joined
[16:06] *** hirschnase left
[16:06] *** h1rschnase is now known as hirschnase

[16:09] *** mberends left
[16:11] *** Kodi joined
[16:14] <masak> nom &

[16:14] *** masak left
[16:18] <pmichaud> rakudo:  my $x;  $x &&= 5;   say $x;   # I can argue this one as being correct.

[16:18] <p6eval> rakudo ccde8d: OUTPUT«5␤»

[16:19] <pmichaud> rakudo:   my $x;  $x *= 5;  say $x;   # compare with this one.

[16:19] <p6eval> rakudo ccde8d: OUTPUT«5␤»

[16:19] <flussence> rakudo: my $x; say $x.Bool;

[16:19] <p6eval> rakudo ccde8d: OUTPUT«0␤»

[16:20] <flussence> I tried the top one in p5 and it came out as false, so why's $x turning into 1 here?

[16:20] <flussence> rakudo: say Mu.Int

[16:21] <p6eval> rakudo ccde8d: OUTPUT«Method 'Int' not found for invocant of class ''␤  in main program body at line 22:/tmp/POJHcLwwhE␤»

[16:21] <pmichaud> it's not turning into 1

[16:21] <flussence> I don't really understand what's going on there...

[16:21] <pmichaud> which one?

[16:21] <flussence> oh, hang on a sec...

[16:22] <flussence> rakudo: my $x; say $x.WHAT

[16:22] <p6eval> rakudo ccde8d: OUTPUT«Any()␤»

[16:22] <flussence> Any coerces to a true value?

[16:22] <pmichaud> No.

[16:23] *** rbuels joined
[16:23] <pmichaud> The relevant spec is S03:3979

[16:23] <pmichaud> "If you apply an assignment operator to a container containing a type object

[16:23] <pmichaud> (which is undefined), it is assumed that

[16:23] <pmichaud> you are implementing some kind of notional "reduction" to an accumulator

[16:23] <pmichaud> variable.  To that end, the operation is defined in terms

[16:23] <pmichaud> of the corresponding reduction operator, where the type object

[16:23] <pmichaud> autovivifies to the operator's identify value."

[16:23] <pmichaud> and the identity value for && is True.

[16:24] <flussence> Oh!

[16:25] <Kodi> pmichaud: Which leaves the question of what on earth $x ^^= 2 should do, since ^^ has no identity (right?).

[16:26] <pmichaud> Its identity is false.

[16:26] <pmichaud> same as with or.

[16:26] <pmichaud> rakudo:  my $x;  $x ^^= 2;  say $x;

[16:26] <p6eval> rakudo ccde8d: OUTPUT«Null PMC access in invoke()␤  in main program body at line 1␤»

[16:26] *** satyavvd left
[16:26] <pmichaud> I ran into a small issue with ^^= so I skipped it for now (and it wasn't in the ticket anyway :)

[16:32] <Kodi> pmichaud: Am I right in thinking that @a[2] and %h<a>, given that we're talking about Arrays or Hashes or other *mutable* containers, should return (Perl6)Scalars? S02:423 seems to imply as much.

[16:47] <pmichaud> if @a is an Array, then yes, @a[2] should be a Perl6Scalar (and I think Rakudo implements them that way)

[16:48] <pmichaud> I'm not sure what Hash does... I suspect it's wrongish.

[16:48] <pmichaud> (which is another reason it needs a refactor)

[16:48] <Kodi> Rakudo has Perl6Scalars for both at the moment. But why should Hashes be different from Arrays here?

[16:49] *** tadzik left
[16:49] <pmichaud> they shouldn't

[16:50] <Kodi> Oh, I see.

[16:58] *** rgrau joined
[17:03] <pmichaud> afk, soccer

[17:03] *** Su-Shee left
[17:06] *** dual left
[17:06] <dalek> roast: bc0487b | pmichaud++ | S03-operators/short-circuit.t:

[17:06] <dalek> roast: Correct test in short-circuit.t (RT #77864).

[17:06] <dalek> roast: review: http://github.com/perl6/roast/commit/bc0487b85aa38ed2cdd2b7a1b48ba4f4e2c9d73a

[17:07] *** WinstonSmith left
[17:08] *** x3nU is now known as SinkCat

[17:10] *** char00les joined
[17:11] *** SinkCat is now known as x3nU

[17:15] <thowe> rakudo 2010.08 fails to build for me now.  This was an issue before and then got fixed.  2010.07 works

[17:15] <thowe> Failed allocation of 4545912 bytes

[17:15] <thowe> Parrot VM: PANIC: Out of mem!

[17:17] *** am0c left
[17:18] *** jedai_ joined
[17:18] *** jedai left
[17:19] <Raynes> I'm panicking, I'm panicking!

[17:21] *** Trashlord left
[17:21] *** WinstonSmith joined
[17:23] <TimToady> you're only allowed to panic once.

[17:27] *** paul1234 joined
[17:28] <diakopter> is there a limit on picnicking?

[17:29] <Kodi> diakopter: Well, better picnicking than nitpicking.

[17:30] *** envi^home left
[17:38] *** paul1234 left
[17:43] * jnthn back

[17:51] *** molaf__ left
[18:00] *** timbunce left
[18:02] *** whiteknight left
[18:04] <colomon> masak++ # very pretty blog

[18:07] *** wamba left
[18:07] *** alester joined
[18:13] *** whiteknight joined
[18:30] *** hercynium joined
[18:33] <diakopter> thowe: how much ram has that machine

[18:33] <thowe> 2G

[18:34] *** whiteknight left
[18:34] <thowe> I think I found a bug report for this already, though it isn't closed yet...

[18:35] <thowe> I'm back to 2010.07, so I'm OK for now.  I'll just make sure I check that the next one works before killing my old one :P

[18:37] *** LionMadeOfLions left
[18:38] *** whiteknight joined
[18:44] *** icwiener left
[18:46] *** hercynium_ joined
[18:46] *** hercynium_ left
[18:50] *** hercynium left
[18:50] *** hercynium joined
[18:52] *** alester left
[18:52] *** colbseton left
[18:54] <thowe> is a 4-space indene the standard perl6 style?

[18:54] <thowe> er indent

[19:00] *** WinstonSmith left
[19:02] *** felipe joined
[19:04] *** lichtkind joined
[19:04] <thowe> how does one make rakudo compile a perl6 program to bytecode?

[19:04] *** jedai joined
[19:05] *** jedai_ left
[19:09] *** lasse_ left
[19:14] <lichtkind> Juerd: ping

[19:17] <sorear> thowe: bytecode generation is mandatory.  Do you mean saving it to disk?

[19:18] <thowe> sorear, Yeah, sorry.  I assume if I have the bytecode I can make Parrot execute it faster than running against the source file every time, right?

[19:22] <sorear> well, load faster

[19:22] <sorear> execution won't be any different

[19:22] <sorear> since the loader always makes bytecode

[19:23] <thowe> OK, yeah.

[19:23] <sorear> perl6 --target=pir Foo.pm

[19:23] <sorear> er

[19:23] <sorear> perl6 -o Foo.pir --target=pir Foo.pm

[19:23] <sorear> parrot -o Foo.pbc Foo.pir

[19:28] <thowe> hmm.  parrot complains about syntax errors in my .pir

[19:28] <sorear> skip that step, it won't work

[19:29] <sorear> good * #perl6

[19:30] <Juerd> lichtkind: pong

[19:31] <lichtkind> Juerd: to you heard these chatbots here?

[19:34] *** WinstonSmith joined
[19:34] <Juerd> lichtkind: I can't parse that.

[19:35] <lichtkind> i mean herding like herding cats, meaning did you install evalbot and co?

[19:39] *** Kodi left
[19:41] <lichtkind> Juerd: i just lokk for someone to install here another chatbot

[19:41] <lichtkind> s/lokk/look/

[19:42] <Juerd> No, none(@bots) is any(installed,maintained) by me.

[19:42] <lichtkind> thanks, any clues who to ask?

[19:43] <Juerd> Not really, but ps axu could help :)

[19:51] *** gottreu_ left
[19:53] *** WinstonSmith left
[19:55] *** icwiener joined
[19:58] *** hercynium left
[20:06] *** gottreu_ joined
[20:06] *** jferrero joined
[20:12] *** svetlins_ joined
[20:16] *** DemoFreak joined
[20:18] *** mberends joined
[20:22] *** Mowah left
[20:28] *** hirschnase left
[20:33] *** dual joined
[20:36] *** rindolf left
[20:38] *** WinstonSmith joined
[20:38] *** lichtkind left
[20:39] *** lichtkind joined
[20:44] *** PacoLinux left
[20:46] *** icwiener left
[20:50] *** masak joined
[20:51] <masak> colomon: thanks. :) the layout is a bit bare, still. I'll try to 'adorn' it without cluttering it.

[20:51] *** gottreu_ left
[20:52] <colomon> masak: bare, but nice.

[20:52] <colomon> you'll be hooking it up to perl planet 6, I hope?

[20:53] *** mberends left
[20:54] <masak> colomon: I'll be adding an Atom feed next; then I'll add it.

[20:54] <colomon> masak++

[20:55] <masak> I must say it feels great to have a Perl 6-based blog. maybe more of you will try it if I package the software nicely? :)

[20:56] <colomon> I have grown very fond of wordpress, I fear.

[20:56] <colomon> but I think it's very awesome to have a p6-powered blog.  yet another reason it's nice that it's pretty.  :)

[20:56] <masak> \o/

[20:57] <masak> my long term plans are to add the ability to comment.

[20:58] <arnsholt> masak: You have a Perl 6-powered blog?

[20:58] <masak> arnsholt: http://strangelyconsistent.org/

[20:58] <colomon> it's p6 generating static pages, right?

[20:59] <masak> right. and in all fairness, right now it shells out to Markdown in Perl 5.

[20:59] *** WinstonSmith left
[20:59] <masak> I plan to fix that, too.

[20:59] <jnthn> lolitsmasak!

[21:00] <jnthn> masak: I think somebody already wrote an NQP implemenation of markdown => there's probably already a working Perl 6 grammar for it.

[21:00] <colomon> masak: speaking of that, have you seen http://www.codequarterly.com/code-challenges/markup/

[21:00] *** WinstonSmith joined
[21:00] <masak> jnthn: worth investigating.

[21:01] <masak> colomon: nope, will peruse.

[21:01] <colomon> masak: was very tempted to work on the challenge in that link, but the lure of ABC format was too great for me.  :)

[21:02] <masak> :)

[21:02] <jnthn> masak: http://github.com/fperrad/markdown/blob/master/markdown/grammar.pg

[21:02] <jnthn> masak: As you may guess from the .pg file extension, it's in need some a little updating. :-)

[21:03] <masak> nevertheless, probably something worth starting from.

[21:03] <colomon> grammar files used to be .pg?!

[21:03] <jnthn> It's, er, quite a big grammar.

[21:03] <masak> it would be.

[21:03] <jnthn> colomon: Before nqp-rx landed, the convention was to call them .pg

[21:04] <jnthn> It mostly only caught on amongst users of the compiler toolkit, though.

[21:05] <masak> fairly exciting election tonight.

[21:05] <masak> but now, time for sleep. &

[21:05] *** masak left
[21:08] <jnthn> Meh. Interesting as in "like all too much of Europe of late, nasty far right party attracts more votes than one may hope". :/

[21:10] *** WinstonSmith left
[21:10] *** WinstonSmith joined
[21:15] * sorear wonders if masak has played with mowyw

[21:16] <sorear> pmichaud: jnthn: have you any thoughts on #cpan6sketch agenda items / things I should do ?

[21:20] <pmichaud> good afternoon, #perl6

[21:21] <sorear> o/ pmichaud

[21:22] <dalek> rakudo: 523da45 | pmichaud++ | build/PARROT_REVISION:

[21:22] <dalek> rakudo: Bump PARROT_REVISION.

[21:22] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/523da453e6fdf2bfedf71619517ad07c86dcc5ec

[21:27] <jnthn> sorear: Nothing immediate. My main feelings are that we should try and use existing CPAN infrastructure where it makes sense to do so, should start small and achievable than large and grand and hard to achieve, but should probably get the version/authority stuff in at a reasonably early stage so that there's time to explore the upshots of it.

[21:28] <jnthn> There's a lot of people who've thought about module installation/distribution much more deeply than I have, though.

[21:29] <jnthn> Oh, the other thing I think matters is that the source code is authoritative in terms of being the primary source of a version number and authority.

[21:29] <jnthn> e.g. any other databases are caches. But I think that's more a module installer / Perl 6 implementation issue than a CPAN one.

[21:30] <jnthn> pmichaud: good evening :-)

[21:30] *** nymacro joined
[21:39] *** ruoso left
[21:40] <dalek> niecza/mm: ad61227 | sorear++ | src/ (2 files):

[21:40] <dalek> niecza/mm: [mm] implement exportation (of packages)

[21:40] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/ad61227092d2d22fe67fe23f08f237b1bf218e76

[21:40] <dalek> niecza/mm: 2abfd12 | sorear++ | / (4 files):

[21:40] <dalek> niecza/mm: [mm] Rip out PRE-INIT

[21:40] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/2abfd1247114ee523290f9af2843bf9fdb971764

[21:40] <dalek> niecza/mm: 3b8eaf3 | sorear++ | src/ (3 files):

[21:40] <dalek> niecza/mm: [mm] Implement accessor generation

[21:40] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/3b8eaf37dcb11962fe8b2f348b951d04ef5acfab

[21:40] *** mberends joined
[21:42] *** makkksimal_off is now known as makkksimal

[21:48] *** WinstonSmith left
[21:49] *** WinstonSmith joined
[21:57] *** ruoso joined
[21:59] <dalek> niecza/mm: fad06e5 | sorear++ | src/ (2 files):

[21:59] <dalek> niecza/mm: [mm] Implement bare blocks

[21:59] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/fad06e5b368bb35d3e70c46708c6f0e05596c2e6

[21:59] *** Guest23195 left
[21:59] <dalek> niecza/mm: cceef1a | sorear++ | src/Metamodel.pm:

[21:59] <dalek> niecza/mm: [mm] Implement multiregex list construction

[21:59] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/cceef1a602a0f3c6791959b246eb461783854b54

[21:59] <dalek> niecza/mm: 8816670 | sorear++ | src/Metamodel.pm:

[21:59] <dalek> niecza/mm: [mm] Implement sub exports

[21:59] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/8816670ba97e1464abb7a54e1478d4630b400ace

[21:59] <dalek> niecza/mm: b4eb756 | sorear++ | src/ (3 files):

[21:59] <dalek> niecza/mm: [mm] Implement gather stubs

[21:59] *** tadzik joined
[21:59] <dalek> niecza/mm: review: http://github.com/sorear/niecza/commit/b4eb7561b664199515d0684073fb7607b05a1a66

[22:14] *** tadzik left
[22:18] *** pythonian4000afk is now known as pythonian4000

[22:38] *** Raynes left
[22:54] *** Raynes joined
[22:55] *** Raynes is now known as Guest95982

[23:00] *** Guest95982 left
[23:00] *** Raynes_ joined
[23:00] *** Raynes_ is now known as Raynes

[23:00] *** Raynes left
[23:00] *** Raynes joined
[23:08] *** char00les left
[23:11] *** whiteknight left
[23:15] *** flatwhatson_ joined
[23:17] *** flatwhatson_ left
[23:18] *** rgrau left
[23:26] *** flatwhatson_ joined
[23:26] <sorear> I hate how verbose hash iteration is in Perl5

[23:34] <buu> I agree, but it seems like adding 'pairs' methods doesn't really solve the underlying problem.

[23:45] *** flatwhatson left
[23:46] *** hercynium joined
[23:48] <sorear> straw poll: how inconvenient would it be if eval() allocated 10KB and never freed it?

[23:50] <flussence> I consider "eval" synonymous with "evil" anyway, so...

[23:51] <flussence> if it's 10KB per eval and that causes someone problems, they're probably doing something wrong :)

[23:51] *** hercynium left
[23:53] <diakopter> flussence: okay okay, but disregarding that..

[23:54] <flussence> 10KB isn't something people would generally notice missing.

