[00:12] *** wamba left
[00:17] *** nymacro joined
[00:19] <masak> today's Advent post: http://perl6advent.wordpress.com/2010/12/14/day-14-nextsame-and-its-cousins/

[00:19] <diakopter> tomorrow's ;)

[00:19] <masak> whatever ;)

[00:20] <masak> it's already today over here...

[00:20] <masak> unfortunately, there's an empty slot tomorrow. :/

[00:21] <masak> we've got plenty of ideas for what to write about; anyone want to write advent post #15?

[00:23] *** ashleyde1 joined
[00:29] *** icwiener left
[00:29] *** ashleyde1 left
[00:34] <masak> 'night, #perl6

[00:34] *** masak left
[00:39] *** gimix joined
[00:50] *** felliott left
[00:57] *** felliott joined
[01:02] *** felliott left
[01:26] *** whiteknight left
[01:33] *** redicaps joined
[01:33] <colomon> phenny: tell masak "things tend to get more readable when you golf."  Wish I could have easily posted the process made working on the Markov chain script with moritz_++.  It started a pretty nice looking script, and found about three awesome simplifications that needed to be discarded before we landed on the final version.

[01:33] <phenny> colomon: I'll pass that on when masak is around.

[01:39] *** nymacro left
[01:39] *** am0c joined
[01:39] *** QinGW joined
[01:50] *** risou joined
[01:54] *** echosystm joined
[01:55] <echosystm> will perl6 be completely vm-based? as in no annoying c modules that need to be built?

[01:56] <echosystm> i mean, will the perl6 equivalent of cpan be mostly 'pure perl' modules or will there be a lot of C stuff still?

[01:57] <diakopter> echosystm: there are multiple implementations

[01:59] <diakopter> it seems you find building/installing 'c modules' annoying in order to interact with other native packages and such.  All the VMs of which I'm aware have ways to interact natively, and so folks who need them will create (and sometimes publish for free) modules that link them.

[02:00] <diakopter> echosystm: if you don't like their free gifts to you, that's fine...

[02:01] <echosystm> is that a yes?

[02:01] <diakopter> echosystm: the simple reality is that all that existing [natively built] code out there is too much to try to make "pure perl" and furthermore, in most cases, there aren't any reasons to.

[02:01] <echosystm> i'd like to know if perl6 will be like java, where i can just move a project over to a different computer, run it and have it just work

[02:02] <echosystm> having to compile things is a huge workflow killer at our workplace

[02:02] <diakopter> that is, of course, a vastly underqualified/unfair comparison

[02:02] <echosystm> every time we need to set something up on a server, our systems guys have a massive cry about dependencies blah blah blah

[02:02] <diakopter> there are plenty of situations where perl is far more portable than gobs of java code.

[02:03] <diakopter> that would be a problem with the "systems guys"

[02:03] <echosystm> yes, but it is a problem nonetheless

[02:03] <diakopter> yes.

[02:04] <echosystm> so... will perl6 be more portable like that?

[02:04] <echosystm> i assume yes, since it's using VMs like parrot etc.

[02:04] <diakopter> I'm having trouble deciding which part[s] of what I've already written I need to explain more

[02:05] <echosystm> "All the VMs of which I'm aware have ways to interact natively, and so folks who need them will create (and sometimes publish for free) modules that link them."

[02:05] <echosystm> ways to interact natively with what? and folks who need what? link to what?

[02:06] <echosystm> i don't follow that whole sentence

[02:06] <diakopter> say, perl6 to sqlite3

[02:06] <echosystm> oh right

[02:06] <diakopter> someone who uses rakudo on parrot can install a module to use that software

[02:07] <diakopter> someone has to write that module to link the two

[02:07] <diakopter> and publish it for free

[02:07] <diakopter> (so that we can talk about it like this) :)

[02:07] <echosystm> i'm talking more about examples like snmp

[02:08] <echosystm> from memory, in perl5 its standard to use net-snmp, which is a c library with perl interfaces

[02:08] <diakopter> sure

[02:08] <echosystm> instead of building it ontop of perl sockets and not keeping it 100% pure perl

[02:08] <echosystm> i assume that was done for performance reasons

[02:09] <echosystm> i suppose my question is, will things like that be done completely in perl or will we still have this dependency madness?

[02:09] <diakopter> performance of the code, but probably more importantly, expediency of creation of the bindings

[02:10] <diakopter> it is extremely difficult for me to imagine that thousands of programmers will rise up and translate/port the millions of LOC out there in order to meet your wish

[02:10] <echosystm> mm

[02:10] <echosystm> surely there are other people that feel the same way though?

[02:10] <diakopter> (as I've said, it's much more expedient to use what's already written)

[02:10] <echosystm> managing dependencies is a huge issue around here

[02:11] <diakopter> yes, but there are costs to indulging such feelings

[02:12] <diakopter> others are much more knowledgeable than I am about managing perl5 dependencies... I've heard good things, though, about perlbrew. 

[02:12] <echosystm> perlbrew aye

[02:12] <echosystm> *googles*

[02:13] <echosystm> this seems to be more about getting more than one version of perl installed

[02:14] <echosystm> anyway, i've got a few avenues to investigate

[02:14] <diakopter> if suddenly a company came along and said "here's $40B to port all open-source software to Perl 6", that'd be great... but then there would need to be an excellent fully-optimizing compiler to make that code as efficient as the other native libraries [including by finding the inefficiencies in all that $40B worth of ported code]. :D

[02:14] <echosystm> i was just curious is perl6 would be any different

[02:15] <diakopter> it'll be as different as people volunteer to make it

[02:17] <plobsing> echosystm: at some level, you need to drop down to C to do anything remotely useful. that or expose every operating system call as a builtin and reimplement libc in your language (both of which are pretty unreasonable things to do)

[02:21] <plobsing> what *will* likely go away are the glue libraries. NativeCall (as implemented by zavolaj) allows binding directly to the C libraries, meaning no XS is necessary (some conditions apply)

[02:22] <diakopter> echosystm: note that plobsing is referring to rakudo, which is only one of the several implementations, and in particular rakudo on parrot, which is only one of the VMs on which rakudo will run.

[02:23] <diakopter> the .net or mono edition of zavolaj might share its name, but it would look entirely different

[02:25] *** florz left
[02:25] <plobsing> diakopter: the guts may be different, but the interfaces should be the same

[02:25] *** florz joined
[02:25] *** risou_ joined
[02:26] *** risou left
[02:30] <colomon> hmmm... Advent post on creating a p6 module?

[02:34] *** cdarroch left
[02:41] <colomon> one sentence in, I hate it.  :\

[02:41] <colomon> maybe it will seem better in the morning

[02:52] *** stkowski left
[02:53] *** ch3ck3r joined
[02:57] *** ch3ck left
[03:02] <lopnor> hello,

[03:03] <lopnor> I tried to make a class instance from string variables,

[03:03] <lopnor> like this: https://gist.github.com/739951

[03:04] <lopnor> classname with colon fails with 'Null PMC access'

[03:04] <lopnor> am I doing something wrong?

[03:05] <colomon> I'm guessing it's indeed the colon.  But it's more likely a bug than something wrong you are doing.

[03:06] <lopnor> oh

[03:06] <lopnor> i walked around that with my $obj = eval "{$class}.new";

[03:07] *** am0c left
[03:08] <lopnor> thank you.

[03:08] <colomon> just for fun, try "Foo-Bar".new instead.

[03:08] <lopnor> k

[03:09] <colomon> I think the issue may have something to do with :: getting translated to - in nqp, or something to that effect.  (Not my area of expertise at all.)

[03:10] <lopnor> colomon: it failed

[03:11] <lopnor> thank you for the suggestion, anyway

[03:11] <colomon> you're welcome, sorry I don't have a fix for you.

[03:12] <colomon> phenny: tell masak Is lopnor's bug already reported?

[03:12] <phenny> colomon: I'll pass that on when masak is around.

[03:12] <lopnor> thank you!

[03:14] <plobsing> lopnor: I get a little further by sticking the class name in a ::var (still not all the way though).

[03:15] <lopnor> oh I'm waiting for that!

[03:17] *** jaldhar joined
[03:18] *** am0c joined
[03:19] *** Grimnir_ joined
[03:22] *** felliott joined
[03:23] *** echosystm left
[03:25] *** Grimnir_ left
[03:26] *** Zimbu joined
[03:26] *** takesako joined
[03:27] *** Grimnir_ joined
[03:36] *** glow left
[03:36] *** Trashlord left
[03:39] *** araujo left
[03:39] *** araujo joined
[03:39] *** araujo left
[03:39] *** araujo joined
[03:40] *** Trashlord joined
[03:55] *** ch3ck3r left
[03:57] <Zimbu> perl6: say "match" if 99 ~~ (99, 88, 77)

[03:57] <p6eval> pugs, rakudo :  ( no output )

[03:57] <Zimbu> Now, why didn't that match?  Been bugging me all evening.

[03:57] <diakopter> perl6: say "match" if 99 ~~ 77, 88, 99

[03:57] <p6eval> pugs, rakudo : OUTPUT«match␤»

[03:58] *** _twitch joined
[03:58] <diakopter> (dunno)

[03:58] <Zimbu> First real clue I've seen all night.  So what was the difference?

[03:58] <diakopter> dunno

[03:59] <Zimbu> The more I play with v6, the more I hope Larry's off somewhere writing a good book on all this.  :-)

[04:03] <colomon> rakudo: my $a := 99, 88 77; say $a; say $a.WHAT

[04:03] <p6eval> rakudo : OUTPUT«===SORRY!===␤Confused at line 22, near "my $a := 9"␤»

[04:03] <colomon> rakudo: my $a := 99, 88, 77; say $a; say $a.WHAT

[04:03] <p6eval> rakudo : OUTPUT«99 88 77␤Parcel()␤»

[04:03] <colomon> rakudo: my $a := (99, 88, 77); say $a; say $a.WHAT

[04:03] <p6eval> rakudo : OUTPUT«99 88 77␤Parcel()␤»

[04:04] <colomon> so much for that theory.

[04:06] <Zimbu> I was going down the same path (without leveraging the cool $a.WHAT, thanks for that).  Some semantic difference between list or array?

[04:07] <TimToady> smartmatched lists do not assume "any" semantics, unlike in Perl 5

[04:07] <colomon> TimToady++ # coming to the rescue

[04:07] <colomon> is the second one a precedence thing?  

[04:07] <colomon> (99 ~~ 77, 88, 99), I mean

[04:08] <TimToady> I have no idea how that worked

[04:08] <TimToady> rakudo: say 99 ~~ 77

[04:08] <p6eval> rakudo : OUTPUT«Bool::False␤»

[04:09] <TimToady> rakudo: say 99 ~~ any 77, 88, 99

[04:09] <p6eval> rakudo : OUTPUT«Bool::True␤»

[04:09] <colomon> rakudo: say "match" if (99 ~~ 77), 88, 99

[04:09] <p6eval> rakudo : OUTPUT«match␤»

[04:09] *** satyavvd joined
[04:09] <TimToady> ah

[04:09] <Zimbu> rakudo: say "match" if 99 ~~ (99, 99, 99)

[04:09] <p6eval> rakudo :  ( no output )

[04:09] <colomon> rakudo: say "match" if Bool::False, 88, 99

[04:09] <p6eval> rakudo : OUTPUT«match␤»

[04:10] <TimToady> rakudo: say 99 ~~ 99 | 99 | 99

[04:10] <p6eval> rakudo : OUTPUT«Bool::True␤»

[04:11] <colomon> rakudo: say "match" if 99 ~~ 77 | 88 | 99

[04:11] <p6eval> rakudo : OUTPUT«match␤»

[04:11] <colomon> rakudo: say "match" if 98 ~~ 77 | 88 | 99

[04:11] <p6eval> rakudo :  ( no output )

[04:14] <colomon> 'night, all

[04:14] <Zimbu> Thanks for the insights!

[04:15] <Zimbu> So let me see... smartmatching in this case w/o parens is a "false match" due to precedence.

[04:15] <Zimbu> And junctions work as you'd expect.

[04:19] <Zimbu> Gotta run.  I'll keep puzzling over this.

[04:20] *** Zimbu left
[04:23] *** risou_ left
[04:36] *** dju_ joined
[04:37] *** d4l3k_ joined
[04:38] *** satyavvd left
[04:39] *** lestaway joined
[04:39] *** stepnem_ joined
[04:40] *** mathw_ joined
[04:40] *** perigrin_ joined
[04:40] *** ascent__ joined
[04:40] *** rblackwe joined
[04:40] *** Tene_ joined
[04:40] *** Tene_ left
[04:40] *** Tene_ joined
[04:40] *** edenc_ joined
[04:40] *** krakan_ joined
[04:40] *** jedai joined
[04:40] *** drbean_ joined
[04:40] *** BinGOs_ joined
[04:40] *** TimToady_ joined
[04:40] *** rokoteko_ joined
[04:40] *** shortcir1uit joined
[04:40] *** pothos_ joined
[04:41] *** nperez joined
[04:44] *** robins joined
[04:48] *** felliott left
[04:52] *** dual_ left
[04:52] *** Eevee left
[04:52] *** Grrrr left
[04:52] *** spinclad left
[04:52] *** literal left
[04:52] *** florz left
[04:52] *** Guest19368 left
[04:52] *** simcop2387 left
[04:52] *** clkao_ left
[04:52] *** cognominal left
[04:52] *** mkramer left
[04:52] *** dsp_ left
[04:52] *** edenc_ left
[04:52] *** ascent__ left
[04:52] *** Trashlord left
[04:52] *** IllvilJa left
[04:52] *** Patterner left
[04:52] *** lamstyle left
[04:52] *** wooden left
[04:52] *** rhr left
[04:52] *** cotto_work left
[04:52] *** sunnavy left
[04:52] *** y3llow left
[04:52] *** s1n1 left
[04:52] *** c9s left
[04:52] *** Tene_ left
[04:52] *** rblackwe left
[04:52] *** _twitch left
[04:52] *** Grimnir_ left
[04:52] *** skangas left
[04:52] *** ggoebel left
[04:52] *** jlaire left
[04:52] *** dukeleto left
[04:52] *** krunen_ left
[04:52] *** kcwu left
[04:52] *** gfldex left
[04:52] *** jedai_ left
[04:52] *** dju left
[04:52] *** shortcircuit left
[04:52] *** pothos left
[04:52] *** edenc left
[04:52] *** perigrin left
[04:52] *** _sri left
[04:52] *** rblackwe_ left
[04:52] *** barika left
[04:52] *** arnsholt left
[04:52] *** ascent_ left
[04:52] *** lestrrat left
[04:52] *** mathw left
[04:52] *** krakan left
[04:52] *** Tene left
[04:52] *** tomaw left
[04:52] *** QinGW left
[04:52] *** puddingpimp left
[04:52] *** orafu left
[04:52] *** cjk101010 left
[04:52] *** [particle]1 left
[04:52] *** kfo left
[04:52] *** BinGOs_ left
[04:52] *** krakan_ left
[04:52] *** perigrin_ left
[04:52] *** araujo left
[04:52] *** am0c left
[04:52] *** [Coke] left
[04:52] *** f00li5h left
[04:52] *** baest left
[04:52] *** yves__ left
[04:52] *** Caffeine left
[04:52] *** nothingmuch left
[04:52] *** snarkyboojum left
[04:52] *** awwaiid_ left
[04:52] *** Woody4286 left
[04:52] *** peters_mops left
[04:52] *** revdiablo left
[04:52] *** d4l3k_ is now known as dalek

[04:52] *** ChanServ sets mode: +v dalek

[04:53] *** gfldex joined
[04:53] *** kcwu joined
[04:53] *** Bucciarati joined
[04:53] *** sECuRE joined
[04:53] *** szbalint joined
[04:53] *** kolibrie joined
[04:53] *** pochi_ joined
[04:53] *** lue joined
[04:53] *** HarryS joined
[04:53] *** Kovensky joined
[04:53] *** PacoLinux joined
[04:53] *** cotto_work joined
[04:53] *** rhr joined
[04:53] *** wooden joined
[04:53] *** lamstyle joined
[04:53] *** Patterner joined
[04:53] *** IllvilJa joined
[04:53] *** Trashlord joined
[04:53] *** ascent__ joined
[04:53] *** edenc_ joined
[04:54] *** Gothmog_ joined
[04:54] *** barika_ joined
[04:54] *** oha_ joined
[04:54] *** __sri joined
[04:54] *** DarthGandalf joined
[04:54] *** arnsholt_ joined
[04:54] *** QinGW joined
[04:54] *** puddingpimp joined
[04:54] *** orafu joined
[04:54] *** cjk101010 joined
[04:54] *** [particle]1 joined
[04:54] *** kfo joined
[04:54] *** zb joined
[04:54] *** zostay joined
[04:54] *** dual_ joined
[04:54] *** Eevee joined
[04:54] *** Grrrr joined
[04:54] *** spinclad joined
[04:54] *** literal joined
[04:55] *** Tene_ joined
[04:55] *** rblackwe joined
[04:55] *** _twitch joined
[04:55] *** Grimnir_ joined
[04:55] *** skangas joined
[04:55] *** ggoebel joined
[04:55] *** gabiruh joined
[04:55] *** Util joined
[04:55] *** breinbaas joined
[04:55] *** nsh- joined
[04:55] *** jlaire joined
[04:55] *** dukeleto joined
[04:55] *** krunen_ joined
[04:55] *** sunnavy joined
[04:55] *** y3llow joined
[04:55] *** s1n1 joined
[04:55] *** flussence joined
[04:55] *** gbacon joined
[04:55] *** Khisanth joined
[04:55] *** shabble joined
[04:55] *** frettled joined
[04:55] *** lopnor joined
[04:55] *** rjbs joined
[04:55] *** c9s joined
[04:55] *** BinGOs_ joined
[04:55] *** krakan_ joined
[04:55] *** perigrin_ joined
[04:55] *** araujo joined
[04:55] *** am0c joined
[04:55] *** [Coke] joined
[04:55] *** f00li5h joined
[04:55] *** baest joined
[04:55] *** yves__ joined
[04:55] *** Caffeine joined
[04:55] *** nothingmuch joined
[04:55] *** snarkyboojum joined
[04:55] *** awwaiid_ joined
[04:55] *** kst joined
[04:55] *** Exodist joined
[04:55] *** _ilbot joined
[04:55] *** huf joined
[04:55] *** nrr joined
[04:55] *** jnthn joined
[04:55] *** spacebat joined
[04:55] *** estrabd joined
[04:55] *** kthakore joined
[04:55] *** Woody4286 joined
[04:55] *** peters_mops joined
[04:55] *** revdiablo joined
[04:56] *** florz joined
[04:56] *** Guest19368 joined
[04:56] *** simcop2387 joined
[04:56] *** clkao_ joined
[04:56] *** cognominal joined
[04:56] *** mkramer joined
[04:56] *** dsp_ joined
[04:56] *** sorear joined
[04:56] *** slavik1 joined
[04:56] *** Lorn joined
[04:56] *** lopnor is now known as lopaway

[04:56] *** lopaway is now known as lopnor

[04:56] *** pothos joined
[04:56] *** DarthGandalf left
[04:56] *** DarthGandalf joined
[04:57] *** hillu_ joined
[04:57] *** florz left
[04:57] *** Guest19368 left
[04:57] *** simcop2387 left
[04:57] *** clkao_ left
[04:57] *** cognominal left
[04:57] *** mkramer left
[04:57] *** dsp_ left
[04:57] *** sorear left
[04:57] *** slavik1 left
[04:57] *** Lorn left
[04:57] *** pothos left
[04:57] *** BinGOs_ left
[04:57] *** krakan_ left
[04:57] *** perigrin_ left
[04:57] *** araujo left
[04:57] *** am0c left
[04:57] *** [Coke] left
[04:57] *** f00li5h left
[04:57] *** baest left
[04:57] *** yves__ left
[04:57] *** Caffeine left
[04:57] *** nothingmuch left
[04:57] *** snarkyboojum left
[04:57] *** awwaiid_ left
[04:57] *** kst left
[04:57] *** Exodist left
[04:57] *** _ilbot left
[04:57] *** huf left
[04:57] *** nrr left
[04:57] *** jnthn left
[04:57] *** spacebat left
[04:57] *** estrabd left
[04:57] *** kthakore left
[04:57] *** Woody4286 left
[04:57] *** peters_mops left
[04:57] *** revdiablo left
[04:57] *** hillu_ left
[04:57] *** sunnavy left
[04:57] *** y3llow left
[04:57] *** s1n1 left
[04:57] *** flussence left
[04:57] *** gbacon left
[04:57] *** Khisanth left
[04:57] *** shabble left
[04:57] *** frettled left
[04:57] *** lopnor left
[04:57] *** rjbs left
[04:57] *** c9s left
[04:57] *** Tene_ left
[04:57] *** rblackwe left
[04:57] *** _twitch left
[04:57] *** Grimnir_ left
[04:57] *** skangas left
[04:57] *** ggoebel left
[04:57] *** gabiruh left
[04:57] *** Util left
[04:57] *** breinbaas left
[04:57] *** nsh- left
[04:57] *** jlaire left
[04:57] *** dukeleto left
[04:57] *** krunen_ left
[04:57] *** dual_ left
[04:57] *** Eevee left
[04:57] *** Grrrr left
[04:57] *** spinclad left
[04:57] *** literal left
[04:57] *** Gothmog_ left
[04:57] *** barika_ left
[04:57] *** oha_ left
[04:57] *** __sri left
[04:57] *** DarthGandalf left
[04:57] *** arnsholt_ left
[04:57] *** QinGW left
[04:57] *** puddingpimp left
[04:57] *** orafu left
[04:57] *** cjk101010 left
[04:57] *** [particle]1 left
[04:57] *** kfo left
[04:57] *** zb left
[04:57] *** zostay left
[04:57] *** kcwu left
[04:57] *** gfldex left
[04:57] *** edenc_ left
[04:57] *** ascent__ left
[04:57] *** Trashlord left
[04:57] *** IllvilJa left
[04:57] *** Patterner left
[04:57] *** lamstyle left
[04:57] *** wooden left
[04:57] *** rhr left
[04:57] *** cotto_work left
[04:57] *** PacoLinux left
[04:57] *** Kovensky left
[04:57] *** HarryS left
[04:57] *** lue left
[04:57] *** pochi_ left
[04:57] *** kolibrie left
[04:57] *** szbalint left
[04:57] *** sECuRE left
[04:57] *** Bucciarati left
[04:57] *** frooh_ joined
[04:57] *** stepnem_ is now known as stepnem

[04:57] *** mux left
[04:57] *** TimToady_ left
[04:57] *** frooh left
[04:57] *** toebu left
[04:57] *** pothos_ left
[04:58] *** mux joined
[04:58] *** TimToady joined
[04:58] *** Helios` joined
[04:58] *** HarryS joined
[04:58] *** ultraviolent joined
[04:58] *** jdv79 joined
[04:58] *** hillu_ joined
[04:58] *** pothos joined
[04:58] *** Lorn joined
[04:58] *** slavik1 joined
[04:58] *** sorear joined
[04:58] *** dsp_ joined
[04:58] *** mkramer joined
[04:58] *** cognominal joined
[04:58] *** clkao_ joined
[04:58] *** simcop2387 joined
[04:58] *** Guest19368 joined
[04:58] *** florz joined
[04:58] *** revdiablo joined
[04:58] *** peters_mops joined
[04:58] *** Woody4286 joined
[04:58] *** kthakore joined
[04:58] *** estrabd joined
[04:58] *** spacebat joined
[04:58] *** jnthn joined
[04:58] *** nrr joined
[04:58] *** huf joined
[04:58] *** _ilbot joined
[04:58] *** Exodist joined
[04:58] *** kst joined
[04:58] *** awwaiid_ joined
[04:58] *** snarkyboojum joined
[04:58] *** nothingmuch joined
[04:58] *** Caffeine joined
[04:58] *** yves__ joined
[04:58] *** baest joined
[04:58] *** f00li5h joined
[04:58] *** [Coke] joined
[04:58] *** am0c joined
[04:58] *** araujo joined
[04:58] *** perigrin_ joined
[04:58] *** krakan_ joined
[04:58] *** BinGOs_ joined
[04:58] *** c9s joined
[04:58] *** rjbs joined
[04:58] *** lopnor joined
[04:58] *** frettled joined
[04:58] *** shabble joined
[04:58] *** Khisanth joined
[04:58] *** gbacon joined
[04:58] *** flussence joined
[04:58] *** s1n1 joined
[04:58] *** y3llow joined
[04:58] *** sunnavy joined
[04:58] *** krunen_ joined
[04:58] *** dukeleto joined
[04:58] *** jlaire joined
[04:58] *** nsh- joined
[04:58] *** breinbaas joined
[04:58] *** Util joined
[04:58] *** gabiruh joined
[04:58] *** ggoebel joined
[04:58] *** skangas joined
[04:58] *** Grimnir_ joined
[04:58] *** _twitch joined
[04:58] *** rblackwe joined
[04:58] *** Tene_ joined
[04:58] *** literal joined
[04:58] *** spinclad joined
[04:58] *** Grrrr joined
[04:58] *** Eevee joined
[04:58] *** dual_ joined
[04:58] *** zostay joined
[04:58] *** zb joined
[04:58] *** kfo joined
[04:58] *** [particle]1 joined
[04:58] *** cjk101010 joined
[04:58] *** orafu joined
[04:58] *** puddingpimp joined
[04:58] *** QinGW joined
[04:58] *** arnsholt_ joined
[04:58] *** DarthGandalf joined
[04:58] *** __sri joined
[04:58] *** oha_ joined
[04:58] *** barika_ joined
[04:58] *** Gothmog_ joined
[04:58] *** gfldex joined
[04:58] *** kcwu joined
[04:58] *** Bucciarati joined
[04:58] *** sECuRE joined
[04:58] *** szbalint joined
[04:58] *** kolibrie joined
[04:58] *** pochi_ joined
[04:58] *** lue joined
[04:58] *** Kovensky joined
[04:58] *** PacoLinux joined
[04:58] *** cotto_work joined
[04:58] *** rhr joined
[04:58] *** wooden joined
[04:58] *** lamstyle joined
[04:58] *** Patterner joined
[04:58] *** IllvilJa joined
[04:58] *** Trashlord joined
[04:58] *** ascent__ joined
[04:58] *** edenc_ joined
[04:58] *** toebu joined
[04:58] *** y3llow left
[04:58] *** y3llow joined
[04:59] <OxCart> netsplits are much funnier on large networks

[05:01] *** tomaw joined
[05:01] *** [sbp] joined
[05:01] *** satyavvd joined
[05:05] <sorear> good * #perl6

[05:07] <ponbiki> :3

[05:09] <sorear> phenny: tell masak Due to circumstances beyond my control, I'm likely to miss most of #phasers, sorry.  I'll be able to make #phasers+24h though.

[05:09] <phenny> sorear: I'll pass that on when masak is around.

[05:10] * shortcir1uit yawns

[05:10] <shortcir1uit> I forgot to write the post until way, way too late.

[05:10] <shortcir1uit> It's now 12:08AM. I've rewritten the first two paragraphs thrice, and it still sounds like something I'd have written in early high school.

[05:10] <shortcir1uit> I'll try again tomorrow. :-|

[05:11] <sorear> shortcir1uit is doing p6advent/

[05:12] <lue> ohai o/

[05:25] <dalek> niecza/clibackend: bd33d2f | sorear++ | src/Metamodel.pm:

[05:25] <dalek> niecza/clibackend: Include names in cross-reference nodes

[05:25] <dalek> niecza/clibackend: review: https://github.com/sorear/niecza/commit/bd33d2f751

[05:25] <dalek> niecza/clibackend: 4c0d984 | sorear++ | / (9 files):

[05:25] <dalek> niecza/clibackend: WIP: Start codegen overhaul

[05:25] <dalek> niecza/clibackend: 

[05:25] <dalek> niecza/clibackend: CgOp::xxx now generates portable nodes. A skeleton of a NAM

[05:25] <dalek> niecza/clibackend: writer exists.

[05:25] <dalek> niecza/clibackend: review: https://github.com/sorear/niecza/commit/4c0d984e29

[05:25] <dalek> niecza/clibackend: add05ef | sorear++ | src/ (4 files):

[05:25] <dalek> niecza/clibackend: Prototype the JSON-based to_nam

[05:25] <dalek> niecza/clibackend: review: https://github.com/sorear/niecza/commit/add05ef90d

[05:25] *** yves__ left
[05:25] *** nymacro joined
[05:26] <dalek> niecza/cilbackend: bd33d2f | sorear++ | src/Metamodel.pm:

[05:26] <dalek> niecza/cilbackend: Include names in cross-reference nodes

[05:26] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/bd33d2f751

[05:26] <dalek> niecza/cilbackend: 4c0d984 | sorear++ | / (9 files):

[05:26] <dalek> niecza/cilbackend: WIP: Start codegen overhaul

[05:26] <dalek> niecza/cilbackend: 

[05:26] <dalek> niecza/cilbackend: CgOp::xxx now generates portable nodes. A skeleton of a NAM

[05:26] <dalek> niecza/cilbackend: writer exists.

[05:26] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/4c0d984e29

[05:26] <dalek> niecza/cilbackend: add05ef | sorear++ | src/ (4 files):

[05:26] <dalek> niecza/cilbackend: Prototype the JSON-based to_nam

[05:26] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/add05ef90d

[05:35] *** envi joined
[05:38] <lue> .oO(How do I search for a webhost that allows perl6? It's not exactly popular right now...)

[05:42] *** Guest19368 left
[05:44] <sorear> lue: search for a VPS instead

[05:44] *** QinGW left
[05:45] *** _kaare joined
[05:45] <sorear> lue: if you're only going to be using it for Perl6-related activities, you could also ask Juerd for an acct on feather.perl6.nl

[05:46] *** QinGW joined
[05:52] *** starcoder joined
[05:53] <lue> thanks sorear, I'm looking at VPS. [ I'm actually shooting for building a website, so I don't think feather would be ok for that :) ]

[05:55] *** lopnor is now known as lopaway

[06:00] *** redicaps left
[06:02] *** yves joined
[06:08] *** lestaway is now known as lestrrat

[06:10] *** dual_ left
[06:10] *** Eevee left
[06:10] *** Grrrr left
[06:10] *** spinclad left
[06:10] *** literal left
[06:10] *** dual_ joined
[06:10] *** Eevee joined
[06:10] *** Grrrr joined
[06:10] *** spinclad joined
[06:10] *** literal joined
[06:11] *** szbalint left
[06:11] *** szbalint joined
[06:31] <diakopter> lue: actually feather is fine for hosting a perl6-related website

[06:33] <lue> Does a website utilizing perl6 count as perl6-related? :) [It would probably gravitate towards perl6, but I plan on it being more a 'whatever I feel like having up' kind of site :D]

[06:33] <diakopter> well sure, sounds like a blog

[06:34] *** lopaway is now known as lopnor

[06:36] *** Alias_ joined
[06:37] <diakopter> Alias_: how many timezones span Australia?

[06:37] <Alias_> 3 hours give or take

[06:38] <Alias_> Not including offshore islands

[06:38] <diakopter> oh

[06:38] <diakopter> that's what was confusing me

[06:39] <diakopter> also some half-hour-off timezones

[06:39] <diakopter> and one 45-min-off one

[06:39] <Alias_> And there's 5-6 timezones within that 3 hour range, depending on daylight savings

[06:40] <diakopter> yeah; I was glancing at http://www.timeanddate.com/worldclock/custom.html?continent=australasia&sort=1

[06:41] <diakopter> the day's winding down here.. and by "the day", I mean Monday :)

[06:43] <diakopter> lue: no one would object to a website running on perl6, on feather, on principle. however, to be cautious, it would be wise to make it run in a protected VM

[06:44] <lue> I'll have to continue thinking about it. .oO(could I be (insane&rich) enough to get an actual server I can put on my desk? No.)

[06:45] <lue> I suppose the biggest hurdle for me to clear is how to run my own website/server (never been serious enough to go beyond free hosting) :P . Ah well, good night world o/

[06:46] <Alias_> First step beying free hosting is something like a dreamhost account

[06:46] <Alias_> Shared hosting

[06:47] <Alias_> Infinite disk and bandwidth and domains, a fair whack of DWIM tools, but not much CPU or memory to call your own

[06:47] <diakopter> but.. no perl6

[06:47] <Alias_> Perfectly fine for static sites and simple CGI scripts that won't be called a whole lot, with cron options and so on

[06:47] <Alias_> Unless you built it yourself

[06:47] <diakopter> no, I mean, you don't get a shell

[06:47] <Alias_> Which you may well be able to do

[06:47] <Alias_> Sure you do

[06:48] <Alias_> Dreamhost lets you create like 10 users, users gets shells

[06:48] <Alias_> Dunno if you get compilers and what not though

[06:48] <diakopter> hm, oh

[06:49] <diakopter> i've always used VPSes (and lots of them)

[06:50] <Alias_> dreamhost is cheaper if you don't need dedicated cpu and memory

[06:50] <Alias_> $10 a month for infinite domains, disk and bandwidth

[06:51] <Alias_> I've got about 10-15 small miscellaneous sites on one account there, plus one VM for stuff like svn.ali.as that really need the cpu

[06:52] <diakopter> rakudo & parrot have been known to take 1-2GB to build

[07:01] *** wtw joined
[07:06] <dalek> specs: e4cd4c8 | moritz++ | S06-routines.pod:

[07:06] <dalek> specs: [S06] fix a logic flaw introduced in 15f0b2b

[07:06] <dalek> specs: review: https://github.com/perl6/specs/commit/e4cd4c8c9f

[07:25] <sorear> what is lue's budget?

[07:39] *** larsen left
[07:40] *** larsen joined
[07:44] *** nymacro left
[07:44] *** OxCart left
[07:45] *** pluto_ joined
[07:46] *** pluto_ left
[07:49] *** nymacro joined
[08:01] *** justatheory left
[08:14] *** BinGOs_ is now known as BinGOs

[08:15] *** BinGOs left
[08:15] *** BinGOs joined
[08:28] *** mathw_ is now known as mathw

[08:36] *** Trashlord left
[08:40] *** Trashlord joined
[08:43] *** lopnor is now known as lopaway

[08:44] *** kjeldahl joined
[08:46] *** oha_ is now known as oha

[08:46] *** yves left
[08:46] *** wooden left
[08:46] *** PacoLinux left
[08:47] *** PacoLinux joined
[08:47] *** wooden joined
[08:47] *** wooden left
[08:47] *** wooden joined
[08:47] *** ascent__ left
[08:47] *** ascent_ joined
[08:49] *** glow joined
[08:51] *** felipe joined
[08:51] *** pochi_ left
[08:51] *** Koven joined
[08:51] *** pochi joined
[08:51] *** __rnddim__ joined
[08:52] *** lue left
[08:52] *** edenc_ left
[08:53] *** edenc joined
[08:53] *** Kovensky left
[08:53] *** yves joined
[08:56] *** IllvilJa left
[08:56] *** rhr left
[08:56] *** kolibrie left
[08:57] *** kolibrie joined
[08:57] *** rhr joined
[08:58] *** IllvilJa joined
[09:10] *** cosimo joined
[09:15] *** kensanata joined
[09:18] *** wamba joined
[09:24] *** jhuni left
[09:26] *** dakkar joined
[09:29] <TiMBuS> ah nuts i just noticed the perl6 ecosystem repo has the wrong link for my module on github

[09:29] <TiMBuS> is anyone with access online?

[09:30] <TiMBuS> its meant to be:  git://github.com/TiMBuS/Net--IRC.git

[09:32] <moritz_> TiMBuS: you have access now

[09:34] *** lopaway is now known as lopnor

[09:38] <dalek> niecza/cilbackend: ee2c1df | sorear++ | / (2 files):

[09:38] <dalek> niecza/cilbackend: Add writenam stage

[09:38] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/ee2c1dfaee

[09:38] <dalek> niecza/cilbackend: 4baa098 | sorear++ | src/ (3 files):

[09:38] <dalek> niecza/cilbackend: Fix remaining crashes in NAM emitter

[09:38] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/4baa098de2

[09:38] <dalek> niecza/cilbackend: 7e24295 | sorear++ | lib/CLRBackend.cs:

[09:38] <dalek> niecza/cilbackend: Start NAM consumer

[09:38] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/7e2429567e

[09:47] <dalek> book: 51ea448 | (Jerome Eteve)++ | src/images/.gitignore:

[09:47] <dalek> book: Ignore make time generated src/image/ files

[09:47] <dalek> book: review: https://github.com/perl6/book/commit/51ea448835

[09:47] <dalek> book: 4e8d751 | (Jerome Eteve)++ | / (3 files):

[09:47] <dalek> book: Allow any paper width and height to be specified in PAPER make variable

[09:47] <dalek> book: review: https://github.com/perl6/book/commit/4e8d7513ec

[09:51] <moritz_> rakudo: class A { method x { say 'A::x' } }; class B is A { method x { say 'B::x 1'; nextsame; say 'B::x 2' } }; B.new.x

[09:51] <p6eval> rakudo : OUTPUT«B::x 1␤A::x␤»

[09:51] <moritz_> rakudo: class A { method x { say 'A::x' } }; class B is A { method x { say 'B::x 1'; callsame; say 'B::x 2' } }; B.new.x

[09:51] <p6eval> rakudo : OUTPUT«B::x 1␤A::x␤B::x 2␤»

[09:52] <moritz_> dammit, my last specs commit was wrong

[09:52] <moritz_> and I can't access the machine on which I could revert it :(

[09:52] <moritz_> anybody else wants the honor?

[09:54] <sorear> how wrong?

[09:57] *** agentzh joined
[09:58] <moritz_> it changed working to broken code

[09:58] <moritz_> I confused nextsame and callsame

[09:58] <moritz_> nextsame was correct, I susbtitutde it with callsame

[09:59] <sorear> it's nextsame now

[09:59] <moritz_> wait

[09:59] * moritz_ just confused it again

[09:59] <moritz_> the return value is used

[09:59] <moritz_> so it must return

[09:59] <moritz_> so it should be callsame

[10:00] <moritz_> and my last commit changed s/callsame/nextsame/, which was wrong

[10:00] <moritz_> does that make sense?

[10:00] <dalek> specs: 2e9f35c | sorear++ | S06-routines.pod:

[10:00] <dalek> specs: Revert "[S06] fix a logic flaw introduced in 15f0b2b"

[10:00] <dalek> specs: 

[10:00] <dalek> specs: It has to be callsame, since the return value is used.

[10:00] <dalek> specs: review: https://github.com/perl6/specs/commit/2e9f35c89f

[10:00] <sorear> yes

[10:01] <moritz_> thanks

[10:01] * moritz_ should really take a break

[10:02] *** QinGW left
[10:06] *** daxim joined
[10:11] *** wamba left
[10:18] *** tzhs joined
[10:19] *** bluescreen joined
[10:19] *** bluescreen is now known as Guest38867

[10:19] *** Guest87704 joined
[10:27] *** literal left
[10:27] *** uniejo joined
[10:29] *** literal joined
[10:35] * sorear out

[10:55] *** Guest87704 left
[10:57] *** rokoteko_ is now known as rokoteko

[10:57] *** rokoteko left
[10:57] *** rokoteko joined
[11:05] *** nymacro left
[11:08] <dalek> ecosystem: 5af742d | Jarrod++ | projects.list:

[11:08] <dalek> ecosystem: Fixed a broken git URL for Net-IRC

[11:08] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/5af742dbd5

[11:09] <TiMBuS> moritz_++ # Thanks for the commit bit

[11:16] *** zostay left
[11:16] *** zostay joined
[11:17] *** araujo left
[11:17] *** Woody4286 left
[11:17] *** shi joined
[11:22] *** Woody4286 joined
[11:23] *** shi left
[11:24] *** araujo joined
[11:25] *** zby_home joined
[11:30] *** Gothmog_ left
[11:30] *** Gothmog_ joined
[11:35] *** muixirt joined
[11:53] *** felliott joined
[11:54] *** satyavvd left
[11:55] <muixirt> ping TimToady 

[12:11] *** shi joined
[12:14] *** shi left
[12:15] *** bluescreen joined
[12:16] *** bluescreen is now known as Guest65782

[12:17] *** shi joined
[12:17] *** agentzh left
[12:50] *** ChanServ sets mode: +v ilogger2

[12:53] *** tylerni7 left
[12:53] *** masak joined
[12:53] <masak> oh hai, #perl6!

[12:53] <phenny> masak: 01:33Z <colomon> tell masak "things tend to get more readable when you golf."  Wish I could have easily posted the process made working on the Markov chain script with moritz_++.  It started a pretty nice looking script, and found about three awesome simplifications that needed to be discarded before we landed on the final version.

[12:53] <phenny> masak: 03:12Z <colomon> tell masak Is lopnor's bug already reported?

[12:53] <phenny> masak: 05:09Z <sorear> tell masak Due to circumstances beyond my control, I'm likely to miss most of #phasers, sorry.  I'll be able to make #phasers+24h though.

[12:53] <colomon> o/

[12:54] *** tylerni7 joined
[12:54] <colomon> oooo, #phasers today!

[12:54] <masak> I'll also miss #phasers today.

[12:54] <colomon> oooo, boring #phasers today!

[12:54] *** mtk joined
[12:54] <masak> if I can think of anything I've done, I'll pre-post :)

[12:55] <colomon> Is it cheating to create new modules to make solving one of your prize problems more elegant?

[12:55] <tadzik> oh, anybody to volunteer for tomorrow?

[14:29] *** ilogger2 joined
[14:29] *** ChanServ sets mode: +v ilogger2

[14:42] <colomon> spectests for it for sure.  not sure it's worth adding them before we spectest the change, it may turn out there is prior art on the "Int".new thing that still needs to be sorted.

[15:02] *** uasi joined
[15:03] <uasi> flussence: maybe '$name = "Foo"; ::($name).new'

[15:05] <flussence> ooh, didn't know about that.

[15:05] <flussence> > my $a = 'Rat'; ::($a).new.WHAT

[15:05] <flussence> Indirect name lookups not yet implemented at line 1, near ".new.WHAT\n"

[15:05] <flussence> at least it's specced

[15:10] *** risou joined
[15:12] *** fhelmberger joined
[15:19] *** MayDaniel joined
[15:22] <masak> interesting exchange on an Advent post I wrote last year: http://perl6advent.wordpress.com/2009/12/09/day-9-having-beautiful-arguments-and-parameters/#comment-520

[15:25] <takadonet> masak: good thing you are on top of this :)

[15:29] <masak> Wordpress++ sent me an email about the comment.

[15:30] <masak> someone on Twitter thinks Perl 6 is cool: http://twitter.com/crazysmoove/status/14544238180040704

[15:31] <takadonet> masak: but you answered 

[15:32] <masak> takadonet: right. but it's easy to do when Wordpress reduces the problem to reacting to things in my inbox.

[15:33] *** ch3ck joined
[15:39] *** Psyche^ joined
[15:39] *** Psyche^ is now known as Patterner

[15:42] *** smash joined
[15:42] <smash> hello everyone

[15:42] <takadonet> smash: hey

[15:45] <masak> hi smash

[15:47] *** sahadev joined
[15:47] *** molaf joined
[15:48] *** sECuRE joined
[15:51] <PerlJam> masak: The 2010 calendar is causing people to look at the 2009 entries too.  I'm not sure this is a good thing yet :)

[15:51] <masak> oh? I just assumed it's good.

[15:51] <takadonet> same

[15:52] *** Guest65782 joined
[15:52] <PerlJam> yeah it's good.  I just have a small nagging worry about the things that have broken in the mean time.

[15:52] <PerlJam> oh!  didn't someone turn the 2009 posts into tests?

[15:52] <takadonet> just about to say that....

[15:52] <TimToady> I seem to recall several things being backpatched as they changed

[15:53] *** justatheory joined
[15:55] <masak> yes. I'd suggest we try to keep previous Advent posts current and running.

[15:55] <masak> there's quite a long tail involved.

[15:58] * masak updates http://perl6advent.wordpress.com/2009/12/16/day-16-we-call-it-the-old-switcheroo/ from 'continue' to 'proceed'

[16:00] <daxim> are there other places where $_/»this« is spelled *?

[16:00] <masak> daxim: $_ is not exactly identical to *.

[16:01] <masak> daxim: generally, when binary operators are involved, 5 + * can be written instead of { 5 + $_ }, for various values of '5' and '+'

[16:01] <masak> but note that when you do it with *, you get the curlies for free.

[16:02] <daxim> aha, I recognise this now

[16:09] *** Guest65782 left
[16:11] *** bluescreen joined
[16:11] *** bluescreen is now known as Guest65806

[16:13] <flussence> huh, neutro doesn't seem to be putting anything in ~/.perl6/lib

[16:14] *** Gruber joined
[16:16] <masak> I believe that's correct.

[16:17] <flussence> but the advent post makes it sound like it does :(

[16:18] <colomon> hmmm?

[16:18] <colomon> is that a change? 

[16:18] *** Eevee_ joined
[16:18] *** spinclad_ joined
[16:18] <colomon> something installed List::Utils in my ~/.perl6/lib ...

[16:19] *** felliott joined
[16:20] <flussence> http://perl6advent.wordpress.com/2010/12/09/day-9-%E2%80%93-the-module-ecosystem/ ... I followed those instructions, but trying "neutro zavolaj" doesn't put stuff there. It all ends up in ~/.neutro/src/

[16:22] *** glow_ joined
[16:22] <masak> flussence: you should ask tadzik.

[16:22] <flussence> ok.

[16:23] *** molaf left
[16:23] *** sahadev left
[16:24] *** Guest65782 joined
[16:27] <colomon> oh, you know, I think maybe I installed List::Utils by doing "make install" with the ufo-generated Makefile.  Does that sound plausible?

[16:28] <colomon> neutro isn't working at all for me at the moment.

[16:28] *** dual joined
[16:28] <colomon> I just pulled neutro, and I get

[16:28] <colomon> "Unable to find module 'File::Mkdir' in the @*INC directories."

[16:31] *** sahadev joined
[16:31] *** molaf joined
[16:32] *** glow_ is now known as glow

[16:35] <flussence> I think the problem is that the makefile neutro writes is using @*INC[1] and [2] for user/system lib whereas the correct ones for my install are [0..1]

[16:36] <flussence> and I haven't changed my $PERL6LIB defaults...

[16:38] *** ch3ck left
[16:42] *** zb joined
[16:50] <pmichaud> hello, world

[16:50] <phenny> pmichaud: 13 Dec 11:49Z <masak> tell pmichaud I think https://github.com/uasi/rakudo/commit/302230a244aa53d1ec9fbdd8909e0bdefc195f11 looks good (and it passes spectests), but I'd like you to review it before I commit it.

[16:52] <pmichaud> phenny: tell masak +1 to commit https://github.com/uasi/rakudo/commit/302230a244aa53d1ec9fbdd8909e0bdefc195f11

[16:52] <phenny> pmichaud: I'll pass that on when masak is around.

[16:53] *** orafu joined
[16:53] <daxim> you crazy time zone shifters, you.

[16:54] <daxim> also, for the next iteration of the contest I very much want to see some sixers:  http://www.plat-forms.org/teams-2011

[16:54] <pmichaud> I'm often considered to be a somewhat shifty character.  :-)

[16:54] <pmichaud> but at least I'm not pushy.

[16:54] <pmichaud> (things go onto my head, not my tail :)

[16:55] <daxim> punny

[16:55] *** literal joined
[16:55] <PerlJam> daxim: you think perl6 is on par for developing web apps as the others?

[16:56] <daxim> not now

[16:56] <moritz_> oh hai

[16:56] <daxim> with a certainty next year, I mean, if the node.js guys can participate as experimental, so can Web.pm or whatever

[16:57] <colomon> pmichaud: \o/

[16:57] <pmichaud> colomon: o/

[16:58] <colomon> pmichaud: don't know if you've backlogged and seen uasi's fix from this morning: https://gist.github.com/740396

[16:59] <colomon> When you get a chance, we'd love your opinion on it.  :)

[17:01] *** Gruber is now known as Grrrr

[17:06] <pmichaud> what is it fixing?

[17:06] <pmichaud> I'm thinking it's not needed or necessary, but perhaps I'm wrong?

[17:08] <pmichaud> oh, it's working around problems with   'Foo'.new

[17:09] <pmichaud> the problem is undoubtedly that 'Foo' as a constant isn't being blessed as a p6opaque object

[17:09] <pmichaud> so get_repr is failing

[17:10] <pmichaud> or something like that

[17:10] <pmichaud> I think fixing that would be better than adding a 'new' metthod

[17:11] *** mavrc joined
[17:11] *** Eevee_ is now known as Eevee

[17:14] <[Coke]> pmichaud: hio

[17:14] <pmichaud> hola, Coke

[17:15] <pmichaud> phasers in 105?

[17:16] <moritz_> aye

[17:17] *** plainhao joined
[17:18] <colomon> pmichaud: (sorry, got called in to assist setting up the model Christmas village)

[17:19] <colomon> Just so we're on the same page, the problem is that (for instance)

[17:19] <colomon> rakudo: my $a = "Rat"; say $a.new.WHAT

[17:19] <p6eval> rakudo : OUTPUT«Rat()␤»

[17:20] <colomon> should be coming out a Str, in our opinion.

[17:20] <colomon> rakudo: my $a = "Rat"; say $a.PARROT

[17:20] <p6eval> rakudo : OUTPUT«Perl6Scalar->Str␤»

[17:20] <moritz_> rakudo: say 'random string'.new.WHAT

[17:20] <p6eval> rakudo : OUTPUT«Null PMC access in get_repr()␤  in main program body at line 22:/tmp/rLqhIMO_62␤»

[17:25] <pmichaud> okay, looking into it further, I'm guessing it's a deeper Parrot thingy

[17:26] <pmichaud> might be a p6object issue

[17:27] *** baest joined
[17:29] <pmichaud> yeah.

[17:29] <pmichaud> if $P0 is a String PMC, then various things assume the String is the name of the class to be gotten

[17:30] <pmichaud> (and .new ends up using get_class internally to figure out the class of the thing being 'new'ed.)

[17:30] <pmichaud> the other problem with https://gist.github.com/740396  is that it won't work for subclasses of Str

[17:36] <pmichaud> a slightly related issue that leads to the mixup is that    isa $x, 'Str'   is expected to work, where we look up a type based on the content of a string.

[17:36] <pmichaud> or, more directly,  $x.isa('Rat')   # test if $x isa Rat

[17:38] *** cdarroch joined
[17:38] *** cdarroch left
[17:38] *** cdarroch joined
[17:38] <moritz_> rakudo: class A::B { }; say A::B.new.isa('A::B')

[17:38] <p6eval> rakudo : OUTPUT«0␤»

[17:38] <moritz_> ...except when not.

[17:39] <pmichaud> right, because the string-to-class conversion doesn't know how to handle nested package names or how to eval in the caller's context

[17:39] <pmichaud> anyway, I'm fine with adding a 'new' method to Str for now to work around this little problem, but it has to be listed as a cheat and not a builtin.

[17:40] <pmichaud> (i.e., in src/cheats instead of src/builtins)

[17:40] <pmichaud> it's worth adding a comment to src/core/Str.pm about it, too.

[17:40] <colomon> pmichaud++

[17:42] <pmichaud> also add a test that shows that   SubclassofStr.new will fail

[17:42] <pmichaud> afk, errands

[17:46] <uasi> pmichaud++ too

[17:46] <uasi> thanks for the insightful comment

[17:51] *** mavrc left
[17:55] *** uasi left
[17:57] *** kjeldahl_ joined
[18:00] *** mavrc joined
[18:10] *** spq1 joined
[18:20] *** mberends joined
[18:25] *** muixirt joined
[18:31] *** molaf left
[18:31] *** risou left
[18:39] *** mtk joined
[18:52] <colomon> #phasers in 8 min?

[18:57] <mberends> yes, now in 3 min :)

[18:57] *** tri joined
[19:03] *** ch3ck joined
[19:07] <mberends> \o/ Russian visa granted, today Andrew Shitov++ bought the ticket for me to fly to http://event.perlrussia.org/saintperl2/index.html

[19:07] *** MayDaniel left
[19:08] <mberends> I'm going to read The Book to the Russians on Saturday (in English ;-)

[19:08] <shortcircuit> For the p6advent post I'll be putting together this evening, I'd like to ask for links to P6 code on RC that you folks find particularly interesting. My usual format in front of a language user group is to spam the audience with RC links particular to a language, and then go into question-and-answer mode as the audience finds things they're more interested in.

[19:09] <shortcircuit> Nice if I could have a list of P6 curiosities in advance. :)

[19:09] <diakopter> mberends: in Soviet Russia, the book throws ITSELF at you.

[19:09] <mberends> (book flood)

[19:10] *** tri left
[19:10] *** hercynium joined
[19:12] <plobsing> shortcircuit: does "exposes bugs in implementation" fit this definition of "interesting"?

[19:13] <shortcircuit> plobsing: That's one of the things I love to talk about. :)

[19:13] <plobsing> the multi-dispatch Ackermann implementation chokes pretty fast on A(9,6) (should take a long time and compute a value)

[19:13] <TimToady> just because you love to talk about it doesn't make it a good Christmas gift.  :P

[19:14] <shortcircuit> TimToady: I usually like to talk about it in the past-tense. :)

[19:14] <shortcircuit> Perl6 isn't the only language to have implementation fixes result from trying to run code on RC.

[19:15] <shortcircuit> I don't usually go into specifics, as I don't like the impression name-dropping gives.

[19:15] <TimToady> sure, but advent calendars aren't supposed to scare the kids :)

[19:15] <shortcircuit> Very true.

[19:17] <shortcircuit> It's tricky flipping my perspective for this post; presentations in front of user groups is very often an attempt to market RC as a useful tool for developers of that language. (As opposed to strictly _in_ that language.) That's obviously not something necessary here.

[19:17] <shortcircuit> I'll probably write it targeting potential P6 users. Some explicit comparisons of P6 code to other langauges' code is probably the best route.

[19:17] <TimToady> I think RC shows itself off quite well as soon as anyone follows a link

[19:18] <TimToady> it's sort of irresistable to start comparing languages then

[19:19] <shortcircuit> I need to make it irresistable to click, though. (And not in a bait-and-switch sense; if I were into that, I'd just link a single word to TVTropes.)

[19:20] <TimToady> it'd be nice if pages like http://rosettacode.org/wiki/Category:Perl_6 would actually append the link into the language's example 

[19:21] <TimToady> rather than forcing the user to page past the description to find the language link, which was already known :)

[19:21] <TimToady> and people know how to hit HOME to get to the top if they want

[19:21] <shortcircuit> There's a JS fix for that.

[19:21] <shortcircuit> *looks for it.*

[19:23] *** rgrau joined
[19:24] <shortcircuit> K. Think I found it. I'll run it through our JavaScript guy for a verification test, and add it to the sitewide JS load this evening.

[19:34] *** wamba joined
[19:36] <colomon> moritz_: might you be up for some sort of tag-team implement something short & cool Advent post?

[19:39] * flussence is considering doing one for zavolaj...

[19:41] *** wamba left
[19:42] <PerlJam> flussence: grab a slot!  https://github.com/perl6/mu/blob/master/misc/perl6advent-2010/schedule

[19:49] <flussence> maybe one of the last ones. I'm gonna find something in /usr/lib/ to experiment on first...

[19:51] *** lola_89 joined
[19:54] *** icwiener joined
[19:56] <lola_89> Where can I find third party perl6 modules (if any is available) ?

[19:56] <flussence> modules.perl.org!

[19:56] <diakopter> modules.perl6.org ?

[19:56] * flussence still hasn't woken up fully today

[19:56] <lola_89> omg :D

[19:56] <PerlJam> modules.perl6.org .

[19:57] <flussence> also, check out day 9 of the advent calendar posts (I think I got *that* line right at least...)

[19:58] <takadonet> lola_89: http://modules.perl6.org/

[19:58] <PerlJam> lola_89: http://perl6advent.wordpress.com/2010/12/09/day-9-%E2%80%93-the-module-ecosystem/

[19:58] <PerlJam> lola_89: that's the advent post flussence was just talking about.

[20:00] <lola_89> PerlJam: before I check, could you please tell me about tk and perl6? (is there such thing)?

[20:00] <PerlJam> lola_89: There's no native Tk libs for Perl 6 that I know of.

[20:00] <PerlJam> lola_89: though, you might be able to use Perl 5's Tk module via blizkost (which comes with Rakudo Star)

[20:01] <flussence> .oO( hmm, do I have Tk installed? )

[20:02] <lola_89> are there native modern Tk libs coming any soon? :)

[20:02] <sorear> Is modern Tk coming soon?

[20:02] <moritz_> colomon: (re advent) yes

[20:02] <colomon> moritz_: then we just need to think of something to tackle.  :)

[20:03] <PerlJam> colomon, moritz_: a small web app?

[20:04] <colomon> that seems too big...

[20:05] <PerlJam> for two wily hackers such as yourselves?  No way!  :)

[20:05] <PerlJam> colomon: how about porting a useful module from Perl 5 that no one has ported yet?

[20:06] <colomon> That seems like a great idea in general, but way too much work for an Advent post.

[20:06] <flussence> Tk looks like a big library. I'm sure someone's eventually going to write a p6 binding for it, but I wouldn't hold out for it showing up soon...

[20:06] <lola_89> wx perl? 

[20:06] <takadonet> PerlJam: I been slowly porting over p5 modules over

[20:06] <PerlJam> colomon: there are small, useful modules  (unless takadonet has taken them all  :)

[20:07] <takadonet> PerlJam: http://ali.as/top100/

[20:07] <lola_89> is there plans for a wx perl 6?

[20:07] <takadonet> That gives a list of the most used modules in cpan

[20:07] <takadonet> http://search.cpan.org/dist/Text-ParseWords/ParseWords.pm

[20:08] <takadonet> http://search.cpan.org/dist/Text-Diff/ Would be nice since the dependence of Algorithm::Diff is already ported

[20:17] *** tylercurtis joined
[20:18] <lola_89> perl6: while 1 {say "Japan rules!"};

[20:18] <p6eval> pugs, rakudo : OUTPUT«(timeout)es!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan rules!␤Japan

[20:18] <p6eval> ..rules!␤Japan rul…

[20:20] <colomon> takadonet, moritz_: huh.  Text::ParseWords certainly looks like it would be pretty easy to drastically improve by switching to p6...

[20:21] <takadonet> that was on my hit list.... however near the bottom

[20:21] <dalek> 6model: f19e855 | (Martin Berends)++ | t/nqp/45-smartmatch.t:

[20:21] <dalek> 6model: [t/nqp] increment the plan count to 17 in 45-smartmatch.t

[20:21] <dalek> 6model: review: https://github.com/jnthn/6model/commit/f19e8553da

[20:22] *** lola_89 left
[20:22] <mberends> \o/ that makes 300 tests passing!

[20:23] <tylercurtis> hello, sorear.

[20:24] <takadonet> sweet

[20:25] <takadonet> colomon: you should go for it :) port it over

[20:25] *** plainhao left
[20:48] *** felliott left
[21:00] *** mkramer1 joined
[21:02] *** mkramer1 left
[21:03] *** mkramer1 joined
[21:05] *** MayDaniel joined
[21:07] *** Guest65782 left
[21:14] *** fhelmberger left
[21:15] *** fhelmberger joined
[21:22] *** masak joined
[21:22] <masak> ahoy!

[21:22] <phenny> masak: 16:52Z <pmichaud> tell masak +1 to commit https://github.com/uasi/rakudo/commit/302230a244aa53d1ec9fbdd8909e0bdefc195f11

[21:22] <sorear> hi masak!

[21:22] * masak commits it

[21:22] <moritz_> so, any ideas for advent?

[21:22] <masak> I'm only staying on for an hour tonight. going to bed early to beat a colleague to work tomorrow. ;)

[21:23] <sorear> masak: I have to leave in 50m

[21:23] <sorear> masak: you wanted to talk about STD?

[21:23] <masak> yes, at some point.

[21:26] <colomon> moritz_: takadonet suggested porting Text::ParseWords, it looks like it might be a doable size, but I'm still looking at it.

[21:26] <sorear> masak: now?

[21:26] <masak> sorear: sure.

[21:26] <masak> sorear: I'll start with the thing that made me think about it: parsing ints.

[21:27] <masak> sorear: inexperienced programmers re-invent the wheel and parse ints manually.

[21:27] <sorear> +$int

[21:27] <masak> no, I meant as part of a regex or grammar.

[21:27] <masak> sorear: in Perl 5, seasoned programmers reach for Regexp::Common.

[21:28] <masak> in Perl 6, I'd like for the common practice to be to re-use existing parts of the Perl 6 parser.

[21:28] * moritz_ would love that

[21:28] <sorear> incidentally, STD has a <strtonum> rule which is not used by STD proper, but a comment says Str --> Num conversions should use it

[21:28] <masak> actually, the more we turn the Perl 6 parser inside-out and expose it to the regular programmer, the more (I predict) we win in the long term.

[21:28] <masak> actually, that's part of my long-term dream for Perl 6.

[21:28] <sorear> [ :lang(STD) <strtonum> ]

[21:29] <masak> right.

[21:29] <masak> things like that.

[21:29] <sorear> incidentally, how much support can I get for <STD::strtonum> meaning that?

[21:29] <sorear> without the implicit :lang qualified subrules are a lot less useful

[21:29] <masak> I associate :: with 'our' scoping.

[21:29] <sorear> hmm.  point.

[21:29] <masak> but I agree there should be some shorthand.

[21:30] <masak> we have a similar problem when referencing methods.

[21:30] <masak> it used to be you could say A::foo

[21:30] <masak> now, that only works if method foo is 'our'-scoped.

[21:30] <masak> (and I agree that's how it should be, but I miss the easy shorthand)

[21:32] <masak> I'd also like to expose the OPTable parser (which probably means to standardize an API for it as well).

[21:32] <masak> with an exposed OPTable parser, people can create their own expression-based grammars easily.

[21:33] <masak> I have an old post about that: http://strangelyconsistent.org/blog/what-you-can-do-with-ggeoptable-that-you-couldnt-without

[21:33] <sorear> moritz_: I'm thinking of adding a /t:All target to the niecza msbuild, which would pre-compile all the modules, would something like that be useful for p6eval?

[21:33] <masak> the advantages of this blew my mind at the time; as far as I know, it never blew anyone else's.

[21:34] <sorear> "niecza: require STD; "

[21:38] <moritz_> sorear: yes, it would

[21:39] <sorear> masak: hmm

[21:42] *** spinclad_ is now known as spinclad

[21:46] <sorear> masak: GGE::OPTable seems rather different from the STD engine

[21:47] <sorear> in STD land, that would look something like

[21:47] <masak> it probably is.

[21:47] <sorear> grammar Algebra {

[21:47] <masak> it's on my personal roadmap to learn STD, but right now I'm only at PGE. :)

[21:48] <sorear>     method number { [ :lang(STD) <number> ] <O(:precedence('z')> }

[21:48] <sorear>     method infix:sym<+> { <sym> <O(:precedence<y>, :assoc<left>)> }

[21:48] <pmichaud> PGE::OPTable pre-dates STD by a couple of years

[21:49] <masak> *nod*

[21:49] <sorear>     method infix:sym<*> { <sym> <O(:precedence<x>, :assoc<left>)> }

[21:49] <masak> and GGE::OPTable just copies it.

[21:49] <sorear>     method infixish { <infix> }

[21:49] <sorear>     method term { <number> }

[21:49] * moritz_ -> sleep

[21:49] <sorear>     method TOP { <EXPR> }

[21:49] <sorear> }

[21:49] <sorear> erm s:g/method/token/

[21:49] <masak> sorear: that's fine by me.

[21:50] <masak> sorear: as pmichaud said, I'm running on slightly old assumptions.

[21:50] <pmichaud> PGE::OPTable came before there was a operator precedence parser in Perl 6 (other than in concept)

[21:50] <pmichaud> afk, homework

[21:50] *** mtk left
[21:51] *** tylercurtis left
[21:54] <sorear> pmichaud: can you elaborate on what you mean by that?  (though I won't see it for a bit)

[21:55] <masak> could I give the precedence of infix:sym<+> in terms of <term>, and the precedence of infix:sym<*> in terms of infix:sym<+>? all those 'method' declarators should be 'regex', right?

[21:56] <masak> sorear: PGE was started in 2004/2005, before there was an STD module.

[21:57] <dalek> rakudo: 500089c | uasi++ | src/ (2 files):

[21:57] <dalek> rakudo: Fix RT #77668

[21:57] <dalek> rakudo: 

[21:57] <dalek> rakudo: RT #77668: [BUG] Can't call Callable objects in a list in parallel

[21:57] <dalek> rakudo: using the >>.() [or >>()] form in Rakudo

[21:57] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/500089ccc2

[21:57] <sorear> masak: no. yes. ah.

[21:57] <sorear> in that order.

[21:58] <masak> I'm used to expecting being able to specify relative precedences in Perl 6.

[21:58] <masak> why can't I here?

[21:58] <sorear> Did PGE have relative precedence?

[21:58] <masak> oh yes.

[21:58] <sorear> To my knowledge no STD-class OPP has relative precedence

[21:59] <masak> with :tighter and :loosed and :equiv

[21:59] <sorear> I'll need to ask TimToady++ what is needed to support that

[21:59] <masak> there's a whole theory behind supporting that, developed by TimToady++.

[22:00] <masak> I'm surprised it's not there.

[22:00] <diakopter> sorear: I thought the original STD.pm EXPR did support that

[22:00] <masak> perhaps "theory" is too strong a word... there's a nice trick to it. :)

[22:00] * justatheory flexes his muscles

[22:00] <sorear> diakopter: nope, STD.pm6 EXPR uses strings and le/gt

[22:01] <masak> sorear: see https://github.com/masak/gge/blob/master/lib/GGE/Perl6Regex.pm#L33 for an actual use of relative precedence.

[22:12] *** soroush joined
[22:15] *** skangas joined
[22:15] *** mkramer1 left
[22:17] <masak> 'night, #perl6.

[22:17] *** mkramer joined
[22:18] *** masak left
[22:19] *** nymacro joined
[22:20] <flussence> I'm playing around with zavolaj, but I have no idea what to do when a function returns C NULL on failure... just gives me a Null PMC error and dies :(

[22:20] <flussence> (and I don't know *why* it's failing, since this is a straight port of C code that works fine...)

[22:22] * flussence rewrites the code to look nice instead, maybe the error'll go away if I ignore it...

[22:23] *** MayDaniel left
[22:24] *** icwiener left
[22:27] *** icwiener joined
[22:29] *** icwiener left
[22:30] *** skangas left
[22:31] *** icwiener joined
[22:42] *** nymacro left
[22:50] *** skangas joined
[22:53] *** soroush left
[22:57] *** nymacro joined
[23:02] <shortcircuit> Hm.

[23:04] <shortcircuit> http://rosettacode.org/wiki/Closest-pair_problem#Perl_6 indicates it's a translation of the Perl 5 code. Is a more idiomatic version of interest?

[23:10] <TimToady> I worked on that one some--it's hard to get it much more idiomatic, so perhaps it's an example of how much Perl 6 is like Pelr 5.  :)

[23:10] <shortcircuit> So it would look much like that were it written from scratch?

[23:11] <TimToady> I suspect so

[23:11] <TimToady> keeping your x's and y's straight means there have to be a lot of names

[23:12] <TimToady> there are a number of low-level idioms in there though

[23:12] <TimToady> just no magic bullet that makes the whole thing shrink

[23:12] *** Guest87704 joined
[23:13] <diakopter> for @yP -> $p   can be made a one-liner

[23:13] <diakopter> I think.

[23:14] <shortcircuit> I take it it wouldn't be more idiomatic to define a point class, some point operations, and work it from that perspective?

[23:14] <diakopter> push ($p[0] <= $xm ?? @yR !! @yL), $p for @yP -> $p; # TimToady would this work

[23:19] <TimToady> there's no -> on modifiers like that (so far)

[23:19] <diakopter> :'(

[23:19] <TimToady> postdeclarations are a bit problematical

[23:20] * shortcircuit is just finishing up his P6 advent post.

[23:21] <TimToady> yay

[23:21] <diakopter> rakudo: my (@a,@b); push ($_ %% 2 ?? @a !! @b), $_ for 1..10; [@a,@b].perl.say

[23:21] <p6eval> rakudo : OUTPUT«[2, 4, 6, 8, 10, 1, 3, 5, 7, 9]␤»

[23:21] <sjohnson> rakudo: say sort < 1 5 3 5 7 2>

[23:21] <p6eval> rakudo : OUTPUT«123557␤»

[23:21] <shortcircuit> I noticed most of the P6 advent posts are light on HTML formatting. Are inline links, at least, OK?

[23:21] <jasonmay> rakudo: class Foo {has $.x;}; my %h=('x' => 1); mFoo.new(%h).x.say;

[23:21] <p6eval> rakudo : OUTPUT«Could not find sub &mFoo␤  in main program body at line 22:/tmp/9U1_6Mvf5Q␤»

[23:22] <jasonmay> rakudo: class Foo {has $.x;}; my %h=('x' => 1); Foo.new(%h).x.say;

[23:22] <p6eval> rakudo : OUTPUT«Any()␤»

[23:22] <TimToady> shortcircuit: I don't see any problem with it

[23:22] *** whiteknight joined
[23:23] *** smash left
[23:23] <diakopter> shortcircuit: so you could replace that for loop with:  push ($_[0] <= $xm ?? @yR !! @yL), $_ for @yP;

[23:23] <TimToady> rakudo: class Foo {has $.x;}; my %h=('x' => 1); Foo.new(|%h).x.say;

[23:23] <p6eval> rakudo : OUTPUT«1␤»

[23:23] <shortcircuit> diakopter: It's a wiki. You can make whatever changes you see fit. :D

[23:23] <TimToady> jasonmay: ^^

[23:24] <jasonmay> ooo

[23:24] <jasonmay> thanks

[23:24] <diakopter> shortcircuit: ok, but I can't test it here

[23:24] <jasonmay> where can I read about that?

[23:24] <shortcircuit> Hm.

[23:24] * shortcircuit wonders if Codepad has P6 support.

[23:25] <shortcircuit> It does not.

[23:25] <diakopter> hah

[23:25] <TimToady> jasonmay: S06:717

[23:25] <jasonmay> cool, thanks

[23:25] <shortcircuit> Anyone care to poke them about supporting P6? Rakudo sees frequent updates, and I'm not sure howwell they can keep up.

[23:25] <shortcircuit> *how well

[23:26] <diakopter> hm

[23:26] *** sahadev left
[23:26] * diakopter has an idea

[23:26] <diakopter> we've already got most of this

[23:27] <diakopter> we just need a way to tell p6eval to use a pastebin as its input, and to spit out a pastebin url as its output

[23:27] <diakopter> (or if the output's short, just output it all here)

[23:28] <TimToady> you'd want to limit the output size anyway, to avoid pastebin abuse

[23:28] <diakopter> http://p6eval.pastebin.com/raw.php?i=nBMuE7yU

[23:28] <diakopter> luckily pastebin.com has a raw option

[23:28] <diakopter> TimToady: gp

[23:29] <shortcircuit> Ok, where do I send this? I can post it to my blog, which will bounce to LJ, and I can have it get picked up by planet.rosettacode.org.

[23:29] <diakopter> so I'd say:

[23:29] <diakopter> p6bin: nBMuE7yU

[23:29] <shortcircuit> OTOH, it's plausible that you'd prefer it go to go out through the P6 planet after some review, first.

[23:30] <TimToady> likely

[23:31] <shortcircuit> Ok, it's a private pastebin.

[23:31] <shortcircuit> er. Private paste on a pastebin. Forgive the HTML quality; I wrote it in a funky HTML rich edit field.

[23:31] <shortcircuit> http://pastebin.com/SSXmKAWK

[23:31] <TimToady> AWK?!?

[23:32] *** mavrc left
[23:32] <shortcircuit> lol

[23:33] <shortcircuit> Alright, I'm off to do the dishes. Dishes must be done before I'm fed. :)

[23:35] <diakopter> just eat straight out of the freezer  is what I always say

[23:37] <shortcircuit> She doesn't like it when I do that. >.>

[23:37] *** glow left
[23:38] <TimToady> shortcircuit: "there are 243 fascinating(Well examples"

[23:41] <diakopter> actually; heh, p6bin could be automatic .. since it could poll the archive, so someone would paste their program directly, and p6eval would poll it every few seconds, find an unprocessed one, and report back to the channel links to the input pastebin and the output pastebin.

[23:41] *** Bzek joined
[23:42] * diakopter starts to think about larger code collaboration efforts.  Of course there are entire sites/apps just for remote multi-user sharing of interactive interpreters

[23:44] <diakopter> heh. it could even be told to pull straight from rosettacode :)

[23:44] *** skangas left
[23:50] <TimToady> diakopter: btw, this particular problem is quite likely to overrun any CPU limit

[23:50] <diakopter> oh... for what input

[23:52] <TimToady> for 5000 points

[23:52] <diakopter> icky

[23:53] *** hercynium left
[23:53] <TimToady> the brute force version doesn't scale very well, and rakudo already has a very large K

[23:54] <TimToady> it did 50 points in 5 seconds, and is still working on 500 point...

[23:54] <TimToady> my lap is getting warmer...

[23:55] *** icwiener left
[23:57] <TimToady> about 4 min 40 seconds for 500 points, and my laptop is not slow...

[23:57] *** fuad joined
