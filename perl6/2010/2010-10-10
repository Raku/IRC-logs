[00:03] *** Chillance joined
[00:07] <dalek> niecza/master: e4c7a4c | sorear++ | / (7 files):

[00:07] <dalek> niecza/master: Turn GetMO() into an instance field

[00:07] <dalek> niecza/master: 

[00:07] <dalek> niecza/master: This avoids one virtual call for most REPR calls.

[00:07] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/e4c7a4cfc63da728d9f340726ec7561f101e3e47

[00:07] <dalek> niecza/master: e151b74 | sorear++ | src/ (2 files):

[00:07] <dalek> niecza/master: Refactor metamodel cross-references a bit

[00:07] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/e151b74716f0656d31df7ebacdfb5ee7d32b7792

[00:07] <dalek> niecza/master: 8dcdd25 | sorear++ | / (4 files):

[00:07] <dalek> niecza/master: Run strings and syscalls into portability layer

[00:07] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/8dcdd2564a69d785cfa0420741ff6c573c4ca6a8

[00:19] *** justatheory left
[01:00] *** meppl joined
[01:23] *** agentzh joined
[01:25] *** masonkramer left
[01:25] *** masonkramer joined
[01:30] *** hercynium joined
[01:32] *** pythonian4000 is now known as pythonian4000afk

[01:36] *** clkao_ left
[01:42] *** justatheory joined
[01:43] *** jferrero left
[01:47] *** molaf__ joined
[01:51] *** molaf_ left
[01:52] *** PerlJam left
[01:53] *** PerlJam joined
[02:12] *** Schwern joined
[03:01] *** Schwern left
[03:09] *** am0c^ joined
[03:18] *** agentzh left
[03:19] *** Italian_Plumber joined
[03:37] *** meppl left
[03:41] <diakopter> quietness

[03:50] *** meppl joined
[03:53] <sorear> I am pondering to separate the front/middle and back ends of niecza into separate processes and have them communicate using text files

[03:53] <sorear> rather than passing an AST around

[04:00] *** buubot left
[04:00] *** buubot joined
[04:12] *** smartcat99s joined
[04:13] *** hercynium left
[04:14] *** Italian_Plumber left
[04:20] *** smartcat99s left
[04:22] *** obra joined
[04:25] *** meppl left
[04:28] *** am0c^ left
[04:43] *** pythonian4000afk is now known as pythonian4000

[04:53] *** [Sec] left
[05:01] *** envi joined
[05:09] *** risou joined
[05:13] *** [Sec] joined
[05:16] *** Trashlord joined
[05:17] *** Chillance left
[05:19] *** clkao joined
[05:24] *** plobsing_ left
[05:31] *** _kaare joined
[05:34] *** risou_ joined
[05:35] *** risou left
[05:55] *** justatheory left
[05:59] *** satyavvd joined
[06:07] <dalek> niecza/master: 06cf3ef | sorear++ | / (4 files):

[06:07] <dalek> niecza/master: Add \$foo and \|$foo parameters

[06:07] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/06cf3efee0bb0804b891a19d3a5244076735f8c9

[06:07] <dalek> niecza/master: c2f02c8 | sorear++ | / (5 files):

[06:07] <dalek> niecza/master: Porting redirector for clr:Frame and clr:Cursor

[06:07] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/c2f02c8997617495a37dc1ae4a466ac0eb9d8c35

[06:07] <dalek> niecza/master: 12112fb | sorear++ | / (3 files):

[06:07] <dalek> niecza/master: Remove last CLR dependencies from setting

[06:07] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/12112fb121f8ae67d5fd151f528dce18a6dd6b7a

[06:25] *** molaf__ left
[06:41] *** satyavvd_ joined
[06:44] *** satyavvd left
[06:44] *** satyavvd_ is now known as satyavvd

[06:49] *** Trashlord left
[06:51] *** _kaare left
[06:58] *** kjeldahl joined
[07:26] *** kjeldahl left
[07:26] *** Trashlord joined
[07:35] *** bluescreen left
[07:36] *** risou_ left
[07:36] *** bluescreen joined
[08:07] *** mavrc joined
[08:14] *** am0c^ joined
[08:34] *** Mowah joined
[08:35] *** am0c^ left
[08:54] *** M_o_C joined
[09:01] <dalek> niecza/master: dc6fe7d | sorear++ | lib/SAFE.setting:

[09:01] <dalek> niecza/master: Use \$var through setting

[09:01] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/dc6fe7d93399c15a61a8c02069827141ebad11ca

[09:01] <dalek> niecza/master: 29aab1d | sorear++ | / (6 files):

[09:01] <dalek> niecza/master: And some more yaks

[09:01] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/29aab1d53d7b359fe4bce3a6ffeaa96def7efe5b

[09:04] <moritz_> rakudo: say "  one   two three four    "

[09:04] <p6eval> rakudo 668719: OUTPUT«  one   two three four    ␤»

[09:04] <moritz_> rakudo: say "  one   two three four    ".words.reverse.join(' ')

[09:04] <p6eval> rakudo 668719: OUTPUT«four three two one␤»

[09:05] *** zulon joined
[09:07] * sorear out

[09:15] *** risou joined
[09:16] *** masak joined
[09:16] <masak> lol hai

[09:17] <moritz_> it's masak. LOL!

[09:17] <masak> just gave my premier talk

[09:17] <moritz_> did the audience like it?

[09:17] <moritz_> and did you like it?

[09:17] <masak> I distinctly got that feeling, yes.

[09:17] <masak> yes, I am very happy.

[09:17] <masak> I promised to put up the slides software and the slides. here they are: http://github.com/masak/osdc-fr-2010-hardcore-bug-reporting

[09:18] <masak> Tene: ^

[09:18] <masak> dukeleto: ^^

[09:19] <masak> BooK in particular was impressed and asked questions about the software afterwards.

[09:20] <moritz_> .oO( why does that system(qw<rm -rf>, $gs_dir); make me slightly uneasy? :-)

[09:21] <masak> moritz_: $gs_dir is effectively a constant in the program.

[09:21] <moritz_> I know :-)

[09:21] <masak> moritz_: I'm no Perl 5 expert; maybe there are better ways to do the same without 'rm -rf'

[09:21] <moritz_> masak: there's   use File::Path qw(remove_tree);

[09:21] <colomon> masak++

[09:21] <masak> moritz_: I'll consider that.

[09:22] <masak> moritz_++

[09:22] * moritz_ installs the prereqs for building the slides...

[09:22] *** jhuni joined
[09:22] <masak> oh! non-Mac users will want to change the Inkscape path at the end.

[09:22] * masak adds that to the README

[09:22] <moritz_> yes, seen that

[09:23] * moritz_ got bit by that shebang line again

[09:24] <moritz_> my default perl is in ~/perl5/bin/ somewhere, my /usr/bin/perl didn't find those modules...

[09:24] <masak> would adding 'env' help?

[09:24] <moritz_> yes

[09:24] * masak does that

[09:24] <moritz_> I must say that I'm increasingly impressed by the p5 toolchain

[09:24] *** zulon left
[09:24] <moritz_> I've installed a new Debian testing here, and used perlbrew to build a local perl

[09:25] *** tadzik joined
[09:25] <moritz_> and from there on 'cpan -i App::cpanminus', and then cpanm $lots_of_modules

[09:25] <moritz_> and while the first perl compilation failed for reasons unknown to me, it remained the only failure

[09:26] <moritz_> so far all those modules with hundreds of dependencies installed just fine

[09:26] <moritz_> (for example Dist::Zilla has a huge depenency tree)

[09:26] <tadzik> hi

[09:26] <moritz_> o/

[09:27] <masak> tadzik: \o

[09:27] <masak> there; pushed the changes to the README and the script.

[09:27] <masak> I'll go offline now and concentrate on the slides of my second talk -- they're not done yet. :/

[09:27] <masak> o/

[09:27] *** masak left
[09:27] <moritz_> have fun!

[09:33] *** am0c^ joined
[09:47] *** MayDaniel joined
[09:59] *** Axius joined
[10:01] *** am0c^ left
[10:02] <moritz_> phenny: ask masak if it's normal that slide generation takes a Really Long Time[tm]?

[10:02] <phenny> moritz_: I'll pass that on when masak is around.

[10:05] *** am0c^ joined
[10:06] *** masak joined
[10:07] <masak> moritz_: on my laptop it takes about 3 minutes.

[10:07] <phenny> masak: 10:02Z <moritz_> ask masak if it's normal that slide generation takes a Really Long Time[tm]?

[10:07] *** masak left
[10:09] <moritz_> hm, seems that inkscape has a unreasonably high startup cost here

[10:18] <moritz_> masak++ # nice slides

[10:19] <tadzik> slides?

[10:19] <moritz_> though a bit of the text is truncated here

[10:19] <moritz_> tadzik: backlog :-)

[10:19] <tadzik> how long?

[10:19] <tadzik> :)

[10:19] <moritz_> today :-)

[10:19] <moritz_> it's not so long

[10:19] <tadzik> I see

[10:20] <tadzik> I can has pdf?

[10:20] <moritz_> phenny: tell masak about  pdftk slides*.pdf cat out all-slides.pdf

[10:20] <phenny> moritz_: I'll pass that on when masak is around.

[10:20] <moritz_> tadzik: I'm still building a PDF, inkscape is sooo slow here that the generation takes ages

[10:21] <moritz_> now at 98 of 111

[10:21] <moritz_> rakudo: my Int @a; @a[0] = 3

[10:21] <p6eval> rakudo 668719: OUTPUT«maximum recursion depth exceeded␤  in 'at_pos' at line 1␤  in 'at_pos' at line 5:CORE.setting␤  in 'Any::postcircumfix:<[ ]>' at line 1697:CORE.setting␤  in 'at_pos' at line 5:CORE.setting␤  in 'at_pos' at line 5:CORE.setting␤  in 'Any::postcircumfix:<[ ]>' at line

[10:21] <p6eval> ..1697:CORE.settin…

[10:21] <moritz_> rakudo: my Int @a; @a[0] = 'f'

[10:21] <p6eval> rakudo 668719: OUTPUT«maximum recursion depth exceeded␤  in 'at_pos' at line 1␤  in 'at_pos' at line 5:CORE.setting␤  in 'Any::postcircumfix:<[ ]>' at line 1697:CORE.setting␤  in 'at_pos' at line 5:CORE.setting␤  in 'at_pos' at line 5:CORE.setting␤  in 'Any::postcircumfix:<[ ]>' at line

[10:21] <p6eval> ..1697:CORE.settin…

[10:25] *** satyavvd left
[10:27] *** am0c^ left
[10:28] *** Holy_Cow left
[10:30] <dalek> rakudo: 5bdbd4e | moritz++ | t/spectest.data:

[10:30] <dalek> rakudo: don't run S09-typed-arrays/arrays.t

[10:30] <dalek> rakudo: 

[10:30] <dalek> rakudo: mikehh++ reports that it sometimes takes ages to run,

[10:30] <dalek> rakudo: and typed arrays are so broken at the moment that it's

[10:30] <dalek> rakudo: not really worth running the tests.

[10:30] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/5bdbd4e660b2aa96abdf137e8b6f3dbb80860b2c

[10:31] *** amkrankruleuen joined
[10:34] *** risou_ joined
[10:35] *** risou left
[10:35] <moritz_> tadzik: http://moritz.faui2k3.org/tmp/masak-slides.pdf is the generated PDF... the layout is a bit off in places, I hope masak eventually uploads the generated PDF

[10:36] <tadzik> moritz_++

[10:47] *** Axius left
[10:50] *** tadzik left
[10:52] *** szabgab left
[10:53] *** szabgab joined
[10:54] *** Axius joined
[10:56] *** timbunce joined
[11:02] *** Axius left
[11:03] *** jedai_ joined
[11:04] *** Axius joined
[11:06] *** jedai left
[11:11] *** masak joined
[11:12] <masak> SVG is platform-independent and nice in many ways. shame about the fonts, though.

[11:12] <phenny> masak: 10:20Z <moritz_> tell masak about  pdftk slides*.pdf cat out all-slides.pdf

[11:12] <masak> I've merged them (using another tool). now attempting to upload 17M file to a branch on github.

[11:13] <moritz_> branch? they have a download section

[11:13] <masak> ooh

[11:13] * masak aborts

[11:17] <masak> and here it is: http://github.com/masak/osdc-fr-2010-hardcore-bug-reporting/downloads

[11:18] <masak> moritz++

[11:21] *** pythonian4000 is now known as pythonian4000afk

[11:24] <moritz_> masak: what's your second talk about?

[11:24] <masak> http://act.osdc.fr/osdc2010fr/talk/3051

[11:28] <masak> rakudo: role Bottle[::T] { method Str { "a bottle of {T}" } }; class Wine { ... }; say Bottle[Wine].new

[11:28] <p6eval> rakudo 5bdbd4: OUTPUT«a bottle of Failure()␤»

[11:28] <masak> oh la la

[11:28] * masak submits rakudobug

[11:29] <masak> oh, I guess it's the dots.

[11:29] <masak> rakudo: role Bottle[::T] { method Str { "a bottle of {T.perl}" } }; class Wine {}; say Bottle[Wine].new

[11:29] <p6eval> rakudo 5bdbd4: OUTPUT«a bottle of Wine␤»

[11:29] *** hudnix joined
[11:30] *** nsh left
[11:30] *** rjbs left
[11:30] *** rjbs joined
[11:31] *** nsh joined
[11:32] <masak> would doing 'class Wine { ... }' without actually creating the class for realz later be considered a compile-time erreur?

[11:32] <moritz_> erreur? are you Frenchly assimiliated? :-)

[11:33] * moritz_ not sure

[11:34] *** am0c^ joined
[11:34] <masak> moritz_: pas du tout!

[11:37] <masak> rakudo: class Car { has @.wheels }; say Car.^attributes

[11:37] <p6eval> rakudo 5bdbd4: OUTPUT«@!wheels␤»

[11:37] <masak> rakudo: class Car { has @.wheels }; say Car.^attributes.perl

[11:37] <p6eval> rakudo 5bdbd4: OUTPUT«Method 'attributes' not found for invocant of class ''␤  in 'Mu::attribs' at line 1216:CORE.setting␤  in 'Mu::perl' at line 1225:CORE.setting␤  in main program body at line 1␤»

[11:37] <masak> o.O

[11:37] * masak submits rakudobug

[11:38] <x3nU> how can i convert str to int? Only operator i can find is '+' but it converts to Num

[11:38] <moritz_> x3nU: .Int

[11:38] <x3nU> thanks

[11:39] *** Axius left
[11:40] *** timbunce left
[11:46] *** timbunce joined
[11:47] <masak> x3nU: in the long run, even prefix:<+> will convert to Int if the number converted is integrale.

[11:47] <masak> a whole number, I mean.

[11:47] <masak> zut, all this French subitement!

[11:50] *** fda314925 joined
[11:51] <masak> time to focus on slides again.

[11:51] *** masak left
[11:53] *** tadzik joined
[11:58] *** dju joined
[12:02] *** meraxes left
[12:02] *** dju left
[12:02] *** satyavvd joined
[12:02] *** dju joined
[12:09] *** am0c^ left
[12:14] *** satyavvd left
[12:21] *** M_o_C left
[12:21] *** Schwern joined
[12:21] *** MayDaniel left
[12:29] *** zulon joined
[12:31] *** fuad joined
[12:33] *** fuad left
[12:34] *** ruoso joined
[12:35] *** nymacro joined
[12:36] *** risou joined
[12:37] *** risou_ left
[12:39] *** Holy_Cow joined
[12:44] *** zulon left
[12:47] *** Axius joined
[12:50] *** rhr left
[12:51] *** am0c^ joined
[12:51] *** am0c^ left
[12:56] *** maddingue_ joined
[12:57] <maddingue_> masak speaking about Perl 6 at OSDC.fr 2010 (Paris), live at http://cite-sciences.ubicast.eu/lives/thd-live/

[12:57] *** zulon joined
[13:00] * moritz_ notices a typo in the slides

[13:00] <moritz_> =+

[13:00] <moritz_> instead of +=

[13:02] *** Schwern left
[13:08] <tadzik> masak speak louder! :)

[13:08] *** awwaiid joined
[13:09] *** maddingue_ left
[13:09] <moritz_> too bad the sound doesn't work here at all :(

[13:10] *** maddingue_ joined
[13:11] <maddingue_> I forgot to say that jnthn will make two talks after Carl (same url)

[13:12] <moritz_> is there a raw video stream URL somewhere?

[13:13] *** risou left
[13:13] *** risou_ joined
[13:14] *** icwiener joined
[13:15] <x3nU> damn, writing something that uses sockets in perl6 seems to be impossible, there's no examples nowhere ;/

[13:16] <tadzik> LWP::Simple, HTTP::Server::Simple, tests...

[13:16] <maddingue_> moritz_: no. but everything is recorded. we will upload video on the tubes at some point

[13:17] <moritz_> maddingue_: great, please share the URL when you do

[13:17] *** cottoo left
[13:19] *** Patterner left
[13:21] <maddingue_> moritz_: sure :)

[13:25] *** Schwern joined
[13:25] *** masonkramer left
[13:25] *** masonkramer joined
[13:30] *** Psyche^ joined
[13:30] *** Psyche^ is now known as Patterner

[13:36] *** risou joined
[13:36] *** risou_ left
[13:45] *** MayDaniel joined
[13:47] *** Schwern left
[13:56] *** Axius left
[14:06] *** ruoso left
[14:06] *** timbunce left
[14:19] *** justatheory joined
[14:21] <x3nU> i have written simle script which reads everything from socket but threre's problem

[14:21] <x3nU> when connection closes

[14:21] <x3nU> https://gist.github.com/78b2bfa363efd05606a8

[14:21] <x3nU> Method 'bytes' not found for invocant of class '' in 'recv' at line 5597:CORE.setting in 'receiveLine' at line 30:januszpawlacz.pl6 in main program body at line 38:januszpawlacz.pl6

[14:21] *** hudnix left
[14:22] *** ruoso joined
[14:24] *** isBEKaml joined
[14:25] <isBEKaml> hi, folks! 

[14:25] <tadzik> hi isBEKaml!

[14:25] <isBEKaml> hello, tadzik! how's things? :)

[14:26] <tadzik> isBEKaml: crap, the short story

[14:26] <tadzik> the long story is: my phone got lost on a concert :(

[14:26] <isBEKaml> oh, boy! that sucks. 

[14:26] <tadzik> like hell. At least the concert was awesome. But still, it sucks

[14:27] <tadzik> I found a part of it, so it's probably torn into hundreds of pieces by hundreds of metalheads' boots

[14:28] <isBEKaml> I thought you just lost it - hoping you might get it back. but this, I don't know what to say. :(

[14:28] *** cotto joined
[14:29] <tadzik> well, maybe someone found this biggest part (the rest of what I have), but there was not even PIN, so anyone would have alredy turned it off and see the message "looking for my phone, reward"

[14:29] *** justatheory left
[14:30] <tadzik> x3nU: which one is line 38?

[14:30] <tadzik> isBEKaml: funny, in a queue to a dressing room, I met a guy who claimed finding a phone without that my part and sold it for a beer to sb else :/

[14:31] <tadzik> probably was pulling my leg, but still :/

[14:31] *** amkrankruleuen left
[14:31] <isBEKaml> folks sell mobiles for a glass of beer? :/

[14:31] <tadzik> hard to believe, hence I didn't bother with the guy

[14:32] <tadzik> even if he was speaking truth, it'd still be impossible to find the other guy

[14:33] <isBEKaml> If I were you, I won't think too much of getting it back. You never know, mobiles are the easiest to change hands - but hard to believe they sell these all for beer. 

[14:33] *** Axius joined
[14:33] <tadzik> so well, I found some ol' Nokia in my home, will buy some cheap starter

[14:33] <tadzik> isBEKaml: especially where beer is for 6 PLN (like 1.5 euro)

[14:35] <isBEKaml> tadzik: yeah, that's why I find it hard to believe. Anyway, let's hope everything ends well. (optimistically, you get your mobile back in working condition)

[14:35] <tadzik> duh, I very doubt it. But a simcard would be nice

[14:36] <tadzik> my subtenant is moving in on monday, and the only contact she has is that phone number

[14:36] <tadzik> hopefully she reads her emails

[14:37] <isBEKaml> duh. no phone but email. I very much doubt it. 

[14:38] <isBEKaml> In the worst case, you got to be at home all day until she turns up.

[14:38] <tadzik> she knows that I have it, so hopefully she will check it out, once she will see that phoning me is impossible

[14:39] <x3nU> tadzik: 7

[14:39] *** Schwern joined
[14:39] *** satyavvd joined
[14:39] <tadzik> no idea

[14:40] *** Axius left
[14:41] <isBEKaml> rakudo: my $str="a b c d \n"; $str.bytes.say;

[14:41] <p6eval> rakudo 5bdbd4: OUTPUT«9␤»

[14:42] <isBEKaml> is chop in Cool-str OS agnostic?

[14:42] <isBEKaml> I kind of vaguely remember jnthn++ adding windows specific code in there when it failed. 

[14:43] <isBEKaml> it says this: self.substr(0,-1)

[14:43] <moritz_> isBEKaml: iirc the thing that converts bytes to Str should unify all newlines to \n

[14:43] <moritz_> chop is always one character off; it's chomp that removes newlines

[14:44] <isBEKaml> moritz_: ah, right. confused {me} :|

[14:45] <isBEKaml> moritz_: I was also surprised to find chomp implemented in PIR. Can't it be done like: $str.flip.substr(1).flip; ?

[14:45] *** zulon left
[14:45] <isBEKaml> assuming \r\n would count as 1 byte on Windows?

[14:46] <isBEKaml> rakudo: my $str="a b c d \n"; $str.chomp.say; $str.flip.substr(1).flip.say;

[14:46] <p6eval> rakudo 5bdbd4: OUTPUT«a b c d ␤a b c d ␤»

[14:46] *** meppl joined
[14:46] <isBEKaml> rakudo: my $str="a b c d \n"; $str.say; $str.chomp.say; $str.flip.substr(1).flip.say;

[14:46] <p6eval> rakudo 5bdbd4: OUTPUT«a b c d ␤␤a b c d ␤a b c d ␤»

[14:47] <isBEKaml> moritz_: ? 

[14:47] <isBEKaml> is that a slow implementation?

[14:48] *** awwaiid left
[14:50] *** hercynium joined
[14:52] *** awwaiid joined
[14:53] *** fglock joined
[14:54] *** satyavvd left
[14:56] *** _twitch joined
[14:57] <isBEKaml> moritz_: I take that back. that's slow. :(

[14:57] <x3nU> like everyting else written in perl 6 :D

[15:00] <isBEKaml> rakudo: my $str="a b c d e \n\n\n\n"; $str.chomp.say; ## is this right?

[15:00] <p6eval> rakudo 5bdbd4: OUTPUT«a b c d e ␤␤␤␤»

[15:01] <isBEKaml> it just removed the last new line, not all of it. IIRC, chomp removes _trailing_ new lines. 

[15:01] *** zulon joined
[15:02] *** dju left
[15:02] *** dju joined
[15:03] *** dju left
[15:03] *** nymacro left
[15:03] *** dju joined
[15:03] *** maddingue_ left
[15:04] *** dju left
[15:04] *** dual left
[15:05] *** dju joined
[15:09] <moritz_> chomp removes at most one trailing newline

[15:09] *** Italian_Plumber joined
[15:09] <moritz_> buubot: eval: $_ = "ab\n\n\n"; chomp; $_

[15:09] <buubot> moritz_: ab         

[15:09] <isBEKaml> wrong again. :( S32's Str.pod says "Returns string with one newline removed from the end."

[15:09] <moritz_> buubot: eval: "ab\n\n"

[15:09] <buubot> moritz_: ab         

[15:09] <moritz_> buubot: eval: $_ = "ab\n\n\n"; chomp; length

[15:09] <buubot> moritz_: 4       

[15:10] *** ggoebel joined
[15:10] <isBEKaml> moritz_: about that chomp in p6 implementation. Can we have something like that? speed up some parts so we can have it in p6?

[15:11] <isBEKaml> moritz_: if we are going by flip.substr.flip - flip needs to be sped up. this method is really slow, though. 

[15:12] <moritz_> why not use plain substr to start with?

[15:12] <sorear> good * #perl6

[15:13] <moritz_> good * sorear 

[15:13] <isBEKaml> hi sorear

[15:14] <isBEKaml> moritz_:  not sure, maybe I was put off by the comment in there, perhaps? "in PIR for speed" So thought you guys must have already thought of this. 

[15:15] <moritz_> isBEKaml: there's an easy way - write an alternative version, and benchmark it

[15:20] <isBEKaml> moritz_: I'm not even sure. :)

[15:20] <isBEKaml> moritz_: if we are just using substr, why not chop? bombs on windows? 

[15:30] <colomon> isBEKaml: wasn't that long ago chomp was written in pure perl 6.  there was a huge performance improvement by switching to the PIR.

[15:31] <colomon> I don't think it was done using substr, however, so it's probably worth trying to time your version.

[15:31] <isBEKaml> colomon: thanks. will try to rustle up something on my (somewhat ancient) machine. :)

[15:34] <sorear> moritz_: looking at your last blog post, (\w+)\w?$0 seems... wrong

[15:34] <sorear> rakudo: say "abcdabc" ~~ /  (\w+) \w? $0 /

[15:34] <p6eval> rakudo 5bdbd4: OUTPUT«abcdabc␤»

[15:34] <sorear> rakudo: say "abcdcba" ~~ /  (\w+) \w? $0 /

[15:34] <p6eval> rakudo 5bdbd4: OUTPUT«cdc␤»

[15:35] *** plobsing joined
[15:37] *** risou left
[15:37] *** risou joined
[15:39] <moritz_> sorear: should be (\w) \w? $0

[15:40] <sorear> ...Oh.

[15:40] <moritz_> and that's what it is :-)

[15:44] <sorear> hmm, there's a STD bug which causes role Foo[$x] { ... }; Foo[2] to be misparsed

[15:45] *** wamba joined
[15:45] <sorear> ::Foo[2] is handled as a syntactic special case but Foo[2] winds up an ordinary postcircumfix call

[15:46] *** flatwhatson_ left
[15:47] *** Axius joined
[15:48] *** flatwhatson_ joined
[15:51] <isBEKaml> rakudo: my $str = "a b c d \n "; $str.chomp.say; $str.bytes.say;

[15:51] <p6eval> rakudo 5bdbd4: OUTPUT«a b c d ␤ ␤10␤»

[15:53] *** obra left
[15:56] <colomon> rakudo: my $str = "a b c d \n"; $str.chomp.say; $str.bytes.say;

[15:56] <p6eval> rakudo 5bdbd4: OUTPUT«a b c d ␤9␤»

[15:56] <moritz_> chomp is not in-place

[15:57] <isBEKaml> colomon: that's alright. notice the trailing space after \n

[15:58] *** awwaiid left
[15:59] *** Axius left
[15:59] <isBEKaml> rakudo: my $str = "a b c d \n "; $nstr = $str.chomp; say $nstr.bytes ~ " -- " ~ $nstr; 

[15:59] <p6eval> rakudo 5bdbd4: OUTPUT«===SORRY!===␤too few positional arguments: 2 passed, 3 (or more) expected␤»

[15:59] <diakopter> phenny: tell TimToady  sorear> hmm, there's a STD bug which causes role Foo[$x] { ... }; Foo[2] to be misparsed

[15:59] <phenny> diakopter: I'll pass that on when TimToady is around.

[16:00] <diakopter> phenny: tell TimToady sorear> ::Foo[2] is handled as a syntactic special case but Foo[2] winds up an ordinary postcircumfix call

[16:00] <phenny> diakopter: I'll pass that on when TimToady is around.

[16:00] <isBEKaml> rakudo: my $str = "a b c d \n "; $nstr = $str.chomp; $nstr.say;

[16:00] <p6eval> rakudo 5bdbd4: OUTPUT«===SORRY!===␤too few positional arguments: 2 passed, 3 (or more) expected␤»

[16:06] <isBEKaml> colomon, moritz_  The initial benchmark results just came out. The difference between chomp and substr is huge!

[16:07] <colomon> in favor of chomp?

[16:07] <isBEKaml> colomon: yes. 

[16:07] <isBEKaml> chomp   1286725626 1286725630 4 0.004

[16:07] <isBEKaml> substr  1286726304 1286726348 44 0.044

[16:07] <isBEKaml> chop was close. 

[16:07] <isBEKaml> chop    1286725630 1286725676 46 0.046

[16:08] <isBEKaml> and flip was downright horrible. 

[16:08] <isBEKaml> flip    1286725676 1286726304 628 0.628

[16:10] <moritz_> ugh.

[16:11] <isBEKaml> colomon: should I post my benchmark code somewhere? (I know it's really horrible, maybe you guys can point out where things can be sped up)

[16:11] <colomon> sure, how about gist.github.com ?

[16:11] <isBEKaml> colomon: sure. 

[16:11] *** dual joined
[16:12] <colomon> though for what it's worth, your results correspond almost exactly with what I would have guessed.  :)

[16:12] <moritz_> parrot strings have a .reverse method

[16:12] <colomon> but it's always very good to verify those instincts!

[16:12] *** Italian_Plumber left
[16:13] <isBEKaml> http://gist.github.com/619356

[16:15] *** tadzik left
[16:15] <moritz_> rakudo: say pir::reverse__SS('abc')

[16:15] <p6eval> rakudo 5bdbd4: OUTPUT«error:imcc:syntax error, unexpected SREG, expecting '(' ('$S126')␤ in file 'EVAL_10' line 89␤===SORRY!===␤syntax error ... somewhere␤»

[16:18] *** mavrc left
[16:25] <isBEKaml> colomon: find anything off in the benchmark code?

[16:26] <colomon> isBEKaml: haven't had a chance to look yet, I'm cooking sunday dinner.  :)

[16:26] <isBEKaml> colomon: I've used \r\n in there, not sure how that would behave on windows. 

[16:26] <isBEKaml> colomon: Enjoy! no problem. take your time. :)

[16:27] *** fridim joined
[16:27] *** risou left
[16:27] *** risou joined
[16:30] *** ggoebel left
[16:35] <dukeleto> sorear: re: your comment about niecza processes communicating via text files: C'Dent stores AST's in YAML, you might want to look at that : http://github.com/ingydotnet/cdent

[16:37] *** mavrc joined
[16:39] <isBEKaml> moritz_: it seems reverse is no longer available. parrot/examples/shootout/revcomp.pir:77

[16:40] <isBEKaml> moritz_: I might be looking at an older file though. 

[16:45] *** hercynium left
[16:46] <moritz_> isBEKaml: right; I've opened a parrot bug report

[16:47] <isBEKaml> moritz_++

[16:47] <dukeleto> moritz_: i will ask parrot-dev what is up with String.reverse

[16:50] *** [particle] left
[16:51] *** ggoebel joined
[16:53] *** _twitch left
[16:57] <sorear> phenny: ask jnthn Where in S14 does it talk about body run time of parametric roles?

[16:57] <phenny> sorear: I'll pass that on when jnthn is around.

[16:58] *** cognominal joined
[16:58] *** Schwern left
[17:02] *** ggoebel left
[17:06] *** fglock left
[17:07] *** Axius joined
[17:07] *** zulon left
[17:11] *** Axius left
[17:13] *** Axius joined
[17:16] * sorear is now of the impression that "parametric role" is a misnomer

[17:17] <sorear> because EVERY role has at least one type parameter - ::?CLASS

[17:21] *** kjeldahl joined
[17:23] *** awwaiid joined
[17:27] *** Axius left
[17:29] *** Axius joined
[17:29] *** wamba left
[17:32] *** Axius left
[17:32] *** mavrc left
[17:34] *** Axius joined
[17:37] *** mavrc joined
[17:40] *** vortex_ joined
[17:42] *** wamba joined
[17:47] *** flatwhatson left
[17:56] <dalek> niecza/master: c69ae8b | sorear++ | / (4 files):

[17:56] <dalek> niecza/master: Instantiation of parameterized roles

[17:56] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/c69ae8ba0f439145ee4a0b08ce46e2016f6c5907

[17:56] <dalek> niecza/master: 87fd722 | sorear++ | / (6 files):

[17:56] <dalek> niecza/master: Implement runtime mixins

[17:56] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/87fd722b6a4dac5b45589c9402b8426a15749748

[17:57] *** tadzik joined
[17:59] *** flatwhatson joined
[18:01] *** envi left
[18:07] *** Chillance joined
[18:09] <colomon> isBEKaml: I believe your substr test isn't actually legal p6.  At least, I've heard TimToady rant at length about getting rid of the "-1 means one from the end" trick.

[18:09] <colomon> actually, I guess they're all illegal for that reason.  hmmm.

[18:10] <colomon> (Rakudo implements it despite TimToady's objections...)

[18:10] <tadzik> it's overfeatured!

[18:11] <isBEKaml> all of them illegal? :)

[18:13] <isBEKaml> colomon: so how do we go about substr without reversing it? 

[18:13] <isBEKaml> colomon: taking length on long strings is ineffficient, i guess. 

[18:14] *** kjeldahl left
[18:15] <moritz_> *-1

[18:16] <colomon> though *-1 isn't implemented yet

[18:16] <colomon> :\

[18:16] <isBEKaml> rakudo: my $str="abcdefgh"; $str.substr(*-1).say;

[18:16] <p6eval> rakudo 5bdbd4: OUTPUT«maximum recursion depth exceeded␤  in 'Cool::Num' at line 1801:CORE.setting␤  in 'Cool::Num' at line 1801:CORE.setting␤  in 'Cool::Numeric' at line 1788:CORE.setting␤  in 'Cool::Numeric' at line 1788:CORE.setting␤  in 'Cool::Num' at line 7168:CORE.setting␤  in 'Cool::Numeric'

[18:16] <p6eval> ..at li…

[18:16] <colomon> (or spec'd, as far as I can see.)

[18:17] *** Axius left
[18:17] <isBEKaml> colomon: all I wanted to do was check the last character to see if there's a newline(wasn't quite sure about \r\n - added that to junction) and run the actual code if that passes. 

[18:17] *** [particle] joined
[18:17] <colomon> isBEKaml: I understand that.  It's just tricky.

[18:20] <colomon> the spec doesn't mention *-1, but I know that's what TimToady wants.

[18:20] *** flatwhatson_ left
[18:20] <colomon> and it does mention StrPos and StrLen helper types, neither of which is actually defined anywhere so far as I know.

[18:20] *** leprevost left
[18:21] *** Axius joined
[18:22] <sorear> StrPos and StrLen are synonyms for Int in any implementation with only one supported unicode level

[18:24] * moritz_ thinks it's much saner to support exactly one Unicode level per type

[18:24] <moritz_> having a separate type for Buf is a big win in terms of clarity

[18:25] <moritz_> having Str for graphemes and maybe some third type for codepoints would be my preference

[18:25] <isBEKaml> moritz_: when you say Unicode level, are you talking about planes?

[18:25] <moritz_> isBEKaml: no

[18:26] <moritz_> I'm talking about the bytes/codepoints/graphemes distinction

[18:26] <isBEKaml> oh, that. got ya. 

[18:26] <isBEKaml> btw, git segfaults when I try to clone the specs repo. 

[18:27] <tadzik> oh funny

[18:27] <isBEKaml> tadzik: you got that too?

[18:27] <tadzik> isBEKaml: nah

[18:27] *** Gothmog_ left
[18:27] <tadzik> but it's funny anyway :)

[18:27] <isBEKaml> zsh: segmentation fault  git clone http://github.com/perl6/specs.git

[18:27] <tadzik> which git?

[18:27] <isBEKaml> no more than that. 

[18:28] <isBEKaml> v1.6.4

[18:28] <moritz_> isBEKaml: try the git:// URL

[18:28] <tadzik> 1.7.3.1 hier

[18:28] <moritz_> or the git@... ssh URL

[18:28] <tadzik> oh, I lied

[18:29] *** vortex_ left
[18:29] <isBEKaml> git clone git://git@github.com:perl6/specs.git

[18:29] <isBEKaml> fatal: Unable to look up [email@hidden.address] (port perl6) (Servname not supported for ai_socktype)

[18:29] <tadzik> "port perl6" sounds wrong

[18:29] <isBEKaml> this is getting weird

[18:29] <moritz_> isBEKaml: wront URL

[18:29] <moritz_> git://github.com/perl6/specs.git

[18:30] *** Gothmog_ joined
[18:30] <isBEKaml> moritz_: isn't perl6 the organisation that can be given in there?

[18:30] <isBEKaml> :perl6/specs.git

[18:30] <tadzik> :perl6 is the port no

[18:31] <moritz_> isBEKaml: I don#t understand

[18:31] <tadzik> I think anything after : in an URI is a port number

[18:31] <isBEKaml>  http://github.com/masak/yapsi.git

[18:31] <isBEKaml> like above. 

[18:31] <moritz_> just try the same URL with s/http/git/

[18:32] <isBEKaml>  [email@hidden.address]
[18:32] <isBEKaml> oh, I gave the wrong url - that's what I use when pushing commits. 

[18:32] <tadzik> ah, right, I failed again :)

[18:33] <isBEKaml> anyway,  all's well now. :)

[18:33] *** flatwhatson_ joined
[18:34] <isBEKaml> speaking of which, I should be thinking of doing something in there. :) (been idle/away for too long)

[18:37] <isBEKaml> colomon: S06 shows substr(-1) usage. Why'd TimToady put it there if he didn't want it to be used?

[18:39] *** risou left
[18:40] <isBEKaml> rakudo: my $string="abcdef"; substr($string, -1, Inf).say; 

[18:40] <p6eval> rakudo 5bdbd4: OUTPUT«␤»

[18:40] <isBEKaml> uhh

[18:41] <isBEKaml> weird, that's what S06 shows. 

[18:41] <isBEKaml> specifically, S06:2873

[18:42] <isBEKaml> pugs: my $string="abcdef"; substr($string, -1, Inf).say; 

[18:42] <p6eval> pugs: OUTPUT«␤»

[18:44] *** PerlPilot joined
[18:45] *** PerlJam left
[18:49] *** risou joined
[18:55] *** mavrc left
[18:57] *** Axius left
[18:58] *** Axius joined
[19:00] *** risou left
[19:03] <colomon> isBEKaml: S06 is talking about something completely different, I wouldn't trust what it says about substr

[19:07] *** Axius left
[19:07] <isBEKaml> colomon: I don't understand. The only difference I see is, doing $var.substr would involve a 2 parameter signature while substr would involve a 3 paramter signature. Is the latter a direct call into pir?

[19:07] <isBEKaml> s/pir/parrot/

[19:08] *** icwiener left
[19:11] <isBEKaml> colomon: If I'm misled in believing they are the same, please point that out. 

[19:13] <colomon> isBEKaml: the problem is that you're looking at something which has chosen substr as an arbitrary example, not something which defines substr.

[19:15] <isBEKaml> colomon: well, in that case, I don't see any definition anywhere except perhaps S32/Str.pod

[19:18] <colomon> right, S32/Str.pod is where it is defined, and the definition is imcomplete

[19:18] <colomon> or at least, not properly tracking TimToady++'s mind.

[19:23] *** c9s_ joined
[19:23] *** c9s_ left
[19:30] *** mavrc joined
[19:34] <isBEKaml> poke TimToady, then? :)

[19:40] *** xabbu42 joined
[19:47] *** awwaiid left
[19:49] *** Holy_Cow left
[20:12] *** MayDaniel left
[20:17] *** Mowah left
[20:30] *** eternaleye left
[20:34] <isBEKaml> rakudo: my $str="abcdefgh abcdefghijkl\n\n"; my @ww = $str.words; @ww.join(" ").say; 

[20:34] <p6eval> rakudo 5bdbd4: OUTPUT«abcdefgh abcdefghijkl␤»

[20:34] *** kavakava joined
[20:34] <isBEKaml> rakudo: my $str="abcdefghijkl\n\n"; my @ww = $str.words; @ww.join(" ").say; 

[20:34] <p6eval> rakudo 5bdbd4: OUTPUT«abcdefghijkl␤»

[20:34] <isBEKaml> colomon: ^^ no substr!

[20:39] <isBEKaml> colomon: but then, it does break the rule that only one trailing newline char should be deleted. 

[20:45] <isBEKaml> rakudo: my $str="abcdefgh,abcdefghijkl\n\n"; my @ww = $str.words; @ww.join(" ").say; 

[20:45] <p6eval> rakudo 5bdbd4: OUTPUT«abcdefgh,abcdefghijkl␤»

[21:00] *** wamba left
[21:00] *** isBEKaml left
[21:11] *** ggoebel joined
[21:25] *** fridim left
[21:30] *** pythonian4000afk is now known as pythonian4000

[21:33] *** xabbu42 left
[21:40] *** pothos joined
[21:47] *** nymacro joined
[22:03] *** pothos left
[22:03] *** pothos joined
[22:04] <dalek> niecza/master: 2aa5397 | sorear++ | / (2 files):

[22:04] <dalek> niecza/master: Implement :dba

[22:04] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/2aa53979e77640e4f83260738ff16472d33fc5da

[22:40] * sorear needs a way to implement nextsame; that isn't stupidly inefficient for calls that DON'T use it

[22:41] <dalek> niecza/master: 3170c97 | sorear++ | / (7 files):

[22:41] <dalek> niecza/master: Implement :lang

[22:41] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/3170c979b628812f1bae0ed2af8d2978fcd35cb8

[22:55] <diakopter> as long as nextsame isn't allowed in a stringeval...

[22:56] *** mfollett joined
[22:56] *** mfollett left
[22:56] *** mfollett joined
[23:12] *** rhr joined
[23:17] *** mfollett left
[23:21] *** mavrc left
[23:30] <cotto> Is t/spec/S05-metasyntax/unknown.rakudo expected to be slow?  I've been running Rakudo's spectest under the profiling runcore, and that test has been going for most of a day.

[23:35] * diakopter coughs

[23:39] <cotto> need a cough drop?

[23:40] *** Eevee left
[23:44] *** mfollett joined
