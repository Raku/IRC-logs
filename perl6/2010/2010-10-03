[00:05] *** Slimcea_boy joined
[00:07] * jnthn gets some sleep

[00:13] * araujo extended a bit the 'if' syntax

[00:13] <araujo> http://ideone.com/YOeOv

[00:20] *** Slimcea_boy left
[00:33] *** jaldhar left
[00:37] *** ruoso left
[00:48] *** Trashlord left
[00:50] *** jaldhar joined
[00:56] <dalek> sprixel: 31dbdf2 | diakopter++ | sprixel/ (15 files):

[00:56] <dalek> sprixel: yet another near-total refactoring of the codegen.  cleaner, maybe.

[00:56] <dalek> sprixel: review: http://github.com/diakopter/sprixel/commit/31dbdf2bc2a01c0cbf016883ddb95b071665fb69

[01:02] *** Util left
[01:03] *** PerlPilot joined
[01:20] *** risou joined
[01:21] *** florz left
[01:21] *** florz joined
[01:22] *** nymacro joined
[01:22] *** am0c^ joined
[01:25] *** mavrc left
[01:25] *** flatwhatson_ joined
[02:20] <dalek> ecosystem: be4a098 | novus++ | projects.list:

[02:20] <dalek> ecosystem: Re-added ww6 as it sorta works now.

[02:20] <dalek> ecosystem: review: http://github.com/perl6/ecosystem/commit/be4a0983ce7b0e6d85d60e860a558f8142f790a9

[02:55] *** nivk joined
[02:55] *** nivk left
[03:00] *** Schwern joined
[03:04] *** meppel joined
[03:05] *** meppl left
[03:07] *** awwaiid joined
[03:37] *** envi joined
[03:42] *** eternaleye joined
[03:47] *** Plankton joined
[03:49] <Plankton> is there any web forum software written in Perl6 yet?

[03:51] <Plankton> Wow! I see why everyone uses these chat rooms ... wealth of information!

[03:54] <tylercurtis> Plankton: I'm not aware of anything like that. One problem is that the existing Perl 6 implementations are still quite slow.

[03:55] <Plankton> bummer

[03:56] <tylercurtis> On the other hand, it could certainly be done. masak and someone(I don't remember who) did write a wiki in Perl 6, and that was when Rakudo was much much slower than it is now.

[03:59] *** mepplock joined
[04:00] <sorear> Carl Masak (497), Ilya Belikin (345), Johan Viklund (136)

[04:00] <sorear> are the 3-digit club from git shorlog

[04:00] <sorear> +t

[04:01] *** Schwern left
[04:03] *** meppel left
[04:12] <Plankton> I read something about the perl6 wiki and that it is good from mostly static content

[04:13] <tylercurtis> std: [:foo<bar>] 1, 2, 3

[04:13] <p6eval> std 237d266: OUTPUT«ok 00:01 117m␤»

[04:13] <Plankton> I guess I really don't understand that very well

[04:14] <tylercurtis> What does that (or, rather, the general case of a colon pair as the operator in an infix meta-op) mean?

[04:17] <Plankton> why is the existing Perl 6 implementation so slow ... and how could anything be so possibly slow ... I mean one could convieably write a wiki in bash or borne shell

[04:17] <Plankton> conceivably

[04:18] <Plankton> you just need to spit out text / html

[04:19] <sorear> I've got a Perl 6 implementation here with a grammar engine about 40 times faster than Rakudo

[04:19] <sorear> but addition isn't quite there yet

[04:19] <sorear> :(

[04:21] *** nymacro left
[04:23] <Plankton> is perl 5 easy to translate into perl 6?

[04:26] <tylercurtis> sorear: what does the <colonpair> alternative in infixish in STD::P6 mean?

[04:30] <sorear> tylercurtis: Adverbs.

[04:30] <sorear> niecza: sub infix:<foo>($a, $b, :$c) { say "a=$a b=$b c=$c" }; 3 foo 4 :c<5>

[04:31] <p6eval> niecza 2be14a1: OUTPUT«a=3 b=4 c=5␤»

[04:31] <sorear> the colonpair is in infixish context

[04:31] *** thowe left
[04:32] <tylercurtis> Oh, right. I forgot about the calls to infixish in EXPR.

[04:32] <tylercurtis> sorear: thanks.

[04:33] <sorear> this is how %foo<bar> :delete works

[04:42] *** risou left
[04:42] *** mepplock left
[04:43] *** meppl joined
[04:43] *** risou joined
[04:47] *** risou left
[04:59] *** Plankton left
[05:07] <TiMBuS> rakudo: say 2,4,8 ... 50

[05:08] <p6eval> rakudo 7c74c0:

[05:08] <p6eval> ..OUTPUT«(timeout)128256512102420484096819216384327686553613107226214452428810485762097152419430483886081677721633554432671088641342177282684354565368709121073741824214748364842949672968589934592171798691843435973836868719476736137438953472274877906944549755813888109951162777621990232555524…

[05:08] <TiMBuS> :/

[05:14] *** risou joined
[05:17] <tylercurtis> rakudo: say 2, 4, 8, .. * > 50

[05:17] <p6eval> rakudo 7c74c0: OUTPUT«No applicable candidates found to dispatch to for 'infix:<..>'. Available candidates are:␤:(Any $min, Any $max)␤␤  in main program body at line 22:/tmp/BsuvhaT8Va␤»

[05:18] <tylercurtis> rakudo: say 2, 4, 8, ... * > 50

[05:18] <p6eval> rakudo 7c74c0: OUTPUT«===SORRY!===␤Comma found before apparent series operator; please remove comma (or put parens␤    around the ... listop, or use 'fail' instead of ...) at line 22, near " ... * > 5"␤»

[05:18] <tylercurtis> rakudo: say 2, 4, 8 ... * > 50

[05:18] <p6eval> rakudo 7c74c0: OUTPUT«248163264␤»

[05:19] <sorear> tylercurtis: How was alpha slower?

[05:24] *** meppl left
[05:24] <tylercurtis> sorear: I don't really know if it was. I assumed that, given how much Rakudo has sped up in the time that I have been paying attention to Perl 6, it is probably faster now than it was then. Was alpha so much faster than ng that Rakudo master now isn't faster than alpha was?

[05:26] <sorear> tylercurtis: alpha was simpler in enough ways that matter that I wouldn't jump to that conclusion

[05:26] <sorear> but I wasn't around then and I don't have any actual data

[05:26] <sorear> better to ask one of the old timers

[05:34] <tylercurtis> sorear: Very unscientific benchmarking of a simple looping sum of 1 to 10000 program indicates that alpha may indeed be faster than current master for at least some programs.

[05:36] <sorear> subroutine calls in niecza are much, much, much faster than I thought

[05:37] <sorear> benchmarking using a sub a() {}; sub b() { a; a }; sub c() { b; b } ... ladder gives 2^25-1 call/return pairs in 18.737 sec, for 558 ns each

[05:37] <sorear> time to destroy that number.

[05:39] <sorear> perl5 12.0 gets 1240 ns on the same hardware

[05:40] <sorear> diakopter++ # for those not in the know, I stole my subroutine call implementation from him

[05:42] <tylercurtis> sorear: ooc, how do niecza and perl 5 compare for subroutine calls with arguments?

[05:48] <sorear> How many and what kinds?

[05:57] *** tylercurtis left
[05:58] *** tylercurtis joined
[06:00] *** LaVolta joined
[06:00] <tylercurtis> sorear: Actually, on further thought, you probably shouldn't indulge my curiosity on that. Without considering slurpy parameters or using more than one argument of a given type, there's at least 6 different scenarios I'd be curious about.

[06:13] <diakopter> sorear: how many .net function calls does each p6 function call use

[06:23] <tylercurtis> Good night, #perl6.

[06:23] *** tylercurtis left
[06:26] <diakopter> sorear: perlesque function calls use 6 or 7 function calls (many of which are likely inlined by the x86 JIT in .NET/mono b/c they're so small), so it ends up being about 3 indirect jumps

[06:26] <diakopter> I'd guesstimate.

[07:04] *** Guest23195 joined
[07:14] *** justatheory left
[07:21] *** satyavvd joined
[07:29] <sorear> diakopter: &foo()...

[07:31] <sorear> 1. Variable::Fetch() on the &foo object  2. IP6::Invoke() on that  3. call IP6::GetMO() and fetch the on_invoke field  4. delegate call to the InvokeHandler  5. Frame::.ctor and return to trampoline  6. trampoline makes delegate call to our sub

[07:32] <sorear> 7. sub returns th.caller, trampoline makes delegate call to caller

[07:41] *** eternaleye left
[07:46] *** eternaleye joined
[07:53] *** isBEKaml joined
[07:55] *** tadzik joined
[07:57] *** isBEKaml left
[08:04] *** Ross joined
[08:04] *** Ross left
[08:04] *** Ross joined
[08:06] *** agentzh joined
[08:16] *** Patterner left
[08:17] *** araujo left
[08:19] *** Mowah joined
[08:22] *** LaVolta left
[08:25] <sorear> up to 675 ns.  (I found a less damaging way)

[08:26] <dalek> niecza/master: 4b870fa | sorear++ | / (9 files):

[08:26] <dalek> niecza/master: Use a uniform representation for CgOp

[08:26] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/4b870fabbe9d92a8092cc4e4795889f6b95e2abe

[08:26] <dalek> niecza/master: f7e8ef5 | sorear++ | perf/callmark.pl:

[08:26] <dalek> niecza/master: Add a function call benchmark

[08:26] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/f7e8ef5b96ba5b61c94491cf8a8cc9036120124c

[08:26] <dalek> niecza/master: 0abde70 | sorear++ | / (3 files):

[08:26] <dalek> niecza/master: Implement excess argument detection

[08:26] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/0abde70555aa46064eedad62d7253b6512e012b7

[08:31] *** Psyche^ joined
[08:31] *** Psyche^ is now known as Patterner

[08:39] *** awwaiid left
[08:41] *** awwaiid joined
[08:48] *** kjeldahl joined
[08:49] <tadzik> sorear: impressive

[08:51] *** agentzh left
[08:52] *** agentzh joined
[08:54] *** agentzh left
[08:54] *** agentzh joined
[08:55] *** agentzh left
[08:55] *** mj41 joined
[08:55] *** agentzh joined
[08:57] *** mavrc joined
[08:59] *** agentzh left
[08:59] *** agentzh joined
[09:00] *** pmichaud left
[09:03] *** ash_ joined
[09:08] <tadzik> niecza: my %a = foo => 'bar'; say %a<foo>

[09:08] <p6eval> niecza 0abde70: OUTPUT«Unhandled exception: assigning to readonly value␤  at  line 227␤  at  line 1␤  at  line 706␤  at  line 706␤  at  line 706␤  at  line 0␤"mono" unexpectedly returned exit value 1 at (eval 773) line 13␤ at niecza_eval line 71␤»

[09:08] *** kjeldahl left
[09:08] <sorear> odd failure

[09:10] <tadzik> test.pl made me curious about the hashes

[09:11] <sorear> I don't have Hash.LISTASSIGN

[09:11] <sorear> that should have been an unknown method error

[09:15] *** icwiener joined
[09:24] <sjohnson> hi!

[09:24] <sorear> HI!

[09:31] <tadzik> hi!

[09:40] *** Schwern joined
[09:53] *** zulon joined
[10:00] *** ash_ left
[10:10] *** sjn left
[10:12] *** sjn joined
[10:16] * sorear has cut sub call time in half, but things are still crashing a bit

[10:18] <satyavvd> my $pi is constant = 3.14159;

[10:18] <satyavvd> giving error

[10:19] <moritz_> hello satyavvd 

[10:19] <tadzik> perl6.org down?

[10:19] <moritz_> fwiw, pi is predefined

[10:19] <sorear> correct syntax is constant $pi = 3.14159 anyway

[10:20] <satyavvd> oh ok..

[10:20] <moritz_> but probably not yet implemented in Rakudo

[10:20] <moritz_> rakudo: say pi

[10:20] <p6eval> rakudo 7c74c0: OUTPUT«3.14159265358979␤»

[10:21] <satyavvd> yes .. my constant $p=3.1;

[10:21] <satyavvd> got ..Constant type declarator not yet implemented at line 1, near "=3.1;\n"

[10:21] <moritz_> now that's a pretty good error message, isn't it?

[10:21] <satyavvd> yeah agree..

[10:28] *** kjeldahl joined
[10:32] *** Patterner left
[10:43] *** Psyche^ joined
[10:43] *** Psyche^ left
[10:44] *** MayDaniel joined
[10:44] *** MayDaniel_ joined
[10:45] *** MayDaniel_ left
[10:45] *** Psyche^ joined
[10:45] *** Psyche^ is now known as Patterner

[10:49] *** drbean left
[10:54] <dalek> niecza/master: ee1b582 | sorear++ | / (3 files):

[10:54] <dalek> niecza/master: Implement the pad cache

[10:54] <dalek> niecza/master: 

[10:54] <dalek> niecza/master: Frames are now kept on a number of auxilliary doubly-linked lists.  In

[10:54] <dalek> niecza/master: each list, frames can be reused after they return, because the lists

[10:54] <dalek> niecza/master: are kept monotonic by call depth.  When the call stack needs to change

[10:54] <dalek> niecza/master: shape away from a stack, for closures and gather/take, a new list is

[10:54] <dalek> niecza/master: created and the relevant frames are relinked.  +30% speedup on the call

[10:54] <dalek> niecza/master: benchmark.

[10:54] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/ee1b5829f6745e19531077e2805c7aafb3205720

[10:55] *** zulon left
[10:59] <mberends> sorear++

[11:01] *** drbean joined
[11:03] *** jedai joined
[11:09] *** Patterner left
[11:10] *** hugme joined
[11:10] *** ChanServ sets mode: +v hugme

[11:23] *** Psyche^ joined
[11:23] *** Psyche^ is now known as Patterner

[11:24] <satyavvd> if(1==1) {say "Matched"}   is working but not  if(1==1){say "Matched"}    space matters?

[11:25] <tadzik> there has to be whitespace before {

[11:32] *** Schwern left
[11:33] *** icwiener_ joined
[11:36] *** icwiener left
[11:37] *** am0c^ left
[11:42] *** agentzh left
[11:48] *** shabble joined
[11:50] <moritz_> rakudo: if 1 == 1 { say "Matched" } # no parens needed at all

[11:50] <p6eval> rakudo 7c74c0: OUTPUT«Matched␤»

[11:51] <moritz_> std:  if(1==1) {say "Matched"} 

[11:51] <p6eval> std 237d266: OUTPUT«[31m===[0mSORRY![31m===[0m␤Word 'if' interpreted as 'if()' function call; please use whitespace instead of parens at /tmp/SBi5NhgBSI line 1:␤------> [32mif[33m⏏[31m(1==1) {say "Matched"}[0m␤Unexpected block in infix position (two terms in a row) at /tmp/SBi5NhgBSI line

[11:51] <p6eval> ..1:␤-…

[12:00] *** Juerd joined
[12:06] *** araujo joined
[12:17] *** satyavvd_ joined
[12:19] *** satyavvd left
[12:19] *** satyavvd_ is now known as satyavvd

[12:22] *** zulon joined
[12:36] *** satyavvd left
[12:39] *** Trashlord joined
[12:46] *** zulon left
[12:58] *** isBEKaml joined
[13:09] *** isBEKaml left
[13:13] *** Ross left
[13:18] *** kjeldahl left
[13:18] *** Patterner left
[13:22] *** masonkramer joined
[13:30] *** zulon joined
[13:30] *** Psyche^ joined
[13:30] *** Psyche^ is now known as Patterner

[13:35] *** cls_bsd joined
[13:38] *** molaf joined
[13:53] *** awwaiid left
[13:54] *** Italian_Plumber joined
[13:54] *** zulon left
[13:59] *** sftp joined
[14:10] *** Italian_Plumber left
[14:14] *** aindilis joined
[14:14] *** mavrc left
[14:14] *** PacoLinux joined
[14:16] *** wamba joined
[14:17] *** Italian_Plumber joined
[14:26] *** meppl joined
[14:30] *** nymacro joined
[14:47] *** synth left
[14:56] *** dual joined
[15:03] *** icwiener_ left
[15:26] <nymacro> tadzik, https://bitbucket.org/nymacro/h/src/tip/bjgolfmin.p6

[15:26] <nymacro> I got it down to 402 ;)

[15:27] *** icwiener joined
[15:28] <tadzik> :)

[15:29] *** risou left
[15:29] *** ash_ joined
[15:30] *** risou joined
[15:34] *** risou left
[15:39] *** tadzik left
[15:45] *** am0c^ joined
[15:53] *** tadzik joined
[15:58] *** am0c^ left
[15:58] *** am0c^ joined
[16:12] *** kst left
[16:12] *** kst joined
[16:14] *** amkrankruleuen joined
[16:14] *** redicaps joined
[16:14] *** redicaps left
[16:24] *** nymacro left
[16:29] <moritz_> .reduce(*+*)

[16:30] <moritz_> that looks like it could be replaced by a prefix [+]

[16:30] <moritz_> rakudo: say (1, 2, 3).sum

[16:30] *** MayDaniel_ joined
[16:30] <p6eval> rakudo 7c74c0: OUTPUT«Method 'sum' not found for invocant of class 'Parcel'␤  in main program body at line 22:/tmp/ug7ol8nJFa␤»

[16:30] <moritz_> rakudo: say [+] 1, 2, 3

[16:30] <p6eval> rakudo 7c74c0: OUTPUT«6␤»

[16:30] <moritz_> $_.grep can be written as .grep instead

[16:31] *** MayDaniel left
[16:52] *** M_o_C joined
[16:55] <tadzik> is crond on feather supposed to mail you the errors?

[16:56] <moritz_> yes

[16:56] <moritz_> but the mail forwarding is probably broken

[16:56] <tadzik> bah

[16:56] <tadzik> 1 0 * * * smoker.pl | perl ~/sergenerator.pl > $(echo ~/emmentaler/views/`date +"%d-%m-%y"`.tt)

[16:56] <tadzik> ↑ does this cronjob look right to you?

[16:57] <tadzik> No mail for tjs -- yet it haven't run even once

[16:57] <tadzik> I was hoping it'd run a minute after midnight everyday

[16:58] <moritz_> probably a problem with $PATH

[16:58] <moritz_> where is smoker.pl?

[16:58] <moritz_> better use a full qualified path to it

[16:58] <tadzik> /home/tjs/.perl6/bin

[16:58] <tadzik> hmm, can try

[16:58] <moritz_> that's not in the default $PATH

[16:58] <moritz_> and cron uses the default system PATH

[16:59] <moritz_> and ignores any changes you make in your .bashrc

[16:59] <tadzik> ah, I see

[16:59] <tadzik> well it's in .profile, but I see the point

[16:59] *** bobkare joined
[17:03] *** Ross joined
[17:20] <ash_>  try.rakudo.org is back up, btw

[17:22] <ash_> std: class A {has $.a = $^b + 1;has $.b = $^a }; say A.new(1,2).a

[17:22] <p6eval> std 237d266: OUTPUT«[31m===[0mSORRY![31m===[0m␤Placeholder variable $^b may not be used here because the surrounding package block takes no signature at /tmp/Fx9q_bkcz8 line 1:␤------> [32mclass A {has $.a = $^b[33m⏏[31m + 1;has $.b = $^a }; say A.new(1,2).a[0m␤Placeholder variable $^a may

[17:22] <p6eval> ..not…

[17:24] *** ggoebel joined
[17:38] <ash_> rakudo: orelse

[17:38] <p6eval> rakudo 7c74c0: OUTPUT«Could not find sub &orelse␤  in main program body at line 22:/tmp/AHPeVSAbww␤»

[17:39] <ash_> rakudo: say 1 // 3

[17:39] <p6eval> rakudo 7c74c0: OUTPUT«1␤»

[17:39] <ash_> rakudo: say 1 orelse 3;

[17:39] <p6eval> rakudo 7c74c0: OUTPUT«===SORRY!===␤Confused at line 22, near "say 1 orel"␤»

[17:39] <ash_> std: say 1 orelse 2;

[17:39] <p6eval> std 237d266: OUTPUT«ok 00:02 116m␤»

[17:39] <tadzik> oh

[17:39] <moritz_> orelse and andthen are NYI

[17:39] <ash_> ah, got ya

[17:40] <ash_> just curious

[17:40] <ash_> looking at the perl6 bug's list in the bug tracker, some of them are closable, like #50118

[17:40] <tadzik> what are they?

[17:40] <moritz_> shouldn't be too hard (implement orelse)

[17:40] <tadzik> I just thought about it

[17:41] <ash_> tadzik: http://perlcabal.org/syn/S03.html#Loose_or_precedence talks about them

[17:42] <ash_> rakudo: my @array = 1, 2, 3; say @array.min:{ $^a <=> $^b }

[17:42] <p6eval> rakudo 7c74c0: OUTPUT«Method 'min:{ $^a <=> $^b }' not found for invocant of class 'Array'␤  in main program body at line 22:/tmp/B_N8pWpz_2␤»

[17:43] <ash_> my @array = 1, 2, 3; say @array.min: { $^a <=> $^b }

[17:43] <tadzik> bah, I would need some guidance

[17:43] <ash_> rakudo: my @array = 1, 2, 3; say @array.min: { $^a <=> $^b }

[17:43] <p6eval> rakudo 7c74c0: OUTPUT«1␤»

[17:43] <moritz_> ash_: there's still src/pmc/perl6str.pmc in the rakudo repo

[17:44] <ash_> ah, oops, i mis-read the ticket 

[17:44] <ash_> std: (1, 2).min:{ $^a <=> $^b };

[17:44] *** masonkramer left
[17:44] <moritz_> and src/builtins/Str.pir uses Perl6Str as parent class

[17:44] <p6eval> std 237d266: OUTPUT«ok 00:01 119m␤»

[17:44] <ash_> std: (1, 2).min: { $^a <=> $^b };

[17:44] <p6eval> std 237d266: OUTPUT«ok 00:01 119m␤»

[17:44] *** masonkramer joined
[17:45] <ash_> can those both be re-written into nqp/perl6? just wondering

[17:46] <ash_> the pmc only seems to have 2 helper functions for converting strings to int/float values

[17:51] <tadzik> how can I do something like for (1..100) in NQP?

[17:52] *** Italian_Plumber left
[17:52] <moritz_> my $x = 1; while $x <= 100 { ....; $x++ }

[17:52] <ash_> nqp: my $x := 1; while $x < 5 { say($x); $x++ };

[17:52] <p6eval> nqp: OUTPUT«1␤2␤3␤4␤»

[17:53] <tadzik> right. Thanks

[17:53] *** justatheory joined
[18:01] *** Italian_Plumber joined
[18:02] <jnthn> evening, folks :-)

[18:02] <tadzik> evening jnthn :)

[18:04] <moritz_> o/

[18:08] *** tadzik left
[18:09] *** aloha joined
[18:09] *** tadzik joined
[18:15] *** amkrankruleuen left
[18:16] *** ggoebel left
[18:21] *** __rnddim__ joined
[18:21] *** ggoebel joined
[18:21] *** cggoebel joined
[18:22] *** lue left
[18:23] *** ggoebel left
[18:24] *** wamba left
[18:26] *** envi left
[18:27] *** cggoebel left
[18:28] *** tadzik left
[18:31] *** awwaiid joined
[18:32] *** meppel joined
[18:32] *** meppl left
[18:38] *** mavrc joined
[18:53] *** MayDaniel_ left
[19:19] *** Schwern joined
[19:26] *** ash__ joined
[19:26] *** masak joined
[19:26] <masak> ahoj, #perl6!

[19:26] <moritz_> good `now`, masak

[19:26] <masak> it is a good 'now', indeed.

[19:26] <jnthn> holla', masak

[19:27] <jnthn> masak: Nice weekend?

[19:27] <masak> very much so.

[19:27] <jnthn> :-)

[19:28] <masak> cocooned in the comforting embrace of lots of Esperanto friends...

[19:28] *** ash_ left
[19:28] *** ash__ is now known as ash_

[19:28] <masak> I'm all warm and tingly inside now.

[19:28] <jnthn> \o/

[19:28] <moritz_> 'twas very warm here

[19:29] <masak> early tomorrow I'll need to catch a flight to a certain Mr Berends.

[19:29] <mberends> aha!

[19:29] <jnthn> masak: Straight to his private airfield? :-)

[19:30] * jnthn looks forward to joining the fun later on in the week. :-)

[19:30] *** justatheory left
[19:30] <masak> jnthn: I thought I'd tell the pilot to let me off while we cruise over mberends' house.

[19:30] <masak> if it's not too much trouble.

[19:30] <jnthn> masak: Cool

[19:30] <jnthn> Remember the parachute.

[19:30] <masak> sometimes pilots are picky about such things.

[19:30] <masak> oh! right!

[19:30] * masak makes a little note

[19:31] <jnthn> .oO( oh chute...I forgot it... )

[19:31] <mberends> ok, I'll roll out a large paper X in a nearby open field

[19:32] <masak> thanks.

[19:32] <masak> jnthn++ # groan

[19:33] <masak> hey! seems psyde has a potential second user already! http://gist.github.com/608845

[19:33] <masak> and it doesn't even really exist yet... :)

[19:35] *** meppel left
[19:35] *** jaldhar left
[19:36] * jnthn tries to switch his head back into Russian mode so he can do his homework, after chatting with a Czech girl earlier on in the evening. It's almost like switching between Perl 5 and Perl 6...

[19:36] *** jaldhar joined
[19:37] *** jaldhar left
[19:37] *** awwaiid left
[19:37] <masak> seems both my talks and jnthn's are on the Sunday... http://act.osdc.fr/osdc2010fr/schedule?day=2010-10-10

[19:37] <jnthn> masak: Yeah!

[19:37] *** jaldhar joined
[19:37] <masak> one more day to procrastinate... :P

[19:37] <jnthn> masak: :P

[19:37] * masak has already started on both his talks!

[19:37] <jnthn> One of mine is a repeat

[19:38] <jnthn> The other one I have written out the things I want to say, and now just need slides / words / diagrams to go with it. :-)

[19:38] <masak> "just"

[19:38] <jnthn> I was gonna do those yesterday, but writing NQP's ClassHOW was more fun.

[19:38] <masak> for me, slides are the time-consuming part.

[19:38] <jnthn> Yes, "just" :-)

[19:39] <jnthn> Aye, and I want to try and make a couple of nice-ish diagrams this time.

[19:40] <masak> sir, I wish you lots of inspiration.

[19:40] <jnthn> Thanks. You too! :-)

[19:40] <masak> thank you. :)

[19:41] <hudnix> I find myself using the construct "gather {take .foo for somefunc}" often enough to want a shorter idiom for it. "take .foo gatherfor somefunc" is ugly though...

[19:42] <masak> hudnix: .foo for somefunc

[19:42] <moritz_> somefunc».foo

[19:42] <masak> moritz_++ # wins

[19:42] <jnthn> >>. is NYL

[19:42] <jnthn> (if it should be)

[19:42] <hudnix> is >> implemented yet though?

[19:42] <masak> yes.

[19:42] <jnthn> yes

[19:42] <hudnix> oh

[19:42] <masak> but, what jnthn said.

[19:42] <jnthn> NYL, not NYI :-)

[19:42] <masak> not yet lazy.

[19:43] <jnthn> ;-)

[19:43] <moritz_> it's supposed to be hyper

[19:43] <jnthn> Sorry, that was acronymical cruelty. :-)

[19:43] <jnthn> Oh, of course.

[19:43] <masak> ACBTCOD :)

[19:43] <jnthn> So it's not meant to ever be lazy.

[19:43] <masak> Acronymical Cruelty Beyond The Call Of Duty :)

[19:46] <hudnix> silly me, I had decided it didn't work yet because I was typing .>> instead of >>.

[19:47] *** Italian_Plumber left
[19:47] *** billgosh joined
[19:49] <masak> std: my @a; @a.>>foo

[19:49] <p6eval> std 237d266: OUTPUT«[31m===[0mSORRY![31m===[0m␤Confused at /tmp/B7VBSnFjTC line 1:␤------> [32mmy @a; @a.>>[33m⏏[31mfoo[0m␤    expecting any of:␤        postfix␤ postfix_prefix_meta_operator␤Parse failed␤FAILED 00:01 117m␤»

[19:49] <masak> std: my @a; @a.>>.foo

[19:49] <p6eval> std 237d266: OUTPUT«ok 00:01 116m␤»

[19:55] *** timbunce joined
[19:57] <hudnix> I am close to having a cool toy in perl6 to show off soon, btw

[19:59] <jnthn> Oooh. :-)

[19:59] <masak> a pre-announcement. nice.

[20:02] <hudnix> oops, now I have to make it live up to the hype :)

[20:10] <masak> better sleep a bit before the early flight tomorrow.

[20:10] <masak> 'night, #perl6.

[20:10] *** masak left
[20:15] *** Schwern left
[20:15] *** Schwern joined
[20:18] *** tylercurtis joined
[20:20] *** icwiener left
[20:27] <sorear> good * #perl6

[20:32] *** __rnddim__ is now known as lue

[20:37] *** Fuad joined
[20:44] *** brajek joined
[20:48] *** brajek left
[20:49] *** Fuad left
[20:53] *** tomaw_ joined
[20:56] *** M_o_C left
[20:59] *** PerlPilot left
[21:02] *** tomaw_ left
[21:02] *** amkrankruleuen joined
[21:03] *** tomaw_ joined
[21:07] <diakopter> hi sorear

[21:09] *** Entonian joined
[21:13] *** Guest23195 left
[21:15] *** tylercurtis left
[21:16] *** Entonian left
[21:16] *** ggoebel joined
[21:16] *** cggoebel joined
[21:19] *** tylercurtis joined
[21:19] *** tylercurtis left
[21:20] *** tomaw_ is now known as tomaw

[21:25] *** Ross left
[21:25] *** Entonian joined
[21:27] *** brajek joined
[21:38] *** brajek left
[21:42] *** Sarten-X joined
[21:44] *** Entonian left
[21:46] <dalek> book: 202e064 | jnthn++ | src/subs-n-sigs.pod:

[21:46] <dalek> book: Various improvements for readability, coverage and keeping parameter/argument straight in the subs-n-sigs chapter.

[21:46] <dalek> book: review: http://github.com/perl6/book/commit/202e064d1ec6bd7c7fc1a15862c112e2fa5e4a66

[21:47] *** amkrankruleuen left
[21:52] *** amkrankruleuen joined
[21:53] *** amkrankruleuen left
[21:55] <sorear> I've extended the ladder benchmark from yesterday

[21:55] <sorear> 2310 ns PIR

[21:55] <sorear> 32100 ns Rakudo

[21:58] <jnthn> sorear: Code please.

[21:58] <sorear> jnthn: all sent to #parrot for plobsing

[21:58] *** Mowah left
[21:59] <jnthn> heh :-)

[22:00] <jnthn> You need quite a bunch of optimizations to get from Perl 6 to PIR that looks like that.

[22:01] <jnthn> (Like, knowing you can get away with setting up a $! / $/ / $_

[22:02] <jnthn> and that now lexpad is needed, and resolving the lookup to a sub constant, ignoring the wrapper Rakudo pops around Parrot subs)

[22:02] <jnthn> s/now/no/

[22:03] <diakopter> sorear: repeat the ns for p6/niecza

[22:03] <diakopter> (please)

[22:04] <jnthn> It is kinda depressing that Parrot takes longer than Perl 5 though. That means even *if* we do all those things in Rakudo to generate such PIR, we're still some way behind.

[22:05] <diakopter> latest I saw was 415ns

[22:08] *** ggoebel left
[22:08] *** cggoebel left
[22:12] *** Italian_Plumber joined
[22:15] <sorear> diakopter: that's the latest.

[22:26] *** ggoebel joined
[22:26] *** cggoebel joined
[22:26] <sorear> buubot: 1090518910/14136321143 #plobsing

[22:26] <buubot> sorear: Couldn't match input.

[22:26] <sorear> buubot: eval 1090518910 / 14136321143

[22:26] <buubot> sorear: 0.0771430486735936       

[22:39] *** ggoebel left
[22:39] *** cggoebel left
[22:51] *** clkao_ joined
[22:51] *** rblackwe_ joined
[22:51] *** sunnavy_ joined
[22:51] *** cxreg2 joined
[22:51] *** szabgab_ joined
[22:51] *** sunnavy left
[22:51] *** cxreg left
[22:52] *** treed left
[22:52] *** meraxes_ joined
[22:52] *** TiMBuS joined
[22:52] *** gottreu joined
[22:52] *** Woody2143 joined
[22:52] *** treed joined
[22:52] *** _ilbot2 joined
[22:52] *** ChanServ sets mode: +v _ilbot2

[22:52] *** PZt joined
[22:52] *** Lorn joined
[22:52] *** ChanServ sets mode: +v ilogger2

[22:55] *** buubot joined
[22:55] *** [particle]1 joined
[22:57] *** [particle]1 is now known as [particle]

[23:06] *** jaldhar left
[23:37] *** mavrc left
[23:52] *** Chillance joined
[23:59] *** jaldhar joined
