[00:01] *** jaldhar_ is now known as jaldhar

[00:01] *** whiteknight joined
[00:02] <jnthn> zzz&

[00:02] <masak> nom &

[00:02] *** masak left
[00:03] *** ch3ck3r left
[00:11] *** bitter16 left
[00:12] *** hercynium left
[00:16] *** am0c joined
[00:26] *** ggoebel left
[00:32] *** Guest94843 left
[00:38] <lichtkind> is there no strict in perl 6?

[00:39] <PerlJam> lichtkind: are you asking if you can turn stricture off?

[00:39] <lichtkind> yes

[00:54] *** bluescreen joined
[00:54] *** bluescreen is now known as Guest42378

[00:56] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_basics_tablet

[00:57] *** xinming left
[01:05] *** ggoebel joined
[01:09] *** justatheory left
[01:12] *** risou left
[01:23] *** flatwhatson left
[01:24] *** flatwhatson joined
[01:27] <[Coke]> (trouble building rakudo on parrot) http://trac.parrot.org/parrot/ticket/1884

[01:31] <[Coke]> I had a typo so I wasn't actually realcleaning parrot. (I don't think I should have to realclean to get this to work, though.) ... but now that I've done a realclean and blown away the cached value, I should be able to build rakudo again. So if it comes up again - "realclean" is the answer. :P

[01:33] *** justatheory joined
[01:34] *** masonkramer left
[01:34] *** justatheory left
[01:34] *** masonkramer joined
[01:36] *** justatheory joined
[01:44] *** whiteknight left
[02:02] *** ch3ck3r joined
[02:04] *** impious left
[02:05] *** cdarroch left
[02:09] *** ch3ck3r left
[02:10] *** Miesco joined
[02:10] <Miesco> whats wrong with this, why wont it increment?: perl -wlE 'my $cs = 'ZZ9'; my $nc = $cs++; say $nc;'

[02:12] <Miesco> perl6: 'my $cs = 'ZZ9'; my $nc = $cs++; say $nc;'

[02:12] <p6eval> rakudo : OUTPUT«===SORRY!===␤Confused at line 22, near "'my $cs = "␤»

[02:12] <p6eval> ..pugs: OUTPUT«*** ␤    Unexpected "ZZ9"␤    expecting term postfix or operator␤    at /tmp/7R4DrwD6my line 1, column 12␤»

[02:13] <colomon> rakudo: my $cs = 'ZZ9'; my $nc = $cs++; say $nc;

[02:13] <p6eval> rakudo : OUTPUT«ZZ9␤»

[02:13] <colomon> rakudo: my $cs = 'ZZ9'; my $nc = $cs++; say $nc; say $cs;

[02:13] <p6eval> rakudo : OUTPUT«ZZ9␤AAA0␤»

[02:13] <colomon> It does increment, as you can see.

[02:13] <Miesco> oh

[02:14] <colomon> you perhaps wanted

[02:14] <Miesco> thanks!

[02:14] <colomon> rakudo: my $cs = 'ZZ9'; my $nc = ++$cs; say $nc; say $cs;

[02:14] <p6eval> rakudo : OUTPUT«AAA0␤AAA0␤»

[02:24] *** jferrero left
[02:30] <Miesco> How do you convert a string to an array reference?

[02:32] *** QinGW joined
[02:37] <colomon> In what sense?

[02:38] <colomon> rakudo: say "a b c d e f g".split(" ")

[02:38] <p6eval> rakudo : OUTPUT«abcdefg␤»

[02:38] <colomon> rakudo: say "a b c d e f g".split(" ").perl

[02:38] <p6eval> rakudo : OUTPUT«("a", "b", "c", "d", "e", "f", "g")␤»

[02:38] <colomon> or

[02:38] <colomon> rakudo: say "a b c d e f g".comb(/\S/).perl

[02:38] <p6eval> rakudo : OUTPUT«("a", "b", "c", "d", "e", "f", "g")␤»

[02:53] *** adu joined
[03:14] *** lichtkind left
[03:19] <PerlJam> Anyone know off hand if it's possible to do a runtime use with rakudo?

[03:24] <kthakore> rakudo: say 'Sure PerlJam!'

[03:24] <p6eval> rakudo : OUTPUT«Sure PerlJam!␤»

[03:24] *** cggoebel joined
[03:25] <kthakore> rakudo: say 'Sure PerlJam! if( 'perljam' ) { require Math } '

[03:25] <p6eval> rakudo : OUTPUT«===SORRY!===␤Confused at line 22, near "say 'Sure "␤»

[03:25] <kthakore> rakudo: say 'Sure PerlJam!'; if( 'perljam' ) { require Math } '

[03:25] <p6eval> rakudo : OUTPUT«===SORRY!===␤Confused at line 22, near "if( 'perlj"␤»

[03:25] <kthakore> rakudo: say 'Sure PerlJam!'; if( 1 ) { require Math } '

[03:25] <p6eval> rakudo : OUTPUT«===SORRY!===␤Confused at line 22, near "if( 1 ) { "␤»

[03:25] *** ggoebel left
[03:25] <kthakore> awww

[03:25] <kthakore> I suck

[03:26] <kthakore> rakudo: say 'Sure PerlJam!'; if( 1 ) { use Math; } '

[03:26] <p6eval> rakudo : OUTPUT«===SORRY!===␤Unable to find module 'Math' in the @*INC directories.␤(@*INC contains:␤  lib␤  /home/p6eval/.perl6/lib␤  /home/p6eval/p1/lib/parrot/2.10.0-devel/languages/perl6/lib␤  .)␤»

[03:26] <kthakore> rakudo: say 'Sure PerlJam!'; if( 1 ) { use ; } '

[03:26] <p6eval> rakudo : OUTPUT«===SORRY!===␤Confused at line 22, near "if( 1 ) { "␤»

[03:27] <kthakore> rakudo: say 'Sure PerlJam!'; if( 1 ) { use v6; } else { use v7; }'

[03:27] <p6eval> rakudo : OUTPUT«===SORRY!===␤Confused at line 22, near "if( 1 ) { "␤»

[03:27] <kthakore> rakudo: say 'Sure PerlJam!'; if( 1 ) { use IO; } else { use v7; }'

[03:27] <p6eval> rakudo : OUTPUT«===SORRY!===␤Unable to find module 'IO' in the @*INC directories.␤(@*INC contains:␤  lib␤  /home/p6eval/.perl6/lib␤  /home/p6eval/p1/lib/parrot/2.10.0-devel/languages/perl6/lib␤  .)␤»

[03:27] <kthakore> something like that

[03:29] *** glow left
[03:30] <PerlJam> I tried the obvious things, but they didn't seem to work.  :)

[03:30] *** perimosocordiae joined
[03:31] <kthakore> PerlJam: rlly?

[03:31] <kthakore> but I find that obvious usually works in perl

[03:31] <kthakore> perl6

[03:32] *** kanishka joined
[03:45] *** gbacon left
[03:45] *** gbacon joined
[03:56] *** snearch_ joined
[03:59] *** snearch left
[04:02] *** araujo left
[04:04] *** wayland76 joined
[04:05] <wayland76> Hi all.  

[04:05] <wayland76> I have a perl6 question.  

[04:05] <dukeleto> I would like to make some Google Code-In translation tasks for Perl 6. What documents about Perl 6 need to be translated into other languages?

[04:06] <wayland76> Once a grammar is applied to a string, and a Match object is obtained, is it possible to take the Match object and the grammar, and reverse the parse to obtain the original string?

[04:07] <colomon> wayland76: In Rakudo, the original string is stored in the match object.  I'm not sure if that's spec, and I'm not sure how to get back to it...

[04:08] <PerlJam> wayland76: sounds like you want to walk the parse tree, concatenating the stringy versions of $/ as you go along.

[04:08] <colomon> rakudo: my $m = "This is a test" ~~ /is/; say $m.perl

[04:08] <p6eval> rakudo : OUTPUT«Match.new(␤ from => 2,␤ orig => "This is a test",␤ to   => 4,␤)␤»

[04:08] <PerlJam> wayland76: but the top-level $/ will be the entire string matched anyway, so ...

[04:08] <colomon> rakudo: my $m = "This is a test" ~~ /is/; say $m.orig

[04:08] <p6eval> rakudo : OUTPUT«This is a test␤»

[04:10] <wayland76> My reason for wondering was that I figured it would be nice to parse a file, modify the match object, and then say "write this back to the file"

[04:11] *** satyavvd joined
[04:11] <wayland76> Would it make sense to have a function on the match object that says "walk my children and, concatenate the stringy versions of $/  "?

[04:11] <wayland76> (sorry, extra comma -- ignore)

[04:17] *** cggoebel left
[04:20] *** jhuni joined
[04:23] *** ggoebel joined
[04:32] *** ggoebel left
[04:35] *** orafu left
[04:35] *** orafu joined
[04:38] *** ggoebel joined
[04:39] *** sorear left
[04:43] *** wayland76 left
[04:45] *** sorear joined
[05:00] *** orafu left
[05:00] *** orafu joined
[05:12] *** simcop2387 left
[05:13] *** Trashlord left
[05:23] *** ggoebel left
[05:28] *** ggoebel joined
[05:54] *** jaldhar left
[05:55] *** orafu left
[05:55] *** orafu joined
[05:55] *** perimosocordiae left
[06:05] *** jaldhar joined
[06:09] <sorear> good * #perl6

[06:10] *** _kaare joined
[06:12] <sorear> kthakore: if( 1 ) is wrong, wrong, wrong and only works in Rakudo due to a bug.  anysequenceofletters( is always a function call in term position.  You wanted if 1 instead; if you insist on parens, they have to be separated from if by a space

[06:13] <sorear> wayland left :/

[06:15] <kthakore> sorear: aww sorry

[06:17] *** sftp left
[06:20] <kthakore> rakudo: say "sorry sorear"

[06:20] <p6eval> rakudo : OUTPUT«sorry sorear␤»

[06:21] *** Guest42378 left
[06:22] *** glow joined
[06:23] *** Axius joined
[06:30] *** kanishka left
[06:38] *** masak joined
[06:38] <masak> oh hai, #perl6

[06:40] <masak> PerlJam, kthakore: as far as I know, you were on the right track with 'require', but since it's run-time, it doesn't have the same syntax as 'use'.

[06:41] <masak> er. scratch that. seems it does.

[06:44] *** Axius left
[06:46] *** envi left
[06:50] *** envi joined
[06:58] <sorear> hello masak !

[06:58] <masak> hi sorear!

[06:59] <masak> aaah. another glorious day in Perl 6 land.

[07:00] <masak> and only one day left to the Big Announcement. :)

[07:00] *** nymacro left
[07:00] <sorear> 1 hour yet in my timezone and I'm still feeling quite productive.

[07:01] <sorear> while out today I figured out how to make require work.

[07:01] *** _kaare left
[07:01] <sorear> which is an important first step to eval

[07:01] *** wtw joined
[07:02] <masak> 'require' is a prerequisite to 'eval'?

[07:03] <sorear> they both involve adding a compilation unit to a Perl 6 interpreter at runtime

[07:04] <masak> that they do.

[07:04] <masak> so they have a common prerequisite.

[07:04] *** nymacro joined
[07:11] <dalek> book: b03cd9d | (Jeffrey T. Palmer)++ | src/operators.pod:

[07:11] <dalek> book: Fix minor typos

[07:11] <dalek> book: 

[07:11] <dalek> book: Signed-off-by: Moritz Lenz [email@hidden.address]
[07:11] <dalek> book: review: https://github.com/perl6/book/commit/b03cd9d95e

[07:11] <moritz_> good morning

[07:11] <masak> morning!

[07:19] *** IllvilJa1 left
[07:24] *** kjeldahl joined
[07:26] *** nym joined
[07:28] *** simcop2387 joined
[07:30] *** nymacro left
[07:35] *** justatheory left
[07:37] *** Bzek_ joined
[07:40] *** Bzek left
[07:50] *** adu left
[07:54] <sorear> C#-- # condition ? F1() : F2(); is a syntax error

[07:54] <masak> why?

[07:57] <sorear> the expressions allowed in void context are very limited

[07:57] <sorear> only stuff with obvious side effects

[07:58] <sorear> this hasn't bothered me at all until just now

[08:03] *** cjk101010 joined
[08:03] <moritz_> such things usually start to bother you when you generate code :-)

[08:05] <sorear> I retroactively appreciated it when I noticed how much of a win dead code elimination was :-)

[08:06] <dalek> niecza: 3aadb1f | sorear++ | src/Metamodel.pm:

[08:06] <dalek> niecza: Decouple sub tree from lexicals system

[08:06] <dalek> niecza: review: https://github.com/sorear/niecza/commit/3aadb1f952

[08:06] <dalek> niecza: cb82aa3 | sorear++ | / (5 files):

[08:06] <dalek> niecza: Implement INIT phaser

[08:06] <dalek> niecza: review: https://github.com/sorear/niecza/commit/cb82aa3168

[08:35] *** redicaps joined
[08:45] *** _kaare joined
[08:47] *** bbkr left
[08:54] *** gimix left
[09:02] *** araujo joined
[09:03] <dalek> niecza: b46d150 | sorear++ | / (3 files):

[09:03] <dalek> niecza: Reimplement monkey typing using phasers

[09:03] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b46d150b02

[09:09] <dalek> grok: 8828824 | hinrik++ | / (2 files):

[09:09] <dalek> grok: Skip testing S26, since Perl6::Perldoc currently can't parse it

[09:09] <dalek> grok: review: https://github.com/hinrik/grok/commit/8828824e09

[09:09] <dalek> grok: 1d294d7 | hinrik++ | Changes:

[09:09] <dalek> grok: v0.25

[09:09] <dalek> grok: 

[09:09] <dalek> grok:     - Skip testing S26, since Perl6::Perldoc currently can't parse it

[09:09] <dalek> grok: review: https://github.com/hinrik/grok/commit/1d294d7350

[09:11] *** kensanata joined
[09:15] *** bbkr joined
[09:27] *** redicaps left
[09:32] *** redicaps1 joined
[09:32] *** jferrero joined
[09:39] *** snearch_ left
[09:43] *** redicaps1 left
[09:48] *** Trashlord joined
[09:51] *** dakkar joined
[10:00] <masak> &

[10:00] *** masak left
[10:02] *** IllvilJa joined
[10:02] * sorear &

[10:04] <moritz_> fg

[10:05] *** QinGW left
[10:11] <tadzik> o/

[10:11] <moritz_> \o

[10:12] <moritz_> tadzik: how's the advent post coming?

[10:12] <tadzik> moritz_: it's not, yet :) I just finished my labs on Uni in 3 hours instead of 4, so I have some time to at least start it

[10:25] <tadzik> survey: what existing perl 6 module do you like/use often?

[10:27] <moritz_> JSON::Tiny

[10:27] <moritz_> SVG

[10:27] <moritz_> SVG::Plot

[10:27] * moritz_ 's vanity alert flashes, since he developed them

[10:28] <tadzik> (:

[10:28] <moritz_> not vanity, actully. I just developed modules that I wanted to use

[10:28] <moritz_> and now I'm using them

[10:28] *** tzhs joined
[10:30] <tadzik> hrm

[10:33] <tadzik> I wonder if that wouldn't actualy result in duplicating the so-you-want-to-write-a-module post

[10:33] <tadzik> (duplicating the content, that is)

[10:36] <tadzik> I feel out of ideas :| What do you think the post should contain?

[10:36] <moritz_> things like: go to modules.perl6.org for a list of modules

[10:36] <moritz_> for installing them, download neutro

[10:37] <moritz_> types these lines for bootstrapping neutro

[10:37] <moritz_> then do  neutro Foo::Bar

[10:37] <moritz_> point to your post about starting modules

[10:40] <tadzik> oh, so also 'how to install modules', sure

[10:55] *** zbrown_ joined
[11:02] *** jferrero left
[11:02] <dalek> mu: 26c1b4a | (Tadeusz Sośnierz)++ | misc/perl6advent-2010/articles/module-system.pod:

[11:02] <dalek> mu: Added an initial version of today's article

[11:02] <dalek> mu: review: https://github.com/perl6/mu/commit/26c1b4ade8

[11:02] <tadzik> proofreading and further ideas will be more than welcome

[11:04] <moritz_> +Modules will be installed to C<~/.perl6/lib> as well, so assuming your

[11:04] <moritz_> 42 	

[11:04] <moritz_> +PERL6LIB is alredy set, you are now able to use the installed modules:

[11:04] <moritz_> the point of ~/.perl6/lib is that's in the search path by default

[11:04] <moritz_> so PERL6LIB doesn't need to be set

[11:04] <tadzik> really?

[11:04] <tadzik> cute

[11:05] <moritz_> rakudo: .say for @*INC

[11:05] <tadzik> so even the warning in neutro is worthless

[11:05] <p6eval> rakudo : OUTPUT«lib␤/home/p6eval/.perl6/lib␤/home/p6eval/p1/lib/parrot/2.10.0-devel/languages/perl6/lib␤.␤»

[11:05] <tadzik> cool

[11:05] <flussence> I think "./lib" should be in there by default too...

[11:05] <moritz_> apart from that: very nice

[11:05] <moritz_> tadzik: one more thing... the title doesn't quite fit to the contents of the post

[11:05] <moritz_> it's not primarily about writing modules

[11:05] <tadzik> oh, right

[11:05] <tadzik> I've been changing the title like 5 times alredy :)

[11:06] <moritz_> Perl 6 Modules - an incomplete story

[11:07] <flussence> I'd comment on the post, but I've horribly screwed up X and my system's in the middle of an update already

[11:07] <moritz_> flussence: if you have a checkout of the mu repo, just use perldoc to view it

[11:07] * flussence facepalm

[11:07] <flussence> yeah, that'd be easier :)

[11:08] <tadzik> or just pod2text

[11:09] <dalek> mu: 8ef15ef | (Tadeusz Sośnierz)++ | misc/perl6advent-2010/articles/module-system.pod:

[11:09] <dalek> mu: Fix a few things

[11:09] <dalek> mu: review: https://github.com/perl6/mu/commit/8ef15ef46b

[11:09] <tadzik> leaving for my programming classes, wil be back later

[11:09] <flussence> I didn't have a clone of it already, but wow, that's a big repo.

[11:10] <moritz_> it contains the full history of the pugs repo

[11:10] <moritz_> plus a bit

[11:10] <moritz_> $ git log|grep ^commit|wc -l

[11:10] <moritz_> 32217

[11:14] <flussence> there's a Term::ANSIColor? Nice.

[11:21] *** satyavvd left
[11:37] *** ch3ck3r joined
[11:56] *** zbrown_ left
[12:00] *** phio joined
[12:00] *** zby_ left
[12:03] *** bluescreen joined
[12:03] *** bluescreen is now known as Guest23392

[12:19] <tadzik> flussence: ha! there's even two!

[12:21] <tadzik> flussence: is there anything you'd like to see in the article?

[12:23] *** skangas left
[12:26] *** daxim joined
[12:32] <flussence> tadzik: nothing comes to mind, looks good to me

[12:34] <flussence> I saw a Term::$something for p5 the other day that does 256 colours, I'm not a fan of having to remember that many colour names though

[12:34] <flussence> (I'd much prefer to just pass in rgb values and have it figure out the best palette entry)

[12:36] <flussence> .oO( something else for me to write... )

[12:37] <tadzik> unluckily, there is no rgb in ansi terminals

[12:38] *** cjk101010 left
[12:43] *** wooden left
[12:43] *** smash joined
[12:44] <smash> hello everyone

[12:44] <moritz_> oh hai

[12:55] *** Miesco left
[12:56] *** Miesco joined
[12:57] *** Axius joined
[12:58] *** Kovensky left
[13:00] <takadonet> morning all

[13:03] <smash> takadonet: mornin'

[13:05] *** jhuni left
[13:06] *** wamba joined
[13:09] *** Kovensky joined
[13:23] *** plainhao joined
[13:30] *** Axius left
[13:33] *** cjk101010 joined
[13:34] *** masonkramer left
[13:34] *** masonkramer joined
[13:42] *** tzhs left
[13:52] *** xinming joined
[14:02] *** Guest87704 joined
[14:04] *** sftp joined
[14:15] *** phio left
[14:21] <PerlJam> good * #perl6!

[14:22] <moritz_> good now, PerlJam 

[14:23] <colomon> rakudo: say ((1, 2) Z, (3, 4)).Str

[14:23] <p6eval> rakudo : OUTPUT«2 4 2 4␤»

[14:23] <moritz_> PerlJam: let me remind you that you're scheduled for the advent calendar tomorrow

[14:23] <PerlJam> aye.

[14:23] <colomon> I'm scheduled for Sunday, right?

[14:24] <PerlJam> Feel free to give me ideas too.  I feel idea-less and have for a while.

[14:24] <takadonet> who posting today?

[14:25] <PerlJam> (yes, I have read the brain storming, but nothing "clicks")

[14:25] <moritz_> takadonet: tadzik 

[14:25] <moritz_> colomon: you're scheduled for the 11th, which I believe is Saturday

[14:26] <moritz_> PerlJam: since I've dumped all my ideas into the brainstorm, I can't offer more

[14:27] *** Lorn left
[14:27] <moritz_> I have a TODO list for my blog, but it turns out that I already consulted it for the advent list

[14:28] <moritz_> the only remaining item is "why numeric types don't fit well with mathematical types"

[14:30] <PerlJam> Dr Pepper + cashews make for an interesting "breakfast"

[14:30] <moritz_> that reminds me, I have a can of cachews open at home, which we used for our last curry

[14:31] <oha> maybe usefull, but i would like to read something about minidbi and dbi in general

[14:33] *** colomon left
[14:34] *** masak joined
[14:34] *** colomon joined
[14:35] *** Guest23392 left
[14:37] *** alc left
[14:37] <masak> PerlJam: write about something in Perl 6 that you like... :)

[14:38] <PerlJam> masak: I like too much  :)

[14:38] <masak> http://en.wikipedia.org/wiki/The_Paradox_of_Choice:_Why_More_Is_Less :)

[14:39] * moritz_ hates that big banner on top of WP pages

[14:40] <PerlJam> moritz_: me too!

[14:40] <PerlJam> wikipedia--

[14:40] <moritz_> and even if I adblock it, the text remains

[14:40] <moritz_> and wastes space

[14:40] <moritz_> I can click on the small X box to close it, but that choice isn't remembered

[14:40] <moritz_> wikipedia--

[14:40] <moritz_> </rant>

[14:41] <PerlJam> greasemonkey could help

[14:41] <moritz_> but I shouldn't have to

[14:41] <flussence> I think it only appears with JS turned on (I've never seen it)

[14:47] <masak> moritz_, PerlJam: http://i.imgur.com/GHWO3.png :)

[14:48] <moritz_> masak: :-)

[14:50] *** Guest23392 joined
[14:53] *** fhelmberger joined
[14:55] *** Lorn joined
[14:58] <[Coke]> I am stunned that people surf the web with JS disabled.

[14:59] <[Coke]> (but then, I write web apps for a living)

[14:59] <mathw> I've always thought it was a bit excessively paranoid

[14:59] <mathw> But then, they'd probably say I'm being an idiot

[14:59] <masak> I sure the web with JS disabled. in one of my browsers.

[14:59] <mathw> And when you get right down to it, I'm probably stupid for having my computer connected to the internet

[14:59] <masak> I also write web apps.

[15:00] <masak> there are clear risks with having JS enabled by default, but I do it for performance reasons.

[15:01] <PerlJam> masak: sounds like the exact justification that Microsoft used for all of the insecurities in their operating system.

[15:02] * moritz_ usually doesn't want all the interactivity that js offers

[15:02] <moritz_> I often just want to read a page

[15:02] * flussence likes predictable UIs

[15:02] <PerlJam> moritz_: you're just old fashioned  :)

[15:02] * masak likes a gracefully degrading web

[15:02] <moritz_> no flashy toolbars, comment markers, real-time loaded tweets, ...

[15:02] <moritz_> PerlJam: indeed I am.

[15:03] <masak> I'm old-fashioned in that way too.

[15:03] <masak> I sincerely believe much of the web is designed wrongly in an absolute sense.

[15:03] <PerlJam> I want a UI that caters to my needs and desires so that I don't have to think about things that are irrelevant to whatever task I'm trying to accomplish.

[15:03] <moritz_> I'm active in a german web forum, and in the "homepage" section people often ask how to always show the same URL in the title bar, regardless of which subpage you're currently visiting

[15:04] <masak> Gmail is one of the few Ajax apps that got the back button right.

[15:04] <moritz_> I never understood why people want so tight control over their website, at the cost of the visitor

[15:05] <moritz_> that's like wanting to forbid references to individual chapters or pages of a book

[15:05] <moritz_> (the last one wanted it for security reasons.... somebody hacked his site, and he thought he could prevent that hiding the URL. 'nough said).

[15:05] <moritz_> s/that/that by/

[15:05] <PerlJam> masak: what do you think of the latest github changes?

[15:06] <masak> PerlJam: so far I've only noticed that things slide sideways.

[15:06] <PerlJam> yeah, I think that's the only major change

[15:07] <masak> I'm ok with that, although I don't find that it adds anything.

[15:07] <PerlJam> It adds a little bit of instant gratification  :)

[15:07] <masak> something about it feels a bit like the Mac OS X interface.

[15:11] *** ggoebel left
[15:12] <moritz_> http://www.infoq.com/news/2010/12/verve-msft # a type safe operating system (prototype)

[15:15] *** ggoebel joined
[15:20] *** MayDaniel joined
[15:26] <dalek> mu: 7e4977f | (Tadeusz Sośnierz)++ | misc/perl6advent-2010/articles/module-system.pod:

[15:26] <dalek> mu: More fixes in module-system article

[15:26] <dalek> mu: review: https://github.com/perl6/mu/commit/7e4977fee8

[15:26] <tadzik> any last words, last ideas?

[15:27] *** [Coke] left
[15:28] <moritz_> ship it!

[15:28] <alester> tadzik: Do you have a link to a list of all advent entries?

[15:28] <moritz_> the day is nearly over in my time zone :-)

[15:28] <alester> So that if someone sees that one article, they can link to see all of them?

[15:29] <tadzik> alester: I don't think so. But we could mangle wordpress a bit to show it, no>

[15:29] *** MayDaniel_ joined
[15:29] <tadzik> moritz_: aren't you in Gernamy?

[15:29] <alester> tadzik: Are all these entries in a category?

[15:29] <alester> What site are you posting to?

[15:30] *** risou joined
[15:30] <moritz_> tadzik: yes. More than 2/3 of the day is already passed

[15:30] <moritz_> http://perl6advent.wordpress.com/2010/12/ works, but it's not links

[15:31] *** MayDaniel left
[15:31] <alester> You're not tagging these?

[15:31] <alester> Just tag them as "Advent" and then you can link to an Advent aggregate page

[15:32] <alester> Or not.  I'm just strirring up shit. :-)

[15:32] <alester> But I figure that someone's going to see a mention of it and want to see the rest.

[15:33] <tadzik> I created a category 2010, but I think I'm the only one adding entries to a category :)

[15:33] <moritz_> tadzik: I do too, unless I forget

[15:33] <PerlJam> tadzik: I've modified the other entries to use those categories (2009,2010)

[15:33] <tadzik> PerlJam++

[15:33] <alester> Also, I really like tagging in WordPress

[15:34] <alester> it's butt simple and makes it real easy to get good tag lists.

[15:34] <alester> see tag cloud on right column http://techworklove.com/

[15:34] <alester> I'm about thisclose to moving Perlbuzz over to WordPress, too.

[15:35] <alester> Which I realize is almost heretical, but MT vs. WP is night/day.

[15:35] *** Patterner left
[15:35] <PerlJam> alester: not heretical at all.  Just pragmatic.

[15:35] <alester> I kow.

[15:35] <alester> There's just no Perl-based blogging software that comes close.

[15:35] <tadzik> loliblogged!

[15:36] <tadzik> http://perl6advent.wordpress.com/2010/12/09/day-9-%E2%80%93-the-module-ecosystem/

[15:36] <colomon> \o/

[15:37] <moritz_> \o/

[15:37] <alester> Tweeted https://twitter.com/#!/perlbuzz/status/12893462110142464

[15:37] <tadzik> oh nice :)

[15:37] <PerlJam> btw, perhaps this is just my pedantry showing through, but all of the titles start with "Day N" except for day 4 and all of them use "Day N -" except that days 6 and 7 use "Day N:"    Should we strive for consistency here?

[15:38] <tadzik> (I hope it will be well-received, I have a strange feeling like "it could have been better")

[15:38] <tadzik> . o O ( strangely consistent )

[15:38] <PerlJam> tadzik: artists always feel that way about their own work.

[15:38] <tadzik> :]

[15:39] <tadzik> maybe I'm an artist then, if I'm quite sure my photography sucks :)

[15:39] <masak> I believe it's cool to use Perl software on the web, but I don't believe it's heretical not to.

[15:40] <tadzik> I remember this troll HIBOU trying to prove that Rakudo is unusable, because we use Wordpress, which is PHP

[15:40] <PerlJam> tadzik: I use "artist" in the general sense of "someone who creates some original work"

[15:40] *** Miesco left
[15:40] <tadzik> I know, I'm just kidding around :)

[15:41] <smash> PerlJam: programming, in general, can be an art

[15:41] <smash> tadzik: the post looks great

[15:42] <moritz_> PerlJam: some consistency wouldn't be bad

[15:42] <masak> indeed. tadzik++

[15:42] <PerlJam> tadzik: having just read and went through your instructions, the only thing I would change is that I would emphasize adding ~/.perl6/bin to your PATH more.

[15:42] <PerlJam> tadzik: i.e., rather than saying "assuming it's in your path", I'd say, "make sure it's in your path"

[15:42] <PerlJam> tadzik++ indeed

[15:43] <tadzik> PerlJam: it's a tricky part, you set it differently everywhere

[15:45] * tadzik redditing the post

[15:45] <tadzik> (disregard trolls, aquire karma)

[15:45] <PerlJam> tadzik: Well, reading from an "outsider's" perspective, you say "assuming ~/.perl6/bin is in your PATH" and I would think  "why would that be in my PATH?  What else is in ~/.perl6?  What is its function?"  etc.

[15:45] <tadzik> PerlJam: hmm, quite right

[15:45] <tadzik> I have 10 minutes of battery life though... will try to fix it a bit

[15:46] *** cotto left
[15:46] *** dd-sphere joined
[15:46] <tadzik> http://www.reddit.com/r/programming/comments/eiz01/ lolireddited

[15:48] <tadzik> post updated, hope it's better

[15:49] *** Psyche^ joined
[15:49] *** Psyche^ is now known as Patterner

[15:49] <arnsholt> I just increased the meme factor of my presentation by one. With a Latin Rickroll =D

[15:50] <arnsholt> Now I just need a good latinisation of Rick Astley's name for the attribution ^^

[15:50] *** ch3ck3r left
[15:50] <moritz_> Riaccomo

[15:50] <arnsholt> I've gotten as far as Ricardus Paulus

[15:51] <arnsholt> But Astley is giving me trouble, for obvious reasons =)

[15:54] <masak> does the name mean anything?

[15:54] <masak> you could translate by meaning.

[15:55] *** wtw left
[15:56] <arnsholt> Apparently it's a compund noun, meaning "east (of the) meadow"

[15:57] * arnsholt has an idea

[15:58] <masak> that sounds workable.

[15:59] <arnsholt> I'll probably go with Ricardus Paulus Prati Orientis (Richard Paul of the East Meadow)

[16:00] *** justatheory joined
[16:05] <masak> nice!

[16:08] <arnsholt> Yeah, I think that'll work

[16:08] <arnsholt> Now I just have to hope someone asks what the Latin quote I used as an example means =)

[16:11] *** MayDaniel_ left
[16:12] <masak> I'm doing the last bit of preparing now for the Big Announcement tomorrow.

[16:13] <masak> I hope you're appropriately on edge :)

[16:20] *** slavik1 left
[16:23] * colomon is on edge...

[16:24] <masak> I'm prepared to give out a fourth and final clue, if there's interest.

[16:25] *** Axius joined
[16:25] <colomon> clue!  clue!  clue!

[16:25] <masak> the crowd has spoken.

[16:25] <masak> here it is: http://wins.failblog.org/2010/12/05/epic-win-photos-simply-beautiful-win/

[16:25] *** alester left
[16:25] <colomon> does it have anything to do with your 3-language tweet of yesterday, or was that old news I simply missed previously?

[16:26] <masak> colomon: as of January, I have a new job. but that is not the Big Announcement.

[16:28] <masak> oh well. at this time tomorrow, we'll know. :)

[16:29] * masak is curious whether clue #4 conforms to moritz_' guess

[16:30] <colomon> I like the grammatical implication of "we'll know" -- that you might not know yet either.  :)

[16:31] <masak> :)

[16:31] <masak> movie &

[16:31] *** masak left
[16:31] *** slavik1 joined
[16:31] *** whatsoever joined
[16:32] <PerlJam> masak: you're in communication beings made of light from the future and they have brought you a working, fast Perl 6 compiler ?

[16:32] <PerlJam> er, communication *with* beings made of light

[16:32] *** whatsoever left
[16:32] <PerlJam> I know I thought that word the first time, but no clue why my fingers refused to type it.

[16:36] *** jaldhar left
[16:42] *** slavik1 left
[16:42] <oha> rakudo: say [[\+] 1,3...9]

[16:42] <p6eval> rakudo : OUTPUT«1 4 9 16 25␤»

[16:42] <oha> rakudo: say [[\,] 1,3...9]

[16:42] <p6eval> rakudo :  ( no output )

[16:45] <colomon> > [\,] 1,3...9

[16:45] <colomon> ===SORRY!===

[16:45] <colomon> maximum recursion depth exceeded

[16:45] <colomon> interesting bug

[16:49] <oha> colomon: yup, that's whay i got too locally

[16:49] <oha> either with [,]

[16:53] <oha> perl6: say [[,] 1..3]

[16:53] <p6eval> pugs: OUTPUT«1 2 3␤»

[16:53] <p6eval> ..rakudo :  ( no output )

[16:54] *** slavik1 joined
[17:05] *** mtk joined
[17:21] *** kensanata left
[17:29] *** dakkar left
[17:29] *** IllvilJa left
[17:40] *** MayDaniel joined
[17:46] *** MayDaniel left
[17:53] *** nym left
[17:57] *** M_o_C_ joined
[18:00] *** rgrau joined
[18:10] *** finanalyst joined
[18:11] <TimToady> now.good should return an InstantGratification

[18:14] <sjohnson> future.happiness is undefined :(

[18:15] *** M_o_C_ is now known as M_o_C

[18:15] *** M_o_C left
[18:16] *** M_o_C joined
[18:25] *** kjeldahl_ joined
[18:30] <jasonmay> rakudo: sub foo(%d) { %d.perl.say }; foo(1 => 2);

[18:30] <p6eval> rakudo : OUTPUT«Nominal type check failed for parameter '%d'; expected Associative but got Pair instead␤  in 'foo' at line 1:/tmp/5DV48PdWml␤  in main program body at line 22:/tmp/5DV48PdWml␤»

[18:31] *** envi left
[18:32] <rokoteko> maybe bit off topic, but this relates to perl 6. Im curious how is the performance comparison between parrot and perl 5 XS code?

[18:33] *** smash left
[18:35] <jasonmay> rakudo sub foo(:$bar) { $bar.perl.say }; foo bar => 'hello'

[18:35] <rokoteko> ie. running XS from perl5 vs running some parrot like code from perl6

[18:35] *** di joined
[18:35] <jasonmay> whoops

[18:35] <jasonmay> rakudo: sub foo(:$bar) { $bar.perl.say }; foo bar => 'hello'

[18:35] <p6eval> rakudo : OUTPUT«"hello"␤»

[18:35] *** di left
[18:35] <jasonmay> rokoteko: I was wondering that too

[18:35] <jasonmay> I hope so, parrot is way cleaner looking than xs :)

[18:36] *** envi joined
[18:39] *** dd-sphere left
[18:40] *** cdarroch joined
[18:40] *** cdarroch left
[18:40] *** cdarroch joined
[18:47] <TimToady> rakudo: say ~(1,2 Z, 3,4)

[18:47] <p6eval> rakudo : OUTPUT«2 4 2 4␤»

[18:47] <TimToady> known bug?

[18:48] <colomon> not to me

[18:48] <colomon> rakudo: say ~(1,2 Z~ 3,4)

[18:48] <p6eval> rakudo : OUTPUT«13 24␤»

[18:48] <colomon> something's wacky with the comma operator

[18:49] <TimToady> perhaps not de-containerizing returned vars

[18:49] *** impious joined
[18:49] *** impious left
[18:50] <colomon> also got this today:

[18:50] <colomon> > [\,] 1,3...9

[18:50] <colomon> ===SORRY!===

[18:50] <colomon> maximum recursion depth exceeded

[18:50] <TimToady> rakudo: say ~((1,3),(2,4)) # but this is OK

[18:50] <p6eval> rakudo : OUTPUT«1 3 2 4␤»

[18:51] <TimToady> rakudo: say [,] 1

[18:51] <colomon> I've got to do some $work now, but if no one else has tackled this by this evening, I'll try to take a look.

[18:51] <p6eval> rakudo : OUTPUT«1␤»

[18:52] <TimToady> rakudo: say [,] 1,2

[18:52] <p6eval> rakudo :  ( no output )

[18:52] <TimToady> that's a simpler max recursion

[18:52] <TimToady> probably the same one

[18:52] <TimToady> might be same bug too

[18:53] <TimToady> some kind of unexpected aliasing of returned variables

[18:57] *** sow joined
[19:03] <jnthn> Decontainerizing just don't happen yet afaik.

[19:03] *** mtk left
[19:07] <TimToady> rakudo: my $x = 2; my $y = 4; my $z = (1,$x Z, 3,$y); say $z.Str;

[19:07] <p6eval> rakudo : OUTPUT«2 4 2 4␤»

[19:08] <TimToady> rakudo: my $x = 2; my $y = 4; my $z = (1,$x Z, 3,$y); ($x,$y) = <boo gah>; say $z.Str;

[19:08] <p6eval> rakudo : OUTPUT«boo gah boo gah␤»

[19:08] <Juerd> Oh, wow. * is chr 42.

[19:08] <Juerd> That's so awesome.

[19:09] <gfldex> :)

[19:09] <TimToady> .oO(When you wish upon a {chr 42}...)

[19:09] <rjbs> Juerd: Ha!

[19:09] <jnthn> rakudo: say "When you wish upon a {chr 42}..."

[19:10] <p6eval> rakudo : OUTPUT«When you wish upon a *...␤»

[19:10] <jnthn> :D

[19:10] * jnthn wonders how deep the decontainerization goes...

[19:11] *** mtk joined
[19:12] <TimToady> rakudo: my $x = 1; my $y = 2; ($x Z, $y) = <boo gah>; say $x, $y

[19:12] <p6eval> rakudo : OUTPUT«Cannot modify readonly value␤  in '&infix:<=>' at line 1␤  in main program body at line 22:/tmp/HXeYau_Vz7␤»

[19:13] <TimToady> rakudo: my $x = 1; my $y = 2; ([,] $x,$y) = <boo gah>; say $x, $y

[19:13] <p6eval> rakudo : OUTPUT«12␤»

[19:13] <jnthn> e.g. in return [$x, [$y, $z]] # decontainerize all?

[19:13] <TimToady> [...] decontainerizes anyway

[19:13] <jnthn> oh, true

[19:14] <TimToady> we need a shorter name for that :)

[19:14] <jnthn> Is looking into infix:<,> and nested ones of those maybe enough?

[19:14] <TimToady> maybe snaps, as in "snapshot", or "snap the umbilical cord"

[19:15] <TimToady> I would guess that comma is special, yes

[19:15] <diakopter> or "snapper"

[19:15] <TimToady> commie snapper

[19:15] <jnthn> snappy commie

[19:17] <TimToady> immute that list!

[19:17] <diakopter> In Soviet Russia, commas delimit you!

[19:17] <TimToady> comma snapper

[19:19] <jnthn> heh :)

[19:19] * jnthn figures it shouldn't be too hard to implement. Efficiently, otoh...

[19:20] <TimToady> thing is, if we want to make ($x Z, $y) = equivalent to ($x, $y) = we will need to make Z pass along the lvalueness and not snap the list

[19:20] <TimToady> likewise for [,]() =

[19:21] *** skangas joined
[19:21] <jnthn> Do we want that? :)

[19:21] *** Axius left
[19:21] <TimToady> I could see (@foo Z, @bar) = ...

[19:21] <jnthn> It feels want-ish (e.g. context flowing the rong way). Maybe...

[19:21] <TimToady> er, sliced

[19:22] <TimToady> I could see (@foo[*] Z, @bar[*]) = ...

[19:22] <jnthn> Hm

[19:22] <jnthn> Yeah, that could have its uses.

[19:22] <TimToady> I could see (@foo[^10] Z, @bar[^10]) = ...

[19:22] <jnthn> Well, we already pass what-to-do flags along to Z

[19:22] <jnthn> &zipwith

[19:22] <jnthn> Oh, maybe we do anyway...

[19:23] <TimToady> this particular decision could be made at compile time, actually

[19:23] <jnthn> Yes.

[19:23] <TimToady> lzipwith  :)

[19:23] <TimToady> people will find lreduce confusing though :)

[19:24] <jnthn> Feels like the take vs take-rw style thing again.

[19:24] <colomon> particularly [\,]

[19:24] <TimToady> I don't think there's an ltriangle

[19:24] <jnthn> Wonder if they're related enough issues for a common solution. (Don't ahve one to hand to suggest though...)

[19:24] <TimToady> probably

[19:24] *** kersplat joined
[19:25] <TimToady> I meant they'd find lreduce confusing because they'll take it as lfold

[19:25] <TimToady> the semantics are probably meaningful though

[19:26] *** solarion left
[19:26] <TimToady> maybe reduce-lv and zipwith-lv

[19:26] <jnthn> Ah, OK.

[19:26] <jnthn> Latvian reduce? :)

[19:26] <TimToady> those aren't commies anymore

[19:27] <TimToady> well, maybe some of 'em still are

[19:27] <jnthn> Come to YAPC::EU next year and find out! ;)

[19:28] *** lichtkind joined
[19:28] <TimToady> the selection was Riga'd

[19:28] *** ch3ck joined
[19:31] <TimToady> rakudo: (rand < .5 ?? my $x !! my $y) = ord '*'; say "$x $y"

[19:31] <p6eval> rakudo : OUTPUT«42 Any()␤»

[19:32] *** blah_blah_blah joined
[19:32] <TimToady> there's a spot where even Perl 5 departs from tradition to propagate lvaluehood

[19:35] *** envi left
[19:40] <sorear> good * #perl6

[19:40] *** MayDaniel joined
[19:41] *** sow left
[19:41] <sorear> TimToady: hi

[19:42] <sorear> A.pm: my module A; class X {}

[19:42] <sorear> B.pm: my module B; use A; class A::X::Y {}

[19:42] <sorear> test.pl: use A; use B; A::X::Y.new;

[19:42] <sorear> TimToady: does this work?  why or why not?

[19:49] *** kjeldahl left
[19:55] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_basics_tablet

[20:02] <TimToady> sorear: will need to think about it, but have a headache at the moment, so that's hard :)

[20:06] <sjohnson> hugme: give TimToady a brain massage

[20:11] *** fhelmberger left
[20:11] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_basics_tablet

[20:22] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_basics_tablet

[20:31] *** dual left
[20:35] *** dual joined
[20:37] *** daxim left
[20:44] *** Guest23392 left
[20:46] *** alester joined
[21:01] *** monty joined
[21:02] <monty> helo how can i execute perl6 here pls?

[21:02] <phenny> monty: 11 Nov 20:11Z <benoitc> tell monty I miss him

[21:02] *** finanalyst left
[21:02] *** pothos left
[21:02] *** y3llow left
[21:03] <monty> who misses me?! :)

[21:04] <moritz_> rakudo. say 'hello monty'

[21:04] <moritz_> rakudo: say 'hello monty'

[21:04] <p6eval> rakudo : OUTPUT«hello monty␤»

[21:04] <moritz_> rakudo: say join ', ', 'hello monty' xx 3

[21:04] <monty> oh thanks got it :)

[21:04] *** y3llow joined
[21:04] <p6eval> rakudo : OUTPUT«hello monty, hello monty, hello monty␤»

[21:04] <sjohnson> heh

[21:04] <sjohnson> rakudo: say join ', ' => 'hello monty' xx 3

[21:04] <p6eval> rakudo : OUTPUT«␤»

[21:04] <sjohnson> no => comma eh

[21:04] <sjohnson> ah well, can't have 'em all!

[21:04] *** pothos joined
[21:04] <moritz_> => is not a comma in Perl 6

[21:05] <sjohnson> yeah, i figured :/

[21:07] <Tene> sjohnson: If you want a comma, just use the comma.  We already have one, no need for another.  ;)

[21:07] *** pothos left
[21:07] *** pothos joined
[21:10] *** plainhao left
[21:13] <sjohnson> nice on the eyes tho

[21:13] <sjohnson> not saying ',',

[21:13] <sjohnson> Camel Book even said so!!!

[21:13] <sjohnson> :-)

[21:13] <jnthn> ",", is a little nicer on the eyes.

[21:13] * sjohnson hugs his perl book

[21:13] <jnthn> imho

[21:14] <sjohnson> chr(44), 

[21:15] <colomon> errr... what's happening with say join ', ' => 'hello monty' xx 3  ?

[21:16] <TimToady> you're feeding join a single argument and a null list

[21:16] <colomon> rakudo: say join ', ' => ('hello monty' xx 3)

[21:16] <p6eval> rakudo : OUTPUT«␤»

[21:16] <colomon> rakudo: say ', ' => ('hello monty' xx 3)

[21:16] <p6eval> rakudo : OUTPUT«,       hello monty hello monty hello monty␤»

[21:16] <colomon> ah

[21:16] *** MayDaniel left
[21:17] <sjohnson> i broke the sacred perl6 rule

[21:17] <sjohnson> rule: don't assume perl5 stuff works

[21:17] * sjohnson slaps himself on the wrist

[21:17] <TimToady> except when it does

[21:18] <TimToady> remember also that at least one of the authors of the camel book was an idiot :)

[21:19] <sjohnson> i look forward to the day when i'll use that book as a doorstop

[21:19] <sjohnson> butterfly book should come out then

[21:25] *** soroush joined
[21:25] *** soroush_ left
[21:25] *** _kaare left
[21:25] <TimToady> $.nap-state = True;

[21:26] *** kjeldahl_ left
[21:26] <PerlJam> rakudo: say join ', ' <== 'hello monty' xx 3  # how about this one sjohnson ?  :-)

[21:26] <p6eval> rakudo : OUTPUT«hello montyhello montyhello monty␤»

[21:26] <PerlJam> rakudo: say  'hello monty' xx 3 ==> join ', '  # or this?

[21:26] <p6eval> rakudo : OUTPUT«hello montyhello montyhello monty␤»

[21:26] <jnthn> rakudo: 'hello monty' xx 3 ==> join ', ' ==> say

[21:27] <p6eval> rakudo : OUTPUT«hello monty, hello monty, hello monty␤»

[21:27] <PerlJam> Hmm.

[21:27] <monty> My name is getting used a lot here.. common people.. use another name :P

[21:27] <sjohnson> PerlJam: i like the way you think

[21:27] <sjohnson> there is more way to do it, just not the p5 way !

[21:28] * PerlJam looks at his REPL and then looks at p6eval's output

[21:28] <PerlJam> oh!  I see.

[21:29] <sjohnson> Perl6Jam

[21:29] <PerlJam> I guess I'm just not smart enough to use the REPL without mildly confusing myself  :)

[21:31] *** monty left
[21:32] <PerlJam> But on the plus side, I've got an idea I like for tomorrow's advent post

[21:34] <sjohnson> does it have anything to do with the arrow => comma thingy?

[21:34] <PerlJam> there is no arrow comma thingy  :)

[21:35] <PerlJam> but it does have to do with the feed operators  <==  ==>

[21:35] <PerlJam> :-)

[21:35] <jnthn> om nom nom

[21:35] <jnthn> oh, not that kind of feed...

[21:35] <jnthn> Though I guess they kinda do nom a list.

[21:36] *** M_o_C left
[21:36] <sjohnson> heh

[21:45] *** mtk left
[22:01] <dalek> mu: 34bce8a | duff++ | misc/perl6advent-2010/schedule:

[22:01] <dalek> mu: add some intent for Dec 10

[22:01] <dalek> mu: review: https://github.com/perl6/mu/commit/34bce8a94c

[22:05] <sorear> good * #perl6

[22:18] *** molaf joined
[22:21] *** wooden joined
[22:26] <dukeleto> sorear: jolly good day, fine sir

[22:26] <dukeleto> jnthn: how is your nom hacking?

[22:26] <dukeleto> jnthn: i read your slides and some blog posts, and your code makes a lot more sense to me now :)

[22:26] <dukeleto> jnthn: those were some fantastic slides from OSDC.fr

[22:45] *** jferrero joined
[22:47] *** rgrau_ joined
[22:48] *** rgrau left
[22:48] *** whiteknight joined
[22:52] <sorear> hello whiteknight

[22:53] <whiteknight> hello sorear

[23:00] *** rgrau_ left
[23:06] *** ch3ck3r joined
[23:07] *** jhuni joined
[23:10] *** wamba left
[23:10] *** ch3ck left
[23:11] *** ch3ck joined
[23:11] *** bluescreen joined
[23:11] *** bluescreen is now known as Guest36106

[23:14] *** ch3ck3r left
[23:23] *** Guest87704 left
