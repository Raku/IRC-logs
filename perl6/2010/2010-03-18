[00:01] <sorear> jnthn: argh.  Looks like I'll be needing invocation objects after all...

[00:01] *** tylerni7 left
[00:01] *** tylerni7 joined
[00:01] *** tylerni7 left
[00:01] *** tylerni7 joined
[00:03] <jnthn> sorear: I suspected you may.

[00:03] <jnthn> Eh well, at least there's one already written that you can get some inspiration by. :-)

[00:03] <sorear> :)

[00:04] <sorear> At issue is that, sometimes, $foo->method means $main::AUTOLOAD="method"; UNIVERSAL::can($foo, "AUTOLOAD")->($foo);

[00:04] <jnthn> oh, autoload

[00:04] <sorear> now it would be so much simpler if, instead, P5 used UNIVERSAL::can($foo, "AUTOLOAD")->("method")->($foo)

[00:04] <jnthn> ouch.

[00:04] <sorear> but no.

[00:08] *** meppl left
[00:11] *** cdarroch left
[00:18] *** payload joined
[00:20] <sorear> jnthn: do you know anything about the semantics of 'provides'?  When do I need to use it, and what do I need to do to use it?

[00:21] <jnthn> sorear: I know you're likely not to need to worry about it for now.

[00:21] <sorear> ok

[00:21] <jnthn> sorear: It's some weird "interface" mechanism that essentially boils down to a list of strings, iirc

[00:21] <jnthn> And occasionally Parrot maybe will look at them for...something...

[00:21] <jnthn> I've got by with ignoring it anyway. :-)

[00:23] <sorear> apparently, pmc2c calls die("")

[00:23] <sorear> lta error message

[00:23] <jnthn> lovely.

[00:23] <jnthn> :-/

[00:25] <sorear> oh, no

[00:25] <sorear> it uses print Carp::longmess("") to generate a stack dump as if die("") was used

[00:25] <sorear> then it prints the error message

[00:26] <sorear> my years of P5 have trained me to look for error details at the top of two pages of spew, not the bottom

[00:27] <sorear> the actual bug is that I forgot to add the new pmc to the Makefile

[00:27] <sorear> also, this makefile isn't -j clean

[00:28] <sorear> jnthn: this Makefile.in looks suspiciously autogenerated

[00:28] *** yinyin joined
[00:28] <sorear> does it have a source I should be editing

[00:28] <jnthn> Makefile.in is what Makefile is generated from

[00:29] <jnthn> However, the original Makefile.in came from a "make a language shell" script that you use to start writing a new langauge

[00:29] <sorear> is it, itself, generated?

[00:29] <sorear> oh

[00:29] <jnthn> Only by a one-off "get you started" thingy.

[00:29] <sorear> :(

[00:29] * sorear hates one-off code generators... it's like cargo culting, but worse

[00:34] *** lichtkind left
[00:39] <jhuni> perl6: ([\~] ^5).join(" ").say;

[00:39] <p6eval> pugs: OUTPUT«0 01 012 0123 01234␤»

[00:39] <p6eval> ..rakudo fed468: OUTPUT«You can't backslash that at line 11, near "~] ^5).joi"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[00:39] <p6eval> ..elf 30121: OUTPUT«pre without a prefix is unimplemented at ./elf_h line 2988␤»

[00:39] <jhuni> perl6: ([\,] ^5).join(" ").say;

[00:39] <p6eval> pugs: OUTPUT«*** No such subroutine: "&prefix:[\\,]"␤    at /tmp/BD08GfyJfQ line 1, column 2-9␤»

[00:39] <p6eval> ..rakudo fed468: OUTPUT«You can't backslash that at line 11, near ",] ^5).joi"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[00:39] <p6eval> ..elf 30121: OUTPUT«pre without a prefix is unimplemented at ./elf_h line 2988␤»

[00:40] <jhuni> Is [\,] a real operator?

[00:42] *** lestrrat is now known as lest_away

[00:43] <jhuni> pugs: ([,] (1,2,3).say;

[00:43] <p6eval> pugs: OUTPUT«*** ␤    Unexpected ";"␤    expecting term postfix, operator, ":", "," or ")"␤    at /tmp/AxzTD8qPKj line 1, column 17␤»

[00:43] <sorear> cannot find file 'p5sv.dump' in path '.', 

[00:43] <sorear> I... am completely stuck.

[00:43] <jhuni> pugs ([,] (1,2,3)).say;

[00:43] <sorear> I've added p5sv to the build system in all the places p5scalar is mentioned

[00:44] <sorear> jnthn: do you have a clue why I can't compile blizkost?  Or should I take this to #parrot?

[00:44] <jnthn> #parrot may be more familiar with the tools and the errors...

[00:44] <jnthn> You did re-configure to re-generate from Makefile.in?

[00:44] <sorear> yes

[00:44] <jnthn> Oh

[00:44] <jnthn> There's another makefile in src/pmc/ too maybe?

[00:44] <sorear> Yes.

[00:45] <sorear> I edited that one too.

[00:45] <jnthn> OK, you twekaed the .in for that?

[00:45] <sorear> Yes

[00:45] <jnthn> (I actually dislike that it's split over two...)

[00:45] *** mberends left
[00:45] <jnthn> OK...well...those are the obvious reasons it'd not work. :-/

[00:45] <sorear> http://pastie.org/874714 is all the changes I've made

[00:46] <jnthn> looking

[00:47] <jnthn> sorear: Does p5sv.pmc certainly get compiled for it tries to do p5array.pmc?

[00:47] <jnthn> Or anything that inherits from p5sv?

[00:48] <jnthn> I suspect it may be that p5array.pmc's compilation needs p5sv.dump

[00:49] *** dalek left
[00:49] *** dalek joined
[00:49] <sorear> jnthn: p5array inherits from p5sv, yes

[00:49] <sorear> I couldn't parse your first sentence

[00:51] <jnthn> oh

[00:51] <jnthn> that's 'cus it wasn't very well formed English. :_)

[00:52] <jnthn> Does p5sv.pmc get compiled before all of the other PMCs that inherit from it?

[00:52] <sorear> I added p5sv to the beginning of all the lists.

[00:52] <sorear> However, at the time of the error there are no generated files.

[00:53] <sorear> except the makefiles and init_with_xs.h

[00:53] <jnthn> You may need some more dependencies if doing inheritance.

[00:54] <sorear> how do I add dependencies?

[00:54] <jnthn> AFAIK, p5sv.pmc needs to be fed to pmc2c, which will generate p5sv.dump, before you can generate any of the PMCs that inherit from it.

[00:54] <sorear> ...wow

[00:54] <jnthn> Just the usual makefile way

[00:54] <sorear> two-phase compilers without automatic dependency handling, fail

[00:54] <jnthn> Yeah. :-/

[00:56] *** brushie_ left
[00:57] * sorear wants to write something to automate this

[00:58] <sorear> can you look at build/src/pmc/Makefile.in and tell me where to add a dependency?

[00:58] <jnthn> I think there used to be some scripty thing that handled the process overall somewhat more

[00:59] <sorear> I don't think I can without a significant restructuring of the makefile

[00:59] <jnthn> And then it was decided makefiles were better. :-/

[01:00] <jnthn> oh, hmm

[01:00] <sorear> but but distutils

[01:00] <jnthn> the generate stage comes before the compile stage

[01:00] <jnthn> And  $(PMC_SOURCES) has p5sv first, no?

[01:01] * jnthn boggles over what could be wrong

[01:01] <jnthn> We do handle an inherited PMC in the Rakudo makefile

[01:01] <jnthn> But Pm didn't like the way the Parrot ones were done so did it differently.

[01:01] <jnthn> ...maybe you're discovering why he disliked it now...

[01:02] * jnthn looks at the diff again

[01:04] <sorear> my ideas for this basically boil down to "autotools without the suck"

[01:05] <jnthn> nod

[01:05] <jnthn> Does p5sv.pmc build if you just have that one in there?

[01:10] <snarkyboojum> phenny: tell masak, check out the 'tardis' script on the github repo - basic shell and integration with Tardis::Debugger

[01:10] <phenny> snarkyboojum: I'll pass that on when masak is around.

[01:11] *** nihiliad joined
[01:11] <snarkyboojum> phenny: tell masak, http://github.com/masak/tardis/commit/aefaa69a3ab864981e3326568f74a8d1e303d236

[01:11] <phenny> snarkyboojum: I'll pass that on when masak is around.

[01:13] * snarkyboojum needs to still rid himself of certain perl5-isms :)

[01:16] *** lest_away is now known as lestrrat

[01:19] *** meppl joined
[01:22] *** TiMBuS left
[01:25] *** arthur-_ left
[01:26] <jnthn> > our multi infix:<wtf>($a, $b) { $a ~ 'WTF' ~ $b }

[01:26] <jnthn> > say "OMG" wtf "BBQ"

[01:26] <jnthn> OMGWTFBBQ

[01:26] <jnthn> > say ["OMG", "LOL" Zwtf "BBQ", "masak"]

[01:26] <jnthn> OMGWTFBBQ LOLWTFmasak

[01:26] <jnthn> (our just for spreading it out over lines in the repl; it works fine lexically too)

[01:27] <sorear> jnthn: Yes, it does

[01:27] *** daemon left
[01:32] *** envi^home joined
[01:32] <jnthn> sorear: OK, I suspect an ordering issue then

[01:32] *** snarkyboojum left
[01:33] <jnthn> It shoulda produced a .dump file - does it match the name of the one that was being looked for?

[01:40] <sorear> yes

[01:41] * sorear studies the Rakudo PMC builder

[01:50] *** nihiliad left
[01:52] *** arthur-_ joined
[01:54] *** nihiliad joined
[01:54] *** snarkyboojum joined
[01:58] *** meppl left
[02:03] <dalek> rakudo: 2189449 | jonathan++ | src/Perl6/Grammar.pm:

[02:03] <dalek> rakudo: First cut of user defined operators. Works for infixes just fine, and the meta-op forms then also work, modulo some little tweaks we'll need on the lookup. postfixes don't work, but I'm too tired to work out why tonight.

[02:03] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/21894495fbb5416c6e9302d20a2f999b81c7d62c

[02:05] <jnthn> And now I sleep. Night!

[02:05] <jnthn> o/

[02:05] *** wknight8111 left
[02:11] *** xomas left
[02:15] <colomon> jnthn++ # didn't expect to come home to that!

[02:35] <colomon> rakudo: sub infix:<ç>($a, $b) { $a / $b.Num }; say 4, 4 Zç 5, 3

[02:35] *** rv2733 joined
[02:35] <p6eval> rakudo fed468: OUTPUT«Confused at line 11, near "say 4, 4 Z"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[02:36] <colomon> ah, not updated yet.

[02:50] *** hercynium joined
[02:50] *** k23z__ left
[02:56] <colomon> just pushed with one spectest failure, in S03-smartmatch/array-array.t.  Can't see how it could be related to what I am pushing.

[02:56] <colomon> rakudo: sub infix:<ç>($a, $b) { $a / $b.Num }; say 4, 4 Zç 5, 3

[02:56] <p6eval> rakudo 218944: OUTPUT«Null PMC access in find_method('HOW')␤current instr.: 'perl6;Perl6Role;ACCEPTS' pc -1 ((unknown file):-1)␤»

[02:57] <colomon> rakudo: sub infix:<ç>($a, $b) { $a / $b.Num }; say 4 ç 5

[02:57] <p6eval> rakudo 218944: OUTPUT«0.8␤»

[03:00] <dalek> rakudo: c52d193 | (David Romano)++ | t/spectest.data:

[03:00] <dalek> rakudo: Merge remote branch 'upstream'

[03:00] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/c52d19323102d7c12e9726945cb5d9432aa1c55b

[03:00] <dalek> rakudo: d52d50d | (David Romano)++ |  (3 files):

[03:00] <dalek> rakudo: Merge remote branch 'upstream'

[03:00] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/d52d50d17024fe18dc8cd5d5892e86578452e981

[03:00] <dalek> rakudo: 27ff4c7 | (David Romano)++ | src/Perl6/Grammar.pm:

[03:00] <dalek> rakudo: [Grammar] Comment for infix_postfix_meta_operator

[03:00] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/27ff4c7812947d2930c6c576bba05fed8e21982e

[03:00] <dalek> rakudo: a223dc0 | (David Romano)++ | docs/ROADMAP:

[03:00] <dalek> rakudo: Merge remote branch 'upstream'

[03:00] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/a223dc090c575143c7079ace83149eac3b64151a

[03:00] <dalek> rakudo: 2abcdcd | (Solomon Foster)++ | src/Perl6/Grammar.pm:

[03:00] <dalek> rakudo: Merge branch 'master' of [email@hidden.address]
[03:04] *** Jedai left
[03:12] *** snarkyboojum left
[03:19] *** Jedai joined
[03:19] *** am0c joined
[03:20] *** justatheory joined
[03:22] *** snarkyboojum joined
[03:24] *** ShaneC left
[03:30] *** justatheory left
[03:31] *** justatheory joined
[03:52] *** snarkyboojum_ joined
[03:52] *** snarkyboojum left
[03:52] *** snarkyboojum_ is now known as snarkyboojum

[04:00] *** Guest95631 left
[04:04] *** nihiliad left
[04:04] *** petdance joined
[04:05] *** ned joined
[04:06] *** ned is now known as Guest80479

[04:14] *** jaldhar joined
[04:23] *** stephenlb left
[04:31] *** Chillance left
[04:34] <lue> ...hello?

[04:35] <sorear> no

[04:38] <lue> darn. :)

[04:38] *** vamped joined
[04:38] <lue> I'm currently on the planet Hyperop, took a while to find a signal.

[04:57] <lue> goodnight

[05:04] *** jhuni left
[05:19] *** snarkyboojum left
[05:19] *** astrojp left
[05:19] *** PacoLinux left
[05:19] *** cbk left
[05:19] *** nsh left
[05:19] *** hejki left
[05:19] *** akl left
[05:19] *** borup left
[05:19] *** broquaint left
[05:19] *** _ilbot2 left
[05:19] *** jnthn left
[05:19] *** colomon left
[05:19] *** fda314925 left
[05:19] *** charsbar left
[05:19] *** silug left
[05:19] *** Helios left
[05:19] *** buubot left
[05:19] *** petdance left
[05:19] *** envi^home left
[05:19] *** diakopter left
[05:19] *** cotto left
[05:19] *** zoi left
[05:19] *** REPLeffect left
[05:19] *** kst left
[05:19] *** EvanCarroll left
[05:19] *** Khisanth left
[05:19] *** mtve left
[05:19] *** obra left
[05:19] *** allbery_b left
[05:24] *** Bzek left
[05:25] *** Bzek joined
[05:43] *** mberends joined
[05:58] <spinclad> a serious and lasting split, here

[05:58] <sorear> they happen occasionally

[05:58] *** quietfanatic joined
[06:04] <lisppaste3> [email@hidden.address] pasted "log of #rakudosketch 2010-03-17" at http://paste.lisp.org/display/96546

[06:19] *** mberends_webchat joined
[06:23] <mberends_webchat> arghh, this irc server (bear.freenode.net) is not on the same side of the netsplit as the irclogger, jnthn and pmichaud :-(

[06:23] *** mberends_webchat left
[06:26] *** justatheory left
[06:28] *** rv2733 left
[06:35] *** mberends_ joined
[06:38] <mberends_> hmm, tunneling via Netherlands doesn't get to feather either :(

[06:40] *** mberends_ left
[06:43] <TimToady> well, I'm here...

[06:46] *** TimToady sets mode: +vv dalek hugme

[06:46] *** TimToady sets mode: +vv ilogger2 IRSeekBot

[06:46] *** TimToady sets mode: +vvv lisppaste3 p6eval phenny

[06:46] <mberends> :-) I emailed pmichaud the #rakudosketch log, I hope that reaches him

[06:46] <TimToady> I'm surprised it's taken so long to rejoin

[06:47] <mberends> yes, the irclog is missing almost an hour

[06:51] <mberends> probably it will all spring to life when a $human toggles the $Big-Red-Switch

[06:55] <TimToady> while I'm asleep tonight, I hope...

[06:55] <TimToady> zzz &

[07:01] *** kaare joined
[07:07] *** Su-Shee joined
[07:08] <mberends> hi Su-Shee

[07:08] <Su-Shee> mr berends!

[07:08] <mberends> !

[07:10] <mberends> half the #perl6 channel has been disconnected from us for over an hour

[07:11] <Su-Shee> the silent masses. ;)

[07:11] *** uniejo joined
[07:11] <mathw> Morning

[07:13] <mberends> morning mathw

[07:14] *** snarkyboojum joined
[07:14] *** diakopter joined
[07:14] *** jnthn joined
[07:14] *** colomon joined
[07:14] *** astrojp joined
[07:14] *** PacoLinux joined
[07:14] *** fda314925 joined
[07:14] *** nsh joined
[07:14] *** cotto joined
[07:14] *** charsbar joined
[07:14] *** zoi joined
[07:14] *** silug joined
[07:14] *** EvanCarroll joined
[07:14] *** REPLeffect joined
[07:14] *** Helios joined
[07:14] *** buubot joined
[07:14] *** kst joined
[07:14] *** hejki joined
[07:14] *** akl joined
[07:14] *** borup joined
[07:14] *** broquaint joined
[07:14] *** _ilbot2 joined
[07:14] *** Khisanth joined
[07:14] *** avuserow joined
[07:14] *** yves joined
[07:14] *** jrockway joined
[07:14] *** pmichaud joined
[07:14] *** mtve joined
[07:14] *** allbery_b joined
[07:14] *** obra joined
[07:14] *** farmer.freenode.net sets mode: +ooo diakopter jnthn pmichaud

[07:14] <mberends> hey! join!

[07:14] *** allbery_b left
[07:14] *** buubot left
[07:14] *** quietfanatic left
[07:14] *** quietfanatic joined
[07:15] * mathw relocates -> $work

[07:15] *** kaare is now known as Guest4091

[07:15] *** buubot_ joined
[07:16] <mberends> phenny, tell pmichaud the #rakudosketch log is in http://paste.lisp.org/display/96546

[07:16] <phenny> mberends: I'll pass that on when pmichaud is around.

[07:16] <mberends> shower &

[07:17] *** allbery_b joined
[07:20] *** xomas joined
[07:20] *** xomas left
[07:20] *** xomas joined
[07:20] *** eternaleye left
[07:22] *** riffraff joined
[07:31] *** am0c left
[07:39] *** eternaleye joined
[07:39] *** eternaleye left
[07:47] *** buubot_ left
[07:47] *** buu left
[07:51] *** barney joined
[08:04] *** mberends left
[08:06] *** payload left
[08:30] *** rgrau joined
[08:31] *** payload joined
[08:37] *** payload left
[08:48] *** payload joined
[08:51] *** vamped left
[08:58] *** hanekomu_ joined
[08:59] *** hanekom__ joined
[09:01] *** payload left
[09:03] *** hanekomu_ left
[09:34] *** payload joined
[10:05] *** smash_ joined
[10:05] <smash_> hello everyone

[10:05] <sorear> hello

[10:06] *** masak joined
[10:06] <masak> oh hai, #perl6!

[10:06] <phenny> masak: 01:10Z <snarkyboojum> tell masak check out the 'tardis' script on the github repo - basic shell and integration with Tardis::Debugger

[10:06] <phenny> masak: 01:11Z <snarkyboojum> tell masak http://github.com/masak/tardis/commit/aefaa69a3ab864981e3326568f74a8d1e303d236

[10:07] <smash_> masak: mornin'

[10:07] * masak czechs

[10:07] <masak> smash_: hi there!

[10:07] <masak> smash_: when's the release today?

[10:07] <smash_> masak: starting working on it now

[10:08] * sorear has XS working sanely in Blizkost *thud*

[10:08] <masak> snarkyboojum: wow, that is awesome!

[10:08] <masak> sorear: whoa.

[10:10] <smash_> masak: where's my ChangeLog update ? ;)

[10:10] <masak> smash_: that's why I asked about the release. :) how much time do I have?

[10:10] <masak> I have 50 minutes now before lunch. I could do something with that.

[10:11] <smash_> masak: don't worry, you have time.. still ned to run the spectest, it won't go out before late in the afternoon

[10:11] <masak> ok. good.

[10:11] * masak gets to it

[10:12] <smash_> masak: you can do it after lunch, no worries

[10:13] <masak> I might need both time slots, so I'd better start now.

[10:13] <masak> maybe I can co-opt jnthn++ for some last-minute help with named enums after lunch. :)

[10:14] <masak> (though cowboy patching just before release may or may not be a wise idea...)

[10:15] <smash_> masak: if you patch it later, i'll need to rn the spectest again

[10:15] <smash_> say and build and all

[10:15] <masak> yeah :/

[10:15] <masak> I'll try to get named enums for next release :)

[10:15] <smash_> it's fine with me, as long you don't break anything that can't be fixed

[10:15] <smash_> (fixed before release)

[10:16] <masak> I don't really know how much is left. I'll see what jnthn++ says too.

[10:16] <smash_> roger that

[10:17] * masak does the CHANGELOG

[10:18] <masak> there's an impressive number of commits this month

[10:20] <smash_> i'm guessing this month's release is named Copenhagen because of the hackathon

[10:20] <masak> aye.

[10:20] <masak> but it might as well have been named 'colomon', too :)

[10:20] <smash_> is there a colomon.pm ? :)

[10:20] <masak> not yet :)

[10:20] <smash_> hehe

[10:24] * smash_ make spectest

[10:25] <masak> http://use.perl.org/~jhuni/journal/40252 # jhuni++

[10:28] *** lestrrat is now known as lest_away

[10:32] *** riffraff left
[10:35] *** riffraff joined
[10:36] *** guest_ joined
[10:40] <masak> rakudo: say (1/0).WHAT

[10:40] <p6eval> rakudo 2abcdc: OUTPUT«Rat()␤»

[10:40] <masak> rakudo: say +(1/0)

[10:40] <p6eval> rakudo 2abcdc: OUTPUT«Inf␤»

[10:41] <masak> is there any support in some well-known ISO standard for this strange numification of a zero-denominator Rat?

[10:41] * masak wants NaN

[10:42] <m6locks> aye, lim 1/x is Inf, but division by zero itself is not a number

[10:42] <masak> ok.

[10:43] <masak> Java seems to give 'Infinity' too, so I yield.

[10:44] <masak> time for lunch, it seems. I'm about halfway through the ChangeLog.

[10:44] <masak> smash_: should I commit what I have so far?

[10:44] <smash_> masak: you can commit later when you're done, either way is fine by me

[10:45] <masak> I pushed what I have so far. I'll do the rest after lunch, if no-one beats me to it.

[10:45] <smash_> masak: ok, thank you

[10:47] *** flip214 joined
[10:47] <flip214> hello p6!

[10:48] *** xinming_ joined
[10:49] <dalek> rakudo: a8d808f | masak++ | docs/ChangeLog:

[10:49] <dalek> rakudo: [docs/ChangeLog] partial draft of the 2010.03 release

[10:49] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/a8d808f3767c453196e81d74e948572c2889989b

[10:50] *** molaf joined
[10:50] <jnthn> morning

[10:50] *** yinyin left
[10:50] <jnthn> Oh yay, ChangeLog updates

[10:50] <jnthn> masak++

[10:51] *** lest_away is now known as lestrrat

[10:51] *** xinming left
[10:54] <smash_> jnthn: mornin'

[10:55] <guest_> Unimportant and slightly OT, but I don't know where else to post this: I think there is an accidentally mistake in the definition of pi at perl6-general-examples/Examples/nums.pl (jhuni's examples) line 3: my $pi ::= 3.1415_1_926_358979323846; shouldn't it be 3.14159265358979...? That would give a more correct result. (Closer to the first statement.)

[11:04] *** meppl joined
[11:21] <jnthn> guest_: Not sure that it should define pi anyway, I think it comes built-in...

[11:21] <jnthn> rakudo: say pi

[11:21] <p6eval> rakudo a8d808: OUTPUT«3.14159265358979␤»

[11:21] <guest_> cool^^

[11:22] <smash_> rakudo: say []~~[] 

[11:22] <p6eval> rakudo a8d808: OUTPUT«1␤»

[11:22] <smash_> rakudo: say []~~[1] 

[11:22] <p6eval> rakudo a8d808: OUTPUT«1␤»

[11:22] <jnthn> ...huh? :-/

[11:22] <smash_> rakudo: say [1]~~[1] 

[11:22] <p6eval> rakudo a8d808: OUTPUT«1␤»

[11:22] <smash_> rakudo: say [1]~~[] 

[11:22] <p6eval> rakudo a8d808: OUTPUT«0␤»

[11:22] <smash_> yeap, that test is failling

[11:23] <smash_> rakudo: say !([]~~[1]) 

[11:23] <p6eval> rakudo a8d808: OUTPUT«0␤»

[11:23] <smash_> rakudo: say !([1]~~[]) 

[11:23] <p6eval> rakudo a8d808: OUTPUT«1␤»

[11:27] <jnthn> That's...odd.

[11:29] <masak> I'm pretty sure there's a rakudobug in there somewhere.

[11:29] <masak> rakudo: say []~~[1] 

[11:29] <p6eval> rakudo a8d808: OUTPUT«1␤»

[11:29] <masak> that one, say.

[11:30] <jnthn> Yes

[11:31] <masak> Array     Array     arrays are comparable   $_ «===» X (dwims * wildcards!)

[11:31] * masak submits rakudobug

[11:31] <jnthn> It worked when I put Array.ACCEPTS back in.

[11:31] <jnthn> So it's somehow regressed.

[11:31] *** bkeeler left
[11:34] <smash_> well, i guess it was wotking in the last release.. the test passed back then

[11:35] *** masak left
[11:35] *** masak joined
[11:35] <jnthn> masak: Worketh thee on the changelog?

[11:36] <jnthn> phenny: tell pmichaud I also emailed you a summary of what happened at #rakudosketch - dunno if you saw that

[11:36] <phenny> jnthn: I'll pass that on when pmichaud is around.

[11:37] *** quester joined
[11:37] *** JimmyZ joined
[11:37] <JimmyZ> Hello, Rakudo * will be late?

[11:37] <quester> Good morning #perl6!

[11:41] *** guest_ left
[11:42] <masak> jnthn: I work, but distractions are plenty :/

[11:44] *** JimmyZ left
[11:45] *** prism joined
[11:47] *** flip214 left
[11:47] <smash_> 9 subtests UNEXPECTEDLY SUCCEEDED

[11:48] <smash_> ok, 2 fails: 1 syntax error in a test file, and that smartmatch issue

[11:48] <masak> I'm only on Feb 26, and now I'm being pulled into a meeting here. :/

[11:49] <masak> it will not last more than an hour, I'm sure.

[11:49] <smash_> masak: plenty of time, don't worry

[11:49] <masak> but maybe I should defer the ChangeLog writing to someone more available?

[11:49] <masak> ok.

[11:49] <masak> good.

[11:50] <jnthn> masak: I can do a bit too if you like?

[11:50] <masak> jnthn: yes, please do. just pushed my last additions.

[11:50] <smash_> i need to sort out the failling tests first

[11:51] <jnthn> smash_: Which one has a syntax error?

[11:52] <smash_> the test is: for "par 1", "par 2" -> $p { ... }

[11:52] <smash_> this works: for ("par 1", "par 2") -> $p { ... }

[11:52] <dalek> rakudo: 5418e06 | masak++ | docs/ChangeLog:

[11:52] <dalek> rakudo: [docs/ChangeLog] a bit more of ChangeLog draft progress

[11:52] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/5418e0655e711738b492e99c208c791300393e26

[11:53] <jnthn> rakudo: for "par 1", "par 2" -> $p { ... }

[11:53] <p6eval> rakudo a8d808: OUTPUT«No exception handler and no message␤current instr.: '&fail' pc 17032 (src/builtins/Junction.pir:450)␤»

[11:53] <jnthn> rakudo: for "par 1", "par 2" -> $p { say $p }

[11:53] <p6eval> rakudo a8d808: OUTPUT«par 1␤par 2␤»

[11:55] <smash_> grr, no syntax error now for me either :-\

[11:55] * smash_ make specttest again

[11:58] <jnthn> smash_: Just got a small patch to tidy up some lose ends from a patch I put in last night.

[11:58] <smash_> jnthn: commit away, i'll re-run test && spectest again later.. no worries

[11:59] <colomon> \o/

[11:59] <colomon> BTW, world;

[11:59] <jnthn> yayitscolomon!

[12:00] *** hanekom__ left
[12:00] <colomon> rakudo: sub infix:<op>($a, $b) { -> $op { $op($a, $b) } }; my $a = 3 op 4; say $a(*+*); say $a(&infix<*>);

[12:00] <p6eval> rakudo a8d808: OUTPUT«7␤Could not find non-existent sub &infix␤current instr.: '_block21' pc 29 (EVAL_2:0)␤»

[12:01] <colomon> rakudo: sub infix:<op>($a, $b) { -> $op { $op($a, $b) } }; my $a = 3 op 4; say $a(*+*); say $a(&infix:<*>);

[12:01] <p6eval> rakudo a8d808: OUTPUT«7␤12␤»

[12:01] <moritz_> oh hai

[12:01] <colomon> o/

[12:01] <colomon> jnthn++

[12:02] <jnthn> colomon: Yeah, I'm just patching up my bleary-eyed screw-ups in that patch at the moemnt too. Or trying to anyway.

[12:02] <jnthn> rakudo: sub infix:<wtf>($a, $b) { "{$a}WTF{$b}" }; say "OMG" wtf "BBQ"

[12:02] <p6eval> rakudo a8d808: OUTPUT«OMGWTFBBQ␤»

[12:02] <jnthn> rakudo: sub infix:<wtf>($a, $b) { "{$a}WTF{$b}" }; say "OMG" Zwtf "BBQ"

[12:02] <p6eval> rakudo a8d808: OUTPUT«Null PMC access in find_method('HOW')␤current instr.: 'perl6;Perl6Role;ACCEPTS' pc -1 ((unknown file):-1)␤»

[12:02] <jnthn> fejl!

[12:03] <jnthn> ooh, my compile is nearly done...

[12:03] *** payload left
[12:03] <pugssvn> r30122 | moritz++ | [t/spec] fix more smartlinks; down to 33 broken links 

[12:04] <colomon> jnthn: right, all the meta-ops seem to fail.

[12:05] *** envi^home joined
[12:07] <jnthn> colomon: For custom ops?

[12:07] <jnthn> Yes

[12:08] <colomon> yes

[12:08] <jnthn> I know why.

[12:08] <colomon> ooooooo

[12:08] <jnthn> The base sub is assumed to be package scoped

[12:08] <jnthn> We need to check if it's lexical

[12:08] <jnthn> I've got a patch that I'm compiling now to try and do that.

[12:08] <colomon> so the metaop code is whats wrong?

[12:08] <colomon> \o/

[12:09] <jnthn> Yes

[12:09] <dalek> rakudo: d82c83e | moritz++ | t/spectest.data:

[12:09] <dalek> rakudo: we pass S02-literals/subscript.t

[12:09] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/d82c83eb40be2ccbcaccc81c7b4f8214f101b548

[12:09] <jnthn> Also, the reason postfixes didn't work was...embarassing.

[12:09] <jnthn> Anyway, locally I just did:

[12:09] <jnthn> > sub postfix:<!>($n) { my $r = 1; for 1..$n { $r *= $_ }; $r }; say 5!

[12:09] <jnthn> 120

[12:09] <colomon> do tell :)

[12:10] <jnthn> colomon: Heh. I was apparently concious enough last night to write the code to determine the default precedence level based on the operator category, but not concious enough to then use the result I'd computed in place of a hard-coded '%additive' :-)

[12:11] <jnthn> So it tried to parse a postfix as an infix and got horribly confused. :-)

[12:11] <colomon> I should have noticed that when I reviewed the code last night.

[12:12] <jnthn> Meaning the entire patch is:

[12:12] <jnthn> -                PAST::Val.new( :value('%additive') )

[12:12] <jnthn> +                PAST::Val.new( :value($prec) )

[12:12] <jnthn> :-)

[12:12] <colomon> :)

[12:12] <jnthn> Oh well

[12:12] <jnthn> At leat it was *easy* to fix. :-)

[12:12] <jnthn> Also: yay, our cool factorial examples can has a work again.

[12:12] <colomon> \o/

[12:13] <colomon> though it will be cooler when [*] works again.

[12:14] *** takadonet joined
[12:14] <takadonet> morning all

[12:14] <colomon> \o

[12:14] <takadonet> how are you doing colomon?

[12:14] <colomon> okay

[12:15] <pmichaud> good morning, #perl6

[12:15] <phenny> pmichaud: 07:16Z <mberends> tell pmichaud the #rakudosketch log is in http://paste.lisp.org/display/96546

[12:15] <phenny> pmichaud: 11:36Z <jnthn> tell pmichaud I also emailed you a summary of what happened at #rakudosketch - dunno if you saw that

[12:15] <colomon> \o

[12:15] <jnthn> hi, pmichaud 

[12:15] <pmichaud> I saw the summary, yes, but I'd also like to see the discussion itself :)

[12:15] <jnthn> pmichaud: OK - that's fine. Just didn't want you to miss it. :-)

[12:18] <pmichaud> (I saw that you sent a summary.  I have not read it in detail yet.  I'll likely do so this morning.)

[12:19] <pmichaud> the 96546 looks very partial

[12:19] <colomon> pmichaud: agreed.  :(

[12:19] <colomon> wonder if nopaste has a length limit.

[12:19] <smash_> pmichaud: mornin'

[12:19] <pmichaud> as in, it looks like a lot was said prior to the nopaste

[12:19] <pmichaud> smash_: good morning

[12:20] <colomon> pmichaud: practically everything was said prior to the nopaste.

[12:20] <jnthn> Oh.

[12:20] <jnthn> :-/

[12:20] <pmichaud> :-(

[12:20] * jnthn wonders if that's the same one he was emailed

[12:20] <jnthn> pmichaud: What does it start with?

[12:20] <pmichaud> <jnthn> On the upside, when I did fall asleep, I didn't ahve nightmares.

[12:20] <pmichaud> <jnthn> Anyway, I think this issue is in hand.

[12:20] <pmichaud> <spinclad> s/pieces of that in/part of/

[12:20] <pmichaud> <jnthn> Just needs more hack hack hack.

[12:20] <pmichaud> * chromatic (~chromatic@c-67-168-199-244.hsd1.or.comcast.net) has joined #rakudosketch

[12:20] <pmichaud> <jnthn> Any other comments on the last two? :-)

[12:20] <colomon> jnthn: chromatic is there near the top, he didn't arrive until very late as I recall.

[12:20] <jnthn> oh, ouch

[12:20] <jnthn> :-(

[12:21] <pmichaud> so, no log?

[12:21] <jnthn> pmichaud: I have the lot in my irssi backscroll, I can extract it.

[12:21] <jnthn> I just thought somebody else had some more conveient way

[12:22] <pmichaud> Please do.  I do want to see the conversation details themselves, even if I can only respond well-after-the-fact.

[12:25] <pmichaud> .oO( The more convenient way is to hold the discussion on #perl6?  ;-)

[12:26] *** k23z__ joined
[12:26] *** k23z__ left
[12:26] *** k23z__ joined
[12:32] *** ruoso joined
[12:34] <jnthn> pmichaud: mailed it to you

[12:34] <pmichaud> jnthn++  # thanks

[12:34] <colomon> jnthn++

[12:34] *** mberends joined
[12:34] <jnthn> Feel free to post it up somewhere too

[12:35] <jnthn> I've got too much to do for the number of hours in the day today.

[12:35] <colomon> ditto++

[12:36] <jnthn> colomon: Hmm...postfixes work and prefixes too. The Obvious Patch for the meta-ops with them didn't work. I think I may have to leave that until I have a bit more time.

[12:36] <pmichaud> understood.  I'm not sure what I'll be doing today... yesterday was a Really Bad Day and I suspect I'll either be trying to (a) distance myself entirely from it or (b) try dealing with it directly.  If (a), then Rakudo stuff is a welcome distraction :-)

[12:36] <jnthn> It does work if you declare it "our"

[12:37] <colomon> jnthn: if our makes it work then I'd say we're good for now.

[12:37] <jnthn> colomon: Yeah. I don't know why the fix I tried didn't work, which makes me think it'll need Deeper Digging, and I don't want to get bogged down in that too.

[12:38] <jnthn> s/too/now/

[12:38] <jnthn> hugme: hug pmichaud 

[12:38] * hugme hugs pmichaud

[12:39] *** payload joined
[12:41] <mberends> is it possible to create an object using a class whose name is specified in a string variable? (for FakeDBD)

[12:41] <pmichaud> perhaps   ::($foo).new ?

[12:42] <pmichaud> (nyi in rakduo afaik)

[12:42] <mberends> thanks pm, will workaround temporarily

[12:43] <jnthn> Easy workaround is eval($name).foo

[12:43] <jnthn> er

[12:43] <jnthn> eval($name).new

[12:43] <mberends> cool :-)   work() &

[12:43] *** mberends left
[12:44] <dalek> rakudo: 240e2f0 | smashz++ | docs/release_guide.pod:

[12:44] <dalek> rakudo: Testing commit.

[12:44] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/240e2f0930496d428f57f8921d1a2fe064d4ee4f

[12:44] <dalek> rakudo: c63e4b2 | smashz++ |  (2 files):

[12:44] <dalek> rakudo: Merge branch 'master' of github.com:rakudo/rakudo

[12:44] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/c63e4b2856c2eb39ac4935b2f4c339a3d5d32566

[12:44] <smash_> that second push wasn't intended, sorry

[12:45] <pmichaud> smash_: you mean the second commit?  np -- I do it all the time.

[12:45] <smash_> yeap, i meant the second commit

[12:45] <pmichaud> jnthn:  confirmed receipt of #rakudosketch log, thanks

[12:45] <smash_> jnthn: pushed everything already ?

[12:46] <smash_> everyone: last call for pushing changes

[12:46] <smash_> need to re run tests all over again

[12:46] <smash_> last call for commiting test changes too

[12:47] <colomon> go smash_  go!

[12:47] <smash_> i'm off to lunch, will run everything again when i'm back.. so push anything you want to make to release before i'm back :-)

[12:47] <jnthn> smash_: one coming now!

[12:47] <jnthn> smash_: Also, working on ChangeLog

[12:47] <smash_> jnthn: cool, thks

[12:47] <smash_> ok, be right back

[12:48] * smash_ off &

[12:49] <dalek> rakudo: 3be6916 | jonathan++ | src/Perl6/Grammar.pm:

[12:49] <dalek> rakudo: Fix thinko, tweak comments. Custom prefixes and postfixes should now work.

[12:49] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/3be691635178643d7cdb93466b976b189cd06a6d

[12:57] *** M_o_C joined
[12:58] *** payload left
[12:59] <jnthn> This change log is epic.

[13:06] *** meppl left
[13:07] <dalek> rakudo: d537cea | jonathan++ | docs/ChangeLog:

[13:07] <dalek> rakudo: Fill out ChangeLog - should cover most things.

[13:07] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/d537cea42929490d1a683dae32595a639e8887d6

[13:08] <takadonet> I bet you the next one will be even longer

[13:11] * mathw likes

[13:12] <colomon> jnthn: I'm confused, it looks like you undid masak's last patch to the changelog almost completely?

[13:14] <jnthn> huh?

[13:14] <jnthn> not intentionally

[13:14] <jnthn> huh...wtf

[13:15] * jnthn smacks git

[13:16] <colomon> Also, I think you forgot the ! metaop, and none of the metaops are quite "proper" yet.

[13:17] <colomon> (in particular, precedence is wrong on ! and R, and X and Z don't generate the operators properly, or handle cases with more than two list arguments.)

[13:18] *** quester left
[13:18] <jnthn> colomon: Patch it as you wish.

[13:18] <dalek> rakudo: 6dd31df | jonathan++ | docs/ChangeLog:

[13:18] <dalek> rakudo: Re-instate masak++ ChangeLog entries that I somehow managed to lose.

[13:18] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/6dd31dff41dd5c55a4a447c39fe1112ae19b1a99

[13:19] <colomon> jnthn: 'k

[13:23] <colomon> done

[13:23] *** xinming_ is now known as xinming

[13:24] <dalek> rakudo: 855ecb5 | (Solomon Foster)++ | docs/ChangeLog:

[13:24] <dalek> rakudo: Tweak changelog on metaops.

[13:24] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/855ecb5863f89b8cf96981a3ed9f0006c25e9c4c

[13:25] <jnthn> Yay.

[13:25] <jnthn> Do we have a release announcement drafted?

[13:25] <smash_> back

[13:25] <jnthn> welcome back, smash_++ :-)

[13:25] <masak> man, that was a soul-sucking meeting :(

[13:26] <masak> ...and now they're proposing another one... :(

[13:26] * smash_ make realclean ; make ; make test ; make spectest

[13:26] * jnthn recommends a Configure somewhere in there ;-)

[13:26] <jnthn> masak: I think ChangeLog is muchly done, but please do review. :-)

[13:26] <jnthn> And tweak as you wish.

[13:26] <masak> jnthn++

[13:27] <jnthn> Ah, I see no 2010.03 yet

[13:27] * masak will review

[13:27] <mathw> Is there anywhere an intention to at some point make Parrot and Rakudo not need Perl 5 in order to build?

[13:28] <masak> I think so, but it's very far ahead.

[13:29] <jnthn> Not in the near future. It's probably a long-term ideal though.

[13:29] <jnthn> oops, I forgot about lunch.

[13:29] * jnthn fixes that

[13:32] <masak> ChangeLog looks good.

[13:32] <masak> jnthn: we seem fundamentally unable to agree on how to spell 'deferral' :)

[13:32] <arnsholt> mathw: That probably means making them use autotools. You volunteering? =)

[13:32] <smash_> thks for the ChangeLog updates, creating the annouce file now

[13:32] <mathw> arnsholt: umm. no.

[13:33] <jnthn> masak: I deferred learning the correct spelling.

[13:33] <mathw> Of course, rakudo could probably configure itself in NQP, but that might be tricky for Parrot

[13:33] <jnthn> Or maybe defered.

[13:33] <jnthn> .oO( I should learn English properly some day )

[13:34] <masak> jnthn: oh! there's a duplicate.

[13:34] *** rv2733 joined
[13:34] <masak> jnthn: first, I thought you changed my spelling, but it seems you added your own entry.

[13:34] <jnthn> :-O

[13:34] <jnthn> oops!

[13:34] <masak> jnthn: I'll change the spelling and remove my entry.

[13:34] <jnthn> OK :-)

[13:35] <masak> pushed.

[13:35] <dalek> rakudo: 4c251d4 | masak++ | docs/ChangeLog:

[13:35] <dalek> rakudo: [docs/ChangeLog] fixed typo, removed dup

[13:35] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/4c251d49c1c89d5a5a8aabbad959bc9c1c3aafae

[13:35] *** rv2733 left
[13:35] <jnthn> rakudo: sub postfix:<!>($n) { my $r = 1; for 1..$n { $r *= $_ }; $r }; say 5!

[13:35] <p6eval> rakudo 3be691: OUTPUT«120␤»

[13:35] <jnthn> \o/

[13:36] * smash_ make spectest

[13:37] <mathw> jnthn++

[13:39] <masak> jnthn: we can haz user-defined operators? woot!

[13:39] *** riffraff left
[13:39] <jnthn> masak: Yeah, I did them last night.

[13:39] <masak> jnthn++

[13:39] <jnthn> ...until about 3am. Then I slept until 11!

[13:40] <masak> :)

[13:45] <hanekomu> now we can haz APerL6

[13:46] <jnthn> \o/

[13:48] <masak> bbiab &

[13:48] *** masak left
[13:49] <colomon> rakudo: sub postfix:<!>($n) { (^$n).reduce( &infix:<*> ) }; say 5!

[13:49] <p6eval> rakudo 855ecb: OUTPUT«0␤»

[13:49] <colomon> doh!

[13:50] <smash_> rakudo: say []~~[1]

[13:50] <colomon> rakudo: sub postfix:<!>($n) { (1..$n).reduce( &infix:<*> ) }; say 5!

[13:50] <p6eval> rakudo 855ecb: OUTPUT«1␤»

[13:50] <p6eval> rakudo 855ecb: OUTPUT«120␤»

[13:52] <jnthn> ^$n fail?

[13:52] <colomon> jnthn: ^$n is 0..($n-1)

[13:52] <colomon> so colomon fail

[13:53] <jnthn> oh

[13:53] <jnthn> good point :-)

[13:53] <jnthn> 0 *...yes ;_)

[13:53] <jnthn> of course there's...

[13:54] <jnthn> rakudo: multi postfix:<!>(0) { 1 }; multi postfix:<!>($n) { $n * ($n - 1)! }; say 5!

[13:54] <p6eval> rakudo 855ecb: OUTPUT«120␤»

[13:54] <jnthn> That one is kinda pretty :-)

[13:55] *** nihiliad joined
[13:56] <smash_> that []~~[1] test will probably fail, any suggestions for fixing it in time for release ? or skip the test ?

[13:57] <jnthn> smash_: Let's skip the test for the release.

[13:57] <smash_> that means i need to commit the skip test in the pugs repo correct ?

[13:57] <jnthn> Even just # out the appropriate line in t/spectest.data 

[13:58] <jnthn> You can do it that way too.

[13:58] <jnthn> I think we can fix it soon, just not in time for the release.

[13:58] <moritz_> when will the release be?

[13:59] <smash_> moritz_: in a couple of hours we hope, unless something cames up

[13:59] *** M_o_C left
[13:59] <moritz_> smash_++ # release-managing

[14:00] <smash_> jnthn: but in the t/spectest.data i need to comment out the entire test file, let me try to skip just that one test

[14:00] * moritz_ can't find an Array.ACCEPTS in rakudo anywhere

[14:00] <jnthn> smash_: Yes, true. :-)

[14:00] <jnthn> moritz_: It's in Seq akshually

[14:00] <jnthn> Which Array inherits from.

[14:00] <moritz_> smash_: you can add a #?rakudo todo 'some regression'   line before the test to the test file

[14:02] *** payload joined
[14:03] <smash_> moritz_: that can work, thks

[14:06] *** uniejo left
[14:07] *** pmurias joined
[14:09] *** payload left
[14:09] <pugssvn> r30123 | smash++ | Todo test for rakudo release #27. 

[14:10] * smash_ make spectest

[14:14] *** Bzek left
[14:15] *** k23z__ left
[14:19] <[particle]> jnthn: i have rakudo compiling, and failing a handful of spectests

[14:21] <smash_> [particle]: on linux ?

[14:22] <[particle]> w7-msvc

[14:22] *** clintongormley joined
[14:22] <smash_> can you paste somewhere the tests that are failling please ?

[14:23] <[particle]> sure, give me 10 minutes or so

[14:23] <jnthn> [particle]: Compiling is good. Rest depends on how big your hand is.

[14:24] <smash_> [particle]: sure, thks.. and also make sure your git is up-to-date

[14:24] <smash_> jnthn: no harm in looking at the tests that are failing, maybe there's something fixable or skipable there

[14:25] <jnthn> smash_: Aye.

[14:28] *** k23z__ joined
[14:28] *** k23z__ left
[14:28] *** k23z__ joined
[14:28] *** REPLeffect left
[14:29] <[particle]> ok, it'll take me longer to rebuild/rerun spectest, but i'll nopaste results

[14:30] <[particle]> building src/gen/core.pir, i'm peaking at 670MB so far

[14:33] * smash_ make spectest ..... All tests successful, 1174 subtests skipped.

[14:33] *** rgrau` joined
[14:34] <smash_> LAST CALL, for late pushes to the repo.. speak now if you want to make it before today's release

[14:35] <mathw> \o/

[14:36] <mathw> rakudo: my Str $a = "Holy camel, onion!"; $a ~~ s/camel/rakudo/; $a.say;

[14:36] <p6eval> rakudo 4c251d: OUTPUT«Holy rakudo, onion!␤»

[14:36] <mathw> \o/

[14:36] <smash_> jnthn, masak, colomon: anything specific you guys want to see in the annouce from the ChangeLog ?

[14:37] <mathw> s/// :)

[14:37] <smash_> (minor/major improvements, etc.)

[14:38] <smash_> i'll write a first draft, and then you guys can update it if you want

[14:38] *** masak joined
[14:39] * masak haz a last look at the ChangeLog

[14:39] <smash_> masak: gimme a sec, and you'll be also looking at the announce

[14:41] <jnthn> smash_: Yes, give us chance to review the announce. :-)

[14:41] <jnthn> smash_: Should include something about the Copenhagen hackathon.

[14:41] <jnthn> But maybe best if one of us who was there writes that.

[14:42] <smash_> jnthn: of course, i'll commit it in a sec

[14:42] * masak pushed a few picked nits

[14:42] <masak> I like the ChangeLog now.

[14:44] <masak> what's this Japanese twitterer saying? http://twitter.com/mattn_jp/status/10668434196 -- he is hoping something, but that's all I get.

[14:44] *** REPLeffect joined
[14:44] <dalek> rakudo: b4ed7c1 | masak++ | docs/ChangeLog:

[14:44] <dalek> rakudo: [docs/ChangeLog] added/changed a few quotation marks

[14:44] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/b4ed7c17aa7bbb77d52c79ee74768a90f583f751

[14:47] <smash_> annouce file push'ed, please update it as you see fit

[14:47] <smash_> and someone add something about the hackathon, i wasn't where :-(

[14:55] *** ilogger2 joined
[14:56] <smash_> the later annouces don't give info about the number of spectest currently passing

[14:56] <dalek> rakudo: 14aeee8 | jonathan++ | docs/announce/2010.03:

[14:56] <dalek> rakudo: Fix next release date.

[14:56] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/14aeee87ed725401674993466a36bae24ddd4197

[14:56] <dalek> rakudo: a7ff5e8 | jonathan++ | docs/announce/2010.03:

[14:56] <dalek> rakudo: Oops, last patch was wrong.

[14:56] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/a7ff5e860c91565dc5135a53d7477563453e2b8d

[14:56] <colomon> my two favorite music festivals -- one is on the first weekend in august, the other on the weekend after the first monday in august.  so they're the same weekend about half the time...  ;)

[14:57] *** Guest4091 left
[14:57] *** broquaint joined
[14:59] *** Gothmog_ joined
[15:00] <masak> jnthn: I was distracted again by someone who wanted to use my computer to print things. yes, I can write a hackathon description.

[15:00] *** sunnavy_ joined
[15:01] <jnthn> masak: OK. I'm tweaking the specific notable things at the moment.

[15:04] *** sunnavy_ left
[15:04] *** sunnavy joined
[15:05] <smash_> let me know if i did something wrong, and need fixing

[15:06] <jnthn> smash_: Nothing wrong, just some bits I wanted to tweak. :-)

[15:06] <jnthn> Pushed.

[15:06] *** sunnavy left
[15:07] <smash_> jnthn: cool, thks

[15:08] <dalek> rakudo: f098309 | jonathan++ | docs/announce/2010.03:

[15:08] <dalek> rakudo: Tweaks to the specifics in the release announcement.

[15:08] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/f098309897890622bf010f2c804d38b5dd464f41

[15:08] *** sunnavy joined
[15:08] <jnthn> All: feel free to review and tweak my tweaks.

[15:09] <masak> ditto.

[15:10] <jnthn> masak: Do we need the [1] ?

[15:11] <jnthn> at the start of the paragraph?

[15:11] <jnthn> (agree it's good for the link at the bottom)

[15:11] <masak> oh!

[15:11] <masak> I might have fibbed there.

[15:12] <jnthn> :-)

[15:12] <masak> yes, I did. fixing.

[15:12] <jnthn> That nit aside, I like the text. :-)

[15:12] <jnthn> masak++

[15:12] <masak> cool. moritz_++ for the original. :)

[15:13] <smash_> the [1] in the begining of the paragraph should be removed (me thinks)

[15:13] <masak> already pushed :)

[15:13] <jnthn> \o/

[15:13] <jnthn> excellent.

[15:13] <dalek> rakudo: f343af8 | masak++ | docs/announce/2010.03:

[15:13] <dalek> rakudo: [announce] description of the hackathon

[15:13] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/f343af8bda563f495e2e6b1bb6960f8857f427b8

[15:13] <dalek> rakudo: 6c84d73 | masak++ | docs/announce/2010.03:

[15:13] <dalek> rakudo: [announce] removed redundant [1] footnote

[15:13] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/6c84d734a11aec592ea682d1af54b856c48c6886

[15:14] <smash_> masak++ jnthn++ # announce and changelog updates

[15:14] <jnthn> masak: Did the specific improvements list capture the main things?

[15:14] <jnthn> ooh...we should mention series operator improvements too perhaps?

[15:14] <masak> aye.

[15:14] <jnthn> There was a lot of that

[15:14] <masak> I just glanced at them, but I think they capture the main things.

[15:15] <masak> a caveat though is that I'm still an alpha user, so I only know through the commits I see :)

[15:15] <smash_> i'll continue with the release as soon as everyone is confortable with the announce

[15:15] *** nihiliad joined
[15:16] <jnthn> masak: Heh. I'm the ohter way around: people see through the things I commit. :-)

[15:17] <zoi> perl6....................

[15:17] <masak> zoi: you got that right! :)

[15:17] <masak> zoi: but you don't need all those dots. three is fine.

[15:17] <jnthn> std: perl6...

[15:17] <p6eval> std 30123: OUTPUT«===SORRY!===␤Missing term at /tmp/NxTEv87ZPa line 1 (EOF):␤------> perl6...⏏<EOL>␤    expecting any of:␤  postfix_prefix_meta_operator␤     prefix or term␤   term␤Undeclared routine:␤   'perl6' used at line 1␤FAILED 00:01 108m␤»

[15:17] <jnthn> Apparently not.

[15:17] <jnthn> :-)

[15:18] <masak> jnthn: there are many variants of 'fine' :P

[15:18] <jnthn> OK, I think I'm happy with the release announcement. :-)

[15:18] <masak> me too. smash_++

[15:18] <colomon> "Series operator now has basic support for the current Spec."  ?

[15:19] <jnthn> colomon: If you prefer that, make it so :-)

[15:19] <jnthn> Or I can?

[15:19] <jnthn> (I have the file open here0

[15:19] <colomon> go for it (chasing small child here)

[15:19] <zoi> masak: i want a perl7 where you have obligatory dots at the end of the package instaed of 1;..........................

[15:19] <dalek> rakudo: 807c57a | jonathan++ | docs/announce/2010.03:

[15:19] <colomon> or was there already a series announcement I missed?

[15:19] <dalek> rakudo: Also mention the nice work on the series operator in the major items.

[15:19] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/807c57a65a97acb9b8774de8a42ffa27a92745b9

[15:19] <jnthn> lol

[15:19] <colomon> ah, that works for me.

[15:20] <smash_> colomon: we're still reviwing the annouce.. so fell free tochange things now

[15:20] <jnthn> colomon: Taking yours.

[15:20] <jnthn> done

[15:20] <hejki> is [+] already in current rakudo?

[15:21] <colomon> hejki: no

[15:21] <smash_> everyone happy with the annouce ?

[15:21] <hejki> =(

[15:21] <jnthn> I'm happy.

[15:22] <jnthn> zoi: You don't need an obligatory anything at the end of the package in Perl 6.

[15:22] <jnthn> :-)

[15:22] <colomon> smash_++

[15:22] <zoi> jnthn: that's sooo not perl way man

[15:22] <smash_> ok, moving on with the release, please don't push anything now

[15:22] <zoi> i demand obligary dots......

[15:23] <masak> zoi: yes, but this is an open-source community. if you demand anything, you have to implement it yourself :)

[15:23] <zoi> wow

[15:23] <smash_> demand equals write a patch !!

[15:23] <zoi> i'll pm larry wall

[15:23] <zoi> man

[15:23] <colomon> hejki: for the moment you can do @a.reduce(&infix:<+>) (for instance) instead of [+] @a

[15:24] <colomon> hejki: believe me, as soon as I can figure out how, I'll have [+] implemented again.  (or given my current schedule, maybe someone else will beat me to it.)

[15:24] <masak> zoi: sorry -- we're in release mode today, so we're all a bit giddy. at least I am. :)

[15:24] <jnthn> colomon: I may, maybe, sort of, in a twisted way, understand operator handling a little better after last night, so may be able to help more with that now. :-)

[15:25] <masak> \o/

[15:25] <colomon> jnthn++

[15:25] <colomon> it's mostly just sorting out how to add it to the grammar

[15:25] * jnthn really wants those - and hypers - back too.

[15:25] <dalek> rakudo: e4e058f | jonathan++ | docs/announce/2010.03:

[15:25] <dalek> rakudo: Tweak series statement in announce thanks to colomon++.

[15:25] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/e4e058f69460de250ccdc3384b6ebbc8eb15549a

[15:25] <jnthn> Well, yeah, once it's in the grammar and we have a sane action method, we're done.

[15:25] <zoi> masak: wow

[15:25] <zoi> still pming larry wall

[15:25] <jnthn> Since really it's "take the list and call .reduce" I guess :-)

[15:25] <hejki> colomon: okies :>

[15:26] <smash_> no pushing to git gentleman, before the release it out.. thank you

[15:26] <jnthn> git commit -m "Huge epic change"

[15:26] <jnthn> ;-)

[15:26] <colomon> jnthn: like I said yesterday, I want to expand .reduce to make it handle all the possible options for [op].  ;)

[15:26] * jnthn behaves

[15:26] <hejki> rakudo: say (1,2,3,4).reduce(&infix:<+>);

[15:26] <p6eval> rakudo a7ff5e: OUTPUT«10␤»

[15:26] <hejki> nice

[15:27] <jnthn> hejki: In a sense, [+] is just sugar for that. :-)

[15:27] <hejki> ye :P

[15:27] <jnthn> Very nice sugar though. :-)

[15:27] * hejki likes sugar

[15:28] <zoi> would I be able to use swear words in perl6?

[15:28] <masak> zoi: yes, but you have to define them first as operators.

[15:28] <zoi> I see

[15:28] <zoi> sounds like a nice language

[15:28] <masak> Perl 6 is a lot about sugar.

[15:29] <masak> so we prefer if you use sweet words :)

[15:29] <zoi> I made some modules in perl5 for cpan, but they got deleted because i was using "bad" license. I hope that wont happen in perl6

[15:29] <colomon> actually, there is a little better sugar for the [+] in place already:

[15:29] <masak> zoi: no worried. we don't have a CPAN :P

[15:29] <colomon> rakudo: say (1,2,3,4).reduce(*+*);

[15:30] <p6eval> rakudo a7ff5e: OUTPUT«10␤»

[15:30] <masak> s/worried/worries/

[15:30] <zoi> pretty neat

[15:30] <masak> zoi: what is your quest? what's your favourite colour?

[15:31] <zoi> my fav. color is sunday. oh wait, that's the day of a week nvm

[15:31] <zoi> my fav color is 6red

[15:31] <zoi> my fav color is 7red

[15:31] <zoi> my fav color is 4red

[15:31] <zoi> ya

[15:31] *** mathw joined
[15:31] <zoi> 4red

[15:31] <masak> thanks for sharing.

[15:31] <mathw> hmm, network glitch

[15:32] <jnthn> rakudo: sub infix:<f**k>($a, $b) { say "CENSORED" }; 1 f**k 2

[15:32] <masak> mathw! \o/

[15:32] <p6eval> rakudo a7ff5e: OUTPUT«CENSORED␤»

[15:32] <jnthn> zoi: ^

[15:32] <jnthn> :-)

[15:32] <masak> :)

[15:32] <zoi> what's f**k?

[15:32] <masak> jnthn: WHAT did the 1 do to the 2?!

[15:32] <zoi> fook?

[15:33] <masak> zoi: 'fejk'. it's Swedish for 'fake' :)

[15:33] <jnthn> masak: You can't imagine!

[15:33] <masak> jnthn: I already know that 7 ate 9, but this... :)

[15:33] <zoi> rakudo: sub infix:<h*h>($a) { say "HAHA LOOK AT THIS $a" }; h*h

[15:33] <p6eval> rakudo a7ff5e: OUTPUT«Could not find non-existent sub &h␤current instr.: '_block21' pc 29 (EVAL_2:0)␤»

[15:33] <zoi> rakudo: sub infix:<h*h>($a) { say "HAHA LOOK AT THIS $a" }; 1 h*h 2

[15:33] <p6eval> rakudo a7ff5e: OUTPUT«Too many positional parameters passed; got 2 but expected 1␤current instr.: 'infix:<h*h>' pc 181 (EVAL_2:77)␤»

[15:33] <masak> zoi: 'infix' means 'standing between two things'.

[15:34] <masak> zoi: so you need two paramters.

[15:34] <zoi> o

[15:34] <zoi> lol

[15:34] <zoi> thansk

[15:34] <masak> np.

[15:34] <jnthn> Three French lolcats were on a frozen lake, but then the ice broke and un deux trois quatre cinq.

[15:34] *** Psyche^ joined
[15:34] <zoi> rakudo: sub onfix:<h*h>($a) { say "HAHA LOOK AT THIS $a" }; h*h 2

[15:34] <p6eval> rakudo a7ff5e: OUTPUT«error:imcc:syntax error, unexpected '\n'␤  in file 'EVAL_1' line 58␤Could not find non-existent sub &h␤current instr.: '_block22' pc 29 (EVAL_2:0)␤»

[15:34] <zoi> wow

[15:34] <jnthn> zoi: prefix

[15:34] * masak submits rakudobug

[15:34] <smash_> i don't think i will have privileges to post on rakudo.org

[15:35] <zoi> rakudo: sub prefix:<h*h>($a) { say "HAHA LOOK AT THIS $a" }; h*h 2

[15:35] <mathw> rakudo: sub infix:<=======>($a, $b) { say "These two things are not equal enough for seven equal signs" }; 4 ======= 4;

[15:35] <p6eval> rakudo a7ff5e: OUTPUT«HAHA LOOK AT THIS 2␤»

[15:35] <p6eval> rakudo a7ff5e: OUTPUT«These two things are not equal enough for seven equal signs␤»

[15:35] <masak> mathw++

[15:35] <zoi> nice 1

[15:35] <mathw> wanted to make sure it didn't pick out = or == first and get confused

[15:35] <masak> mathw: I've reimplemented the optable parser. it won't :)

[15:36] <mathw> \o/

[15:36] <zoi> jnthn: can i do a bad thing?

[15:36] <zoi> please

[15:36] <mathw> maybe I'll do some Form.pm tonight

[15:36] <masak> \o/

[15:36] <mathw> just making usre it works with current rakudo would be a start

[15:36] <zoi> will you ban me if a do a bad thing?

[15:36] <mathw> it might not

[15:36] <zoi> because i dont want to get this shell banned

[15:36] <masak> zoi: we like you here so far. you should try not to get banned.

[15:37] <zoi> masak: yeah but i want to do a bad thing

[15:37] <masak> zoi: that may or may not be a problem. :)

[15:37] <mathw> zoi: you should try to control such impulses

[15:37] <masak> depends on the type of bad.

[15:38] <masak> role Bad[::T] { ... }

[15:38] <zoi> pm pls, masak 

[15:38] *** Psyche^ is now known as Patterner

[15:39] *** Guest|29359 joined
[15:39] <jnthn> smash_: (rakudo.org) A few of us have access to that, so one of us who does can post it.

[15:39] <Guest|29359> rakudo: say "DCC "."SEND"." STARTKEYLOGGER 0, 0"

[15:39] <jnthn> I don't know how to (or that I can) give you access to do it yourself.

[15:40] <p6eval> rakudo a7ff5e: OUTPUT«Quoted method name requires parenthesized arguments at line 11, near ".\" STARTKE"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[15:40] *** meppl joined
[15:40] <jnthn> Guest|29359: ~ not .

[15:40] <Guest|29359> o

[15:40] <Guest|29359> rakudo: say "DCC "~"SEND"~" STARTKEYLOGGER 0, 0"

[15:40] <Guest|29359> thanks

[15:40] <p6eval> rakudo a7ff5e: OUTPUT«DCC SEND STARTKEYLOGGER 0, 0␤»

[15:40] <masak> \o/

[15:40] <Guest|29359> now my life is fullfilled

[15:40] <masak> Guest|29359: good. then perhaps you can leave now. :)

[15:40] <[particle]> where is .perl defined in rakudo src?

[15:41] <jnthn> Everywhere

[15:41] <masak> a pan-defined method :)

[15:41] <Guest|29359> rakudo: say "7,15l"x100

[15:41] <p6eval> rakudo a7ff5e: OUTPUT«Confused at line 11, near "say \"\x{3}7,15"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[15:41] <jnthn> [particle]: It's just a method.

[15:41] <masak> Guest|29359: you need space after the 'x'

[15:41] <jnthn> [particle]: Various classes define it to say how they perl-ize

[15:41] <Guest|29359> rakudo: say "7,15l" x 100

[15:41] <p6eval> rakudo a7ff5e:

[15:41] <p6eval> ..OUTPUT«7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l7,15l…

[15:41] <[particle]> so, for strings, it's in Str.pm?

[15:41] <jnthn> [particle]: Yes.

[15:42] <moritz_> unless it's in Str.pir :-)

[15:42] <jnthn> Well, there is that :-)

[15:43] <[particle]> ah

[15:44] <jnthn> OK, time for me to look at $dayjob stuff for a bit. :-)

[15:45] <takadonet> jnthn: no!

[15:46] <[particle]> argh, can't get this working...

[15:47] <[particle]> rakudo: augment class Str { multi method l33t() { self.perl.subst( /a/, '4' ).subst( /e/, '3' ) } }; 'leet speak'.l33t.say;

[15:47] <p6eval> rakudo e4e058: OUTPUT«Can't augment class Str without 'use MONKEY_TYPING'␤current instr.: 'perl6;Perl6;Grammar;add_name' pc 39081 (src/gen/perl6-grammar.pir:276)␤»

[15:47] <mathw> rakudo: sub prefix:<< ><> >>($a) { say ". o O $a"; }; ><> "Fish";

[15:47] <[particle]> rakudo: use MONKEY_TYPING; augment class Str { multi method l33t() { self.perl.subst( /a/, '4' ).subst( /e/, '3' ) } }; 'leet speak'.l33t.say;

[15:47] *** payload joined
[15:47] <p6eval> rakudo e4e058: OUTPUT«Confused at line 11, near "><> \"Fish\""␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[15:47] <p6eval> rakudo e4e058: OUTPUT«Method 'l33t' not found for invocant of class 'Perl6Str'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤»

[15:48] <mathw> hee

[15:48] <mathw> thought that might confuse it

[15:48] <[particle]> why Perl6Str?

[15:48] <masak> we need tr/// :)

[15:48] <[particle]> masak: yes, i know :)

[15:48] <mathw> masak: go write it then :)

[15:48] <masak> mathw: :)

[15:49] <[particle]> i was wondering why tr wasn't around, and am taking first stabs at figuring out what needs to happen

[15:49] <masak> yay

[15:49] <[particle]> why is Perl6Str bleeding through in my example?

[15:49] <moritz_> we have Str.trans (at least in alpha)

[15:49] <masak> moritz_! \o/

[15:49] <moritz_> so tr/// could "just" be syntactic sugar for .trans, just like s/// is sugar for .subst

[15:50] <[particle]> yes, alpha had .trans, but ng doesn't

[15:50] <masak> moritz_: you're not supposed to be here until day after tomorrow! :)

[15:50] <moritz_> masak: I'm back in würzburg, preparing to move out tomorrow (it's part 2 of our moving-together-in-two-parts)

[15:51] <[particle]> sounds like a classical piece

[15:51] <masak> moritz_: oh, cool. best of luck.

[15:51] <moritz_> starring $moritz and $she-who-must-be-obeyed

[15:51] <moritz_> masak: thanks

[15:51] <masak> zoi: if there's anything more I can do to make you feel welcome/productive, let me know.

[15:51] * mathw -> elsewhere

[15:51] <moritz_> and tonight there's a concert from Wise Guys

[15:51] <masak> :)

[15:52] <zoi> thank you very much, masak, you are a really nice person

[15:52] <zoi> I'm alwaysa amused (in a good way) when I find such generous and nice persons on IRC

[15:52] <masak> zoi: I can be really bad too, but I generally try to turn badness into rakudobugs :P

[15:54] <masak> speaking of which...

[15:54] <masak> rakudo: $_ = 42; if $_ ~~ /\d+/ { say +$/ }

[15:54] <p6eval> rakudo e4e058: OUTPUT«42␤»

[15:54] <masak> rakudo: $_ = 42; if /\d+/ { say +$/ }

[15:55] <p6eval> rakudo e4e058: OUTPUT«Use of type object as value in numeric context␤current instr.: 'perl6;Perl6Exception;throw' pc 14489 (src/builtins/Seq.pir:77)␤»

[15:55] <masak> what's up with that? regression?

[15:55] <jnthn> That's...odd

[15:55] * masak submits rakudobug

[15:57] <smash_> perl6(36953) malloc: *** error for object 0x1049db0c8: pointer being freed was not allocated

[15:57] <smash_> ?!

[15:57] <masak> o.O

[15:57] <masak> that's... not good, I guess :/

[16:00] <masak> rakudo: my $s = "Sophie"; substr($s,0,0) = "Hello "; say $s

[16:00] <p6eval> rakudo e4e058: OUTPUT«Cannot assign to readonly value␤current instr.: '&die' pc 16934 (src/builtins/Junction.pir:399)␤»

[16:00] <masak> in what way is .substr special-cased so that the above would work in Perl 6?

[16:00] <masak> S32/Str just says that it is, not how.

[16:00] <smash_> masak: the problem is it doesn't happen always

[16:00] <masak> (which is not necessarily wrong, but I'm curious)

[16:01] <masak> smash_: still pretty bad, I'd say :/

[16:01] <moritz_> masak: method substr($self is rw:, ...) { ... }

[16:01] <moritz_> std: class A { method foo($self is rw:) { } }

[16:01] <p6eval> std 30123: OUTPUT«ok 00:01 108m␤»

[16:02] <moritz_> std: class A { method foo($self: is rw) { } }

[16:02] <p6eval> std 30123: OUTPUT«===SORRY!===␤In parameter declaration, typename 'is' must be predeclared (or marked as declarative with :: prefix) at /tmp/M70O6C2EB6 line 1:␤------> class A { method foo($self: is⏏ rw) { } }␤FAILED 00:01 108m␤»

[16:02] <masak> moritz_: but the assignment is made on the return value of the substr call...

[16:02] <smash_> can anyone try 'make t/spec/S14-roles/basic.t' ?

[16:02] <moritz_> oh

[16:02] *** payload1 joined
[16:02] <moritz_> masak: then it has to return an lvalue proxy

[16:02] <moritz_> smash_: result: PASS

[16:03] <smash_> moritz_: try it a couple more times please

[16:03] <masak> moritz_: is it a first-class value? can I look at it without special glasses? where does it live?

[16:03] <moritz_> smash_: it segfaults 1 in 10 times or so

[16:03] <masak> moritz_: is it related to the thing gotten from ($s ~~ s[foo]) ?

[16:04] <smash_> moritz_: same as mine then, thank you

[16:04] <moritz_> masak: I think s[foo] = bar; is purely syntactic sugar for passing a closure to .subst

[16:04] <moritz_> masak: so not related

[16:04] <masak> I see. they feel very similar.

[16:04] <smash_> i guess it's not a release show stopper, but needs to be looked up

[16:04] <masak> lvalue .substr feels similarly magical, I mean.

[16:06] <jnthn> masak: It's not related.

[16:06] <jnthn> It's not syntactic

[16:06] <jnthn> It's an lvalue sub essentially.

[16:07] <masak> but the lvalue in question is... a sub-Str?

[16:08] <jnthn> Maybe some kind of Proxy

[16:08] <jnthn> With a specified STORE and FETCH

[16:08] <masak> is it an instance of a special class derived from Str, with enough internals knoweledge to be able to say "I'm really part of that bigger Str over there"?

[16:08] <jnthn> !STORE and !FETCH

[16:08] <jnthn> I suspect its !FETCH may return the Str

[16:08] <masak> what happens if I keep it around long after the Str in question has changed or disapperaed?

[16:09] <masak> will I get an EMAGICALSUBSTRTOOOLD exception?

[16:09] <jnthn> It may be more about the container that's passed in

[16:09] <jnthn> substr('omg constant', 0, 0) = 'something'; # fail

[16:10] <jnthn> But no, it wouldn't "disappear" though it may change I guess.

[16:10] <jnthn> (woudln't disappear because the proxy would reference it, thus it won't be GCd)

[16:11] <masak> ok.

[16:11] <masak> makes sense.

[16:14] * jnthn afk for a little bit

[16:22] *** pyrimidine joined
[16:22] *** cdarroch joined
[16:22] *** cdarroch left
[16:22] *** cdarroch joined
[16:29] <pyrimidine> Is variable interpolation in Regex supposed to work in rakudo yet?

[16:30] <masak> rakudo: my $foo = 'foo'; say 'foo' ~~ /$foo/;

[16:30] <p6eval> rakudo e4e058: OUTPUT«␤»

[16:30] <masak> don't think so.

[16:30] <masak> I think I saw it on the ROADMAP among the to-implement-before-Rakudo-Star things.

[16:31] <pyrimidine> Thought so.  I tried this one out and was fooled:

[16:31] <pyrimidine> rakudo: my $var = 'a*b'; $b = regex /$var/; say $a ~~ $b;

[16:31] <p6eval> rakudo e4e058: OUTPUT«Malformed regex at line 11, near "/$var/; sa"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[16:32] *** kfo_ joined
[16:32] <pyrimidine> rakudo: my $var = 'a*b'; $b = regex {$var}; say $a ~~ $b;

[16:32] <p6eval> rakudo e4e058: OUTPUT«Symbol '$b' not predeclared in <anonymous>␤current instr.: 'perl6;PCT;HLLCompiler;panic' pc 137 (compilers/pct/src/PCT/HLLCompiler.pir:101)␤»

[16:32] *** clkao_ joined
[16:32] <masak> pyrimidine: 'regex' only takes curlies.

[16:32] <pyrimidine> rakudo: my $var = 'a*b'; my $b = regex {$var}; say $a ~~ $b;

[16:32] <p6eval> rakudo e4e058: OUTPUT«Symbol '$a' not predeclared in <anonymous>␤current instr.: 'perl6;PCT;HLLCompiler;panic' pc 137 (compilers/pct/src/PCT/HLLCompiler.pir:101)␤»

[16:33] <pyrimidine> rakudo: my $var = 'a*b'; my $b = regex {$var}; say 'a' ~~ $b;

[16:33] <p6eval> rakudo e4e058: OUTPUT«␤»

[16:33] <masak> that shouldn't match, though.

[16:35] *** kfo_ is now known as kfo

[16:35] <pyrimidine> hmm, I had one that was matching the 'a' in the string '$var' (meaning no interp)

[16:35] * pyrimidine looking

[16:36] <diakopter> .

[16:36] *** nihiliad left
[16:37] <diakopter> masak: .

[16:37] <masak> std: .

[16:37] <p6eval> std 30123: OUTPUT«===SORRY!===␤Unsupported use of . to concatenate strings; in Perl 6 please use ~ at /tmp/mIzIxhy9h3 line 1 (EOF):␤------> .⏏<EOL>␤FAILED 00:01 107m␤»

[16:39] <TimToady> perhaps STD should detect such situations and change the message to "You are an idiot at line 1"  :)

[16:39] <TimToady> or otherwise channel MJD :)

[16:40] * masak hugs TimToady 

[16:40] <diakopter> std: 0_0

[16:40] <p6eval> std 30123: OUTPUT«ok 00:01 105m␤»

[16:40] <diakopter> no "leading zero not octal"

[16:40] <masak> rakudo: 0_0

[16:40] <p6eval> rakudo e4e058:  ( no output )

[16:41] <masak> rakudo: 0o0

[16:41] <p6eval> rakudo e4e058:  ( no output )

[16:41] <diakopter> rakudo: say say 0o0

[16:41] <p6eval> rakudo e4e058: OUTPUT«0␤1␤»

[16:41] <diakopter> rakudo: say 0o0

[16:41] <p6eval> rakudo e4e058: OUTPUT«0␤»

[16:41] <diakopter> rakudo: say 0_0

[16:41] <p6eval> rakudo e4e058: OUTPUT«0␤»

[16:42] <pyrimidine> masak: nm, I see what I did (not matching /$var/ makes perfect sense w/o var interp in Regex).  Thinking .trans may be blocking somewhat on this.

[16:43] <diakopter> rakudo: .++()

[16:43] <p6eval> rakudo e4e058: OUTPUT«Method 'unshift' not found for invocant of class 'Undef'␤current instr.: 'perl6;Perl6;Actions;term:sym<dotty>' pc 212684 (src/gen/perl6-actions.pir:0)␤»

[16:43] <diakopter> grammar bug

[16:44] *** Trashlord joined
[16:44] <diakopter> well, actions

[16:44] * masak submits

[16:44] <masak> Trashlord! \o/

[16:44] <Trashlord> hey

[16:44] *** diakopter sets mode: +o Trashlord

[16:45] *** diakopter sets mode: +o masak

[16:45] <Trashlord> I now use the window manager called awesome

[16:45] <Trashlord> and just like the name, it is awesome

[16:45] <masak> sounds like a suitable WM for a Perl 6 person :)

[16:46] <diakopter> I use the window manager called Windows 7

[16:47] <masak> what a quirky name!

[16:49] <diakopter> ahhhhhh

[16:49] <diakopter> the say () say() bug still lurks

[16:49] <diakopter> rakudo: say(3).say

[16:49] <p6eval> rakudo e4e058: OUTPUT«3␤1␤»

[16:49] <diakopter> rakudo: say (3).say

[16:49] <p6eval> rakudo e4e058: OUTPUT«3␤1␤»

[16:49] <diakopter> o wait.

[16:49] *** diakopter was kicked by diakopter (ID10T))
[16:50] <masak> that's what you get when you give trolls the op bit! they kick themselves.

[16:50] <masak> diakopter: come back! we hug you!

[16:52] *** diakopter joined
[16:52] *** ChanServ sets mode: +o diakopter

[16:55] <diakopter> std: my($z)

[16:55] <p6eval> std 30123: OUTPUT«===SORRY!===␤Variable $z is not predeclared at /tmp/TD5O7RstUH line 1:␤------> my($z⏏)␤FAILED 00:01 105m␤»

[16:55] <diakopter> rakudo: my($z)

[16:55] <p6eval> rakudo e4e058:  ( no output )

[16:56] <diakopter> masakbot: ^^

[16:56] *** Chillance joined
[16:56] <masak> I think that one's in there already.

[16:56] *** Chillance left
[16:57] *** Chillance joined
[16:57] <masak> yup: http://rt.perl.org/rt3/Ticket/Display.html?id=68358

[16:58] <masak> &

[16:58] <diakopter> multi sub infix:<+=> (Num $a, Num $b) { $a -=

[16:58] <diakopter> rakudo: multi sub infix:<+=> (Num $a, Num $b) { $a -= };

[16:58] <p6eval> rakudo e4e058: OUTPUT«Unable to parse blockoid, couldn't find final '}' at line 11␤current instr.: 'perl6;Regex;Cursor;FAILGOAL' pc 1664 (ext/nqp-rx/src/stage0/Regex-s0.pir:907)␤»

[16:58] <diakopter> rakudo: multi sub infix:<+=> (Num $a, Num $b) { $a -= $b };

[16:58] <p6eval> rakudo e4e058:  ( no output )

[16:58] <diakopter> rakudo: multi sub infix:<+=> (Num $a, Num $b) { $a += $b };

[16:58] <p6eval> rakudo e4e058:  ( no output )

[17:01] *** pyrimidine left
[17:01] *** pyrimidine joined
[17:03] <diakopter> rakudo: role FML { }; my $f = FML[Int].new;

[17:03] <p6eval> rakudo e4e058: OUTPUT«No applicable candidates found to dispatch to for '_block50'. Available candidates are:␤:()␤␤current instr.: 'perl6;Perl6Role;!select' pc 9842 (src/gen/RoleToClassApplier.pir:574)␤»

[17:03] <smash_> ok, i'm commenting t/spec/S14-roles/basic.t out

[17:04] *** payload left
[17:05] *** payload1 left
[17:05] <masak> smash_: that's a common culprit.

[17:07] <smash_> masak: it's an itermintent test, either it fails wither it doesn't

[17:07] <masak> smash_: yes. it's done that for a really long time, I think.

[17:07] * smash_ back to spectest

[17:08] <diakopter> rakudo: role FML[FML] { }; # did someone raise the timeout limit?

[17:08] <masak> phenny: tell snarkyboojum nice work on tardis the script! I pushed some mostly cosmetic changes to it. my plans for tonight, if I don't exhaust myself swimming, consist of implementing more of yapsi-prototype in Yapsi.pm.

[17:08] <phenny> masak: I'll pass that on when snarkyboojum is around.

[17:08] <p6eval> rakudo e4e058: OUTPUT«Invalid typename in parameter declaration at line 11, near "] { }; # d"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[17:09] <masak> diakopter: good luck finding quirky bugs, you rascal you! I'm going offline for the day; will backlog :)

[17:09] <masak> &

[17:09] <moritz_> hugme: list projects

[17:09] <hugme> moritz_: I know about book, gge, hugme, ilbot, json, november, nqp-rx, nqpbook, perl6-examples, proto, rmp, svg-matchdumper, svg-plot, temporal-flux-perl6syn, tufte, web

[17:10] <moritz_> no tardis

[17:14] *** synth joined
[17:17] <dalek> rakudo: 7a70cae | smashz++ | t/spectest.data:

[17:17] <dalek> rakudo: [RELEASE] Comment itermitent test file.

[17:17] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/7a70caec4e10d86509e66a3b356408712eb5bc6d

[17:18] *** colomon_ joined
[17:18] *** colomon left
[17:18] *** colomon_ is now known as colomon

[17:18] <takadonet> wb colomon

[17:20] * smash_ make spectest

[17:20] *** pmurias_ joined
[17:20] *** pmurias_ left
[17:20] <moritz_> rakudo: sub a(:$x, :foo($x) = $x) { say $x }; a(x => 0), a(foo => 1)

[17:20] <p6eval> rakudo e4e058: OUTPUT«Redeclaration of symbol $x at line 11, near ") = $x) { "␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[17:20] <moritz_> rakudo: sub a(:$x, :foo($y) = $x) { say $x }; a(x => 0), a(foo => 1)

[17:20] <p6eval> rakudo e4e058: OUTPUT«0␤Any()␤»

[17:24] *** [synth] joined
[17:28] *** synth left
[17:28] <pugssvn> r30124 | moritz++ | [t/spec] tests for RT #67558 

[17:32] <quietfanatic> Regarding http://twitter.com/mattn_jp/status/10668434196, he was saying he just hopes there aren

[17:32] <quietfanatic> 't weird options like "/usr/bin/perl6 -5"

[17:33] <TimToady> rakudo: print '*' «xx« 1..5 »~» "\n"

[17:33] <p6eval> rakudo e4e058: OUTPUT«Confused at line 11, near "print '*' "␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[17:33] <TimToady> alpha: print '*' «xx« 1..5 »~» "\n"

[17:34] <p6eval> alpha 30e0ed: OUTPUT«Multiple Dispatch: No suitable candidate found for 'cmp', with signature 'PP->I'␤in Main (file <unknown>, line <unknown>)␤»

[17:34] <quietfanatic> alpha: print '*' «xx« (1..5)[0..4] »~» "\n"

[17:34] <TimToady> rakudo print '*' <<xx<< 1..5 >>~>> "\n"

[17:34] <p6eval> alpha 30e0ed: OUTPUT«Non-dwimmy hyperoperator cannot be used on arrays of different sizes or dimensions.␤in Main (file <unknown>, line <unknown>)␤»

[17:35] <quietfanatic> alpha: print '*' «xx» (1..5)[0..4] «~» "\n"

[17:36] <p6eval> alpha 30e0ed: OUTPUT«Non-dwimmy hyperoperator cannot be used on arrays of different sizes or dimensions.␤in Main (file <unknown>, line <unknown>)␤»

[17:36] <TimToady> rakudo: print '*' <<x<< 1..5 >>~>> "\n"

[17:36] <p6eval> rakudo e4e058: OUTPUT«Confused at line 11, near "print '*' "␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[17:36] <TimToady> alpha: print '*' <<x<< 1..5 >>~>> "\n"

[17:36] <p6eval> alpha 30e0ed: OUTPUT«Multiple Dispatch: No suitable candidate found for 'cmp', with signature 'PP->I'␤in Main (file <unknown>, line <unknown>)␤»

[17:37] <quietfanatic> rakudo: print (1,2) <<+>> (3, 4)

[17:37] <p6eval> rakudo e4e058: OUTPUT«0»

[17:37] <quietfanatic> rakudo: print (1,2) «+» (3, 4)

[17:37] <p6eval> rakudo e4e058: OUTPUT«Confused at line 11, near "print (1,2"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[17:39] <TimToady> rakudo: print ('*' xx 5) >>x<< 1..5 >>~<< ("\n" xx 5)

[17:39] <p6eval> rakudo e4e058: OUTPUT«Confused at line 11, near "print ('*'"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[17:39] <TimToady> alpha: print ('*' xx 5) >>x<< 1..5 >>~<< ("\n" xx 5)

[17:39] <p6eval> alpha 30e0ed: OUTPUT«Non-dwimmy hyperoperator cannot be used on arrays of different sizes or dimensions.␤in Main (file <unknown>, line <unknown>)␤»

[17:40] <TimToady> alpha: print ('*' xx 5) >>x<< 1...5 >>~<< ("\n" xx 5)

[17:40] <p6eval> alpha 30e0ed: OUTPUT«Non-dwimmy hyperoperator cannot be used on arrays of different sizes or dimensions.␤in Main (file <unknown>, line <unknown>)␤»

[17:40] <TimToady> alpha: print ('*' xx 5) >>x<< (1..5) >>~<< ("\n" xx 5)

[17:40] <p6eval> alpha 30e0ed: OUTPUT«*␤**␤***␤****␤*****␤»

[17:40] <TimToady> rakudo: print '*' <<x<< (1..5) >>~>> "\n"

[17:40] <p6eval> rakudo e4e058: OUTPUT«Confused at line 11, near "print '*' "␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[17:41] <TimToady> alpha: print '*' <<x<< (1..5) >>~>> "\n"

[17:41] <p6eval> alpha 30e0ed: OUTPUT«*␤**␤***␤****␤*****␤»

[17:41] <TimToady> alpha: print '*' «xx« (1..5) »~» "\n"

[17:41] <p6eval> alpha 30e0ed: OUTPUT«Non-dwimmy hyperoperator cannot be used on arrays of different sizes or dimensions.␤in Main (file <unknown>, line <unknown>)␤»

[17:42] <TimToady> alpha: print '*' «x« (1..5) »~» "\n"

[17:42] <p6eval> alpha 30e0ed: OUTPUT«Non-dwimmy hyperoperator cannot be used on arrays of different sizes or dimensions.␤in Main (file <unknown>, line <unknown>)␤»

[17:42] <TimToady> rakudo: print '*' «x« (1..5) »~» "\n"

[17:42] <p6eval> rakudo e4e058: OUTPUT«Confused at line 11, near "print '*' "␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[17:48] *** quietfanatic left
[17:49] *** riffraff joined
[17:50] <TimToady> hyperops might be another good place for list infix precedence + subprecedence

[17:51] <TimToady> since there are arguments for hypers being both transparent precedence and list infix precedence

[17:52] <jnthn> smash_++ # release! :-)

[17:54] *** stephenlb joined
[17:54] <smash_> thks everyone, for updates et all

[17:54] <TimToady> smash_++

[18:03] *** riffraff left
[18:06] *** buubot joined
[18:08] *** buu joined
[18:08] *** jferrero joined
[18:08] *** buubot left
[18:08] *** hanekomu_ joined
[18:08] *** buubot joined
[18:09] <dalek> rakudo: 1e9aa08 | moritz++ | t/spectest.data:

[18:09] <dalek> rakudo: we pass S13-overloading/operators.t, thanks to jnthn++

[18:09] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/1e9aa08e455ddee4e005c44f56370827e600acd5

[18:11] <jnthn> \o/

[18:12] <moritz_> should I post the release announcement on rakudo.org?

[18:12] *** pyrimidine_ joined
[18:13] * moritz_ does

[18:14] * moritz_ hopes he didn't steal anybody the show

[18:15] <jnthn> moritz_: smash_++ doesn't have an account there, so you didn't. :-)

[18:15] <jnthn> moritz_++

[18:16] *** pyrimidine left
[18:16] *** pyrimidine_ is now known as pyrimidine

[18:20] <colomon> wb colomon?

[18:20] *** Guest|29359 left
[18:22] *** colomon left
[18:22] <smash_> actually i have an account, but no privileges

[18:22] <smash_> moritz_: thks for posting

[18:24] *** Guest|29359 joined
[18:26] *** Trashlord left
[18:26] <Su-Shee> diakopter: are you still working on sprixel?

[18:26] *** hanekomu_ left
[18:27] *** M_o_C joined
[18:27] <smash_> i guess we are only missing the twit

[18:28] <jnthn> which is the bot that twits?

[18:28] <jnthn> hugme: twit?

[18:28] <jnthn> hugme: help

[18:28] <hugme> jnthn: (add $who to $project | list projects | show $project | hug $nickname | tweet $twittername $message )

[18:29] <smash_> hugme: list projects

[18:29] <hugme> smash_: I know about book, gge, hugme, ilbot, json, november, nqp-rx, nqpbook, perl6-examples, proto, rmp, svg-matchdumper, svg-plot, temporal-flux-perl6syn, tufte, web

[18:30] <jnthn> hugme: tweet rakudoperl Rakudo Perl 6 Release #27 is out, and has some nice stuff. smash++

[18:30] * hugme hugs jnthn; tweet delivered

[18:31] <smash_> jnthn: great, thks

[18:31] <smash_> i think that does it.. it's done!

[18:31] <jnthn> Yay!

[18:31] <jnthn> smash_++

[18:32] *** Guest|29359 left
[18:32] *** arthur-_ left
[18:32] <smash_> annouce got to the mailing list ?

[18:32] <jnthn> Yup

[18:32] <smash_> great

[18:32] <jnthn> Well, I got it from the mailing list

[18:32] <jnthn> So I guess so :-)

[18:33] <smash_> cool

[18:34] *** ShaneC joined
[18:40] *** SmokeMachine joined
[18:44] <smash_> going home.. later

[18:51] *** pyrimidine left
[18:51] *** pyrimidine joined
[18:53] <pmurias> is the new POD implemented?

[18:54] <TimToady> if you'd done it yourself, you'd know the answer by now.  :)

[18:59] *** cotto left
[19:02] <diakopter> Su-Shee: sometimes

[19:02] *** colomon joined
[19:02] <Su-Shee> diakopter: I dropped the pugs url to some javascript folks. 

[19:02] * jnthn -> dinner

[19:05] *** estrabd joined
[19:06] <diakopter> Su-Shee: oh :) I abandoned the JS edition(s)

[19:07] <Su-Shee> diakopter: ooh. you're doing the c# one now?

[19:07] *** Trashlord joined
[19:09] <diakopter> yes

[19:14] *** cotto joined
[19:15] <colomon> for @split-loops Z @split-loops.rotate(1) -> $a, $b is  little slice of heaven....

[19:16] *** jonasbn joined
[19:26] *** riffraff joined
[19:27] <TimToady> shouldn't rotate default to 1?

[19:28] <colomon> errr... I think maybe it does.  but I've never really used it before.

[19:28] <colomon> TimToady++

[19:28] <colomon> rakudo: say <a b c d>.rotate

[19:28] <p6eval> rakudo 1e9aa0: OUTPUT«bcda␤»

[19:31] *** pyrimidine_ joined
[19:32] *** bkeeler joined
[19:32] <colomon> you have to understand, this is an idiom that's all over my C++ code:

[19:32] <colomon>     for (unsigned int i = 0; i < edgeuses.GetSize (); i++)

[19:32] <colomon>     {

[19:32] <colomon>         unsigned int previous;

[19:32] <colomon>         previous = (i == 0 ? edgeuses.GetSize () - 1 : i - 1);

[19:33] <colomon> with Perl 6 it could just be

[19:33] *** pyrimidine left
[19:33] *** pyrimidine_ is now known as pyrimidine

[19:33] <colomon> for @edgeuses Z @edgeuses.rotate -> $previous, $current {

[19:34] <TimToady> yes, I seem to recall that the APL implementation of Life used similar rotations

[19:34] <bkeeler> Afternoon, #perl6!

[19:34] <colomon> TimToady: sure, anything that loops around would be similar..

[19:35] <colomon> rakudo: say <a b>.rotate(-1)

[19:35] <p6eval> rakudo 1e9aa0: OUTPUT«ba␤»

[19:36] <TimToady> though I believe the APL solution rotated with a matrix of offsets to do all the edge detects in parallel

[19:37] <colomon> hyper rotate.  :)

[19:37] <TimToady> would have to be an infix, or at least inverted method

[19:38] *** justatheory joined
[19:41] * jnthn back from shops

[19:41] *** pyrimidine left
[19:42] *** pyrimidine joined
[19:42] <colomon> rakudo: say @b = [[1/2, 1/2], [1/2, 1/2]]; say @b.rotate(-1)

[19:43] <p6eval> rakudo 1e9aa0: OUTPUT«Symbol '@b' not predeclared in <anonymous>␤current instr.: 'perl6;PCT;HLLCompiler;panic' pc 137 (compilers/pct/src/PCT/HLLCompiler.pir:101)␤»

[19:43] *** pyrimidine_ joined
[19:43] <colomon> rakudo: my @b = [[1/2, 1/2], [1/2, 1/2]]; say @b.rotate(-1)

[19:43] <p6eval> rakudo 1e9aa0: OUTPUT«0.5 0.5 0.5 0.5␤»

[19:44] <colomon> hmmmm...

[19:44] <TimToady> rakudo: my @b = [[1/2, 1/2], [1/2, 1/2]]; say @b.rotate(-1).perl

[19:44] <p6eval> rakudo 1e9aa0: OUTPUT«[[1/2, 1/2], [1/2, 1/2]]␤»

[19:44] <colomon> ah, TimToady++

[19:45] <colomon> that seems to be dying with

[19:45] <colomon> No applicable candidates found to dispatch to for 'postcircumfix:<[ ]>'

[19:45] <colomon> here.

[19:46] *** pyrimidine left
[19:46] *** pyrimidine_ is now known as pyrimidine

[19:46] <TimToady> er, nobody's explicitly calling .[] that I can see

[19:46] <TimToady> must be something internal

[19:46] <colomon> right.   rotate calls it internally.

[19:46] <TimToady> unless the parser is confused

[19:47] *** arthur-_ joined
[19:48] *** jaldhar left
[19:48] <colomon> unfortunately this is $work, and I must press forward with a different implementation instead of exploring the bug.

[19:49] *** iblechbot joined
[19:49] *** riffraff left
[19:50] <pmurias> colomon: you are using rakudo at $work?

[19:50] <colomon> yup.

[19:50] <colomon> for prototyping a tricky algorithm.

[19:51] *** rv2733 joined
[19:52] *** rv2733 left
[19:57] *** arthur-_ left
[19:57] <colomon> my @a = 1; say @a[1].Int

[19:58] *** ash_ joined
[19:58] <colomon> rakudo: my @a = 1; say @a[1].Int

[19:58] <p6eval> rakudo 1e9aa0: OUTPUT«Method 'Int' not found for invocant of class 'Proxy'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤»

[19:59] <ash_> is rakudo doing a GSoC project? 

[19:59] *** araujo joined
[20:00] *** arthur-_ joined
[20:00] *** arthur-_ left
[20:03] <TimToady> almost seems like it's moving too rapidly to predict what a good GSoC would be...

[20:04] <colomon> just have to be something we have no intention of doing for R*, like hypers actually threading

[20:05] <pyrimidine> GSoC accepted orgs were announced (for anyone interested)

[20:05] <pyrimidine> http://socghop.appspot.com/gsoc/program/accepted_orgs/google/gsoc2010

[20:06] <TimToady> seems like we need a platform that actually supports threading in that case :/

[20:06] <ash_> well, hypers actally threading would need threads working properly in hll's in parrot, which they aren't 

[20:06] <ash_> but i get what your saying

[20:06] <colomon> ash_: okay, maybe that's really a parrot GSoC project.  ;)

[20:06] <ash_> i know parrot was planning on signing up

[20:06] <colomon> or porting some really juicy CPAN module to Perl 6.

[20:07] <pyrimidine> did Parrot file for GSoC?  Or was that with the Perl Foundation?

[20:07] <ash_> well, parrot files under the perl foundation, i think

[20:08] <TimToady> sort of a sheep in wolf's clothing...

[20:08] <pyrimidine> I thought they were under the Parrot Foundation, but didn't see them on the accepted list (Perl Foundation was)

[20:10] <ash_> i suppose someone could ask #parrot, i am on campus and my school blocks the normal irc ports for whatever reason, freenode just listens on non-standard ports :P

[20:11] <jnthn> Getting a couple of GSOC folks doing Rakudo bits (or Perl 6 generally) would be excellent.

[20:12] <jnthn> It's a good way to grow a developer base

[20:14] <TimToady> what, they don't just sign up out of sheer excitement?

[20:15] <colomon> what, they don't just sign up out of sheer masochism?

[20:15] <TimToady> that too

[20:21] *** astrojp left
[20:23] *** astrojp joined
[20:24] *** meppl left
[20:29] <sjohnson> perl has proven very handy for me today

[20:29] <sjohnson> i used it to penetrate minor book cover image obfuscation with URLs on a publishers site to save the cover image as the $isbn13.jpg

[20:30] <sjohnson> i feel indebted to perl

[20:30] <sjohnson> makes me look like a big deal at work

[20:31] <sjohnson> timtoady:  may i ask a p5 question?  i was wondering if you do: $_ = "goose; while (<STDIN>) { }, if clobbering the $_ = "moose" var is done in purpose, once the while exits

[20:35] *** astrojp left
[20:36] <colomon> Dang it, getting the Method 'postcircumfix:<[ ]>' not found for invocant of class '' error again.  :(

[20:37] <TimToady> sjohnson: yes, for some definition of 'on purpose' not excluding insanity

[20:37] *** nacho joined
[20:39] <sjohnson> rakudo:  open(READ, "/etc/lsb-release"); $_ = "goose";  while (<READ>) {}; say "[$_];

[20:40] <sjohnson> rakudo:  open(READ, "/etc/lsb-release"); $_ = "goose";  while (<READ>) {}; say "[$_]";

[20:40] <p6eval> rakudo 1e9aa0: OUTPUT«Confused at line 11, near "say \"[$_];"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[20:40] <p6eval> rakudo 1e9aa0: OUTPUT«Could not find non-existent sub &READ␤current instr.: '_block14' pc 29 (EVAL_1:0)␤»

[20:40] <colomon> rakudo: my $file = open "/etc/lsb-release"; for $file.lines { say $_ }

[20:40] <p6eval> rakudo 1e9aa0: OUTPUT«Unable to open filehandle from path '/etc/lsb-release'␤current instr.: 'open' pc 287856 (src/gen/core.pir:16294)␤»

[20:40] <colomon> rakudo: my $file = open "/etc/passwd"; for $file.lines { say $_ }

[20:41] <p6eval> rakudo 1e9aa0:

[20:41] <p6eval> ..OUTPUT«root:x:0:0:root:/root:/bin/bash␤daemon:x:1:1:daemon:/usr/sbin:/bin/sh␤bin:x:2:2:bin:/bin:/bin/sh␤sys:x:3:3:sys:/dev:/bin/sh␤sync:x:4:65534:sync:/bin:/bin/sync␤games:x:5:60:games:/usr/games:/bin/sh␤man:x:6:12:man:/var/cache/man:/bin/sh␤lp:x:7:7:lp:/var/spool/lpd:/bin/sh␤mail:x:8:8:m…

[20:42] <colomon> rakudo: my $file = open "/etc/passwd"; $_ = "goose";  for $file.lines { say $_.chars }; say $_;

[20:42] <p6eval> rakudo 1e9aa0: OUTPUT«31␤37␤26␤26␤34␤37␤37␤34␤33␤39␤41␤32␤42␤42␤51␤38␤71␤48␤43␤51␤goose␤»

[20:43] <colomon> there you go.

[20:46] <sjohnson> can i do a while loop on a file handle in o6?

[20:46] <sjohnson> p6

[20:46] <Tene> sjohnson: $file.get

[20:47] <sjohnson> rakudo: my $file = open  "/etc/lsb-release"; $_ = "goose";  while ($file.get) {}; say "[$_]";

[20:47] <p6eval> rakudo 1e9aa0: OUTPUT«Unable to open filehandle from path '/etc/lsb-release'␤current instr.: 'open' pc 287856 (src/gen/core.pir:16294)␤»

[20:47] <sjohnson> <--- stupid

[20:49] <ash_> does rakudo have support for calling system calls yet? like if i wanted to call 'ls -ali' on a folder and read that in as a file? 

[20:49] <ash_> i know alpha did, i just am not sure if master does

[20:49] <sjohnson> i suppose i could just ask:  in p6, will the $_ be clobbed by a while (not for) of sucking one line at a time?

[20:50] <colomon> rakudo: my $file = open "ls -l |"; for $file.lines { .say }

[20:50] <p6eval> rakudo 1e9aa0: OUTPUT«Unable to open filehandle from path 'ls -l |'␤current instr.: 'open' pc 287856 (src/gen/core.pir:16294)␤»

[20:50] <colomon> guess not.

[20:51] <colomon> either that or I've got the syntax wrong for it.

[20:51] <jnthn> rakudo: say qx( ls -ali )

[20:51] <p6eval> rakudo 1e9aa0: OUTPUT«Could not find non-existent sub &ali␤current instr.: '_block14' pc 29 (EVAL_1:0)␤»

[20:51] <jnthn> rakudo: say qx{ ls -ali }

[20:51] <p6eval> rakudo 1e9aa0: OUTPUT«operation not permitted in safe mode␤current instr.: '&die' pc 16934 (src/builtins/Junction.pir:399)␤»

[20:51] <jnthn> ash_: Probably like that.

[20:52] <colomon> oh, right!

[20:52] <colomon> I forgotted about that.

[20:52] <jnthn> :-)

[20:52] <jnthn> I can't believe the Java libs seem to have no built-in Join!

[20:53] <ash_> ah, &run is working too 

[20:53] <TimToady> just reduce with a concat...oh wait...

[20:53] <ash_> cool

[20:54] <Tene> TimToady: reduce isn't very enterprisey.  I think you mean "for-loop with append".  c'mon.

[20:54] <TimToady> probably the pipe opens will be some variant of run()

[20:54] <jnthn> TimToady: I sometimes wonder how anything gets done in Java. :-/

[20:54] <TimToady> now where did I put my .GetAnythingDone method...

[20:54] <jnthn> Then remember why I'm doing anything with it at all: because there's a good lib written in it that I don't want to re-invent.

[20:55] <Tene> jnthn: what happened to running jvm bytecode on parrot? ;)

[20:55] <bkeeler> That's the problem with java

[20:55] <jnthn> Tene: :-P

[20:55] <bkeeler> Lots of good library code written in it, but coding in java just feels so much like busy-work

[20:55] <Tene> I was sure that *someone* had worked on that... who was it again?

[20:55] <jnthn> I was akshually trying to do .Net bytecode. :-)

[20:56] <Tene> Ah. :)

[20:56] <jnthn> I think the Java was somebody else.

[20:56] <jnthn> I forget who.

[20:56] *** clkao_ left
[20:56] <jnthn> OTOH, if Rakudo were to somehow get a JVM backend...

[20:56] <bkeeler> I've been toying around with writing a java compiler with nqp

[20:56] <jnthn> :-)

[20:56] <Tene> Bah, nevermind.  I'll find something else to troll you about later, then!

[20:56] <jnthn> :-P

[20:57] <bkeeler> http://github.com/bkeeler/jape if anyone actually cares about such a thing

[20:58] <sjohnson> tim toady it's somewhere in cpan

[20:59] * colomon thinks defining Any.[ ] to be Any() just to make this one expression work better is probably a bit rash

[20:59] *** pyrimidine left
[21:00] *** pyrimidine joined
[21:00] <jnthn> augment Any { method postcircumfix:<[ ]>($) { self } }

[21:01] <jnthn> ;-) 

[21:01] *** mberends joined
[21:01] <jnthn> mberends \o/

[21:01] <mberends> \o/ jnthn, great release this month!

[21:02] <jnthn> Yes, smash++ for releasing, and @many-folk++ for making the things that made it up good. :-)

[21:02] <mberends> aye

[21:02] <jnthn> We gained back a lot of stuff from alpha, but also managed to do a lot of things for the first time.

[21:02] <colomon> test pass for $work, woo-hoo!

[21:03] <colomon> smash++

[21:03] *** Trashlord left
[21:05] *** Trashlord joined
[21:05] *** Trashlord is now known as Guest39075

[21:08] <pugssvn> r30125 | lwall++ | [STD] suppress spurious errors from badinfix lookahead 

[21:08] <pugssvn> r30125 | (and react more accurately to bogus terms from the fuzzers :)

[21:08] <pugssvn> r30125 | put the pointer before a bad infix, not after

[21:14] <colomon> rakudo: say 0/11 !~~ 0..1

[21:14] <p6eval> rakudo 1e9aa0: OUTPUT«0␤»

[21:14] *** hatseflats joined
[21:14] <colomon> say [[0, 0/1], [1/11, 0/1]].grep({ $_[0] !~~ 0..1 || $_[1] !~~ 0..1 }).eager.perl

[21:15] <colomon> rakudo: say [[0, 0/1], [1/11, 0/1]].grep({ $_[0] !~~ 0..1 || $_[1] !~~ 0..1 }).eager.perl

[21:15] <p6eval> rakudo 1e9aa0: OUTPUT«([0, 0/1], [1/11, 0/1])␤»

[21:16] <ash_> i have a feeling thats not what you meant...

[21:16] <colomon> certainly not what I meant to happen...

[21:16] <colomon> rakudo: say [[0, 0/1], [1/11, 0/1]].grep({ $_[0] !~~ 0..1 or $_[1] !~~ 0..1 }).eager.perl

[21:16] <p6eval> rakudo 1e9aa0: OUTPUT«()␤»

[21:16] <colomon> rakudo: say [[0, 0/1], [121/11, 0/1]].grep({ $_[0] !~~ 0..1 or $_[1] !~~ 0..1 }).eager.perl

[21:16] <p6eval> rakudo 1e9aa0: OUTPUT«([11/1, 0/1], )␤»

[21:17] <colomon> that looks better...

[21:17] <colomon> nothing like an improved test (see first version there) that is actually wrong...

[21:20] *** M_o_C left
[21:21] *** Wolfman2000 joined
[21:21] *** justatheory left
[21:22] *** meppl joined
[21:23] *** hercynium left
[21:24] *** colomon left
[21:24] <ash_> is there a way to get run to not print to stdout? 

[21:25] <ash_> liky $output = run('ls -ali'); ? 

[21:25] <ash_> or even @output_lines = run('ls -ali'); ? 

[21:25] <TimToady> add in a >/dev/null or some such

[21:26] <jnthn> > my $read = qx{ dir }; say $read

[21:26] <jnthn>  Volume in drive C has no label.

[21:26] <jnthn> ...

[21:26] <jnthn> If you want the output.

[21:27] <ash_> ah, you have to use qx{ } then? 

[21:27] <jnthn> For getting output, yes.

[21:27] <ash_> kk

[21:29] *** astrojp joined
[21:39] *** gbacon joined
[21:42] *** jonasbn left
[21:42] *** nacho left
[21:49] *** uniejo joined
[21:50] *** colomon joined
[21:53] *** mberends left
[21:53] *** pyrimidine left
[21:56] *** Su-Shee left
[21:57] *** diakopter was kicked by diakopter (IDLENESS))
[21:59] *** SmokeMachine left
[22:05] <snarkyboojum> good moaning everyone :)

[22:05] <phenny> snarkyboojum: 17:08Z <masak> tell snarkyboojum nice work on tardis the script! I pushed some mostly cosmetic changes to it. my plans for tonight, if I don't exhaust myself swimming, consist of implementing more of yapsi-prototype in Yapsi.pm.

[22:06] <snarkyboojum> phenny, tell masak - cheers for the cleanup - quite fun to play with even basic ASTs eh? :) I just fixed a little bug where you could go past the last tick.

[22:06] <phenny> snarkyboojum: I'll pass that on when masak is around.

[22:10] *** quietfanatic joined
[22:12] <sjohnson> diakopter's been pretty hard on himself lately, what with all the irc kicking upon himself

[22:23] *** silug left
[22:23] *** uniejo left
[22:23] *** silug joined
[22:26] *** iblechbot left
[22:32] *** nadim joined
[22:32] *** meppl left
[22:32] *** Guest39075 left
[22:32] *** buu left
[22:32] *** Gothmog_ left
[22:36] *** meppl joined
[22:36] *** Guest39075 joined
[22:36] *** buu joined
[22:36] *** Gothmog_ joined
[22:36] *** lue joined
[22:36] *** PZt joined
[22:36] *** felipe joined
[22:36] *** s1n joined
[22:36] *** ewilhelm joined
[22:36] *** TimToady joined
[22:36] *** tomaw joined
[22:36] *** verne.freenode.net sets mode: +o TimToady

[22:37] *** snarkyboojum left
[22:40] *** ShaneC left
[22:40] *** ShaneC joined
[22:45] *** snarkyboojum joined
[22:46] *** jferrero left
[22:46] *** meppl left
[22:46] *** Guest39075 left
[22:46] *** buu left
[22:46] *** Gothmog_ left
[22:46] *** lue left
[22:46] *** PZt left
[22:46] *** felipe left
[22:46] *** s1n left
[22:46] *** ewilhelm left
[22:46] *** TimToady left
[22:46] *** tomaw left
[22:50] *** meppl joined
[22:50] *** Guest39075 joined
[22:50] *** buu joined
[22:50] *** Gothmog_ joined
[22:50] *** lue joined
[22:50] *** PZt joined
[22:50] *** felipe joined
[22:50] *** s1n joined
[22:50] *** ewilhelm joined
[22:50] *** TimToady joined
[22:50] *** tomaw joined
[22:50] *** verne.freenode.net sets mode: +o TimToady

[22:52] *** ned joined
[22:52] *** ned is now known as Guest20867

[22:53] *** gbacon left
[22:53] *** Guest80479 left
[22:54] *** mj41 joined
[22:55] *** gbacon joined
[22:56] *** meppl left
[22:56] *** Guest39075 left
[22:56] *** buu left
[22:56] *** Gothmog_ left
[22:56] *** lue left
[22:56] *** PZt left
[22:56] *** felipe left
[22:56] *** s1n left
[22:56] *** ewilhelm left
[22:56] *** TimToady left
[22:56] *** tomaw left
[22:57] *** stepnem joined
[22:57] *** hanekomu_ joined
[22:58] *** wknight8111 joined
[22:59] *** renormalist joined
[22:59] *** meppl joined
[22:59] *** Guest39075 joined
[22:59] *** buu joined
[22:59] *** Gothmog_ joined
[22:59] *** lue joined
[22:59] *** PZt joined
[22:59] *** felipe joined
[22:59] *** s1n joined
[22:59] *** ewilhelm joined
[22:59] *** TimToady joined
[22:59] *** tomaw joined
[22:59] *** verne.freenode.net sets mode: +o TimToady

[23:02] *** kraih_sri joined
[23:03] *** ash_ left
[23:05] *** Maddingu1 joined
[23:05] *** aesop_ joined
[23:10] *** hudnix joined
[23:10] <snarkyboojum> how does pir::some_function_call work in Rakudo?

[23:11] *** [particle]1 joined
[23:11] *** gfldex_ joined
[23:11] <bkeeler> rakudo: say pir::split(' ', 'asd asd ef')

[23:11] <p6eval> rakudo 1e9aa0: OUTPUT«[ "asd", "asd", "ef" ]␤»

[23:12] *** cdarroch_ joined
[23:12] *** lestaway joined
[23:13] <snarkyboojum> what's the difference between say that, and Q:PIR {...}

[23:13] <snarkyboojum> Q:PIR lets you execute a block or PIR, whereas the other is just a single function call?

[23:14] <jnthn> It's pir::op_name

[23:14] <bkeeler> Q:PIR's a bit more low level.

[23:14] <jnthn> And it does a single op

[23:14] <bkeeler> It just inlines the string

[23:14] *** cdarroch left
[23:14] *** lestaway is now known as lestrrat

[23:14] <snarkyboojum> ah ok - groovy

[23:14] <snarkyboojum> thanks bkeeler++ and jnthn++ :)

[23:14] <jnthn> But you can then switch back to Perl 6 or NQP stuff inside the parens too.

[23:15] <snarkyboojum> ooohh ok

[23:15] <jnthn> Also, the pir::opname form is going to be *much* nicer to deal with in a multi-backend future.

[23:15] <jnthn> Whereas every Q:PIR we have will cause us headaches.

[23:15] <snarkyboojum> makes sense, as the Q:PIR blocks will need to be translated somehow I guess

[23:15] <snarkyboojum> or rewritten?

[23:15] <jnthn> In general, use pir::opname form whenever possible.

[23:15] <snarkyboojum> jnthn: that's the kind of advice I was after :) cheers

[23:16] *** Maddingu1 is now known as Maddingue

[23:17] *** Sarten-X joined
[23:17] <snarkyboojum> http://www.parrotcode.org/docs/ops/ seems to error out

[23:18] *** Grimnir__ joined
[23:18] <snarkyboojum> or rather the high level links on that page

[23:19] <jnthn> Oh :-(

[23:19] <jnthn> perldoc'ing the things in parrot/src/ops/*.ops may get you the same-ish kinda thing

[23:20] <bkeeler> http://docs.parrot.org/parrot/devel/html/ works

[23:20] <bkeeler> I think that parrotcode.org site is a bit stale

[23:21] <snarkyboojum> ah yes, in particular http://docs.parrot.org/parrot/devel/html/ops.html

[23:21] *** [particle] joined
[23:21] <snarkyboojum> cheers again jnthn++, bkeeler++ :)

[23:21] <bkeeler> Np

[23:22] *** xomas_ joined
[23:22] *** xomas_ left
[23:22] *** xomas_ joined
[23:23] *** dual joined
[23:24] <jnthn> Mmm. La Trappe.

[23:25] * jnthn is a bit too tired to do any Rakudo hacking tonight. :-(

[23:25] *** pnu_ joined
[23:26] *** [hudnix] joined
[23:26] *** d4l3k_ joined
[23:27] *** stepnem left
[23:27] *** [particle]1 left
[23:27] *** cotto left
[23:27] *** hudnix left
[23:27] *** dalek left
[23:27] *** payload joined
[23:27] *** cotto joined
[23:28] *** d4l3k_ is now known as dalek

[23:28] *** szabgab joined
[23:28] <snarkyboojum> La Trappe++ lol

[23:29] *** stepnem joined
[23:29] <bkeeler> \o/ for Belgian beer

[23:30] <bkeeler> .oO( Beer thirty )

[23:30] <jnthn> :-)

[23:31] * bkeeler has a keg of New Belgium Trippel upstairs

[23:31] <jnthn> \o/

[23:31] <jnthn> The Belgian Perl Workshop was...rather good...for beer. :-)

[23:31] <bkeeler> I should sell all my shit and move to Belgium

[23:32] *** payload left
[23:33] *** payload1 joined
[23:34] *** meppl left
[23:34] <TimToady> std: .

[23:34] <p6eval> std 30125: OUTPUT«===SORRY!===␤Bogus statement at /tmp/u6r1NkvLmZ line 1:␤------> <BOL>⏏.␤FAILED 00:01 108m␤»

[23:35] *** lestrrat left
[23:35] *** LionMadeOfLions joined
[23:36] *** lestrrat joined
[23:36] <colomon> jnthn++ earned himself a night's rest yesterday.  or possibly even a knight's rest.

[23:36] <sjohnson> heheh

[23:37] <TimToady> I'm wresting, myself.

[23:37] *** xomas_ is now known as xomas

[23:39] *** Grrrr joined
[23:39] <jnthn> TimToady: "Bogus statement" :-D

[23:40] *** Chillance left
[23:40] * jnthn is so stealing that one for Rakudo.

[23:40] *** Chillance joined
[23:40] <TimToady> std: 1 + .

[23:40] <p6eval> std 30125: OUTPUT«===SORRY!===␤Bogus term at /tmp/wXMKKpQznf line 1:␤------> 1 + ⏏.␤FAILED 00:01 106m␤»

[23:41] *** Guest26358 joined
[23:41] <jnthn> Add that one would mean me editing the operator precedence parser. O_O

[23:41] <jnthn> *Adding

[23:41] <TimToady> std: 1 + +.

[23:42] <p6eval> std 30125: OUTPUT«===SORRY!===␤Prefix requires an argument at /tmp/AqwKBiV6F6 line 1:␤------> 1 + +⏏.␤FAILED 00:01 106m␤»

[23:42] <TimToady> std: 1 + ==

[23:42] <p6eval> std 30125: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix == instead at /tmp/kVQgZ2Xzik line 1:␤------> 1 + ⏏==␤FAILED 00:01 106m␤»

[23:43] <TimToady> std: 1 + +==

[23:43] <p6eval> std 30125: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix == instead at /tmp/H3KkXoBv5P line 1:␤------> 1 + +⏏==␤FAILED 00:01 106m␤»

[23:43] <TimToady> std: print >>*<< 2

[23:44] <jnthn> You has been busy. :-)

[23:44] <p6eval> std 30125: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix >>*<< instead at /tmp/G1UEka86yF line 1:␤------> print ⏏>>*<< 2␤FAILED 00:01 106m␤»

[23:44] <jnthn> colomon: May try and get hyper ops parsing at the weekend. They're a slightly softer target than reductions, I think.

[23:45] <TimToady> the trick was getting it to recognize the infix *without* emitting messages about . being a p5 concat

[23:45] <colomon> \o/   

[23:45] <colomon> and really softer?  interesting.

[23:45] <jnthn> I almost nearly got hypers to parse before now.

[23:45] <jnthn> Reductions...I had more issues on.

[23:46] <TimToady> reductions require backtracking if they fail

[23:46] <jnthn> Yeah

[23:46] <colomon> I've got to go get a bottle for my boy, but I'll be back to discuss this in a couple of minutes.

[23:46] *** Patterner left
[23:46] <TimToady> std: [*] 1,2,3; [*,] + 1;

[23:46] *** Psyche^ joined
[23:46] <p6eval> std 30125: OUTPUT«ok 00:01 107m␤»

[23:46] *** Psyche^ is now known as Patterner

[23:47] <TimToady> but

[23:47] <TimToady> std: [*,] 1,2,3

[23:47] <p6eval> std 30125: OUTPUT«===SORRY!===␤Two terms in a row (preceding is not a valid reduce operator) at /tmp/UmKVAyvmUt line 1:␤------> [*,] ⏏1,2,3␤    expecting any of:␤  bracketed infix␤  infix or meta-infix␤      statement modifier loop␤FAILED 00:01 106m␤»

[23:47] <TimToady> std: [*] == 1

[23:47] <p6eval> std 30125: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix == instead at /tmp/DzxOXRQaEv line 1:␤------> [*] ⏏== 1␤FAILED 00:01 106m␤»

[23:47] <sjohnson> std: 1;

[23:47] <p6eval> std 30125: OUTPUT«ok 00:01 105m␤»

[23:48] <bkeeler> std: [=>] 1, 2, 3

[23:48] <p6eval> std 30125: OUTPUT«ok 00:01 107m␤»

[23:48] <bkeeler> S-expression?

[23:48] <TimToady> basically

[23:48] <bkeeler> heh, nifty

[23:49] <TimToady> though that's not what our lists are made out of

[23:49] <bkeeler> Well, no

[23:49] <jnthn> Constructs 1 => (2 => 3) ?

[23:49] <TimToady> std: 1 => 2 => 3

[23:49] <p6eval> std 30125: OUTPUT«ok 00:01 106m␤»

[23:50] <jnthn> rakudo: 1 => 2 => 3

[23:50] <TimToady> it's one of the reasons we made it right associative

[23:50] <p6eval> rakudo 1e9aa0:  ( no output )

[23:50] <jnthn> rakudo: say (1 => 2 => 3).perl

[23:50] <p6eval> rakudo 1e9aa0: OUTPUT«1 => 2 => 3␤»

[23:50] <jnthn> oh lol

[23:50] <jnthn> rakudo: say (1 => 2 => 3)<1>

[23:50] <p6eval> rakudo 1e9aa0: OUTPUT«Method 'postcircumfix:<{ }>' not found for invocant of class 'Pair'␤current instr.: '!postcircumfix:<{ }>' pc 13547 (src/builtins/Code.pir:119)␤»

[23:50] <colomon> jnthn: do you have a notion how to instantiate Xop and Zop as proper operators?  Right now they are just treated as sugar for a call to crosswith and zipwith, but they should be proper subs (which call crosswith and zipwith).

[23:50] <jnthn> fejl!

[23:50] <TimToady> rakudo: say (1 => 2=> 3).key

[23:50] <jnthn> Should be proper subs?

[23:50] <p6eval> rakudo 1e9aa0: OUTPUT«1␤»

[23:50] <jnthn> Oh.

[23:50] <colomon> (as, of course, should be the hyper operators.)

[23:50] <jnthn> TimToady: Aha. :-)

[23:51] <TimToady> rakudo: say (1 => 2=> 3).value

[23:51] <p6eval> rakudo 1e9aa0:  ( no output )

[23:51] <jnthn> colomon: I hadn't quite realized we need them as that too

[23:51] <jnthn> Anyway, yes

[23:51] <TimToady> rakudo: say (1 => 2=> 3).value.perl

[23:51] <p6eval> rakudo 1e9aa0: OUTPUT«2 => 3␤»

[23:51] <colomon> jnthn: for example, once you've used R-, there is an &infix:<R-> sub.

[23:51] <TimToady> looks like a .value doesn't stringify right

[23:51] <jnthn> rakudo: say 1 => 2

[23:51] <p6eval> rakudo 1e9aa0: OUTPUT«1  2␤»

[23:52] <jnthn> odd.

[23:52] <jnthn> colomon: Oh.

[23:52] <jnthn> colomon: But anyway, yes, there's an easy way :-)

[23:52] <colomon> jnthn: awesome

[23:52] <TimToady> this is why we don't construct any of the metaops in advance of parsing one

[23:52] <colomon> that's why, say RRRRR- works.

[23:52] <colomon> I mean, that's why, say, RRRRR- works.

[23:52] <jnthn> TimToady: Yes, I'm assumed they were just higher order functions.

[23:53] <jnthn> colomon: Anyway, The Answer is .assuming

[23:53] <TimToady> rakudo: say (1 => 2).value

[23:53] <p6eval> rakudo 1e9aa0: OUTPUT«2␤»

[23:53] <colomon> .oO(I thought The Answer was 42.)

[23:53] <TimToady> rakudo: say (1 => 4 => 2).value

[23:53] <jnthn> rakudo: callwith(&infix:<+>, [1,2,3], [4,5,6]).perl.say

[23:53] <p6eval> rakudo 1e9aa0: OUTPUT«4  2␤»

[23:53] <p6eval> rakudo 1e9aa0: OUTPUT«Null PMC access in clone()␤current instr.: '&callwith' pc 17300 (src/builtins/Capture.pir:123)␤»

[23:54] <TimToady> rakudo: say (1 => 4=> 2).value

[23:54] <p6eval> rakudo 1e9aa0: OUTPUT«4  2␤»

[23:54] <jnthn> er

[23:54] <jnthn> rakudo: callwith(&infix:<+>, [1,2,3], [4,5,6])

[23:54] <p6eval> rakudo 1e9aa0: OUTPUT«Null PMC access in clone()␤current instr.: '&callwith' pc 17300 (src/builtins/Capture.pir:123)␤»

[23:54] <TimToady> rakudo: say (1 => 2=> 3).value

[23:54] <p6eval> rakudo 1e9aa0: OUTPUT«2  3␤»

[23:54] <jnthn> rakudo: say &callwith.signature

[23:54] <p6eval> rakudo 1e9aa0: OUTPUT«get_attr_str() not implemented in class 'Sub'␤current instr.: 'perl6;Code;signature' pc 12833 (src/builtins/Str.pir:115)␤»

[23:54] <jnthn> ffs

[23:54] <colomon> assuming.... ooooooo

[23:54] <TimToady> hmm, I wonder why that didn't work the first time

[23:54] <jnthn> rakudo: say &callwith.candidates[0].signature

[23:54] <p6eval> rakudo 1e9aa0: OUTPUT«Method 'candidates' not found for invocant of class 'Sub'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤»

[23:54] <jnthn> :-/

[23:54] <jnthn> oh!

[23:54] <jnthn> wtf am I doing

[23:55] <jnthn> rakudo: crosswith(&infix:<+>, [1,2,3], [4,5,6]).perl.say

[23:55] <p6eval> rakudo 1e9aa0: OUTPUT«GatherIterator.new()␤»

[23:55] <jnthn> rakudo: crosswith(&infix:<+>, [1,2,3], [4,5,6]).eager.perl.say

[23:55] <p6eval> rakudo 1e9aa0: OUTPUT«(5, 6, 7, 6, 7, 8, 7, 8, 9)␤»

[23:55] <colomon> crosswith.assuming(&infix:<+>), something like that?

[23:55] <jnthn> rakudo: my $opsub = &crosswith.assuming(&infix:<+>); $opsub([1,2,3], [4,5,6]).eager.perl.say

[23:55] <p6eval> rakudo 1e9aa0: OUTPUT«(5, 6, 7, 6, 7, 8, 7, 8, 9)␤»

[23:56] <jnthn> Like that.

[23:56] <colomon> \o/

[23:56] <jnthn> .oO( and now everyone knows why I'm just drinking beer and not writing code tonight :-))

[23:56] <TimToady> well, but hypers are zipwith, not crosswith

[23:56] <colomon> the next question is, how do we stick that into the symbol table?

[23:57] * colomon gets confused because he knows how to do half of this in PIR and half in Perl 6....

[23:57] <jnthn> Well...where do they live?

[23:57] <jnthn> Are they lexical, or package-y, or?

[23:57] <colomon> TimToady: hypers had better not be zipwith or crosswith, right?

[23:57] <TimToady> I only know how to do it in STD (but haven't yet)

[23:57] <TimToady> eager zipwith is a strict hyper

[23:57] <TimToady> kinda sorta

[23:58] <colomon> emphasis on the kinda sorta.

[23:58] <colomon> :)

[23:58] <jnthn> :-)

[23:58] <TimToady> zipwith guarantees order of execution, while a hyper doesn't

[23:58] <colomon> because the rules for what to do with different length lists are very different.

[23:58] <jnthn> TimToady: Any thoughts on where we install generated meta-op subs?

[23:58] <TimToady> how so?

[23:59] <colomon> TimToady: on the lengths?

[23:59] <jnthn> Or on the installig?

[23:59] <jnthn> .oO( this is what happens when you have hyper conversations )

[23:59] <TimToady> well, for a strict hyper, you did if the lengths aren't the same, I guess

[23:59] <TimToady> *die

[23:59] <jnthn> ...not that I'm saying one of us should zip it. :-)

