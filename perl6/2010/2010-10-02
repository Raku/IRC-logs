[00:16] *** ash_ joined
[00:17] *** ash_ left
[00:18] *** pmichaud joined
[00:18] *** ash_ joined
[00:20] *** ash_ left
[00:21] *** ash_ joined
[00:25] *** Schwern left
[00:28] *** ruoso left
[00:33] <dalek> book: 0d35866 | jest++ | README:

[00:33] <dalek> book: Added info about required texlive-font-util Ubuntu package.

[00:33] <dalek> book: review: http://github.com/perl6/book/commit/0d35866a8d2eccd135aed2a20182b46941b34e97

[00:33] *** dalek left
[00:33] *** dalek joined
[00:33] *** ChanServ sets mode: +v dalek

[00:43] *** Psyche^ joined
[00:43] *** Psyche^ is now known as Patterner

[00:52] *** Patterner left
[00:52] *** ruoso joined
[00:53] *** cspencer left
[00:55] *** flussence left
[00:55] *** flussence joined
[01:07] *** Italian_Plumber joined
[01:10] *** nymacro joined
[01:10] *** meppl left
[01:12] *** meppl joined
[01:16] <sorear> diakopter: Why kill dalek@feather?

[01:16] <sorear> Juerd++ #feathe1

[01:17] *** araujo left
[01:20] *** florz left
[01:23] *** araujo joined
[01:23] *** araujo left
[01:23] *** araujo joined
[01:24] <Juerd> Oh, forgot to explicitly mention

[01:24] <Juerd> feather1 is back

[01:25] <Juerd> With half the RAM it had, but we'll see how that works out

[01:26] <Juerd> Might not be an issue, given the memory usage drop since svn[web]? was disabled

[01:26] <colomon> Ack, Null PMC access error, but it's in the ABC project, and seems to have something to do with using a pm file.

[01:26] <colomon> Juerd++

[01:27] *** florz joined
[01:28] <Juerd> Downtime was 30 hours

[01:28] <sorear> Juerd: well, it does mean nobody will be able to build Rakudo on feather anymore

[01:28] <sorear> *ducks*

[01:28] <Juerd> sorear: How come? Isn't 1200 MB enough?

[01:30] *** Italian_Plumber left
[01:31] <colomon> perlcabal is back!   \o/

[01:45] *** Util left
[01:48] *** Util joined
[01:49] <colomon> ooo, think I've got the error golfed.  never imagined that would be reasonably possible.

[01:49] <colomon> ooo, ack, just me being stupid.  colomon--

[01:54] *** molaf__ joined
[02:04] *** mavrc left
[02:06] <ash_> wooo perl cabal!

[02:06] <ash_> does that mean try.rakudo.org is online? 

[02:12] <Util> ash_: looks like, no :(

[02:12] <Util> rakudo: enum eAB <A B>; enum eXY <X Y>; say eAB.enums.perl, eXY.enums.perl;

[02:12] <p6eval> rakudo 8827d0: OUTPUT«{"X" => 0, "Y" => 1}{"X" => 0, "Y" => 1}␤»

[02:12] <Util> ???

[02:12] <ash_> sad day, i am sure it will get fixed soon

[02:12] <Util> Well, that looks like a bug.

[02:14] <sorear> ash_: aren't you supposed to fix it?

[02:19] <sorear> seen jnthn

[02:19] <aloha> jnthn was last seen in #perl6 3 hours 33 mins ago saying "So for arrays and hashes it's the type of the value. my Foo &x menas that you want a sub that declares itself as returning foo, because you get a value out of a sub by calling it.".

[02:20] <sorear> jnthn: what do you think about S12:936

[02:20] <ash_> well, the server is not responding to ssh

[02:21] <ash_> so... if i can't ssh, i can't get to the box, plus its hosted in the netherlands, it would be fun to visit, but i live in the us 

[02:22] <sorear> TimToady: re. S12:1028, do sub foo($x where { $_ %% 2 }) and sub foo($x where { $_ %%2}) have the same long name?

[02:23] <sorear> s:g/sub/multi sub/

[02:31] *** synth joined
[02:34] *** meppl left
[02:34] *** jaldhar joined
[02:42] *** colomon joined
[02:45] *** fod joined
[02:47] *** fod left
[02:50] *** flatwhatson_ joined
[03:05] <sorear> FOSSIL ALERT: S12:1365

[03:08] *** mtve joined
[03:11] *** envi joined
[03:13] <sorear> colomon: I don't really understand how you're seeing durations as roles

[03:16] <hudnix> rakudo: class A is rw {has A $.next}; my A $x .=new; my A $y .= new; $x.next = $y; $y.next=$x; $x.perl.say

[03:17] <p6eval> rakudo 8827d0: OUTPUT«maximum recursion depth exceeded␤  in 'Mu::item' at line 1191:CORE.setting␤  in 'Mu::item' at line 1191:CORE.setting␤  in '&infix:<=>' at line 1␤  in 'Cool::substr' at line 2253:CORE.setting␤  in <anon> at line 1214:CORE.setting␤  in 'Any::join' at line 1␤  in 'Mu::attribs' at

[03:17] <p6eval> ..line…

[03:17] <hudnix> ".perl" doesn't like recursive data structures very much.

[03:19] <nymacro> rakudo: class A { has $.b is rw; }; my $c = A.new(); $c.b := $c; say $c.perl;

[03:19] <p6eval> rakudo 8827d0: OUTPUT«maximum recursion depth exceeded␤  in 'Mu::item' at line 1191:CORE.setting␤  in 'Mu::item' at line 1191:CORE.setting␤  in '&infix:<=>' at line 1␤  in 'Cool::substr' at line 2253:CORE.setting␤  in <anon> at line 1214:CORE.setting␤  in 'Any::join' at line 1␤  in 'Mu::attribs' at

[03:19] <p6eval> ..line…

[03:20] <nymacro> rakudo: my $c := $c;

[03:20] <p6eval> rakudo 8827d0:  ( no output )

[03:20] <nymacro> > my $c := $c; Segmentation fault

[03:22] <nymacro> std: my $c := $c;

[03:22] <p6eval> std 237d266: OUTPUT«ok 00:01 118m␤»

[03:25] <sorear> niecza: my $c := $c; $c = 2; say $c;

[03:25] <p6eval> niecza 4f60774: OUTPUT«2␤»

[03:26] <nymacro> hmm, mine just segfaults on $c := $c;

[03:26] <hudnix> mine too.

[03:27] <nymacro> backtrace has Parrot_ObjectRef_type () recursing ad infinitum

[03:28] <sorear> yeah

[03:28] <sorear> I wouldn't bother reporting a bug, it's not really fixable

[03:29] <sorear> an unavoidable limitation of the current implementation

[03:29] <sorear> basically, := in rakudo replaces the LHS with a reference to the the RHS

[03:29] <nymacro> yup

[03:29] <sorear> what it should do is replace *the specific reference to the LHS* with a reference to the RHS

[03:30] <sorear> rakudo: my $a = 1; my $b = 2; my $c = 3; $a := $b; $b := $c; say $a;

[03:30] <p6eval> rakudo 8827d0: OUTPUT«3␤»

[03:30] <sorear> niecza: my $a = 1; my $b = 2; my $c = 3; $a := $b; $b := $c; say $a;

[03:30] <p6eval> niecza 4f60774: OUTPUT«2␤»

[03:30] <sorear> that should make it pretty obvious what's going on

[03:30] <nymacro> sorear, yeah. I know what it does; I was just trying to break things :)

[03:30] <sorear> my $c := $c creates an infinite recursion as soon as you try to access the variable

[03:33] *** au|irc left
[03:47] *** alester joined
[03:56] *** nymacro left
[04:07] *** buu joined
[04:11] *** agentzh joined
[04:53] *** jferrero left
[05:28] *** araujo left
[05:28] *** alester left
[05:42] *** agentzh left
[05:44] *** masonkramer left
[05:44] *** masonkramer joined
[05:58] *** Guest23195 joined
[06:07] *** Psyche^ joined
[06:07] *** Psyche^ is now known as Patterner

[06:53] *** Ross joined
[06:53] *** Ross left
[06:53] *** Ross joined
[06:54] <sorear> phenny, tell TimToady re. S12:1028, "multi subs with the same long name shadow", do 'multi sub foo($x where { $_ %% 2 })' and 'multi sub foo($x where { $_ % 2 == 0 })' have the same long name?

[06:54] <phenny> sorear: I'll pass that on when TimToady is around.

[06:54] <sorear> phenny: tell jnthn I'd like to hear your opinion on S12:936.

[06:54] <phenny> sorear: I'll pass that on when jnthn is around.

[06:54] *** Patterner left
[06:55] <sorear> phenny: tell moritz_ Now that Substitution is gone, I think S12:1365 is a fossil.

[06:55] <phenny> sorear: I'll pass that on when moritz_ is around.

[06:57] *** Psyche^ joined
[06:57] *** Psyche^ is now known as Patterner

[07:01] *** guidjos joined
[07:01] *** guidjos left
[07:06] <dalek> niecza/master: 747ffe7 | sorear++ | / (2 files):

[07:06] <dalek> niecza/master: Use a portable API for low-level list ops

[07:06] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/747ffe7d6123912bed13bbb9e0b26c6d51cc135c

[07:06] <dalek> niecza/master: 2be14a1 | sorear++ | / (8 files):

[07:06] <dalek> niecza/master: First real implementation of private methods

[07:06] <dalek> niecza/master: 

[07:06] <dalek> niecza/master: They are now stored disjointly from regular methods, and are never inherited

[07:06] <dalek> niecza/master: or overriden.  The $foo!Foo::bar syntax is available for calling private

[07:06] <dalek> niecza/master: methods from other classes; trusts is not implemented.

[07:06] <dalek> niecza/master: review: http://github.com/sorear/niecza/commit/2be14a17d3140107e3f7d71f3932d0c9fcbab9cf

[07:27] *** synth left
[07:28] *** kst joined
[07:29] *** synth joined
[07:38] *** kjeldahl joined
[08:14] *** plobsing joined
[08:18] *** flatwhatson_ left
[08:25] *** redicaps joined
[08:30] <sjohnson> yo dudes

[08:30] <sjohnson> + dudettes

[08:33] <sorear> hell

[08:33] *** ingy left
[08:36] <sjohnson> o

[08:36] *** ingy joined
[08:37] *** ash_ left
[08:38] <sjohnson> i wonder how hard it would be to write a cute cipher like blowfish in perl

[08:42] *** ash_ joined
[08:46] <moritz_> good morning

[08:46] <phenny> moritz_: 06:55Z <sorear> tell moritz_ Now that Substitution is gone, I think S12:1365 is a fossil.

[08:48] <moritz_> sorear: why do you think it's a fossile? it's just a smart-match

[08:51] <sorear> Because s/// generates an immediate call now, and there's no topicalization

[08:51] <moritz_> when topicalizes

[08:52] <moritz_> erm, there's no when

[08:52] <moritz_> then it probably needs curlies

[08:52] <moritz_> handles { s/foo/bar/ }

[08:56] *** am0c left
[09:01] *** frodwith joined
[09:10] <moritz_> http://which-dwarf-are-you.blogspot.com/2010/09/exploring-perl6_30.html

[09:15] *** frodwith left
[09:16] *** frodwith joined
[09:19] *** meppl joined
[09:26] *** araujo joined
[09:33] *** icwiener joined
[09:34] <x3nU> ok, i've created r* 2010.09 windows installer ;d

[09:36] *** kiffin joined
[09:36] *** tadzik joined
[09:36] *** kiffin left
[09:37] *** Italian_Plumber joined
[09:40] *** Helios left
[09:49] <sorear> nice

[10:01] *** redicaps left
[10:06] <x3nU> there it is: ftp://x3n.info/pub/apps/win32/x86/rakudo-star/

[10:09] <sorear> win32/x86 eh

[10:09] <sorear> does nt/mips really count as win32?

[10:09] <x3nU> yes

[10:10] <x3nU> last version of windows for mips was nt4

[10:10] <x3nU> which certainly is win32

[10:11] <x3nU> (nt 3.51, 3.5, 3.1 were 32 too)

[10:20] *** tadzik left
[10:21] <sorear> yeah

[10:23] <dalek> rakudo: d2e8634 | ronaldxs++ | build/Makefile.in:

[10:23] <dalek> rakudo: Don't require backticks for smolder submissions

[10:23] <dalek> rakudo: 

[10:23] <dalek> rakudo: Contains code from flussence++

[10:23] <dalek> rakudo: 

[10:23] <dalek> rakudo: Signed-off-by: Moritz Lenz [email@hidden.address]
[10:23] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/d2e86341b2eb7f2657cbfb5939b836ed25ebf089

[10:31] *** PhatEddy joined
[10:33] *** PhatEddy left
[10:37] *** mavrc joined
[10:37] *** PhatEddy joined
[10:38] <PhatEddy> moritz_: what happened to the part of the patch for win32/backticks for Configure.pl ?   Thx.

[10:39] <moritz_> PhatEddy: oh, I missed that

[10:40] <PhatEddy> If you have any questions please let me know ...

[10:43] *** envi_ joined
[10:45] <dalek> rakudo: 7c74c0c | ronaldxs++ | Configure.pl:

[10:45] <dalek> rakudo: Fix git:// URLs on win32; escape %

[10:45] <dalek> rakudo: 

[10:45] <dalek> rakudo: Signed-off-by: Moritz Lenz [email@hidden.address]
[10:45] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/7c74c0ced2cb5d4004657f50babb891835169d0b

[10:47] *** envi left
[10:47] *** Juerd left
[10:48] *** Juerd joined
[10:49] *** PhatEddy left
[11:03] *** MayDaniel joined
[11:33] *** icwiener_ joined
[11:35] *** icwiener left
[11:38] *** Helios joined
[11:39] *** ash_ left
[11:44] *** xabbu42 joined
[11:54] *** Italian_Plumber left
[12:10] *** mavrc left
[12:16] *** mavrc joined
[12:35] *** risou joined
[12:44] *** zulon joined
[12:52] *** drbean joined
[12:57] *** mberends joined
[13:06] <dalek> 6model: f3bd7b1 | mberends++ | java/ (5 files):

[13:06] <dalek> 6model: [java/compiler] generating anonymous funcs to compile the Setting

[13:06] <dalek> 6model: review: http://github.com/jnthn/6model/commit/f3bd7b11de04694e84c8be8957deae9938b67e27

[13:08] *** drbean left
[13:13] *** nymacro joined
[13:18] *** Patterner left
[13:25] <moritz_> wow, pugs has a startup time of 0.178s

[13:25] <moritz_> au|irc++

[13:26] *** drbean joined
[13:29] *** Psyche^ joined
[13:29] *** Psyche^ is now known as Patterner

[13:30] *** leprevost joined
[13:44] *** molaf__ left
[13:50] *** larsen joined
[13:51] *** drbean left
[13:53] * moritz_ just made good use of the   if $thing -> $var { }  construct

[13:56] *** larsen left
[14:05] *** drake1 joined
[14:05] *** larsen joined
[14:05] <drake1> hello, I bet you were planning perl6 to Squeek! in websites etc. how's the status?

[14:07] <drake1> I would love to add a perl6 object with some animated character

[14:08] * moritz_ has no idea, what Squeek! is

[14:08] <drake1> you know like the sound made by a parrot shot by a santa rocket

[14:09] <flussence> moritz_: I think he means making it fast

[14:09] <flussence> ...enough for direct FCGI, anyway

[14:09] <drake1> easy to distribute VM code objects

[14:10] <drake1> ie. cross browser compatible

[14:11] <drake1> and fast

[14:12] <moritz_> .oO( patches welcome :-)

[14:17] <drake1> maybe some kind of subclass for the video output task

[14:18] <drake1> better call it studio or stdio

[14:18] <drake1> since the sound and other inputs should be synchronized

[14:18] *** drbean joined
[14:19] *** envi_ left
[14:21] * moritz_ just added SVG output to his Sudoku class

[14:22] * nymacro just got his blackjack to 406 chars

[14:23] *** envi joined
[14:25] *** drbean left
[14:37] *** drbean joined
[14:41] <drake1> might be far away

[14:42] <drake1> there's no such thing as a character class for creatures in perl6?

[14:43] <moritz_> we have character classes... in regexes

[14:43] <drake1> good point

[14:43] <drake1> thank you

[14:44] <drake1> perl6 might not be able to do the scene without a world translator

[14:46] <drake1> more than fine

[14:46] * moritz_ wonders whos fault it is that he doesn't understand most of what drake1 writes

[14:47] <x3nU>  i've created perl6 syntax definition file for textpad 

[14:47] <drake1> all I thought perl6 would be able to represent a parrot in a native object

[14:48] <x3nU> http://github.com/xenu/perl6-textpad-syntax/

[14:48] <moritz_> x3nU++

[14:48] <x3nU> it's pretty simple

[14:48] <x3nU> and probably i forgot to put something in it

[14:49] <moritz_> x3nU: perl6.org/whatever/ has a section on editor support... want to add the link there?

[14:49] <x3nU> why not

[14:49] <moritz_> you have commit access to the perl6.org repo

[14:52] *** leprevost left
[14:54] *** nymacro left
[14:55] <x3nU> done

[14:57] <dalek> perl6.org: c88e13a | xenu++ | source/whatever/index.html:

[14:57] <dalek> perl6.org: added perl6-textpad-syntax

[14:57] <dalek> perl6.org: review: http://github.com/perl6/perl6.org/commit/c88e13ab76165e3cb31c38f860203ee43791c0c7

[14:58] * drake1 leaves with his Grep Awk Sed. Why even make it faster.

[14:58] *** drake1 left
[15:00] <frettled> GAS?

[15:04] <mberends> frettled: perl is also known as awk++ ;)

[15:04] *** masonkramer left
[15:07] <dalek> perl6.org: 9b9eef8 | moritz++ | / (2 files):

[15:07] <dalek> perl6.org: update README with more guidelines

[15:07] <dalek> perl6.org: 

[15:07] <dalek> perl6.org: Also remove unused jquery file

[15:07] <dalek> perl6.org: review: http://github.com/perl6/perl6.org/commit/9b9eef8b8ee38278ad0c8dcc4a2d1ec6d539b5c9

[15:07] <dalek> perl6.org: 1cfd841 | moritz++ | page.js:

[15:07] <dalek> perl6.org: remove another stale file

[15:07] <dalek> perl6.org: review: http://github.com/perl6/perl6.org/commit/1cfd841d2f85c7c439910e4b1d055c95d563edf5

[15:08] <frettled> mberends: GAPS!

[15:10] <mberends> frettled: GASP!

[15:11] <moritz_> GRAPES

[15:11] <frettled> moritz_: what's the 'E'?

[15:12] <moritz_> frettled: it's Extensible, of course

[15:12] <frettled> Grep Ruby Awk Sed Extensible Perl?

[15:12] <mberends> Escape Meta Alt Control Shift

[15:17] <moritz_> frettled: the R stands for rm, an invaluable tool for software development

[15:17] <frettled> Of course!

[15:18] <frettled> How could I mistake it for 'Ruby'!

[15:21] *** risou left
[15:22] <mberends> rm: the Swiss Army annihilator

[15:23] <jnthn> .oO( Why annihalate the Swiss Army? )

[15:23] <phenny> jnthn: 06:54Z <sorear> tell jnthn I'd like to hear your opinion on S12:936.

[15:25] *** tadzik joined
[15:26] <tadzik> 'afternoon

[15:27] <mberends> \o

[15:28] *** zulon left
[15:34] *** risou joined
[15:35] *** M_o_C joined
[15:38] * moritz_ decides to upgrade his laptop to Debian Squeeze

[15:38] *** tadzik left
[15:38] <moritz_> "what could possibly go wrong" :-)

[15:39] *** tadzik joined
[15:45] *** ash_ joined
[16:06] *** zulon joined
[16:07] *** am0c^ left
[16:14] *** cognominal joined
[16:17] *** thowe joined
[16:22] *** justatheory joined
[16:28] *** Grimnir_ joined
[16:36] <dalek> nqp-rx/nom: 77c63c7 | jnthn++ | / (3 files):

[16:36] <dalek> nqp-rx/nom: Start to build the HOW bits as part of building NQP. Means that one can now write knowhows with attributes in NQP without having to declare an attribute meta-object up front, plus the fledgeling ClassHOW is also getting built.

[16:36] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/77c63c7220221699dac8f2366751e81bf8ac386f

[16:36] <dalek> nqp-rx/nom: e33ff5d | jnthn++ | .gitignore:

[16:36] <dalek> nqp-rx/nom: Update .gitignore to keep status clean.

[16:36] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/e33ff5d4b612fd0d34809f6bb97cec403f90662f

[16:36] <dalek> nqp-rx/nom: 61e4a50 | jnthn++ | t/nqp/53-knowhow.t:

[16:36] <dalek> nqp-rx/nom: Some basic tests for knowhow.

[16:36] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/61e4a50ec227f5e35a46e3c9821409401f3fa22d

[16:53] *** rindolf joined
[16:53] <rindolf> Hi all.

[16:54] <rindolf> Today I built a new Parrot and Rakudo for Mandriva Cooker. It went relatively painlessly so thanks.

[17:03] *** risou left
[17:04] *** risou joined
[17:08] *** risou left
[17:23] *** simcop2387 joined
[17:28] <diakopter> hi

[17:28] <tadzik> hi

[17:30] <rindolf> Hi diakopter , tadzik 

[17:33] *** zulon left
[17:34] <x3nU> http://gorzow.gazeta.pl/gorzow/1,35211,8454341,Miasto_sportu__Zakaz_gry_w_pilke_na____osiedlowym.html

[17:34] <x3nU> ooops

[17:34] <x3nU> not that window

[17:34] *** Schwern joined
[17:37] <dalek> perl6.org: 48dad52 | diakopter++ | source/compilers/index.html:

[17:37] <dalek> perl6.org: compilers/index.html updates emailed from putter++ (Mitchell N. Charity)

[17:37] <dalek> perl6.org: review: http://github.com/perl6/perl6.org/commit/48dad529009bcc782062e85b2e0f3c41b9f1e57d

[17:37] *** tadzik left
[17:41] *** kjeldahl left
[17:42] <moritz_> diakopter: do you know if mncharity has a github account? if yes, we can just give him write access

[17:43] *** kjeldahl joined
[17:45] <diakopter> yeah he does

[17:46] *** Raynes joined
[17:46] <diakopter> I mean, I assume he's mncharity

[17:47] <dalek> perl6.org: aa89ccd | diakopter++ | source/compilers/index.html:

[17:47] <dalek> perl6.org: mention viv on /compilers/index.html  edit STD's entry a bit

[17:47] <dalek> perl6.org: review: http://github.com/perl6/perl6.org/commit/aa89ccda1c9a8aee361bbd764a68bca1f32872ba

[17:48] <sorear> good * #perl6

[17:49] <sorear> moritz_: the docs for the bind_llsig op are a bit outdated

[17:53] *** envi left
[17:55] *** mavrc left
[18:00] <moritz_> sorear: I know nothing about that op

[18:00] <moritz_> mncharity now has commit access to perl6.org

[18:02] *** bluescreen joined
[18:03] *** mavrc joined
[18:08] *** alester joined
[18:09] *** Trashlord joined
[18:11] <dalek> nqp-rx/nom: 5ece5ae | jnthn++ | src/NQP/Actions.pm:

[18:11] <dalek> nqp-rx/nom: .WHAT and .HOW become macro-ish.

[18:11] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/5ece5ae39ed17b5df4cd6bd5667c3537facaa349

[18:11] <dalek> nqp-rx/nom: c3553ca | jnthn++ | src/metamodel/reprs/P6opaque.c:

[18:11] <dalek> nqp-rx/nom: Forgot to allocate some memory zeroed, which caused all manner of fun.

[18:11] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/c3553ca4b2bbb6bd152f75a481cfe5d8b99c2c33

[18:11] <dalek> nqp-rx/nom: df779fc | jnthn++ | src/metamodel/how/NQPClassHOW.pm:

[18:11] <dalek> nqp-rx/nom: Get NQPClassHOW up to the point where methods can be added and dispatched within a given class.

[18:11] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/df779fc45ca105a07326b625db41b3bfea882b9c

[18:11] <dalek> nqp-rx/nom: bab7ae7 | jnthn++ | src/ (8 files):

[18:11] <dalek> nqp-rx/nom: Implement REPR instance marking/freeing, so that slot mapping tables won't go missing and anonymous types won't leak memory.

[18:11] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/bab7ae74484fc6e6da5ad7e04706708c864427a7

[18:16] *** dukel3to joined
[18:16] <dalek> nqp-rx/nom: 5328d08 | jnthn++ | src/metamodel/reprs/P6opaque.c:

[18:16] <dalek> nqp-rx/nom: The precedence game. Some days you lose it.

[18:16] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/5328d080b434b3e0d4daf10d51bd4dbd52f900a4

[18:16] <dalek> nqp-rx/nom: 2914f84 | jnthn++ | / (2 files):

[18:16] <dalek> nqp-rx/nom: Add NQPAttribute attribute meta-object. Very basic for now - just holds a name.

[18:16] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/2914f84bf8a0253776389ff821225ddae4002f76

[18:16] <dalek> nqp-rx/nom: 5295760 | jnthn++ | src/metamodel/how/NQPClassHOW.pm:

[18:16] <dalek> nqp-rx/nom: Fix a language-o, which results in ClassHOW's attribute support now working.

[18:16] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/52957609ac24b8fa590b57b3a2268af25ef372f0

[18:17] *** wamba joined
[18:20] <moritz_> jnthn++ # very productive

[18:22] *** xabbu42 left
[18:28] *** alester left
[18:29] *** alester joined
[18:44] *** tadzik joined
[18:44] <sorear> rakudo: (-> $x [$y] { })(class { method Capture { [] } })

[18:44] <p6eval> rakudo 7c74c0: OUTPUT«Internal Error: Rakudo_binding_bind_llsig passed invalid Capture␤  in <anon> at line 2:/tmp/t_1TUlJ8Jb␤  in main program body at line 22:/tmp/t_1TUlJ8Jb␤»

[18:44] <jnthn> If you play with capture coercion, you'll get burnt. :-)

[18:45] <sorear> jnthn: my tell stands.

[18:46] <jnthn> Suggestions of what error it should give welcome. :-)

[18:46] <jnthn> Though the one there is pretty much spot on.

[18:46] <sorear> No, not that.

[18:46] <sorear> I want you to comment on S12:936

[18:46] <jnthn> Oh!!

[18:46] <jnthn> Sorry.

[18:46] <sorear> It doesn't make any sense to me

[18:46] <jnthn> Got distracted when I saw it and then just forgot...

[18:46] * jnthn looks

[18:47] <sorear> unrelatedly, I see that Rakudo's binder does exactly the one thing I was trying to avoid by generating inline code for signatures

[18:47] <sorear> so maybe it isn't so unacceptable after all :-)

[18:47] <jnthn> Which is?

[18:47] <jnthn> Inferior runloop probby?

[18:47] <sorear> Yes

[18:47] <jnthn> Yeah. Ugly.

[18:48] <jnthn> My hope is Lorito will save us some day...

[18:49] <jnthn> But given that I'm not sure we've got a single RT ticket related to this case of the inferior runloop, my conclusion is that it's rare enough not to worry over too much for now.

[18:49] <sorear> If Lorito lives up to the plans I'm ditching .NET.

[18:50] <sorear> I wonder if we should spec a list of contexts where &take calls are legal

[18:51] <sorear> since almost every implementation has ad-hoc restrictions

[18:51] <sorear> but there is a common notion of "normality"

[18:51] <moritz_> it's OK for implementaitons to have limitations

[18:52] *** wamba left
[18:52] <sorear> jnthn: so.  lastcall; nextsame.  Does it make any sense?

[18:53] <jnthn> gah, my local copy of the spec is still the svn one.

[18:57] <jnthn> sorear: It doesn't look insane to me.

[18:57] <jnthn> sorear: I think lastcall isn't excetion-throwy like last

[18:57] <jnthn> But rather mark-y

[18:57] <jnthn> That's the way I have it in Rakudo now

[18:57] <jnthn> It just says "oh, throw away the rest of the candidate list you have" but returns control after it's notified the dispatcher to throw stuff away

[18:58] <jnthn> Oh but hmm

[18:58] <jnthn> How does nextsame know to skip up a level when it'd not do so normally...

[18:58] <jnthn> Oh, the spec talks about a dispatcher stack.

[19:00] <jnthn> sorear: Anyway, I think if that's going to work lastcall returns after doing something.

[19:00] <jnthn> sorear: But I agree it could be rather messy to implement.

[19:03] *** alester left
[19:09] *** alester joined
[19:14] <sorear> jnthn: if lastcall; returns, how does lastcall; nextsame; work?

[19:16] <jnthn> sorear: I can think of ways it could work, but none of them seem appealing or likely off hand.

[19:16] <jnthn> sorear: Thing is, this bit of the spec is new since I implemented lastcall/nextsame etc

[19:17] <jnthn> sorear: I think this may be a good one to punt to TimToady++.

[19:23] <jnthn> bbl, noms

[19:23] *** mssm joined
[19:33] *** alester left
[19:34] *** Mowah joined
[19:41] *** jaldhar left
[19:48] *** alester joined
[19:49] *** Ross left
[19:58] *** lue joined
[20:03] *** literal joined
[20:04] *** tylercurtis joined
[20:12] *** alester left
[20:18] *** jaldhar joined
[20:27] *** kjeldahl left
[20:28] *** kjeldahl joined
[20:29] *** M_o_C left
[20:31] *** jferrero joined
[20:33] *** ash_ left
[20:37] *** Schwern left
[20:54] *** lucs joined
[21:11] *** tadzik left
[21:12] *** lamstyle joined
[21:15] *** jferrero left
[21:37] *** araujo left
[21:38] <dalek> 6model: 2947a00 | jnthn++ | dotnet/runtime/Metamodel/Representations/P6opaque.cs:

[21:38] <dalek> 6model: [dotnet] Fix a silly bug in P6opaque's slot computation logic.

[21:38] <dalek> 6model: review: http://github.com/jnthn/6model/commit/2947a0074444f550f3156faeb6977cf73cc63d7e

[21:41] <dalek> nqp-rx/nom: 9a575ba | jnthn++ | src/metamodel/reprs/P6opaque.c:

[21:41] <dalek> nqp-rx/nom: Fix a silly bug in P6opaque's slot computation.

[21:41] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/9a575ba413590b87a800b650dacb48dcd3bd88fe

[21:41] <dalek> nqp-rx/nom: 301e63e | jnthn++ | src/metamodel/how/NQPClassHOW.pm:

[21:41] <dalek> nqp-rx/nom: Get class inheritance working.

[21:41] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/301e63ece7648ec101591a0c6d34e75d942b6169

[21:48] *** araujo joined
[21:57] <dalek> nqp-rx/nom: ded349e | jnthn++ | src/NQP/Compiler.pir:

[21:57] <dalek> nqp-rx/nom: Ensure init of the meta-model is the first thing that happens, even before we load the HOWs. First step on the way to enabling us to switch class keyword to ClassHOW.

[21:57] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/ded349e8effb88f70caecdd28999c46d6f7b828b

[21:59] *** bluescreen left
[22:00] <sorear> jnthn, the great motivator

[22:01] <jnthn> Motivator?

[22:03] <jnthn> If my commits cause motivation, I should get my $dayjob ones reported here too. :-)

[22:04] <plobsing> can one get a job as a "motivational commiter"?

[22:04] *** kjeldahl left
[22:05] <moritz_> plobsing: sure... just give me your github ID, and you'll get access to most Perl 6 repos :-)

[22:05] *** nexusone joined
[22:08] <jnthn> mmmm...Krusovice \o/

[22:10] * moritz_ shouldn't promise commit bits when his computer is stuck in an unfinished upgrade, and he doesn't know if he even has a working graphical browser

[22:10] *** bluescreen joined
[22:13] <sorear> elinks++ # was my favorite browser once

[22:19] *** Guest23195 left
[22:26] <dalek> 6model: 1c5881f | mberends++ | java/runtime/Rakudo/Metamodel/Representations/P6opaque.java:

[22:26] <dalek> 6model: [java] sync the latest P6opaque slot allocation change from dotnet

[22:26] <dalek> 6model: review: http://github.com/jnthn/6model/commit/1c5881fccd1584b52fba2381b12212a7249fe217

[22:27] <sorear> There is something off about signatures

[22:27] <plobsing> moritz_: I adhere to the traditional definition of job. (ie: that which gets you paid)

[22:27] <sorear> Sometimes they need to be cloned, sometimes they need to existstatically

[22:29] *** mssm left
[22:35] *** zb joined
[22:38] *** Mowah left
[22:43] * araujo wonders if it is useful enough to create the concept of numeric range "1 .. 9" in a language 

[22:45] <dalek> nqp-rx/nom: 3c25cb5 | jnthn++ | src/NQP/Actions.pm:

[22:45] <dalek> nqp-rx/nom: Get 'is Parent' to actually call .^add_parent.

[22:45] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/3c25cb5bb4e21af884fb3819499b9d6b85658894

[22:45] <dalek> nqp-rx/nom: 3514c77 | jnthn++ | src/NQP/Actions.pm:

[22:45] <dalek> nqp-rx/nom: Get package decls with :: in the name working for new-style packages.

[22:45] <dalek> nqp-rx/nom: review: http://github.com/perl6/nqp-rx/commit/3514c779953f3b590e8e160c9b266858ed8709bf

[22:48] *** icwiener_ left
[22:49] *** icwiener_ joined
[22:50] <jnthn> phenny: tell pmichaud I've got to the point where my next blocker is PCT::HLLCompiler needing to be moved into the nqp-rx repo and (at lesat somewhat) nqp-ized.

[22:50] <phenny> jnthn: I'll pass that on when pmichaud is around.

[22:50] *** icwiener joined
[22:55] *** icwiener_ left
[23:01] *** icwiener left
[23:11] *** nexusone left
[23:12] *** MayDaniel left
[23:15] *** Juerd left
[23:18] *** nexusone joined
[23:19] *** nexusone left
[23:22] *** Searle joined
[23:23] *** Searle left
[23:24] *** zb left
[23:25] *** zb joined
[23:28] *** jlaire joined
[23:31] <jnthn> sorear: (siggies) Yeah...parametric roles are the most obvious place where we probably need to be doing cloning of them, if we want to really get stuff right.

[23:32] <jnthn> (to reify the nominal type constraints when they're type parameters)

[23:36] *** dukel3to left
[23:40] *** rindolf left
[23:48] <sorear> jnthn: the problem with cloning sigs is that it makes &foo.signature not work at all

[23:49] <sorear> or rather, &foo.signature needs to return some kind of StaticSignature

[23:50] <sorear> which can be introspected, but doesn't have ACCEPTS

[23:52] <jnthn> Is there a situation where you get an un-reified sig?

[23:53] <jnthn> In role Foo[::T] { our sub foo(T $x) { } } you'd probably have to provide a T to get at that.

[23:53] <jnthn> I guess I see role declarations as really being factories that build a parametrized version of all the stuff in them.

[23:55] <jnthn> e.g. roles are "uninstantiable" to the degree that you can't do anything with one until you give some parameters (which may be the empty set of parameters).

[23:55] <jnthn> Including looking at stuff inside of it.

[23:55] <jnthn> Foo.^methods where Foo is a role almost certainly means Foo[].^methods

