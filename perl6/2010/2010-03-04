[00:00] <TimToady> those may not be so simple in p6

[00:00] <TimToady> P5 would consider UTF-16 and UTF-32 to be binary, unless they've changed recently

[00:00] <TimToady> but they're really text

[00:01] <lue> well, the spec lists binary as containing odd characters, "such as control codes or bytes with the high bit set"

[00:01] <TimToady> yes, it's rather latin-1-centric

[00:02] <TimToady> we will not be carrying over the exact behavior

[00:02] *** athenot left
[00:02] <TimToady> would be better to have some kind of file type guesser that has more clue

[00:02] <lue> maybe something like the file command in *nix, or MIME type (I don't trust file extensions)

[00:03] *** cotto_working left
[00:03] *** athenot joined
[00:03] <markjreed> How are you going to get MIME type from a file in the filesystem?

[00:03] <lue> I do not know. Just throwing ideas.

[00:04] <lue> the hard-coded way would be a database-of-sorts listing all known 'magic numbers' of binary files and such.

[00:04] <markjreed> Something like the algorithm file(1) uses, but that depends on /etc/magic...

[00:06] <arnsholt> For file type guessing, it might be possible to train some kind of statistical model?

[00:07] *** petdance joined
[00:07] <arnsholt> Er, encoding, rather than file type

[00:07] *** petdance left
[00:07] *** petdance joined
[00:09] <markjreed> web browsers have encoding-guessing algorithms..

[00:10] <markjreed> could port Encode::Guess maybe.

[00:10] <ash_> does icu have something for this?

[00:10] *** lest_away is now known as lestrrat

[00:10] <ash_> since parrot *can* have icu built into it, if its not there then you'd have to have some sort of fallback 

[00:11] <TimToady> replacing icu with a pure P6 library would be a good project at some point

[00:11] <TimToady> could be based on the unicode tables like P5 is

[00:11] <markjreed> according to http://fredeaker.blogspot.com/2007/01/character-encoding-detection.html, ICU does have an encoding detector.

[00:14] <lue> well, let's see how dependant other vital functions (Xorg, KDE, and the like) of the typical system are on icu, and guage our decision on that.

[00:14] <lue> s/guage/gauge/

[00:17] <lue> I'll be back in a little while, then I'll continue musing with you

[00:18] <ash_> does parrot have this? 

[00:19] <ash_> have you asked the parrot guys about an encoding detection pmc/something? 

[00:19] *** cotto_working joined
[00:30] *** ash_ left
[00:32] *** nihiliad left
[00:36] <lichtkind> PerlJam: ping

[00:39] *** justatheory left
[00:48] *** Chillance left
[00:57] *** snarkyboojum joined
[01:04] *** justatheory joined
[01:05] *** markjreed left
[01:07] *** Ivan4 joined
[01:08] *** Ivan4 left
[01:15] <lue> wow. Do I have to be here to continue the conversation? :)

[01:16] <lichtkind> lue: hai

[01:16] <lue> hi

[01:17] <colomon> I think "everyone" is getting ready for the big conference / hackathon this weekend, probably.

[01:19] <lue> 7H3R35 G0!/\/G 2 B AY H4K470/\/? \/\/0\/\/!

[01:19] <lichtkind> lue: please calm down

[01:20] <lue> AI D0/\/7 7h!/\/k ai k4n! (I'll stop now)

[01:20] <colomon> yes, there's going to be a hackathon.

[01:21] <lue> I'll find people to bring testimonials. "Call 1-8TIMTOWTDI now, to donate to our cause!"

[01:23] * lue .oO(The Larry Wall 45th anual Perl Foundation Hackathon!) #oh, the fun I'll have before I start hacking >:)

[01:23] <lue> s/anual/annual/

[01:26] <lue> .oO(Wikipedia first ran on Perl code (before switching to the PHP MediaWiki))

[01:27] <colomon> No applicable candidates found to dispatch to for '&infix:<=>'

[01:27] <colomon> that's a new one on me....

[01:29] <lue> ACHTUNG!: infix:<=> could not be found. Please try the --things-do-equal-each-other option when you configure next time.

[01:34] <k23z__> will I get considerable speed boosts if I write some pieces that are now XS in nasm ?

[01:35] <k23z__> I wrote a module for generating permutations using XS with the best known algorithm called Steinhaus-Johnson-Trotter and it's still 5 times slower than Algorithm::Permute and this disappoints me of my coding skills

[01:35] <k23z__> I was hoping to beat it

[01:35] <k23z__> now I am thinking about re-writing parts of it in nasm to make it faster

[01:35] <TimToady> XS is kinda off topic here

[01:36] <TimToady> not that we're strict about that...

[01:36] <arlinius> you should write it in perl 6, then optimize rakudo/parrot to make it fast...

[01:36] <lue> assembler is the fastest code you could possibly generate (assuming, of course, you're efficient about it)

[01:36] <diakopter> .

[01:38] *** yinyin joined
[01:39] <k23z__> ^

[01:39] <k23z__> |

[01:39] <k23z__> he wrote a dot

[01:39] <diakopter> so I did

[01:39] <k23z__> why/

[01:39] *** wknight8111 joined
[01:39] <diakopter> std: .

[01:39] <p6eval> std 29935: OUTPUT«===SORRY!===␤Unsupported use of . to concatenate strings; in Perl 6 please use ~ at /tmp/0CIHJKxs7k line 1 (EOF):␤------> .⏏<EOL>␤FAILED 00:01 105m␤»

[01:42] <diakopter> rakudo: say 900.00000000000000000 # masakbot

[01:42] <p6eval> rakudo 4edd19: OUTPUT«PAST::Compiler can't compile node of type BigInt␤current instr.: 'perl6;PCT;HLLCompiler;panic' pc 137 (compilers/pct/src/PCT/HLLCompiler.pir:101)␤»

[01:44] <diakopter> rakudo: say (90^^4).WHAT # masakbot

[01:44] <p6eval> rakudo 4edd19: OUTPUT«Method 'WHAT' not found for invocant of class 'Undef'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤»

[01:45] <k23z__> can anyone help me understand what the guy did here ? http://cpansearch.perl.org/src/ROBIN/Algorithm-FastPermute-0.999/FastPermute.xs

[01:45] <k23z__> what's a multicall ?

[01:45] <k23z__> is this a concept found in other languages ?

[01:46] <diakopter> it appears like he/she wrote an .xs file

[01:46] <k23z__> or did he invent it ?

[01:46] *** xuzj joined
[01:46] *** xuzj left
[01:48] <colomon> Tene: errr.... you seem to have broken Rakudo somewhat?

[01:48] <lue> .oO(At least I didn't break it *phew*)

[01:53] *** mssm left
[01:53] *** cls_bsd joined
[01:54] *** ShaneC left
[01:55] *** lichtkind left
[01:57] <lue> you guys know of the nazi armbands the soliders wore, right?

[01:57] <lue> the NAZI soliders

[01:58] * diakopter squints sidelong

[01:59] <arlinius> soliders?

[01:59] <diakopter> rakudo: (sub {say (*)()})()

[01:59] <p6eval> rakudo 4edd19: OUTPUT«!whatever_dispatch_helper␤»

[01:59] <diakopter> # masakbot ^^ see above; I dunno...

[02:00] <arlinius> hrm

[02:01] <lue> Well, my friends and I came up with the Politically Correct and Copyright Infringment War Machines

[02:01] * diakopter lue plz stay closer to topic..

[02:01] <arlinius> rakudo: my $x = *; say $x(0)

[02:01] <diakopter> lue

[02:01] <p6eval> rakudo 4edd19: OUTPUT«Method 'item' not found for invocant of class 'Integer'␤current instr.: '!whatever_dispatch_helper' pc 280 (src/glue/dispatch.pir:25)␤»

[02:02] <lue> diakopter: oh fine, you'll never see the end :) . I just started talking because nothing was happening.

[02:02] *** PZt joined
[02:06] <lue> .rnd(please be advised the rnd bubbles can be ignored at your will (including this one))

[02:07] *** hicx174 joined
[02:07] * lue ghost hunters &

[02:11] <TimToady> most topics can be related to Perl 6 if you try hard enough, but you *do* have to try hard enough  :)

[02:12] <TimToady> from time to time...

[02:12] *** cotto_working left
[02:12] *** nihiliad joined
[02:16] <k23z__>         Rate   tye   SJT dchld  A::P

[02:16] <k23z__> tye   1.24/s    --  -20%  -52%  -81%

[02:16] <k23z__> SJT   1.55/s   25%    --  -40%  -76%

[02:16] <k23z__> dchld 2.58/s  108%   66%    --  -60%

[02:16] <k23z__> A::P  6.45/s  421%  316%  150%    --

[02:16] <k23z__> this benchmark

[02:17] <k23z__> does it say that SJT is slower by 76% than A::P ?

[02:17] <k23z__> and that in turn A::P is faster by 316% than SJT ?

[02:17] <k23z__> do I get this right ?

[02:17] <k23z__> because it doesn't make much sense

[02:17] * diakopter tries not very hard

[02:17] <k23z__> those percents don't make much sense to me

[02:17] <k23z__> do they make sense to you ?

[02:18] *** rv2733 left
[02:18] <k23z__> do you guys also make benchmarks in Perl6 ? or is it not yet time  to make them ?

[02:18] <diakopter> not really

[02:20] <k23z__> 316 - (76/100) * (316) = 75.4

[02:20] <k23z__> wasn't I supposed to get 100 ?

[02:21] <k23z__> I mean it A::P is 316% of SJT

[02:21] <k23z__> and SJT is 76 slower

[02:21] <k23z__> bah nevermind too tired

[02:22] <colomon> rakudo: say 316 - (76/100) * (316)

[02:22] <p6eval> rakudo 4edd19: OUTPUT«75.84␤»

[02:23] <TimToady> this sort of benchmark discussion is usually more appreciated on, say, perlmonks

[02:23] *** eternaleye left
[02:25] <k23z__> ok here we discuss Parrot and Rakudo

[02:25] <diakopter> and Perl 6 things

[02:25] <k23z__> ok

[02:25] <k23z__> I'll go to bed

[02:25] <k23z__> gnight

[02:25] <diakopter> 'nite

[02:25] *** k23z__ left
[02:32] *** meppl left
[02:35] *** eternaleye joined
[02:35] *** hercynium joined
[02:38] <TimToady> we also, of course, discuss anything *I'm* interested in.  :)

[02:38] <TimToady> since I'm related to Perl 6 somehow...

[02:57] *** rv2733 joined
[03:00] <colomon> TimToady: For series, "When no limit is given, the function need not be monotonic:""

[03:01] <colomon> I've already coded up a bunch of non-monotonic series with limits for my tests.

[03:01] *** snarkyboojum left
[03:02] <colomon> Is that line a fossil?

[03:02] <TimToady> the monotonic really only applies to intuitied functoins

[03:02] <TimToady> io

[03:02] <TimToady> if you have your own generator, matching of limits must be exact

[03:02] <TimToady> or write your own terminator closure, now that we can have those

[03:03] <TimToady> so it's kinda fossily

[03:04] <colomon> I don't know of any actually useful examples, but the non-exact limit code is smart enough to handle your own generator too.

[03:05] <colomon> Like { (1..2).pick } ... 1.5

[03:05] *** wknight8111 left
[03:06] <colomon> Unless there's some trick I'm missing, NOT supporting that case with the user-generator will actually be more work than just supporting it.

[03:06] <TimToady> okay, most interesting non-monotonics will be to * anyway

[03:07] <colomon> agreed.

[03:08] <colomon> TimToady++ # I'm still really digging the current series spec, even if I'm not quite sure how to efficiently lazily support the arity > 1 cases.  :)

[03:08] * colomon to bed.

[03:10] <TimToady> night

[03:36] *** policomb joined
[03:36] <policomb> hi all

[03:36] <policomb> I've a little question

[03:37] <policomb> how is it possible to change/set an ethernet device mac address in perl (without using ifconfig) ... ?

[03:38] *** petdance left
[03:41] <spinclad> policomb: in perl 6?

[03:42] <spinclad> with the right libraries, and right authorization...

[03:42] <policomb> perl 6 or perl 5, it's the same for me

[03:42] <policomb> i would like to know how to do that

[03:42] <policomb> i'm root

[03:44] <spinclad> in perl 6: you'd have a lot to invent/implement yourself.  in perl 5: dunno, search cpan...

[03:44] *** rv2733 left
[03:46] <spinclad> or use pack and ioctl, with no portability i expect

[03:48] <spinclad> the replacements for pack in perl 6 are not yet implemented, ioctl likewise

[03:50] <spinclad> (classes managing packed buffers, for pack)

[03:50] <TimToady> my impression is that parrot is still very weak on binary data

[03:50] <TimToady> need compact arrays of ints of various sizes to do it right

[03:53] <spinclad> aye

[03:54] *** petdance joined
[03:55] *** petdance left
[03:58] *** am0c joined
[04:00] *** policomb left
[04:12] *** nihiliad left
[04:12] *** athenot left
[04:21] *** athenot joined
[04:26] <lue> hello again. Can't wait for the Jerry Lewis Hackathon!

[04:26] <lue> s/Jerry Lewis/Larry Wall/

[04:31] *** ned left
[04:34] <lue> (methinks the hackathon will be a pain for me on the Rakudo side if I kept on pasting patches. Shouldn't be too much a bother though)

[04:38] *** Trashlord joined
[04:41] * lue --afk &

[04:42] *** LionMadeOfLions joined
[04:49] *** athenot left
[04:54] *** ned joined
[05:10] *** yinyin left
[05:10] *** yinyin joined
[05:17] *** meppl joined
[05:46] *** drasnian joined
[05:46] *** drasnian left
[05:51] *** gfx joined
[06:04] *** yinyin left
[06:04] *** meppl left
[06:05] *** yinyin joined
[06:09] *** snarkyboojum joined
[06:19] *** snarkyboojum left
[06:20] *** justatheory left
[06:46] *** rgrau left
[06:47] *** yinyin left
[06:50] *** kfo left
[06:51] *** kfo joined
[07:02] *** kaare joined
[07:03] *** kaare is now known as Guest61020

[07:07] *** Su-Shee joined
[07:08] <Su-Shee> good morning

[07:08] *** uniejo joined
[07:28] *** xabbu42 joined
[07:32] *** gfx left
[08:02] *** iblechbot joined
[08:16] *** snarkyboojum joined
[08:19] *** Toony joined
[08:23] *** masak joined
[08:23] <masak> good morning, #perl6.

[08:29] *** flip214 joined
[08:29] <flip214> Hi

[08:32] <mathw> hi

[08:32] <masak> hi!

[08:33] * Su-Shee sees your hi and raises to "hihi!" ;)

[08:34] * masak wonders if that falls under yesterday's ablaut discussion

[08:36] <sjohnson> hi

[08:37] <masak> [haI]

[08:37] <sjohnson> heh

[08:38] <masak> let's do something cool today on #perl6.

[08:40] <sjohnson> that's a good idea

[08:40] <masak> diakopter: I think you've long since filled your quota of 'this number has so many digist/decimals that it causes Rakudo to whimper' rakudobugs :)

[08:41] <masak> rakudo: say (90^^4).WHAT # diakopterbug

[08:41] <p6eval> rakudo 4edd19: OUTPUT«Method 'WHAT' not found for invocant of class 'Undef'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤»

[08:41] * masak submits rakudobug

[08:41] <masak> pugs: say (90^^4).WHAT

[08:41] <p6eval> pugs: OUTPUT«Bool␤»

[08:46] *** flip214 left
[08:47] <masak> rakudo: say (0 ^^ 0).WHAT # actually, this is wrong too

[08:47] <p6eval> rakudo 4edd19: OUTPUT«Int()␤»

[08:47] <masak> should be Bool().

[08:48] <mathw> why?

[08:49] <masak> mathw: S03:1304.

[08:49] *** mathw sets mode: +o masak

[08:49] <masak> "Returns the true argument if there is one (and only one).  Returns C<Bool::False> if all arguments are false or if more than one argument is true."

[08:50] <mathw> aaah

[08:50] <mathw> sorry, I was confusing it with infix:<**>

[08:52] <masak> I can see how that would be confusing :)

[08:52] *** am0c left
[08:54] <masak> also from S03: 'Not all types can support the concept of infinity.  Therefore any value of any type may be compared with C<+Inf> or C<-Inf> values, in which case the infinite value stands for "larger/smaller than any possible value of the type."'

[08:54] <masak> I'm confused by the 'Therefore...' phrasing.

[08:55] <mathw> I'm not sure it's 'Therefore'

[08:55] <masak> oh, good.

[08:55] <mathw> 'Therefore' implies that it's obvious

[08:55] <masak> yes.

[08:55] <mathw> which this isn't particularly, it's just rather handy

[08:55] <masak> :)

[08:55] <masak> I'd prefer 'However, "

[08:55] <mathw> but it just needs a slight rephrase

[08:55] <mathw> hmm no, I don't think that'd work

[08:56] <masak> "Nevertheless, " :)

[08:56] <mathw> No, you need to change more than that

[08:56] <mathw> The second sentence has other problems

[08:57] <eternaleye> s/Therefore/So that comparing finite values to infinite ones functions as most people would expect/?

[08:57] <masak> :)

[08:57] <eternaleye> Plus a comma

[08:59] <masak> I feel that Damian's reply to the 'long literals' thread essentially settled the matter.

[09:01] <masak> meeting &

[09:04] *** k23z__ joined
[09:07] <k23z__> can Perl5 code be run in Perl6 ?

[09:07] *** am0c joined
[09:07] <k23z__> can modules written in Perl5 be called from Perl6? 

[09:07] <k23z__> if not, is this in any future plans of development ?

[09:07] *** araujo joined
[09:16] <mathw> k23z__: Currently, no and no. jnthn++ has done some work on use of Perl 5 modules. I'm not sure what state that's currently in. It's certainly something highly desirable.

[09:16] <mathw> There is a subset of Perl 5 code which is valid Perl 6, but it's fairly small due to the syntax changes around arrays and hashes and loops and other common things.

[09:17] *** dakkar joined
[09:36] <hejki> also there is a bigger subset of ill-written perl5 code which is valid in perl6 :)

[09:36] <hejki> e.g. my @ar; @ar[0] = "foo"; :)

[09:37] *** payload left
[09:39] <mathw> But that's wrong Perl 5

[09:40] <mathw> So it's not ill-written, it's just a syntax error

[09:40] <hejki> err.. 

[09:40] <hejki> it does work in perl5 tho

[09:40] <hejki> but it's not correct thus making it ill-written imo

[09:41] <mathw> It works??

[09:41] <mathw> Oh wait

[09:41] <mathw> array slice

[09:41] <huf> it's probaby a warning or something

[09:41] <mathw> it probably only works by sheer fluke

[09:42] <hejki> er.. all ill-written perl5 begins with: don't { use warnings; use strict; } :)

[09:48] *** mssm joined
[09:50] *** jnthn_and_mberen joined
[09:51] <jnthn_and_mberen> oh hai

[09:51] <jnthn_and_mberen> masak: ping

[09:51] <jnthn_and_mberen> moritz_: ping

[09:53] <jnthn_and_mberen> phenny: tell pmichaud please see http://gist.github.com/321595 if you get chance. :-)

[09:53] <phenny> jnthn_and_mberen: I'll pass that on when pmichaud is around.

[09:55] <jnthn_and_mberen> phenny: tell masak take a look at http://gist.github.com/321596

[09:55] <phenny> jnthn_and_mberen: I'll pass that on when masak is around.

[09:56] <jnthn_and_mberen> phenny: tell moritz_ take a look at http://gist.github.com/321596

[09:56] <phenny> jnthn_and_mberen: I'll pass that on when moritz_ is around.

[09:59] <jnthn_and_mberen> We'll be back. o/ o/

[09:59] *** jnthn_and_mberen left
[10:05] *** k23z__ left
[10:16] *** |newbie| joined
[10:16] <|newbie|> hi

[10:16] <|newbie|> where can I find gimme5?

[10:26] *** orafu left
[10:26] *** orafu joined
[10:29] <masak> |newbie|: http://svn.pugscode.org/pugs/src/perl6/

[10:29] <phenny> masak: 09:55Z <jnthn_and_mberen> tell masak take a look at http://gist.github.com/321596

[10:29] * masak takes a look

[10:30] <masak> (so, jnthn and mberends have finally merged into a fearsome mechbot?)

[10:31] <|newbie|> hi masak

[10:31] <masak> hi jaffa4

[10:32] <|newbie|> jaffa4?

[10:32] <masak> sorry, am I confusing you with someone else?

[10:32] *** am0c left
[10:33] <|newbie|> no

[10:33] <masak> |newbie|: http://irclog.perlgeek.de/perl6/2010-03-02#i_2055372

[10:33] *** |newbie| is now known as jaffa4

[10:34] <hejki> a bit offtopic, but still "related": http://www.patentstorm.us/patents/7028023.html :)

[10:35] <jaffa4> Could someone tell me how to use gimmi5?

[10:36] <masak> hejki: that's just so depressing.

[10:36] <hejki> almost as depressing as the 'peanut butter sandwich'-patent :P

[10:39] <sjohnson> almost as depressing as having this happen to you: http://images.4chan.org/b/src/1267698521810.png

[10:39] * masak sees '4chan', chooses not to be curious

[10:39] <sjohnson> i drew it myself

[10:40] <sjohnson> so it's safe

[10:40] <sjohnson> :)

[10:41] <masak> what does this Japanese twitterer say about Perl 6? http://twitter.com/mr_konn/status/9961701457

[10:41] <masak> something about politics.

[10:43] <masak> jaffa4: I suggest you look at the Makefile in that directory. it uses gimme5.

[10:43] <jaffa4> never mind, I have figured it out.

[10:44] <masak> goodie.

[10:54] *** stepnem left
[10:57] <jaffa4> masak, how can I downloade the whole http://svn.pugscode.org/pugs/src?

[10:58] *** xinming left
[10:58] <masak> svn checkout http://svn.pugscode.org/pugs

[10:58] <masak> svn checkout http://svn.pugscode.org/pugs/src, even

[10:59] <hejki> s/(heck|ut)//g;

[10:59] *** xinming joined
[11:00] <masak> both 'checkout' and 'co' should work, according to 'svn help'.

[11:01] <hejki> sure, i just see no reason to waster precious bytes by typing the word as a whole :)

[11:02] *** stepnem joined
[11:02] <masak> hejki: obbviously you're not using Ctrl+R in bash nearly enough :P

[11:06] <hejki> what? :P

[11:06] *** lestrrat is now known as lest_away

[11:07] <hejki> i'm more of a history | grep-kinda guy :)

[11:09] <masak> Ctrl+R in bash simply rocks.

[11:09] <hejki> it has it's use cases yes

[11:09] <hejki> my favorite bash hotkey is definetly M-_ tho :)

[11:11] <masak> that one's nice as well.

[11:11] * masak tends to use Esc . for that, though

[11:12] <jaffa4> masak, is there an example how to use viv?

[11:13] *** daemon left
[11:13] <masak> jaffa4: there's a USEAGE heredoc in the source.

[11:13] <hejki> masak: well you prolly aren't on a similar keyboard layout either :)

[11:14] <jaffa4> yes, I know about that.

[11:14] <jaffa4> I am interested in something else.

[11:15] <jaffa4> how to catch actions in viv?

[11:16] <masak> hejki: I run a US layout most of the time.

[11:16] <masak> jaffa4: I don't understand the question.

[11:16] <jaffa4> is there a way to hook actions in viv?

[11:17] <jaffa4> or walkthrough the datastructure of the syntax tree using a perl program?

[11:18] <masak> the latter is definitely possible.

[11:18] <masak> just pipe it into a perl program.

[11:19] <jaffa4> without processing

[11:19] <jaffa4> the output

[11:19] <masak> er.

[11:20] <masak> That's like asking "Is there a way to not be so thirsty? Without drinking."

[11:21] *** Gothmog_ left
[11:23] *** _Jedai_ left
[11:25] <jaffa4> look

[11:26] <jaffa4> here it is 

[11:26] <jaffa4> $r = STD->parse($PROG, actions => 'Actions')->{'_ast'};

[11:26] <jaffa4> the whole ast will be in $r.

[11:26] <jaffa4> no need to parse the output!

[11:26] <masak> ok, so there you go then.

[11:26] <jaffa4> line 91 in viv.pl

[11:28] *** lest_away is now known as lestrrat

[11:28] <masak> jaffa4: good luck, whatever it is you're attempting. it sounds interesting.

[11:28] <masak> lunch &

[11:30] <hejki> masak: ok. i'm on FI layout all the time :)

[11:30] *** am0c joined
[11:38] *** Gothmog_ joined
[11:38] *** stepnem left
[11:40] *** f00li5h[HireMe] left
[11:40] *** f00li5h[HireMe] joined
[11:41] *** stepnem joined
[11:42] *** k23z__ joined
[11:42] *** k23z__ left
[11:42] *** k23z__ joined
[11:43] <k23z__> does p6 have a way of looping through an array taking each consecutive pair ?

[11:43] <k23z__> like

[11:43] <k23z__> suppose the array were @a

[11:44] <k23z__> and I want   $f->($a[$i],$a[$i+1]) for $i (0..@a-2)

[11:44] <k23z__> does p6 provide some sugar for that ?

[11:44] <hejki> for @ar -> $x, $y { ... } ?

[11:44] <k23z__> ah yes forgot

[11:44] <k23z__> thanks

[11:44] <hejki> wait

[11:44] <k23z__> I used it a couple of months ago I think

[11:44] <k23z__> yes ?

[11:44] <hejki> it doesn't work exactly like you want it to

[11:45] <hejki> rakudo: for (1..10) -> $a, $b { say "a: $a b: $b"; }

[11:45] <p6eval> rakudo 4edd19: OUTPUT«a: 1 b: 2␤a: 3 b: 4␤a: 5 b: 6␤a: 7 b: 8␤a: 9 b: 10␤»

[11:45] <k23z__> hmm ..

[11:45] <hejki> i thought you wanted: 1,2 2,3 3,4 4,5 5,6 

[11:45] <k23z__> yes

[11:45] <hejki> you could use Z or X with 2 arrays

[11:46] <k23z__> I could shift one of the arrays 1 position forward

[11:46] <k23z__> how do I shift an array with 1 position forward ?

[11:46] <hejki> rakudo: for (1..10) X (2..11) -> $a, $b { say "a: $a b: $b"; } # might fail :)

[11:46] <k23z__> I mean having  (1,2,3)  ->   (bla,1,2,3)

[11:46] <p6eval> rakudo 4edd19: OUTPUT«Missing block at line 11, near "X (2..11) "␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[11:46] <k23z__> hejki: yeah like that

[11:46] <k23z__> but ...

[11:46] <k23z__> it's cartesian product

[11:46] <k23z__> it's more than I need

[11:47] <hejki> yes

[11:47] <hejki> rakudo: for 1..10 Z (2..11) -> $a, $b { say "a: $a b: $b"; }

[11:47] <p6eval> rakudo 4edd19: OUTPUT«a: 1 b: 2␤a: 2 b: 3␤a: 3 b: 4␤a: 4 b: 5␤a: 5 b: 6␤a: 6 b: 7␤a: 7 b: 8␤a: 8 b: 9␤a: 9 b: 10␤a: 10 b: 11␤»

[11:47] <hejki> voilá

[11:49] <k23z__> yeah that looks great

[11:49] <k23z__> hejki: now we just need to generate (2..11) from (1..10)

[11:49] <betterworld> alpha: my @a = 1..10; for @a Z (@a >>+>> 1) -> $a, $b { say "a: $a b: $b"; }

[11:49] <p6eval> alpha 30e0ed: OUTPUT«a: 1 b: 2␤a: 2 b: 3␤a: 3 b: 4␤a: 4 b: 5␤a: 5 b: 6␤a: 6 b: 7␤a: 7 b: 8␤a: 8 b: 9␤a: 9 b: 10␤a: 10 b: 11␤»

[11:49] <k23z__> betterworld: excellent

[11:50] <k23z__> thank you

[11:50] <k23z__> I didn't know p6 had these operators but it's very nice it does

[11:50] *** snarkyboojum left
[11:50] <hejki> hmm..

[11:50] <hejki> yeh

[11:52] *** jaffa4 left
[11:55] <betterworld> or maybe @a Z @a[1..*] so it works with other arrays too

[11:57] <hejki> even better :)

[11:57] <hejki> and looks better as well :>

[12:08] *** korpenkraxar joined
[12:11] *** lichtkind joined
[12:12] <lichtkind> moritz_: got my msg?

[12:13] <lichtkind> masak: moin

[12:13] *** rv2733 joined
[12:15] <masak> lichtkind: hej, hej

[12:15] <lichtkind> :)

[12:15] <lichtkind> masak: currently working on http://www.perlfoundation.org/perl6/index.cgi?timeline

[12:16] <masak> nice.

[12:16] <masak> lichtkind: guess you saw my comments on that page from yesterday?

[12:18] <masak> lichtkind: "lasted until 2006 August 23" -- maybe make this a separate timeline item instead? makes it easier to see where it fits into the history.

[12:19] <lichtkind> yes and yes

[12:19] <lichtkind> i thought about that

[12:19] <masak> lichtkind: "2010 April Rakudo star release" doesn't fit into the list of "what happened so far".

[12:19] <masak> lichtkind: also, you misspelled "happenEd".

[12:19] <lichtkind> soon it will

[12:19] <masak> lichtkind: you're missing the point.

[12:20] <masak> it hasn't happened so far.

[12:20] <masak> thus it doesn't belong on the list.

[12:20] <masak> it belongs on an other list, "things which haven't happened so far".

[12:20] *** daemon joined
[12:20] <masak> along with a lot of other important things :)

[12:21] <hejki> imagine slacking like that in a corporate job :)

[12:21] <k23z__> masak: is there a plan for SDL or OpenGL bindings along the way ?

[12:21] *** ruoso joined
[12:22] <masak> k23z__: don't think so. please go right ahead and start a project.

[12:31] *** athenot joined
[12:32] <lichtkind> masak: bah http://www.perlfoundation.org/perl6/index.cgi?timeline

[12:33] <masak> lichtkind: looks better and better :)

[12:33] <lichtkind> masak: i added the hague grant too

[12:33] <masak> 'and other stuff' -- questionable phrasing.

[12:33] <masak> it's too informal and not at all informative.

[12:34] <masak> 'for, among other things, Perl 6' would work better, IMHO.

[12:42] *** petdance joined
[12:53] *** athenot left
[12:56] *** nacho joined
[13:00] *** petdance left
[13:04] *** k23z__ left
[13:04] <takadonet> morning

[13:09] <masak> takadonet: \o

[13:09] <takadonet> masak: how are you doing?

[13:09] <masak> takadonet: pretty well. you?

[13:10] <takadonet> masak: busy but good

[13:10] *** payload joined
[13:12] <masak> takadonet: yes, me too. presentation in two days. :)

[13:12] *** nacho left
[13:12] <takadonet> where and what is your presentation?

[13:13] <masak> http://www.opensourcedays.org/2010/node/267

[13:13] <takadonet> nice

[13:14] <masak> thanks -- really looking forward to the conference, the hackathon, and everyone's talks.

[13:15] <takadonet> will your presentation  be online after the conference?

[13:15] <masak> online, cc-licenced, possibly even with a video (eventually).

[13:16] <m-locks> aye we'd like to see ;)

[13:16] <masak> that makes me happy, too :)

[13:22] *** athenot joined
[13:23] <Tene> colomon: explain what I broke?

[13:23] <colomon> Tene: 20-30 tests on my machine.

[13:23] <colomon> including the make test   try.t

[13:25] <colomon> reverting 4edd19dbaaee2dd2c61cbc1044ef39651d45f3e4 made everything work again

[13:37] *** riffraff joined
[13:54] <Tene> colomon: I see you didn't push a revert commit, yes?

[13:54] <colomon> nope.

[13:54] <colomon> just reverted locally

[13:55] <colomon> (well, I think I pushed one in the series branch, but that's a side thing)

[13:55] <colomon> I was hoping it was something easy for you to fix.  :)

[13:56] <Tene> okay, just checking.  The problem is that I'm not returning the value of the try block in cases where the block doesn't fail.

[14:06] <Tene> Looks like it's a bug with the PAST compiler, not setting the return value of a Stmts node properly when there's a handler on it.

[14:07] <PerlJam> good morning #perl6

[14:08] <Tene> oh, and looks like it misbehaves badly in the case where it's handled

[14:09] <takadonet> morning PerlJam

[14:09] <Tene> Let's try this...

[14:10] <Tene> oh, no, that won't work.

[14:13] *** Salada345 left
[14:14] <Tene> colomon: feel free to push a revert commit.  I'll try to get back to this later today.

[14:15] <Tene> eh, nm, I'll revert it myself.

[14:16] <Tene> pushed

[14:16] <dalek> rakudo: 4055fde | tene++ | src/Perl6/Actions.pm:

[14:16] <dalek> rakudo: Revert "Re-work try {} to ignore control exceptions"

[14:16] <dalek> rakudo: This reverts commit 4edd19dbaaee2dd2c61cbc1044ef39651d45f3e4.

[14:16] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/4055fde9dfd07fbff309a2b2ecb6df13a733fd0d

[14:17] <m-locks> a new one?

[14:17] <Tene> what is a new what?

[14:19] *** nacho joined
[14:26] *** nacho left
[14:28] *** stepnem left
[14:34] <m-locks> a new review :)

[14:40] *** nacho joined
[14:43] <masak> the use.perl.org home page looks depressingly desolate.

[14:44] <masak> the 12th German Perl Workshop in June is announced there, but not this weekend's Hackathon, or NPW in Iceland, or YAPC::EU in Pisa this summer...

[14:46] <PerlJam> masak: submit those stories then!  

[14:49] <masak> what, and lose the opportunity to complain? :P

[14:49] <masak> you're right, of course.

[14:50] <masak> I guess this situation occurs, though, because no-one really cares about use.perl any more, and we should all see about giving it a humane final rest.

[14:50] <masak> it used to be that Parrot and Rakudo releases were announced there too, but not anymore.

[14:52] <Su-Shee> I've never used it and rarely even looked at it.

[14:53] *** Jedai joined
[14:57] <masak> Su-Shee: ...except when you assiduously read pmichaud's, jnthn's and my blog posts, right? :)

[14:59] <masak> std: .say if .so

[14:59] <p6eval> std 29935: OUTPUT«ok 00:01 106m␤»

[14:59] <Su-Shee> masak: I don't read them over use.perl.org. 

[14:59] <masak> Su-Shee: oh, good. because frankly, the CSS is terrible over there.

[15:00] *** SmokeMachine joined
[15:00] <Su-Shee> "what css?" ;)

[15:00] <masak> 'xactly.

[15:00] <Su-Shee> probably, one day a perl (6?) forum is needed.

[15:01] <masak> maybe a combined forum-and-blog-engine?

[15:01] <Su-Shee> no. let blogs be blogs and forums be forums.

[15:02] <masak> fair enuf.

[15:02] <Su-Shee> though most contemporary forums have a feed.

[15:02] <Su-Shee> (and even fvwm (!) has a forum. ;)

[15:04] <mathw> fvwm still exists??

[15:05] <masak> Perl 6 isn't dead??

[15:05] <mathw> I guess I'm not really all that surprised

[15:06] <mathw> I'm just bored

[15:06] *** Guest61020 left
[15:06] <Tene> man, I've never been able to get into forums.

[15:07] * masak neither

[15:07] <Tene> IRC and mailing lists are great, but I feel awkward trying to squeeze anything meaningful and interactive into a web browser.

[15:07] <Tene> I don't really blog, either, though... so I'm a bit unusual.

[15:07] <masak> some people are crazy about them, it seems. different tools for different people, I guess.

[15:07] <Tene> nodnod

[15:08] <mathw> I find forums work for some things, and not for others

[15:08] <mathw> I use them, but only for certain things

[15:08] <mathw> A lot of it's down to the people rather than the subject matter

[15:09] <frettled> and the problem that Yet Another Forum means yet another sign-up procedure, another set of credentials, another set of preferences, and another web page to load :)

[15:09] *** uniejo left
[15:11] <masak> *sigh*

[15:11] <masak> hopefully Web 3.0 will have some concept of a web identity, so one doesn't have to create new accounts all the time.

[15:12] <mathw> OpenID, then

[15:12] <masak> yeah.

[15:14] *** nihiliad joined
[15:16] <mathw> You're all intelligent people, so maybe some of you know about good resources for multithreaded system design and programming techniques in C++?

[15:17] *** colomon_ joined
[15:17] *** colomon left
[15:17] *** colomon_ is now known as colomon

[15:23] *** masak left
[15:25] <vorner> mathw: Actually, I say that C++ is extremely unfriendly to multithreaded programming. I use haskell if possible for such things.

[15:28] *** IllvilJa left
[15:32] *** masak joined
[15:34] *** masak left
[15:35] <Su-Shee> mathw: of course it does. and it has features very few window managers have. still a bitch to config, though.

[15:36] <Tene> which is this, Su-Shee?

[15:36] <Su-Shee> I HATE web identities. none of them work really properly or fast and hello? I don't want to spread my identity all over everywhere.

[15:37] *** nihiliad left
[15:37] <Su-Shee> Tene: native svg support for elements of the wm which actually can be scaled for example.

[15:38] *** Psyche^ joined
[15:39] <mathw> vorner: yes, I know it is but I don't have a choice of language here

[15:39] *** Patterner left
[15:39] *** Psyche^ is now known as Patterner

[15:39] *** nihiliad joined
[15:40] <vorner> mathw: I did some small things using pthreads only, usually by trying to separate the things as much as possible

[15:41] *** korpenkraxar left
[15:42] *** bronco_creek joined
[15:47] <mathw> Yeah, we're a bit beyond small things with this

[15:47] <mathw> I've never been able to find anything seriously good on large-scale architecture of multithreaded systems in C++

[15:47] <mathw> maybe nobody knows how to do it well

[16:03] <m-locks> some stack reconstruction approaches have been researched

[16:04] <bronco_creek> Hi.  This is my first time here.  I'm a has-been/wanna-be perl programmer.  I just got around to installing parrot & rakudo and starting to play around.  I may be seeing a bug.  What's my next step?

[16:05] <m-locks> you try telling whats wrong

[16:05] <Tene> bronco_creek: it's pretty likely that you've found a bug.  You'll want to produce as minimal a test case as you can, and then submit it to the bug tracker.

[16:05] <Tene> rakudobug?

[16:05] <Tene> Oh, right, no purl in here.

[16:05] <bronco_creek> Where should I look to see if it is already reported?

[16:05] <Tene> [email@hidden.address]
[16:05] <Tene> Hmm.

[16:06] <bronco_creek> Thanks.

[16:08] *** masak joined
[16:18] <pugssvn> r29936 | lwall++ | [file-tests.t] fix parsefail 

[16:20] *** kfo left
[16:20] *** k23z__ joined
[16:20] *** k23z__ left
[16:20] *** k23z__ joined
[16:22] <masak> bronco_creek: we have a rakudo evalbot on the channel. reproducing the bug with this often produces some useful discussion which you can use in the bug report.

[16:22] <masak> rakudo: say (1 ^^ 2).WHAT

[16:22] <p6eval> rakudo 4055fd: OUTPUT«Method 'WHAT' not found for invocant of class 'Undef'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤»

[16:22] <masak> like that. :)

[16:23] *** kfo joined
[16:24] <bronco_creek> What I'm seeing involves instantiating an object.  Can the evalbot handle multiple lines of code?

[16:25] <m-locks> nope

[16:26] <TimToady> yes, it can

[16:26] <m-locks> whoa

[16:26] <masak> it can handle multiple statements.

[16:26] <masak> just separate them by semicolons.

[16:26] <TimToady> you can feed it ␤ characters that translate into newlines

[16:26] <masak> that, too.

[16:26] <masak> but golfing to a minimal program size helps both bots and people :)

[16:26] <m-locks> but it is all single line input

[16:27] <bronco_creek> Thanks, I'll give it a try.

[16:27] *** uniejo joined
[16:28] <TimToady> to clarify, the evalbot's irc interface is single line, but it will do translation both coming and going of ␤ characters

[16:28] <TimToady> so the program it is running has a multi-line interface

[16:29] <m-locks> ;)

[16:29] <TimToady> rakudo: { say 'I am a bare block'}␤{ say 'and so am I' }

[16:29] <p6eval> rakudo 4055fd: OUTPUT«I am a bare block␤and so am I␤»

[16:30] <bronco_creek> So, how do I type the "HL" characters?

[16:30] <TimToady> it's NL

[16:30] <TimToady> depends on your windowing system, likely

[16:30] <TimToady> but you can always copy/paste from evalbot output

[16:31] <bronco_creek> I'm using the IRC web client on a Windows system.

[16:31] <masak> TimToady: did you see the confusion in the backlog about the 'Therefore' on S03:1340? any opinions?

[16:31] <masak> bronco_creek: copy/paste?

[16:31] <bronco_creek> OK.

[16:32] <masak> that's what I do. I'm on Emacs, so copying is a no-op.

[16:32] <bronco_creek> rakudo: class Test1 { 	has $.a; 	has @.b; 	has %.c; }  my $tester = Test1.new(a => 'test'); say $tester.a;

[16:32] <p6eval> rakudo 4055fd: OUTPUT«Confused at line 11, near "class Test"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[16:32] <TimToady> "Most types don't have Inf, therefore we will supply one"

[16:32] <masak> bronco_creek: need a semicolon after the block.

[16:33] <bronco_creek> OK

[16:33] <masak> TimToady: if it really said that, I'd be less confused.

[16:33] <TimToady> or that ␤ character

[16:33] <TimToady> but semicolon is easier to type :)

[16:33] <bronco_creek> rakudo: class Test1 { 	has $.a; 	has @.b; 	has %.c; };  my $tester = Test1.new(a => 'test'); say $tester.a;

[16:34] <p6eval> rakudo 4055fd: OUTPUT«test␤»

[16:34] <masak> but it says 'Therefore any value of any type may be compared...' -- which is not a consequence of not all types having Inf.

[16:34] *** abra joined
[16:35] <TimToady> it is a pragmatic connector, much like "hopefully" is not saying that the thing you're talking about is happening with hopefulness

[16:35] <masak> ok. it's not vital that it be changed. I just found it unclear when I saw it.

[16:36] <TimToady> Hopefully the technical point is clear.  :)

[16:36] <bronco_creek> Hmm.  Must be something wrong with my installation.  On my system, any class with     has %.x ;   causes errors.

[16:36] <japhb> masak: Someone was asking about SDL and OpenGL bindings earlier?  In what context?  Rakudo?

[16:37] <masak> japhb: Perl 6 in general, I think. but probably implicitly Rakudo, yes.

[16:38] <masak> TimToady: :)

[16:39] <japhb> OpenGL already works in Rakudo (or rather, it did, back in the old branch, I haven't tested it with new master).  SDL bindings for Parrot are under development again (now by kthakore++), so that should be coming soonish too.

[16:39] *** uniejo left
[16:40] <japhb> Come to think of it, I guess now is the perfect time to rebuild and try it.  ;-)

[16:40] <m-locks> do eeeet

[16:40] <masak> japhb: cool! that's good news.

[16:41] <masak> a quick Google on Language Log shows that someone has proposed 'hopeably' as the statement-modifying adverb :)

[16:42] *** vorner left
[16:43] *** cotto_work joined
[16:46] <bronco_creek> Thanks all.  Your reputation for helping newbies is well deserved.  Hope I can contribute something more useful in the future.

[16:46] <bronco_creek> Now, how do I quit the IRC?

[16:46] <Tene> bronco_creek: /quit

[16:46] *** bronco_creek left
[16:46] *** betterworld left
[16:47] *** SmokeMachine left
[16:47] *** jnthn_mberends_b joined
[16:47] <jnthn_mberends_b> oh hai

[16:47] <jnthn_mberends_b> the mech bot returns

[16:47] <jnthn_mberends_b> masak: ping

[16:48] <jnthn_mberends_b> (btw, our wifi is HTTP only at the moment, so can't connect properly to IRC :-/)

[16:49] <masak> jnthn_mberends_mechbot: pong

[16:49] <jnthn_mberends_b> masak: hi

[16:49] <jnthn_mberends_b> masak: did you read our stuffs?

[16:49] <masak> \o/ hi!

[16:50] <masak> I did indeed.

[16:50] <jnthn_mberends_b> ok

[16:50] <masak> you stopped right before the good parts! :)

[16:50] <masak> (i.e. the ones I'm interested in)

[16:50] <jnthn_mberends_b> thoughts on the talk?

[16:50] <jnthn_mberends_b> masak: add them to the agenda then! :-)

[16:50] <masak> oh, is it a talk?

[16:50] <masak> I think I'm missing a bit of context here.

[16:51] <jnthn_mberends_b> masak: no, did yuou see the gist about us trying to do something as a group in pm's talk slot?

[16:51] <masak> no, but I've been toying with the same idea myself.

[16:51] <masak> wondering how to pitch it. :)

[16:51] <jnthn_mberends_b> http://gist.github.com/321595

[16:51] * masak reads

[16:52] <masak> Plan A sounds like what I thought of doing. Plan B sounds like fun too. I'm up for either. :)

[16:52] <masak> Plan C sounds a bit risky :P

[16:53] <jnthn_mberends_b> Well, we have no input towards Plan A so far.

[16:53] <jnthn_mberends_b> And we're kinda tight on time...

[16:53] <masak> you don't think we can base it on earlier similar pmichaud talks?

[16:53] <jnthn_mberends_b> such as?

[16:53] * masak searches

[16:54] * jnthn_mberends_b wonders whether there's been more recent Rakudo update talks than YAPC::Europe.

[16:54] *** pmurias joined
[16:54] <masak> p'haps not.

[16:54] <Tene> let's how you don't end up implementing Plan Omega: Kill All Humans

[16:55] <masak> right. the YAPC::EU slides are here. http://www.pmichaud.com/2009/pres/yapceu-rakudo/slides/start.html

[16:56] <masak> going through them now to see how much is current and salvageable.

[16:56] <jnthn_mberends_b> Welll, they pre-date nqp-rx and ng.

[16:57] <masak> sure. I'm just thinking whether that impacts the message greatly.

[16:57] <masak> ooh, pmichaud++ used my show-of-hands gimmick! :)

[16:57] <masak> I had forgotten about that.

[16:58] <jnthn_mberends_b> http://www.pmichaud.com/2009/pres/ seems to not have more recent than the YAPC::EU one on Rakudo.

[16:58] <masak> the cards example is teh awesome.

[16:58] <masak> if we do any of the Plans, we must do that.

[16:59] *** abra left
[17:00] <TimToady> in the phone call yesterday pmichaud++ suggested a panel discussion

[17:00] <masak> I can see that working, too.

[17:00] <jnthn_mberends_b> ooh, interesting

[17:00] <masak> hm, http://www.pmichaud.com/2009/pres/yapceu-rakudo/slides/slide85.html is the first really out-of-date slide.

[17:00] <jnthn_mberends_b> As in questions from the floor? Or?

[17:01] <TimToady> he didn't give any details

[17:01] <TimToady> just noted that four of the leading lights would be there :)

[17:01] <TimToady> and four is a good number for a panel

[17:02] <masak> seems there's a real danger of questions drying up at minute 14... or a meatspace flamewar breaking out... :)

[17:02] <masak> where do I sign up? :)

[17:02] <TimToady> hopefully among the panel :)

[17:02] <masak> I'd pay to see that!

[17:02] <masak> the real problem we're facing is that there's not really any time to rehearse anything.

[17:03] <masak> from that viewpoint, panel discussion sounds like a good option.

[17:03] <jnthn_mberends_b> yes, it's lwo on prep

[17:04] <jnthn_mberends_b> masak: were you at the nordic perl workshop last year, when the go open panel sessions happened?

[17:04] <masak> aye.

[17:04] <jnthn_mberends_b> (Bruce Perens, Larry, Jon Hall)

[17:04] <masak> sat between half of the jnthn-mberends mech bot.

[17:04] <jnthn_mberends_b> iirc that worked as first there was somebody asking the panel questions to get it seded

[17:04] * japhb just tried OpenGL examples under current Rakudo

[17:04] <jnthn_mberends_b> And then it was handed over to the audience

[17:05] <TimToady> Maddog drank ten beers during that

[17:05] <japhb> Looks like 'use OpenGL:from<parrot>;' no workie.

[17:05] <jnthn_mberends_b> *seeded

[17:05] <japhb> Is that syntax changed, or just nyi?

[17:05] <jnthn_mberends_b> TimToady: ooh.... :-D

[17:05] <Tene> japhb: it *used* to work.

[17:05] <TimToady> had to run off to pee in the middle...

[17:05] <Tene> I expect it didn't get put back in.

[17:05] <Tene> I can work on that today.

[17:05] *** uniejo joined
[17:05] <masak> jnthn_mberends_b: I think I'm onto which half of you is at the keyboard :P

[17:05] *** SmokeMachine joined
[17:06] <jnthn_mberends_b> how'd you guess? :-P

[17:06] <japhb> Tene, OK, thanks

[17:07] * masak reads the last line of http://www.pmichaud.com/2009/pres/yapceu-rakudo/slides/slide93.html and snickers

[17:07] <jnthn_mberends_b> lol

[17:08] <japhb> "Magic unicorns may appear."  ... watches white 4-hooved animal with conspicuous spiral horn trot by ... "Right.  Magic unicorns *will* appear."

[17:08] <jnthn_mberends_b> In light of lack of prep time etc, the panel session seems like a good idea. 

[17:08] <jnthn_mberends_b> We're up for it.

[17:09] <TimToady> and you all have different cool accents

[17:09] <masak> vee're yp for it.

[17:10] <jnthn_mberends_b> OK, we haz a plan.

[17:10] <jnthn_mberends_b> \o/

[17:10] <jnthn_mberends_b> And pmichaud++ for suggesting it.

[17:10] <jnthn_mberends_b> And TimToady++ for mentioning.

[17:10] <masak> masak: cool Nordic accent. mberends: cool Dutch accent. moritz: cool German accent. jnthn: cool Lolcat accent.

[17:10] <TimToady> shouldn't that be \o/\o/?

[17:11] <jnthn_mberends_b> the mechbot junction collapsed

[17:11] <Tene> people actually prepare and rehearse talks?  Huh, I've been doing it wrong all this time.

[17:12] <masak> Tene: they've threatened to record me on film! that sure got me working.

[17:12] <jnthn_mberends_b> on your accent?

[17:12] <masak> jeees.

[17:12] <jnthn_mberends_b> lollol

[17:13] <masak> I'm also thinking how I might integrate the "Lifts produced by Schindler" pun into my talk... and then send the video to Tene... :)

[17:13] <Tene> :P

[17:14] <Tene> masak: I'm sure you'll get plenty of other puns in.

[17:14] <masak> some of which are even known to work on real humans!

[17:15] <masak> I pass a bit more of the Turing test each day.

[17:15] <masak> I mean... of course I'm human. *cough*

[17:16] <Tene> I've accidentally failed the turing test on IRC several times before.

[17:16] <TimToady> so how come lollol didn't collapse too?

[17:16] <jnthn_mberends_b> it's a one junction

[17:16] <masak> Do you think that I've accidentally failed the turing test on IRC several times before is the reason you're here, Tene?

[17:17] *** SmokeMachine left
[17:17] <masak> jnthn_mberends_b: 1o11o1 <--- one junction

[17:18] <TimToady> 101

[17:18] <masak> The Matrix was clearly before its time.

[17:19] <TimToady> where are those backwards kana in Unicode, I wonder...

[17:19] <Tene> TimToady: they were reversed because they were *outside* the matrix looking *in*.

[17:20] <Tene> the real world is little-endian.

[17:20] <TimToady> oh, I thought maybe they were hebrew kana or some such...

[17:20] <jnthn_mberends_b> OK, if anyone has question suggestions for the panel discussion, prefix them as panelbot: and then we can grep 'em out of the infrared clogs

[17:20] * colomon proposes the Higgins Test, where we see if a person can successfully fool another person into thinking he is Eliza.

[17:20] <masak> whoa. Hebrew kana...

[17:20] <masak> colomon++ # :D

[17:21] <TimToady> colomon: don't you mean the 'iggins Test, guv'vor?

[17:22] <colomon>  TimToady++

[17:26] <jnthn_mberends_b> panelbot: Is the Rakudo grammar expected to converge with STD? # for example

[17:26] <jnthn_mberends_b> We could also have questions taken from IRC too. ;-)

[17:26] <masak> that'd be cool.

[17:27] <jnthn_mberends_b> Just log someone in on the web irc client as panelbot ;-)

[17:28] <TimToady> if you can can have it up on the screen, pm and I can arrange to be on irc then

[17:29] <TimToady> we mentioned that in the phonecall too

[17:29] <Tene> panelbot: Which line of STD.pm is your favorite?

[17:29] <jnthn_mberends_b> can arrange that :-)

[17:34] *** mberends_jnthn_b joined
[17:35] <TimToady> oh noes

[17:35] <mberends_jnthn_b> gah, ran out of web minutes

[17:35] *** justatheory joined
[17:36] *** jnthn_mberends_b left
[17:36] <TimToady> you're in a maze of twisty little irc nicks, all different...

[17:37] <TimToady> maybe you should just use each web connection for one IP packet, then run TCP on top of that...

[17:38] <mberends_jnthn_b> We has limited minutes, so we'll log off now...we'll be back around 11 CET.

[17:38] <TimToady> 11 p.m.?

[17:38] <mberends_jnthn_b> TimToady: yes

[17:38] <mberends_jnthn_b> :-)

[17:39] <mberends_jnthn_b> o/ o/

[17:39] <TimToady> \o xx *

[17:39] *** mberends_jnthn_b left
[17:39] <lichtkind> :)

[17:39] <lichtkind> TimToady: http://www.perlfoundation.org/perl6/index.cgi?timeline ist so  allright?

[17:43] *** masak left
[17:47] *** stepnem joined
[17:52] *** jaldhar left
[17:58] <diakopter> I keep missing masak

[17:59] <colomon> btw (as I see you were involved) I'm pretty sure 1...^* is getting parsed as 1....(^*)

[17:59] <colomon> rakudo: say (^*).batch(10)

[17:59] <p6eval> rakudo 4055fd: OUTPUT«Method 'batch' not found for invocant of class 'Range'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤»

[18:00] <colomon> rakudo: say (^*).iterator.batch(10)

[18:00] <p6eval> rakudo 4055fd: OUTPUT«␤»

[18:00] <colomon> :(

[18:00] *** dakkar left
[18:02] <colomon> rakudo: say (0..^*).iterator.batch(10)

[18:02] <p6eval> rakudo 4055fd: OUTPUT«␤»

[18:02] <colomon> rakudo: say (0..10).iterator.batch(10)

[18:02] <p6eval> rakudo 4055fd: OUTPUT«0123456789␤»

[18:02] <colomon> interesting...

[18:03] <diakopter> colomon: you were talking to me?

[18:03] <colomon> diakopter: more or less.  :)

[18:03] <diakopter> oh :)

[18:03] <colomon> you reported that bug to massk, no?

[18:03] <diakopter> yeah

[18:04] <diakopter> 'cept, as usual, I wasn't certain it was a bug

[18:04] <colomon> well, for sure it's a feature which isn't implemented yet.

[18:05] <colomon> but it may be showing a bug in the existing features, too.  ;)

[18:05] *** athenot left
[18:06] <colomon> What I don't know is if it is being treated as 1...0, 1, 2, 3, etc., or 1...(scalar range 0..^*)

[18:06] <diakopter> ah

[18:06] <diakopter> oh

[18:07] <diakopter> rakudo: say (0..{^*}).iterator.batch(10)

[18:07] <p6eval> rakudo 4055fd: OUTPUT«0123456789␤»

[18:07] <colomon> for sure my examples above indicate some kind of range bug has snuck into the code.

[18:07] <diakopter> rakudo: say (0..^{*}).iterator.batch(10)

[18:07] <p6eval> rakudo 4055fd: OUTPUT«0123456789␤»

[18:09] <lichtkind> http://www.perlfoundation.org/perl6/index.cgi?ofun

[18:09] <lichtkind> rewrote that a bit

[18:09] <lichtkind> any complains?

[18:10] *** Toony left
[18:14] *** ShaneC joined
[18:30] <arnsholt> lichtkind: "Pugs was allegedly developed this way and grow thatswhy in many directions." looks like a mix of an old and a new sentence

[18:30] <lichtkind> arnsholt: it is, your free to optimze :)

[18:31] <lichtkind> im no native speaker

[18:33] *** _newbie_ joined
[18:33] <arnsholt> I'll have a look at the edit log and try to figure out what you intended to say =)

[18:35] *** payload left
[18:37] *** jonasbn joined
[18:37] <jonasbn> good evening all

[18:41] <colomon> o/

[18:42] *** IllvilJa joined
[18:46] *** quietfanatic left
[18:52] *** justatheory left
[18:53] *** justatheory joined
[18:53] *** cosimo left
[18:54] *** cosimo joined
[18:55] *** prism joined
[18:55] *** daemon left
[18:55] *** prism is now known as daemon

[19:04] *** jaldhar joined
[19:05] *** jaldhar left
[19:05] *** jaldhar joined
[19:07] *** athenot_ joined
[19:08] *** athenot joined
[19:08] *** athenot left
[19:08] *** athenot_ is now known as athenot

[19:13] *** payload joined
[19:13] *** jmarti joined
[19:13] *** _jaldhar joined
[19:16] *** jaldhar left
[19:20] *** flavioglock joined
[19:20] *** Chillance joined
[19:21] <flavioglock> hi

[19:23] <colomon> \o

[19:25] *** sbp left
[19:29] *** takadonet left
[19:29] *** rv2733 left
[19:32] *** flavioglock left
[19:34] *** fglock joined
[19:36] <diakopter> fglock: how goes it

[19:36] <diakopter> or should I say, how "go"es it

[19:37] <fglock> diakopter: all is fine :)

[19:37] *** jaldhar_ joined
[19:37] *** _jaldhar left
[19:38] <fglock> Perlito now has an interpreter written in plain mp6, so eval() is now possible

[19:38] <diakopter> oo

[19:38] <fglock> doesn't work in Go yet, needs some debugging

[19:40] <fglock> today I've added t/20-eval.t - it passes all tests in the Perl5 backend; I'm now debugging the Javascript backend

[19:40] <diakopter> does it work in JS?

[19:40] <diakopter> oh

[19:40] *** ashleydev joined
[19:40] <fglock> js is missing "exists"

[19:41] <fglock> (looking up in google for hints how to implement it)

[19:41] <diakopter> I can help

[19:42] <diakopter> wait, which "exists"

[19:42] <diakopter> hash key existence?

[19:43] <fglock> yes

[19:43] <diakopter> jsobj.hasOwnProperty(key) tells you if the object has it defined on itself

[19:43] <fglock> thanks :) - testing...

[19:43] <diakopter> typeof(jsobj[key])!='undefined' tells you if the object has it defined anywhere on its prototype chain

[19:45] *** ashleydev left
[19:45] *** ashleydev joined
[19:55] <fglock> hasOwnProperty works, testing eval again...

[19:59] *** ive joined
[20:01] *** nsh_ is now known as nsh

[20:01] *** nsh left
[20:01] *** nsh joined
[20:01] *** nsh is now known as nsh-

[20:01] *** nsh- is now known as nsh

[20:05] *** riffraff left
[20:10] *** payload left
[20:22] *** buubot left
[20:23] *** nsh is now known as nsh_

[20:23] *** nsh_ is now known as nsh

[20:38] *** payload joined
[20:40] *** k23z__ left
[20:42] <pmichaud> good afternoon, #perl6

[20:42] <phenny> pmichaud: 09:53Z <jnthn_and_mberen> tell pmichaud please see http://gist.github.com/321595 if you get chance. :-)

[20:43] <pmichaud> phenny:  tell jnthn I will put together an outline of what I intended for the talk; may either be just an outline or may be slides.

[20:43] <phenny> pmichaud: I'll pass that on when jnthn is around.

[20:44] <pmichaud> phenny: tell jnthn I should have the outline a bit later tonight (about 6 hrs from now, or 03h00 UTC)

[20:44] <phenny> pmichaud: I'll pass that on when jnthn is around.

[20:48] <frettled> pmichaud: by golly, you're right, it's after noon :) (hi)

[20:48] <frettled> pmichaud: how are you doing, recovered from snowy hell yet?

[20:49] <pmichaud> snowy hell?

[20:49] <frettled> Didn't you have some rather bothersome snowy days a while ago?

[20:49] <pmichaud> oh, a couple of weeks ago, yes.

[20:50] <pmichaud> that snow's all gone :)

[20:50] <frettled> \o/

[20:51] *** ashleydev left
[20:59] *** meppl joined
[21:06] <colomon> we've still got snow here.  :)

[21:08] <m-locks> :)

[21:09] <frettled> some streets are bare, here

[21:09] <frettled> salt helps a lot :)

[21:09] *** frettled sets mode: +o colomon

[21:13] *** jaldhar_ left
[21:13] *** nacho left
[21:17] *** SmokeMachine joined
[21:23] *** payload left
[21:26] *** buubot joined
[21:26] *** k23z__ joined
[21:26] *** k23z__ left
[21:26] *** k23z__ joined
[21:27] *** buu joined
[21:28] *** justatheory left
[21:30] *** justatheory joined
[21:30] <colomon> frettled: our streets are bare, it's actually pretty warm today.

[21:31] *** ruoso left
[21:31] <colomon> but there was a lot of snow of the ground, so where it hasn't been cleared at all, it's still pretty deep.

[21:33] <frettled> it was pretty warm here, too, sun shining for three or four days straight, maybe two or three above freezing

[21:35] <frettled> I'm glad I don't live in inland Canada :)

[21:35] *** _newbie_ left
[21:35] <colomon> for sure I'd prefer Newfoundland to most of it...  :)

[21:36] <colomon> and my winter trips to Toronto always seem to involve blizzards.

[21:36] *** ive left
[21:38] *** uniejo left
[21:45] *** athenot left
[21:45] <pmurias> fglock: hi!

[21:51] *** am0c left
[21:53] *** fglock left
[21:58] <dalek> rakudo: 37e5746 | pmichaud++ | docs/release_guide.pod:

[21:58] <dalek> rakudo: Update release_guide.pod with recent release information.

[21:58] <dalek> rakudo: review: http://github.com/rakudo/rakudo/commit/37e574683ed0c55ca1155bf78a9ace7c2e7a3c6a

[22:02] *** jonasbn left
[22:12] *** k23z__ left
[22:13] *** SmokeMachine left
[22:14] *** k23z__ joined
[22:14] *** k23z__ left
[22:14] *** k23z__ joined
[22:15] *** k23z__ left
[22:15] *** masak joined
[22:16] <masak> <diakopter> I keep missing masak

[22:16] *** k23z__ joined
[22:16] *** k23z__ left
[22:16] *** k23z__ joined
[22:16] <masak> diakopter: awww! I missed you too! :)

[22:16] *** frettled sets mode: +o masak

[22:16] <masak> nom nom nom @

[22:16] *** k23z__ left
[22:17] <masak> in http://www.perlfoundation.org/perl6/index.cgi?ofun

[22:17] <masak> '-O is the command line option for compiler'

[22:18] <masak> should be '-O is A command line option for compilerS'

[22:18] <masak> (hm, perhaps better written '-O is *a* command line option for compiler*s*')

[22:18] <masak> lichtkind: ^

[22:19] <lichtkind> ive seen it :)

[22:19] <masak> s/we human/us humans/

[22:19] <masak> s/our doing/our actions/

[22:19] <frettled> but that's no fun ;)

[22:20] <masak> frettled: no-one said grammatical correctness was going to be fun :)

[22:20] <lichtkind> frettled: whats no fun?

[22:20] *** dennisroberts joined
[22:20] <lichtkind> ah

[22:20] <masak> frettled: it's *about* fun, not fun per se. :P

[22:20] <lichtkind> change it later

[22:20] <lichtkind> im officially i my bath

[22:21] <masak> I can see how that might complicate wiki editing.

[22:21] *** dennisroberts left
[22:22] *** jmarti left
[22:24] <lichtkind> masak: so feel free to edit yourself :)

[22:25] <frettled> masak: writing about fun should be fun :)  that's why they invented fun-roll-loops

[22:25] <masak> lichtkind: thanks for the offer... I think I'll leave it in your competent hands. still working on my slides over here.

[22:25] * masak is less stressed-up about the slides than usual

[22:26] <masak> frettled: I remember the Talk page about Discordianism on Wikipedia at some point.

[22:26] <frettled> masak: that must have been fun :)

[22:26] <masak> frettled: it was all about convincing stubborn people not to write the article in a Discordian tone of voice.

[22:26] * masak heads over there to see if that discussion is still there

[22:27] * frettled too

[22:27] <frettled> "This article needs additional citations for verification." - bwahahahaha

[22:29] *** Su-Shee left
[22:29] <diakopter> masak: caught!

[22:30] <masak> diakopter: hey there. :)

[22:30] <diakopter> fuzz-stress time

[22:31] * masak charges up his bionic arms

[22:32] <masak> I might not be here for long.

[22:32] <masak> forewarned is bionic-armed.

[22:32] <masak> (need to regenerate before tomorrow's big journey)

[22:34] <masak> frettled: it must have been this discussion page I was thinking about: http://en.wikipedia.org/wiki/Talk:Fnord

[22:35] <masak> std: [][]

[22:35] <p6eval> std 29936: OUTPUT«ok 00:01 106m␤»

[22:35] <masak> rakudo: [][]

[22:35] <p6eval> rakudo 37e574: OUTPUT«Confused at line 11, near "[][]"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (ext/nqp-rx/src/stage0/HLL-s0.pir:328)␤»

[22:35] <masak> is it just something unimplemented, or worthy of a bug report?

[22:35] <masak> alpha: [][]

[22:35] <p6eval> alpha 30e0ed:  ( no output )

[22:36] <diakopter> berg

[22:36] <masak> it regressed, so I'm reporting it.

[22:36] * masak submits rakudobug

[22:36] <masak> diakopter: berg? as in salty mountain?

[22:36] <diakopter> rakudoberg

[22:36] <masak> oh, it's a distortion of 'bug'. I see.

[22:37] <masak> well, there's been a berg of bugs lately, that's for sure.

[22:43] <masak> alpha: my $a = 0; $a++++; say $a

[22:43] <p6eval> alpha 30e0ed: OUTPUT«1␤»

[22:43] <masak> rakudo: my $a = 0; $a++++

[22:43] <p6eval> rakudo 37e574: OUTPUT«Cannot assign to readonly value␤current instr.: '&die' pc 16799 (src/builtins/Junction.pir:347)␤»

[22:43] <diakopter> that seems more proper

[22:43] <masak> does it? got spec to back that up?

[22:44] <masak> I always thought postfix:<++> produced lvalues.

[22:44] <diakopter> seeing as how $a++ should return a copy of the value 

[22:44] <diakopter> oh

[22:44] <masak> or is that only prefix:<++>?

[22:44] <masak> what does Perl 5 do?

[22:44] <masak> "Can't modify postincrement (++) in postincrement (++)"

[22:45] <diakopter> Can't modify postincrement (++) in postincrement (++) at -e line 1, near "++++"

[22:45] <masak> excellent error message. :) funny, and to the point.

[22:45] <diakopter> yes, that

[22:45] *** wknight8111 joined
[22:45] <masak> (incidentally funny, that is. I'm sure it's a specific case of a more general error message)

[22:45] <masak> ok, so I won't report Rakudo for that, then.

[22:45] <jnthn> o/

[22:45] <phenny> jnthn: 20:43Z <pmichaud> tell jnthn I will put together an outline of what I intended for the talk; may either be just an outline or may be slides.

[22:45] <phenny> jnthn: 20:44Z <pmichaud> tell jnthn I should have the outline a bit later tonight (about 6 hrs from now, or 03h00 UTC)

[22:46] <masak> rakudo: my $a = 0; ++$a++; say $a

[22:46] <p6eval> rakudo 37e574: OUTPUT«2␤»

[22:46] <masak> \o/

[22:47] <diakopter> rakudo: say 1%%1

[22:47] <p6eval> rakudo 37e574: OUTPUT«Method 'postcircumfix:<[ ]>' not found for invocant of class ''␤current instr.: '!postcircumfix:<[ ]>' pc 10568 (src/builtins/Role.pir:90)␤»

[22:47] <masak> ooh!

[22:47] * masak submits rakudobug

[22:47] * diakopter wins

[22:47] <jnthn> phenny: tell pmichaud I think we'll go with pannel session rather than a replacement talk.

[22:47] <phenny> jnthn: I'll pass that on when pmichaud is around.

[22:47] <masak> diakopter: not so. it's 1-1 so far.

[22:47] <diakopter> oh

[22:47] * diakopter catches up

[22:48] <diakopter> std: say 1%^^1

[22:48] <p6eval> std 29936: OUTPUT«===SORRY!===␤Preceding context expects a term, but found infix ^^ instead at /tmp/Yminm8Zt2F line 1:␤------> say 1%^^⏏1␤FAILED 00:01 105m␤»

[22:48] <diakopter> rakudo: say 1%^^1

[22:48] <p6eval> rakudo 37e574: OUTPUT«1␤»

[22:49] * masak submits [WEIRD] rakudobug

[22:49] <diakopter> heh

[22:49] <diakopter> that counts as 0.5

[22:49] <masak> TimToady still hasn't acknowledged the 'my @stuff[ %100_000 ]' STD.pm-bug I found a few days back.

[22:50] <diakopter> I didn't see it

[22:50] <masak> std: my @stuff[ %100_000 ]

[22:50] <diakopter> maybe you were netsplit

[22:50] <p6eval> std 29936: OUTPUT«===SORRY!===␤Whitespace is required between alphanumeric tokens at /tmp/mTBTXUFHnX line 1:␤------> my @stuff[ %100⏏_000 ]␤FAILED 00:01 105m␤»

[22:50] <diakopter> isn't that just a LTA error?

[22:51] *** k23z__ joined
[22:52] <diakopter> rakudo: say @*_ ~ 'hi'

[22:52] <masak> it should be kosher, but due to how STD.pm doesn't special-case % there, it isn't.

[22:52] <masak> no, it shouldn't be an error.

[22:52] <masak> by my reading of the spec.

[22:52] <masak> '%' here means 'wrap the edges'/

[22:52] <masak> s[/][.]

[22:52] <masak> according to S09.

[22:52] <p6eval> rakudo 37e574: OUTPUT«Contextual @*_ not found␤current instr.: 'perl6;Perl6Exception;throw' pc 14482 (src/builtins/Seq.pir:52)␤»

[22:52] <diakopter> rakudo: say @*_

[22:52] <p6eval> rakudo 37e574:  ( no output )

[22:53] <diakopter> rakudo: say @*_; say 'hi'

[22:53] <p6eval> rakudo 37e574: OUTPUT«hi␤»

[22:53] <diakopter> sometimes say fails silently

[22:53] <masak> yes. I've had that too.

[22:54] <masak> time for me to sleep.

[22:55] <masak> diakopter: I'll collect any further bugs you find when I wake up :)

[22:55] <diakopter> rakudo: @_.=[3]

[22:55] <p6eval> rakudo 37e574: OUTPUT«Method '!postcircumfix:<[ ]>' not found for invocant of class 'ResizablePMCArray'␤current instr.: '!dispatch_.=' pc 440 (src/glue/dispatch.pir:118)␤»

[22:55] <masak> that one, for example :)

[22:55] <masak> o/

[22:55] *** masak left
[22:55] <diakopter> anytime I see ResizablePMCArray in an error msg, I consider it a bug

[22:55] <diakopter> l8r

[22:57] <diakopter> rakudo: say @_.perl

[22:57] <p6eval> rakudo 37e574: OUTPUT«Method 'perl' not found for invocant of class 'ResizablePMCArray'␤current instr.: '_block14' pc 29 (EVAL_1:0)␤»

[22:57] * jnthn wonders why it's init'd to @_.

[22:58] *** pmurias left
[22:59] *** k23z__ left
[23:04] *** lestrrat is now known as lest_away

[23:12] *** rv2733 joined
[23:16] *** iblechbot left
[23:18] <lichtkind> i saved http://www.perlfoundation.org/perl6/index.cgi?poniecode_org

[23:20] <lichtkind> jnthn: o/

[23:20] *** meppl left
[23:21] *** quietfanatic joined
[23:26] *** nihiliad left
[23:32] *** lest_away is now known as lestrrat

[23:39] <pmichaud> jnthn: ping

[23:39] <phenny> pmichaud: 22:47Z <jnthn> tell pmichaud I think we'll go with pannel session rather than a replacement talk.

[23:41] <pmichaud> phenny:  tell jnthn  panel session sounds awesome.  Between today and tomorrow I'll put together a list of bullet points of things I wanted to get across/accomplish with my talk; I suspect you all can work those in (or use them as starting items for the talk) on Saturday

[23:41] <phenny> pmichaud: I'll pass that on when jnthn is around.

[23:43] <colomon> pmichaud: Did you see the gather / take bug the other day?  (I'm somewhat out of it at the moment, but...)

[23:45] <colomon> rakudo: ((1...*) Z (3...*)).batch(20).perl.say

[23:45] <p6eval> rakudo 37e574: OUTPUT«(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22)␤»

[23:47] <colomon> That's a little vague, but I'm 99% sure the issue is that you can only have one instantiation of a given gather block running at a time.

[23:48] <pmichaud> colomon: okay, I can look into a bit.

[23:48] <pmichaud> *into it

[23:49] <pmichaud> the code is supposed to be set up to handle multiple given/take blocks

[23:49] <colomon> Thanks.

[23:49] <colomon> original (more complicated) report was:

[23:49] <colomon> http://lastofthecarelessmen.blogspot.com/2010/03/lazy-sieve-of-eratosthenes-sidetracked.html

[23:50] <Tene> pmichaud: the problem with gather/take is the sub cloning, unless that's been fixed.

[23:51] <pmichaud> that makes sense

[23:52] <pmichaud> I did some work on the sub cloning, but my "fix" caused other things to break so I abandoned it

[23:52] <pmichaud> I'll look into it again.

[23:53] *** eternaleye left
[23:53] <colomon> just to make sure I was clear -- I'm not seeing a problem using different gathers at the same time.  It's when the same gather code is called twice and you then try to run both iterators at the same time.

[23:53] <colomon> which makes it sound like cloning could indeed be the issue.

[23:55] *** snarkyboojum joined
[23:55] *** rv2733 left
[23:58] <lue> hello! (looking at the backlogs, it seems we could define "day" and "night" by the most prominent people around at certain times)

[23:58] <lue> (ie. not day, but masak. Not the nightshift, but the jnthn-shift)

