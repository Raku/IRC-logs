[00:00] *** MayDaniel left
[00:01] *** risou joined
[00:04] *** jedai_ left
[00:04] *** sji left
[00:08] *** Caffeine joined
[00:08] *** jedai joined
[00:24] *** Chillance left
[00:34] *** buubot left
[00:34] *** buubot joined
[00:52] *** QinGW joined
[01:10] *** nymacro left
[01:28] *** redicaps joined
[01:35] *** dukeleto left
[01:36] *** dukeleto joined
[01:43] <arnsholt> rakudo: say $*IN.get

[01:43] <p6eval> rakudo 96d7e0: OUTPUT«Land der Berge, Land am Strome,␤»

[01:47] <colomon> rakudo: say $*IN.get.flip

[01:47] <p6eval> rakudo 96d7e0: OUTPUT«,emortS ma dnaL ,egreB red dnaL␤»

[01:54] *** nymacro joined
[01:55] <jjore> Perhaps this is an issue I should take to parrot but I thought I just build parrot and rakudo fails its build inside parrot.  dynext/perl6_group.so: undefined symbol: Parrot_capture_lex

[01:55] <jjore> Presumably this is familiar?

[01:56] <jjore> For the curious, my complete build transcript at http://diotalevi.isa-geek.net/~josh/101219/

[02:08] <colomon> Hmm.  It looks like maybe Rakudo is building, but it fails when it tries to compile Test.pm?

[02:08] <colomon> can you try just ./perl6    ?

[02:12] <jjore> Same failure.

[02:16] <jjore> Shrug. Looking at it under LD_DEBUG=all, I see it looking in ./perl6, /usr/local/lib/libparrot.so.2.10.1, then going off to unrelated libs and failing.

[02:19] <jjore> I guess I'll go find #rakudo and ask there.

[02:23] <colomon> there is no #rakudo.

[02:23] <colomon> this is where the rakudo developers hang out.

[02:23] <jjore> Oh, well ok then.

[02:24] <jjore> So uh, steps to repro: fetch repos for parrot + rakudo, build/install parrot, can't build rakudo

[02:24] *** takadonet1 left
[02:25] <colomon> platform?

[02:25] <jjore> ubuntu.

[02:25] <colomon> (most of the Rakudo developers are asleep, unfortunately.)

[02:26] *** felliott joined
[02:31] <colomon> might be worth peeking in #parrot to see if anyone knows what is going on there.  I always build Rakudo with --gen-parrot, so this is a bit out of my experience...

[02:33] <jjore> Ah.

[02:34] <colomon> They may know if something has changed with Parrot_capture_lex recently.

[02:36] * jjore tried `git log -Scapture_lex` and didn't notice anything special.

[02:36] <jjore> Oh well. I can just as well play a video game instead too. :-)

[02:42] *** molaf_ joined
[02:45] *** uasi joined
[02:45] *** risou left
[02:45] <uasi> hi there

[02:45] *** _twitch left
[02:46] *** molaf left
[02:47] <uasi> colomon, jjore: Parrot_capture_lex thing has changed in this commit https://github.com/rakudo/rakudo/commit/fedc1172add911e5d54302d30772c2fe6cf80657

[02:48] <colomon> uasi++

[02:49] *** _twitch joined
[02:49] <uasi> I got the same error when I  updated to that version of Parrot with --gen-parrot

[02:50] <jjore> yep. wasi++

[02:51] <uasi> jjore: maybe you should do 'make realclean' in raludo repo and try ./Configure.pl --gen-parrot

[02:52] <jjore> Yep, will do. At least, something like that.

[02:54] *** agentzh joined
[02:54] <jjore> Oh, interestingly enough, I guess I was missing that commit.

[02:55] <jjore> Oh, yep. I'd noticed Parrot_sub_capture_lex in parrot. Thought it was merely a related but different function.

[03:02] *** cschimm1 left
[03:02] *** cschimm1 joined
[03:07] *** Caffeine left
[03:07] *** Caffeine joined
[03:08] *** Caffeine is now known as Guest86357

[03:08] *** lopaway is now known as lopnor

[03:12] <colomon> anyone online remember how to use wrap?  (or at least where it appears in the spec?)

[03:12] *** lopnor is now known as lopaway

[03:13] <Jmax> S06

[03:15] <colomon> danke

[03:16] <Jmax> bitte

[03:31] * colomon thinks he finally has a working p2, now just needs to stress test it up, clean it up, and maybe make a module with one or two of the handy core routines.

[03:32] <arnsholt> colomon: That's the first one I did too =)

[03:32] <colomon> It's a routine I've written several times before, though never in p6 (it turned out, I thought I had it done already).

[03:33] <arnsholt> Ah, right. I'd never done it before, but knew the generalities of it

[03:33] <arnsholt> (Having taken a 3D graphics course a few years ago)

[03:33] <colomon> conceptually very simple, but getting the details right is a bit tricky (or at least, I found it so).

[03:34] <arnsholt> Yeah, I'm sure my code is riddled with bugs

[03:35] <colomon> I think mine is fairly robust (barring more typos), but could definitely use serious cleaning and testing.

[03:36] <arnsholt> Yeah, I've got to write some tests too

[03:37] <arnsholt> And documentation. I've got a single line comment in my code ATM =)

[03:37] <arnsholt> But I've sidetracked on to p4 now, which is fun

[03:38] *** uasi left
[03:58] *** adu joined
[04:01] *** am0c joined
[04:03] *** lopaway is now known as lopnor

[04:10] *** satyavvd joined
[04:17] *** ab5tract joined
[04:20] *** Guest86357 is now known as Caffeine

[04:34] *** simcop2387 left
[04:35] *** nymacro left
[04:37] *** simcop2387 joined
[04:44] *** felliott left
[04:45] *** masonkramer left
[04:52] *** orafu left
[04:54] *** orafu joined
[05:15] <dalek> sprixel: 43db628 | diakopter++ | / (5 files):

[05:15] <dalek> sprixel: add antlr grammars

[05:15] <dalek> sprixel: review: https://github.com/diakopter/sprixel/commit/43db628c19

[05:24] *** envi joined
[05:31] *** youwin_ left
[05:36] *** uasi joined
[05:41] *** HarryS left
[06:08] *** HarryS joined
[06:12] *** am0c left
[06:20] *** charan joined
[06:21] *** charan left
[06:30] *** kaare joined
[06:31] *** kaare is now known as Guest39473

[06:40] *** ch3ck left
[06:50] *** Axius joined
[07:34] *** Axius_ joined
[07:36] *** Axius left
[07:37] *** nadim__ left
[07:38] *** Tedd1 left
[07:42] <dalek> sprixel: b61c69f | diakopter++ | / (10 files):

[07:42] <dalek> sprixel: diffs :)

[07:42] <dalek> sprixel: review: https://github.com/diakopter/sprixel/commit/b61c69f2f6

[07:43] *** am0c joined
[07:43] *** youwin_ joined
[07:49] *** Tedd1 joined
[07:55] *** Axius_ left
[07:59] *** Axius joined
[08:09] *** ponbiki joined
[08:18] *** neroxx joined
[08:20] *** Gahrian joined
[08:22] *** ab5tract left
[08:39] *** Axius left
[08:42] *** tzhs joined
[08:48] *** muixirt joined
[08:49] <muixirt> good morning

[09:01] *** copyleft joined
[09:10] *** sftp_ joined
[09:10] *** sftp left
[09:12] *** gimix joined
[09:23] *** masak joined
[09:24] <masak> good monday, #perl6

[09:24] *** nymacro joined
[09:26] *** uasi left
[09:27] <masak> buubot: karma wasi

[09:27] <buubot> masak: wasi has karma of 1       

[09:27] <masak> wasi--

[09:27] <masak> uasi++

[09:27] <masak> :)

[09:29] <masak> arnsholt, colomon: you people give me the warm fuzzies talking about the contest in the backlog. :) it's very nice to know people are hacking on solutions.

[09:34] *** [Coke] left
[09:35] <muixirt> masak: things like empty loops consume slowly memory, how could i investigate the problem?

[09:36] <masak> muixirt: I know some people use profilers to investigate where all the speed goes. don't know what people use to investigate memory leaks.

[09:38] *** gimix left
[09:40] *** dakkar joined
[09:43] *** lopnor is now known as lopaway

[09:44] <masak> PerlJam: how's today's Advent post coming along?

[09:44] <masak> are there any volunteers for slots #22 and #23?

[09:46] <dalek> mu: 20cb908 | masak++ | misc/perl6advent-2010/schedule:

[09:46] <dalek> mu: [misc/perl6advent-2010/schedule] 25: merry X-mas

[09:46] <dalek> mu: review: https://github.com/perl6/mu/commit/20cb908621

[09:52] <muixirt> masak: hmm, no advent post about Bufs?

[09:52] *** sftp joined
[09:52] *** sftp_ left
[09:52] <dalek> specs: a7b0d9d | masak++ | S12-objects.pod:

[09:52] <dalek> specs: [S12] Expanded inscrutable acronym for VienosNotes++

[09:52] <dalek> specs: 

[09:52] <dalek> specs: The spec is inscrutable enough as it is without people wasting 20 minutes

[09:52] <dalek> specs: to find the meaning of infrequent acronyms.

[09:52] <dalek> specs: 

[09:52] <dalek> specs: See http://twitter.com/VienosNotes/status/16767710964752384

[09:52] <dalek> specs: review: https://github.com/perl6/specs/commit/a7b0d9dd82

[09:52] <masak> muixirt: maybe next year.

[09:57] *** [Coke] joined
[09:58] <muixirt> maybe? *shivers*

[09:59] <muixirt> only because it's snowing here :-)

[09:59] <masak> :)

[10:00] *** sftp_ joined
[10:00] *** sftp left
[10:00] *** ch3ck joined
[10:06] *** am0c left
[10:09] *** QinGW left
[10:11] *** redicaps left
[10:11] *** adu left
[10:14] *** Guest87704 joined
[10:23] *** daxim joined
[10:28] *** lopaway is now known as lopnor

[10:41] *** sftp joined
[10:42] *** sftp_ left
[10:46] *** sftp_ joined
[10:46] *** sftp left
[10:52] <masak> huh. HN has a user 'pmichaud', but it's not our pmichaud. :)

[10:55] <muixirt> HN?

[11:10] *** sftp joined
[11:11] *** sftp_ left
[11:12] <masak> muixirt: http://news.ycombinator.com

[11:14] <muixirt> ok

[11:16] *** sftp_ joined
[11:16] *** sftp left
[11:22] * muixirt reads Mathematics The Most Misunderstood Subject

[11:22] *** wamba joined
[11:33] *** satyavvd left
[11:33] *** jerome left
[11:34] <dalek> roast: f94554a | (Kodi Arfer)++ | S02-builtin_data_types/whatever.t:

[11:34] <dalek> roast: [whatever.t] Added tests for RT #80256.

[11:34] <dalek> roast: review: https://github.com/perl6/roast/commit/f94554a2d4

[11:36] *** jerome joined
[11:37] <dalek> rakudo: cae7f95 | uasi++ | src/Perl6/Actions.pm:

[11:37] <dalek> rakudo: [Actions] Made Whatever currying cooperate with meta-operators.

[11:37] <dalek> rakudo: 

[11:37] <dalek> rakudo: Signed-off-by: Kodi Arfer <hippo@Thoth.(none)>

[11:37] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/cae7f952ad

[11:38] *** nymacro left
[11:43] *** molaf_ left
[11:47] *** zby_home joined
[11:53] *** churchill is now known as ultraviolent

[11:53] *** iktome joined
[11:57] *** Jmax left
[11:57] *** sftp_ left
[12:01] * muixirt is a little bit disappointed about HN math story

[12:03] *** puddingpimp left
[12:11] <colomon> masak: what's the deadline for the contest, again?

[12:12] <masak> for signing up: 24th. for sending submissions: 14th.

[12:13] <Trashlord> what contest?

[12:13] <masak> Trashlord: http://strangelyconsistent.org/blog/masaks-perl-6-coding-contest

[12:14] <colomon> masak++: Ah, that's good.  That gives us time to adjust our wish lists post-Christmas.  ;)

[12:15] <colomon> I was thinking I might do a blog post on p2 and schedule it for after the contest is closed.

[12:15] *** iktome left
[12:15] *** Guest39473 is now known as kaare_

[12:16] <Trashlord> ha, looks cool

[12:16] <Trashlord> not sure if I actually know enough Perl 6 to participate in that, though, heh

[12:17] <masak> colomon: you're very welcome to. I'm planning to do very thorough blog posts on each task, combining the theory with examples of people's solutions.

[12:17] <masak> Trashlord: a winning strategy might be to sign up and send in five trivial solutions. if everyone else submits four or fewer, instant win. :)

[12:18] <masak> (where "trivial" here means "passes the base tests and nothing more")

[12:18] <masak> of course, if anyone actually sends in good solutions, that strategy is hosed.

[12:18] <Trashlord> ha, yeah

[12:23] <Trashlord> I've never participated in a programming contest before, to be honest

[12:29] *** muixirt left
[12:34] *** Jmax joined
[12:34] *** Jmax left
[12:34] *** Jmax joined
[12:40] *** roen joined
[12:45] *** agentzh left
[12:49] *** PacoLinux joined
[12:51] *** felliott joined
[12:54] <takadonet> morning all

[12:54] <masak> takadonet: \o

[12:55] *** roen left
[13:02] *** lopnor is now known as lopaway

[13:08] *** Kovensky left
[13:15] *** am0c joined
[13:15] <masak> PerlJam: ping

[13:20] *** Kovensky joined
[13:22] *** jedai left
[13:23] *** dukeleto left
[13:24] *** dukeleto joined
[13:24] *** MayDaniel joined
[13:25] *** jedai joined
[13:49] <[Coke]> .

[14:06] *** mtk0 joined
[14:06] *** felliott left
[14:15] *** soroush_ joined
[14:16] *** soroush left
[14:17] *** plainhao joined
[14:28] <[particle]> the solution may be hosed, but the journey cannot be undone.

[14:29] *** shi joined
[14:30] *** icwiener joined
[14:30] *** shi left
[14:31] *** morphbot joined
[14:31] *** morphbot left
[14:35] *** shi joined
[14:38] *** kaare_ left
[14:39] *** roen joined
[14:43] *** xinming_ joined
[14:45] *** molaf joined
[14:46] *** xinming left
[14:49] *** Guest87704 left
[14:55] *** Intensity joined
[15:00] <takadonet> rakudo: subset DEPTH of Mu where { $_ eq 'beer' || $_ ~~ Int }; my DEPTH $ya='RE';

[15:00] <p6eval> rakudo cae7f9: OUTPUT«Type check failed for assignment␤  in '&infix:<=>' at line 1␤  in main program body at line 22:/tmp/p6lhl1fBOH␤»

[15:00] <takadonet> rakudo: class A { subset DEPTH of Mu where { $_ eq 'beer' || $_ ~~ Int }; has DEPTH $.ya is rw }; my $ya = A.new(ya=>'re');

[15:00] <p6eval> rakudo cae7f9:  ( no output )

[15:00] <takadonet> bug?

[15:02] *** hanekomu joined
[15:05] <colomon> seems like

[15:05] <colomon> probably NYI?

[15:05] <takadonet> nuts

[15:06] *** risou joined
[15:09] *** icwiener_ joined
[15:11] *** icwiener left
[15:13] *** uasi joined
[15:14] *** _kaare joined
[15:15] <jjore> masak, re: memory leaks. More profilers. Just different. Often by having instrumented allocation + Iterable heap and stack. Ie, just plain old structured data and hooks.

[15:15] <flussence> omg, I got my xmms2 code to actually do something!

[15:15] <masak> jjore: chromatic on #parrot might be able to give more tips.

[15:15] <masak> flussence: wow! nice!

[15:16] <flussence> still gives a Null PMC access at the end though :)

[15:18] <jjore> Oh, right, I forgot there's a #parrot.

[15:18] <masak> what do I answer to http://twitter.com/VienosNotes/status/16870351094939650 ?

[15:18] <masak> it's a really good question. does the spec give a clear answer?

[15:24] * colomon scratches his head.

[15:24] <gfldex> what is a trait? I know what it does, but what _is_ it?

[15:24] * flussence fixes the code in my advent post

[15:25] <flussence> trait = role, I'm guessing

[15:26] <gfldex> that would mean that methods have roles

[15:26] <flussence> I think in the context he's using "trait", anyway...

[15:26] <gfldex> so there is more then one type of trait?

[15:29] <flussence> p6's traits are general modifier things, in other languages I've seen they're usually what p6 calls "roles"

[15:29] <mux> or mixins

[15:30] <masak> gfldex: a trait is a role that's applied to an object.

[15:31] <masak> no wait, that's a mixin. :)

[15:31] <masak> a trait is whatever follows 'is' and sometimes 'will' in declarations.

[15:31] <gfldex> so the term trait is syntax that supplies meaning of intend?

[15:32] <masak> so 'is BaseClass' is actually the exception here -- we're using the trait mechanism for inheritance.

[15:32] * flussence goes to read what "will" is

[15:32] <gfldex> by applying the trait to the class object?

[15:32] <masak> yeah, something like that.

[15:33] <gfldex> that sounds clever ... :->

[15:33] <masak> TimToady: how can I inherit from a class called 'rw'? if there is a class called 'rw' in my namespace, how can I use the 'rw' trait on a class?

[15:34] <flussence> (oh, 'will' is just a synonym for 'is' apparently)

[15:34] <masak> aye.

[15:35] *** glow joined
[15:36] *** MayDaniel_ joined
[15:37] *** roen left
[15:37] *** shi left
[15:39] *** MayDaniel left
[15:41] *** shi joined
[15:44] *** nadim__ joined
[15:44] *** sftp joined
[15:51] *** felliott joined
[15:54] *** am0c left
[15:54] *** felliott left
[15:59] *** YamNad joined
[16:00] <masak> should we be worried that PerlJam hasn't shown up with his Advent post yet?

[16:01] *** hanekomu left
[16:01] *** MayDaniel_ left
[16:02] <flussence> someone (else) might have to save the day again

[16:07] <colomon> doh!

[16:07] <colomon> does anyone have something ready?

[16:07] *** shi left
[16:12] *** PerlPilot joined
[16:20] *** mberends left
[16:33] <masak> PerlPilot: PerlPilot == PerlJam, right?

[16:33] <colomon> I believe so

[16:33] <masak> me too, just making sure.

[16:40] <[Coke]> AOL

[16:41] <masak> PerlJam, PerlPilot: you're up for an Advent post today, and we're all eagerly awaiting a sign of acknowledgement from you :)

[16:44] *** YamNad left
[16:52] *** PerlPilot left
[16:53] *** PerlPilot joined
[16:53] <PerlPilot> masak: I live.  :)

[16:53] <masak> \o/

[16:54] <masak> Christmas is saved! :)

[16:54] <masak> nom &

[16:54] *** masak left
[16:54] <PerlPilot> dealing with a sick child, but I'm writing (slowly)

[16:58] *** neroxx left
[17:03] *** JimmyZ joined
[17:10] *** shi joined
[17:23] *** daxim left
[17:25] *** uasi left
[17:36] *** ch3ck3r joined
[17:37] *** user_1011 joined
[17:37] <user_1011> hi all

[17:37] <takadonet> user_1011: hey

[17:37] <user_1011> need urgent help

[17:37] <user_1011> how can i enable perl6 syntax coloring and autocomplete in padre?

[17:38] <user_1011> many thanks in advance

[17:38] <takadonet> user_1011: I do not use Padre but I'm sure someone else around here does...

[17:39] <user_1011> ok. what you use as perl6 ide

[17:39] <user_1011> ?

[17:39] <takadonet> vim and emacs

[17:39] <takadonet> vim has syntax highlighting 

[17:39] <user_1011> on windows

[17:39] <takadonet> do not use windows....

[17:39] <takadonet> in padre, try to see if you can find a menu where it says 'view document as' ... and should be in that list

[17:40] <user_1011> yeah. i know. windows must die. but i need ide for perl6 development on windows

[17:40] *** ch3ck left
[17:41] <user_1011> there have this menu but it do nothing. 

[17:42] <takadonet> user_1011:  http://padre.perlide.org/irc.html

[17:42] <takadonet> You can try the #padre channel

[17:43] <user_1011> ok. many thanks

[17:43] <user_1011> bye

[17:48] *** user_1011 left
[17:48] *** thepler joined
[17:49] *** uasi joined
[17:56] *** JimmyZ left
[17:58] <[Coke]> ... I use vim on windows.

[17:59] <[Coke]> which I wouldn't recommend to someon looking for an IDE, but "windows" isn't a showstopper there.

[18:00] *** cdarroch joined
[18:00] *** cdarroch left
[18:00] *** cdarroch joined
[18:05] <uasi> rakudo: ((1 => 2, 3 => 4).hash, 5).perl.say

[18:06] <p6eval> rakudo cae7f9: OUTPUT«({"1" => 2, "3" => 4}, 5)␤»

[18:06] <uasi> rakudo: ((1 => 2, 3 => 4).hash, 5).elems.say

[18:06] <p6eval> rakudo cae7f9: OUTPUT«3␤»

[18:09] *** _twitch left
[18:09] <colomon> :\

[18:12] <flussence> rakudo: ((1 => 2, 3 => 4).hash, 5).elems.perl.say

[18:12] <p6eval> rakudo cae7f9: OUTPUT«3␤»

[18:12] <flussence> um.

[18:15] <colomon> I think that's a flattening too far

[18:16] <[Coke]> ((1 => 2, 3 => 4).hash, 5).elems[0].perl.say

[18:17] <[Coke]> rakudo: ((1 => 2, 3 => 4).hash, 5).elems[0].perl.say

[18:17] <p6eval> rakudo cae7f9: OUTPUT«3␤»

[18:17] <[Coke]> rakudo: ((1 => 2, 3 => 4).hash, 5).elems[1].perl.say

[18:17] <p6eval> rakudo cae7f9: OUTPUT«undef␤»

[18:17] <colomon> rakudo: ((1 => 2, 3 => 4).hash, 5)[0].perl.say

[18:17] <p6eval> rakudo cae7f9: OUTPUT«"1" => 2␤»

[18:17] <colomon> rakudo: ((1 => 2, 3 => 4).hash, 5)[1].perl.say

[18:17] <p6eval> rakudo cae7f9: OUTPUT«"3" => 4␤»

[18:17] <colomon> rakudo: ((1 => 2, 3 => 4).hash, 5)[2].perl.say

[18:17] <p6eval> rakudo cae7f9: OUTPUT«5␤»

[18:17] <colomon> Of course, that might be right.

[18:21] *** lamstyle left
[18:29] *** icwiener_ left
[18:33] <uasi> rakudo: ({1 => 2, 3 => 4}.hash, 5).perl.say

[18:33] <p6eval> rakudo cae7f9: OUTPUT«({"1" => 2, "3" => 4}, 5)␤»

[18:33] <uasi> rakudo: ({1 => 2, 3 => 4}.hash, 5).elems.say

[18:33] <p6eval> rakudo cae7f9: OUTPUT«2␤»

[18:33] <uasi> rakudo: ({1 => 2, 3 => 4}.hash, 5)[0].perl.say

[18:33] <p6eval> rakudo cae7f9: OUTPUT«{"1" => 2, "3" => 4}␤»

[18:34] <uasi> {1 => 2, 3 => 4}.hash should be flattened?

[18:35] <colomon> not in my opinion.

[18:35] <huf> rakudo: ({1 => 2, 3 => 4}.kv, 5)[0].perl.say

[18:35] <colomon> but I'm frequently stumped by flattening

[18:35] <p6eval> rakudo cae7f9: OUTPUT«"1"␤»

[18:35] <huf> huh, doesnt kv produce a list of pairs? or which one does?

[18:36] *** soroush joined
[18:36] *** soroush_ left
[18:39] <uasi> huf: .list

[18:40] <uasi> rakudo: ({1 => 2, 3 => 4}.list, 5)[0].perl.say

[18:40] <p6eval> rakudo cae7f9: OUTPUT«"1" => 2␤»

[18:40] <colomon> rakudo: ({1 => 2, 3 => 4}.kv, 5).perl.say

[18:40] <p6eval> rakudo cae7f9: OUTPUT«(("1", 2, "3", 4), 5)␤»

[18:40] <huf> ah, so .kv is the old perl5ish behavior?

[18:40] <huf> alternating list of keys/values?

[18:40] *** dakkar left
[18:40] <colomon> yes.

[18:41] *** soroush left
[18:41] <rokoteko> huf: what are the faults in the "old perl5ish behaviour"?

[18:41] *** soroush joined
[18:42] <huf> faults? did i imply faults?

[18:42] <rokoteko> no. I was mainly curious if you did an I didnt explicitly detect them.

[18:43] <huf> ah. no, that's a fine behavior, if it's what you want

[18:43] <huf> surprise surprise, i like p6's solution more

[18:44] <colomon> p6's solution is to let you do it either way, depending on how you ask.  :)

[18:45] *** glow left
[18:47] <rokoteko> surprise vs sunrise .. it's only a matter of a very tiny amount of area how much those two words differentiate geometrically.

[18:48] *** icwiener joined
[18:50] *** ShaneC joined
[18:56] *** impious joined
[19:07] *** Chillance joined
[19:17] *** uasi left
[19:18] *** szbalint left
[19:19] *** szbalint joined
[19:21] *** mtk0 left
[19:21] *** molaf left
[19:22] *** zby_home left
[19:25] *** Patterner left
[19:27] *** Psyche^ joined
[19:27] *** Psyche^ is now known as Patterner

[19:30] *** hercynium joined
[19:32] *** glow joined
[19:36] *** wamba left
[19:40] *** fhelmberger left
[19:42] *** guidj0s joined
[19:45] *** soroush left
[19:46] *** soroush joined
[19:46] *** tzhs left
[19:53] *** envi left
[20:02] *** PerlPilot left
[20:03] *** perlpilot joined
[20:04] *** perlpilot left
[20:04] *** perlpilot joined
[20:06] *** perlpilot left
[20:07] *** y3llow_ joined
[20:07] <PerlJam> whew!  perlpilot is having some problems today.

[20:07] *** pothos_ joined
[20:07] <PerlJam> Anyway, to those that can, have a look at http://perl6advent.wordpress.com/?p=686&preview=true and give me some feedback before I publish it.

[20:09] *** pothos left
[20:09] *** y3llow left
[20:09] *** pothos_ is now known as pothos

[20:09] *** y3llow_ is now known as y3llow

[20:14] *** XaRDaX joined
[20:22] *** alester joined
[20:28] <Tene> PerlJam: 404

[20:29] <PerlJam> I believe you have to have a WP account and be logged in for it to work.

[20:29] <takadonet> indeed

[20:30] <Tene> Ah.

[20:30] <Tene> That's *far* too much work. ;)

[20:31] *** khisanth_ joined
[20:32] *** MayDaniel joined
[20:32] <takadonet> Tene you need to be an author ....

[20:33] <Tene> takadonet: I already was!  I did mine a full *year* early.

[20:33] <takadonet> heh

[20:33] <Tene> I don't know what you slackers are doing, doing yours so late.

[20:35] <PerlJam> published.  http://perl6advent.wordpress.com/2010/12/20/day-20-the-perl-6-synopses/

[20:35] <PerlJam> now it's easier for some people to provide feedback  :)

[20:36] *** Khisanth left
[20:36] <takadonet> http://www.reddit.com/r/programming/comments/eoy31/perl_6_advent_calendar_day_20_the_perl_6_synopses/

[20:40] *** plainhao left
[20:40] <PerlJam> takadonet++  :)

[20:40] <colomon> \o/

[20:41] *** jaldhar left
[20:45] *** colomon left
[20:49] *** khisanth_ is now known as Khisanth

[20:52] <lue> ohai o/

[21:11] *** plobsing_ joined
[21:13] *** plobsing left
[21:16] <lue> Hm. I think I'm either not understanding actions well enough, or the rest of my code is going to receive some major refactoring.

[21:17] *** Khisanth left
[21:18] <PerlJam> lue: what's the problem?

[21:20] <sjohnson> Eddie Vector

[21:23] <lue> With Pod, I have a tough time deciding where in the actions to create an object to hold stuff (and the stuff in that object really depends on where I create the object.) I'm more willing to blame a grammar set up for the nonactions way.

[21:30] *** Khisanth joined
[21:36] *** jeeger joined
[21:42] *** kcwu left
[21:43] *** pothos left
[21:46] *** felliott joined
[21:47] *** kcwu joined
[21:48] *** khisanth_ joined
[21:49] *** am0c joined
[21:49] *** Khisanth left
[21:55] *** jeeger` joined
[21:55] *** thepler left
[21:57] *** jeeger left
[21:58] *** khisanth_ left
[21:59] *** pothos joined
[22:03] <lue> .oO(I can't seem to understand proto regexes ...)

[22:03] <sorear> can you be more concrete?

[22:03] <sorear> btw, * #perl6

[22:04] *** impious left
[22:05] <lue> rakudo: grammar A { regex TOP { <B> }; proto regex B { }; multi regex B:C { Cc }; multi regex B:D { Dd } }; say A.parse("Cc").perl

[22:05] <p6eval> rakudo cae7f9: OUTPUT«Match.new(␤ from => 0,␤ orig => "Cc",␤ to   => -3,␤)␤»

[22:06] *** glow left
[22:07] <sorear> uhm

[22:07] <lue> I know I've made a stupid mistake here...

[22:07] <sorear> niecza: grammar A { regex TOP { <B> }; proto regex B { }; multi regex B:C { Cc }; multi regex B:D { Dd } }; say A.parse("Cc").dump

[22:07] <p6eval> niecza 406e042: OUTPUT«[31m===[0mSORRY![31m===[0m␤Null pattern not allowed at /tmp/WW201x2DG7 line 1:␤------> [32m A { regex TOP { <B> }; proto regex B { [33m⏏[31m}; multi regex B:C { Cc }; multi regex B[0m␤    expecting quantifier␤Parse failed␤»

[22:07] <flussence> B:<C> ?

[22:07] <sorear> ah.  yes, youi have.

[22:08] <sorear> niecza: grammar A { regex TOP { <B> }; proto regex B {*}; multi regex B:C { Cc }; multi regex B:D { Dd } }; say A.parse("Cc").dump

[22:08] <p6eval> niecza 406e042: OUTPUT«#<match from(0) to(2) text(Cc) pos([]) named({"B" => #<match from(0) to(2) text(Cc) pos([]) named({})>})>␤»

[22:08] *** guidj0s left
[22:08] <sorear> Rakudo may still be using proto regex B { <...> } syntax

[22:08] <flussence> is that invalid now?

[22:08] <sorear> but proto regex B { } is wrong in both models

[22:09] <sorear> flussence: about a month ago TimToady decided that protos should be {*}

[22:09] <flussence> makes sense.

[22:09] <sorear> he also changed STD, which forced me to implement the new model a bit earlier than I would have

[22:12] <sorear> flussence: not B:<C>

[22:12] <sorear> well, B:<C> is valid

[22:15] <lue> proto regex B {*}    fails in rakudo ( although    proto regex B {{*}}    works, but won't match anything, just like my first try ^^^ )

[22:16] <sorear> lue: does proto regex B { <...> } work?

[22:17] <sorear> rakudo's Perl6::Grammar seems to be using proto token fooo { <...> } exclusively

[22:18] *** MayDaniel left
[22:18] *** khisanth_ joined
[22:20] <lue> rakudo: grammar A { regex TOP { <B> }; proto regex B { <...> }; multi regex B:C { Cc }; multi regex B:D { Dd } }; say A.parse("Cc").perl

[22:20] <p6eval> rakudo cae7f9: OUTPUT«Match.new(␤ from => 0,␤ orig => "Cc",␤ to   => -3,␤)␤»

[22:20] <lue> no :/

[22:21] <sorear> rakudo: grammar A { regex TOP { <B> }; proto regex B { <...> }; regex B:C { Cc }; regex B:D { Dd } }; say A.parse("Cc").perl

[22:21] <p6eval> rakudo cae7f9: OUTPUT«Match.new(␤ from => 0,␤ orig => "Cc",␤ to   => -3,␤)␤»

[22:21] <sorear> rakudo: grammar A { regex TOP { <B> }; proto token B { <...> }; regex B:C { Cc }; regex B:D { Dd } }; say A.parse("Cc").perl

[22:21] <p6eval> rakudo cae7f9: OUTPUT«Match.new(␤ from => 0,␤ orig => "Cc",␤ to   => -3,␤)␤»

[22:21] <sorear> rakudo: grammar A { regex TOP { <B> }; proto token B { <...> }; token B:C { Cc }; token B:D { Dd } }; say A.parse("Cc").perl

[22:21] <p6eval> rakudo cae7f9: OUTPUT«Match.new(␤ from => 0,␤ orig => "Cc",␤ to   => -3,␤)␤»

[22:22] <sorear> rakudo: grammar A { regex TOP { <B> }; proto token B { <...> }; token B:sym<C> { Cc }; token B:sym<D> { Dd } }; say A.parse("Cc").perl

[22:22] <p6eval> rakudo cae7f9: OUTPUT«Match.new(␤ from => 0,␤ orig => "Cc",␤ to   => 2,␤ named => {␤  B =>    Match.new(␤    from => 0,␤    orig => "Cc",␤    to   => 2,␤   ),␤ },␤)␤»

[22:22] <sorear> that's probably worth filing a bug

[22:23] <sorear> phenny: tell masak lue++ just noticed that 'token category:id' doesn't work in Rakudo; it needs to be 'token category:sym<id>'.  Is this a new bug?

[22:23] <phenny> sorear: I'll pass that on when masak is around.

[22:23] <sorear> phenny: tell masak c.f. http://irclog.perlgeek.de/perl6/2010-12-20#i_3107596

[22:23] <phenny> sorear: I'll pass that on when masak is around.

[22:27] *** khisanth_ left
[22:27] <lue> would using :sym<C> be acceptable in the meantime?

[22:27] <sorear> yes

[22:29] <sorear> look at src/Perl6/Grammar.pm in your local Rakudo checkout - this is the largest known Rakudo-compatible* grammar and will probably answer a lot of questions

[22:29] <sorear> * it's actually a NQP-RX grammar, but Rakudo uses the same grammar engine

[22:32] *** jeeger`` joined
[22:34] *** jeeger` left
[22:34] *** _kaare left
[22:41] *** rgrau joined
[22:41] *** rgrau left
[22:46] *** Khisanth joined
[22:50] <Tene> sorear: by my memory, rakudo has never supported :foo, only :sym<foo>

[23:09] *** alester left
[23:15] *** shi left
[23:29] *** lopaway is now known as lopnor

[23:31] <cls_bsd> a3/win 32

[23:33] *** icwiener left
[23:46] *** XaRDaX left
[23:51] *** Kovensky left
[23:52] *** Kovensky joined
