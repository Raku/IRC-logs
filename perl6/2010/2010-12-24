[00:01] *** Khisanth joined
[00:04] <TimToady> nap &

[00:08] *** Khisanth left
[00:10] <lue> cpan6.org: "CPAN6 is not even usable on the moment (as is Perl6)." I would define the last part of that statement of very wrong. Do you agree?

[00:13] <sorear> lue: cpan6.org hasn't actually been updated since 2004

[00:14] <flussence> that site's very vague, handwavey, and it uses a table for layout. boo, hiss.

[00:14] <lue> it has a presentation on it from 2008 though (or links to one)

[00:15] <lue> S22 is horribly outdated as well.

[00:17] <sorear> just pretend cpan6.org doesn't exist

[00:17] <sorear> i'm sure the person who reg'd it meant well, but he's incurably out of touch with reality

[00:17] *** Khisanth joined
[00:17] *** justatheory joined
[00:18] <sorear> cute.  gmcs emits a warning on var = var;

[00:19] <lue> S22 seems to be the only thing that details the module system at first glance. I'm probably missing a couple other synopses though.

[00:23] <arnsholt> Well, there's S11 as well =)

[00:26] <lue> that's more "how to create a module" though. :)

[00:27] *** nymacro left
[00:29] *** risou left
[00:29] *** MayDaniel left
[00:30] <dalek> niecza/cilbackend: 16e4fad | sorear++ | / (2 files):

[00:30] <dalek> niecza/cilbackend: Add rest of signature-blob handling

[00:30] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/16e4fad4ef

[00:30] <dalek> niecza/cilbackend: 19648dc | sorear++ | lib/CLRBackend.cs:

[00:30] <dalek> niecza/cilbackend: More misc fixes

[00:30] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/19648dcc04

[00:30] <dalek> niecza/cilbackend: 6e155a9 | sorear++ | lib/CLRBackend.cs:

[00:30] <dalek> niecza/cilbackend: Fix code generation for HOW

[00:30] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/6e155a9e00

[00:33] *** Khisanth left
[00:39] <lue> I'm starting to want to change how the module system works. Is S22 the only thing that details it?

[00:43] <mberends> lue: see also S11

[00:56] <lue> I get what :auth and :ver are for, but what is :name for?

[00:56] <sorear> use Short:name<Long>;

[01:02] <lue> so it's just an extra identifier? [ That's what I'm getting ]

[01:03] <sorear> aye

[01:04] <sorear> also useful when the "real" identifier isn't a valid Perl 6 identifier

[01:04] <sorear> notice that :name<> is a quoting form

[01:04] <sorear> so you could say use Short:from<java>:name<java.util.zip.ZipFile>;

[01:04] *** MayDaniel joined
[01:04] *** QinGW joined
[01:16] *** MayDaniel left
[01:23] *** hcchien_ joined
[01:25] *** Raynes_ joined
[01:27] *** lestaway joined
[01:27] *** bartolin_ joined
[01:27] *** pnu_ joined
[01:27] *** ingyfoo joined
[01:27] *** frodwith_ joined
[01:28] *** nperez_ joined
[01:28] *** JodaZ_ joined
[01:30] *** Raynes left
[01:30] *** Raynes_ is now known as Raynes

[01:30] *** Raynes left
[01:30] *** Raynes joined
[01:30] *** starcoder- joined
[01:31] *** felliott_ joined
[01:32] *** glow left
[01:32] *** masonkramer left
[01:32] *** mtk left
[01:32] *** lestrrat left
[01:32] *** starcoder left
[01:32] *** felliott left
[01:32] *** hugme left
[01:32] *** nperez left
[01:32] *** elb0w left
[01:32] *** ingy left
[01:32] *** frodwith left
[01:32] *** pnu left
[01:32] *** JodaZ left
[01:32] *** hcchien left
[01:32] *** bartolin left
[01:32] *** allbery_b left
[01:32] *** lestaway is now known as lestrrat

[01:32] *** starcoder- is now known as starcoder

[01:32] *** felliott_ is now known as felliott

[01:32] <lue> afk

[01:32] *** masonkramer joined
[01:38] *** Khisanth joined
[01:39] *** elb0w joined
[01:39] *** allbery_b joined
[01:39] *** mtk joined
[01:41] <dalek> niecza/cilbackend: 78c264a | sorear++ | lib/CLRBackend.cs:

[01:41] <dalek> niecza/cilbackend: Fix unverifiable code generation from gather

[01:41] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/78c264a240

[01:41] *** risou joined
[01:43] *** khisanth_ joined
[01:43] *** risou left
[01:44] *** Khisanth left
[01:47] *** khisanth_ left
[02:03] *** noganex_ joined
[02:04] *** hcchien_ is now known as hcchien

[02:06] *** sji left
[02:06] *** noganex left
[02:32] *** Chillance left
[02:39] *** molaf_ joined
[02:43] *** molaf left
[02:48] *** ponbiki left
[02:48] *** ponbiki joined
[03:08] *** ShaneC left
[03:09] *** jaldhar joined
[03:13] <dalek> niecza/cilbackend: ae2b965 | sorear++ | lib/CLRBackend.cs:

[03:13] <dalek> niecza/cilbackend: Fix Method and Param LAD node construction

[03:13] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/ae2b965a3c

[03:13] <dalek> niecza/cilbackend: a52a66c | sorear++ | / (2 files):

[03:13] <dalek> niecza/cilbackend: Update compiler driver to use new backend

[03:13] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/a52a66cc4c

[03:13] <dalek> niecza/cilbackend: 0307722 | sorear++ | Niecza.proj:

[03:13] <dalek> niecza/cilbackend: Support new backend in XBuild harness

[03:13] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/0307722e84

[03:13] <dalek> niecza/cilbackend: 589fce1 | sorear++ | / (5 files):

[03:13] <dalek> niecza/cilbackend: Miscellaneous fixes to get STD/tryfile.exe working again

[03:13] <dalek> niecza/cilbackend: review: https://github.com/sorear/niecza/commit/589fce1fde

[03:26] <dalek> Some 'sorear' person just gave me a 28643 byte commit packet.  They need to be more careful in the future.

[03:26] <sorear> cilbackend is merged.

[03:26] <colomon> !!!

[03:26] <colomon> what is it?

[03:26] <colomon> cil, I mean.

[03:27] <sorear> Common Intermediate Language - the CLR's bytecode

[03:27] <sorear> niecza no longer depends on a C# compiler post-install

[03:28] <colomon> sweet!

[03:28] <sorear> it's also a great deal faster this way

[03:28] <colomon> I've got to try and get it up and running again sometime soon.

[03:28] <sorear> well it might be a little easier now. :)

[03:28] <sorear> the real break however will be when niecza stops depending on Perl 5

[03:29] *** takadonet1 joined
[03:29] <takadonet1> hey all

[03:29] <sorear> which I'm going to optimistically estimate as before the end of February

[03:29] <colomon> sorear++

[03:30] <takadonet1> how do you return local time in perl6?

[03:30] <sorear> the Perl 5 / C# boundary layer is a fragile mess

[03:30] <sorear> rakudo: now.^methods(:local).say

[03:30] <p6eval> rakudo cae7f9:

[03:30] <p6eval> ..OUTPUT«newfrom-posixto-posixStrperlACCEPTSBridgeRealBoolIntRatNumComplexrealsisNaNabsexplnsqrtrootssignfloorceilingtruncateroundcisunpolarrandsinasincosacostanatansecaseccosecacoseccotanacotansinhasinhcoshacoshtanhatanhsechasechcosechacosechcotanhacotanhatan2Numericsuccpredloglog10to-radi…

[03:31] <sorear> I said :local

[03:31] <sorear> sheesh

[03:31] <takadonet1> hehe

[03:31] <TimToady> rakudo: say time.^methods(:local)

[03:31] <p6eval> rakudo cae7f9:

[03:31] <p6eval> ..OUTPUT«perlpredsuccWHICHStrBridgeIntRatNumsignACCEPTSRealBoolComplexrealsisNaNabsexplnsqrtrootsfloorceilingtruncateroundcisunpolarrandsinasincosacostanatansecaseccosecacoseccotanacotansinhasinhcoshacoshtanhatanhsechasechcosechacosechcotanhacotanhatan2Numericloglog10to-radiansfrom-radians␤»

[03:31] <sorear> rakudo: DateTime.new.^methods(:local).say

[03:31] <p6eval> rakudo cae7f9:

[03:31] <p6eval> ..OUTPUT«newcheck-timenowcloneclone-without-validatingInstantposixoffsettruncated-towhole-secondin-timezoneutclocalDateStrperlis-leap-yeardays-in-monthdaycount-from-ymdymd-from-daycountget-daycountday-of-monthday-of-weekweekweek-yearweek-numberweekday-of-monthday-of-yearcheck-valuecheck-dat…

[03:31] <TimToady> rakudo: say time.Str

[03:31] <p6eval> rakudo cae7f9: OUTPUT«1293161501␤»

[03:31] <takadonet1> rakudo: say now

[03:31] <p6eval> rakudo cae7f9: OUTPUT«Instant:2010-12-24T03:31:57.544364Z␤»

[03:32] <sorear> rakudo: say DateTime.now.local

[03:32] <p6eval> rakudo cae7f9: OUTPUT«2010-12-24T03:32:04Z␤»

[03:32] <takadonet1> we have a winner!

[03:32] <TimToady> rakudo: say DateTime.new(time)

[03:32] <p6eval> rakudo cae7f9: OUTPUT«2010-12-24T03:32:16Z␤»

[03:32] <TimToady> rakudo: say DateTime.new

[03:32] <p6eval> rakudo cae7f9:  ( no output )

[03:32] * takadonet1 still hacking away on Text--Diff

[03:33] <colomon> takadonet1++

[03:33] <takadonet1> i love porting a module from cpan line by line till it works 100%. Then golf it down to about half the size 

[03:33] <takadonet1> sub signature are sweet as hell

[03:35] <colomon> :)

[03:35] <takadonet1> named parameters,optional, defaults, where clauses...

[03:36] <takadonet1> multi

[03:44] <takadonet1> any word when pmichaud is back in action?

[03:47] <colomon> not that I've heard.

[03:48] <takadonet1> nuts

[04:17] <takadonet1> night all

[04:17] <TimToady> o/

[04:17] *** takadonet1 left
[04:21] *** khisanth_ joined
[04:21] *** tobar joined
[04:23] <dalek> niecza: 9c6f9fa | sorear++ | docs/announce.v1:

[04:23] <dalek> niecza: Start drafting of v1 message

[04:23] <dalek> niecza: review: https://github.com/sorear/niecza/commit/9c6f9fa8a3

[04:24] *** plobsing joined
[04:24] *** justatheory left
[04:24] *** Su-Shee left
[04:26] *** plobsing_ left
[04:28] *** khisanth_ left
[04:28] *** Su-Shee joined
[04:29] *** plobsing_ joined
[04:30] *** plobsing left
[04:33] *** justatheory joined
[04:39] *** justatheory left
[04:42] *** plobsing joined
[04:44] *** nymacro joined
[04:45] *** plobsing_ left
[04:47] <diakopter> sorear: restructions -> restrictions

[04:48] *** orafu left
[04:49] *** orafu joined
[04:49] <sorear> thanks

[04:50] <sorear> diakopter: I'm wondering if I should do anything of a deployment slant

[04:50] <sorear> if, for instance, I provided a tarball with Kernel.dll and CLRBackend.exe, then users wouldn't need a C# compiler

[04:51] <sorear> although I suspect the real deployment problem is Perl, and that isn't so simple

[04:51] <diakopter> if I understand you correctly, then I'd suggest focusing on compiler features

[04:52] <sorear> such as?

[04:55] *** nymacro left
[04:55] <diakopter> good question :)

[04:55] <diakopter> first, is lhf.txt up-to-date?

[04:57] *** [particle]1 joined
[04:57] *** [particle] left
[04:58] <sorear> wait, what do you mean?

[04:58] <diakopter> I mean, since you last edited lhf.txt, have you implemented anything listed in it

[04:58] <sorear> "I'd suggest focusing on compiler features" --> "sorear implements native types" ?

[04:59] <diakopter> :)

[04:59] <diakopter> sure, why not

[04:59] <tobar> from where can I download the spec? (not the web version) I want to be able to do a regex search of the spec.

[05:00] <diakopter> sorear: then definitely data parallelism & concurrency system

[05:00] <diakopter> tobar: it can be checked out from github

[05:00] <diakopter> tobar: https://github.com/perl6/specs

[05:01] <dalek> niecza: 6c6c686 | sorear++ | docs/announce.v1:

[05:01] <dalek> niecza: Fix some announce typos

[05:01] <dalek> niecza: review: https://github.com/sorear/niecza/commit/6c6c686581

[05:01] <dalek> niecza: 61e026e | sorear++ | docs/lhf.txt:

[05:01] <dalek> niecza: Bring lhf.txt up to date

[05:01] <dalek> niecza: review: https://github.com/sorear/niecza/commit/61e026edab

[05:01] <tobar> diakopter: thanks. i'll look there.

[05:02] <tobar> git clone git://github.com/perl6/specs

[05:03] <diakopter> I dunno the exact syntax

[05:03] <sorear> they've changed the output of mono --profile and it's not useful anymore...

[05:07] <diakopter> it's not useful for anything?

[05:08] *** plobsing left
[05:09] <sorear> I need to figure out how it's useful

[05:09] *** tobar left
[05:14] <diakopter> http://www.mono-project.com/Performance_Tips  "Assisting the Garbage Collector" is interesting

[05:14] <diakopter> I mean, I've done that before in previous sprixel/perlesque iterations... but I didn't know it was a recommended/suggested practice.

[05:16] <sorear> yes

[05:16] <sorear> especially important if you're using the boehm GC

[05:22] *** ingyfoo is now known as ingy

[05:24] *** molaf_ left
[05:29] *** adu joined
[05:31] *** plobsing joined
[05:35] <sorear> diakopter: if you want to know my plans for the next 1-2 months... it's basically all a programme to get &eval working

[05:36] <sorear> and since Perl 5 and the CLR don't get along well together, at all, that means incrementally rewriting the compiler in other languages

[05:41] *** dd070 joined
[05:58] *** agentzh joined
[05:59] *** notostraca2 joined
[06:00] <notostraca2> quick question: are there any GUI toolkits/frameworks that work with Perl 6 at this point in time?

[06:00] <araujo> doubt it

[06:00] <notostraca2> oh well

[06:01] <notostraca2> time to go to #falcon , another language with a ton of features that not enough people know

[06:01] <sorear> there is a proof of concept app which displays "Hello, world" using Tk then crashes when you push the close butto

[06:01] *** notostraca2 left
[06:02] <sorear> egh.

[06:07] *** araujo left
[06:08] *** khisanth_ joined
[06:09] *** khisanth__ joined
[06:11] *** khisanth__ is now known as Khisanth

[06:13] *** khisanth_ left
[06:16] *** dd070 left
[06:19] *** kanishka left
[06:24] *** plobsing left
[06:30] *** industry__ joined
[06:33] *** hdanak_ joined
[06:34] <dalek> niecza: dba7c34 | sorear++ | lib/CLRBackend.cs:

[06:34] <dalek> niecza: Assorted small optimizations to the CLR bytecode emitter

[06:34] <dalek> niecza: review: https://github.com/sorear/niecza/commit/dba7c342e9

[06:34] *** rgrau left
[06:42] *** nymacro joined
[06:47] *** satyavvd joined
[06:50] *** satyavvd_ joined
[06:52] *** satyavvd left
[06:52] *** satyavvd_ is now known as satyavvd

[06:55] *** aesop joined
[07:01] *** cataska joined
[07:12] *** roen left
[07:16] *** hdanak_ left
[07:17] *** _kaare joined
[07:18] <dalek> niecza: 0f5c4a0 | sorear++ | lib/CLRBackend.cs:

[07:18] <dalek> niecza: Suppress runtime type checks for reference frame slot accesses

[07:18] <dalek> niecza: review: https://github.com/sorear/niecza/commit/0f5c4a0dea

[07:28] <sorear> playing with the new mono heap profiler... it looks like > 2/3 of the residency while STD is parsing itself is Dictionary<K,V>

[07:31] *** adu left
[07:31] *** adu joined
[07:32] *** satyavvd left
[07:34] <diakopter> sorear: cool :D

[07:34] <diakopter> sorear: is that lexical scope implementation? or what?

[07:40] *** blackpirate joined
[07:53] *** roen joined
[07:56] <sorear> diakopter: I think it's @*MEMOS[$pos]<ws>

[07:56] <sorear> since there are about 200k hashes and about 200k character positions in STD.pm6

[07:56] <sorear> "2/3 of the residency" means 120MB or so

[08:03] *** ch3ck joined
[08:03] *** nymacro left
[08:11] *** glow joined
[08:12] *** ch3ck left
[08:24] <blackpirate> rakudo: use v6;my $abc = prompt 'where are you from'; say "which continent is $abc in";

[08:24] <p6eval> rakudo cae7f9: OUTPUT«where are you fromwhich continent is Land der Berge, Land am Strome, in␤»

[08:26] *** am0c joined
[08:26] <blackpirate> hi  everyone i wrote this script above.i got this output.where did 'Land der Berge, Land am Strome' come from in the output ?

[08:27] <tadzik> blackpirate: it's from some country's national anthem, it's used as a standard input on the eval server

[08:28] <blackpirate> ya its national anthem of austria i googled it.

[08:29] <blackpirate> what if i want a number as input instead of a string?

[08:29] <sorear> my $age = +(prompt 'how old are you');

[08:29] <sorear> + converts to numeric

[08:30] <blackpirate> thanks 

[08:37] <tadzik> or (prompt 'how old are you').Num

[08:38] <tadzik> or even prompt('how old are you').Num

[08:39] *** Axius joined
[08:47] *** molaf joined
[08:56] *** am0c left
[08:57] *** ch3ck joined
[09:03] *** roen left
[09:29] *** Sarten-X left
[09:36] *** zorgnax left
[09:36] *** youwin_ left
[09:36] *** roen joined
[09:40] *** Sarten-X joined
[09:47] *** Axius_ joined
[09:50] *** Axius left
[09:50] *** blackpirate left
[09:57] *** cataska left
[10:02] *** abra joined
[10:08] *** QinGW left
[10:24] *** ch3ck left
[10:32] *** abra left
[10:33] *** Axius_ left
[10:36] *** abra joined
[10:37] *** abra left
[10:37] *** abra joined
[10:38] *** abra left
[10:42] *** kanishka joined
[10:46] *** abra joined
[10:46] *** abra left
[10:49] *** abra joined
[10:51] *** sji joined
[10:57] *** masak joined
[10:57] <masak> oh hai, #perl6!

[10:58] <tadzik> oh hai masak

[10:58] <masak> this zebra is in a Christmas mood. :)

[10:59] <moritz_> TimToady++ # advent post

[10:59] <moritz_> Merry Christmas #perl6!

[11:00] *** glow left
[11:03] <masak> &

[11:05] *** rokoteko is now known as tkr

[11:19] <dalek> niecza: 254e286 | sorear++ | v6/tryfile:

[11:19] <dalek> niecza: A bit more inlining to remove all ws -> pos edges

[11:19] <dalek> niecza: review: https://github.com/sorear/niecza/commit/254e286f48

[11:19] <dalek> niecza: 191bfbf | sorear++ | lib/ (5 files):

[11:19] <dalek> niecza: Implement a custom specialized hybrid dictionary, saves 5%

[11:19] <dalek> niecza: review: https://github.com/sorear/niecza/commit/191bfbfdaa

[11:20] <sorear> the wins from abandoning System.Collections are not as big as I had feared

[11:20] <sorear> hi masak.

[11:20] *** abra left
[11:21] *** satyavvd joined
[11:21] <sorear> currently running 32.1

[11:22] <sorear> still takes 190MB just to parse a 200k file

[11:22] <sorear> which is imho unacceptable

[11:22] <sorear> especially since I'll want to compile it too

[11:23] <sorear> now I know why Perl 5 goes to such pains to compact parse-tree nodes, when every other data structure is practically designed to waste memory...

[11:23] *** shi_ joined
[11:25] *** shi_3 joined
[11:26] *** sji left
[11:26] *** ch3ck joined
[11:28] *** shi_ left
[11:30] <moritz_> do you discard Match objects once you have built the AST from them?

[11:39] <moritz_> sorear: any niecza plans for 2011 which I could/should mention in my "perl 6 in 2010" blog post?

[11:49] <masak> sorear: you seem to have backlogged already, but I just wanted to say that even being impressed by niecza from the start, during the past 24 hours I've gained a few more notches of respect for it.

[11:50] <masak> sorear: I can easily seen niecza becoming my implementation-of-choice in the not-so-far future.

[11:51] <moritz_> masak: and remember to submit bug reports (and TODO tickets) for things that don't work yet :-)

[11:51] <masak> moritz_: wouldn't miss it for the world :)

[11:52] <masak> I do agree with ggoebel though; docking with the spectests seems to be the Next Big Milestone for niecza.

[11:53] *** molaf left
[11:59] <masak> darnit, why do you have to have so interesting discussions when I'm distracted by Christmas Eve? :)

[12:13] *** amkrankruleuen joined
[12:17] *** satyavvd_ joined
[12:17] *** lopaway is now known as lopnor

[12:18] *** yves left
[12:19] *** satyavvd left
[12:19] *** satyavvd_ is now known as satyavvd

[12:24] *** ShaneC joined
[12:27] *** shi_3 left
[12:40] *** satyavvd left
[12:56] <takadonet> morning all

[13:02] *** MayDaniel joined
[13:03] *** Su-Shee left
[13:05] *** envi left
[13:13] *** abra joined
[13:14] <takadonet> wow.... no one alive

[13:17] * moritz_ is very dead

[13:18] *** _twitch joined
[13:19] <moritz_> http://www.tagesschau.de/multimedia/bilder/schnee954_mtb-1_pos-4.html#colsStructure merry christmas!

[13:21] <masak> morning, takadonet.

[13:28] <moritz_> http://abstrusegoose.com/329

[13:28] <takadonet> so how's our page views for advent calendar>

[13:28] <takadonet> ?>

[13:28] <moritz_> 1.4k yesterday, 0.8k today

[13:29] <moritz_> no way

[13:29] <moritz_> 1.4k day before yesterday, 0.8k yesterday, 0.4k today

[13:30] <moritz_> 28.5k this month

[13:30] <takadonet> better then last year?

[13:30] <moritz_> nope, last year was 45.9k

[13:30] <takadonet> nuts

[13:30] <moritz_> which included slashdot and a twitter link by tim o'reilly

[13:31] <moritz_> but I still think that this year was a great success

[13:32] *** masonkramer left
[13:32] <takadonet> well cannot wait to link your end of the year perl 6 post :)

[13:32] <masak> TimToady: nice post. on a course enough granularity, that was exactly what I expected you to write. :)

[13:32] <moritz_> and the webmaster tools show that about 280 people have subscribed to the advent RSS feed via google's feed reader

[13:33] <masak> in some subtle ways, this year was a greater success than last year, even.

[13:33] <moritz_> (which doesn't include those that follow via planetsix, which I think is an even larger number)

[13:38] * colomon was very interested to discover it actually is "troll the ancient yule-tide carol", even though you can find lovely "explanations" on the web of why the word should be "toll".

[13:44] *** plobsing joined
[14:00] <moritz_> phenny: tell sorear that niecza build on debian requires libmono2.0-cil -- would be nice to have in the README.pod

[14:00] <phenny> moritz_: I'll pass that on when sorear is around.

[14:00] *** am0c joined
[14:04] *** ShaneC left
[14:11] *** wamba joined
[14:11] <masak> colomon: for me, it gave a new depth to the trololololo song. :-P

[14:13] <masak> sorear++ # cilbackend merged! o.O \o/

[14:13] <takadonet> cilbackend?

[14:13] <takadonet> was it abranch?

[14:14] *** uasi left
[14:17] *** kanishka left
[14:18] *** iswami joined
[14:20] *** _twitch left
[14:23] <masak> takadonet: yes, sorear is building niecza away from dotnet+perl5, and towards just dotnet.

[14:28] <takadonet> masak: sweet

[14:30] <tadzik> isn't that away from C#?

[14:33] <tadzik> and the next big step is to move it away from perl5?

[14:34] *** _twitch joined
[14:34] <tadzik> 0427       sorear | niecza no longer depends on a C# compiler post-install

[14:34] <tadzik> 0428       sorear | the real break however will be when niecza stops depending on Perl 5

[14:35] <tadzik> ah, I misread what you meant

[14:37] *** ultraviolent left
[14:47] *** xinming left
[14:49] *** xinming joined
[14:49] *** wamba left
[14:58] *** envi joined
[14:58] *** am0c left
[15:01] *** iswami left
[15:05] *** am0c joined
[15:20] *** araujo joined
[15:20] *** araujo left
[15:20] *** araujo joined
[15:22] *** shi_3 joined
[15:37] *** _kaare left
[15:39] *** soroush joined
[15:39] *** soroush left
[15:40] *** soroush_ left
[15:41] *** am0c left
[15:49] *** cottoo joined
[15:53] *** cotto left
[15:54] *** dipthegeezer left
[15:59] *** adu left
[16:02] *** risou joined
[16:10] <kthakore> Happy Holidays!!!

[16:12] <vert2_> happy holidays to you too

[16:13] <sjn> Merry christmas :)

[16:14] <sjn> happy yule-tide, really :)

[16:14] <sjn> nice advent calendar post today, btw

[16:14] <sjn> TimToady++

[16:15] <takadonet> http://www.reddit.com/r/programming/comments/eqvz4/larry_wall_on_cultural_hacking_perl_6_advent/ upvote :)

[16:23] *** lopnor is now known as lopaway

[16:23] * sjn never bothered to create a reddit account :-/

[16:23] <takadonet> TimToady: http://www.reddit.com/r/programming/comments/eqvz4/larry_wall_on_cultural_hacking_perl_6_advent/c1a7m31

[16:26] * kthakore hugs everyone! :D

[16:27] <kthakore> vert2_: :D

[16:27] <vert2_> kthakore: hi

[16:27] <colomon> o/

[16:27] <kthakore> \o

[16:28] <kthakore> colomon: Epic Internet HIGH FIVE!

[16:28] <colomon> o|

[16:28] <vert2_> \o/

[16:28] <vert2_> 2 handed.

[16:28] <kthakore> I don't know what to do with that so you get a HUG!

[16:28] <kthakore> *:HUG:*

[16:29] <kthakore> rakudo: *:HUG:*

[16:29] <p6eval> rakudo cae7f9: OUTPUT«===SORRY!===␤Confused at line 22, near "*:HUG:*"␤»

[16:29] <kthakore> hahaha

[16:29] <kthakore> I confused the poor bot with feelings from a hug

[16:40] *** risou_ joined
[16:40] *** roen left
[16:43] *** risou left
[16:49] *** WonTu joined
[16:50] *** WonTu left
[16:55] *** justatheory joined
[16:58] <masak> Merry Christmas, everyone.

[16:59] <masak> also, today is the last day to sign up for http://strangelyconsistent.org/blog/masaks-perl-6-coding-contest

[17:00] <takadonet> masak: how many people signed up?

[17:00] <masak> haven't checked my email today, but we were up to 12 last I looked.

[17:00] <masak> er, s/we/they/ :)

[17:01] <takadonet> http://www.reddit.com/r/perl/comments/eqyze/last_day_to_signup_for_perl_6_coding_contest/

[17:03] <masak> excellent. thanks. :)

[17:07] <masak> I tweeted about it as well.

[17:08] * takadonet going to submit the tweet to reddit....

[17:22] *** uasi joined
[17:27] *** shi_3 left
[17:35] *** Axius joined
[17:36] *** ch3ck3r joined
[17:39] <TimToady> the reddit comment by FeepingCreature is ironic given that I was probably the first to use the term "feeping creaturism" on the net

[17:40] *** ch3ck left
[17:42] *** risou_ left
[17:42] *** risou joined
[17:45] <sjn> heh

[17:46] <TimToady> hug = troll⁻¹

[17:48] *** MayDaniel left
[17:51] <TimToady> maybe we need a troll⁻¹me bot

[17:53] <TimToady> due to character set restrictions, we might have to name it the arctrollmebot

[17:54] <sbp> call it xn--trollme-na81cta1fvu

[17:54] <sbp> though, there you might have the length restriction...

[17:59] *** shi joined
[17:59] *** am0c joined
[18:05] *** am0c left
[18:17] *** rindolf joined
[18:17] <sjn> hug * troll = 1; # whut?

[18:17] <rindolf> Hi all.

[18:18] <sjn> o/ rindolf 

[18:18] <rindolf> sjn: what's up?

[18:18] <sjn> christmas eve

[18:18] *** masonkramer joined
[18:19] <rindolf> Maybe I'll convert my freshly written ABC Path solver to Perl 6.

[18:19] <rindolf> Just for kicks.

[18:19] <sjn> rindolf: sounds like a nice project for the holidays :)

[18:20] <sjn> although I have no idea what an ABC Path is, and why it's worth resolving

[18:21] <rindolf> sjn: solving, not resolving.

[18:21] <rindolf> sjn: http://www.brainbashers.com/abcpath.asp - that's ABC Path.

[18:22] <sjn> aah

[18:22] <rindolf> sjn: we don't have holidays here in .il now.

[18:22] <rindolf> Only a weekend.

[18:22] <rindolf> And today it's already Friday night.

[18:24] <sorear> good * #perl6

[18:24] <phenny> sorear: 14:00Z <moritz_> tell sorear that niecza build on debian requires libmono2.0-cil -- would be nice to have in the README.pod

[18:26] <rindolf> So when will the December Rakudo Star release be out?

[18:28] <cxreg> christmas? :)

[18:29] <cxreg> we've already had 5 christmases this year, what are you complaining about

[18:30] *** justatheory left
[18:30] *** justatheory joined
[18:30] <rindolf> cxreg: no, I just want to package it for Mandriva Cooker.

[18:32] *** jedai joined
[18:33] *** jedai_ left
[18:33] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_delta_tablet

[18:36] *** industry__ left
[18:37] *** tacullum joined
[18:37] <sorear> moritz_: this is just STD being tested, no AST is being built at all... which is why 190M troubles me so

[18:38] <sorear> moritz_: in 2010?  bootstrapping, &eval, spectests are my medium-term plans

[18:39] <shortcircuit> Ok, so 'say "hello, there, &title($person)"' will call the subroutine named 'title', and also process a variable named $person.

[18:40] <shortcircuit> How might one escape specific symbols? Say I didn't want it to call &title, but still interpolate $person?

[18:40] <flussence> \& I'm assuming

[18:41] <takadonet> i have some passing tests!!!!

[18:41] <TimToady> rakudo: my $person = "shortcircuit"; say "hello, there, \&title($person)";

[18:41] <p6eval> rakudo cae7f9: OUTPUT«hello, there, &title(shortcircuit)␤»

[18:41] <takadonet> https://github.com/Takadonet/Text--Diff

[18:42] <shortcircuit> TimToady: The implication is that the symbol &title doesn't exist in-scope, but if I wanted to avoid that biting me accidentally?

[18:42] <takadonet> cya everyone!

[18:42] <shortcircuit> (i.e. if the symbol were defined later)

[18:42] *** takadonet left
[18:42] <TimToady> it wouldn't bite you unless you actually deref it with ()

[18:43] <TimToady> rakudo: say "hi &title"

[18:43] <p6eval> rakudo cae7f9: OUTPUT«hi &title␤»

[18:43] <TimToady> only $ can interpolate without some kind of bracketing

[18:43] <TimToady> this also solves the accidental @ and % interpolations

[18:43] *** abra left
[18:44] <shortcircuit> Hm. Seems \ works if the routine is defined, as well as if it's not.

[18:44] <shortcircuit> I like belt-and-suspenders, myself. :)

[18:44] <TimToady> rakudo: my @array = <a b c>; say "hello @array"

[18:44] <p6eval> rakudo cae7f9: OUTPUT«hello @array␤»

[18:44] <TimToady> rakudo: my @array = <a b c>; say "hello @array[]"

[18:44] <p6eval> rakudo cae7f9: OUTPUT«hello a b c␤»

[18:45] <TimToady> so email address no longer accidentally interpolate arrays

[18:45] <TimToady> *es

[18:45] <shortcircuit> Hm.

[18:46] <TimToady> \ has no knowledge of whether it's quoting something defined, it just quotes the next char

[18:46] <shortcircuit> 'sometext' with the ~ operator handles the more general case.

[18:46] <rindolf> TimToady: happy Christmas.

[18:46] <shortcircuit> I couldn't find the string concatenation operator yesterday. Shoulda poked around on Rosetta Code. :)

[18:46] <TimToady> rindolf: merry hanuka :)

[18:46] <rindolf> TimToady: heh, it was over a few weeks ago.

[18:47] <rindolf> TimToady: but thanks.

[18:48] *** tacullum left
[18:48] <TimToady> shortcircuit: the general interpolator is just a closure in {...}

[18:49] <TimToady> rakudo: my @array = <a b c>; say "hello {@array} there"

[18:49] <p6eval> rakudo cae7f9: OUTPUT«hello a b c there␤»

[18:50] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_variable_tablet

[18:53] *** rindolf left
[18:55] <Axius> How can I use p6eval to run code?

[18:55] *** cottoo is now known as cotto

[18:56] <sorear> rakudo: my @array = <a b c>; say "hello {@array} there"

[18:56] <p6eval> rakudo cae7f9: OUTPUT«hello a b c there␤»

[18:56] *** cotto left
[18:56] <sorear> niecza: my @array = <a b c>; say "hello {@array} there"

[18:56] <p6eval> niecza 406e042: OUTPUT«Can't locate JSON.pm in @INC (@INC contains: /home/p6eval/niecza/src /etc/perl /usr/local/lib/perl/5.10.1 /usr/local/share/perl/5.10.1 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.10 /usr/share/perl/5.10 /usr/local/lib/site_perl .) at /home/p6eval/niecza/src/NAMBackend.pm

[18:56] <p6eval> ..line 9…

[18:56] *** cotto joined
[18:56] <sorear> ops

[18:57] <sorear> phenny: tell moritz_ Would you install JSON::XS on niecza's p6eval perl?  Thanks.

[18:57] <phenny> sorear: I'll pass that on when moritz_ is around.

[18:57] <sorear> pugs: my @array = <a b c>; say "hello {@array} there"

[18:57] <p6eval> pugs: OUTPUT«hello a b c there␤»

[18:57] *** abra joined
[18:58] <Axius> rakudo: say 34 + 3;

[18:58] <p6eval> rakudo cae7f9: OUTPUT«37␤»

[19:01] *** envi left
[19:03] *** _twitch left
[19:09] <Axius> my $name = "axius"; say "Hello, $name there"

[19:10] <Axius> rakudo: my $name = "axius"; say "Hello, $name there"

[19:10] <p6eval> rakudo cae7f9: OUTPUT«Hello, axius there␤»

[19:11] *** Eevee left
[19:13] <TimToady> hugme: hug Axius 

[19:13] <TimToady> ENOHUGBOT

[19:15] *** MayDaniel joined
[19:15] *** uasi left
[19:16] *** Eevee joined
[19:18] <Axius> rakudo: my $name = "Tim"; say "Hi to $name"

[19:18] <p6eval> rakudo cae7f9: OUTPUT«Hi to Tim␤»

[19:21] *** dd070 joined
[19:22] <lue> hello world o/

[19:22] * colomon just realized his recipe calls for 9x13 pans, but all he's got is 8x11

[19:23] <sorear> cm? in?

[19:23] <colomon> in

[19:26] *** Patterner left
[19:26] <flussence> or a matrix of pans?

[19:27] *** Psyche^ joined
[19:27] *** Psyche^ is now known as Patterner

[19:27] <colomon> It's a matrix of them now.  I had to have an overflow pan

[19:29] <colomon> rakudo: say 10 * 2/3; say 5 * 2/3; say 4 * 2/3

[19:29] <p6eval> rakudo cae7f9: OUTPUT«6.66666666666667␤3.33333333333333␤2.66666666666667␤»

[19:29] <colomon> (proportions for my next one....)

[19:31] *** shi left
[19:37] *** masak left
[19:39] *** Axius left
[19:45] *** newbie_ joined
[19:47] <newbie_> hi, I was asked to create a hangman game in my class, I was thinking of using perl6, but I am wondering if it has nice GUI module integrated with it (tk, wx, qt) ? that would make it look better than console/Dos based game.. any advice plz ^_^

[19:48] <lue> Sorry, there isn't any GUI module available for Perl 6 right now (at least as far as I'm aware)

[19:49] <newbie_> oh.. too bad :(

[19:52] *** kanishka joined
[19:54] *** newbie_ left
[19:56] <cxreg> i looked a bit at Gtk but it seemed worth waiting on gsoc_nci

[19:58] <cxreg> which is apparently merged now, woot

[19:58] <dd070> newbie_: for now you can use perl5 with wx or gtk. 

[19:59] <cxreg> he's gone

[19:59] <dd070> newbie is gone

[19:59] <dd070> to perl5

[20:00] <lue> That's I think the third time in two days someone's come to ask about a GUI. I think it's time for a GUI :)

[20:00] <sorear> I think it's the same person, using proxies to troll us.

[20:00] <cxreg> that might be a good way for ffi to stretch its legs

[20:00] * cxreg pulls

[20:01] <dd070> I can use wx but not developed wx. 

[20:05] *** dd070 left
[20:06] *** dd070 joined
[20:06] <cxreg> ah looks like zavolaj might need work first

[20:08] <plobsing> cxreg: Gtk could be even more awesome with reprs working (nom). Seems there's always something to be waiting for.

[20:09] *** lopaway is now known as lopnor

[20:11] <cxreg> true dat

[20:13] <plobsing> not that you should wait. A decent GUI is the last piece of the puzzle for some, it would seem.

[20:14] <cxreg> i'm a bit confused

[20:14] <cxreg> is gsoc_nci/libffi different from parrot-libjit-fb

[20:15] <plobsing> yes, they are different, although they make use of the same mechanisms and provide the same thing

[20:16] <plobsing> parrot-libjit-fb remains because (a) I suspect it is more efficient (b) It is a cleaner implementation in some ways (c) I'm too lazy to take it down

[20:17] <plobsing> the (suspected) efficiency and clenliness are simply a property of the methods of operation of libjit vs libffi

[20:18] <cxreg> ah ok

[20:18] <cxreg> zavolaj specifically mentions wanting to support parrot-libjit-fb

[20:18] <colomon> rakudo: my $a = * ~ *; say $a("hello ", "world);

[20:18] <p6eval> rakudo cae7f9: OUTPUT«===SORRY!===␤Unable to parse postcircumfix:sym<( )>, couldn't find final ')' at line 22␤»

[20:19] <colomon> rakudo: my &a = * ~ *; say &a("hello ", "world);

[20:19] <p6eval> rakudo cae7f9: OUTPUT«===SORRY!===␤Unable to parse postcircumfix:sym<( )>, couldn't find final ')' at line 22␤»

[20:19] <colomon> rakudo: my &a = * ~ *; say &a("hello ", "world");

[20:19] <p6eval> rakudo cae7f9: OUTPUT«hello world␤»

[20:19] <colomon> rakudo: my &a = * ~ *.substr(2); say &a("hello ", "world");

[20:19] <p6eval> rakudo cae7f9: OUTPUT«hello rld␤»

[20:20] <cxreg> though mberends added that comment back in may

[20:20] <cxreg> before gsoc, presumably

[20:20] <plobsing> cxreg: they provide the same API. All frame builders for parrot shall provide the same API. gsoc_nci tried to provide extensions and wound up not parsing correctly (a problem *every* frame builder has had at one point or another), so now noone gets to do that ever.

[20:21] <cxreg> no one gets to do what?

[20:21] <plobsing> gets to parse the signature string and provide extensions to the signature syntax

[20:21] <cxreg> oh, by decree of someone in #parrot?

[20:21] <plobsing> that would be me.

[20:21] <cxreg> ah :)

[20:22] <plobsing> I've seen the problem 4 times now. It is subtle and hard to debug, and I'm *not* going there again.

[20:22] <cxreg> maybe if we had a full cpp? :)

[20:23] *** gimix joined
[20:23] <plobsing> If only people would use such canned solutions more often. cpp isn't all that bad, I'm using it for Ωη.

[20:24] *** dju left
[20:27] <dukeleto> hola

[20:28] <dukeleto> how does one pronounce Ωη ?

[20:28] <plobsing> ohm-eta (a pun on ometa)

[20:29] <dukeleto> plobsing: nice :)

[20:29] <dukeleto> plobsing: i knew the letters but didn't understand the pun

[20:33] <sorear> c preprocessor?

[20:33] *** lopnor is now known as lopaway

[20:34] <lue> rakudo: grammar A { regex TOP { <B>+ } proto regex B { <...> }; multi regex B:sym<C> { Cc }; multi regex B:sym<D> { Dd }; }; say A.parse("CcCcDd")

[20:34] <p6eval> rakudo cae7f9: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 22␤»

[20:35] <lue> rakudo: grammar A { regex TOP { <B>+ }; proto regex B { <...> }; multi regex B:sym<C> { Cc }; multi regex B:sym<D> { Dd }; }; say A.parse("CcCcDd")

[20:35] <p6eval> rakudo cae7f9: OUTPUT«CcCcDd␤»

[20:36] <plobsing> sorear: yes. it has its uses.

[20:37] <sorear> how does cpp relate to libffi?

[20:37] <plobsing> not at all really

[20:46] <lue> afk

[20:47] <gimix> Hello, my web service is using perl 5.10 and it is designed as procedure style programming. I would like to ask you about OOP in Perl. I want to apply some design pattern but I have considered about performance. Does application get poor performance when OOP is applied? 

[20:49] <tadzik> not really. The paradigm doesn't affect performance directly

[20:49] <tadzik> Also, this channel is about Perl 6 specifically

[20:49] *** jameswhite joined
[20:50] <tadzik> the modules you may want to be using when writing OOPerl (Moose) may affect performance

[20:50] *** dd070 left
[20:50] <jameswhite> When did it perl6 get released?

[20:50] <tadzik> #define released

[20:51] <tadzik> there are releases appearing montly

[20:51] <jameswhite> Ah, ok.

[20:51] <tadzik> assuming by perl6 you mean Perl 6 Compilers

[20:54] <gimix> thanks all. what is different perl5.10 (Moose) with perl 6? OOP will be built in core of language? So when I upgrade to perl6 what things I should have consideration.

[20:54] *** abra left
[20:55] <gimix> because my current system is working in stable but source code could not reusable.

[20:57] <sorear> if your system is working there's no reason to upgrade.

[20:59] *** kanishka left
[21:00] *** shi joined
[21:02] <tadzik> gimix: in Perl 6 you get OOP for free. But think twice before using Perl 6 in production code

[21:04] <gimix> tadzik: yes, what's your thinking?

[21:05] <tadzik> gimix: about what?

[21:06] <gimix> tadzik: what does you mean? --> But think twice before using Perl 6 in production code..

[21:06] *** MayDaniel left
[21:08] <sorear> there are no implementations of Perl 6 that can compete with perl5 or CPython in aggregate performance

[21:10] <gimix> sorear: you mean there are no different things except OOP is built in it?

[21:11] *** felliott left
[21:11] <tadzik> hell no

[21:11] *** Bonham left
[21:12] <tadzik> Perl 6 is Very different, but that's not the issue. The issue is that implementations are not mature yet

[21:16] <gimix> yes, thanks so much

[21:19] <tadzik> you're welcome. You can help Perl 6 implementations to get mature, the easiest way to contribute is to write and use Perl 6

[21:20] *** dju joined
[21:21] <gimix> tadzik: sure, I am a fan of object oriented :)

[21:22] <shortcircuit> http://developers.slashdot.org/story/10/12/24/1934221/23-Years-of-Culture-Hacking-With-Perl

[21:24] *** dju left
[21:24] *** dju joined
[21:30] *** HarryS left
[21:36] *** nadim__ left
[21:36] *** HarryS joined
[21:50] *** jmmills joined
[21:52] *** nadim__ joined
[21:52] *** jarfhy joined
[21:52] *** zero_ve joined
[21:57] *** justatheory left
[21:58] *** justatheory joined
[22:02] *** justatheory left
[22:02] <dalek> niecza: abd12f0 | sorear++ | v6/tryfile:

[22:02] <dalek> niecza: [v6] Use a dedicated array for line number memos

[22:02] <dalek> niecza: review: https://github.com/sorear/niecza/commit/abd12f02c5

[22:03] <sorear> takes max rss down from 200mb to 170mb

[22:03] <sorear> still far from where I want it, but a clear improvement

[22:03] *** fdfff joined
[22:03] *** fdfff left
[22:04] *** justatheory joined
[22:07] *** thejaanbaz joined
[22:07] <thejaanbaz> Hello

[22:07] <sjohnson> hi

[22:09] <thejaanbaz> pretty slow looks like

[22:10] <tadzik> hm?

[22:10] *** thejaanbaz left
[22:14] <sjohnson> lot of people think perl6 is like a singles bar for meeting new people

[22:15] <tadzik> so it isn't? :(

[22:16] * tadzik has left #perl6 ("Sad panda")

[22:16] <tadzik> even hugme's gone

[22:17] <sjohnson> heheh

[22:17] *** gimix left
[22:21] *** shi left
[22:22] *** finanalyst joined
[22:24] <finanalyst> hi. i just did a git pull on rakudo, ran Config.pl with --gen-parrot. Ran perl6 and got: Incompatible versions of `core_ops' oplib. Found 2.11.0 but loaded 2.10.1

[22:24] *** zero_ve left
[22:24] *** finanalyst left
[22:27] *** nat2610_ joined
[22:41] *** dju_ joined
[22:44] *** dju left
[22:46] *** justatheory left
[22:50] *** justatheory joined
[22:56] <moritz_> flussence: rm -rf parrot_install

[22:56] <phenny> moritz_: 18:57Z <sorear> tell moritz_ Would you install JSON::XS on niecza's p6eval perl?  Thanks.

[22:56] <flussence> wrong \t?

[22:58] <moritz_> flussence: sorry, meant finanalyst

[22:59] *** fgdfgdsfgdfsg joined
[22:59] <moritz_> phenny: tell finanalyst please try rm -rf parrot_install to get rid of the incomptaible core_ops versions

[22:59] <phenny> moritz_: I'll pass that on when finanalyst is around.

[22:59] *** fgdfgdsfgdfsg left
[23:00] <moritz_> sorear: should be installed now

[23:02] <moritz_> 3.7k hits on advent post, partly due to slashdot

[23:06] *** justatheory left
[23:06] *** justatheory joined
[23:09] *** dual left
[23:13] *** MayDaniel joined
[23:14] *** Priyank joined
[23:15] *** Priyank left
[23:16] *** lopaway is now known as lopnor

[23:16] *** [particle]1 left
[23:17] *** [particle] joined
[23:19] *** rgrau joined
[23:29] *** MayDaniel left
[23:32] *** M_o_C joined
[23:59] *** dual joined
