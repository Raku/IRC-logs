[00:50] *** xomas is now known as xomas_

[00:50] *** xomas_ is now known as xomas

[00:52] *** justatheory left
[01:12] *** soupdragon joined
[01:32] <diakopter> refactoring while porting. recommended only on coffee.

[01:32] * diakopter looks for more coffee

[01:41] *** wormphlegm joined
[01:58] *** cognominal left
[02:04] *** Astoria` left
[02:11] *** xinming_ joined
[02:15] <pugs_svn> r29442 | diakopter++ | [sprixel] begin porting alternation of two stateless nodes. 

[02:30] *** xinming left
[02:36] *** wormphlegm left
[02:38] *** rachelBROWN joined
[02:51] *** payload1 left
[02:57] *** Baggio_ joined
[03:25] *** jaldhar_ joined
[03:25] *** justatheory joined
[03:27] *** justatheory left
[03:51] *** Baggio_ left
[03:59] *** douglashunter joined
[04:10] *** douglashunter left
[04:16] *** Chillance left
[04:28] *** cbk left
[04:28] *** cbk joined
[04:41] *** justatheory joined
[04:44] *** justatheory left
[04:58] *** rachelBROWN left
[05:04] *** mberends joined
[05:26] *** kst left
[05:26] *** kst joined
[06:14] *** alester joined
[06:17] *** meppl joined
[06:19] *** xinming_ is now known as xinming

[06:25] *** ranx joined
[06:25] *** ranx left
[06:52] <Tene> Okay, I have a Failure class behaving mostly properly... it sets 'handled' in the right places, etc.

[06:52] <Tene> I just need to figure out what accesses I need to establish failures for.

[06:54] <Tene> all the vtables?  are there methods it should support?

[06:54] <Tene> And what should it do when not failing?  Forward to the exception?

[06:55] <mberends> I wish I could answer such questions, but I cannot :(

[06:56] <Tene> eh, I'll just wing it.

[06:56] <mberends> you're pre-forgiven

[06:56] <Tene> get_string and .Str, get_num and .Num, etc.

[06:56] <Tene> I'll just make them forward when not failing.

[06:58] <Tene> Yay, failing tests!  I don't know if I made them fail or not!

[06:58] <sjohnson> yo

[06:58] <Tene> I need to learn to do a spectest run *before* hacking. :)

[06:58] <diakopter> sjohnson: hi

[07:03] <sjohnson> hows it going dia

[07:08] *** alester left
[07:09] <diakopter> sjohnson: oky doky

[07:09] <Tene> Yes, definitely extra failures in my branch.

[07:09] <Tene> well, s/branch/local copy.

[07:09] <diakopter> Tene: Failure causing failures? that's good!

[07:10] <diakopter> sjohnson: wrote a codegen system for javascript

[07:10] <Tene> Oh, I guess Failures should always be undefined?

[07:10] <Tene> That sounds reasonable...

[07:11] <diakopter> I seem to recall that's right

[07:12] <Tene> Yeah, my failures are about failures not being undefined.

[07:17] <diakopter> ng: fail

[07:17] <p6eval> ng 4ccc5a: sh: ./perl6: No such file or directory␤

[07:17] <diakopter> rakudo: fail

[07:17] <p6eval> rakudo db84bc: Can't return outside a routine␤in Main (file <unknown>, line <unknown>)␤

[07:19] <diakopter> rakudo: fail epically

[07:19] <p6eval> rakudo db84bc: Could not find non-existent sub epically␤in Main (file src/gen_setting.pm, line 324)␤

[07:20] <diakopter> rakudo: ubi

[07:20] <p6eval> rakudo db84bc: Could not find non-existent sub ubi␤in Main (file src/gen_setting.pm, line 324)␤

[07:20] <Tene> diakopter: Um, I can't really tell what 'fail' outside of a sub should do.

[07:20] <mberends> rakudo: do not (&fail)

[07:21] <p6eval> rakudo db84bc:  ( no output )

[07:21] <Tene> 'fail' == 'return Failure.new()', kinda

[07:21] <Tene> ng: return 5

[07:21] <p6eval> ng 4ccc5a: No exception handler and no message␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[07:21] <diakopter> ng: fail

[07:21] <p6eval> ng 4ccc5a: No exception handler and no message␤current instr.: '&fail' pc 13943 (src/builtins/Junction.pir:188)␤

[07:21] <Tene> see?  Same thing.

[07:21] <diakopter> ng: leave

[07:21] <p6eval> ng 4ccc5a: Could not find non-existent sub &leave␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[07:21] <diakopter> ng: last

[07:21] <Tene> so, tell me what return outside of a sub should do and then fail can do the same thing. :)

[07:21] <p6eval> ng 4ccc5a: Warning␤

[07:21] <diakopter> ooo

[07:21] <diakopter> ng: next

[07:21] <p6eval> ng 4ccc5a: Warning␤

[07:21] <Tene> Rakudo should really have a top-level handler to catch that stuff.

[07:21] <diakopter> ng: nextsame

[07:21] <p6eval> ng 4ccc5a: Could not find non-existent sub &nextsame␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[07:22] <diakopter> ng: self

[07:22] <p6eval> ng 4ccc5a: Could not find non-existent sub &self␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[07:22] <diakopter> ng: brane.eat

[07:22] <p6eval> ng 4ccc5a: Could not find non-existent sub &brane␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[07:22] <diakopter> ng: ::brane.eat

[07:22] <p6eval> ng 4ccc5a: Null PMC access in find_method('eat')␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[07:22] <diakopter> ng: ::brane.::eat

[07:22] <p6eval> ng 4ccc5a: Confused at line 1, near "::brane.::"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (src/stage0/HLL-s0.pir:328)␤

[07:23] <diakopter> ng: ::brane.eat::

[07:23] <p6eval> ng 4ccc5a: Confused at line 1, near "::brane.ea"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (src/stage0/HLL-s0.pir:328)␤

[07:23] <diakopter> ng: ::brane()

[07:23] <p6eval> ng 4ccc5a: Null PMC access in invoke()␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[07:27] *** rgrau` left
[07:27] *** rgrau`` joined
[07:27] <diakopter> ng: (sub { ::self })().say

[07:27] <p6eval> ng 4ccc5a: Null PMC access in find_method('say')␤current instr.: '_block14' pc 29 (EVAL_1:0)␤

[07:28] <diakopter> ng: (sub { fail })().say

[07:28] <p6eval> ng 4ccc5a: Mu()␤

[07:28] <diakopter> ng: (sub { return })().say

[07:28] <p6eval> ng 4ccc5a: return requires an expression argument at line 1, near "})().say"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (src/stage0/HLL-s0.pir:328)␤

[07:28] <diakopter> ng: (sub { return; })().say

[07:28] <p6eval> ng 4ccc5a: return requires an expression argument at line 1, near "; })().say"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (src/stage0/HLL-s0.pir:328)␤

[07:28] <diakopter> ng: (sub { return nextsame })().say

[07:29] <p6eval> ng 4ccc5a: Could not find non-existent sub &nextsame␤current instr.: '_block23' pc 113 (EVAL_1:49)␤

[07:29] <diakopter> ng: (sub { return selfsame })().say

[07:29] <p6eval> ng 4ccc5a: Could not find non-existent sub &selfsame␤current instr.: '_block23' pc 113 (EVAL_1:49)␤

[07:29] <diakopter> ng: (sub { return &return })().say

[07:29] <p6eval> ng 4ccc5a: Symbol '&return' not predeclared in <anonymous>␤current instr.: 'perl6;PCT;HLLCompiler;panic' pc 137 (src/PCT/HLLCompiler.pir:101)␤

[07:29] <diakopter> ng: (sub { return ::&return })().say

[07:29] <p6eval> ng 4ccc5a: return requires an expression argument at line 1, near "::&return "␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (src/stage0/HLL-s0.pir:328)␤

[07:29] <lisppaste3> tene pasted "failure example works!" at http://paste.lisp.org/display/92947

[07:30] <Tene> How does that look?

[07:32] *** stephenlb left
[07:36] <diakopter> lgtm

[07:36] <diakopter> but, what do I know

[07:36] *** meppl left
[07:40] <Tene> oh, ouch...

[07:40] <Tene> you can't pass a Failure to 'is'

[07:40] <Tene> because 'is' calls 'eq', which calls 'get_str'...

[07:41] <diakopter> heh

[07:41] <Tene> only comes up in two tests, though...

[07:42] <Tene> Maybe I can get a multi in to handle that.

[07:44] <diakopter> but... wouldn't the multi dispatcher call is?

[07:45] <diakopter> might need to check ~.WHAT eq 'Failure()'  in is()

[07:45] <diakopter> er something

[07:47] <Tene> No, the multi dispatcher won't call 'is'.

[07:47] <Tene> I'm dealing with 'is()' in Test.pm

[07:49] <Tene> Oh, hmm...

[07:56] *** JimmyZ joined
[07:57] <Tene> Woah, got a segfault... :)

[08:02] <sjohnson> diakopter: cool.  do you do javascript just for webpage stuff or do you like the language for other uses too?

[08:03] <Tene> Any ideas what Failures should numify to?

[08:04] <Tene> I'll just Intify and Numify to 0 for now. :)

[08:07] <TimToady> seems reasonable to someone whose going to zzzzzzzzzz after driving most of the last 16 hours...

[08:09] <TimToady> *who's

[08:12] <mberends> sjohnson: you'll be impressed by what diakopter++ is making JavaScript do on Google's V8 in Sprixel... very little to do with webpages, just implementing a subset of Perl 6!

[08:13] <sjohnson> interesting

[08:14] <Tene> Ooo...

[08:15] <Tene> Str.index() is fail()ing, and then someone is checking for >0 in the return value, instead of checking for truth or defined.

[08:15] <Tene> So it *should* be failing there, afaict, provided Str.index is supposed to be using fail instead of returning -1 oslt.

[08:16] <Tene> Well, S32 contradicts evaluating as a number, but specs it as returning a StrPos object.

[08:16] <Tene> I'll change the test to check for truthiness...

[08:17] <Tene> erm... definedness.

[08:18] <pugs_svn> r29443 | tene++ | Fix to not fail with Str.index 

[08:21] <Tene> Spectesting...

[08:21] <Tene> Okay, a few more failures.

[08:26] <Tene> Oh, nice, one of them is a sporadic segfault.

[08:26] <Tene> The other is a segfault in the test file, but doesn't segfault when trimmed down.

[08:26] <Tene> Great.

[08:28] <Tene> runs fine with GC disabled...

[08:28] <Tene> ><

[08:29] *** kaare joined
[08:29] *** kaare is now known as Guest63784

[08:29] <Tene> I'll commit as it is.  Looks like weird parrot GC bugs, I think.

[08:34] *** iblechbot joined
[08:36] <Tene> There, pushed.

[08:36] <Tene> I'll do 'use fatal' tomorrow.

[08:37] <Tene> Have fun.

[08:40] <dalek> rakudo/ng: 2db8b5e | tene++ |  (5 files):

[08:40] <dalek> rakudo/ng: First draft of new Failure class

[08:40] <dalek> rakudo/ng: review: http://github.com/rakudo/rakudo/commit/2db8b5e6e8a5ea1559bf2668866e12476cf416fc

[08:41] <Tene> Any other requests tonight, before I sleep?

[08:44] <Tene> Man, you guys are so boring when you're asleep!

[08:44] <Tene> :P

[08:44] <Tene> goodnight all.

[08:57] *** Su-Shee joined
[08:58] <Su-Shee> good morning

[08:59] <Tene> Morning!

[08:59] <Tene> How's you today?

[09:01] *** payload joined
[09:12] <Supaplex> Tene: I thought you were going to sleep

[09:18] *** cognominal joined
[09:22] <sjohnson> Supaplex: he's on a roll 

[09:25] <Supaplex> he's fast. ;)

[09:30] *** meppl joined
[09:38] *** mberends left
[09:50] *** JimmyZ left
[10:04] *** cognominal_ joined
[10:04] *** cognominal left
[10:04] *** pdcawley left
[10:14] *** pdcawley joined
[10:23] *** ejs joined
[10:36] *** cognominal_ left
[10:38] *** ejs left
[10:53] *** steffan joined
[10:59] *** steffan left
[10:59] <nadim> perl6: 1.^methods.sort.join(' ').say

[10:59] <p6eval> rakudo db84bc: Multiple Dispatch: No suitable candidate found for 'cmp', with signature 'PP->I'␤in Main (file <unknown>, line <unknown>)␤

[10:59] <p6eval> ..pugs: [LIST,ITEM,bless]␤

[10:59] <p6eval> ..elf 29443: Unknown rule: dotty:.^␤It needs to be added to ast_handlers.␤ at ./elf_h line 2850␤

[11:00] <nadim> what does the PP->I mean and where is that documented?

[11:01] <nadim> I must say that 1.^methods.join(' ').say working and 1.^methods.sort.join(' ').say not working is surprising

[11:07] <nadim> this 'compile' but doesn't sort        1.^methods.fmt('%s').sort.join(' ').say

[11:12] *** ejs joined
[11:13] *** payload left
[11:14] *** SmokeMachine left
[11:18] *** mberends joined
[11:21] <mberends> hi nadim, I see you're a bit puzzled there. The error message is an internal one, generated by sort(). The PP->I indicates an attempt to find a function that receives two PolyMorphicContainers (PMCs) as parameters and returns an Integer. It's doing that because ^methods is returning method objects, not method names, I think

[11:22] <nadim> it does return methods

[11:22] *** carlin joined
[11:23] <nadim> join can take a PP but not sort! how does one stringify a method name?

[11:24] <mberends> one at a time would be ~ but you need to stringify a list of them

[11:26] <nadim> ughhhh! and error message that starts with "Confused" is, ..., confusing

[11:27] *** cognominal joined
[11:50] <nadim> Does anyone know why multi subs have to be declared with 'multi'? ie: why aren't subs multi by default?

[11:52] <mberends> probably to force you to declare what you mean, just as 'my' is not the default either

[11:53] <nadim> except that using my multiple times is an error but using multi multiple times is not

[11:53] <nadim> but I get your point

[11:54] <frettled> It makes it easier to catch programming errors, for instance when you accidentally declare a new sub with the same name as an old one.

[11:54] <mberends> omitting 'multi' implies that it *will* not be multi'd

[11:57] <mberends> ubuntu 10.4-alpha is behaving very well on this eeePC :)

[12:01] <nadim> you are lucky, this KDE 4.x is eating some of my key presses. @, {, }, [, ... depending on the app. makes programming perl very easy

[12:03] <lisppaste3> nadim pasted "untitled" at http://paste.lisp.org/display/92950

[12:03] <nadim> interresting to see that multi subs can declared _without_ multi after the first declaration.

[12:04] <mberends> nadim: that should not be. you may have found a bug there

[12:04] <lisppaste3> nadim pasted "untitled" at http://paste.lisp.org/display/92951

[12:04] <nadim> this one is even worse

[12:05] <nadim> gives "push_pmc() not implemented in class 'Sub'"

[12:06] <mberends> still updating and installing git-core and subversion to build Rakudo, then I'll be able to test some of your code locally.

[12:06] *** Su-Shee left
[12:09] <lisppaste3> nadim pasted "untitled" at http://paste.lisp.org/display/92952

[12:10] <nadim> this example is not bad either. I'd expect a redeclaration warning for both cases but it seems that 'multi' blocks that.

[12:11] <nadim> that's not good because the warning is definitely something you want want looking for bugs

[12:13] <mberends> nadim: be aware that there is a  major refactor going on in the rakudo-ng branch, and that internals such as you're prodding are certainly already radically changed.

[12:15] <nadim> there are 20+ branches, should I use the ng branch instead?

[12:16] <mberends> not yet, but it is going to become the new master within weeks or even days

[12:16] <nadim> I'll wait then

[12:17] <mberends> good plan

[12:20] <nadim> this is where a FIT like test framework would be great. easy for those who find errors to report them, easy for those who test to run them.

[12:25] *** Su-Shee joined
[12:25] *** araujo left
[12:26] <colomon> FIT?

[12:27] <nadim> http://fitnesse.org/

[12:27] <mberends> hi Su-Shee, some domain squatter tricked me with schreibsturm.de before I found http://www.schreibsturm.org/antiverpeil.html again ;)

[12:28] <nadim> but I believe there is more to FIT than what is ther. Simply put, let the user add test in a very, very simple way so the tests don't get lost.

[12:28] <Su-Shee> yeah, I missed re-newing a couple of "my" domains fast enough two years ago.

[12:29] <colomon> nadim: Perl 6 has a huge set of spectests, and is very generous with permits to modify them.

[12:30] <colomon> though I suppose once you've done so your issue becomes one of hundreds....

[12:30] <nadim> which is great but the meaning of FIT is to make it easier for any user to just drop a few lines and forget about them. of course it is great if someone puts them in the specs but I think that's not the 'finders' role.

[12:30] *** ovid joined
[12:33] <nadim> think of it as perl6: and std: with a DB memory and a web face

[12:33] <lisppaste3> ovid pasted "method invocation bug" at http://paste.lisp.org/display/92953

[12:35] <ovid> Is this a known bug?

[12:35] <colomon> nadim: If you can duplicate the bug using perl6: (well, rakudo: or ng:), it's perfectly acceptable to just copy from the irc channel and with that to [email@hidden.address] and let other people worry about it.

[12:35] <nadim> IE, how do we know the error above, hi ovid, will be handled or even remembered?

[12:35] <colomon> nadim: I guess it could be marginally simper than that, but not much.

[12:35] *** ejs left
[12:36] <colomon> ovid: do you get the error if you leave off the last x.new.y line?

[12:36] *** ejs joined
[12:36] <ovid> Yes.

[12:37] <colomon> rakudo: class x { multi method y { self.y("void") } }; x.new.y;

[12:38] <p6eval> rakudo db84bc:  ( no output )

[12:40] <colomon> of course,  class declarations still don't work this way.  sigh.

[12:41] <colomon> Okay, I've duplicated the issue in rakudo master, and ng gives similar results "Method 'y' not found for invocant of class 'Mu'"

[12:42] <ovid> rakudo: class x { multi method y { self.y("void") } multi method y ($arg) { say $arg } }; x.new.y;

[12:42] <p6eval> rakudo db84bc: Confused at line 2, near "multi meth"␤in Main (file <unknown>, line <unknown>)␤

[12:43] <colomon> ovid: heh.  If I add "say x.new.WHAT;" right after the class definition, it works on both master and ng.

[12:43] <ovid> Arg!

[12:43] <ovid> How annoying :)

[12:44] *** pmurias joined
[12:44] <colomon> So it's totally a bug, and it's in both branches.

[12:44] <pmurias> nadim: multi's are not default for traditions sake

[12:44] <colomon> Do you want to submit it to rakudobug, or would you like me to?

[12:47] <nadim> pmurias: tradition, hmm, well why not

[12:48] <nadim> rakudo guys, would it be possible to make the output of rakudo errors and warnings different, it seems to me they are not?

[12:49] *** lumi joined
[12:49] <ovid> How do I submit to rakudobug?

[12:49] <nadim> ovid:  http://rakudo.org/developers-guide

[12:49] <ovid> Cheers.

[12:50] <colomon> E-mail [email@hidden.address] with [BUG] in the subject line.

[12:50] <pmurias> nadim: multi is two letters longer then sub so it's not that a big difference

[12:50] <ovid> Also, it it a known issue that if a subset type constraint fails, the error message omits the typename?

[12:51] <nadim> colomon: wtf! why do you need [BUG] in the subject to the rakudobug 'user'!! I just send one without. next one will have [BUG]. and if you keep wanting [BUG] please update http://rakudo.org/developers-guide

[12:52] <colomon> ovid: I'd send that code you pasted with the note that it fails on both master and ng, versions 7914ca3aa2f17ced09ff0707700e638d77cd5a1f and 2db8b5e6e8a5ea1559bf2668866e12476cf416fc respectively.

[12:52] *** pmurias left
[12:53] <ovid> Doing that now. Thanks.

[12:55] <ovid> Bug report filed.

[12:56] <colomon>                                                                                                                                                                                                                                                                                                                                                                                                                                                  ov

[12:57] <ovid> OK, have to run for a while. I'll be back.

[12:58] *** ovid left
[12:59] <colomon> nadim: I don't know how necessary the [BUG] tag is, that's just how I do it.

[13:00] <colomon> IMO the biggest problem with the process is trying to see if the issue already is being tracked.

[13:00] <colomon> and my "solution" usually is just to ask here or post the bug without checking.  :(

[13:00] <nadim> it's difficult

[13:01] <nadim> maybe we should let the system do the checking by comparing the op tree for similarities between bugs

[13:03] <mathw> o/

[13:07] *** Su-Shee left
[13:10] <nadim> man! 6 bugs or inconsistencies reported and i just read the first two advent calender entries. I wish I was as good finding bugs in my own code ;)

[13:13] *** soupdragon left
[13:14] <cognominal> rakudo: my $a;  $a ~= 1 ?? 2 :: 3

[13:14] <p6eval> rakudo db84bc: ResizablePMCArray: Can't pop from an empty array!␤in Main (file <unknown>, line <unknown>)␤

[13:14] <cognominal> ng: my $a;  $a ~= 1 ?? 2 :: 3

[13:14] <p6eval> ng 2db8b5: Confused at line 1, near "$a ~= 1 ??"␤current instr.: 'perl6;HLL;Grammar;panic' pc 500 (src/stage0/HLL-s0.pir:328)␤

[13:15] <cognominal> rakudo: my $a;  $a = $a ~ 1 ?? 2 :: 3

[13:15] <p6eval> rakudo db84bc: ResizablePMCArray: Can't pop from an empty array!␤in Main (file <unknown>, line <unknown>)␤

[13:15] <nadim> is perl6-bot the same as rakudo-bot?

[13:15] *** Su-Shee joined
[13:15] <cognominal> rakudo: my $a;  $a = $a ~ (1 ?? 2 :: 3)

[13:15] <p6eval> rakudo db84bc: ResizablePMCArray: Can't pop from an empty array!␤in Main (file <unknown>, line <unknown>)␤

[13:15] *** Baggio_ joined
[13:16] <cognominal> nadim: the bot uses different compilers depending how he is called

[13:16] <nadim> and how do we know wich one is which?

[13:17] <nadim> I understand ng: and std: but bot the difference between rakudo and perl6:

[13:17] <cognominal> I don't know all of them

[13:20] *** dbrock joined
[13:24] *** soupdragon joined
[13:31] *** iblechbot left
[13:33] *** Baggio_ left
[13:40] *** ejs1 joined
[13:50] *** Baggio_ joined
[13:52] *** ovid joined
[13:52] <lisppaste3> ovid pasted "subset names not in error message" at http://paste.lisp.org/display/92955

[13:53] <ovid> Not only does the subset name get omitted, the file and and line numbers are <unknown> (though the latter happens quite a bit)

[13:54] *** ejs left
[13:54] <ovid> is this a known bug? I haven't found it in RT, so I'm happy to file it.

[13:54] <nadim> I reported a bug for the ommited file and line 

[13:55] <nadim> I reported a bug for the <unknown> file and line  (may that is clearer) and yes it happends quite a lot

[13:56] <ovid> So I should post the 'subset' bug?

[13:57] <nadim> yes you should but only about the subset bug not the <unknown> string although that wouldn't hurt

[13:57] <ovid> ok

[14:02] <ovid> Bug filed.  And I must say, I think that's a really nifty use of subset. Perl 6 is going to be very, very fun (and strange).

[14:03] <nadim> I am afraid of that too. yes affraid. I'll learn it because I've been missing some of C++ goodies since I switched to Perl but it is going to be very difficult for a lot of people

[14:03] <nadim> Java was a succcess because it is a dumbed down language that anyone can use

[14:04] <nadim> P6 is a manager nightmare.

[14:05] *** colomon left
[14:05] *** colomon_ left
[14:07] *** cognominal left
[14:07] *** ovid left
[14:08] *** ovid joined
[14:10] <nadim> Is there a Dumper somewhere? I need to look at it so I can implement Data::TreeDumper for P6 (if introspection doesn't make it obsolete)

[14:10] *** ovid left
[14:11] *** revdiablo left
[14:11] *** douglashunter joined
[14:11] *** revdiablo joined
[14:13] *** Astoria` joined
[14:23] *** colomon joined
[14:23] *** colomon_ joined
[14:24] *** colomon left
[14:24] *** colomon_ left
[14:28] <nadim> WHAT gibes the type of an object, what is used to get what the object inherits from?

[14:29] *** xinming_ joined
[14:31] <nadim> and the 1$ question, isn't it possible to inherit from Str?

[14:34] *** xinming left
[14:39] *** colomon joined
[14:40] <colomon> Does this work?

[14:40] <nadim> this?

[14:40] <colomon> nadim: There is no Dumper, per se.  But the .perl method effectively does the same, I think.

[14:41] <colomon> I'm using web irc from my in-laws' computer.  :)

[14:41] <nadim> when it works but it seems to not work when you need it

[14:41] <nadim> colomon: I kinda understood the request ;)

[14:41] <colomon> nadim: when are you having trouble with .perl ?

[14:42] <nadim> all the time would be the right answer

[14:42] <colomon> I know that Match objects don't work right yet, nor Code objects, but those are the only problems I've run into.

[14:43] <colomon> (and answering one of your other questions in the backlog, you certainly should be able to derive from Str.)

[14:43] <colomon> afk for a moment, got to get back to packing.

[14:47] <nadim> class Something is Str{} is OK but I'd like it to act as a Str too.

[14:47] <lisppaste3> nadim pasted "untitled" at http://paste.lisp.org/display/92957

[14:50] <douglashunter> The type coercion stuff in S13 looks nifty, especially: "If you define a method whose name is a declared type, it is taken as a coercion to that type".  rodi's Automota::Cellular provides a role that does Str and Num coercions, letting a A::C::Rule act as both..

[14:50] <colomon> I've really got to go now, but I suspect the problem you're seeing is that my MyString $str doesn't create a MyString variable, it creates a variable which is tested to see if it is MyString.  So you're still making a Str.

[14:51] <colomon> But I admit that when I tried to figure out how to initialize a type derived from Str a few months ago, I got hopelessly confused.  But I didn't try very hard, and didn't ask around for help.

[14:51] <colomon> afk for real now, got to get the car ready and drive to our next location.

[14:51] <colomon> good luck!

[14:51] *** colomon left
[14:51] <nadim> good luck to all of us ;)

[14:55] *** szbalint joined
[15:09] *** iblechbot joined
[15:12] *** colomon joined
[15:12] *** colomon_ joined
[15:13] *** araujo joined
[15:13] <colomon_> Oooo, logged in from my in-laws' driveway.  For a moment, anyway...

[15:13] <colomon_> ovid, your bug goes away with a semicolon...

[15:13] <colomon_> after the class def.

[15:14] <colomon_> that should probably be added to the bug info.

[15:14] <colomon_> bug report info

[15:18] *** pmurias joined
[15:23] *** colomon left
[15:26] *** colomon_ left
[15:28] *** wolf2k_ubuntu joined
[15:29] *** douglashunter left
[15:51] *** Psyche^ joined
[15:51] *** Patterner left
[15:51] *** Psyche^ is now known as Patterner

[15:51] *** Baggio_ left
[15:52] *** pmurias left
[15:53] *** ejs1 left
[15:57] *** mikehh joined
[15:57] *** Chillance joined
[16:08] *** douglashunter joined
[16:11] *** nihiliad joined
[16:24] <douglashunter> Anybody know how I can get evalbot's output from a command line?  I'm often not connected on IRC when I want to pass something through STD, but haven't figured out the right incantation.

[16:30] *** Exodist left
[16:32] <diakopter> douglashunter: yes

[16:32] <diakopter> have you checked out the pugscode subversion repository?

[16:33] <diakopter> "checked out" in the subversion sense

[16:33] <douglashunter> I just got there.

[16:33] <douglashunter> yes.

[16:33] <douglashunter> And I'm in ./src/perl6 in the repo.

[16:40] *** nbrown joined
[16:43] *** payload joined
[16:44] <diakopter> sry; stepped away for a minute.  just run make

[16:44] <diakopter> you'll need to install some packages from the CPAN

[16:44] <douglashunter> No problem, and thank you.  make()ing now.

[16:45] <douglashunter> I think I got the dependencies satisfied, my old slow laptop is churning away now.

[16:45] <diakopter> 1 or 2 of the dependencies might not appear until it's been churning a while

[16:46] <douglashunter> Huh, the wind in NYC is ripping my neighbors awning off.

[16:47] <diakopter> do you have an svn account for pugscode? they're available to anyone. you can commit corrections and new tests to the official test suite.

[16:47] <douglashunter> make() got to tryfile STD, which parsed.

[16:47] <douglashunter> awesome!

[16:47] <diakopter> cool

[16:48] <diakopter> you can use tryfile to test things

[16:48] <douglashunter> I may have an ancient commit-bit, I'm not certain.

[16:48] <diakopter> or   ./viv -e 'some code'

[16:48] <douglashunter> Sweet.  Thanks for the help.

[16:48] <diakopter> (will output the ast in yaml format)

[16:49] <diakopter> yw

[16:49] <douglashunter> Okay, I'm gonna go try to save an awning.  Thanks again, see y'all soon.

[16:49] <diakopter> I can have commitbit send you a 'reset my password' token if you want.  cya

[16:57] <diakopter> I notice that on feather, syntax hilite runs on the whole test suite periodically.  I am wondering whether we can have syntax hilite run on STD.pm, perhaps once a day, so it it can be linked from perl6.org?  anyone?

[16:59] *** ovid joined
[17:02] *** ovid left
[17:03] <pugs_svn> r29444 | diakopter++ | [perl6.org] add an entry for STD.pm on perl6.org 

[17:10] *** rgrau`` is now known as rgrau`

[17:14] *** ovid joined
[17:17] *** ovid left
[17:23] *** cotto left
[17:54] *** nihiliad left
[17:58] <diakopter> the mega camel: http://www.msnbc.msn.com/id/15214376/

[18:16] <pugs_svn> r29445 | diakopter++ | [perl6.org] Add a books area on the Documentation page 

[18:32] *** justatheory joined
[18:35] *** soupdragon left
[18:39] <pugs_svn> r29446 | diakopter++ | [perl6.org] Add some notes (excerpt from Synopsis 1) to /specification 

[18:43] *** payload left
[18:44] *** pdcawley left
[18:44] *** pdcawley joined
[18:54] *** rgrau` left
[18:55] *** wolf2k_ubuntu left
[18:55] *** SmokeMachine joined
[19:00] *** nihiliad joined
[19:09] *** rgrau` joined
[19:19] <pugs_svn> r29447 | diakopter++ | [sprixel] finish up "geither"; begin "geitherls" 

[19:34] *** nadim is now known as Guest72143

[20:42] *** meppl left
[20:47] *** ejs joined
[20:48] *** lumi left
[20:48] *** lumi joined
[21:00] *** TSa joined
[21:01] *** Guest63784 left
[21:02] *** Exodist joined
[21:20] *** ejs left
[21:25] *** pmurias joined
[21:27] *** ejs joined
[21:27] *** cotto joined
[21:32] *** lumi left
[21:33] *** lumi joined
[21:35] *** takadonet1 joined
[21:35] *** TSa left
[21:38] *** stephenlb joined
[21:39] *** takadonet left
[21:40] *** takadonet1 left
[21:41] *** takadonet joined
[21:41] <takadonet> hey all

[21:44] *** colomon joined
[21:44] *** colomon_ joined
[21:45] <takadonet> hey colomon

[21:45] <diakopter> hi

[21:49] *** colomon__ joined
[21:49] *** colomon left
[21:49] *** colomon_ left
[21:49] *** colomon__ is now known as colomon

[21:54] <colomon> hello!

[21:54] *** colomon left
[21:54] <takadonet> colomon: how are u?

[21:55] <takadonet> ...

[21:59] *** takadonet left
[21:59] *** colomon___ joined
[21:59] * colomon___ is starting to hate his IRC client...

[22:00] <mathw> client, or your internet connection?

[22:00] <mathw> or both, I suppose

[22:01] <colomon___> Well, my connection has been "spotty" because I've been away from wi-fi for most of the day.  :)

[22:01] <colomon___> Though the record will show that I managed to chat from my in-laws' driveway, and even a little bit down their road before I lost the signal.

[22:01] <mathw> heh

[22:02] <mathw> wireless is fun

[22:02] <colomon___> But my client logged me into #perl6 twice just now, then lost one of the connections, then when I tried to close the connection that was dead, closed the live connection instead.  :(

[22:02] <colomon___> And then ignored my requests to reconnect for about two minutes.

[22:03] <mathw> oh nice

[22:03] <mathw> Another incident of software not coping very well with a dodgy network environment

[22:03] <mathw> That's what it sounds like, anyway

[22:04] <mathw> I have to deal with far too much of that for work.

[22:04] <mathw> i always said I didn't want to do anything involving networks... so I write network software for a living. Not sure how that happened.

[22:04] <colomon___> but all quasi-mobile network environments are dodgy!  

[22:04] <mathw> Yes, but not all programmers know how to deal with it

[22:04] <mathw> Or even that it's worth considering

[22:05] <colomon___> takadonet: other than irc issues and general exhaustion, I'm doing fine.

[22:06] <colomon___> We went to my in-laws' for New Year's / our wedding anniversary, which meant that we had someone to watch the boy while we actually got to have skiing, dinner, and a movie out.  Good times.

[22:13] *** orafu left
[22:13] *** orafu joined
[22:14] *** Su-Shee left
[22:16] <mathw> colomon___: sounds good

[22:20] *** lumi left
[22:20] *** lumi joined
[23:04] *** iblechbot left
[23:05] *** simcop2387_ joined
[23:09] *** simcop2387 left
[23:11] *** lumi left
[23:11] *** lumi joined
[23:21] *** ejs left
[23:26] *** lumi left
[23:26] *** lumi joined
[23:28] *** nihiliad left
[23:28] *** payload joined
[23:31] *** nihiliad joined
[23:44] *** kborer joined
[23:48] *** orafu left
[23:48] *** kborer left
[23:48] *** orafu joined
[23:54] *** lumi left
[23:54] *** lumi joined
