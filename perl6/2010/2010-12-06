[00:04] *** jhuni joined
[00:18] *** phio left
[00:19] *** kst left
[00:20] *** kst joined
[00:30] *** jjore left
[00:32] *** jjore joined
[00:35] *** risou left
[00:40] *** QinGW joined
[00:42] *** flatwhatson joined
[00:49] *** Chillance left
[00:54] *** tylercurtis left
[00:59] *** lichtkind left
[01:02] <Alias__> rakudo: all().Bool

[01:02] <p6eval> rakudo :  ( no output )

[01:02] <Alias__> rakudo: say all().Bool

[01:02] <p6eval> rakudo : OUTPUT«Bool::True␤»

[01:03] <Alias__> rakudo: say none().Bool

[01:03] <p6eval> rakudo : OUTPUT«Bool::True␤»

[01:03] <Alias__> rakudo: say notall().Bool

[01:03] <p6eval> rakudo : OUTPUT«Could not find sub &notall␤  in main program body at line 22:/tmp/4ptmvtDjMs␤»

[01:04] <diakopter> rakudo: say ?none

[01:04] <p6eval> rakudo : OUTPUT«Bool::True␤»

[01:04] <diakopter> rakudo: say ?some

[01:04] <p6eval> rakudo : OUTPUT«Could not find sub &some␤  in main program body at line 22:/tmp/u3YbHiBgzy␤»

[01:05] <Alias__> rakudo: say any().Bool

[01:05] <p6eval> rakudo : OUTPUT«Bool::False␤»

[01:15] *** am0c joined
[01:26] *** alc joined
[01:34] *** gimix joined
[01:35] *** sftp left
[01:48] *** masonkramer left
[01:48] *** masonkramer joined
[01:50] *** Grrrr joined
[01:53] *** f00li5h left
[01:57] *** shi left
[02:02] *** flatwhatson left
[02:27] *** flatwhatson joined
[02:39] *** shi joined
[02:44] *** adu joined
[02:45] *** skangas left
[02:48] *** kst left
[02:49] *** kst joined
[02:54] *** LaVolta joined
[02:55] <LaVolta> hi #perl6...long time no see :)

[02:58] <sjohnson> hi

[02:59] <dukeleto> LaVolta: welcome back.

[02:59] <LaVolta> I am excited, just find out my Perl6ish way of calculating S = a + aa + aaa + aaaa ...

[02:59] <dalek> 6model: 55673ae | diakopter++ | / (3 files):

[02:59] <dalek> 6model: [dotnet] implement regex subrule compilation

[02:59] <dalek> 6model: [P6Objects] implement named subrule "before"

[02:59] <dalek> 6model: add a test.

[02:59] <dalek> 6model: review: https://github.com/jnthn/6model/commit/55673aeb67

[02:59] <LaVolta> [+] (-> $n, { $n, -> $a, { $a ~ $n } ... * } )(5)[^4]

[02:59] <LaVolta> :)

[03:00] <sjohnson> rakudo: my $s; for ^5 { $s ~= 'a' X $_ }; say $s

[03:00] <p6eval> rakudo : OUTPUT«aaaaa␤»

[03:00] <sjohnson> rakudo: my $s; for ^5 { $s .= 'a' X $_ }; say $s

[03:01] <p6eval> rakudo : OUTPUT«===SORRY!===␤Quoted method name requires parenthesized arguments at line 22, near " X $_ }; s"␤»

[03:01] <sjohnson> ahh, not good enough at perl6 yet

[03:01] * sjohnson sulks in the corner

[03:02] <LaVolta> lol...

[03:04] <sjohnson> rakudo:  my $a = "mammy";  $a ~= " muffin"; say $a

[03:04] <p6eval> rakudo : OUTPUT«mammy muffin␤»

[03:04] <sjohnson> rakudo: for (^5) { say $_ }

[03:04] <p6eval> rakudo : OUTPUT«0␤1␤2␤3␤4␤»

[03:05] <sjohnson> rakudo: say 'a' X 5

[03:05] <p6eval> rakudo : OUTPUT«a5␤»

[03:05] <sjohnson> ahh.. there's the problem!

[03:05] <sjohnson> X operator isn't the same as in p5

[03:05] <LaVolta> yeah...that's where the problem at...

[03:08] * sjohnson scratches his head

[03:09] <LaVolta> rakudo: [+](1, * ~ 1 ... *)[^5]

[03:09] <p6eval> rakudo :  ( no output )

[03:09] <LaVolta> rakudo: say [+](1, * ~ 1 ... *)[^5]

[03:09] <p6eval> rakudo : OUTPUT«12345␤»

[03:09] <LaVolta> cool

[03:11] <LaVolta> I

[03:11] <LaVolta> got a new one: [+](->$n,{$n,*~$n...*})(5)[^4]

[03:18] <colomon> rakudo: say (1, * ~ 1 ... *)[^5].perl

[03:18] <p6eval> rakudo : OUTPUT«(1, "11", "111", "1111", "11111")␤»

[03:18] <colomon> ah

[03:20] <colomon> rakudo: say (->$n,{$n,*~$n...*})(5)[^4].perl

[03:20] <p6eval> rakudo : OUTPUT«(5, "55", "555", "5555")␤»

[03:21] <colomon> rakudo: say (1..5).map({ 1 x $_ }).perl

[03:21] <p6eval> rakudo : OUTPUT«("1", "11", "111", "1111", "11111")␤»

[03:22] <adu> rakudo: say 5

[03:22] <p6eval> rakudo : OUTPUT«5␤»

[03:22] <adu> YEY

[03:25] *** alester joined
[03:28] *** shi left
[03:28] <LaVolta> colomon:  nice 'x' operator :)

[03:30] <LaVolta> mine's over-complicated when deal with string replication.

[03:31] <colomon> Of course, if you just want to get 12345, there's always...

[03:31] <dalek> grok: 5d76665 | hinrik++ | / (2 files):

[03:31] <dalek> grok: Depend on Perl6::Doc 0.47 to avoid test failures

[03:31] <dalek> grok: review: https://github.com/hinrik/grok/commit/5d766650f8

[03:31] <dalek> grok: c4ecdb9 | hinrik++ | Changes:

[03:31] <dalek> grok: v0.24

[03:31] <dalek> grok: 

[03:31] <dalek> grok:     - Depend on Perl6::Doc 0.47 to avoid test failures

[03:31] <dalek> grok: review: https://github.com/hinrik/grok/commit/c4ecdb9770

[03:31] <colomon> rakudo: say +[~] 1..5

[03:31] <p6eval> rakudo : OUTPUT«12345␤»

[03:31] <colomon> rakudo: say +[~] 1..6

[03:31] <p6eval> rakudo : OUTPUT«123456␤»

[03:32] *** dnewkirk left
[03:32] *** justatheory joined
[03:35] <LaVolta> thanks, colomon.

[03:50] <sjohnson> rakudo: say "a" x 5;

[03:51] <p6eval> rakudo : OUTPUT«aaaaa␤»

[03:51] <sjohnson> ah, simple mistake.  whoops

[03:54] <LaVolta> :), i didn't realized what typed is cross operato...

[03:54] <LaVolta> *r

[03:54] <LaVolta> (omg, serious typos all around)

[03:55] <LaVolta> I am sorry

[03:56] <LaVolta> I was trying to figure out a general way of calc the sum of n, nn, nnn, nnnn...(repeat m times)

[03:59] <dukeleto> LaVolta: such as 1 + 11 + 111 + ... ?

[03:59] <LaVolta> yea, dukeleto 

[03:59] <sjohnson> heh

[03:59] <sjohnson> i dont know any tricky cool ways to do it

[04:00] <dukeleto> rakudo: say +[+] 1,11,111 ... 11111

[04:00] <sjohnson> rakudo: my $total; my $n = 10; $total += (1 x $_) for ^$n; say $total

[04:00] <p6eval> rakudo : OUTPUT«Method 'count' not found for invocant of class 'Failure'␤  in <anon> at line 835:CORE.setting␤  in 'List::Bool' at line 1␤  in <anon> at line 853:CORE.setting␤  in <anon> at line 855:CORE.setting␤  in 'List::Bool' at line 1␤  in 'prefix:<?>' at line 468:CORE.setting␤  in 'reducewit…

[04:01] <p6eval> rakudo : OUTPUT«123456789␤»

[04:01] <sjohnson> rakudo: my $total; my $n = 10; $total += ("1" x $_) for ^$n; say $total

[04:01] <p6eval> rakudo : OUTPUT«123456789␤»

[04:01] <LaVolta> I still remember the day (a CS freshman), my teacher told the class to write a small C program to do it

[04:01] <sjohnson> rakudo: my $total; my $n = 10; $total += ("1" x $_).int for ^$n; say $total

[04:01] <p6eval> rakudo : OUTPUT«Method 'int' not found for invocant of class 'Str'␤  in <anon> at line 22:/tmp/Bc4WNbg8zY␤  in main program body at line 1␤»

[04:01] <sjohnson> ahh, i give up

[04:02] <Tene> rakudo: sub foo { [+] map { 1 x $_ } for 1..$^n }; say foo(5);

[04:02] <phenny> Tene: 05 Dec 10:09Z <masak> tell Tene after I removed ihrd's Routes, I rewrote it as URI::Dispatcher. I'd be happy to hear what you think of it.

[04:02] <p6eval> rakudo : OUTPUT«00000␤»

[04:02] <dukeleto> rakudo: say +[+] (1, 11, 111)

[04:02] <p6eval> rakudo : OUTPUT«123␤»

[04:02] <Tene> rakudo: sub foo { [+] map { 1 x $_ } 1..$^n }; say foo(5);

[04:02] <p6eval> rakudo : OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 22␤»

[04:02] <Tene> rakudo: sub foo { [+] map { 1 x $_ }, 1..$^n }; say foo(5);

[04:02] <p6eval> rakudo : OUTPUT«12345␤»

[04:02] <Tene> There we go.

[04:02] <Tene> rakudo: sub foo { [+] map { 1 x $_ }, 1..$^n }; say foo(50);

[04:02] <p6eval> rakudo : OUTPUT«1.23456790123457e+49␤»

[04:03] <dukeleto> Tene: nice.

[04:03] <sjohnson> what does the cute [+] thing do?

[04:03] *** whiteknight left
[04:03] <sjohnson> just tells it to keep adding the block statement?

[04:03] <Tene> sjohnson: [] is the reduce operator

[04:03] <Tene> it reduces a list with the operator inside the []s

[04:03] * sjohnson tents fingers.. interesting

[04:04] <Tene> it's the same as @list.reduce(&infix:<+>); oslt

[04:04] <Tene> I don't remember what named forms of reduce may or may not be in Perl 6 these days.

[04:04] <Tene> aka foldr/foldl, but it respects the associativity of the op

[04:05] <LaVolta> Tene:  neat.

[04:05] <dukeleto> sjohnson: [] is a meta-operator

[04:05] <dukeleto> sjohnson: you give an operator inside

[04:05] <sjohnson> witchcraft operator!!!

[04:05] <dukeleto> sjohnson: and it applies it to a list/array

[04:05] <sjohnson> ill have to try it out a bit later

[04:06] <dukeleto> rakudo: [+] 1 .. 10 

[04:06] <p6eval> rakudo :  ( no output )

[04:06] <dukeleto> rakudo: ~[+] 1 .. 10 

[04:06] <p6eval> rakudo :  ( no output )

[04:06] <LaVolta> say it :)

[04:06] <dukeleto> rakudo: say ~[+] 1 .. 10 

[04:06] <Tene> rakudo say [+] 1..10

[04:06] <p6eval> rakudo : OUTPUT«55␤»

[04:06] * dukeleto is rusty

[04:06] <Tene> rakudo: say [+] 1..10

[04:06] <p6eval> rakudo : OUTPUT«55␤»

[04:06] <dukeleto> sjohnson: that is the factorial function at 10

[04:06] * Tene omits colon

[04:06] <Tene> No, factorial is [*]

[04:07] <colomon> rakudo: sub postfix:<!>($n) { [*] 1..$n }; say 10!

[04:07] <p6eval> rakudo : OUTPUT«3628800␤»

[04:07] <sjohnson> rakudo: say 5!

[04:07] <p6eval> rakudo : OUTPUT«===SORRY!===␤Confused at line 22, near "say 5!"␤»

[04:07] <sjohnson> maybe in perl 7 :)

[04:07] <sjohnson> yeah, factorial is uses multiplication technology

[04:07] <Tene> sjohnson: Just package up a distro with that in the setting, and you're done.

[04:07] <sjohnson> i used to think it was addition too.  is there a term for addition only?

[04:08] <sjohnson> how about use Tene;

[04:08] <sjohnson> :)

[04:08] <sjohnson> easier to remember

[04:09] <Tene> sjohnson: I'd be glad to let you use a software version of myself to use as a Perl 6 advisor in exchange for being uploaded to make it.

[04:10] <sjohnson> i have to figure out how to upload you first

[04:10] <sjohnson> modern technology hasn't figured out brain interfaces with computers yet

[04:11] <dukeleto> Tene: blarg. That is sad. Of course. I did summation

[04:11] * dukeleto has had a long day

[04:12] <Tene> :)

[04:12] <LaVolta> all my tries focused on inlining the sub, using anonfunc, but ignored the truth that we all need simplification

[04:13] <LaVolta> lunch time, see you later

[04:22] <adu> sjohnson: yes http://en.wikipedia.org/wiki/Arithmetic_progression

[04:24] <adu> sjohnson: the additive factorial 1 + 2 + ... + n = n(n+1)/2 so it is much less interesting

[04:30] *** alc left
[04:33] *** kaare joined
[04:33] *** kaare is now known as Guest4757

[04:45] *** envi joined
[04:46] *** satyavvd joined
[05:00] *** am0c left
[05:03] *** alc joined
[05:07] *** orafu left
[05:07] *** orafu joined
[05:15] *** alester left
[05:17] *** Trashlord left
[05:21] *** zby__ joined
[05:21] *** zby left
[05:33] *** sftp joined
[05:35] *** cjk101010 joined
[05:53] *** adu left
[06:02] *** yves_ joined
[06:06] *** sftp left
[06:17] *** jedai left
[06:17] *** jedai joined
[06:19] *** kjeldahl joined
[06:31] *** PerlJam left
[06:31] *** PerlJam joined
[06:34] *** am0c joined
[07:00] *** wtw joined
[07:00] *** kst left
[07:01] *** kst joined
[07:01] *** Guest4757 is now known as kaare_

[07:01] *** justatheory left
[07:03] <moritz_> rakudo: say [+] 1..10

[07:03] <p6eval> rakudo : OUTPUT«55␤»

[07:04] <moritz_> rakudo: say [+] 'foo'

[07:04] <p6eval> rakudo : OUTPUT«0␤»

[07:13] *** glow left
[07:14] *** cjk101010 left
[07:44] <dalek> mu: a4c325a | (Tadeusz Sośnierz)++ | misc/perl6advent-2010/schedule:

[07:44] <dalek> mu: Signed in for day 8th

[07:44] <dalek> mu: review: https://github.com/perl6/mu/commit/a4c325a15a

[07:45] *** nymacro joined
[08:04] *** glow joined
[08:10] *** jfried joined
[08:15] *** xinming_ joined
[08:18] *** xinming left
[08:35] *** spetrea left
[08:36] *** am0c left
[08:47] *** timbunce joined
[08:48] *** wamba joined
[09:03] *** wallberg joined
[09:05] *** kst left
[09:06] *** kst joined
[09:12] *** kjeldahl_ joined
[09:19] *** skangas joined
[09:37] *** dakkar joined
[09:39] <moritz_> http://linuxfr.org/2010/12/04/27645.html # mentioned the advent calendar

[09:40] <moritz_> http://developers.solidot.org/developers/10/12/02/0240223.shtml Japanese (?) coverage

[09:41] *** tzhs joined
[09:57] *** jerome joined
[10:10] *** kst left
[10:10] *** QinGW left
[10:11] *** kst joined
[10:13] *** glow left
[10:24] *** LaVolta left
[10:31] *** daxim joined
[10:32] *** knewt2 left
[10:33] *** knewt2 joined
[10:35] *** glow joined
[11:05] *** donaldh joined
[11:15] *** wamba left
[11:34] *** skangas left
[11:38] *** f00li5h joined
[11:41] *** satyavvd left
[11:44] *** masak joined
[11:44] <masak> oh hai, #perl6!

[11:45] <moritz_> lolitsmasak!

[11:45] <moritz_> masak: (small reminder, you're scheduled for tomorrow's advent post)

[11:45] <masak> acknowledged. thanks.

[11:46] <masak> I'm planning on writing it tonight.

[11:46] <mathw> oh hai masak

[11:47] <mathw> oh hai evreewun els

[11:51] <Tene> masak: I think you were trying to get my attention recently?

[11:52] <masak> Tene: yes, I've made a quick Routes replacement in Web.pm -- just fishing for comments.

[11:53] <Tene> Ah.  I'll see what I can do.

[11:55] <masak> \o/

[12:05] *** timbunce left
[12:06] *** jhuni left
[12:09] *** gimix left
[12:13] *** dsp_ left
[12:14] *** dsp_ joined
[12:25] *** alc left
[12:28] *** skangas joined
[12:28] *** alc joined
[12:34] *** finanalyst joined
[12:36] *** shi joined
[12:41] *** kaare_ left
[12:45] *** f00li5h left
[12:50] <finanalyst> hello 6-people. I havent been around for a while. What is currently being used for module loading? proto or neutro?

[12:53] <moritz_> use; :-)

[12:53] <moritz_> neutro for installation

[12:53] *** donaldh left
[12:53] <moritz_> (oh, and I implemented some simple forms of 'requuire' :-)

[12:54] *** timbunce joined
[12:57] <finanalyst> moritz_: thanx. How is best to install neutro itself? 

[12:57] <moritz_> finanalyst: dunno; are there no instructions in the README?

[12:58] <colomon> There are instructions in the README

[12:59] *** f00li5h joined
[12:59] * colomon just realized the reason his walk felt cold this morning was that it was 4F colder than any previous walk this season.

[12:59] <finanalyst> no. i looked on github at readme, but no installation instructions, unless they are hidden somewhere. proto instructions much better

[13:00] <moritz_> finanalyst: sounds to me like it doesn't need installation

[13:00] <moritz_> wait

[13:00] <moritz_> Bootstraping:

[13:00] <moritz_> As neutro is not dependency-free, it comes with a set of libs which

[13:00] <moritz_> will help it install itself. To bootstrap neutro, use something like

[13:00] <moritz_> this:

[13:00] <moritz_> PERL6LIB=tmplib bin/neutro .

[13:00] <takadonet> morning all

[13:00] <phenny> takadonet: 04 Dec 15:32Z <smash> tell takadonet http://gil.di.uminho.pt/users/smash/rakudo-bench.html updated

[13:01] <takadonet> !!! my first message from phenny!

[13:23] <masak> The dark side of opern source conferences -- http://lwn.net/SubscriberLink/417952/bf6a55b67170ff0e/ -- might interest some people in the "how can we scale kindness" movement in here.

[13:24] *** MayDaniel joined
[13:24] *** MayDaniel left
[13:24] *** MayDaniel joined
[13:25] <moritz_> (was actually posted to #parrot some days ago)

[13:25] <masak> oh, good.

[13:26] <masak> I fear I used to be a #parrot regular, but I'm not any more. :/

[13:26] <masak> nowadays I log onto #parrot by need.

[13:26] * moritz_ searches in the logs for the relevant discussion

[13:28] <moritz_> http://irclog.perlgeek.de/parrot/2010-12-03#i_3053709

[13:28] *** icwiener joined
[13:29] <masak> thanks.

[13:29] <moritz_> actually not too much of a discussion

[13:30] <masak> but what there is is a good read.

[13:30] <masak> "know how to be nice". I like that.

[13:34] <tadzik> hello

[13:34] <masak> tadzik: \o

[13:35] <moritz_> masak: "nice by default" would also be a good policy

[13:35] <masak> yeah. also "assume good intentions".

[13:37] <masak> I knew a girl who was a master of empathy and engaging the good side of people. don't think she was too aware of that herself. just thinking of what she'd have done in a given situation usually pulls up a few good ideas for me. :)

[13:38] <tadzik> mathw++ # advent calendar

[13:38] <takadonet> http://www.reddit.com/r/programming/comments/eh0ik/perl_6_advent_calendar_day_6_the_x_and_z/

[13:39] <masak> takadonet++

[13:39] <mathw> Do I want to see what Reddit think of my post!

[13:39] * mathw upvotes most gratuitously

[13:39] <masak> nuttin', so far :)

[13:40] <takadonet> i just posted this 10 mins ago

[13:41] *** MayDaniel left
[13:41] *** Patterner left
[13:42] *** Axius joined
[13:42] *** Psyche^ joined
[13:42] *** Psyche^ is now known as Patterner

[13:42] *** tzhs left
[13:43] *** bluescreen joined
[13:44] *** bluescreen is now known as Guest78802

[13:45] *** Kodi joined
[13:46] <Kodi> So what exists for typesetting Pod at the moment?

[13:46] <Kodi> Or rather, rendering it.

[13:46] <masak> Kodi: http://search.cpan.org/~arandal/Pod-PseudoPod-0.16/lib/Pod/PseudoPod.pm

[13:47] <masak> that one has DocBook and HTML backends.

[13:47] <Kodi> Excellent.

[13:47] <moritz_> that's p5 pseudopod

[13:47] <moritz_> not p6 Po

[13:47] <moritz_> d

[13:48] <Kodi> Oops.

[13:48] <Kodi> I kept thinking, "why no mention of Perl 6?"

[13:48] *** masonkramer left
[13:48] <masak> oh, sorry. you were actually asking about Perl 6 Pod.

[13:49] *** masonkramer joined
[13:49] <Kodi> Right, otherwise I would have said "POD".

[13:49] <masak> right.

[13:49] <masak> guess your best shot is TheDamian's module on CPAN.

[13:49] <moritz_> it doesn't understand the most uptodate POD spec though

[13:50] <masak> indeed not.

[13:50] <masak> then again, nothing out there does.

[13:50] <masak> Kodi: http://search.cpan.org/~dconway/Perl6-Perldoc-v0.0.5/lib/Perl6/Perldoc.pm

[13:50] *** Axius left
[13:50] <masak> hm, this is probably more apt: http://search.cpan.org/~dconway/Perl6-Perldoc-v0.0.5/lib/Perl6/Perldoc/Parser.pm

[13:51] <Kodi> So how do you document your modules usually? Plain text, or use Perl 6 Pod and wait for an appropriate renderer?

[13:53] <flussence> rakudo: say [+] (1, * ~ 1 ... *)[^10]

[13:53] <p6eval> rakudo : OUTPUT«1234567900␤»

[13:54] <flussence> rakudo: say [+] (1, * ~ 1 ... *)[^50]

[13:54] <p6eval> rakudo : OUTPUT«1.23456790123457e+49␤»

[13:54] *** thundergnat joined
[13:54] <moritz_> Kodi: exactly

[13:54] <moritz_> or using p5 pod

[13:54] <masak> or the subset of p6 pod that Rakudo supports.

[13:54] <masak> which isn't much.

[13:54] <thundergnat> good * perl6

[13:55] <Kodi> Good DateTime.now, thundergnat.

[13:56] <thundergnat> I was idly looking through RT and came across http://rt.perl.org/rt3/Public/Bug/Display.html?id=65164 and thought "That looks like LHF!"

[13:56] *** phio joined
[13:57] <thundergnat> I wrote some infix routines that work correctly but the base ^^ operator seems to be borked.

[13:57] <thundergnat> rakudo: say 1 ^^ 1;

[13:57] <p6eval> rakudo : OUTPUT«␤»

[13:57] <thundergnat> should be Bool::False

[13:57] <thundergnat> rakudo: say 0 ^^ 0;

[13:57] <p6eval> rakudo : OUTPUT«0␤»

[13:57] <thundergnat> also should be Bool::False

[13:58] <moritz_> what is ^^ ?

[13:58] <thundergnat> Where is  ^^ implemented? I couldn't find it. 

[13:58] <moritz_> erm, what's it supposed to be?

[13:58] <thundergnat> exclusive or

[13:58] <moritz_> why isn't that ?^ then?

[13:58] <moritz_> we have ~ ? and + versions of all the logic operators

[13:59] <moritz_> ^^ feels wrong

[13:59] <thundergnat> it's in the spec

[13:59] <Kodi> moritz_: But we say && and ||, not ?& and ?|.

[13:59] <thundergnat> http://github.com/perl6/roast/blob/master/S03-operators/misc.t#L54-L68

[13:59] <moritz_> Kodi: && and ?& have different semantics

[13:59] <thundergnat> Maybe the spec needs to be changed.

[14:00] <moritz_> ie 1 ?& 3 returns True, 1 && 3 returns 3

[14:00] <Kodi> moritz_: ?& exists? That surprises me.

[14:00] <moritz_> rakudo: say 1 ?& 3

[14:00] <Kodi> I see.

[14:00] <p6eval> rakudo : OUTPUT«Bool::True␤»

[14:01] <moritz_> http://github.com/perl6/roast/blob/master/S03-operators/misc.t#L54-L68

[14:01] <moritz_> argl

[14:02] <moritz_> infix:<^^>, short-circuit exclusive-or

[14:02] <moritz_> $a ^^ $b ^^ $c ...

[14:02] <moritz_> Returns the true argument if there is one (and only one). Returns Bool::False if all arguments are false or if more than one argument is true. 

[14:02] <thundergnat> is ther an echo in here?  :-)

[14:02] <moritz_> sounds like it needs to be implemented with list infix associatvity

[14:02] <thundergnat> Right, Thats what I was doing

[14:03] <moritz_> thundergnat: just somebody incomepetent in the ways of mixing windows and linux copy&paste

[14:03] <thundergnat> heh

[14:03] <thundergnat> no need to explain incompetence to me, I'm an expert in it. :-)

[14:04] <moritz_> src/Perl6/Grammar.pm

[14:04] <moritz_> 1886:token infix:sym<^^>   { <sym>  <O('%tight_or, :pasttype<xor>')> }

[14:04] <moritz_> that's wrong

[14:05] <moritz_> removing the :pasttype<xor> and writing your own two-arg infix:<^^> should fix it

[14:05] <moritz_> niecza: sub infix:<ADD>($x, $y) { $x + $y }; say 3 ADD 4

[14:05] <p6eval> niecza f30c13c: OUTPUT«7␤»

[14:06] <moritz_> sorear++

[14:08] *** sftp joined
[14:13] <thundergnat> our multi sub infix:<^^>(Mu $a, Mu $b) { $a ?? $b ?? Bool::False !! $a !! $b ?? $b !! Bool::False }; say [^^](0,0);

[14:13] * masak , belatedly, submits rakudobug

[14:13] <thundergnat> rakudo: our multi sub infix:<^^>(Mu $a, Mu $b) { $a ?? $b ?? Bool::False !! $a !! $b ?? $b !! Bool::False }; say [^^](1,1);

[14:13] <p6eval> rakudo : OUTPUT«Bool::False␤»

[14:14] <thundergnat> rakudo: our multi sub infix:<^^>(Mu $a, Mu $b) { $a ?? $b ?? Bool::False !! $a !! $b ?? $b !! Bool::False }; say [^^](1,0);

[14:14] <p6eval> rakudo : OUTPUT«1␤»

[14:14] <thundergnat> rakudo: our multi sub infix:<^^>(Mu $a, Mu $b) { $a ?? $b ?? Bool::False !! $a !! $b ?? $b !! Bool::False }; say [^^](1,0,0,5);

[14:14] *** am0c joined
[14:14] <p6eval> rakudo : OUTPUT«Bool::False␤»

[14:14] <masak> ah well, let's integrate it into #65164

[14:14] <thundergnat> rakudo: our multi sub infix:<^^>(Mu $a, Mu $b) { $a ?? $b ?? Bool::False !! $a !! $b ?? $b !! Bool::False }; say [^^](0,6,0,0,0);

[14:14] <p6eval> rakudo : OUTPUT«6␤»

[14:15] <thundergnat> I don't see why that wouldn't work

[14:15] <moritz_> you'd have to align to code to make it readable :-)

[14:15] <thundergnat> mask: That bug was way before the Bool::False Bool::True return values were implemented

[14:16] <thundergnat> moritz: yeah, this was just to get it into perl6 eval

[14:17] <masak> moritz_: wait, two-arg op?

[14:17] <masak> doesn't the infix:<^^> op have listish behaviour?

[14:19] <masak> rakudo: our multi sub infix:<^^>(Mu $a, Mu $b) { $a ?? $b ?? Bool::False !! $a !! $b ?? $b !! Bool::False }; say [^^](1,2,0,3,0);

[14:19] <p6eval> rakudo : OUTPUT«3␤»

[14:19] <masak> that's wrong.

[14:19] <masak> according to moritz_' quote above.

[14:20] <thundergnat> masak: good point

[14:20] <masak> infix:<^^> is *not* two-arg. that's what sets it apart from ?^

[14:20] <masak> (besides the boolifying thing)

[14:21] <masak> and that might be a reason it's not LHF. then again, it might still be.

[14:22] <thundergnat> I'll have to ponder it a bit, thanks for noticing and pointing that out.

[14:24] <masak> 1886:token infix:sym<^^>   { <sym>  <O('%tight_or, :pasttype<xor>')> }

[14:25] <masak> actually, I don't immediately see why this would be wrong.

[14:25] <masak> infix:<^^> is the high-precedence version of infix:<xor>.

[14:25] <moritz_> because PAST xor doesn't ever return Bool::False, for example

[14:26] <masak> ah, it's PAST xor.

[14:26] <masak> that explains it.

[14:38] *** wallberg left
[14:42] *** silug joined
[14:45] <thundergnat> rakudo: our multi sub infix:<^^>(Mu $a, Mu *@b) { my $c ||= $a; for (@b) -> $b { return Bool::False if $c && $b; $c ||= $b; }; return $c || Bool::False; } say [^^](0,0,0,5);

[14:45] <p6eval> rakudo : OUTPUT«===SORRY!===␤Confused at line 22, near "our multi "␤»

[14:45] <thundergnat> rakudo: our multi sub infix:<^^>(Mu $a, Mu *@b) { my $c ||= $a; for (@b) -> $b { return Bool::False if $c && $b; $c ||= $b; }; return $c || Bool::False; }; say [^^](0,0,0,5);

[14:45] <p6eval> rakudo : OUTPUT«5␤»

[14:45] <thundergnat> rakudo: our multi sub infix:<^^>(Mu $a, Mu *@b) { my $c ||= $a; for (@b) -> $b { return Bool::False if $c && $b; $c ||= $b; }; return $c || Bool::False; }; say [^^](0,0,1,5);

[14:45] <p6eval> rakudo : OUTPUT«Bool::False␤»

[14:45] <thundergnat> rakudo: our multi sub infix:<^^>(Mu $a, Mu *@b) { my $c ||= $a; for (@b) -> $b { return Bool::False if $c && $b; $c ||= $b; }; return $c || Bool::False; }; say [^^](0,0,0,0);

[14:45] <p6eval> rakudo : OUTPUT«Bool::False␤»

[14:46] <thundergnat> rakudo: our multi sub infix:<^^>(Mu $a, Mu *@b) { my $c ||= $a; for (@b) -> $b { return Bool::False if $c && $b; $c ||= $b; }; return $c || Bool::False; }; say [^^](1,2,0,3,0);

[14:46] <p6eval> rakudo : OUTPUT«3␤»

[14:46] <thundergnat> Arrgh!

[14:47] <moritz_> my $c ||= $a

[14:47] <takadonet> thundergnat: working on Algorithm::Diff?

[14:47] <moritz_> uhm

[14:48] <thundergnat> takodanet: not right now, pushed changes over the weekend

[14:50] *** mkramer joined
[14:52] <takadonet> thundergnat++

[14:52] <takadonet> all tests passed on my machine

[14:53] *** cls_bsd left
[15:01] *** phio left
[15:03] *** florz left
[15:03] *** florz joined
[15:12] *** Trashlord joined
[15:14] <masak> according to uasi, "cause understood, do not know how to fix": http://twitter.com/uasi/status/11799291387449344

[15:15] <moritz_> meta operators aren't curried yet?

[15:15] <masak> guess not.

[15:16] <moritz_> rakudo: say * !== 4

[15:16] <p6eval> rakudo : OUTPUT«Can't take numeric value for object of type Whatever␤  in 'Any::Numeric' at line 1418:CORE.setting␤  in 'infix:<==>' at line 7294:CORE.setting␤  in 'negate' at line 122:CORE.setting␤  in main program body at line 1␤»

[15:19] <colomon> rakudo: say * R- 3

[15:19] <p6eval> rakudo : OUTPUT«Can't take numeric value for object of type Whatever␤  in 'Any::Numeric' at line 1418:CORE.setting␤  in 'infix:<->' at line 7294:CORE.setting␤  in 'reverseargs' at line 130:CORE.setting␤  in main program body at line 1␤»

[15:19] <colomon> rakudo: my $a = 4 R- 3; say (* R- 3).WHAT

[15:19] <p6eval> rakudo : OUTPUT«Can't take numeric value for object of type Whatever␤  in 'Any::Numeric' at line 1418:CORE.setting␤  in 'infix:<->' at line 7294:CORE.setting␤  in 'reverseargs' at line 130:CORE.setting␤  in main program body at line 1␤»

[15:20] <colomon> rakudo: my $a = 4 R- 3; say $a; say (* R- 3).WHAT

[15:20] <p6eval> rakudo : OUTPUT«-1␤Can't take numeric value for object of type Whatever␤  in 'Any::Numeric' at line 1418:CORE.setting␤  in 'infix:<->' at line 7294:CORE.setting␤  in 'reverseargs' at line 130:CORE.setting␤  in main program body at line 1␤»

[15:24] <colomon> huh.  wonder where INFIX / PREFIX come from at line 2306 of Actions.pm?

[15:25] <colomon> That is to say, can I just say INFIX_PREFIX_META_OPERATOR there too?

[15:26] * colomon says JFDI and tries

[15:26] *** kst left
[15:26] *** MayDaniel joined
[15:26] <thundergnat> Hmmm. Ok, I'm officially confused.

[15:26] *** kst joined
[15:27] <thundergnat> rakudo: our sub infix:<q>($a, Mu *@b) {my $c = $a; for (@b) -> $b{say  "a $a,  b $b,  c $c";return Bool::False if $b && $a; };}; say [q](1,2,0);

[15:27] <p6eval> rakudo : OUTPUT«a 1,  b 2,  c 1␤a Bool::False,  b 0,  c Bool::False␤␤»

[15:27] <thundergnat> Why the heck is $a getting changed?

[15:28] <colomon> it's not

[15:28] <moritz_> infix:q is called multiple times

[15:29] <colomon> It's doing 1 q 2, then Bool::False q 0

[15:29] <thundergnat> Ah, new $a each time.

[15:29] <moritz_> thundergnat: your chances are better if you define a sub prefix:<[^^]>(*@a)  directly

[15:30] <thundergnat> moritz_  yeah I'm starting to realize that.

[15:30] <colomon> Adding INFIX_PREFIX_META_OPERATOR to line 2306 of Actions.pm does not seem to help.

[15:30] <colomon> where is jnthn++ when you need him?

[15:31] <masak> at $dayjob, most likely.

[15:31] <thundergnat> This fruit is not so LH as it looked initially, :-(

[15:32] <mathw> my advent post is now 10 up 3 down on reddit :)

[15:32] <takadonet> mathw: it will get more votes soon

[15:33] <moritz_> masak: http://research.swtch.com/2010/12/yacc-is-not-dead.html

[15:33] <masak> :)

[15:33] <moritz_> (have only skimmed it so far)

[15:34] <mathw> takadonet: not complaining! I was quite pleased actually

[15:34] <takadonet> mathw: i know

[15:35] <ch3ck> godkväll masak \o

[15:35] <masak> moritz_: oh, it's Russ Cox, the "ur doin it wrong!" guy.

[15:35] <masak> ch3ck: goder afton, min herre.

[15:36] <ruoso> rakudo site down?

[15:36] <masak> moritz_: seems he spends at least half of the post telling people they're doing it wrong.

[15:36] <masak> ruoso: yup. http://downforeveryoneorjustme.com/http://rakudo.org/

[15:36] <masak> everyone email alester! :)

[15:38] *** wtw left
[15:39] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_tablets

[15:45] <masak> rakudo.org back up. alester++

[15:48] *** plobsing left
[15:53] *** Guest78802 left
[15:54] *** risou joined
[15:54] *** nymacro left
[15:55] *** pmurias joined
[15:56] <pmurias> diakopter: hi

[16:01] *** PerlJam left
[16:02] *** PerlJam joined
[16:03] *** Kodi left
[16:05] <thundergnat> Ok I think I've got it now https://gist.github.com/730480  Can anyone suggest any tests I should add that might fail?

[16:05] <moritz_> thundergnat: please don't use is() for comparing boolean values - it does string comparison

[16:06] <moritz_> use ok() for things where you expect True, and nok() for tests where you expect False

[16:06] <thundergnat> I'll do that

[16:06] <moritz_> and you can use Any instead of $undef

[16:07] * PerlJam wishes there were an Undef sometimes.

[16:07] <PerlJam> (it does read better)

[16:09] *** kst left
[16:10] *** Guest78802 joined
[16:17] <masak> PerlJam: I started on a yet-unreleased project lately, and I used Str for the first time in the "undefined value of type Str" sense. it felt... weird. but I don't know yet if it was because I'm unused to it, or whether it's a bad language feature.

[16:17] <moritz_> masak: speaking of which... how many days until your Big Announcement?

[16:17] <masak> four.

[16:18] <masak> and no, that unreleased project is not part of the Big Announcement. :)

[16:18] <moritz_> but it seems to leave you room for even more projects :-)

[16:19] <masak> heh. why was I even worried that letting you all guess freely would put you on the scent? :P

[16:19] * ruoso trying something and failing...

[16:19] <ruoso> http://paste.scsys.co.uk/58791

[16:20] *** kst joined
[16:20] <ruoso> I only get undef as .ast

[16:21] <moritz_> ruoso: start with something simple and working, and gradually add more features as you go along, testing each step

[16:21] <masak> more to the point, use TDD with grammars.

[16:21] <masak> then you spot regressions when they happen.

[16:21] <moritz_> oh, and I'd first test if make() works from closures within regexes

[16:22] <masak> ruoso: your script either takes a very long time here, or it's in an infinite loop of some kind.

[16:22] <masak> ah, now it output 'Any()'.

[16:22] <moritz_> ISTR that there was a problem with them; action methods in a separate class work well though

[16:23] <moritz_> rakudo: 'a' ~~ / a { make 42 } / and say $/.ast

[16:23] <p6eval> rakudo : OUTPUT«Any()␤»

[16:23] <masak> ruoso: I would recommend not using '|' at this point in Rakudo. it's not properly implemented but instead works like '||', so when Rakudo *does* get it, your code might break.

[16:23] <moritz_> which would explain the Any

[16:23] <masak> moritz_++

[16:24] * PerlJam wonders what it would take to get rakudo to understand | properly

[16:25] <moritz_> PerlJam: just an LTM implementation in nqp-rx

[16:25] <PerlJam> "just" 

[16:25] <moritz_> right :-)

[16:25] <moritz_> sorear built a working LTM engine; it "just" needs to be ported

[16:26] <moritz_> which reminds me, pmichaud++ announced that he was going to be very productive in December, perl 6 wise

[16:26] * moritz_ hopes that's actually going to happen

[16:26] <masak> when did he announce that?

[16:26] <moritz_> during a #phasers meeting

[16:27] *** frew_ joined
[16:27] *** frew_ left
[16:28] <moritz_> http://irclog.perlgeek.de/phasers/2010-11-23#i_3024006

[16:29] *** REPLeffect left
[16:30] <masak> oh, that's not long ago at all. yes, I'm hpoing for that too, then.

[16:31] *** wooden joined
[16:32] <masak> don't know what I'm looking forward to more: pmichaud being very productive, or pmichaud being around more again.

[16:32] <takadonet> moritz_: how's are page hits for the advent calendar?

[16:32] <takadonet> masak: both

[16:32] <masak> takadonet: have you been using junctions lately? :P

[16:34] *** timbunce left
[16:35] <takadonet> masak: ..... no

[16:35] <takadonet> :)

[16:36] <masak> just wondering how you could have both of two alternatives being more looked forward to. :)

[16:36] <takadonet> heh

[16:37] *** _kaare joined
[16:38] <PerlJam> masak: both are more than the unstated 3rd alternative.

[16:38] <moritz_> takadonet: stats are still impressive, 1.5k yesterday, 1.2k today

[16:38] *** pmurias left
[16:39] <masak> PerlJam: "being dipped in cold water, repeatedly, while forced to sing 'Happy Birthday to You'"?

[16:39] <masak> in that case, yes, both.

[16:40] <ruoso> masak: moritz_: thanks... it works now... the problem was indeed "make" in regex closures...

[16:40] <ruoso> is that a known bug?

[16:40] <masak> think so.

[16:40] <moritz_> known to me, at least :-)

[16:40] <masak> at least I'm not at all surprised by it.

[16:41] *** timbunce joined
[16:42] *** plobsing joined
[16:42] <thundergnat> Ok, I changed the Boolean comparison to use ok/nok, added some more tests and tidied it up a bit. Any suggestions for more tests? https://gist.github.com/730480

[16:43] <PerlJam> The "long tail" for last years advent calendar posts is interesting.

[16:44] <PerlJam> or ... what happened from Apr to Jul?

[16:44] <masak> Rakudo Star didn't get released?

[16:45] <PerlJam> so therefore people were tweeting about the advent calendar a lot causing other people to visit it?  And then when R* /was/ released, they slacked off of the advent calendar because there was something new to talk about ?

[16:46] * masak has no idea

[16:46] <PerlJam> masak: look at http://perl6advent.wordpress.com/wp-admin/index.php?page=stats&view=post&post=376

[16:46] <moritz_> I think the advent calendar was a pretty high google hit for 'rakudo star'

[16:46] <moritz_> and when it got released, other sites ranked higher for that query

[16:46] <PerlJam> perhaps

[16:47] <masak> PerlJam: that's a weird tail indeed.

[16:48] *** justatheory joined
[16:48] *** REPLeffect joined
[16:48] <PerlJam> in any case ... hooray for syndication!  :)

[16:49] <masak> PerlJam: it's odd, the numbers in the table don't seem to agree with the graph.

[16:49] * takadonet cannot see that stats page :(

[16:49] <masak> PerlJam: could it be a bug in the graph drawing.

[16:49] <masak> takadonet: no, you have to be a calendar author.

[16:49] <masak> takadonet: (hint, hint)

[16:49] <moritz_> takadonet: write a post for the advent calendar, then we'll make you an author :-)

[16:49] <takadonet> masak: not a chance

[16:50] <masak> takadonet: why not? just curious.

[16:50] <takadonet> masak: I'm a slow writer and got way too much work right now 

[16:50] <masak> I can understand those reasons. especially the latter one.

[16:51] <masak> takadonet: though it might come as a surprise that most of the active people in here don't usually complain about having too *little* to do in their non-p6 life. :)

[16:52] <takadonet> masak: I know 

[17:05] *** wamba joined
[17:05] <takadonet> mathw: we got a positive comment :)

[17:06] *** cdarroch joined
[17:06] *** cdarroch left
[17:06] *** cdarroch joined
[17:07] <masak> "These are kick-ass." \o/

[17:08] <mathw> \o/

[17:09] <daxim> which library is the best backport to Perl5 of an foreach-interator that also gives you the index so you don't have to count manually?

[17:11] * masak is not aware of any

[17:12] <masak> rakudo: my @a = <oh lol hai>; for @a.kv -> $index, $value { say "at index $index: $value" }

[17:12] <p6eval> rakudo : OUTPUT«at index 0: oh␤at index 1: lol␤at index 2: hai␤»

[17:12] <takadonet> ....

[17:12] <takadonet> i love perl6

[17:12] <masak> :)

[17:12] <takadonet> no more reason for C style loops!

[17:13] <masak> takadonet: back in 2008 or something, I proposed a special form of language construct for looping over both indices and values. I got (a variation of) the above as a reply.

[17:13] <plobsing> while (my ($k, $v) = each @array) { say "$k -> $v" } # perl >= 5.12

[17:14] <masak> plobsing: I thought we agreed not to use &each, ever. why dump more functionality into it? :(

[17:15] <plobsing> I'm just saying you can do it with perl5. it's just not quite as pretty. also, I thought while-each was idiomatic.

[17:16] <masak> certainly not an idiom that I've adopted.

[17:16] <masak> I make wide circles around &each to the point that I often forget that it exists.

[17:16] *** betterworld left
[17:16] *** betterworld joined
[17:16] <masak> as a result, my code often works.

[17:18] *** shortcircuit joined
[17:18] <plobsing> how do you simultaneously iterate over keys and values in perl 5 then?

[17:20] <daxim> use Moose::Autobox; [qw(oh lol hai)]->each(sub {say "at index $_[0]: $_[1]"});

[17:20] <daxim> that's the least ugly I can make it with one module

[17:20] <daxim> I initiated some discussion to get rid of the sub keyword in this circumstance in perl5i

[17:21] <masak> plobsing: in hashes? I iterate over the keys, and then pull out the value inside the loop.

[17:21] <daxim> could tie in with named parameters so our underscore friends can go away, too

[17:23] <masak> daxim: I haven't looked much into perl5i, and I know that it's not the goal to turn it into Perl 6, but so far it seems to me to mostly be corroborating the "you can't get there from here" theory about Perl 5 and Perl 6. :)

[17:23] <masak> i.e. if you start with Perl 5 and then tweak it, you're not going to get Perl 6, just more (and quite possibly uglier) Perl 5.

[17:24] <daxim> I challenge that theory

[17:24] <daxim> I retract that statement

[17:24] <masak> :)

[17:25] <masak> daxim: actually, the original quote is from TimToady: "reimplementing insanity is insane" (talking about Perl 5)

[17:27] * justatheory challenges daxim right back

[17:29] *** kjeldahl left
[17:31] *** molaf joined
[17:33] <masak> swimming &

[17:34] *** masak left
[17:38] *** cls_bsd joined
[17:47] *** impious joined
[17:53] *** envi left
[17:59] *** kjeldahl joined
[18:19] *** MayDaniel left
[18:36] *** dakkar left
[18:36] *** glow left
[18:41] *** finanalyst left
[18:45] *** stkowski joined
[18:49] *** shi left
[18:52] *** tri joined
[18:53] *** impious left
[18:58] *** molaf left
[19:06] *** fhelmberger left
[19:11] *** risou_ joined
[19:13] *** risou left
[19:34] *** lichtkind joined
[19:38] *** _kaare left
[19:38] *** MayDaniel joined
[19:42] *** thundergnat left
[19:43] *** jferrero joined
[19:45] *** MayDaniel left
[19:45] *** daxim left
[19:53] *** _kaare joined
[19:56] <sorear> good * #perl6

[19:56] <takadonet> sorear: yo

[19:59] <colomon> \o

[20:00] <lichtkind> hai

[20:01] <lichtkind> what is ment by quote protection?

[20:01] <moritz_> context?

[20:01] <lichtkind> << >>

[20:02] <lichtkind> is declared as qw with qiote protection

[20:02] <lichtkind> quote

[20:02] <moritz_> ah

[20:03] <moritz_> <<a "b c" d>> returns three items

[20:03] <moritz_> whereaas <a "b c" d> is 4 items

[20:03] *** y3llow_ joined
[20:04] <PerlJam> seems like something the specs could use a little more verbiage on.

[20:04] *** pothos_ joined
[20:05] <lichtkind> moritz_: thank you 

[20:06] *** y3llow left
[20:06] *** y3llow_ is now known as y3llow

[20:06] *** pothos left
[20:06] *** pothos_ is now known as pothos

[20:07] *** masak joined
[20:11] <jnthn> evening, #perl6

[20:11] <masak> jnthn! \o/

[20:12] <jnthn> masak! \o/

[20:12] *** risou joined
[20:13] <colomon> jnthn: \o/

[20:13] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_io_tablet

[20:13] <dalek> tpfwiki: (Herbert Breunung)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_basics_tablet

[20:13] *** risou_ left
[20:15] *** molaf joined
[20:22] <masak> just saw this: http://twitter.com/muralichari/status/11852945066827777

[20:22] <masak> couldn't keep myself from replying this: http://twitter.com/carlmasak/status/11878067303620608

[20:22] <masak> :)

[20:23] <moritz_> :-)

[20:24] <masak> wonder what an outisder'll make of Yapsi.

[20:25] <moritz_> :-)

[20:27] *** masak left
[20:33] *** ggoebel left
[20:33] *** shi joined
[20:34] *** drbean left
[20:36] *** drbean joined
[20:36] *** MayDaniel joined
[20:58] *** mkramer1 joined
[20:59] *** mkramer left
[21:02] *** MayDaniel left
[21:07] *** mkramer joined
[21:11] *** mkramer1 left
[21:11] *** kjeldahl_ left
[21:19] *** icwiener_ joined
[21:20] *** icwiener left
[21:32] *** ggoebel joined
[21:36] *** th0dt joined
[21:39] *** MayDaniel joined
[21:46] *** kjeldahl left
[21:46] * [Coke] wonders if he counts as an outsider.

[21:49] *** tri left
[21:52] <sorear> [Coke]: depends.  What do you think of yapsi?

[21:53] <[Coke]> not much. *rim shot*

[21:53] <[Coke]> I read the announcements when they come out. they seem to be more humorous than anything else. 

[21:55] <PerlJam> Hmm.  More humorous than informative?  Perhaps masak should dial the humor down a bit then.

[21:55] *** th0dt left
[21:55] *** Guest78802 left
[21:56] * moritz_ enjoys the humor

[21:57] <sjohnson> seemed fine to me

[21:57] *** _kaare left
[21:58] *** ggoebel left
[21:58] *** zby__ left
[21:59] *** dreamcode joined
[21:59] <jnthn> Yapsi is a project to produce a funny email one a month, no? ;)

[21:59] <PerlJam> "Those Perl 6 guys sure are a funny bunch!"

[22:01] *** zby joined
[22:01] *** donaldh joined
[22:04] <[Coke]> jnthn: exactly my thoughts. ;)

[22:09] *** zby left
[22:09] *** MayDaniel left
[22:11] *** zby_ joined
[22:13] *** plobsing left
[22:15] *** timbunce left
[22:19] *** spq1 left
[22:20] *** dreamcode left
[22:27] *** ch3ck3r joined
[22:27] <diakopter> was there #phasers ?

[22:31] *** ch3ck left
[22:41] *** ggoebel joined
[22:41] <colomon> isn't #phasers tomorrow?

[22:42] <jnthn> aye

[22:43] *** wamba left
[22:43] *** ggoebel left
[22:49] *** icwiener_ left
[22:50] *** masak joined
[22:50] <masak> ahoy!

[22:51] <jnthn> ohay

[22:57] <masak> I've written an advent post for tomorrow.

[22:57] <jnthn> masak++

[22:57] <masak> with a bit of luck, I'll even be able to put it up as a draft on wordpress.

[22:57] <masak> but I... have... a bit of a lag right... now...

[22:57] *** plobsing joined
[22:58] <jnthn> oh....i.......c.

[22:59] <sjohnson> heh

[22:59] <masak> whoa! uasi++ seems to have fixed RT #80256: http://twitter.com/uasi/status/11907116134563840

[23:00] <masak> anyone want to spectest that patch?

[23:00] <masak> (I could do it later, but if someone can do it now, even better)

[23:01] <masak> also, does it look like a good solution? it looks OK to me, but I'm not too familiar with Actions.pm

[23:04] <jnthn> masak: I fear it may end up auto-currying &infix:<+>(*, 42) 

[23:04] <masak> jnthn: hm. shouldn't it?

[23:05] <jnthn> I think it'd be a change from current behavior.

[23:08] <sorear> hello masak!

[23:09] <masak> hi sorear!

[23:09] * sorear wonders what an outsider will think of Niecza.

[23:15] *** silug left
[23:18] <masak> ok, draft is up. please have a look and see what you think. :)

[23:22] *** jhuni joined
[23:22] <masak> moritz_++ did the first post that got >1k visitors on a given day. mathw++'s post overtook it, though.

[23:23] *** masak left
[23:24] *** masak joined
[23:24] <masak> [Coke]: your view on Yapsi worries me a bit. you know there's actual running code in the Yapsi project, right?

[23:25] <sorear> masak: so I hear you has a Perl 6 job.

[23:28] <masak> sorear: no, I didn't say that.

[23:28] <masak> sorear: I said Perl 6 got me a job.

[23:28] <jnthn> Word order is so overrated.

[23:29] <masak> sorear: come January, I'll be working for the same employer as jnthn.

[23:32] <masak> sorear: ...and because I've only been doing Perl 6 in the presence of jnthn, that must be what got me hired. :) srsly.

[23:33] * jnthn would have known about masak++ if it wasn't for Perl 6. :)

[23:34] *** sftp left
[23:34] <masak> missing "n't"?

[23:34] <jnthn> er, yes :)

[23:34] <jnthn> .oO( Actually, I stalk everyone... )

[23:34] <masak> the original reading was interesting too, mind :)

[23:38] <colomon> Apparently my post is the one nobody wants to read.

[23:38] <masak> just to be clear: for those who want to read the "Day 7" draft, it's up on http://perl6advent.wordpress.com/wp-admin/edit.php

[23:38] <masak> (perl6advent.wordpress account required)

[23:39] *** whiteknight joined
[23:47] *** bluescreen joined
[23:47] *** bluescreen is now known as Guest32433

[23:59] *** demolithion left
