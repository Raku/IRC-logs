[00:10] *** madalu joined
[00:17] *** dorlamm left
[00:28] *** orafu left
[00:28] *** orafu joined
[00:41] *** madalu left
[00:45] *** madalu joined
[00:50] *** mjk joined
[00:51] *** dju_ joined
[00:51] *** mjk left
[00:52] *** dju left
[00:52] *** dju__ joined
[00:56] *** dju_ left
[00:56] *** madalu left
[00:56] *** Rotwang joined
[01:08] *** f00li5h joined
[01:14] *** M_o_C left
[01:23] *** ymasory left
[01:23] *** ymasory joined
[01:33] *** ymasory left
[01:33] *** ymasory joined
[01:34] <sorear> good * #perl6

[01:34] *** ymasory left
[01:35] *** ymasory joined
[01:35] <sorear> phenny: tell pmurias STD_P5 frontend.

[01:35] <phenny> sorear: I'll pass that on when pmurias is around.

[01:35] *** ymasory left
[01:35] *** ymasory joined
[01:35] *** nymacro joined
[01:36] <sorear> niecza: grammar Foo { token identifier { \w+ } }; say "  abc   " ~~ / :lang(Foo) <identifier> /

[01:36] *** donri left
[01:36] <p6eval> niecza v3-82-g1dc43eb: OUTPUT«abc␤»

[01:37] <sorear> phenny: tell masak If you want rules to be useful for languages other than Perl 6, redefine token ws to match "ignorable whitespace"

[01:37] <phenny> sorear: I'll pass that on when masak is around.

[01:37] *** ymasory left
[01:38] *** ymasory joined
[01:38] *** ponbiki joined
[01:46] *** Rotwang left
[02:06] *** whiteknight left
[02:23] *** noganex left
[02:23] *** kst left
[02:23] *** kst joined
[02:30] *** ymasory left
[02:35] *** pothos_ joined
[02:35] *** flussence left
[02:35] *** flussence joined
[02:36] *** pothos left
[02:36] *** pothos_ is now known as pothos

[02:40] *** cbk_ joined
[02:42] *** starcoder left
[02:42] *** starcoder joined
[02:43] *** Chillance left
[02:44] *** mberends joined
[02:44] *** ymasory joined
[02:45] <mberends> lue: ping

[02:49] <sorear> hello mberends

[02:49] <mberends> phenny: tell lue I think it may help your understanding of the  to-compile-or-not-to-compile question to research the difference between just-in-time compiling (JIT) and ahead-of-time compiling (AOT). Mono (used is Niecza) uses both options.

[02:49] <phenny> mberends: I'll pass that on when lue is around.

[02:50] <mberends> hello sorear

[02:51] <sorear> it's not a dichotomy; Mono uses both options *at the same time*

[02:51] <mberends> phenny, tell lue s/is Niecza/in Niecza/

[02:51] <phenny> mberends: I'll pass that on when lue is around.

[02:51] *** ymasory_ joined
[02:51] <mberends> sorear: :-)

[02:51] <cbk_> Anyone know the current status of threads in Perl6? 

[02:52] <sorear> niecza: use Threads; ::Threads::Thread.new({ say 2 while 1 }); say 3 while 1;

[02:52] <p6eval> niecza v3-82-g1dc43eb:

[02:52] <p6eval> ..OUTPUT«(timeout)␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2␤2􏿽xE2

[02:53] <sorear> niecza: use Threads; sub out($x) { my $i; $i++ until $i == 1000000; say $x }; ::Threads::Thread.new(out 2 while 1 }); out 3 while 1;

[02:53] <p6eval> niecza v3-82-g1dc43eb: OUTPUT«===SORRY!===␤␤Any()Unable to parse argument list at /tmp/UYRqF57WnC line 1:␤------> 000000; say $x }; ::Threads::Thread.new(⏏out 2 while 1 }); out 3 while 1;␤Couldn't find final ')'; gave up at /tmp/UYRqF57WnC line 1:␤------> ;

[02:53] <p6eval> ..say $x }; ::…

[02:54] <sorear> niecza: use Threads; sub out($x) { my $i; $i++ until $i == 1000000; say $x }; ::Threads::Thread.new(out(2) while 1 }); out(3) while 1;

[02:54] <p6eval> niecza v3-82-g1dc43eb: OUTPUT«===SORRY!===␤␤Any()Unable to parse argument list at /tmp/wi2RrcdwwA line 1:␤------> 000000; say $x }; ::Threads::Thread.new(⏏out(2) while 1 }); out(3) while 1;␤Couldn't find final ')'; gave up at /tmp/wi2RrcdwwA line 1:␤------>

[02:54] <p6eval> .. say $x }; :…

[02:54] *** ccc_ joined
[02:54] <sorear> niecza: use Threads; sub out($x) { my $i; $i++ until $i == 1000000; say $x }; ::Threads::Thread.new({ out(2) while 1 }); out(3) while 1;

[02:54] <p6eval> niecza v3-82-g1dc43eb: OUTPUT«␤Unhandled Exception: Unable to resolve method Numeric in class Any␤  at  line 0 (ExitRunloop @ 0)␤  at /tmp/psrTxW2FU3 line 0 (MAIN out @ 0)␤  at /tmp/psrTxW2FU3 line 1 (MAIN C2_ANON @ 3)␤  at  line 0 (ExitRunloop @ 0)␤»

[02:54] <sorear> niecza: use Threads; sub out($x) { my $i = 0; $i++ until $i == 1000000; say $x }; ::Threads::Thread.new({ out(2) while 1 }); out(3) while 1;

[02:54] <p6eval> niecza v3-82-g1dc43eb: OUTPUT«(timeout)␤3␤2␤3␤2␤3␤2␤3␤»

[02:54] <sorear> \o/

[02:54] <mberends> \o/

[02:55] <mberends> cbk_: the Perl 6 threads spec has not yet been written, so Perl 6 threading implementations are all highly experimental.

[02:56] *** ccc_ left
[02:56] *** cotto joined
[02:57] <cbk_> mberends, yes I understand that, I just wanted to know how much was working.   I'm trying to write a simple multi-thread script.  Nothing really fancy.

[02:58] <cbk_> I'll happily play around with that example code...... Thanks

[02:58] <mberends> Rakudo + Zavolaj can run fork(), if that helps

[03:02] <cbk_> How do I install Thread support.  I get this error: Unable to find module 'Threads' in the @*INC directories.

[03:05] <mberends> cbk_: you would need to install Niecza: https://github.com/sorear/niecza

[03:08] *** dsp_ left
[03:09] *** charsbar_ left
[03:09] * mberends watches the Threads example run locally, printing about one $x per second :-)

[03:10] <cbk_> mberends, looks like too much time/work for me to take on right now.

[03:10] <mberends> ok

[03:10] <cbk_> mberends, what does the :: thingy mean?

[03:11] <mberends> cbk_: it seems to be a namespace kinda thing, but I'm not really sure

[03:12] <cbk_> o

[03:12] *** alester joined
[03:13] *** kst left
[03:15] *** kst joined
[03:18] *** charsbar_ joined
[03:32] *** ymasory_ left
[03:38] *** envi joined
[03:45] *** drbean_ joined
[03:45] *** drbean left
[03:51] *** ymasory_ joined
[03:57] *** Limbic_Region left
[03:58] *** drbean_ is now known as drbean

[03:59] *** st-6308 joined
[04:03] <mberends> .oO( if the Synopses are brief summaries, where are the details? )

[04:08] *** dalek left
[04:09] *** simcop2387 joined
[04:09] *** dalek joined
[04:09] *** ChanServ sets mode: +v dalek

[04:09] <allbery_b> @Larry's heads, rakudo/niecza source code, etc.

[04:10] <mberends> :(

[04:13] <mberends> searching for something simple, "what is the P6 equivalent of the P5 'each' ?" becomes a merry Easter egg hunt.

[04:19] <diakopter> the source code is even briefer summaries...

[04:19] <TimToady> that is where a decent p5-to-p6 translator would be handy

[04:19] <TimToady> but each is very special-purpose

[04:20] <TimToady> there's nothing correspondingly special-purpose in p6

[04:20] <TimToady> iterators are handled differently

[04:24] <mberends> moritz_++ documents what I was looking for under "Loops" in http://perlgeek.de/en/article/5-to-6#post_03

[04:26] <mberends> TimToady: thanks for the 5-to-6 suggestion :)

[04:28] <mberends> rakudo: my %a="b"=>2,"c"=>3; for %a.kv -> $d,$e {say $d,$e;}

[04:28] <p6eval> rakudo 792e86: OUTPUT«b2␤c3␤»

[04:28] <diakopter> one could call it the 5->6 translator vvi, or EventHorizonTimeDilation, for short

[04:30] * diakopter digs deep and finds too much snark for one nick

[04:33] *** st-6308 left
[04:34] <allbery_b> I was going to mention .kv but my p6 knowledge keeps getting swapped out :(

[04:35] <mberends> yeah, I had a hunch it would be something like that, just feel like RTFM sometimes :)

[04:36] *** Guest42867 is now known as woldrich

[04:36] *** st-6519 joined
[04:36] *** woldrich left
[04:36] *** woldrich joined
[04:39] *** st-6519 left
[04:39] <mberends> I'm implementing hashes in C, so it seems they could benefit from iterators too

[04:42] *** envi left
[04:46] *** chin_up joined
[04:55] <sorear> each is one of those mistakes that Perl 6 is trying to avoid

[04:56] <TimToady> we're trying to avoid each mistake :)

[04:56] <sorear> it was designed back when SMP wasn't cool

[04:56] <TimToady> smile when you say "designed"

[05:01] *** risou_ left
[05:04] <TimToady> rules are too easy to use by accident when we mean token...

[05:05] * TimToady wonders idly whether we should rename the :r thing to "rule" and rename the :s thing to something beginning with "s" that is de-huffmanized

[05:05] *** alester left
[05:11] <diakopter> what's :s

[05:12] <TimToady> :sigspace

[05:12] <diakopter> oh yeahz

[05:12] <diakopter> spacey

[05:12] <TimToady> space-the-final-frontier

[05:13] *** lue left
[05:13] <diakopter> namegames are fun

[05:13] *** Jeffzworld joined
[05:13] <diakopter> stopgap

[05:13] <TimToady> except the whole point is that the space is the part you *don't* want to think about

[05:13] <Jeffzworld> hello I'd like to join you guys in developing

[05:14] <diakopter> the pier is long but the cliff is steep

[05:14] <TimToady> Jeffzworld: what are your interests?

[05:14] <Jeffzworld> I'm familar with unix and shell scripting

[05:15] <TimToady> how did you find us?

[05:15] <Jeffzworld> Linux, SAP, java, basketball.. 

[05:15] *** f00li5h left
[05:16] * TimToady was wearing a LinuxWorld hat earlier today...

[05:16] <Jeffzworld> i went to perl.org wanting learn more about the language

[05:16] <Jeffzworld> *to

[05:17] <Jeffzworld> i saw your developing perl 6

[05:17] <Jeffzworld> i recently graduated from college with a degree in management information systems

[05:17] <TimToady> there are lots of different ways to help out

[05:18] <TimToady> doubtless there are various ways we could improve our workflow :)

[05:18] <TimToady> though "management" of an open source project is more like cat-herding, mostly...

[05:18] <Jeffzworld> if I don't keep programming my skills will atrophy, so lets get started

[05:19] <TimToady> then you want to find a pet project that could be done in Perl 6, and try to make it work

[05:19] <Jeffzworld> like what kind of stuff needs to done

[05:19] <TimToady> not only will you learn some Perl 6, but you'll help us find all the holes in our documentation

[05:20] <diakopter> Jeffzworld: maybe take some code you've written before for something else, and rewrite it in Perl 6

[05:20] <TimToady> well...some folks have been working on writing examples on rosettacode.org

[05:20] <TimToady> those are fun

[05:21] * diakopter agrees

[05:21] <Jeffzworld> i wrote a script that replicates the basename utility

[05:22] <Jeffzworld> what kind of things are yoou guys developing for perl 6?

[05:22] <Jeffzworld> how is it different from perl?

[05:22] <TimToady> well, lots of tests

[05:22] <TimToady> it basically fixes most of the warts of Perl 5

[05:23] <TimToady> it's a different surface syntax, somewhat different semantics, but same underlying philosphy of programming

[05:24] <TimToady> it's simultaneously cleaner and more powerful than Perl 5

[05:24] <TimToady> (but not yet faster...)

[05:25] <TimToady> so I wouldn't program a CPU intensive program yet unless you want to do benchmarks for others to optimize against

[05:25] <Jeffzworld> I'd like to see some code

[05:25] <TimToady> http://rosettacode.org/wiki/Category:Perl_6

[05:25] <TimToady> you can compare Perl 6 snippets with the same thing in other languages

[05:28] <TimToady> you can also play with code right here

[05:28] <TimToady> perl6: say "Howdy, Jeffzworld!"

[05:28] <p6eval> pugs, rakudo 792e86, niecza v3-82-g1dc43eb: OUTPUT«Howdy, Jeffzworld!␤»

[05:28] <TimToady> all three of those implementations agree on this one :)

[05:29] <TimToady> that doesn't always happen...

[05:29] <TimToady> you can address each one individually too

[05:30] <TimToady> rakudo: .say for 1,1,*+* ... *

[05:30] <p6eval> rakudo 792e86:

[05:30] <p6eval> ..OUTPUT«(timeout)␤8␤13␤21␤34␤55␤89␤144␤233␤377␤610␤987␤1597␤2584␤4181␤6765␤10946␤17711␤28657␤46368␤75025␤121393␤196418␤317811␤514229␤832040␤1346269␤2178309␤3524578␤5702887␤9227465␤14930352␤24157817␤39088169␤63245986␤102334155␤165580141␤267914296␤433494437␤701408733␤1134903170␤1836311903␤29…

[05:30] <TimToady> hmm

[05:30] <TimToady> rakudo: say (1,1,*+* ... *)[^20].join(' ')

[05:30] <p6eval> rakudo 792e86: OUTPUT«1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765␤»

[05:34] <TimToady> perl 6 goes more in the direction of both function programming and OO

[05:35] <TimToady> though you can program in an idiom that looks very similar to perl 5

[05:35] <quotemstr> functional, you mean?

[05:35] <TimToady> yeah

[05:36] <TimToady> almost said FP, decided to expand the acronym, and blew it...

[05:37] *** yunga joined
[05:37] <TimToady> in the fibonacci example there, *+* is a lambda (FP concept), while the .join is obviously OOish

[05:38] <quotemstr> I like Okasaki's characteriation of functional programming as hiring a master chef and taking away all his knives.

[05:38] <TimToady> that's what sous chefs are for :)

[05:39] <Jeffzworld> how about something that removes non-ascii characters from strings

[05:39] <TimToady> anyway, the knives are still there, they're just hiddin inside food processors

[05:40] <TimToady> *hidden

[05:40] <TimToady> Jeffzworld: that would likely be a one-liner in either p5 or p6

[05:41] <Jeffzworld> what about if constructs, loops and variables, what libaries are available

[05:42] *** lue joined
[05:42] <TimToady> well, the control constructs and such are defined in the "synopses"

[05:43] <TimToady> S04 in particular

[05:43] <Jeffzworld> is there an API

[05:43] *** kaare_ joined
[05:44] <TimToady> there are lots of APIs; which one are you interested in?

[05:44] <Jeffzworld> i dono I'm just trying to get indroduced to the language

[05:45] <Jeffzworld> introduced

[05:45] <TimToady> are you familiar with Perl 5 at all?

[05:46] <Jeffzworld> how about database connectivity?

[05:46] <TimToady> there is some, but it's not my field of expertise

[05:46] <Jeffzworld> What is your field of expertise?

[05:47] <TimToady> linguistics, actually :)

[05:47] <Jeffzworld> so you know foriegn lanaguages?

[05:48] <quotemstr> Jeffzworld: What are you trying to do?

[05:48] <TimToady> some, but mostly it's a matter of knowing how they work, not just learning a bunch of 'em

[05:48] <quotemstr> TimToady: So I'm not the only coder who's also fascinated by linguistics.

[05:49] <quotemstr> TimToady: And you'd know what the heck I meant if I said that Lisp were a language (family) isolate. :-)

[05:49] <TimToady> "Used to be I couldn't spell lingrist, and now I are one!"

[05:49] <Jeffzworld> yes

[05:49] <Jeffzworld> isn't that a code used for formating resumes?

[05:51] <TimToady> anyhoo, if you want to explore various doc options, see perl6.org and follow the Documentation links, and see what appeals to you

[05:52] <Jeffzworld> I can script in unix, and write code in java.. i'm a beginginer at perl, but I need to know as much as possible

[05:52] <TimToady> early perl borrowed a lot of ideas from Unix scripting, so some of that will be familiar

[05:53] <TimToady> for comparisons to java, the rosettacode.org site would probably be the best

[05:53] <Jeffzworld> my shell lets me run perl from the prompt

[05:53] <TimToady> the perl6.org links will give you more tutorial-ish links

[05:54] <Jeffzworld> i screwed up a interview at yahoo yesterday

[05:54] <TimToady> there are lots of perl 5 resources, if you want to look at that first; it's a much more developed platform

[05:54] <TimToady> p6 is still mostly a research project, and tends to appeal to early adopters at the moment

[05:55] <TimToady> however, the 270 examples on rosettacode do in fact run correctly

[05:55] <Jeffzworld> im pretty much a computer junkie right

[05:55] <Jeffzworld> and i'm very good with them

[05:55] <Jeffzworld> but I'm looking for all these jobs in the field

[05:55] <Jeffzworld> and they all want you to interview be social

[05:56] <Jeffzworld> i have major problems with that

[05:56] <quotemstr> Unfortunately, there are other people.

[05:56] <TimToady> oh, half of us in here are somewhere on the autistic spectrum :)

[05:56] *** ymasory_ left
[05:56] *** ymasory left
[05:56] <Jeffzworld> so how do i explain that to a potential employer

[05:56] <quotemstr> Having accepted that, we should deal with it the best we can.

[05:57] <Jeffzworld> all the jobs today say "great communicator"

[05:57] *** ymasory joined
[05:57] <quotemstr> Jeffzworld: By being rigidly formal. Nobody will fault you for speaking precisely.

[05:57] <TimToady> even someone who is on the autistic spectrum can learn the rules as a kind of "foreigner"

[05:58] <Jeffzworld> and i'm afraid to say look, i basically sit in front of a computer all day-- and I'll make your company money

[05:58] <quotemstr> Fortunately, rules in the business world are a bit simpler than those involved in, say, dating.

[05:58] <TimToady> there's a famous writing by Temple Grandin called "An Anthropologist from Mars", or some such

[05:58] <Jeffzworld> expain this rididgy formal business

[05:58] <Jeffzworld> i totally bombed a technical interview at yahoo

[05:58] <quotemstr> Jeffzworld: Just shut up. Say what's needed and no more, and say what you mean as precisely as you can.

[05:59] <quotemstr> Jeffzworld: So? If you bombed it because of a technical error, it was a technical error and not a social one.

[05:59] <quotemstr> If you caller your interviewer's mother a goat, that's a different story.

[06:00] <Jeffzworld> I messed up the first question

[06:00] <Jeffzworld> they asked me what loads when linux boots

[06:00] <Jeffzworld> i thought they were talking about the load for the gui

[06:00] <Jeffzworld> but i guess they were just talking about the shell

[06:01] <quotemstr> TimToady: Ah, nifty. The "Anthropologist on Mars" essay was written by the guy who wrote "The Man Who Mistook His Wife for a Hat"

[06:01] <TimToady> I'd've guessed something like "grub"

[06:01] <TimToady> yes, Oliver Sachs

[06:01] <TimToady> *Sacks

[06:01] <quotemstr> I would have asked the interviewer where he wanted me to start describing the process and what level of detail he wanted.

[06:02] <Jeffzworld> i said it checks the disk space and loads the gui.. prompts u with a login

[06:02] <mberends> http://www.tldp.org/HOWTO/From-PowerUp-To-Bash-Prompt-HOWTO.html

[06:02] <Jeffzworld> think he wanted me to say the bash profile and bashrc

[06:03] <TimToady> I'd've probably said: Well, it depends on which level you're interested in, and many things happen on many levels

[06:03] <Jeffzworld> do u guys know the osi model?

[06:03] <TimToady> "It depends" makes you sound more like an expert, but then you'd better be ready to point out how it depends :)

[06:04] <TimToady> Jeffzworld: well, it depends :)

[06:04] <Jeffzworld> lol

[06:04] <quotemstr> TimToady: Power flows into the processor's bus pin and instructs it to initialize its program counter to 0x1000. The BIOS then says, "Let there be DRAM!" And there is DRAM, and the BIOS sees that it is good. Then...

[06:05] <quotemstr> Jeffzworld: Uh, vaguely? You have the physical layer, transport, datagram, application, and a few others I'm missing.

[06:06] <quotemstr> Jeffzworld: Honestly, I wouldn't want to work at a company that required memorization of a list of arbitrary network layering divisions that doesn't come up in real use.

[06:06] <Jeffzworld> session and presentation

[06:06] <TimToady> I know far too much about CMIP than has ever turned out to be useful...

[06:06] <jnthn> o/

[06:06] <phenny> jnthn: 26 Mar 09:36Z <moritz_> tell jnthn that on latest nqp/ctmo, I have a test failure in the 3rd test of 55-multi-method.t: Ambiguous dispatch to multi 'bar'. Ambiguous candidates had signatures: (then an empty line)

[06:06] <phenny> jnthn: 26 Mar 09:37Z <moritz_> tell jnthn (maybe related) was it intentional the that "Bump to latest Parrot" commit (4150953) just deleted a newline, and didn't actually change the parrot revision?

[06:07] <mberends> o/ jnthn !

[06:07] <jnthn> moritz_: oh, darn...how'd I screw the bump up... :)

[06:07] <quotemstr> Jeffzworld: In general, if you're asked a question you can answer in a number of different ways, ask the questioner which way he'd prefer.

[06:07] * jnthn has given his talks at OSCD.TW o/

[06:07] <jnthn> *OSDC

[06:07] <TimToady> yay

[06:08] <jnthn> Just showed the compiler toolkit to make a little language, then got it to cross-compile to the CLR and ran the programs in the mini-language there too :-)

[06:09] <mberends> w00t!

[06:10] <jnthn> Wasn't that many twiddles to make it work :)

[06:10] <mberends> jnthn: did you meet au++ in Taipei?

[06:10] <Jeffzworld> are u guys familar with echo -n?

[06:11] <mberends> yup

[06:11] <TimToady> sure, probably knew about it before you were born

[06:11] <Jeffzworld> can u just read $variable?

[06:11] <Jeffzworld> afterwards

[06:11] <TimToady> what do you mean by "read"?

[06:11] <jnthn> mberends: Yes, though only briefly.

[06:11] *** envi joined
[06:12] <TimToady> echo isn't about reading...

[06:12] <Jeffzworld> #!/bin/bash echo -n "Enter address" read $Address a=100000  while [ $a -gt 0 ] do ping $Address a='expr $a - 1' done

[06:12] <quotemstr> Ah, I was wrong. The initial program counter value on BIOS-supporting machines is (void*)(intptr_t)-17

[06:12] <quotemstr> According to the Coreboot documentation anyway.

[06:13] <TimToady> ah, in Perl 6 that would generally be done with: my $address = prompt("Enter address");

[06:14] <quotemstr> The neurons I used to store that can now never be used for something useful. Thanks for making me look that up. :-)

[06:14] <quotemstr> TimToady: Does Perl6 have locatives?

[06:14] <TimToady> in spots :)

[06:15] <quotemstr> No typeglobs? :)

[06:15] <TimToady> no typeglobs

[06:15] <quotemstr> Good riddance.

[06:17] <mberends> Jeffzworld: you see, `read` is a separate command from `echo`. But bash scripting is generally off topic in #perl6... 

[06:17] <TimToady> aliasing is done directly with := binding

[06:17] <Jeffzworld> i thought echo -n was like unixes input thing

[06:17] <Jeffzworld> like the buffered input stream reader in java

[06:18] <TimToady> no, all it does is output

[06:18] <Jeffzworld> -n asks for input

[06:18] <TimToady> no

[06:18] <TimToady> it suppresses the newline

[06:18] <Jeffzworld> hmm

[06:19] <Jeffzworld> ok well that's a crap shoot then

[06:20] <quotemstr> Jeffzworld: I suggest further study.

[06:20] <Jeffzworld> just checked the man page..

[06:20] <TimToady> the Unix command set may be poorly designed, but it's not random in the sense you seem to be implying

[06:21] <TimToady> it's certainly random in some other senses though

[06:21] <TimToady> it's certainly "random" as in "arbitrary"

[06:22] * sorear wanders back

[06:22] <sorear> Jeffzworld: welcome!

[06:22] <Jeffzworld> hello

[06:22] <sorear> the unix command set evolved

[06:25] <sorear> TimToady: Why did you add typeglobs to early Perl, instead of doing it as $main::{'$foo'} = 2 ?

[06:25] <quotemstr> *cough* like Python *cough*

[06:26] <Jeffzworld> well the echo, read construct still works

[06:27] <Jeffzworld> echo tells the user to do something -n makes a new line so thats good, and then u read what they enter... u just don't use a $ sign in that construct.

[06:27] <TimToady> yes, but if you don't understand which part does which action, you can't really program using the bits separately

[06:27] <TimToady> $ means something different in shell than it does in Perl

[06:27] <TimToady> -n makes *not* a newline

[06:27] <Jeffzworld> i just fixed my ping script, i removed the $ sign. chmoded the permissions and now pinging google like 100,000 times

[06:28] <sorear> ...why?

[06:28] <mberends> LOL

[06:28] <TimToady> you need to move beyond cargo-cult programming by understanding what the bits are actually doing

[06:28] <Jeffzworld> cargo cult?

[06:29] *** ymasory left
[06:29] <Jeffzworld> i want to learn how to write scripts to connect interfaces and protocals

[06:29] <sorear> you are new here.  it's a reference to one of Feynman's writings, which I highly recommend

[06:29] <TimToady> it's where we all start out in programming, but you sound a bit like you're stuck there, just throwing things together and hoping they work somehow

[06:31] <Jeffzworld> ya kind of

[06:31] <Jeffzworld> i need a mentor

[06:31] <sorear> http://en.wikipedia.org/wiki/Cargo_cult_programming

[06:32] <mberends> Jeffzworld: most of us mentor each other in here, but please be patient because it's a volunteer effort.

[06:33] <TimToady> also, mentors get tired of mentees that don't actually mentate.

[06:33] <Jeffzworld> well the more I learn the better I'll get at it

[06:34] <mberends> exactly, and then you'll mentor the next generation :-)

[06:34] <Jeffzworld> young skywalker

[06:34] <TimToady> I'd really suggest tackling a project that you find motivating; you can't really learn in a vacuum

[06:35] <sorear> if you can't find a project, make one of your own.  that's what I did.

[06:35] <Jeffzworld> how about something in calculus?

[06:35] <TimToady> if that interests you

[06:35] <sorear> moritz_ was working on an ODE system a few months ago

[06:36] <sorear> you need to want something.

[06:37] <Jeffzworld> Ordinary differencial equations?

[06:37] <TimToady> that's a noun; you need a verb

[06:37] <sorear> [By ODE do you mean]

[06:38] <mberends> they were some kind of differential equations, describing harmonic oscillation I seem to recall.

[06:39] <sorear> Jeffzworld: backlogging, you sound a lot like me.

[06:40] <Jeffzworld> u mean anti social and stuff

[06:40] <Jeffzworld> everyone asks me to fix their computer

[06:41] <Jeffzworld> Sorear: are you in the bay? what do u mean?

[06:41] <sorear> Well the anti-socialness seems to have worn off recently... I actually *feel* the loneliness now

[06:42] <Jeffzworld> i just graduated college in december

[06:42] <sorear> but generally speaking - mostly aimless twentysomethign person with technical skills

[06:42] <Jeffzworld> its awful

[06:42] <Jeffzworld> i moved back in with my parents

[06:42] <sorear> I never left.

[06:43] <Jeffzworld> are u by chance from the bay area?

[06:43] <sorear> No, San Diego.

[06:43] <Jeffzworld> i thought it would be easy to find a job once i had a degree

[06:43] <Jeffzworld> but its not enough u have to like prove u have these skills

[06:44] <mberends> found the differential equations page :-) http://perlgeek.de/blog-en/perl-6/physical-modelling.html

[06:44] <sorear> You can't learn to become a good programmer in three semesters.

[06:44] <Jeffzworld> well i was using personal time to

[06:45] <Jeffzworld> i made a gui in java as part of special project with a professor

[06:45] <sorear> This may be relevant: http://norvig.com/21-days.html

[06:49] <mberends> that supports the "more perspiration than inspiration" truism :)

[06:54] <sorear> the inspiration has to come first.

[06:54] <sorear> if I had been born 400 years ago, I would more or less know what to do with my life;

[06:55] <sorear> it doesn't work that way now.

[06:55] <sorear> I want to put the skills and knowledge I have now to use - but beyond that no clue.

[07:00] <quotemstr> By the way: Okasaki's pure functional data structures thesis is brilliant.

[07:05] * sorear out

[07:13] <Jeffzworld> how do u the write command?

[07:13] <Jeffzworld> how to use

[07:14] <mberends> Jeffzworld: the most widely use Perl 6 write command is `say`, for example:

[07:15] <mberends> rakudo: say "hello Jeffzworld";

[07:15] <p6eval> rakudo 792e86: OUTPUT«hello Jeffzworld␤»

[07:15] <Jeffzworld> well actaully i was trying to message a girl on the server

[07:15] <Jeffzworld> i tried to install rakudo on my shell

[07:16] <Jeffzworld> but it failed druing the build

[07:16] <mberends> oh, I know very little about messaging with girls ;)

[07:16] <Jeffzworld> and then i got all these banner messages warning me that i was using 150% disk space

[07:16] <mberends> ouch!

[07:16] <Jeffzworld> ya

[07:17] <diakopter> that's a lot of space

[07:17] <mberends> u srsly need more space

[07:17] <Jeffzworld> its a shell account at my former university

[07:17] <Jeffzworld> ssh

[07:18] <Jeffzworld> what do u do for work?

[07:18] <mberends> Rakudo needs, like, 400MB for a Rakudo installation

[07:19] <Jeffzworld> i'll try it on my ubuntu

[07:19] <benabik> When I was getting my BS, the only way to compile anything of decent size was to build it in the /tmp directory, which didn't count towards my quota.

[07:19] <mberends> Jeffzworld: I teach people to program and manage databases for a living.

[07:20] <Jeffzworld> really

[07:20] <Jeffzworld> i just graduated with a degree in management information systems.. my focus was rdbms

[07:21] <Jeffzworld> i would like to advance my programming skills a little.. 

[07:21] <mberends> I helped get Perl 6 into databases after about 2 years of apprenticeship

[07:22] <Jeffzworld> so it does have the ability to make database connections?

[07:22] <mberends> currently only Postgres and MySQL, but that's a good start

[07:23] <Jeffzworld> u need oracle in there

[07:23] <mberends> nah

[07:23] <diakopter> and mssql

[07:23] <diakopter> and odbc

[07:23] <mberends> yes, for noobs

[07:23] <Jeffzworld> oracle is the most popular

[07:24] <Jeffzworld> this may be open source but it would be good if it became a popular language used in business

[07:24] <diakopter> mssql has more installations by far, actually

[07:24] <mberends> I met the maintainers of the Perl 5 Oracle drivers, and they have lots of frustrations.

[07:25] <Jeffzworld> lets build some perl 6 oracle drivers

[07:25] <mberends> but yes, we should eventually go wherever the market is.

[07:26] <mberends> Jeffzworld: the size of that task is huge, for reasons you will only understand after you have learned much more. But nice idea, anyway.

[07:26] <Jeffzworld> im bored with my life

[07:26] <Jeffzworld> i mine as well

[07:26] <Jeffzworld> i have no job

[07:28] <mberends> a parent friend of mine described himself as a  life support system for his grownup kids - you're not the only one in your situation.

[07:28] <Jeffzworld> umm I need stuff todo

[07:28] <Jeffzworld> i don't even really care if i get paid for it

[07:29] <Jeffzworld> just something to occupy the many hours in the day

[07:29] <Jeffzworld> when im not talking to recruiters

[07:29] <mberends> the main thing is to be seen to be making the right kind of effort to become independent in the long term

[07:29] <mberends> learning to become a better programmer is a very good thing to work on

[07:29] <Jeffzworld> i think im still in the running at this company starting in july

[07:29] <Jeffzworld> i had a second phone interview

[07:30] <Jeffzworld> but i don't have much else going

[07:30] <Jeffzworld> a recruiter responded to my resume email in nevada...

[07:31] <Jeffzworld> how about a facebook puzzel

[07:31] <Jeffzworld> liarliar

[07:32] <Jeffzworld> http://www.facebook.com/careers/puzzles.php#!/careers/puzzles.php?puzzle_id=20

[07:33] <Jeffzworld> i didn't know- i think i use an array but i dono

[07:38] <dalek> nqp/ctmo: 2f75d22 | jonathan++ | build/PARROT_REVISION:

[07:38] <dalek> nqp/ctmo: Actually bump the PARROT_REVISION.

[07:38] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/2f75d22eda

[07:43] <Jeffzworld> is anyone still here?

[07:44] *** chin_up_ joined
[07:44] <mberends> Jeffzworld: yes, just doing other stuff

[07:44] <mberends> sometimes it goes quiet for a few minutes of even hours, then picks up again

[07:45] *** chin_up left
[07:47] <mberends> we generally don't make unnecessary noise in here, some people read the logs and find irrelevant content a waste of their time.

[07:47] <mberends> except for a bit of joking banter when we're bored, though

[07:48] <Jeffzworld> i got a question

[07:48] <mberends> shoot

[07:48] <Jeffzworld> can u use perl to design a command?

[07:48] <mberends> yes. how? very long story.

[07:49] <Jeffzworld> like if you script that you pass an argument to?

[07:49] <Jeffzworld> for example there's a program called ipcalc

[07:49] <Jeffzworld> which you can run from the command-line

[07:49] <Jeffzworld> and you can type ipcalc [address] all in the same line

[07:50] <mberends> Perl 5 is especially good at that, Perl 6 is getting there too.

[07:50] <Jeffzworld> i wrote a ping script.. but i have to read the address in separate input 

[07:50] <Jeffzworld> using read

[07:50] <Jeffzworld> im actaully using bash... kina beginning at perl

[07:50] *** sftp joined
[07:50] *** sftp_ left
[07:53] <mberends> Jeffzworld: I realize that. Just tread lightly here then, keep out of the way when heavy Perl 6 things are going on, and you'll be welcome to out friendly company. Some people here don't want the channel to be used for non Perl 6 things at all, so the guideline is not to annoy anyone.

[07:53] <mberends> *our friendly

[07:53] <Jeffzworld> its midnight on saturday

[07:54] <mberends> no, it's 9:54am on Sunday where I am

[07:54] <Jeffzworld> oh

[07:54] <Jeffzworld> hows the future?

[07:54] <mberends> sunny!

[07:55] <Jeffzworld> heh

[07:55] <Jeffzworld> im jeff by the way

[07:56] <mberends> of course. I'm martin, but we usually use nicks online and real names offline

[07:56] <mberends> Jeffzworld: howz ur world 2day?

[07:57] <diakopter> Jeffzworld: closer to 1 a.m., I'd say ;)

[08:00] * mberends finally gets out of bed

[08:04] <Jeffzworld> my world?

[08:05] <Jeffzworld> i sit around doing nothing

[08:05] <Jeffzworld> when my mother asks me to empty the dishwaster i am thank ful

[08:05] <Jeffzworld> because for 5 minutes i will be productive

[08:07] *** chin_up joined
[08:10] *** chin_up_ left
[08:11] *** chin_up_ joined
[08:14] *** chin_up left
[08:14] *** chin_up_ left
[08:18] *** chin_up joined
[08:22] *** mberends left
[08:23] *** mberends joined
[08:29] *** Mowah joined
[08:42] *** chin_up left
[08:43] <mberends> Jeffzworld: if you're still awake: it's only a suggestion, but if you concentrate for hundreds of hours on increasing your programming skills, and also work on developing more social skills, you will win at the job interviews that you will get later this year or maybe next year.

[08:45] *** mberends left
[08:46] *** mberends joined
[08:50] *** f00li5h joined
[08:59] <Tedd1> first thing first; get out of your mothers house ;)

[09:00] <mberends> lol. actually, that's just recursive. to get out, you have to make yourself be able to get out.

[09:00] <Tedd1> no, I'd prioritize it like that ... get out, get educated, get job

[09:01] <Tedd1> you get so much more from life by fighting through it... living with parents = fighting the wrong thing

[09:02] <mberends> true, a sink-or-swim initiation. one does grow up faster that way.

[09:05] <mberends> as a teenager, I thought the biggest problem in my life was my parents. how wrong  that was!

[09:11] <Tedd1> yeah, teenagers are at their most spoiled in life... thinking everything should come for free and that its their right :)

[09:11] <Tedd1> but then again, when I moved out I already had 10+ years of coding behind me, so there wasn't much chance of sinking :)

[09:12] <moritz_> good morning

[09:13] <moritz_> I guess you know that teenager problems are mostly made by culture?

[09:13] <moritz_> http://drrobertepstein.com/pdf/Epstein-THE_MYTH_OF_THE_TEEN_BRAIN-Scientific_American_Mind-4-07.pdf

[09:15] <mberends> good moritz_ morning, I shall skeptically read that

[09:18] *** rhebus joined
[09:20] <tadzik> good morning zebraland

[09:24] *** masak joined
[09:24] <masak> morning, zebras

[09:24] <phenny> masak: 01:37Z <sorear> tell masak If you want rules to be useful for languages other than Perl 6, redefine token ws to match "ignorable whitespace"

[09:24] <masak> sorear: you're right.

[09:26] *** ingy joined
[09:27] *** flatwhatson_ left
[09:27] <mberends> hi tadzik, masak

[09:27] *** flatwhatson_ joined
[09:27] <masak> \o

[09:50] *** charsbar_ left
[09:53] *** charsbar_ joined
[09:56] *** chin_up joined
[09:57] *** jfried joined
[09:57] *** mberends left
[10:02] <masak> Jeffzworld: hi. welcome.

[10:06] <masak> Jeffzworld: I could try and give advice like the rest of the crew has done, but I really want to say this -- I hope you stick around. you seem like #perl6 material, and there's possibility of both you and #perl6 coming out ahead from this. :)

[10:10] <moritz_> masak++

[10:11] <masak> specifically, I feel it's my exploration of Perl 6 that has put me on solid ground wrt compputer science. sure, I was interested in it before, but now I understand it better.

[10:11] <masak> helping explore and shape a programming language certainly has a part in that.

[10:13] <masak> but it's also the people here. they're great. smart, funny, often with fantastic ideas. I haven't felt bored since 2008. :)

[10:14] <masak> hm, maybe I'm overselling the channel. sometimes it does quiet down. we're working on that.

[10:20] *** pmurias joined
[10:21] <moritz_> (off-topic: can somebody recommend a CSS framework? I tried blueprint, but it assumes a fixed page width, and I don't like that )

[10:26] <masak> not sure I've seen a grid framework that doesn't assume a width.

[10:33] <moritz_> http://devsnippets.com/article/complete-guide-to-css-frameworks.html also lists frameworks with "fluid" layouts, which is what I was looking for

[10:40] *** bacek left
[10:43] <masak> right. I've seen them in action sometimes.

[10:44] <moritz_> I've temporarily decided to go with the "emastic" framework

[10:44] *** mberends joined
[10:45] <moritz_> it lets you specify some columns in em units, and one fluid column takes up the rest of the space

[10:45] <masak> sounds nice. let me/us know how it goes.

[10:45] <moritz_> I will.

[10:46] * moritz_ hopes to actually deploy at some point :-)

[10:46] <masak> I'm studying Tarjan's algorithm, because it turns out a small hobby application I'm exploring needs to subdivide a directed graph into strongly connected components.

[10:47] <masak> I love how the 'reduction of strongly conntected components into single nodes' can be seen as 'dividing by cycles' and makes the directed graph into a DAG ;)

[10:54] *** bacek joined
[11:09] *** risou joined
[11:10] *** whiteknight joined
[11:16] *** rhebus left
[11:19] *** mathw joined
[11:53] *** Patterner left
[11:54] *** Psyche^ joined
[11:54] *** Psyche^ is now known as Patterner

[12:03] *** bacek left
[12:10] *** donri joined
[12:24] *** bacek joined
[12:41] *** patch__ is now known as patch_

[12:46] *** yunga left
[12:55] *** Chillance joined
[13:03] *** bacek left
[13:12] *** orafu left
[13:12] *** orafu joined
[13:36] <shortcircuit> http://rosettacode.org/wiki/Pi

[13:37] * shortcircuit things Perl6 should implement that task as a sequence.

[13:37] <shortcircuit> *thinks

[13:42] *** chin_up left
[13:42] *** dual left
[13:43] *** chin_up joined
[13:45] *** Sarten-X left
[13:47] *** huf_ is now known as jhuf

[13:47] *** jhuf is now known as huf

[13:52] *** icwiener joined
[14:07] *** bacek joined
[14:21] *** hugme joined
[14:21] *** ChanServ sets mode: +v hugme

[14:39] *** dual joined
[14:48] <colomon> shortcircuit: http://web.comlab.ox.ac.uk/people/jeremy.gibbons/publications/spigot.pdf

[14:54] *** pmurias left
[15:01] *** bacek left
[15:13] *** chin_up left
[15:16] *** isBEKaml joined
[15:17] *** isBEKaml left
[15:18] *** icwiener left
[15:30] *** hatseflats left
[15:51] *** cdarroch joined
[15:51] *** cdarroch left
[15:51] *** cdarroch joined
[15:52] *** MayDaniel joined
[15:52] *** [particle] left
[15:58] *** donri left
[15:58] *** donri joined
[16:20] *** envi left
[16:36] *** MayDaniel left
[16:56] *** mberends left
[16:58] *** eternaleye left
[17:01] *** mberends joined
[17:06] *** sftp left
[17:17] *** risou left
[17:21] <dukeleto> diakopter: ping

[17:25] *** sftp joined
[17:27] *** eternaleye joined
[17:29] <dukeleto> who can help me with a dalek question?

[17:30] *** _dev0_ left
[17:35] <masak> dukeleto: my guess would be Infinoid.

[17:35] <masak> dukeleto: but don't ask to ask -- just put your question in the backlog, and someone is bound to come back to it ;)

[17:36] <dukeleto> dalek is announcing spam in #parrot, because our Trac instance is being spammed

[17:36] <dukeleto> I need to tell dalek to not announce Trac tickets until we fix Trac

[17:36] <dukeleto> please someone help me do this. Our current solutions is to kickban dalek, which is suboptimal

[17:37] *** _dev0_ joined
[17:37] <masak> seems to me the appropriate fix should be applied to https://github.com/Infinoid/dalek-plugins/blob/master/modules/local/tracwikilog.pm

[17:39] <dukeleto> masak: thanks for the help

[17:40] <diakopter> well

[17:40] <diakopter> one sec

[17:43] <diakopter> I'll have to wait for sorear to fix; he knows this  system whereas I don't

[17:44] <moritz_> masak: http://moritzlenz.dyndns.org:3000/details/11 # intermediate redesign result, using the "emastic" css framework

[17:44] *** icwiener joined
[17:46] <dukeleto> diakopter: thanks

[17:47] <dukeleto> sorear: your help would be much appreciated

[17:47] <masak> the horizontal/vertical paddings for the 'main content' box appear mismatched.

[17:47] <masak> moritz_: ^

[17:54] *** donri left
[18:07] *** aesop is now known as kronik_aussie

[18:27] *** colomon joined
[18:28] *** Rotwang joined
[18:33] *** cotto left
[18:36] *** cotto joined
[18:38] *** donri joined
[18:39] <donri> hm can you gather self.*multi-dispatching?

[18:51] *** nymacro left
[18:53] <masak> donri: the results are returned as a list. other than that, I'm not sure I understand your question.

[18:57] <mberends> yes you can. example:

[18:57] <mberends> rakudo: class a { multi method b($x){take "red $x"};multi method b($x,$y){take "green $x $y";}; method c(){gather for 1..2 -> $c {my @c=1..$c;self.b(|@c)};};};my @a=a.new.c();@a.perl.say

[18:57] <p6eval> rakudo 792e86: OUTPUT«["red 1", "green 1 2"]␤»

[18:58] <moritz_> masak: yes, I need to fix that

[19:07] <donri> mberends: with self.*b?

[19:07] *** Trashlord left
[19:08] *** Sarten-X joined
[19:09] <mberends> donri: no, not *b, just b. but the flattening |@c allows it to multi dispatch. I think you may want something else though, not sure what else to suggest.

[19:09] *** icwiener left
[19:10] *** Trashlord joined
[19:16] *** Trashlord left
[19:17] *** Trashlord joined
[19:20] *** wooden left
[19:25] <moritz_> masak: alignment fixed... I'm not really happy with the bahviour if the browser window is smaller than the predefined width

[19:26] <moritz_> but that's a task for another day, I think

[19:32] <masak> :)

[19:43] *** M_o_C joined
[19:44] *** plobsing left
[20:00] *** Sarten-X left
[20:00] * masak digs back into Tarjan's algorithm

[20:03] *** MayDaniel joined
[20:06] *** Sarten-X joined
[20:19] *** araujo left
[20:20] *** patrickas joined
[20:22] *** Jeffzworld left
[20:23] *** araujo joined
[20:23] <patrickas> rakudo: my @a = [1, 2, 3] , [1, 1, 1];say ~@a.map( { 5 ~~ any($_) } );

[20:23] <p6eval> rakudo 792e86: OUTPUT«Bool::True Bool::True␤»

[20:23] *** M_o_C left
[20:24] <patrickas> I am sure I am doing something stupid, but I expected False in that !

[20:24] <moritz_> rakudo: my @a = [1, 2, 3] , [1, 1, 1];say ~@a.map( { 5 ~~ any @($_) } )

[20:24] <p6eval> rakudo 792e86: OUTPUT«Bool::True Bool::True␤»

[20:25] <moritz_> I'm surprised too

[20:25] <benabik> rakudo: say 5 ~~ any([1,1,1])

[20:25] <p6eval> rakudo 792e86: OUTPUT«Bool::False␤»

[20:26] <moritz_> ah

[20:26] <moritz_> ~~ contextualizes $_

[20:26] *** M_o_C joined
[20:26] <benabik> 5 ~~ any(5)

[20:26] <moritz_> it's a bit wtf-y

[20:26] <moritz_> rakudo: my @a = [1, 2, 3] , [1, 1, 1];say ~@a.map( { 5 ~~ .say })

[20:26] <p6eval> rakudo 792e86: OUTPUT«5␤5␤Bool::True Bool::True␤»

[20:27] <moritz_> you see that $_ is actually 5, not the array

[20:27] <patrickas> ohhhhh

[20:27] <moritz_> that one has bit me before :/

[20:28] <patrickas> Thansk moritz!

[20:28] *** M_o_C left
[20:29] <patrickas> I had suspected $_ was not what I am expecting but I tried to put a "say $_.perl" *before* the smartmatch to confirm!

[20:29] *** M_o_C joined
[20:33] *** cspencer joined
[20:36] <masak> of course, the solution is not to use a smartmatch when a more exact operator is available. :)

[20:36] <masak> == in this case.

[20:36] <masak> rakudo: my @a = [1, 2, 3] , [1, 1, 1];say ~@a.map( { 5 == any @($_) } )

[20:36] <p6eval> rakudo 792e86: OUTPUT«any(Bool::False) any(Bool::False)␤»

[20:36] <masak> rakudo: my @a = [1, 2, 3] , [1, 1, 1];say ~@a.map( { so 5 == any @($_) } )

[20:36] <p6eval> rakudo 792e86: OUTPUT«Bool::False Bool::False␤»

[20:38] *** ymasory joined
[20:39] *** M_o_C left
[20:40] <cspencer> is the default scope for subroutines "our" or "my" in p6?

[20:40] <masak> 'my'.

[20:40] <masak> (unlike Perl 5)

[20:40] <masak> default for classes and other type-y things is 'our', though.

[20:41] *** MayDaniel left
[20:41] <cspencer> just reading through S06 and noticed under the "named subroutines" section that it says: sub NAME ( PARAMS ) TRAITS {...}    # same as "our"

[20:41] <cspencer> should the comment be "# same as "my"?

[20:41] <masak> you probably found a fossil, then.

[20:41] <cspencer> or am i missing something

[20:41] * masak looks

[20:41] <cspencer> ah ok

[20:42] <cspencer> it was seemingly contradicting the paragraph at the end of the section and i just wanted to clarify

[20:42] <masak> looks like. cspencer++

[20:42] * masak fixes

[20:44] <dalek> specs: f7d7198 | masak++ | S06-routines.pod:

[20:44] <dalek> specs: [S06] corrected my/our fossil

[20:44] <dalek> specs: 

[20:44] <dalek> specs: Reported in by cspencer++.

[20:44] <dalek> specs: review: https://github.com/perl6/specs/commit/f7d7198d89

[20:44] <masak> good thing we didn't freeze the spec yet! *phew*

[20:44] <patrickas> that was a close one!

[20:45] * benabik lols.

[20:45] *** st-5426 joined
[20:46] <patrickas> anyways desaster averted, and I suggest if cspencer is interrested in finding more such stuff in the specs he should be getting commit access.

[20:46] <masak> absolutely.

[20:46] <cspencer> patrickas: i've got commit access from a long time ago, assuming it's still active :)

[20:47] <patrickas> oh ok then ... all things are as they should be ;-)

[20:47] <masak> cspencer: are you the one with Elf?

[20:48] <cspencer> masak: no, i'm not with elf...i did a bunch of commits a couple years back when some of the setting was getting converted from PIR to P6

[20:48] <mberends> masak: that would be Mitchell Spencer afair

[20:48] <masak> ah, ok.

[20:48] *** kaare_ left
[20:49] <masak> cspencer: ah; sorry about the mixup. anyway, good to have you back :)

[20:49] <cspencer> masak: thanks!

[20:52] <tadzik> cspencer: you might want to have the commit access renewed though, we

[20:52] <tadzik> ...we're on git now

[20:52] <cspencer> rakudo was on git at the time i'd got access, so i'm probably still current

[20:53] <masak> what's your github username?

[20:53] <cspencer> cspencer

[20:53] <tadzik> specs moved far later

[20:53] <cspencer> ah, ok

[20:53] <masak> ENOHUGBOT

[20:53] <tadzik> like half a year ago or something

[20:54] <cspencer> i've noticed a couple of obvious typos reading through the specs that i don't mind fixing if i had access

[20:55] <masak> cspencer: you have access, it seems.

[20:55] <masak> your old access must've been carried over by someone.

[20:55] <cspencer> masak: that's for the specs as well?

[20:56] *** icwiener joined
[20:57] <masak> yes, that's the group called 'perl6', with access to all the central repositories.

[20:57] <cspencer> oh alright.  i'll give it a try then...

[20:57] <masak> we can't be bothered to fiddle with access to the central repos individually, so if you're trusted with one, you're trusted with all of them :)

[20:58] <benabik> laziness++

[21:01] *** bacek joined
[21:02] *** dorlamm joined
[21:05] <masak> huh. the expression C< $a max 0 > reads kinda wrong, doesn't it?

[21:06] * masak decides to use prefix [max] instead

[21:06] <cspencer> i seem to have forgotten all my git in the last year.  argh.

[21:07] <cspencer> how do i push a commit to github again?

[21:07] <masak> git push -u origin master

[21:07] <masak> most likely.

[21:08] *** bacek left
[21:15] <dalek> specs: 47af4ce | cspencer++ | S06-routines.pod:

[21:15] <dalek> specs: Fixed minor typo.

[21:15] <dalek> specs: review: https://github.com/perl6/specs/commit/47af4cedaa

[21:15] <cspencer> there we go, that worked.

[21:15] <cspencer> turns out i needed a new version of git.

[21:16] <masak> :)

[21:16] <masak> "Perl 6: turns out you need a new version of git" :P

[21:16] <masak> not my best slogan, to be sure.

[21:16] <cspencer> hah! ;)

[21:19] <cspencer> what's happened to the monthly rakudo star releases lately?

[21:19] <PerlJam> cspencer: they stopped being monthly :)

[21:20] <cspencer> perljam: fair enough :)  

[21:20] <PerlJam> Though I think we decided on quarterly releases, no one may have announced that fact via the usual channels.

[21:20] <PerlJam> At least I don't recall such.

[21:21] *** bacek joined
[21:21] <cspencer> i don't recall seeing it either via the usual channels; i just recall not seeing a february release announcement :)

[21:25] <cspencer> rakudo: proto sub foo { say "pre"; { * }; say "post" }; sub foo { say "foo" }; foo()

[21:25] <p6eval> rakudo 792e86: OUTPUT«foo␤»

[21:27] <masak> I'm glad people are reacting when the Rakudo releases are no longer monthly.

[21:27] <masak> I don't object to them no longer being monthly, that's probably the right decision...

[21:28] <cspencer> masak: yes, i can imagine it was a lot of work to bundle and ship on a monthly cycle

[21:28] <masak> ...BUT now, for the first time since Rakudo started, we're releasing nothing, neither Rakudo proper nor Rakudo Star, to the public channels monthly.

[21:28] <masak> cspencer: it isn't, really.

[21:28] <masak> cspencer: it's more that it's stable enough now for monthly releases to be less necessary.

[21:28] <masak> which is a good thing, of course.

[21:28] <cspencer> masak: hey, that's good news

[21:35] *** PacoLinux left
[21:41] *** icwiener left
[21:43] * masak sometimes wishes for a uniq that doesn't lean on infix:<eq>

[21:43] *** purple_gonk joined
[21:45] *** purple_gonk left
[21:48] <masak> rakudo: my @a = 1..10; my $g = 3; push (my @b), (my $w = pop @a) until $w == $g; say @b.perl

[21:48] <p6eval> rakudo 792e86: OUTPUT«Use of uninitialized value in numeric context  in <anon> at line 22:/tmp/dN2rUqIQc9␤[10, 9, 8, 7, 6, 5, 4, 3]␤»

[21:48] <masak> ah, of course.

[21:49] <masak> rakudo: my @a = 1..10; my $g = 3; repeat until (my $w == $g) { push (my @b), $w = pop @a }; say @b.perl

[21:49] <p6eval> rakudo 792e86: OUTPUT«===SORRY!===␤Symbol '@b' not predeclared in <anonymous> (/tmp/CJ2BGijfsY:22)␤»

[21:49] <masak> rakudo: my @a = 1..10; my $g = 3; my @b; repeat until (my $w == $g) { push @b, $w = pop @a }; say @b.perl

[21:49] <p6eval> rakudo 792e86: OUTPUT«(timeout)initialized value in numeric context  in <anon> at line 22:/tmp/Vh5OalqiFo␤Use of uninitialized value in numeric context  in <anon> at line 22:/tmp/Vh5OalqiFo␤Use of uninitialized value in numeric context  in <anon> at line 22:/tmp/Vh5OalqiFo␤Use of uninitialized

[21:49] <p6eval> ..value in …

[21:50] *** Rotwang left
[21:50] <masak> rakudo: my @a = 1..10; my $g = 3; my @b; repeat until (my $w) == $g { push @b, ($w = pop @a) }; say @b.perl

[21:50] <p6eval> rakudo 792e86: OUTPUT«[10, 9, 8, 7, 6, 5, 4, 3]␤»

[21:50] <masak> \o/

[21:54] *** zby_home left
[21:58] <masak> for the first time in a long time, I'm being productive with Rakudo. writing new code.

[21:59] <masak> it's not Rakudo's fault that I haven't been it in a while; mostly new $dayjob has sucked up all my focus.

[21:59] *** ymasory left
[21:59] <masak> I just fell victim to RT #85674 -- luckily it's been fixed since I last built Rakudo, on March 9 ;)

[21:59] <masak> moritz_++

[22:06] *** bacek left
[22:13] <masak> er, waitaminute.

[22:13] <masak> rakudo: say min(3,6)

[22:13] <p6eval> rakudo 792e86: OUTPUT«Unable to handle non-closure Ordering yet␤  in 'Any::min' at line 1563:CORE.setting␤  in 'min' at line 1873:CORE.setting␤  in main program body at line 22:/tmp/g0gzsDKGoB␤»

[22:14] <masak> the bug is not fixed after all.

[22:14] <benabik> Boo

[22:14] * masak re-opens RT #85674

[22:15] *** cspencer left
[22:17] <masak> 'night, #perl6.

[22:17] <benabik> 'night

[22:18] *** jfried left
[22:18] *** plobsing joined
[22:18] *** masak left
[22:24] *** Mowah left
[22:26] *** dorlamm left
[22:27] *** patrickas left
[22:41] *** cspencer joined
[22:43] *** hatseflats joined
[22:45] *** orafu left
[22:47] *** orafu joined
[22:48] *** dju__ left
[22:57] *** cosimo_ joined
[23:04] *** cosimo_ left
[23:06] *** noganex joined
[23:07] *** cosimo left
[23:13] *** cosimo joined
[23:29] *** [particle] joined
[23:35] *** xinming left
[23:41] *** cdarroch left
[23:54] *** cspencer left
[23:59] *** silent_h_ joined
