[00:04] *** donri left
[00:05] *** takadonet1 joined
[00:05] <takadonet1> ping *

[00:06] <TimToady> Error: can't ping * without root privs

[00:06] <takadonet1> sudo ping *

[00:06] <TimToady> pong

[00:06] *** rdesfo joined
[00:07] *** dayangkun_ left
[00:08] <takadonet1> TimToady: how are you sir?

[00:11] <TimToady> my wrist has improved to the point it doesn't feel like my hand is gonna fall off just yet

[00:12] *** justatheory left
[00:12] <takadonet1> TimToady: Good to hear. 

[00:13] <TimToady> that too

[00:13] <TimToady> I've been wearing earplugs to keep it that way :)

[00:13] * TimToady has been tearing siding off his house, hence the connection...

[00:13] <takadonet1> hehe

[00:17] *** dayangkun joined
[00:18] <sjohnson> wrists hurt from all that perl hacking

[00:20] *** Rotwang joined
[00:21] <sorear> good * #perl6

[00:22] <takadonet1> sorear: yo yo !

[00:24] *** ymasory joined
[00:32] *** dayangkun left
[00:37] *** justatheory joined
[00:43] *** dayangkun joined
[00:45] *** am0c left
[00:56] *** geekosaur left
[01:07] *** rdesfo left
[01:10] *** allbery_b joined
[01:11] *** Rotwang left
[01:12] *** uvtc joined
[01:13] <uvtc> TimToady and sjohnson: just to chime in about the wrist pain -- if it's related to possible RSI, what's helped me greatly is one of these http://kinesis-ergo.com/contoured.htm

[01:13] <uvtc> along with a trackpad mounted in the middle.

[01:13] *** xinming_ left
[01:14] <uvtc> I think I actually emailed TimToady a long time ago about it actually. (I've got no connection with the company other than buying a couple of them.)

[01:16] <uvtc> Most important was to have it low enough (ex. on your lap) so your wrists can hangdown just a bit. Anyway, hth.

[01:19] *** xinming joined
[01:20] *** stkowski left
[01:22] *** dayangkun_ joined
[01:25] *** dayangkun left
[01:33] *** nnunley joined
[01:36] *** ymasory left
[01:39] *** dayangkun__ joined
[01:43] *** dayangkun_ left
[01:47] <benabik> I used a Kinesis for a long time, they're very nice.

[01:47] <Tene> uvtc: I've been curious about trying one of those.

[01:47] *** dayangkun_ joined
[01:50] *** dayangkun__ left
[01:51] *** uvtc left
[01:56] *** uvtc joined
[01:56] *** alester joined
[01:57] <uvtc> Tene: they're pretty amazingly comfortable. One possible drawback is that they have only a tiny rubber chicklet Esc key (along with the F-keys).

[01:57] <uvtc> When using vim, I used ^[ in place of Esc though, and it was fine.

[02:00] *** dayangkun_ left
[02:00] <uvtc> The keys though to avoiding hand pain is to have it low (as I mentioned), and also the use of a trackpad so you can avoid touching a mouse.

[02:00] *** dayangkun_ joined
[02:04] <benabik> I used a Kinesis and a trackball.  Worked lovely.  then I stopped using a desktop.

[02:07] *** whiteknight left
[02:08] <TimToady> my problem is not with keyboards--it's with crowbars

[02:08] <uvtc> benabik: I'm on a laptop. Using the Contoured/Advantage kybd externally (via USB). Hardly ever touch the built-in keyboard. Trouble is, I'm pretty stranded if I need to work somewhere and haven't brought the keyboard with me.

[02:08] <benabik> TimToady: Don't hit your wrist with a crowbar.  That's bad.

[02:09] <benabik> uvtc: Since I don't have a desk dedicated to my computer, I don't have a good place to use the keyboard.

[02:11] <uvtc> benabik: Ah. Mine generally either stays on my lap, or on top of the laptop when it's folded closed. If I had no room, I'd probably try to figure a way of hanging it on a wall somewhere. :)

[02:11] <benabik> uvtc: Mine also has a... problem.  I bought it back when they had lifetime support, but proving that is always an issue, since I can no longer read the serial number.

[02:11] <uvtc> TimToady: I'd suggest that typing with a crowbar is probably suboptimal.

[02:11] <Tene> I spend most of my time with my feet up on my desk, leaning back in my chair, with the keyboard in my lap.

[02:12] <uvtc> TimToady: ;)

[02:12] <Tene> It's not great, but it's the most comfortable I've been able to manage.

[02:12] <benabik> Mine is also PS2 interface, which sucks.

[02:12] <Tene> Sitting like my co-workers do, straight up in my chair with keyboard on the desk and my legs hanging down on the floor gets very uncomfortable for me pretty quickly.

[02:13] <uvtc> benabik: Ah, yeah, the newer ones are USB. I've got an older PS2 model as well as a USB.

[02:13] *** am0c joined
[02:13] <Tene> The best I can do similar to that is with my legs folded under me, up on the chair, but then I lose circulation, so when I have to sit like that, I alternate legs back and forth between up and down, which gets pretty annoying to need to do.

[02:14] <uvtc> Tene: I've used a footstool in the past to help level things out. Putting the feet up once in a while sounds good for circulation.

[02:15] <flussence_> I got a new mouse today... and it ended up having terrible surface detection and sufficiently high friction on the loose slide-out keyboard thing on my desk as to be completely useless.

[02:15] <flussence_> (guess I need a better desk)

[02:16] <uvtc> flussence_: the trackpad is less accurate and slower than the mouse, but it's saved my mouse-button finger/hand.

[02:17] <Tene> at home I've got this couch, and I sit on the extended section with my legs up.  http://www.ikea.com/us/en/images/products/kivik-sofa-and-chaise-lounge-red__0112935_PE264824_S4.JPG

[02:18] <Tene> ... I should probably ask a doctor to look into circulation problems or something someday.  If I could be comfortable with my legs hanging down, that would be very convenient.

[02:19] <benabik> I had a pretty high accuracy trackball.  Had a cutout on the side that let me hold it with finger and thumb.

[02:19] <uvtc> Tene: you might try the footstool idea (along with a regular chair) to see if it works for you.

[02:19] <Tene> uvtc: ah, you mean a small stool underneath my desk?  I hadn't considered that...

[02:20] <Tene> that might work. :)

[02:20] <Tene> I also should try a standing desk someday; I expect to hate it, but it's worth trying.

[02:20] *** mtk left
[02:29] *** mtk joined
[02:29] *** takadonet1 left
[02:35] <sorear> good * #perl6

[02:35] *** Eevee left
[02:39] <colomon> \o

[02:47] *** Eevee joined
[02:49] *** uvtc left
[02:52] *** leprevost joined
[02:52] <sorear> o/ colomon

[02:54] *** alester left
[02:54] *** leprevost left
[02:54] *** hudnix left
[03:15] *** dayangkun_ left
[03:16] *** dayangkun_ joined
[03:27] *** Su-Shee joined
[03:46] *** zer0o left
[03:56] *** envi joined
[03:59] *** orafu left
[03:59] *** orafu joined
[04:01] *** satyavvd joined
[04:13] *** nymacro joined
[04:15] *** dayangkun_ left
[04:15] *** dayangkun_ joined
[04:18] *** daemon joined
[04:28] *** kaare_ joined
[04:32] <daemon> hey all I am new to perl6 even though I do use perl 5 quite alot .. there is parrot and rukudo... if I understand this correctly they are the current compiles for perl6; which one is turnning out to be the more popular

[04:32] <daemon> compilers*

[04:34] <Eevee> parrot is a virtual machine that rakudo runs on

[04:34] <daemon> go it

[04:34] <daemon> just read it in ports descr

[04:35] <Eevee> parrot doesn't understand perl 6 and rakudo doesn't work without parrot

[04:40] *** kanishka joined
[04:41] *** birdwindupbird joined
[04:48] <sorear> rakudo is a compiler which turns Perl 6 into Parrot bytecode

[04:48] <sorear> Parrot is a VM which Rakudo's output runs on

[04:50] *** woosley joined
[04:53] *** Mowah joined
[04:56] *** kanishka left
[05:00] <sorear> daemon: do you follow?

[05:04] <daemon> sorear, certainly do

[05:04] <daemon> its like erlang and BEAM

[05:04] <daemon> the language runs in a virtualized enviromen

[05:04] <daemon> t

[05:05] <sorear> Almost.

[05:05] <sorear> Parrot is designed to be a reusable component (there is a pretty good Lua compiler, and several other things in various states of completeness)

[05:06] <sorear> And Perl 6 has several implementations, only one of which targets Parrot.

[05:06] *** dual left
[05:10] *** dayangkun_ left
[05:11] *** dayangkun_ joined
[05:12] *** dual joined
[05:14] *** sftp left
[05:21] *** sufrostico joined
[05:22] <sufrostico> hello!  dumb question...  arew you using .pl as perl6 file extension or the traditional .pl ??

[05:22] <tadzik> usually .pl

[05:22] <sufrostico> I mean, .p6 or .pl

[05:22] <tadzik> or .pl6 :)

[05:23] <sufrostico> nice

[05:27] <sufrostico> thanks 

[05:33] *** Mowah left
[05:39] <tadzik> you're welcome

[05:41] *** flatwhatson left
[05:59] *** kanishka joined
[06:11] *** kanishka left
[06:21] *** Mowah joined
[06:24] *** dayangkun__ joined
[06:25] *** dayangkun_ left
[06:26] *** kanishka joined
[06:28] *** Su-Shee left
[06:29] *** dayangkun__ left
[06:30] *** dayangkun joined
[06:30] <dalek> niecza: 3074e34 | sorear++ | / (6 files):

[06:30] <dalek> niecza: [mmd] Compiler support for multisubs

[06:30] <dalek> niecza: review: https://github.com/sorear/niecza/commit/3074e343bd

[06:34] *** kanishka left
[06:41] *** justatheory left
[06:41] *** justatheory joined
[06:46] *** justatheory left
[06:48] <dalek> niecza: c464669 | sorear++ | / (2 files):

[06:48] <dalek> niecza: [mmd] Finish "multi sub"s

[06:48] <dalek> niecza: review: https://github.com/sorear/niecza/commit/c464669002

[06:57] *** cottoo left
[06:58] *** flatwhatson joined
[06:59] *** flatwhatson left
[07:02] *** flatwhatson joined
[07:07] <dalek> niecza: f40836b | sorear++ | / (2 files):

[07:07] <dalek> niecza: [mmd] Fixes for "my multi regex"

[07:07] <dalek> niecza: review: https://github.com/sorear/niecza/commit/f40836b9fe

[07:08] * sorear -> sleep

[07:31] *** mj41 joined
[07:34] *** jaldhar joined
[07:42] *** fhelmberger joined
[07:56] <dalek> roast: 2b4b33c | moritz++ | S03-operators/range-basic.t:

[07:56] <dalek> roast: [range-basic.t] fudge for niecza

[07:56] <dalek> roast: review: https://github.com/perl6/roast/commit/2b4b33c957

[07:57] *** proller_ left
[07:59] <moritz> phenny: tell sorear to run t/spec/S06-multi/type-based.t in niecza - 'Unhandled exception: Unable to resolve method ast in class Any' at /home/moritz/p6/niecza/src/NieczaActions.pm6 line 212 (NieczaActions NieczaActions.mangle_longname @ 5) (seems to be triggered by param parsing code)

[07:59] <phenny> moritz: I'll pass that on when sorear is around.

[08:00] <moritz> phenny: tell sorear that bug seems to prevent compilation of most multi-related test files

[08:00] <phenny> moritz: I'll pass that on when sorear is around.

[08:02] *** Axius joined
[08:05] *** dayangkun_ joined
[08:08] *** dayangkun left
[08:11] *** MayDaniel joined
[08:11] *** Axius left
[08:22] *** dakkar joined
[08:29] *** dayangkun__ joined
[08:30] *** Su-Shee_ joined
[08:33] *** dayangkun_ left
[08:43] *** awoodland joined
[08:45] *** Su-Shee_ is now known as Su-Shee

[08:48] *** araujo joined
[08:51] *** MayDaniel left
[08:52] <dalek> niecza: bfe938e | moritz++ | t/spectest.data:

[08:52] <dalek> niecza: 7 new passing test files

[08:52] <dalek> niecza: review: https://github.com/sorear/niecza/commit/bfe938e220

[08:58] *** dayangkun_ joined
[09:01] *** dayangkun__ left
[09:14] *** awoodland left
[09:16] *** Axius joined
[09:39] *** JimmyZ joined
[09:39] *** JimmyZ left
[09:41] *** Axius left
[09:56] *** woosley left
[10:03] *** tomaw left
[10:03] *** Mowah left
[10:05] *** Rotwang joined
[10:05] *** tomaw joined
[10:08] *** mtk left
[10:17] *** mtk joined
[10:45] *** Mowah joined
[10:47] *** Rotwang left
[10:56] *** bacek left
[10:58] *** silent_h_ joined
[11:16] *** noganex_ joined
[11:20] *** noganex left
[11:24] *** MayDaniel joined
[11:32] *** kaare__ joined
[11:36] *** leprevost joined
[11:43] *** kaare__ left
[11:53] *** Patterner left
[11:55] *** Psyche^ joined
[11:55] *** Psyche^ is now known as Patterner

[11:58] *** satyavvd left
[11:59] <takadonet> morning all

[12:11] *** Alias left
[12:11] *** Alias joined
[12:19] *** MayDaniel left
[12:27] *** sftp joined
[12:31] *** dayangkun_ left
[12:37] *** donri joined
[12:38] *** plobsing left
[12:58] *** Holy_Cow joined
[13:05] *** am0c left
[13:05] *** am0c joined
[13:23] *** wooden left
[13:29] *** dayangkun_ joined
[13:34] *** bluescreen10 joined
[13:47] *** hudnix joined
[13:48] *** bluescreen10 left
[13:53] *** JimmyZ_ joined
[14:00] *** MayDaniel joined
[14:03] *** bluescreen10 joined
[14:05] *** fhelmberger left
[14:10] *** fhelmberger joined
[14:18] *** jaldhar left
[14:19] <tadzik> good morning #perl6

[14:21] <PerlJam> gutenMorgen tadzik 

[14:22] <moritz> oh hai

[14:22] <moritz> last call for GSOC proposals: about 4 hours left until submission deadline

[14:22] <tadzik> yeah, 4;38

[14:23] * tadzik is now after physics exam, can work on GSoC proposal

[14:23] <PerlJam> tadzik: no more spherical cows of uniform density!

[14:24] <tadzik> ho, what? :)

[14:24] <PerlJam> What kind of physics were you taking?

[14:25] <moritz> PerlJam: nono, phycisists use point cows (ie with zero volume but finite mass) in most models :-)

[14:25] <tadzik> Basics of Physics, it's what I failed last semester :\

[14:25] <moritz> is that mechanics?

[14:25] <PerlJam> moritz: yeah, but they always have ridiculous simplifying assumptions  :)

[14:26] <moritz> PerlJam: that's because the real world is too complicated to approach it without such simplifications... and it often turns out that even the ridicolous simplifications can be quite useful

[14:28] <tadzik> moritz: yeah, that exam was mainly mechanics. I don't know the english equivalent names though. Dynamics? The changing mass? Vibrations, as in E = 0.5 * kx^2, this kind of stuff

[14:28] <PerlJam> I don't need proselytizing  :)

[14:28] <tadzik> I don't think that last one is about vibrations

[14:28] <tadzik> phenny: "drgania"?

[14:28] <phenny> tadzik: "Vibration" (pl to en, translate.google.com)

[14:28] <tadzik> or maybe

[14:29] <tadzik> anyway, it went quite well

[14:29] <tadzik> coming soon: magnetism, electostatic stuff, Faradays, Gausses etc

[14:32] <PerlJam> tadzik: btw, you know of Kahn Academy?  And http://ocw.mit.edu/courses/physics/?   And other such resources?

[14:33] *** _twitch joined
[14:38] *** noganex_ left
[14:41] <tadzik> PerlJam: never heard of it

[14:42] *** JimmyZ_ left
[14:42] <PerlJam> tadzik: http://www.khanacademy.org/

[14:42] <tadzik> oh, that looks cool

[14:42] <PerlJam> I've been trying out Khan Academy on my kids and it works very well

[14:43] <tadzik> woow

[14:43] <tadzik> awesome

[14:44] <tadzik> Thank you PerlJam 

[14:55] *** MindosCheng left
[14:57] *** MindosCheng joined
[15:00] *** am0c left
[15:02] *** MindosCheng left
[15:03] *** MindosCheng joined
[15:05] *** justatheory joined
[15:09] *** domidumont left
[15:10] *** MindosCheng left
[15:10] *** MindosCheng joined
[15:15] *** Eevee left
[15:24] *** Eevee joined
[15:25] *** mj41 left
[15:26] <moritz> tadzik: mechanics usually implies dynamics (and only the engineers study statics :-)

[15:30] *** ymasory joined
[15:31] *** dayangkun_ left
[15:34] *** jimmy1980 joined
[15:35] *** jaffa4 joined
[15:37] <jaffa4> hi

[15:39] *** cotto joined
[15:41] *** bacek joined
[15:44] *** noganex joined
[15:48] *** noganex left
[15:54] *** noganex joined
[15:55] *** ggoebel joined
[15:57] *** Trashlord left
[15:58] *** plobsing joined
[16:02] *** JimmyZ_ joined
[16:05] *** nnunley left
[16:05] *** nnunley joined
[16:05] <jaffa4> coud not find compiler module for the language perl6

[16:05] *** am0c joined
[16:07] <sbp> jaffa4: http://rakudo.org/ is a perl6 compiler to parrot bytecode

[16:07] <sbp> not sure what you mean by module though. module of what system?

[16:09] *** spq joined
[16:09] <jaffa4> I have something like ahat: perl d:\m\perlscripts\time.pl parrot -y -v -r -L C:\parrot-3.2.0\lib\parrot\languages\rakudo\ D:\m\p6\pirout.pbc

[16:10] <jaffa4> This is an error message given back by parrot.

[16:10] *** awwaiid joined
[16:11] <moritz> how did you build and install rakudo?

[16:11] <jaffa4> downloaded the binaries

[16:11] *** kaare_ left
[16:11] <jaffa4> the win32 binaries

[16:11] <jaffa4> perl.exe works

[16:12] <jaffa4> just I want to run the generated pbc file

[16:12] <jaffa4> to see how fast an example in itself

[16:12] <moritz> and did you install it?

[16:12] <jaffa4> ran two installers

[16:12] <moritz> what two installers?

[16:12] <jaffa4> for parrot and rakudo, into the same directory

[16:13] <moritz> be specific please

[16:13] <moritz> and how did you generate the .pbc?

[16:14] <jaffa4> setup-parrot-3.2.0.exe

[16:14] <jaffa4> setup-parrot-3.2.0.exe-raukdo-39.exe

[16:14] <jaffa4> setup-parrot-3.2.0.exe-rakudo-39.exe

[16:14] *** Trashlord joined
[16:14] <jaffa4> THis line perl6 --target=pir  -oD:\m\p6\pirout.pir  D:\m\p6\array.p6

[16:15] <jaffa4> and parrot -L C:\parrot-3.2.0\lib\parrot\languages\rakudo\ -o D:\m\p6\pirout.pbc    D:\m\p6\pirout.pir 

[16:15] <jaffa4> now do you know everything, moritz?

[16:16] <moritz> jaffa4: of course I don't know everything

[16:16] <jaffa4> do you have all information what you need now?

[16:16] <moritz> I just tried the equivalent on linux, and it works there

[16:16] <jaffa4> same flags?

[16:18] <PerlJam> jaffa4: What directory are you in when you execute the line that's giving your grief?

[16:18] <PerlJam> s/your/you/

[16:18] <moritz> no, i left out all the options to parrot except -o

[16:19] <jaffa4> in c:\parrot-3.2.0\bin

[16:20] <moritz> and it works for me outside of the install location too

[16:20] <PerlJam> yeah. I dunno

[16:20] <PerlJam> perhaps the windows installer didn't install everything?

[16:21] <jaffa4> possible

[16:21] <jaffa4> WHat is a compiler module?

[16:21] <jaffa4> How can I recognise it?

[16:21] <jaffa4> WHat is its extension?

[16:23] *** risou joined
[16:23] <moritz> I guess it's just a .pbc file named languages/$lang/$lang.pbc in the parrot installation

[16:24] <PerlJam> jaffa4: does it work if you run it from whatever directory has the perl6.pbc file?

[16:26] <jaffa4> no, it does not.

[16:30] <jaffa4> ok, I am rebuilding it from the source

[16:32] *** dakkar left
[16:41] *** colomon left
[16:42] *** wooden joined
[16:43] *** pmurias joined
[16:49] *** birdwindupbird left
[16:50] <sorear> good * #perl6

[16:50] <phenny> sorear: 07:59Z <moritz> tell sorear to run t/spec/S06-multi/type-based.t in niecza - 'Unhandled exception: Unable to resolve method ast in class Any' at /home/moritz/p6/niecza/src/NieczaActions.pm6 line 212 (NieczaActions NieczaActions.mangle_longname @ 5) (seems to be triggered by param parsing code)

[16:50] <phenny> sorear: 08:00Z <moritz> tell sorear that bug seems to prevent compilation of most multi-related test files

[16:53] <sorear> is jaffa4 |newbie|?

[16:53] *** colomon joined
[16:54] <moritz> seems like

[16:54] <moritz> .oO( the eternal newbie )

[16:56] <sbp> shame that "newbie" as a word has so many negative connotations these days

[16:56] <sorear> jaffa4: Don't try to benchmark Rakudo, it will only end in tears.

[16:56] <sorear> sbp: not here!

[16:56] <sbp> yep, I know. perl6 could do with as many as it can get!

[16:56] <sbp> but it's like hacker amongst enthusiasts vs. use in the media

[16:57] <sbp> creates this ever-so-slightly-annoying usage rift...

[16:57] <jaffa4> you are everywhere, you are omnipotent.

[16:57] * sorear hugs sbp

[16:57] <jaffa4> sorear, have you cried a lot?

[16:58] <jaffa4> WHat is your experience?

[16:59] <sorear> rakudo was never designed for runtime performance

[16:59] <jaffa4> I knew about compile time performance

[16:59] <jaffa4> not even run-time performance?

[16:59] <jaffa4> WHat about nietze?

[17:00] <pmurias> * niecza

[17:00] <jaffa4> niecza: print 4*4

[17:00] <p6eval> niecza v4-32-gbfe938e: OUTPUT«16»

[17:01] <moritz> it has a horrible startup time, but it runs quite fast

[17:01] <jaffa4> niecza: my $g= print $g*$g

[17:01] <p6eval> niecza v4-32-gbfe938e: OUTPUT«Unhandled exception: Unable to resolve method Numeric in class Any␤  at  line 0 (ExitRunloop @ 0)␤  at /tmp/yhCmgRZflt line 1 (MAIN mainline @ 1)␤  at /home/p6eval/niecza/lib/CORE.setting line 1277 (CORE C535_ANON @ 2)␤  at /home/p6eval/niecza/lib/CORE.setting line

[17:01] <p6eval> ..1278 (CORE modul…

[17:01] <jaffa4> niecza: my $g=3; print $g*$g

[17:01] <p6eval> niecza v4-32-gbfe938e: OUTPUT«9»

[17:02] <jaffa4> IS it possible to avoid the startup time?

[17:02] <jaffa4> niecza: 4 ==> my $g;

[17:02] <p6eval> niecza v4-32-gbfe938e: OUTPUT«Unhandled exception: Feed ops NYI␤  at /home/p6eval/niecza/lib/CORE.setting line 388 (CORE die @ 2)␤  at /home/p6eval/niecza/lib/CORE.setting line 1180 (CORE infix:<==>> @ 2)␤  at /tmp/33RZyULE2H line 1 (MAIN mainline @ 1)␤  at /home/p6eval/niecza/lib/CORE.setting line

[17:02] <p6eval> ..1277 (CORE C…

[17:02] <pmurias> sorear: if niecza was kept in a persistent process what would the startup performance be?

[17:03] *** ggoebel left
[17:03] <jaffa4> perl6: 4 ==> my $g;

[17:04] <p6eval> niecza v4-32-gbfe938e: OUTPUT«Unhandled exception: Feed ops NYI␤  at /home/p6eval/niecza/lib/CORE.setting line 388 (CORE die @ 2)␤  at /home/p6eval/niecza/lib/CORE.setting line 1180 (CORE infix:<==>> @ 2)␤  at /tmp/sJQaOE4Lzd line 1 (MAIN mainline @ 1)␤  at /home/p6eval/niecza/lib/CORE.setting line

[17:04] <p6eval> ..1277 (CORE C…

[17:04] <p6eval> ..rakudo 4bf132: OUTPUT«Method 'push' not found for invocant of class ''␤  in main program body at line 22:/tmp/kXcwb31Ppc␤»

[17:04] <p6eval> ..pugs: OUTPUT«*** ␤    Unexpected " my"␤    at /tmp/iTY57VJgJz line 1, column 6␤»

[17:04] <jaffa4> perl6: my $g;4 ==> $g;

[17:04] <p6eval> pugs: OUTPUT«*** ␤    Unexpected " $g"␤    at /tmp/oCHckmqV7d line 1, column 12␤»

[17:04] <p6eval> ..niecza v4-32-gbfe938e: OUTPUT«Unhandled exception: Feed ops NYI␤  at /home/p6eval/niecza/lib/CORE.setting line 388 (CORE die @ 2)␤  at /home/p6eval/niecza/lib/CORE.setting line 1180 (CORE infix:<==>> @ 2)␤  at /tmp/34csMjAIsk line 1 (MAIN mainline @ 1)␤  at /home/p6eval/niecza/lib/CORE.setting

[17:04] <p6eval> ..line 1277 (CORE C…

[17:04] <p6eval> ..rakudo 4bf132: OUTPUT«Method 'push' not found for invocant of class ''␤  in main program body at line 22:/tmp/5LdWaM6ovc␤»

[17:04] *** ggoebel joined
[17:06] *** ggoebel left
[17:12] <jaffa4> well, I have different error now

[17:12] <jaffa4> Could not load oplib `perl6_ops'

[17:13] <moritz> did 'make test' succeed?

[17:13] <jaffa4> yes

[17:14] *** JimmyZ_ left
[17:15] <colomon> rakudo: 4 ==> my @g

[17:15] <p6eval> rakudo 4bf132:  ( no output )

[17:16] <colomon> rakudo: 4 ==> my @g; say :@g.perl

[17:16] <p6eval> rakudo 4bf132: OUTPUT«"g" => [4]␤»

[17:17] <jaffa4> rakudo: 4 ==> print 

[17:17] <p6eval> rakudo 4bf132: OUTPUT«4»

[17:17] *** am0c left
[17:20] *** MayDaniel left
[17:24] <sorear> jaffa4: did you move Perl6 after compiling it?

[17:24] <jaffa4> no

[17:26] <sorear> jaffa4: niecza has limited support for avoiding compilation time; try "run\Niecza.exe -c -e 'say "Hello, world"'" and then "obj\MAIN.exe"

[17:28] <jaffa4> what do you mean limited support?

[17:30] <sorear> well if you want to save the output you need to copy files manually

[17:30] *** PZt left
[17:32] <jaffa4> what output?

[17:33] *** Chillance joined
[17:33] <sorear> obj\MAIN.exe, obj\CORE.dll, obj\Kernel.dll, obj\CrossDomainReceiver.dll, I think those are the only ones you need to save

[17:33] <sorear> unless you're using modules

[17:34] <sorear> "output" = the .exe and .dll files

[17:34] <jaffa4> ok

[17:34] <sorear> they get overwritten when you run niecza, so if you want to compile an app, you need to save them

[17:34] <jaffa4> you mean there are generated

[17:34] <jaffa4> and then there is no need for compilation

[17:37] *** PZt joined
[17:37] <sorear> niecza: multi foo(5) { }

[17:37] <p6eval> niecza v4-32-gbfe938e: OUTPUT«Unhandled exception: Unable to resolve method ast in class Any␤  at /home/p6eval/niecza/src/NieczaActions.pm6 line 212 (NieczaActions NieczaActions.mangle_longname @ 5)␤  at /home/p6eval/niecza/src/NieczaActions.pm6 line 207 (NieczaActions NieczaActions.simple_longname

[17:37] <p6eval> ..@ 2)␤  at /h…

[17:39] <pmurias> sorear: do you know haskell?

[17:39] *** Mowah left
[17:43] *** Mowah joined
[17:44] *** PZt left
[17:45] *** PZt joined
[17:46] *** plobsing left
[17:52] <sorear> moritz: that's your type-based.t problem ^^

[17:52] <sorear> pmurias: yes

[17:53] <moritz> niecza: multi foo(Int $ where 5 ) {  }

[17:53] <p6eval> niecza v4-32-gbfe938e: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Any()In parameter declaration, typename 'Int' must be predeclared (or marked as declarative with :: prefix) at /tmp/u8IuoZwH7U line 1:␤------> [32mmulti foo(Int[33m⏏[31m $ where 5 ) {  }[0m␤␤Parse failed␤␤»

[17:53] * sorear tries to find the Rakudo code for parsing signatues

[17:54] <moritz> niecza: multi foo(Int $x where 5) { }

[17:54] <p6eval> niecza v4-32-gbfe938e: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Any()In parameter declaration, typename 'Int' must be predeclared (or marked as declarative with :: prefix) at /tmp/Bfpg2i91fk line 1:␤------> [32mmulti foo(Int[33m⏏[31m $x where 5) { }[0m␤␤Parse failed␤␤»

[17:54] <moritz> iirc rakudo stole from STD.pm

[17:54] <moritz> niecza: multi foo(Int $x) { }

[17:54] <p6eval> niecza v4-32-gbfe938e: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Any()In parameter declaration, typename 'Int' must be predeclared (or marked as declarative with :: prefix) at /tmp/Zv_AOQdF3d line 1:␤------> [32mmulti foo(Int[33m⏏[31m $x) { }[0m␤␤Parse failed␤␤»

[17:54] <sorear> niecza doesn't have an "Int" type yet

[17:54] <moritz> oh.

[17:54] <sorear> "where" is also NYI

[17:54] <moritz> niecza: say 3.WHAT

[17:54] <p6eval> niecza v4-32-gbfe938e: OUTPUT«Unhandled exception: System.InvalidCastException: Cannot cast from source type to destination type.␤  at Niecza.CtxStrNativeNum2Str.Get (Niecza.Variable obj) [0x00000] in <filename unknown>:0 ␤  at CORE.C259_List_2Ejoin (Niecza.Frame ) [0x00000] in <filename unknown>:0

[17:54] <sorear> as is ::T $x, which I don't even understand how it works

[17:54] <p6eval> ..␤  at Niecza…

[17:55] <sorear> niecza: say 3.WHAT === Num

[17:55] <p6eval> niecza v4-32-gbfe938e: OUTPUT«Bool::True␤»

[17:55] <moritz> ::T $x  is basically   my ::T := $x.WHAT;

[17:56] <sorear> there are ripple effects - most of the rest of the system can't handle typenames being variables

[17:56] *** mtk left
[17:56] <sorear> the simplest case being something like (::T $x, T $y) -- how does MMD see the type of $y?

[17:57] <jaffa4> perl6:  ms:g/ (\S+:) <rocks> /

[17:57] <p6eval> niecza v4-32-gbfe938e: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Unsupported form of term:name at /tmp/6uX5qmOX2s line 1:␤------> [32mms:g[33m⏏[31m/ (\S+:) <rocks> /[0m␤␤Any()Bogus term at /tmp/6uX5qmOX2s line 1:␤------> [32mms:g/ (\S+[33m⏏[31m:) <rocks> /[0m␤␤Undeclared name:␤     'S' used at

[17:57] <p6eval> ..line Any()1␤Unde…

[17:57] <p6eval> ..rakudo 4bf132: OUTPUT«===SORRY!===␤Adverb 'g' not allowed on m at line 22, near ""␤»

[17:57] <p6eval> ..pugs: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.16/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HANDLE>' trapped by operat…

[17:58] <jaffa4> perl6:  "rrrr" ~~ ms:g/ (\S+:) <rocks> /

[17:58] <p6eval> niecza v4-32-gbfe938e: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Unsupported form of term:name at /tmp/HeXHGe8ruo line 1:␤------> [32m"rrrr" ~~ ms:g[33m⏏[31m/ (\S+:) <rocks> /[0m␤␤Any()Bogus term at /tmp/HeXHGe8ruo line 1:␤------> [32m"rrrr" ~~ ms:g/ (\S+[33m⏏[31m:) <rocks> /[0m␤␤Undeclared

[17:58] <p6eval> ..name:␤ 'S' used…

[17:58] <p6eval> ..rakudo 4bf132: OUTPUT«===SORRY!===␤Adverb 'g' not allowed on m at line 22, near ""␤»

[17:58] <p6eval> ..pugs: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.16/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HANDLE>' trapped by operat…

[17:59] <sorear> the error message should make it clear.  ms:g is not going to work.

[17:59] *** mtk joined
[18:01] *** mkramer joined
[18:01] <sorear> to really benefit from MMD, niecza will need roles and the numeric type ladder soon

[18:02] <moritz> i guess that the lack of Int type prevents most MMD tests in the spectest suite to run

[18:02] <moritz> because most people consider it (or at leat a faked, non-bigint version of it) "easy" for a Perl 6 compiler

[18:06] *** DWSR joined
[18:06] <DWSR> Is P6 production ready?

[18:07] <moritz> "no", for most values of "production"

[18:07] <DWSR> Cool.

[18:07] <DWSR> iirc, 6 is supposed to be getting some OO enhancements, right?

[18:08] <DWSR> For some reason, the site is not working for me.

[18:08] <DWSR> So I figured I'd ask here

[18:08] <moritz> which one? perl6.org?

[18:08] <moritz> yes, perl 6 has a pretty cool object model, and rakudo implements rather big parts of it

[18:09] <moritz> it does classes, roles, parametric roles, introspection, class construction through the metaclass

[18:09] <DWSR> Huzzah

[18:09] <moritz> multi method

[18:10] *** araujo left
[18:10] <PerlJam> DWSR: moritz meant to say,  "P6 is production ready for some small values of 'production'"    :-)

[18:10] <moritz> rakudo: role B { method c() { say "hello DWSR" } }; class A does B { method b() { self.c } }; A.new.b

[18:11] <p6eval> rakudo 4bf132: OUTPUT«hello DWSR␤»

[18:11] * PerlJam fills moritz's glass halfway to empty

[18:12] <moritz> rakudo: class A { has $.a = 3; has $.b = 5; has $.c = $.a * $.b }; say A.new(a => 2).c

[18:12] <p6eval> rakudo 4bf132: OUTPUT«10␤»

[18:12] <jaffa4> introspection?

[18:12] <moritz> this feature is quite nice

[18:12] <DWSR> Anyway, nifty.

[18:12] <DWSR> Thanks for the info.

[18:12] <moritz> you're welcome

[18:12] *** DWSR left
[18:13] *** mtk left
[18:13] *** araujo joined
[18:13] *** araujo left
[18:13] *** araujo joined
[18:15] <tadzik> moritz: I've updated my proposal to consider the exams, would you mind taking a critic look at it before I update it on Melange?

[18:15] <moritz> tadzik: URL?

[18:15] <sorear> niecza: my token foo:abc { <[a..z]>+ }; my token foo:num { \d+ }; say "--abc--123de----".comb(/<&foo>/).perl

[18:15] <p6eval> niecza v4-32-gbfe938e: OUTPUT«["abc", "123", "de"]␤»

[18:16] <sorear> how much of a feature is this?

[18:16] <moritz> wow, that's ncie

[18:16] <moritz> sorear++

[18:16] *** araujo left
[18:16] <tadzik> moritz: https://gist.github.com/892249

[18:16] <tadzik> looks like Github can't do gist revision diffs (yet)

[18:17] <tadzik> moritz: http://wklej.org/id/508809/ the diff alone

[18:18] *** mtk joined
[18:18] <moritz> tadzik: looks fine

[18:18] <moritz> (I've cloned the gist locally and ran 'git show' there :-)

[18:19] *** plobsing joined
[18:20] <tadzik> yeah, sane behaviour :)

[18:20] <tadzik> ok, updating

[18:21] *** araujo joined
[18:21] <tadzik> done, whew

[18:27] *** rdesfo joined
[18:29] *** icwiener joined
[18:33] *** MayDaniel joined
[18:35] <dalek> niecza: 58c0836 | pmurias++ | hoopl/ (2 files):

[18:35] <dalek> niecza: [hoopl] seperate loading the optree into a seperate module

[18:35] <dalek> niecza: review: https://github.com/sorear/niecza/commit/58c08364f4

[18:41] <dalek> niecza: bfeeb72 | sorear++ | src/NieczaFrontendSTD.pm6:

[18:41] <dalek> niecza: Prevent redundant categorical generation in CORE (speeds up CORE parse by 50%)

[18:41] <dalek> niecza: review: https://github.com/sorear/niecza/commit/bfeeb72864

[18:41] <dalek> niecza: a740a32 | sorear++ | src/niecza:

[18:41] <dalek> niecza: Refactor categoricals allowing user-defined postcircumfixes

[18:41] <dalek> niecza: review: https://github.com/sorear/niecza/commit/a740a32842

[18:47] *** [particle]1 left
[18:47] *** ggoebel joined
[18:48] *** [particle] joined
[18:49] <pmurias> looking up an lexical is side-effect free?

[18:51] *** envi left
[18:52] *** _twitch left
[18:53] <sorear> pmurias: depends on what you mean by "looking up"

[18:54] <tadzik> sorear: remember the locale issue?

[18:54] <tadzik> my dot being comma, and so

[18:54] <sorear> tadzik: oh yeah

[18:55] <dalek> niecza: 290b117 | sorear++ | src/niecza:

[18:55] <dalek> niecza: Implement user-defined circumfix operators

[18:55] <dalek> niecza: review: https://github.com/sorear/niecza/commit/290b117776

[18:56] <pmurias> sorear: scopedlex nam op

[18:56] *** jaffa4 left
[18:57] <sorear> pmurias: with 1 arg it's side effect free

[18:57] <tadzik> sorear: is it fixable inside niecza, or the user involvement will always be necessary?

[18:58] <sorear> tadzik: it is fixable

[19:02] <pmurias> tadzik: you use polish locale?

[19:02] *** MayDaniel_ joined
[19:02] *** spq left
[19:05] *** MayDaniel left
[19:05] *** Mowah left
[19:07] <tadzik> pmurias: aye

[19:07] <tadzik> I'm still looking for a "let me type ą in urxvt but don't translate apps" set of variables :)

[19:08] <sorear> tadzik: how do you type that in urxvt?

[19:08] <tadzik> sorear: right alt + a

[19:08] <tadzik> it's in my keyboard layout, which is a modified colemak

[19:09] *** Su-Shee left
[19:09] <pmurias> tadzik: i have en_US.UTF-8 for everything

[19:09] <pmurias> and i have a polish keyboard layout

[19:09] <tadzik> hmm

[19:10] <tadzik> heh, somebody submitted a GSoC proposal 150 seconds before the deadline

[19:10] <sorear> tadzik: how do you set keyboard layouts like that?

[19:10] *** pjcj left
[19:10] <tadzik> sorear: `setxkbmap colemakpl`, having colemakpl in my /usr/share/somewhere

[19:11] *** rdesfo left
[19:13] *** nymacro left
[19:17] *** Su-Shee joined
[19:17] <tadzik> sorear: btw, the backtrace if full of   at /home/stefan/rel/niecza-reboot/src/STD.pm6 line 812 (STD STD.dec_number @ 32)

[19:18] <tadzik> is that something hard-coded?

[19:20] <sorear> what, the path?

[19:21] <flussence_> ("ą" is AltGr + ['+', 'a'] on my en_GB layout; all the symbol keys are assigned compose functions. Never seen it documented anywhere though.)

[19:22] <sorear> flussence_: what is the press/release sequence for that?

[19:23] <flussence_> hold altgr+shift, press the =/+ key, press a

[19:24] <sorear> does nothing in en_US :(

[19:25] <flussence_> maybe it's a case of different keyboard layouts' code written by different people...

[19:26] <tadzik> sorear: yeah

[19:27] <tadzik> AltGr with + is × for me

[19:27] <tadzik> I just hold AltGr, then press a

[19:27] <sorear> tadzik: the paths for backtraces are compiled in at compile time, so it's telling you where I had STD.pm6 when I generated niecza-4.zip

[19:28] <tadzik> sorear: what happens if you do `setxkbmap pl` before?

[19:28] <tadzik> sorear: I see

[19:28] <sorear> whee, 'LC_ALL=pl_PL' breaks niecza

[19:28] <flussence_> even more annoying is that gtk has ctrl+shift+u, urxvt has something that I can't figure out but seems to be an extension, and Qt apparently assigns unused altgr combinations randomly.

[19:29] <flussence_> sorear: thousand/decimal separator bug?

[19:29] <sorear> flussence_: yeah tadzik's been having decimal separator issues

[19:29] <sorear> I can now reproduce it

[19:30] <sorear> flussence_: (urxvt) hold down control-shift and type, say, 3080

[19:31] <tadzik> flussence_: yeah, I don't know if it's possible to use emacs-style keyboard shortcuts in Qt

[19:32] <tadzik> sorear: oh, ideograms

[19:35] <pmurias> sorear: when manipulating nam if i want to change foo(bar()) into tmp=bar() and foo(tmp) i should use let?

[19:36] <sorear> yes

[19:36] *** mkramer left
[19:36] <sorear> for hoopl it would probably be better to turn nam into register code in the parser

[19:36] <sorear> hoopl looks like it's really designed for register/SSA code

[19:37] <sorear> the fact that nam uses tree code is mostly because it's very hard to convert SSA into compact code for stack machines like the JVM and CLR

[19:38] <pmurias> by parser you mean the niecza-hoopl loader or part of niecza?

[19:40] <pmurias> sorear: i'm converting the tree form into register form as the tree form seems hard to do optimalisations on

[19:41] <pmurias> i won't do SSA as it was invented in opposition to dataflow analysis

[19:41] *** stkowski joined
[19:41] <pmurias> and it's mainly usefull for doing simple optimalisations fast (like a C compiler would do)

[19:41] <pmurias> i implemented the transformation to SSA in mildew once

[19:46] <sorear> hrm, en_GB layout *is* completely different...

[19:46] *** risou left
[19:48] *** rdesfo1 joined
[19:48] <pmurias> sorear: it's slightly different

[19:49] <pmurias> but really annoying to someone used to the us one

[19:49] <pmurias> s/to/for/

[19:49] <sorear> the letters are the same

[19:50] <benabik> sorear: But the real question is: is all the punctuation needed for perl the same?

[19:50] <sorear> benabik: no

[19:50] <benabik> Then it's really annoying. :)

[19:51] *** proller joined
[19:52] * jnthn can't Perl on a US keyboard. It's all wrong. :P

[19:53] <jnthn> (I suspect that the same feeling would occur the other way around.)

[19:53] <sorear> After today I won't be able to either. :D

[19:53] <jnthn> :)

[19:53] <jnthn> sorear: Oh?

[19:53] <jnthn> sorear: Switching keyboard layout?

[19:54] *** pmurias left
[19:54] <sorear> I kid, but only slightly.  en_GB can get guillemots without compose-key trickery

[19:57] <jnthn> :)

[19:58] *** pmurias joined
[20:00] *** Rotwang joined
[20:03] *** masak joined
[20:03] <masak> oh hai, zebras

[20:03] <tadzik> oh hai maska

[20:03] <sorear> hello masaka!

[20:04] <tadzik> . o O ( hello roreas and datzik )

[20:05] <jnthn> Videl som masaka dnes :)

[20:07] *** daemon left
[20:08] <pmurias> sorear: if i convert nam to a register based form how should i turn it back to something that can be compiled to .net efficently?

[20:10] <sorear> pmurias: oh, I thought hoopl was something totally separate

[20:10] <sorear> hmm

[20:10] <sorear> I think the only good way is to map registers to .net locals

[20:10] <sorear> niecza: my token foo:abc { <[a..z]>+ }; my token foo:num { \d+ }; say "--abc--123de----".comb(/<&foo>/).perl # for masak

[20:11] <p6eval> niecza v4-36-g290b117: OUTPUT«["abc", "123", "de"]␤»

[20:11] <sorear> TimToady: Under what circumstances should Str/Num conversions be locale sensitive?

[20:11] <masak> sorear++!

[20:13] <pmurias> sorear: totally seperate to what?

[20:13] *** MayDaniel_ left
[20:14] <pmurias> sorear: doesn't the CPS transformation stop you from using the stack much?

[20:17] <pmurias> sorear: is using .net local variables slower or does the jit handle them efficently?

[20:19] *** Spogg joined
[20:19] <Spogg> Spogg; say 42 + 8

[20:19] <sorear> pmurias: registers which are live across cpscalls need to be spilled to the frame

[20:19] <sorear> perl6: say 42 + 8

[20:19] <p6eval> pugs, rakudo 4bf132, niecza v4-36-g290b117: OUTPUT«50␤»

[20:20] <Spogg> Spogg: say 42 + 8

[20:20] <Spogg> Spogg: say 42 + 8

[20:20] <Spogg> perl6: say 42 + 8

[20:20] <p6eval> pugs, rakudo 4bf132, niecza v4-36-g290b117: OUTPUT«50␤»

[20:21] <Spogg> perl6: say 55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555 + 555555555555555555555555555555555555555555555555555555555555555555555465783213546254356452146546

[20:22] <p6eval> rakudo 4bf132: OUTPUT«6.02556267734054e+17␤»

[20:22] <p6eval> ..pugs: OUTPUT«55555555555555555555555555555556111111111111111111111111111111111111111111111111111111111111111111111021338769101809912007702101␤»

[20:22] <p6eval> ..niecza v4-36-g290b117: OUTPUT«5.55555555555556E+127␤»

[20:22] <pmurias> sorear: so is the .net niecza backend register based internally?

[20:23] <Spogg> fuck

[20:23] <Spogg> fdds

[20:23] <Spogg> fsd

[20:23] <Spogg> fs

[20:23] <Spogg> df

[20:23] <Spogg> sd

[20:23] <Spogg> f

[20:23] <Spogg> sd

[20:23] <Spogg> fds

[20:23] <Spogg> f

[20:23] <Spogg> s

[20:23] <Spogg> df

[20:23] *** Spogg left
[20:24] <masak> ...right.

[20:25] <flussence_> ooh, his ISP's abuse page specifically has an "IRC abuse" option :)

[20:26] <masak> ooh

[20:29] <sorear> pmurias: the .net backend is stack based, but the JIT turns it into register code

[20:33] <pmurias> so using locals a lot would just mean the bytecode would be bigger?

[20:34] <sorear> I think so, but it depends on how good your spiller is

[20:34] <sorear> the CLRBackend spiller actually reorders code in some cases to improve spill quality, it's a rather large win

[20:35] <sorear> eg foo($x, bar()) will delay the $x so that it doesn't have to be spilled

[20:35] <masak> alpha: my constant preoccupation = 42; say preoccupation

[20:35] <p6eval> alpha : OUTPUT«Malformed declaration at line 10, near "constant p"␤in Main (file <unknown>, line <unknown>)␤»

[20:36] <sorear> perl6: my constant preoccupation = 42; say preoccupation

[20:36] <p6eval> pugs: OUTPUT«*** ␤    Unexpected "preoccupation"␤    expecting ":" or "("␤    at /tmp/kaqNNJKdv1 line 1, column 13␤»

[20:36] <p6eval> ..rakudo 4bf132: OUTPUT«===SORRY!===␤Constant type declarator not yet implemented at line 22, near "= 42; say "␤»

[20:36] <p6eval> ..niecza v4-36-g290b117: OUTPUT«42␤»

[20:36] <masak> niecza++

[20:37] <sorear> rakudo: say Parcel.list.perl

[20:37] <p6eval> rakudo 4bf132: OUTPUT«()␤»

[20:37] <pmurias> sorear: where in code is the spiller implemented?

[20:38] <sorear> pmurias: the heart is in CpsOp.Primitive at line 2075

[20:39] <sorear> that introduces lets where needed to avoid having anything on the eval stack across a cps call

[20:44] <pmurias> what's a zyg?

[20:45] <moritz> a child

[20:45] <masak> short for 'zygote'.

[20:45] <moritz> a larryism

[20:46] * pmurias hates all the strange names from gimme5

[20:47] <masak> it's a $*HIGHMESS? :P

[20:48] <sorear> rakudo: say "abc".WHAT

[20:48] <p6eval> rakudo 4bf132: OUTPUT«Str()␤»

[20:51] *** icwiener left
[20:53] *** ymasory left
[20:55] *** icwiener joined
[20:57] *** Holy_Cow left
[21:03] <dalek> niecza: 36c239a | sorear++ | / (5 files):

[21:03] <dalek> niecza: Fix locale sensitivity of JSYNC et al, fix undef handling in contexts

[21:03] <dalek> niecza: review: https://github.com/sorear/niecza/commit/36c239a3dc

[21:04] <tadzik> yay

[21:04] *** leprevost left
[21:06] <sorear> phenny: tell TimToady does it ever make sense for 1.5 eq "1,5" in Perl 6?  When should locales be honored?

[21:06] <phenny> sorear: I'll pass that on when TimToady is around.

[21:06] <tadzik> sorear: I'll still need to workaround the included, precompiled niecza

[21:08] <tadzik> LC_ALL="C" make doesn't work

[21:11] *** rdesfo1 left
[21:12] <flussence_> export LC_ALL="C" ?

[21:12] <flussence_> I think sometimes the var doesn't get passed to subprocesses for whatever reason...

[21:12] <tadzik> same

[21:12] <tadzik> and after that `locale` gives ok results

[21:13] <tadzik> I mean, everything's "C"

[21:13] <flussence_> hrm

[21:15] <sorear> tadzik: yes that won't work fully until the next precompiled release

[21:16] <sorear> tadzik: also the .nam files are likely corrupted from the unsuccessful attempt

[21:17] <sorear> this change, by itself, still requires LC_ALL=C when running the compiler

[21:17] <sorear> it only allows to avoid it for precompiled code

[21:17] <tadzik> see above, it doesn't work for me

[21:17] <sorear> ie "mono run/Niecza.exe -c test.pl; LC_ALL=pl_PL mono obj/MAIN.exe" works for me now

[21:21] <TimToady> the point of "zyg" is to sort all then end-weight child nodes to the end of the list of hash keys

[21:21] <phenny> TimToady: 21:06Z <sorear> tell TimToady does it ever make sense for 1.5 eq "1,5" in Perl 6?  When should locales be honored?

[21:21] * TimToady hates locales very much

[21:23] * TimToady thinks locale-based calls should contain "locale" somewhere in the function names

[21:23] * pyrimidine happens to like 'zyg'

[21:23] * pyrimidine also happens to be a biologist

[21:24] * flussence_ likes gettext's _() for the low effort of adding it to code

[21:24] <sorear> do you think it's reasonable to legislate that (1/2) ~~ /\x2E/ the world around?

[21:25] <TimToady> yes, I believe in cultural imperialism to that extent

[21:26] <flussence_> formatting it for regional human consumption should be an extra thing, like html-encoding and stuff like that.

[21:26] <moritz> rakudo: say chr(0x2e)

[21:26] <p6eval> rakudo 4bf132: OUTPUT«.␤»

[21:26] <moritz> that's what I thought :-)

[21:27] <TimToady> at most, I think locale-based computing should be restricted to scopes that declare "use locale"

[21:27] <moritz> ... and that doesn't need to be a core pragma :-)

[21:27] <flussence_> there's no shortage of external libs to format numbers, and they usually come with language translation stuff since it's not much use doing it halfway.

[21:28] <flussence_> core stuff should do machine-readable output for that reason

[21:29] <TimToady> note also that "123 456,78" is TTIAR :)

[21:31] <flussence_> or to put it another way, do it in a way that minimises the number of developers who'll want to strangle you.

[21:33] *** MayDaniel joined
[21:33] <sorear> tadzik: looks like I can't put out a bootstrap quite that easily, I seem to have introduced a bug somewhere and the bootstrapped niecza thinks "self" is a syntax error

[21:34] *** bluescreen10 left
[21:47] <sorear> TimToady: the way STD generates declarative prefix DFAs with 5000+ states bothers me a bit...

[21:47] <sorear> not sure what to do about it though

[21:56] *** MayDaniel left
[21:59] *** MayDaniel joined
[22:02] *** ggoebel left
[22:05] *** pmurias left
[22:05] *** Rotwang left
[22:09] *** pjcj joined
[22:17] *** cookys joined
[22:18] *** Rotwang joined
[22:23] <masak> 'night, #perl6

[22:23] *** masak left
[22:23] *** PacoLinux joined
[22:31] *** PacoLinux left
[22:32] *** PacoLinux joined
[22:37] *** MayDaniel left
[22:39] *** pmurias joined
[22:46] <dalek> niecza: d9bb470 | sorear++ | test2.pl:

[22:46] <dalek> niecza: Add tests for custom (post)circumfixes

[22:46] <dalek> niecza: review: https://github.com/sorear/niecza/commit/d9bb470445

[22:46] <dalek> niecza: 3c51536 | sorear++ | / (4 files):

[22:46] <dalek> niecza: Update bootstrap for locale bug fix

[22:46] <dalek> niecza: review: https://github.com/sorear/niecza/commit/3c5153649b

[22:46] <sorear> tadzik: I just had a successful build with LC_ALL=pl_PL

[22:47] *** VXZ left
[22:47] *** Chillance left
[22:57] *** silent_h__ joined
[22:57] <sorear> tadzik: any luck?

[23:03] *** icwiener left
[23:10] *** silent_h__ left
[23:19] *** Rotwang left
[23:20] *** whiteknight joined
[23:37] *** dayangkun_ joined
