[00:03] <dalek> nqp/ctmo: b33dc05 | moritz++ | / (3 files):

[00:03] <dalek> nqp/ctmo: first shot at removing P6Regex.pir. Diws with "Can only use get_how on a RakudoObject"

[00:03] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/b33dc053e9

[00:03] <dalek> nqp/ctmo: aa87ead | jonathan++ | src/Regex/P6Regex/Grammar.pm:

[00:03] <dalek> nqp/ctmo: Need to still use the HLL library; was missed when removing the P6Regex PIR file.

[00:03] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/aa87eadde6

[00:03] <dalek> nqp/ctmo: 1eb4e1b | jonathan++ | build/Makefile.in:

[00:03] <dalek> nqp/ctmo: Another round of Makefile changes to work towards getting things working again after removing P6Regex.pir.

[00:03] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/1eb4e1b4f3

[00:03] <dalek> nqp/ctmo: 9ace6d6 | jonathan++ | src/Regex/P6Regex/ (2 files):

[00:03] <dalek> nqp/ctmo: Need to use block form of packages when there's multiple in a file.

[00:03] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/9ace6d652d

[00:03] <dalek> nqp/ctmo: d014f94 | jonathan++ | src/Regex/P6Regex/Compiler.pm:

[00:03] <dalek> nqp/ctmo: Work around a MAIN bug.

[00:03] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/d014f94f99

[00:03] <dalek> nqp/ctmo: 4460cea | jonathan++ | src/Regex/P6Regex/Compiler.pm:

[00:03] <dalek> nqp/ctmo: Move regex compiler init to the right place; now all tests pass that pass in the ctmo branch.

[00:03] *** pecastro joined
[00:03] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/4460cea99f

[00:03] <dalek> nqp/ctmo: 9cdb417 | jonathan++ | src/NQP/Actions.pm:

[00:03] <dalek> nqp/ctmo: Fix MAIN bug.

[00:03] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/9cdb417836

[00:03] <dalek> nqp/ctmo: e3036b0 | jonathan++ | src/stage0/ (6 files):

[00:03] <dalek> nqp/ctmo: Update bootstrap with MAIN fix and P6Regex.pir gone.

[00:03] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/e3036b09d2

[00:03] <dalek> nqp/ctmo: 749d34c | jonathan++ | src/Regex/P6Regex/Compiler.pm:

[00:03] <dalek> nqp/ctmo: Toss workaround for MAIN bug.

[00:03] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/749d34cae2

[00:04] <jnthn> phenny: tell moritz_ finished ctmo-no-p6regex.pir branch and merged it - thanks for getting it going :)

[00:04] <phenny> jnthn: I'll pass that on when moritz_ is around.

[00:08] <jnthn> rakudo: say "\u0f3a\u0f3b"

[00:08] <p6eval> rakudo 592e29: OUTPUT¬´===SORRY!===‚ê§Unrecognized backslash sequence: '\u' at line 22, near "0f3a\\u0f3b"‚ê§¬ª

[00:08] <jnthn> std: say "\u0f3a\u0f3b"

[00:08] <p6eval> std 4608239: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Unrecognized backslash sequence: '\u' at /tmp/31v7WrURIt line 1:‚ê§------> [32msay "\u[33m‚èè[31m0f3a\u0f3b"[0m‚ê§Unrecognized backslash sequence: '\u' at /tmp/31v7WrURIt line 1:‚ê§------> [32msay "\u0f3a\u[33m‚èè[31m0f3b"[0m‚ê§Check failed‚ê§FAILED

[00:08] <p6eval> ..00:01 1‚Ä¶

[00:10] <jnthn> std: say "\x0f3a\x0f3b"

[00:10] <p6eval> std 4608239: OUTPUT¬´ok 00:01 119m‚ê§¬ª

[00:10] <jnthn> nqp: say("\x0f3a\x0f3b")

[00:10] <p6eval> nqp: OUTPUT¬´‡º∫‡ºª‚ê§¬ª

[00:12] *** fisted joined
[00:14] <jnthn> sleep &

[00:27] *** GinoMan joined
[00:28] *** cosimo joined
[00:47] *** pecastro left
[00:49] *** pecastro joined
[00:58] *** Holy_Cow joined
[00:59] *** Chillance left
[01:05] *** pecastro left
[01:07] *** woosley joined
[01:09] *** Holy_Cow left
[01:25] *** pnu left
[01:26] *** pnu joined
[01:35] *** whiteknight left
[01:35] *** impious left
[01:35] *** pnu left
[01:37] *** pnu joined
[01:44] <Util> If I run `./perl6 --target=parse test_use.p6`, and test_use.p6 contains 'use foo;', then I get the parse that I expect.

[01:44] <Util> There is no module "foo", but we do not have to care while parsing the `use` line itself.

[01:45] <Util> If test_use.p6 contains 'use foo ("bar");', then Rakudo says ===SORRY!=== Confused at line 1, near "use foo (\""

[01:45] <Util> Why can't it handle an import list at parse-time?

[01:56] *** pnu left
[01:57] <sorear> Because it can't handle an import list?

[01:58] *** pnu joined
[02:01] *** noganex_ joined
[02:02] *** tyatpi_ left
[02:04] <Util> sorear: thanks; I will poke around in the code to find where it is not implemented :)

[02:04] *** noganex left
[02:05] *** lopnor joined
[02:10] *** lopnor left
[02:11] *** cdarroch left
[02:12] *** pnu left
[02:14] *** pnu joined
[02:31] *** donri left
[02:38] *** GinoMan left
[02:46] *** icwiener_ joined
[02:47] *** icwiener left
[02:55] *** tyatpi_ joined
[03:01] *** icwiener_ left
[03:05] *** risou joined
[03:07] *** tyatpi_ left
[03:23] *** GinoMan joined
[03:52] *** satyavvd joined
[04:10] *** nymacro joined
[04:12] *** Khisanth left
[04:17] *** GinoMan2440 joined
[04:19] *** GinoMan left
[04:23] *** Su-Shee_ joined
[04:25] *** Khisanth joined
[04:26] *** Su-Shee left
[04:35] <dalek> niecza: 1954503 | sorear++ | / (6 files):

[04:35] <dalek> niecza: Switch to a more composable model of method types

[04:35] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1954503bef

[04:41] *** sftp left
[05:09] <dalek> niecza: a074df5 | sorear++ | / (5 files):

[05:09] <dalek> niecza: Pass $*MULTINESS to nam for regexes

[05:09] <dalek> niecza: review: https://github.com/sorear/niecza/commit/a074df528d

[05:11] <TimToady> rakudo: module Foo; sub MAIN { say "I work right" }

[05:11] <p6eval> rakudo 592e29:  ( no output )

[05:18] <TimToady> rakudo: module Foo {}; sub MAIN { say "this is okay" }

[05:18] <p6eval> rakudo 592e29: OUTPUT¬´this is okay‚ê§¬ª

[05:18] <TimToady> but then you can't use the module

[05:34] <sorear> class A { proto method foo($) {*} }; class B is A { method foo(1) { ... }; method foo(2) { ... } } # Allowed?

[05:37] <TimToady> it seems a bit harder to recognize those as multis than when there's a proto in the outer lexical scope

[05:38] <TimToady> otoh we do that currently with tokens and such

[05:38] <TimToady> so maybe the right thing is just to assume such methods are multis and catch the error later if not

[05:38] <sorear> token foo:sym<+> already sort of implies multi

[05:39] <sorear> since it has a specified longname

[05:39] <TimToady> ja

[05:41] <TimToady> even if we assume all conflicting methods are mutlis, we'll at worst just get an ambiguous dispatch later, I guess

[05:41] *** orafu left
[05:42] *** orafu joined
[05:42] *** tewk joined
[05:45] <TimToady> but perhaps a warning can be issued if we don't see a proto in the parentage

[05:47] * sorear out

[05:57] *** kaare_ joined
[05:58] *** justatheory left
[06:03] *** mberends left
[06:06] *** tyatpi_ joined
[06:13] *** mtk left
[06:22] *** mtk joined
[06:27] *** Mowah joined
[06:34] *** fhelmberger joined
[06:40] *** tyatpi_ left
[06:43] *** risou_ joined
[06:43] *** snearch joined
[06:43] *** risou left
[06:46] *** cjk101010 joined
[07:06] *** wtw joined
[07:15] *** coldhead left
[07:16] *** dsp_ left
[07:17] *** coldhead joined
[07:18] *** dsp_ joined
[07:18] *** shortcircuit joined
[07:18] *** Su-Shee_ left
[07:18] *** dipthegeezer left
[07:20] *** Su-Shee joined
[07:20] *** rhr joined
[07:23] *** awj left
[07:23] *** dipthegeezer joined
[07:24] *** awj joined
[07:24] *** alester left
[07:24] *** alester joined
[07:29] *** toebu left
[07:37] *** cognominal joined
[07:37] *** sjohnson joined
[07:42] *** arnsholt joined
[07:52] *** donri joined
[08:17] *** drbean joined
[08:32] *** aks_sba joined
[08:37] *** mj41_nb joined
[08:39] *** aks_sba left
[08:40] <moritz_> \o

[08:40] <phenny> moritz_: 00:04Z <jnthn> tell moritz_ finished ctmo-no-p6regex.pir branch and merged it - thanks for getting it going :)

[08:48] <tadzik> o/

[08:51] <donri> \o/

[08:51] <moritz_> Util: fwiw it's a bug that rakudo doesn't load modules at parse time

[08:54] *** alim joined
[08:54] <dalek> roast: e30ac19 | moritz++ | S12-class/attributes.t:

[08:54] <dalek> roast: unfudge test for RT #81718

[08:54] <dalek> roast: review: https://github.com/perl6/roast/commit/e30ac19f5f

[08:55] <moritz_>  /w 17

[08:58] *** Mowah left
[08:58] *** Mowah joined
[08:59] *** f00li5h joined
[09:06] *** Mowah left
[09:06] *** Mowah joined
[09:07] *** Rotwang joined
[09:09] *** cosimo left
[09:11] <dalek> rakudo: 1fd1704 | moritz++ | build/PARROT_REVISION:

[09:11] <dalek> rakudo: bump PARROT_REVISION to 3.2.0

[09:11] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/1fd1704943

[09:12] <moritz_> rakudo: say Perl6::Grammar.parse('<a b>', :rule<arglist>)

[09:12] <p6eval> rakudo 592e29: OUTPUT¬´<a b>‚ê§¬ª

[09:12] <moritz_> rakudo: say Perl6::Grammar.parse('1+2', :rule<arglist>)

[09:12] <p6eval> rakudo 592e29: OUTPUT¬´1+2‚ê§¬ª

[09:16] <moritz_> rakudo: say Perl6::Grammar.parse('1+2', :rule<arglist>).pretty

[09:16] <p6eval> rakudo 592e29: OUTPUT¬´Method 'pretty' not found for invocant of class 'Regex;Match'‚ê§  in main program body at line 22:/tmp/aWFlevFPNM‚ê§¬ª

[09:16] <moritz_> rakudo: say %(Perl6::Grammar.parse('1+2', :rule<arglist>).).keys

[09:16] <p6eval> rakudo 592e29: OUTPUT¬´===SORRY!===‚ê§Unable to parse circumfix:sym<sigil>, couldn't find final ')' at line 22‚ê§¬ª

[09:16] <moritz_> rakudo: say %(Perl6::Grammar.parse('1+2', :rule<arglist>)).keys

[09:16] <p6eval> rakudo 592e29: OUTPUT¬´Method 'keys' not found for invocant of class 'Hash'‚ê§  in main program body at line 22:/tmp/c2wgX4eHZK‚ê§¬ª

[09:16] <moritz_> rakudo: .say for  %(Perl6::Grammar.parse('1+2', :rule<arglist>))

[09:17] <p6eval> rakudo 592e29: OUTPUT¬´Method 'say' not found for invocant of class 'Hash'‚ê§  in <anon> at line 22:/tmp/eSuRDTatbX‚ê§  in main program body at line 1‚ê§¬ª

[09:18] *** woosley left
[09:20] *** agentzh joined
[09:20] * moritz_ doesn't understand why 'use Test <plan ok>;' won't parse

[09:22] *** dakkar joined
[09:26] <moritz_> rakudo: use Test <plan ok>

[09:26] <p6eval> rakudo 592e29: OUTPUT¬´===SORRY!===‚ê§Confused at line 22, near "use Test <"‚ê§¬ª

[09:26] <moritz_> rakudo: use Test <plan ok>;

[09:26] <p6eval> rakudo 592e29: OUTPUT¬´===SORRY!===‚ê§Confused at line 22, near "use Test <"‚ê§¬ª

[09:27] <moritz_> use Foo <bar baz>;

[09:27] <moritz_> rakudo: use Foo <bar baz>;

[09:27] <p6eval> rakudo 592e29: OUTPUT¬´===SORRY!===‚ê§Unable to find module 'Foo' in the @*INC directories.‚ê§(@*INC contains:‚ê§  lib‚ê§  /home/p6eval/.perl6/lib‚ê§  /home/p6eval//p2/lib/parrot/3.1.0-devel/languages/perl6/lib‚ê§  .)‚ê§¬ª

[09:28] * moritz_ utterly confused

[09:28] <jdhore> is anyone working on the ROADMAP and changelog for Rakudo 2011.03?

[09:32] <moritz_> jdhore: I'lld udpate the changelog

[09:32] <jdhore> cool, thanks boss

[09:33] <moritz_> dammit, pushed to the wrong branch

[09:37] <dalek> rakudo: 4290515 | moritz++ | docs/ChangeLog:

[09:37] <dalek> rakudo: [docs] update ChangeLog for 2011.03 release

[09:37] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/4290515485

[09:39] <TiMBuS> so if i want to add a single method to an object, should i make it a role and 'but' compose it, use monkey typing, abuse the metamodel, or make a class with the new method and inherit?

[09:40] <TiMBuS> timtowtdi, bwitbwtdi

[09:40] <moritz_> TiMBuS: do you want to add it to just one object, or to all objects in its class?

[09:42] *** risou_ left
[09:42] *** risou joined
[09:43] <TiMBuS> now that just makes it more confusing D:

[09:43] <TiMBuS> well, i guess just to one object

[09:43] <moritz_> then use 'but'

[09:44] <moritz_> rakudo: my $x = 5 but role { method factorial() { [*] 1..self } }; say $x.factorial; say 5.factorial

[09:44] <p6eval> rakudo 592e29: OUTPUT¬´120‚ê§Method 'factorial' not found for invocant of class 'Int'‚ê§  in main program body at line 22:/tmp/uSzdqKmsFx‚ê§¬ª

[09:44] <jdhore> Oh, I also think there's still one Rakudo test failing

[09:44] <moritz_> TiMBuS: see above - only $x has method factorial

[09:45] <moritz_> jdhore: which one?

[09:45] <jdhore> moritz_, t/spec/S09-autovivification/autovivification.rakudo

[09:46] <jdhore> http://smolder.parrot.org/app/projects/report_details/12306

[09:46] <dalek> roast: a632eba | moritz++ | S12-class/attributes.t:

[09:46] <dalek> roast: Revert "unfudge test for RT #81718"

[09:46] <dalek> roast: 

[09:46] <dalek> roast: This reverts commit e30ac19f5f661973dfd59081be82c956053c2c27.

[09:46] <dalek> roast: review: https://github.com/perl6/roast/commit/a632eba4f2

[09:46] <moritz_> TiMBuS: but such techniques should only be used sparingly; relying heavily on them is usually a sign of bad design

[09:48] <TiMBuS> thats why i cant decide D:

[09:48] <moritz_> TiMBuS: btw I'm trying your IO::Socket::INET patch now

[09:48] <TiMBuS> oh cool

[09:49] <TiMBuS> ive tested it with my IRC bot and all seems well

[09:49] <moritz_> I want to test it with LWP::Simple

[09:49] <moritz_> if it works, I'll commit

[09:50] <TiMBuS> well, it might not work out of the box. i based it on perl5's ::INET

[09:50] <TiMBuS> the current one didnt really make much sense

[09:51] *** tzhs joined
[09:52] <moritz_> maybe I should wait until after the release

[09:52] <moritz_> so that module authors have time to update to the new thing

[09:53] <jdhore> I personally would, considering we're so close....

[09:53] <moritz_> well, jdhore is the boss for this release

[09:53] <TiMBuS> although i agree you should wait

[09:53] <TiMBuS> i cant see it breaking too many things.. the current implementation doesnt actually connect..

[09:53] <jnthn> morning, #perl6

[09:53] <moritz_> morning jdhore 

[09:53] <moritz_> erm, jnthn 

[09:53] <jdhore> heh

[09:53] * moritz_ tab fails

[09:54] * jdhore hasn't been to sleep yet

[09:55] <TiMBuS> moritz_, i should ask if the current INET implementation actually works for you

[09:55] <jnthn> moritz_: Rakudo does load modules at parse time, afaik. I think otherwise it couldn't get the lexpad installations done for lexical import.

[09:56] <moritz_> rakudo: use Not::There; BEGIN { die "OH NOEZ" }

[09:56] <p6eval> rakudo 592e29: OUTPUT¬´===SORRY!===‚ê§Unable to find module 'Not::There' in the @*INC directories.‚ê§(@*INC contains:‚ê§  lib‚ê§  /home/p6eval/.perl6/lib‚ê§  /home/p6eval//p2/lib/parrot/3.1.0-devel/languages/perl6/lib‚ê§  .)‚ê§¬ª

[09:56] <moritz_> hm

[09:56] <moritz_> I thought that triggered the die()

[09:56] <moritz_> good thing

[09:57] <moritz_> TiMBuS: I have no idea, haven't tried it

[09:57] <TiMBuS> oh

[09:57] <moritz_> I've heard reports of LWP::Simple being broken

[09:57] <moritz_> but the tests passed, last I looked

[09:58] <TiMBuS> well, to explain, on my machine parrot won't connect a socket unless you first call socket.socket, and INET doesn't do this

[09:58] * moritz_ doesn't like the names in the .new method

[09:59] <TiMBuS> based off of perl5

[09:59] <TiMBuS> id prefer just addr and port

[09:59] <moritz_> does 'addr' need to be a numeric IP?

[09:59] <moritz_> if not, I'd even prefer 'host'

[09:59] <TiMBuS> no its a host

[10:01] <moritz_> so any reasons to keep the ugly names, except p5 compatibility?

[10:02] <moritz_> I'm not a networking export, but I'd guess you need the peer<thing>s much more  often than the local<thing>s

[10:02] <moritz_> so I'd suggest  host, port, localhost, localport

[10:04] <TiMBuS> that sounds very sane

[10:07] <TiMBuS> i think p5's ::INET depreciated -host in favour of -addr though. i'd like to know why they preferred it that way before

[10:08] <TiMBuS> before making that change*

[10:10] <moritz_> http://cpansearch.perl.org/src/GBARR/IO-1.25/ChangeLog might be worth looking at

[10:13] *** gbacon left
[10:14] *** gbacon joined
[10:17] <moritz_> ok, LWP::Simple is easy enough to adapt to the new scheme

[10:18] <moritz_> cosimo++ for putting all the networking code into a single routine

[10:18] <TiMBuS> sadly, not much detail in that changelog moritz_. i decided to go with host anyway. I can only see merit in 'addr' in that it makes it clear you can use IP's but it should be pretty clear to near anyone that 'host' can be an IP anyway..

[10:20] <moritz_> TiMBuS: one more thing... I don't like the split on ':'. It will fail for IPv6 IPs

[10:21] <TiMBuS> oh

[10:21] <TiMBuS> of course

[10:21] <TiMBuS> the split also needs to be in an in (already done)

[10:21] <TiMBuS> in an if*

[10:21] *** Mowah left
[10:22] *** Mowah joined
[10:22] <TiMBuS> so how does ipv6 work with ports in the uri string

[10:23] <moritz_> [::1]:80 iirc

[10:23] *** Mowah left
[10:24] *** Mowah joined
[10:24] *** daxim joined
[10:24] *** Mowah left
[10:24] *** Mowah joined
[10:25] *** Mowah left
[10:25] *** Mowah joined
[10:26] *** sjohnson left
[10:26] *** Mowah left
[10:26] *** Mowah joined
[10:26] *** Mowah left
[10:26] *** Mowah joined
[10:27] *** sjohnson joined
[10:31] *** Mowah left
[10:31] *** Mowah joined
[10:31] <TiMBuS> ho hum. guess ill try to regex out the ip and port if its ipv6

[10:39] *** MayDaniel joined
[10:40] <dalek> rakudo: e3bd9aa | moritz++ | / (2 files):

[10:40] <dalek> rakudo: fix windows build, by JimmyZ++

[10:40] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/e3bd9aaa62

[10:41] *** pecastro joined
[10:44] *** MayDaniel_ joined
[10:44] *** MayDaniel_ left
[10:45] *** MayDaniel left
[11:10] <flussence_> If you're going to do IPv6ey things, try to make it support network scope notation ([fe80::1%eth0]) too. I was trying to do something with that only yesterday then found out most browsers don't bother with it...

[11:11] * moritz_ guesses that's too much to ask for now

[11:12] <flussence_> fair enough, it's just one of those nice-to-have little things

[11:14] *** Rotwang left
[11:14] <flussence_> (if only everything supported mdns out of the box I wouldn't need to mess around with raw addresses at all...)

[11:32] *** awj left
[11:33] *** snearch left
[11:33] *** Tedd1 left
[11:37] *** coldhead left
[11:39] *** Tedd1 joined
[11:59] *** hanekomu joined
[12:03] *** hanekomu left
[12:22] *** satyavvd left
[12:22] *** pecastro left
[12:31] <[Coke]> ~~

[12:35] *** icwiener joined
[12:44] *** risou_ joined
[12:44] *** risou_ left
[12:44] *** pecastro joined
[12:44] *** risou_ joined
[12:46] *** _twitch joined
[12:46] *** risou left
[12:50] *** bluescreen10 joined
[12:54] *** plobsing left
[13:11] *** bluescreen10 left
[13:16] *** Holy_Cow joined
[13:17] *** mtk left
[13:20] *** bluescreen10 joined
[13:20] *** mtk joined
[13:27] *** bluescreen10 left
[13:29] *** slavik2 left
[13:30] *** slavik1 joined
[13:31] <Util> moritz_: thanks for your Perl6::Grammar.parse(...) experiments; they have pointed me down the right road.

[13:31] <Util> BTW, I think it was the .dump_str method that you were looking for, although the bot truncates its output:

[13:31] <Util> rakudo: say Perl6::Grammar.parse('<a b>', :rule<arglist>).dump_str;

[13:31] *** slavik1 left
[13:31] <p6eval> rakudo e3bd9a: OUTPUT¬´: <<a b> @ 0> 0‚ê§<EXPR>: <<a b> @ 0> 0‚ê§<EXPR><circumfix>: <<a b> @ 0> 0‚ê§<EXPR><circumfix><quote_EXPR>: <<a b> @ 0> 0‚ê§<EXPR><circumfix><quote_EXPR><quote_delimited>: <<a b> @ 0> 0‚ê§<EXPR><circumfix><quote_EXPR><quote_delimited><quote_atom>[0]: <a b @ 1>

[13:31] <p6eval> ..0‚ê§<EXPR><circumfix><quote_EXPR>‚Ä¶

[13:31] *** mtk left
[13:32] <moritz_> Util: thanks

[13:32] *** slavik1 joined
[13:33] *** slavik1 left
[13:41] *** bluescreen10 joined
[13:48] *** mtk joined
[13:58] *** woosley joined
[14:00] *** GinoMan joined
[14:00] *** mtk left
[14:02] *** GinoMan2440 left
[14:06] *** mtk joined
[14:06] *** woosley left
[14:08] *** agentzh left
[14:13] *** spq joined
[14:16] *** slavik1 joined
[14:30] *** bluescreen10 left
[14:36] *** gdey left
[14:36] *** gdey joined
[14:47] *** TimToady left
[14:48] *** TimToady joined
[14:49] *** aloha left
[14:51] *** aloha joined
[14:53] *** sftp joined
[14:54] *** cjk101010 left
[14:54] *** mkramer joined
[14:57] *** Mowah left
[14:57] *** Mowah joined
[15:01] *** satyavvd joined
[15:03] *** hudnix joined
[15:09] *** fisted left
[15:09] *** gdey left
[15:10] *** hercynium joined
[15:12] *** justatheory joined
[15:18] *** wtw left
[15:22] *** bluescreen10 joined
[15:24] *** MayDaniel joined
[15:28] *** plobsing joined
[15:28] *** [hercynium] joined
[15:28] *** [hercynium] left
[15:28] *** [hercynium] joined
[15:30] *** hercynium left
[15:30] *** [hercynium] is now known as hercynium

[15:32] *** nymacro left
[15:41] *** arnsholt left
[15:46] *** fisted joined
[15:51] *** am0c joined
[15:55] <flussence_> rakudo: say ?("\x[2000]\x[2001]" ~~ /^(\s) $0* [\N | $]/)

[15:55] <p6eval> rakudo e3bd9a: OUTPUT¬´Bool::True‚ê§¬ª

[15:55] <flussence_> I want that regex to return true only when the whitespace chars are all identical, what am I doing wrong?

[15:58] <moritz_> rakudo: say "\x[2001]" ~~ /\N/

[15:58] <p6eval> rakudo e3bd9a: OUTPUT¬´‚ÄÅ‚ê§¬ª

[15:59] <moritz_> flussence_: that's the problem

[15:59] *** satyavvd_ joined
[15:59] *** satyavvd left
[15:59] <flussence_> oh... obvious when I look at it that way :)

[16:00] <flussence_> rakudo: say ?("\x[2000]\x[2001]" ~~ /^(\s) $0* [\S | $]/)

[16:00] <p6eval> rakudo e3bd9a: OUTPUT¬´Bool::False‚ê§¬ª

[16:00] <flussence_> rakudo: say ?("\x[2000]\x[2000]" ~~ /^(\s) $0* [\S | $]/)

[16:00] <p6eval> rakudo e3bd9a: OUTPUT¬´Bool::True‚ê§¬ª

[16:00] <flussence_> that looks like WIM

[16:06] *** bluescreen10 left
[16:09] <colomon> 3 hours till #phasers?

[16:14] <moritz_> yes

[16:14] <colomon> \o/  

[16:14] * colomon has properly accounted for daylight savings time

[16:14] <moritz_> date --utc is your good friend

[16:15] <moritz_> or -u on some platforms

[16:15] *** Patterner left
[16:20] *** Psyche^ joined
[16:20] *** Psyche^ is now known as Patterner

[16:37] *** hercynium left
[16:39] *** arnsholt joined
[16:45] *** am0c left
[16:45] *** tzhs left
[16:50] *** _twitch left
[17:12] *** bluescreen10 joined
[17:14] <dalek> roast: 3777a9c | moritz++ | S09-autovivification/autovivification.t:

[17:14] <dalek> roast: fudge a test for rakudo that dies with NPMCA

[17:14] <dalek> roast: review: https://github.com/perl6/roast/commit/3777a9c91a

[17:18] *** petdance joined
[17:22] *** alim left
[17:25] *** stkowski joined
[17:28] <mj41_nb> Failed to create server 'Permission denied' at /usr/local/share/perl5/Padre/Wx/Main.pm line 968. ...  Wx::SocketServer->new ... running Padre (no root) on Fedora 14

[17:28] <mj41_nb> sorry .. wrong channel

[17:29] *** M_o_C joined
[17:30] *** fhelmberger left
[17:31] *** hercynium joined
[17:36] *** Holy_Cow left
[17:37] *** Holy_Cow joined
[17:39] *** stkowski left
[17:46] *** risou joined
[17:47] *** risou_ left
[17:50] *** mvangala_pc joined
[17:53] *** Chillance joined
[18:02] *** colomon left
[18:11] *** dakkar left
[18:11] *** MayDaniel left
[18:18] *** colomon joined
[18:19] *** Khisanth left
[18:26] *** jevin left
[18:27] *** petdance left
[18:28] *** Mowah left
[18:30] *** jaldhar left
[18:30] *** _jaldhar joined
[18:31] *** icwiener left
[18:32] *** hudnix left
[18:32] *** ggoebel left
[18:33] *** satyavvd_ left
[18:34] *** icwiener joined
[18:34] *** hudnix joined
[18:37] *** ggoebel joined
[18:38] *** shortcircuit left
[18:38] *** shortcircuit joined
[18:42] *** jfried joined
[18:45] *** mj41_nb left
[18:46] *** mberends joined
[18:47] *** daxim left
[18:50] *** [particle] left
[18:53] *** [particle] joined
[18:53] *** masak joined
[18:53] *** mberends left
[18:53] <masak> salut, zebras.

[18:54] <jnthn> bon soir, masak

[18:54] <moritz_> \o

[18:54] *** starcoder2 left
[18:57] *** mberends joined
[18:58] *** xinming left
[18:59] *** xinming joined
[19:01] *** mkramer1 joined
[19:03] *** bluescreen10 left
[19:04] *** mkramer left
[19:04] *** bluescreen10 joined
[19:10] <tadzik> hola

[19:12] *** plobsing left
[19:16] <colomon> #phasers, btw

[19:17] <masak> oh!

[19:26] <masak> given yesternight's discussion about PRE and POST in methods, I would very much like it if someone wrote a *realistic* example of their use. preferably one that exercises as much of the logic in S04:1458 as possible, while still remaining realistic.

[19:27] <masak> consider it a mini-challenge, if that helps. :)

[19:30] *** plobsing joined
[19:42] *** mkramer1 left
[19:43] *** silent_h_ joined
[19:44] *** alim_ joined
[19:44] *** synple joined
[19:45] *** synple left
[19:46] <colomon> tadzik: bootstrap.sh doesn't seem to have installed panda in my path (as README implies it does?)

[19:47] <tadzik> colomon: how does your ~/.perl6 look like?

[19:49] *** plobsing left
[19:53] *** MayDaniel joined
[19:54] <colomon> ah, it installed into ~/.perl6/bin 

[19:54] <colomon> that's probably not in my path

[19:56] <colomon> you should probably add that to the readme.  ;)

[19:57] *** rgrau joined
[19:58] <colomon> on the other hand, what was in my path: ~/tools/pugs/src/perl6

[19:58] <colomon> sigh

[20:01] <PerlJam> Util: The README says to look in /Applications/Rakudo_Star/docs/rakudo/README  and there is no "docs" dir

[20:02] <PerlJam> Util: ITYM  /Applications/Rakudo_Star/share/doc/rakudo/README 

[20:02] <tadzik> colomon: added and pushed

[20:02] <PerlJam> er, sorry ... the HOW_TO_INSTALL.txt says that

[20:02] <colomon> tadzik++

[20:02] <tadzik> colomon++. How does it work for you?

[20:02] <tadzik> There is a shiny REPL :)

[20:03] <colomon> just trying to find a nice module to install

[20:03] <colomon> I noticed the REPL, but immediately left it.

[20:03] <tadzik> use 'list' in the repl

[20:03] <tadzik> it's nice, for in REPL you parse JSON only once

[20:04] <colomon> panda install yapsi

[20:04] <colomon> Project yapsi not found in the ecosystem

[20:04] <colomon> :(

[20:04] <tadzik> I think it's Yapsi :)

[20:05] <tadzik> hmm, maybe it could use Text::Levenstein to detect such things :)

[20:05] <tadzik> or at least .lc :)

[20:05] <colomon> hmmm.... it's lowercase y on modules.perl6.org

[20:06] <colomon> but Yapsi is indeed working.

[20:06] <tadzik> colomon: yeah, Panda uses the new ecosystem

[20:06] <tadzik> so Yapsi, Math::Model, Acme::Meow etc

[20:06] <tadzik> as on feather.perl6.nl:3000/

[20:08] <tadzik> colomon: so it passes all tests on Mac OSX?

[20:08] <colomon> errr... does bootstrap.sh run tests?

[20:09] <colomon> It did install Yapsi correctly, as far as I can tell.

[20:09] <colomon> tadzik++

[20:09] <tadzik> yeah, it just uses sorta "panda install panda"

[20:09] <tadzik> you should've seen "Testing Pies" somewhere

[20:09] <Util> PerlJam: thanks! will-fix. And I did mean ...docs/rakudo/README; I intend my .dmg-builder to move some dirs around to locations the users might actually look at :)

[20:09] <tadzik> but it won't work if there were failures, so that's ok for me :)

[20:10] *** plobsing joined
[20:10] <colomon> tadzik: it may be an easier test than it used to be, after my great Macports disaster of a few weeks back I'm now running perl-5.12 as default, with corresponding reasonably-up-to-date version of prove.

[20:11] <tadzik> cool

[20:11] <tadzik> but previously there were no tests, so I doubt it's easier :)

[20:11] <Util> jnthn: ctmo test results from Darwin 10.5: t/hll/02-modules.t ... Non-zero exit status: 1 ... Parse errors: Bad plan.  You planned 4 tests but ran 1.

[20:11] <PerlJam> Util: I don't see the various Perl 6 libs that come with R* ... am I just not looking in the right place or is that for a future experiment?  :)

[20:11] *** silent_h_ left
[20:11] *** Khisanth joined
[20:12] <Util> PerlJam: blitkost will be absent, but the others should be there. Looking...

[20:13] <Util> PerlJam: Look under /Applications/Rakudo_Star/lib/parrot/3.0.0/languages/perl6/lib/

[20:13] <PerlJam> ah

[20:14] <PerlJam> bueno

[20:14] <PerlJam> Util++

[20:15] *** awj joined
[20:17] *** alim_ left
[20:17] *** Sarten-X left
[20:19] *** vert2 left
[20:19] *** vert2 joined
[20:30] <Util> jnthn: ctmo - more errors (I had not realized I needed `make -k`):

[20:31] <Util> t/setting/01-resizablepmcarray.t  Parse errors: Bad plan.  You planned 10 tests but ran 4.

[20:31] <Util> t/setting/02-hash.t  Parse errors: No plan found in TAP output

[20:31] <Util> t/p6regex/01-regex.t   Failed tests:  1-55, 62-83, 85, 87, 89-96, 100, 105-108, 122-205, 208, 214, 218-404, 406-408, 410-415, 418, 420, 427, 429-449, 452-467, 469-480, 488-556, 570-579, 581-666, 668-700, 702, 704, 706-721, 724, 729-741

[20:31] *** starcoder2 joined
[20:44] *** alim_ joined
[20:47] *** spq left
[20:48] <jnthn> Util: ah, the setting tests probably make no sense any more... Thanks.

[21:00] <masak> blog post! \o/ http://strangelyconsistent.org/blog/longest-common-substrings-a-new-hope

[21:01] *** Holy_Cow left
[21:02] *** stkowski joined
[21:04] <moritz_> \o/ indeed

[21:06] <tadzik> jnthn: it just failed for me with --gen-parrot

[21:06] <tadzik> http://nopaste.snit.ch/37777

[21:07] *** bluescreen10 left
[21:08] *** bluescreen10 joined
[21:09] *** Rotwang joined
[21:14] *** mvangala_pc left
[21:14] *** bluescreen10 left
[21:17] *** cjk101010 joined
[21:17] <jnthn> Is --gc=gms the generational?

[21:19] <jnthn> Heh, was two whole Parrot releases behind in the PARROT_REVISION.

[21:21] <moritz_> jnthn: yes

[21:22] *** mkramer joined
[21:23] *** Sarten-X joined
[21:24] <masak> whoa. tiredness.

[21:25] <masak> 'night, #perl6.

[21:25] *** masak left
[21:26] *** awj left
[21:28] <jnthn> Arse, I get a bunch of test fails after doing latest Parrot + gen_gc

[21:29] <jnthn> But they all look the same and claim we're allocating 0 bytes somewhere... 

[21:29] *** bluescreen10 joined
[21:31] *** _jaldhar left
[21:31] *** _jaldhar joined
[21:35] <jnthn> Now I see where it's happening, I'm amazed we made it through the build...

[21:36] <benabik> I love those errors.  "Ah, there's the bug.  How'd that ever work?  Wait, how'd it compile?"

[21:37] <dalek> nqp/ctmo: 7227290 | jonathan++ | / (3 files):

[21:37] <dalek> nqp/ctmo: Bump PARROT_REVISION, use generational GC, fix NQPLexPad up for the changes.

[21:37] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/72272904ed

[21:37] <dalek> nqp/ctmo: 32b9b81 | jonathan++ | src/metamodel/reprs/P6opaque.c:

[21:37] <dalek> nqp/ctmo: Avoid allocating zero bytes; parrot++ catches this now.

[21:37] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/32b9b815f8

[21:38] <jnthn> benabik: Well, the amazement wasn't that the buggy code compiled, but that it managed to run the compiler well enough to compile itself... :)

[21:38] *** MayDaniel left
[21:38] <jnthn> OK, that gets everything that passed before passing again.

[21:38] <jnthn> And on latest Parrot.

[21:39] <tadzik> yay

[21:39] <jnthn> http://nopaste.snit.ch/37775 should be dealt with

[21:39] <benabik> jnthn: Well, "how'd it compile?" and "how'd it compile itself?" are only one word apart.

[21:39] <jnthn> http://nopaste.snit.ch/37777 - I don't understand.

[21:40] <jnthn> tadzik: :)

[21:40] <jnthn> tadzik: Can you try latest ctmo?

[21:41] <tadzik> jnthn: pulling

[21:41] <jnthn> Thanks ;)

[21:41] <jnthn> *:)

[21:42] *** justatheory left
[21:42] <flussence_> now *I* can't compile rakudo either :( https://gist.github.com/871548

[21:42] *** justatheory joined
[21:43] <tadzik> lol-I-not-so-offtopic-blogged! http://ttjjss.wordpress.com/2011/03/15/a-trip-to-holland/

[21:43] *** justatheory_ joined
[21:43] *** justatheory left
[21:43] *** justatheory_ is now known as justatheory

[21:43] <tadzik> what's libglut?

[21:43] <flussence_> something to do with opengl I think

[21:44] <benabik> OpenGL Utility Toolkit.  It's a basic windowing and event library, IIRC

[21:44] *** bluescreen10 left
[21:44] *** mtk left
[21:49] *** ymasory joined
[21:49] <tadzik> I get this error too: Parrot VM: Can't stat , code 2.

[21:49] <tadzik> Could not load packfile

[21:49] <jnthn> nqp: say("<>[](){}\xab\xbb\x0f3a\x0f3b\x0f3c\x0f3d\x169b\x169c\x2045\x2046\x207d\x207e\x208d\x208e\x2329\x232a\x2768\x2769\x276a\x276b\x276c\x276d\x276e\x276f\x2770\x2771\x2772\x2773\x2774\x2775\x27c5\x27c6\x27e6\x27e7\x27e8\x27e9\x27ea\x27eb\x2983\x2984\x2985\x2986\x2987\x2988\x2989\x298a\x298b\x298c\x298d\x298e\x298f\x2990\x2991\x2992\x2993\x2994\x2995\x2996\x2997\x2998\x29d8\x29d9\x29da\x29db\x29fc\x29fd\x3008\x3009\x300a\x300b\x300c\x300d\x300e\x300f\x3010\x3011

[21:50] <p6eval> nqp: OUTPUT¬´Confused at line 1, near "say(\"<>[]("‚ê§current instr.: 'nqp;HLL;Grammar;panic' pc 17577 (gen/hllgrammar-grammar.pir:5028)‚ê§¬ª

[21:50] <flussence_> hm, turns out the only thing using glut on my entire system is some jpeg2k libs. Easy enough to get rid of it.

[21:50] <jnthn> d'oh

[21:50] <jnthn> tadzik: huh...

[21:50] <jnthn> tadzik: So which packfile does it think it can't load... :/

[21:51] <jnthn> tadzik: Does src/stage1/nqp.pbc exist?

[21:51] <moritz_> tadzik: I get that for a concurrent build

[21:51] <tadzik> that's during /home/tadzik/src/rakudo/parrot_install/bin/parrot --library=src/stage1 src/stage1/nqp.pbc \

[21:51] <tadzik>     --target=pir --output=src/stage2/gen/NQP.pir \

[21:51] <tadzik>     src/stage2/gen/NQP.pm

[21:51] <moritz_> tadzik: try a simple 'make' without any -j option

[21:51] <tadzik> uh. This

[21:51] <jnthn> moritz_: Oh, some dependencies must be messed up :(

[21:51] <tadzik> trying with -j1

[21:51] <jnthn> nqp: say("\xff62\xff63);

[21:51] <p6eval> nqp: OUTPUT¬´Confused at line 1, near "say(\"\\xff6"‚ê§current instr.: 'nqp;HLL;Grammar;panic' pc 17577 (gen/hllgrammar-grammar.pir:5028)‚ê§¬ª

[21:51] <tadzik> moritz_: that's what I'm doing, but I have MAKEFLAGS somewhere in my env

[21:52] <jnthn> dang, what's the right way to do that...

[21:53] <moritz_> nqp: say("\x[ff62]")

[21:53] <p6eval> nqp: OUTPUT¬´ÔΩ¢‚ê§¬ª

[21:53] *** mtk joined
[21:53] *** coldhead joined
[21:53] * moritz_ takes a guess at what part of nqp jnthn is hacking on right now... :-)

[21:53] <jnthn> :)

[21:55] <moritz_> tadzik++ for the blog post. FWIW my report of the Copenhagen hackathon might have read much the same (that was the first conference or workshop where I met several Perl 6 folks at once)

[21:56] <jnthn> tadzik: Nice post. :)

[21:56] <jnthn> The Perl community rocks :)

[21:58] *** hercynium left
[21:59] <tadzik> aye :)

[22:00] <tadzik> oh great, now the build segfaulted

[22:00] <jnthn> :(

[22:00] <tadzik> ...whoa whoa, this is using C++?

[22:00] <tadzik> P6opaque.c:134: warning: request for implicit conversion from 'void *' to 'struct P6opaqueNameMap *' not permitted in C++

[22:00] <jnthn> I hope not... 

[22:01] <jnthn> Oh

[22:01] <jnthn> It's just warning that a C++ compiler might not like it

[22:01] <jnthn> That's fine, I wrote C. :)

[22:01] <jnthn> If somebody wants to make it work if fed to a C++ compiler too, I'll happily apply patches.

[22:01] <tadzik> anyway:

[22:01] <tadzik> /home/tadzik/src/rakudo/parrot_install/bin/parrot --library=src/stage0 src/stage0/nqp.pbc \

[22:01] <tadzik>     --target=pir --output=src/stage1/gen/nqp-mo.pir \

[22:02] <tadzik>     --setting=NULL src/stage1/gen/nqp-mo.pm

[22:02] <tadzik> ** Exception caught while looking for a handler, trying next **

[22:02] <tadzik> make: *** [src/stage1/nqpmo.pbc] Segmentation fault

[22:02] <tadzik> pardon my paste, but it's still better than the evalbot spree we see sometimes :)

[22:02] <jnthn> Whoa.

[22:02] <jnthn> I wish it told us what the exception it'd caught was :/

[22:03] <tadzik> TBH, I cheated, and that's actually 3.2.0 rather than the PARROT_REVISION you specified, but I don't think that'd make much difference

[22:03] <jnthn> I'd guess not

[22:03] <jnthn> You could always try it without gengc

[22:03] <jnthn> Though I'm a little skeptical it's that.

[22:04] <tadzik> another small one: http://ttjjss.wordpress.com/2011/03/16/module-management-strikes-again/

[22:05] <benabik> ctmo built on Darwin 10.6, parrot 3.2.  Failed 02-modules.t (Wstat: 256 Tests: 1 Failed: 0)

[22:05] <benabik>   Non-zero exit status: 1

[22:05] <benabik>   Parse errors: Bad plan.  You planned 4 tests but ran 1.

[22:05] <benabik> (Just to add to the people trying.)

[22:06] <benabik> Have to leave, but thought I'd toss that out.  o/

[22:06] <tadzik> o/

[22:07] <tadzik> jnthn: I wanted to try if master runs ok, but master isn't new-parrot-friendly

[22:07] <benabik> Null PMC access in isa() at gen/hllgrammar-grammar.pir:1035

[22:12] <jnthn> benabik: Thanks; that test is known to still fail.

[22:12] <jnthn> benabik: If that's the only failure, you're seeing what I am :)

[22:12] <jnthn> Thanks for testing.

[22:14] <jnthn> tadzik: Any chance you can get a backtrace for the segfault?

[22:14] <tadzik> jnthn: I'll try

[22:15] <jnthn> Thanks

[22:15] <jnthn> What platform are you on?

[22:15] <tadzik> linux, amd64

[22:16] *** alim_ left
[22:17] <tadzik> great, now the bug's pretending it's not there

[22:17] <tadzik> running the tests

[22:17] <tadzik> t/nqp/02-if.t ................... Incompatible versions of `core_ops' oplib. Found 3.1.0 but loaded 3.2.0

[22:18] *** alim joined
[22:18] <dalek> nqp/ctmo: 3341bd9 | jonathan++ | / (4 files):

[22:18] <dalek> nqp/ctmo: Move declaration of brackets list into NQP, eliminating one more cheat file.

[22:18] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/3341bd9a63

[22:18] <tadzik> what can I do?

[22:18] <jnthn> tadzik: Oh...

[22:18] <jnthn> tadzik: That may be the real issue.

[22:18] <jnthn> tadzik: It sounds like a libparrot conflict 

[22:19] <jnthn> Like it's finding a libparrot other than the one it should.

[22:19] *** kaare_ left
[22:19] <jnthn> I suspect the other segfault is related; it looked like it crashed while trying to report an error.

[22:19] <tadzik> I'll go with --gen-parrot then

[22:23] <flussence_> All tests successful. Files=548, Tests=27631, 458 wallclock secs # yay, it's at 100% again

[22:23] <Tene> jnthn: what does ctmo stand for?

[22:24] *** plobsing left
[22:25] *** plobsing joined
[22:25] <tadzik> compile-time-meta-objects I think

[22:25] <Tene> ah, thx

[22:26] <jnthn> Tene: what tadzik said

[22:26] <jnthn> Though...the branch ended up needing many yaks shaving to do that

[22:27] <jnthn> It's got to the point where you can now write a compiler totally in NQP without needing any PIR (mostly as a happy side-effect of other goals).

[22:27] <jnthn> So I'm planning to merge the current state of it to master once any issues get ironed out.

[22:28] *** cjk101010 left
[22:29] <Tene> nice

[22:31] *** M_o_C left
[22:33] <tadzik> jnthn: same crap with --gen-parrot

[22:34] <tadzik> but most of the tests pass

[22:38] <tadzik> http://nopaste.snit.ch/37778 -- is something like this possible in Perl 6?

[22:39] <tadzik> oh, I can do .=

[22:44] <jnthn> tadzik: Wait...I thought you got a segfault during the build?

[22:45] <tadzik> jnthn: yeah, once

[22:45] <tadzik> not I don't. Heisenbug

[22:45] <tadzik> s/not/now/

[22:46] <dalek> nqp/ctmo: 4a132aa | jonathan++ | / (4 files):

[22:46] <dalek> nqp/ctmo: Move hll-compiler cheat into NQP.

[22:46] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/4a132aaa70

[22:49] *** whiteknight joined
[23:01] *** plobsing left
[23:02] *** gfldex left
[23:03] *** gfldex joined
[23:05] *** Chillance left
[23:05] *** alim left
[23:07] <dalek> nqp/ctmo: 08a5c79 | jonathan++ | src/HLL (2 files):

[23:07] <dalek> nqp/ctmo: Move HLL compiler init to NQP.

[23:07] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/08a5c798e0

[23:07] <dalek> nqp/ctmo: 3434ae9 | jonathan++ | src/ (3 files):

[23:07] <dalek> nqp/ctmo: Further gut HLL.pir.

[23:07] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/3434ae921f

[23:07] <dalek> nqp/ctmo: 7c1a5c6 | jonathan++ | src/ (2 files):

[23:07] <dalek> nqp/ctmo: Move an include so that the only things that stick stuff into the Parrot root namespace are in one PBC file.

[23:07] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/7c1a5c6e26

[23:09] *** Rotwang left
[23:11] *** plobsing joined
[23:13] *** hercynium joined
[23:15] *** lestrrat left
[23:17] *** lestrrat joined
[23:28] *** alester left
[23:32] *** icwiener left
[23:34] *** jfried left
[23:36] *** fisted left
[23:39] <dalek> nqp/ctmo: 75b960b | jonathan++ | src/HLL (2 files):

[23:39] <dalek> nqp/ctmo: Can include constants anywhere, so do so. Now HLL.pir is just includes of NQP compiler output, and is thus ready to wave goodbye.

[23:39] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/75b960bdf8

[23:39] <dalek> nqp/ctmo: 1ccff4d | jonathan++ | build/Makefile.in:

[23:39] <dalek> nqp/ctmo: Keep dependencies honest.

[23:39] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/1ccff4d38f

[23:39] <dalek> nqp/ctmo: a2f8d51 | jonathan++ | src/HLL/Actions.pm:

[23:39] <dalek> nqp/ctmo: Use curly brace classes when we'll have multiple in the same file.

[23:39] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/a2f8d518d6

[23:39] <dalek> nqp/ctmo: 675ee22 | jonathan++ | src/HLL/Compiler.pm:

[23:39] <dalek> nqp/ctmo: Clear up some cruft. Dunno what I was thinking...

[23:39] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/675ee223e9

[23:39] <dalek> nqp/ctmo: 2acf542 | jonathan++ | / (2 files):

[23:39] <dalek> nqp/ctmo: Eliminate HLL.pir. Now we're down to just one library that is overall PIR-compiled; the rest is NQP-compiled. We'll keep Regex.pbc fully in PIR for the foreseeable future, and everything else will trend towards its last remaining bits of PIR becoming NQP.

[23:39] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/2acf542385

[23:39] <dalek> nqp/ctmo: 00bb576 | jonathan++ | src/stage0/ (7 files):

[23:39] <dalek> nqp/ctmo: Update bootstrap.

[23:39] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/00bb576e05

[23:40] <sjohnson> o.O

[23:42] <jnthn> :)

[23:44] *** ascent_ joined
[23:45] <jnthn> Hmm...sleep or hack more? :)

[23:47] <TimToady> how much does the new nqp allow for native types?

[23:47] <TimToady> or is that just a 6model thing?

[23:48] <jnthn> TimToady: If I'd prioritized it a little higher it could already have natively typed attributes.

[23:48] *** hercynium left
[23:48] <jnthn> TimToady: It just didn't get to the front of the queue of yaks yet.

[23:49] *** Holy_Cow joined
[23:49] <TimToady> but it's in the works?

[23:49] <jnthn> Yes, for sure.

[23:49] <jnthn> It's in the group of "things I know how to do but just didn't get to yet"

[23:49] <TimToady> and compact class storage, where appropriate?

[23:49] <jnthn> As opposed to "things that need hard thought"

[23:49] <jnthn> That still needs some thinking.

[23:49] <jnthn> If you mean entire structures being "inlined" into others.

[23:50] <jnthn> Parts of the stuff I need for that are there.

[23:50] <jnthn> Mostly it's about deciding how the boxing/unboxing of those works.

[23:50] *** fisted joined
[23:50] <TimToady> just talking to jnthn, who says nqp does not yet have compact structs of native types, but only because he's been working on other things, not because it's "something that needs hard thought"

[23:50] <TimToady> oops, ww

[23:51] <jnthn> :P

[23:51] <jnthn> Now I'm in for it. :)

[23:52] <jnthn> I already have Cursor using native integer storage for its $!pos

[23:52] <jnthn> So the object model level works, now it's mostly teaching the compiler how to compile such things.

[23:53] <jnthn> (I want to go for "general mechanism" rather than "quick hack to make it work")

[23:53] *** nymacro joined
[23:55] <TimToady> but the important thing is that jnthn thinks the 6model stuff is not another hack, but "close to right" on first principles

[23:55] <TimToady> d'oh

[23:56] <jnthn> I find this jnthn guy quite easy to agree with... :)

[23:56] *** plobsing left
[23:56] <TimToady> sorry, figgered since you usually run away screaming from #ps I'd fill in for you :)

[23:56] <jnthn> Oh, *that's* where you are.

[23:57] *** rgrau left
[23:57] * jnthn pulls up the irclog

[23:59] <TimToady> mostly discussion of the relationsip of "foreign languages" to 6model

