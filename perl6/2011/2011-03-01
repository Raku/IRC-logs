[00:00] *** rgrau_ left
[00:00] *** franek left
[00:04] *** rdesfo left
[00:10] *** Juerd_ joined
[00:14] <dalek> niecza: 11bf899 | sorear++ | / (3 files):

[00:14] <dalek> niecza: Revert use of collectable assemblies for eval

[00:14] <dalek> niecza: 

[00:14] <dalek> niecza: It turns out they've only been supported in Mono since Feb 09 2010.

[00:14] <dalek> niecza: This does mean eval will leak memory.  Try not to overuse it.

[00:14] <dalek> niecza: review: https://github.com/sorear/niecza/commit/11bf8999c1

[00:15] *** whiteknight joined
[00:22] *** orafu joined
[00:29] *** ponbiki left
[00:31] <tadzik> neutro did not age gently

[00:31] <tadzik> *, I'm asleep now

[00:33] *** pigdude left
[00:35] *** p6eval left
[00:35] *** p6eval joined
[00:35] *** ChanServ sets mode: +v p6eval

[00:36] <sorear> niecza: eval "say 2 " ~ "+ 2"

[00:36] <p6eval> niecza v3-15-g11bf899: OUTPUT«4␤»

[00:38] <dalek> evalbot: d582aa5 | sorear++ | / (2 files):

[00:38] <dalek> evalbot: Fix niecza build and execution

[00:38] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/d582aa591c

[00:40] *** pmichaud left
[00:40] *** pmichaud joined
[00:40] *** Juerd_ left
[00:40] *** hatseflats left
[00:42] *** hatseflats joined
[00:44] *** stifynsemons left
[00:47] *** hatseflats left
[00:47] *** hatseflats joined
[00:50] *** qiyong joined
[01:01] *** thorat joined
[01:03] <sorear> moritz__: I don't get any FormatExceptions with t/spec/S02/bool

[01:04] *** woosley joined
[01:10] *** Juerd_ joined
[01:18] *** cotto left
[01:18] *** _jaldhar left
[01:19] *** _jaldhar joined
[01:19] <donri> sorear: wait what eval returns stdout?

[01:20] <donri> oh wait nevermind :D

[01:20] <donri> parsefail

[01:25] <dalek> niecza: 762eae4 | sorear++ | / (2 files):

[01:25] <dalek> niecza: Note 2.6 breakage in README

[01:25] <dalek> niecza: review: https://github.com/sorear/niecza/commit/762eae42f8

[01:25] <dalek> niecza: a7846ce | sorear++ | / (3 files):

[01:25] <dalek> niecza: Turn panics and sorries into catchable exceptions

[01:25] <dalek> niecza: review: https://github.com/sorear/niecza/commit/a7846ce1ea

[01:46] *** masonkramer_ joined
[01:46] *** masonkramer left
[01:46] *** masonkramer_ is now known as masonkramer

[01:57] *** arlinius left
[01:58] <dalek> niecza: 980923f | sorear++ | lib/Test.pm6:

[01:58] <dalek> niecza: Implement eval_dies_ok, eval_lives_ok

[01:58] <dalek> niecza: review: https://github.com/sorear/niecza/commit/980923f746

[02:01] *** noganex_ joined
[02:01] <sorear> niecza: say -1

[02:01] <p6eval> niecza v3-17-ga7846ce: OUTPUT«-1␤»

[02:02] <sorear> HEY!  Someone swapped the arguments to skip!

[02:03] <dalek> niecza: 0711b24 | sorear++ | lib/Test.pm6:

[02:03] <dalek> niecza: Track &skip API change

[02:03] <dalek> niecza: review: https://github.com/sorear/niecza/commit/0711b24b4d

[02:04] *** noganex left
[02:09] *** jferrero left
[02:10] *** agentzh joined
[02:10] *** thorat left
[02:19] *** Juerd_ left
[02:20] *** pmichaud left
[02:20] *** hatseflats left
[02:21] *** stifynsemons joined
[02:21] *** Juerd_ joined
[02:21] *** hatseflats joined
[02:22] *** pmichaud joined
[02:25] *** whiteknight left
[02:28] *** masonkramer left
[02:31] <qiyong> does perl6 have a native implementation?

[02:31] <qiyong> not on vm

[02:34] <sorear> What does that question mean?

[02:35] <qiyong> does perl6 have a native implementation? like the perl5, not the rakudo

[02:36] <plobsing> perl5 walks a tree of ppcodes, which is very much what I would define as a VM

[02:38] <sorear> perl 5's internal VM is slower than Parrot at a lot of stuff

[02:38] <sorear> just because it doesn't have a name doesn't mean it doesn't exist

[02:39] *** leprevost left
[02:40] <donri> maybe they mean interpreter, or wonder if parrot can be bundled into rakudo

[02:43] *** cdarroch left
[02:52] *** arlinius joined
[02:56] *** JimmyZ joined
[03:02] *** _twitch joined
[03:06] *** leprevost joined
[03:07] *** donri left
[03:10] *** GinoMan_ left
[03:19] *** GinoMan joined
[03:27] *** lopaway is now known as lopnor

[03:43] *** leprevost left
[03:46] *** felipe__ joined
[03:47] *** felipe__ left
[03:48] *** leprevost joined
[03:50] <qiyong> sorear, is there a perl5 parrot implement?

[03:51] <qiyong> rakudo is a perl6 compiler target at parrot?

[03:51] <JimmyZ> qiyong, are you chinese?

[03:53] <qiyong> JimmyZ, why

[03:54] <JimmyZ> looks like you're chinese. 

[03:54] <JimmyZ> I'm chinese

[03:54] <qiyong> you can see my face?

[03:54] *** _jaldhar left
[03:56] <JimmyZ> from your nick, if you're curious

[03:59] *** anonymousarray joined
[04:00] *** jaldhar joined
[04:02] *** lopnor is now known as lopaway

[04:03] *** cotto joined
[04:05] *** satyavvd joined
[04:23] *** Su-Shee_ joined
[04:25] *** Su-Shee left
[04:28] *** am0c joined
[04:34] *** estrabd left
[04:34] *** estrabd joined
[04:35] *** tewk left
[04:35] *** tewk joined
[04:45] *** coldhead left
[04:49] *** woldrich_ is now known as woldrich

[04:49] *** woldrich left
[04:49] *** woldrich joined
[04:54] *** anonymousarray left
[04:55] <mberends> qiyong: SMOP is a non virtual machine runtime for Perl 6, but it is incomplete and has not been worked on for about two years :-( http://www.perlfoundation.org/perl6/index.cgi?smop

[05:02] <mberends> qiyong: Ponie was a project more than 2 years ago to implement Perl 5 on the same runtime as Perl 6, but that was abandoned because the developers could not make it work reasonably.

[05:03] *** GinoMan left
[05:27] *** envi left
[05:31] *** VXZ left
[05:45] <sorear> In what sense do you call SMOP "non virtual macine"?

[05:45] *** bacek left
[05:45] <sorear> JimmyZ: out of curiousity, how did you come to be called "Jimmy"?

[05:48] *** lue left
[05:48] *** __rnddim__ joined
[05:49] <woosley> qiyong looks like a chinese name

[05:50] <sorear> see also: http://www.ip2location.com/60.23.248.89

[05:52] <tadzik> what an investigation

[05:53] *** satyavvd left
[05:53] <mberends> sorear: to quote Daniel Ruoso from the perlfoundation page, "SMOP is not a Virtual Machine. SMOP is simply a runtime engine that happens to have a interpreter run loop."  AFAIK that means compilers targeting SMOP emit C code that makes calls into the SMOP runtime system.

[05:54] <woosley> What is std.pm6 different from rakudo and other implements? I see they all can run perl6 code

[05:57] *** kaare_ joined
[05:57] <mberends> woosley: STD.pm6 is a reference grammar (with a working parser) only. Niecza can compiler and execute a subset of what STD.pm6 describes. Rakudo has a slightly different grammar and can also execute much more of your code.

[05:57] <mberends> *compile

[05:59] <woosley> mberends:  So STD.pm6 can not execute perl6 code

[05:59] <mberends> woosley: correct

[06:01] <sorear> std: say 2 + 2

[06:01] <p6eval> std 4608239: OUTPUT«ok 00:01 120m␤»

[06:01] <sorear> it just does semantic checking

[06:02] <woosley> perl6: 2+2

[06:02] <p6eval> pugs, rakudo 74dcce, niecza v3-19-g0711b24:  ( no output )

[06:04] <sorear> mberends: I cry a little inside when people describe (any piece of software which defines a specialized programming environment) as "not a virtual machine"

[06:04] <tadzik> std: say "ok 00:01 {150.rand.Int}m" # my favourite joke

[06:04] <p6eval> std 4608239: OUTPUT«ok 00:01 119m␤»

[06:05] <mberends> sorear: you're too sentimental ;)

[06:05] <Tene> sorear: +1

[06:06] <mberends> anything which interprets is a virtual machine by some definition, I suppose.

[06:08] <JimmyZ> sorear: my employer asked for  my english name, not chinese;)

[06:22] *** nymacro joined
[06:30] *** quester_ joined
[06:34] * mberends wonders about rescuing SMOP from the Pugs catacombs. Where to find some more tuits?

[06:34] *** cjk101011 joined
[06:34] *** cjk101011 left
[06:34] <diakopter> mberends: and even round ones!

[06:34] <mberends> heh

[06:39] <sorear> mberends: maybe ask a VB6 or ActiveX developer

[06:39] <mberends> lol

[06:39] <sorear> SMOP is, coincedentally, extremely similar to MS COM at the ABI level

[06:39] <sorear> it would probably take less than a month to make it completely compatible

[06:40] <sorear> and then you could embed perl 6 in IE6

[06:40] <diakopter> :)

[06:41] <diakopter> using a NaCl plugin, mono (and thus niecza (and rakudo/mono)) will be in IE, Chrome, Firefox, Opera, etc...

[06:41] *** cjk101010 left
[06:41] <diakopter> (someday)

[06:42] <diakopter> oh yeah, Safari

[06:42] <sorear> NaCl better than Moonlight?

[06:47] <diakopter> I'd think so

[06:47] <diakopter> *imagine

[06:48] <diakopter> all the cool interpreters are porting to NaCl

[06:52] *** JimmyZ left
[06:53] <sorear> do you think nacl will ever have significant market penetration?

[06:53] <dalek> niecza: c01053e | sorear++ | t/spectest.data:

[06:53] <dalek> niecza: Remove test which never should have worked

[06:53] <dalek> niecza: review: https://github.com/sorear/niecza/commit/c01053e23a

[06:53] <dalek> niecza: 31427c7 | sorear++ | lib/SAFE.setting:

[06:53] <dalek> niecza: Fix $str ~~ m// always being true

[06:53] <dalek> niecza: review: https://github.com/sorear/niecza/commit/31427c7aa6

[06:53] <dalek> niecza: 12393a7 | sorear++ | src/niecza:

[06:53] <dalek> niecza: Fix compiler crash on [+]

[06:53] <dalek> niecza: review: https://github.com/sorear/niecza/commit/12393a7e51

[07:09] <dalek> niecza: 1237dcf | sorear++ | t/spectest.data:

[07:09] <dalek> niecza: Remove another file that only passed by accident

[07:09] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1237dcf92c

[07:09] <dalek> roast: b8687da | sorear++ | S0 (4 files):

[07:09] <dalek> roast: Refudge a few evals for niecza

[07:09] <dalek> roast: review: https://github.com/perl6/roast/commit/b8687da9d2

[07:11] *** cosimo left
[07:14] <moritz__> good morning

[07:15] *** Mowah joined
[07:16] <sorear> good night

[07:22] <moritz__> fwiw the FormatExceptions seem to be gone now

[07:26] *** Su-Shee_ is now known as Su-Shee

[07:26] *** coldhead joined
[07:34] <diakopter> phenny: tell sorear "tough to see".  NaCl has a lot of potential, especially if Adobe teams up with Google (like it seems might occur)

[07:34] <phenny> diakopter: I'll pass that on when sorear is around.

[07:38] *** Rotwang joined
[07:41] *** wtw joined
[07:42] *** broquain1 is now known as broquaint

[07:47] *** stifynsemons left
[07:50] *** fhelmberger joined
[07:53] *** Rotwang left
[07:54] *** shi joined
[08:01] <dalek> roast: 9944532 | moritz++ | S04-statements/return.t:

[08:01] <dalek> roast: fudge return.t for niecza

[08:01] <dalek> roast: review: https://github.com/perl6/roast/commit/99445324df

[08:23] *** noganex_ is now known as noganex

[08:27] *** quester_ left
[08:34] <jnthn> morning, #perl6

[08:35] <mberends> morning, jnthn

[08:35] <colomon> \o

[08:36] <mberends> jnthn: which implementation of 6model do you suggest I overview for my NLPW talk?

[08:38] *** justatheory left
[08:38] *** justatheory joined
[08:38] <TimToady> finish up the JVM one, and then talk about that :P

[08:39] <colomon> TimToady! \o/

[08:39] * TimToady really has no opinion...

[08:39] *** rhr left
[08:40] <mberends> o noes, that means inventing a goto in Java !

[08:40] <TimToady> well, was supposed to be on an airplane right now, but somehow I swapped my passport with my mother-in-law's while we were on safari, and didn't notice till we got to the airport...

[08:40] <mberends> TimToady: your is the best answer though ;-)

[08:40] <mberends> *yours

[08:41] <TimToady> they didn't think I was pretty enough to pass for her...

[08:42] <TimToady> so we get a 20 hour extention to our stay here, and an award of -$1k or so for changing tickeets :(

[08:42] <colomon> :(

[08:43] <jnthn> mberends: The .Net one is probably easiest in that it's a ground-up implementation. It's missing a few bits, but it is cleaner since it doesn't have to interact with Parrot-y bits.

[08:43] <jnthn> TimToady: Ouch. :(

[08:43] *** justatheory left
[08:44] <mberends> jnthn: and which repo? the 6model one or one of the NQP's (I lost track of where you're working now).

[08:47] <jnthn> 6model one is active repo for CLR and JVM implemenations. Only Parrot one is currently in nqp repo.

[08:48] <mberends> ok thanks, that's a good starting point for me :)

[08:48] *** rhr joined
[09:05] *** Juerd_ left
[09:07] *** domidumont1 left
[09:09] <jnthn> mberends: OK, great.

[09:09] * jnthn should work on his NLPW talks very soon too :)

[09:13] *** domidumont joined
[09:14] <moritz__> jnthn: fwiw I have built a separate checkout of the nqp/match-nom branch under a different user ID, so uninfluenced by any installed parrots/rakudos/nqps/*. I still get that weird, uninformative parse error. So I fear I can't really do anything productive on that branch :(

[09:19] <jnthn> moritz__: OK, that's...confusing

[09:19] * jnthn will try it on a different machine

[09:23] *** dakkar joined
[09:31] *** daxim joined
[09:32] *** sftp left
[09:49] *** envi joined
[09:50] *** bacek joined
[09:51] *** nymacro left
[09:52] *** nymacro joined
[09:56] *** bacek left
[09:59] *** JimmyZ joined
[10:02] *** JimmyZ left
[10:05] *** woosley left
[10:08] *** mberends left
[10:11] *** leprevost left
[10:17] *** moritz__ is now known as moritz_

[10:27] *** tzhs joined
[10:34] *** hcchien left
[10:35] *** domidumont left
[10:38] *** coldhead left
[10:39] *** woosley joined
[10:40] *** domidumont joined
[10:46] *** nsh- left
[10:47] *** nsh_ joined
[11:05] *** am0c left
[11:06] *** jferrero joined
[11:16] *** gdey joined
[11:17] *** JimmyZ joined
[11:17] *** am0c joined
[11:17] *** gdey left
[11:21] *** charsbar left
[11:21] *** gdey joined
[11:26] *** charsbar joined
[11:29] *** Gothmog_ left
[11:29] *** donri joined
[11:30] *** charsbar left
[11:33] *** charsbar joined
[11:35] *** pmurias joined
[11:38] *** Khisanth left
[11:39] *** orafu left
[11:40] *** orafu joined
[11:40] *** necrodearia left
[11:41] *** agentzh left
[11:43] *** necrodearia joined
[11:45] *** awoodland joined
[11:46] *** orafu left
[11:46] *** orafu joined
[11:54] *** MayDaniel joined
[11:54] *** MayDaniel left
[12:12] *** am0c left
[12:17] *** Gothmog_ joined
[12:17] *** Gothmog_ left
[12:17] *** Gothmog_ joined
[12:21] *** bacek joined
[12:25] *** am0c joined
[12:30] *** awoodland left
[12:31] *** mfranc joined
[12:43] *** pmurias left
[12:43] *** mtk joined
[12:46] *** amkrankruleuen left
[12:46] *** amkrankruleuen joined
[12:47] <donri> What other languages do you good folk find interesting, from a non-pragmatic perspective?

[12:48] <colomon> Factor!

[12:49] <moritz_> donri: haskell and ook

[12:49] <donri> lol

[12:49] <colomon> ook?

[12:50] <donri> Esoteric

[12:50] <flussence> YES! I finally convinced $dayjob we actually need tests :D

[12:50] <colomon> \o/

[12:50] <moritz_> \o/

[12:50] <flussence> (and all it took was years of breakages...)

[12:51] <donri> "I don't always write tests, but when I do, I write them first."

[12:55] *** pi_benjamin joined
[12:55] *** pi_benjamin left
[12:55] *** woosley left
[13:09] *** Khisanth joined
[13:16] *** stifynsemons joined
[13:19] *** MayDaniel joined
[13:22] *** shi left
[13:29] *** awoodland joined
[13:29] <ggoebel> is there something equivalent to blizkost for niecza? I.e. a way to access perl5 modules?

[13:29] *** mtk left
[13:29] *** ab5tract joined
[13:33] *** woosley joined
[13:34] *** mtk joined
[13:38] <[Coke]> tadzik++

[13:38] <tadzik> [Coke]: what do I get my karma from?

[13:39] <[Coke]> std: say "ok 00:01 {150.rand.Int}m" # my favourite joke

[13:39] <p6eval> std 4608239: OUTPUT«ok 00:01 119m␤»

[13:39] *** starcoder left
[13:40] <tadzik> heh

[13:40] *** ddima left
[13:40] *** ddima joined
[13:40] <moritz_> patches to make that just 'parse OK' or so are welcome

[13:41] *** starcoder joined
[13:50] *** plainhao joined
[13:53] <woosley> rakudo: for <a b c> { say }

[13:53] <p6eval> rakudo 74dcce: OUTPUT«␤␤␤»

[13:53] <moritz_> std: for <a b c> { say }

[13:53] <p6eval> std 4608239: OUTPUT«Potential difficulties:␤  Unsupported use of bare 'say'; in Perl 6 please use .say if you meant $_, or use an explicit invocant or argument at /tmp/xgqdmDFctS line 1:␤------> [32mfor <a b c> { say[33m⏏[31m }[0m␤ok 00:01 119m␤»

[13:54] <moritz_> that's what rakudo should say too

[13:55] <woosley> rakudo: for <a b c> {.say}

[13:55] <donri> Make it so, number one.

[13:55] <p6eval> rakudo 74dcce: OUTPUT«a␤b␤c␤»

[13:55] <moritz_> patches welcome :-)

[13:55] <moritz_> should be mostly copy&pasting from STD

[13:55] <donri> rakudo: for <a b c> *.say

[13:56] <p6eval> rakudo 74dcce: OUTPUT«===SORRY!===␤Missing block at line 22, near ""␤»

[13:56] <donri> Why doesn't this work

[13:56] <moritz_> didn't we discuss this before?

[13:56] <moritz_> 'for' is syntactic, and needs a block.

[13:56] <donri> yes but this is syntax

[13:56] <donri> why a block and not simply a code though?

[13:56] <donri> rakudo: for <a b c> &say

[13:56] <p6eval> rakudo 74dcce: OUTPUT«===SORRY!===␤Missing block at line 22, near ""␤»

[13:57] <moritz_> donri: because it breaks the "no two terms in a row" rule

[13:58] <moritz_> and such breaks can only be tolerated for a very limited syntax

[13:58] <donri> why is it not a function then

[13:58] <donri> for <a b c>: { ... }

[13:58] <donri> because it's syntactic elsewhere?

[13:58] <donri> .say for <a b c>

[13:59] <woosley> perl6: my @a = <a b c>; say "@a"; my $a = "f"; say "$a";

[13:59] <p6eval> niecza v3-23-g1237dcf: OUTPUT«a b c␤f␤»

[13:59] <p6eval> ..pugs, rakudo 74dcce: OUTPUT«@a␤f␤»

[13:59] <moritz_> donri: there's a function version, and it's called map

[13:59] <woosley> std: my @a = <a b c>; say "@a";

[13:59] <p6eval> std 4608239: OUTPUT«ok 00:01 122m␤»

[14:00] <moritz_> woosley: rakudo and pugs are correct here

[14:00] <colomon> I assume that's a known niecza bug?

[14:00] <moritz_> (std just does syntax checking)

[14:00] <moritz_> colomon: not to me, but I guess sorear++ knows :-)

[14:00] <moritz_> (and if not, the spectests will tell him)

[14:01] <donri> moritz_: true :)

[14:01] <woosley> Why say "@a" is not working like perl5? 

[14:01] <donri> sorta wish map function semantics was inverted

[14:01] <donri> map @a: {}  vs current  map {}, @a

[14:01] <jnthn> woosley: use say "@a[]" for those

[14:02] <jnthn> woosley: Too many accidental say "mail me at [email@hidden.address] OH NOES  interpolation!!!"

[14:02] <moritz_> woosley: to avoid unintiontial interpolation of things that are meant to be email addresses

[14:02] <woosley> Oh, my bad^^

[14:03] <colomon> donri: I know I prefer @a.map({}).  My impression is that is a fairly common thing among the zebras..

[14:04] <donri> but that's method not function :)

[14:05] <colomon> donri: that's my point precisely

[14:05] <donri> also if the function was an export of the method the list should come first too right?

[14:05] <donri> method map is export ...

[14:05] <donri> map @instance, args...

[14:05] <moritz_> well, it's not

[14:06] <donri> why not!

[14:06] <moritz_> just like join() has the separator first

[14:06] <moritz_> donri: to adher to common idioms when used a function

[14:06] * jnthn wonders how much of that is Perl 5 history

[14:06] <donri> idioms that fit less nicely in perl6 :(

[14:06] <moritz_> *all* functional languages have  map CODE LIST

[14:06] <donri> i know

[14:06] <jnthn> Ah, true.

[14:07] <donri> pretend it means "map over" then

[14:07] <donri> map-over @list, &code

[14:07] *** kaare_ left
[14:07] <moritz_> and join @list, 'separator'

[14:07] * moritz_ shudders

[14:08] <donri> is that how it's now?

[14:08] <moritz_> donri: map, join and the likes can't be a simple 'is export' anyway

[14:08] <moritz_> no

[14:08] <donri> because that looks better too

[14:08] <donri> "join this @list with this 'separator'"

[14:08] <moritz_> because it doesn't just want an array, but a slurpy arrray in the signature

[14:08] <colomon> moritz_: exactly

[14:09] <moritz_> and you can't have required positionals after variadic positionals

[14:09] <colomon> rakudo: say ~map(* + 10, 2, 3, 15)

[14:09] <p6eval> rakudo 74dcce: OUTPUT«12 13 25␤»

[14:09] <moritz_> and when you have lazy lists, it just makes much more sense to treat the *first* argument special, in contrast to the last, which might not even exist

[14:10] *** pmurias joined
[14:10] <moritz_> just think of map (1 ... *), *.sqrt

[14:10] <moritz_> it'll never get to the closure

[14:11] <pmurias> ggoebel: not yet

[14:11] <woosley> rakudo: class KKK{ has Bool $.att is rw}; my $class = KKK.new; $class.att = "string"

[14:11] <p6eval> rakudo 74dcce:  ( no output )

[14:11] <woosley> rakudo: class KKK{ has Bool $.att is rw}; my $class = KKK.new; $class.att = "string"; say $class.att;

[14:11] <p6eval> rakudo 74dcce: OUTPUT«string␤»

[14:11] <moritz_> woosley: attributes aren't typed yet. ETA: maybe 3 months

[14:14] <jnthn> Will happen with 6model merge as they're needed for natively typed attrs.

[14:14] *** plobsing left
[14:15] * moritz_ looks forward to it

[14:15] <moritz_> and as always it will break quite some code

[14:15] * moritz_ remembers all that code with my Array of Int @a; etc.

[14:15] <colomon> but that's the best sort of breakage, as it gives us direction and focus and more power when it is fixed!

[14:15] <moritz_> aye

[14:16] <moritz_> anyway, I think I've learned my lesson from last time and don't put type constraints in that aren't enforced

[14:19] *** amkrankruleuen left
[14:20] *** amkrankruleuen joined
[14:23] *** risou joined
[14:27] *** amkrankruleuen left
[14:29] *** bluescreen joined
[14:32] *** bluescreen is now known as bluescreen10

[14:33] *** amkrankruleuen joined
[14:34] *** qiyong left
[14:34] *** qiyong joined
[14:36] *** bluescreen100 joined
[14:36] *** bluescreen10 left
[14:36] *** bluescreen100 left
[14:36] *** bluescreen10 joined
[14:46] *** amkrankruleuen left
[14:47] *** amkrankruleuen joined
[14:48] *** pigdude joined
[14:49] *** mberends joined
[14:49] *** stifynsemons left
[14:50] *** mkramer joined
[14:57] *** amkrankruleuen left
[14:57] *** sftp joined
[14:57] *** amkrankruleuen joined
[14:58] *** bluescreen10 left
[14:59] *** stifynsemons joined
[15:03] *** amkrankruleuen left
[15:04] *** amkrankruleuen joined
[15:05] *** bluescreen10 joined
[15:05] *** bluescreen10 left
[15:06] *** bluescreen10 joined
[15:07] *** kaare_ joined
[15:09] *** tyatpi_ joined
[15:09] *** bluescreen100 joined
[15:10] *** bluescreen10 left
[15:12] *** bluescreen100 is now known as bluescreen10

[15:13] *** PacoLinux joined
[15:16] *** alester joined
[15:16] *** stifynsemons left
[15:18] *** hanekomu joined
[15:18] <sorear> good * #perl6

[15:18] <phenny> sorear: 07:34Z <diakopter> tell sorear "tough to see".  NaCl has a lot of potential, especially if Adobe teams up with Google (like it seems might occur)

[15:18] <sorear> moritz_: I did not know about the "@a" issue

[15:19] <moritz_> sorear: now you do :-)

[15:19] * sorear wonders where the p6a mail went

[15:20] <moritz_> sorear: I have a patch at home that adds more passing files to spectesst... will you give me a commit bit, or should I pull request?

[15:20] <moritz_> (can't push right now, don't have access to that machine)

[15:21] <sorear> oh! sorry, meant to do that after the release.

[15:21] <moritz_> sorear: btw rakudo stringifies parcels just like it stringifies arrays and lists; I guess changing that would make quite a few tests pass too

[15:22] <moritz_> perl6: say ~(1, 2, 3)

[15:22] <p6eval> pugs, rakudo 74dcce: OUTPUT«1 2 3␤»

[15:22] <p6eval> ..niecza v3-23-g1237dcf: OUTPUT«Parcel()<instance>␤»

[15:22] <sorear> just moritz, right?

[15:22] <moritz_> sorear: right

[15:22] <sorear> done.

[15:22] <moritz_> thank you

[15:25] *** Juerd left
[15:25] *** Juerd joined
[15:25] <pmurias> sorear: hi

[15:26] <dalek> niecza: 8a2c6e7 | pmurias++ | / (2 files):

[15:26] <dalek> niecza: [cl-backend] added support for hint_hack

[15:26] <dalek> niecza: review: https://github.com/sorear/niecza/commit/8a2c6e7ff9

[15:26] *** PerlJam left
[15:27] *** PerlJam joined
[15:28] <sorear> pmurias: hi

[15:31] *** MayDaniel left
[15:31] <moritz_> perl6: say ~(1, 2, a => 1, b => 2, c => 3)

[15:31] <pmurias> sorear: what does letscope do?

[15:31] <p6eval> pugs, rakudo 74dcce: OUTPUT«1 2 a       1 b     2 c     3␤»

[15:31] <p6eval> ..niecza v3-24-g8a2c6e7: OUTPUT«Parcel()<instance>␤»

[15:32] <takadonet> morning all

[15:32] <moritz_> o/

[15:35] <tadzik> o/

[15:38] *** MayDaniel joined
[15:38] <dalek> niecza: f05ff59 | sorear++ | docs/nam.pod:

[15:38] <dalek> niecza: Document letscope

[15:38] <dalek> niecza: review: https://github.com/sorear/niecza/commit/f05ff59d85

[15:38] *** MayDaniel left
[15:41] *** plobsing joined
[15:41] <sorear> pmurias: how's that?

[15:42] <pmurias> the description seems clear

[15:42] <pmurias> i don't like having flags in opcodes

[15:45] <pmurias> sorear: or did you refer to something other then the commit?

[15:50] <pmurias> is redefining infix:<=> allowed in Perl 6?

[15:50] <sorear> I was referring to the commit, in reply to 09:31 < pmurias> sorear: what does letscope do?

[15:50] <sorear> I'm pretty sure it is

[15:50] <sorear> there should be a test for that in test.pl

[15:51] <PerlJam> "allowed" and "Perl 6" are words that don't seem to belong in the same sentence

[15:51] <PerlJam> unless it's something like "You're allowed to do almost anything in Perl 6"

[15:51] * sorear out

[15:51] <moritz_> PerlJam: am I allowed to use Perl 6 at work?

[15:51] <PerlJam> moritz_: yes!

[15:55] <pmurias> moritz_: are you forbidden from using Perl 6 at work?

[15:56] <moritz_> that was more rhetorical :-)

[15:56] *** stifynsemons joined
[15:57] <moritz_> pmurias: not at all, they only care if I publish papers in the end -- but currently no Perl 6 implementation is suited for what I do (symbolic calculations, number crunching, generating pretty plots)

[15:57] *** Guest87704 joined
[15:59] *** woosley left
[16:00] *** mfranc left
[16:06] <pmurias> moritz_: what do you use currently?

[16:06] <moritz_> pmurias: Mathematica, C, matlab, gnuplot, ...

[16:06] <PerlJam> s/matlab/PDL/ and you get some of what I do too

[16:10] *** JimmyZ left
[16:11] *** qiyong left
[16:16] *** bluescreen10 left
[16:16] *** Patterner left
[16:18] *** Psyche^ joined
[16:18] *** Psyche^ is now known as Patterner

[16:19] <donri> yay lua is faster than PASM ;)

[16:19] <TimToady> quick, rewrite p6 in lua

[16:20] <moritz_> or rewrite lua in p6, to make it slower :-)

[16:20] <donri> there's lua on parrot :)

[16:21] *** shi joined
[16:21] *** tyatpi_ left
[16:21] <donri> just testing startup time for hello world in different languages

[16:21] <donri> lua: 4ms, pir/pasm: 12ms, python: 27ms, rakudo: 490ms :D

[16:22] <moritz_> concluding that "lua is faster" without further qualification seems oh so wrong

[16:22] <sbp> rakudo just adds a pause for emphasis

[16:22] <donri> moritz_: not really being serious here

[16:22] <moritz_> donri: good

[16:23] <donri> perl5: 6ms

[16:23] <donri> take that python ;)

[16:24] <moritz_> p5 is amazingly fast for a non-jitted scripting language

[16:24] <moritz_> it pays dearly for it... you'll see what I mean when you try to fix a bug in the regex engine :-)

[16:24] <moritz_> or in the lexer

[16:25] <donri> does it even do vm/bytecode?

[16:25] <PerlJam> donri: what's the startup time of the empty program?

[16:26] <moritz_> donri: it compiles to an optree that's executed in memory

[16:26] <PerlJam> donri: also, check out the memory footprint of each of those programs too

[16:28] *** ymasory_ joined
[16:29] <plobsing> parrot starts up slow. this is a known issue. but there are many priorities above it. such as parrot runs slow, parrot is memory hungry, etc.

[16:32] * plobsing sometimes wonders how hard it would be to flatten perl 5's op trees to threaded code. they already flatten it to a linked list, so it could work.

[16:33] <plobsing> probably very hard though

[16:33] <moritz_> rurban was working on JIT-compiling the optree, last I talked to him

[16:39] *** cxreg2 is now known as cxreg

[16:45] *** justatheory joined
[16:52] *** tzhs left
[16:58] *** GinoMan joined
[17:01] *** coela joined
[17:04] *** shi left
[17:05] *** Bzek left
[17:12] *** awoodland left
[17:14] *** GinoMan left
[17:22] *** bluescreen10 joined
[17:23] <colomon> #phasers in 97 minutes?

[17:24] <tadzik> alredy? /o\

[17:24] <tadzik> if everything goes right, I'll be late :)

[17:24] *** mtk left
[17:26] * mberends -> amsterdam.pm o/

[17:31] *** mberends left
[17:31] <sjohnson> after reading the camel book for a while

[17:31] <sjohnson> im kind of curious if p6 is going to be as integrated with a system as p5 is..

[17:32] <sjohnson> by that i mean, all the pipe stuff, syswrite stuff, and a lot of the "Special Names" from the camel look that seem pretty advanced

[17:33] *** mtk joined
[17:35] <moritz_> sjohnson: I guess it will be available, but via an ordinary API, not special syntax

[17:38] <dalek> niecza: 77a9821 | moritz++ | t/spectest.data:

[17:38] <dalek> niecza: more passing test files

[17:38] <dalek> niecza: review: https://github.com/sorear/niecza/commit/77a98214c7

[17:39] *** Hien joined
[17:39] <Hien> perl6: say 3;

[17:39] <p6eval> pugs, rakudo 74dcce, niecza v3-25-gf05ff59: OUTPUT«3␤»

[17:40] <Hien> perl6: say 'Hello';

[17:40] <p6eval> pugs, rakudo 74dcce, niecza v3-25-gf05ff59: OUTPUT«Hello␤»

[17:40] <moritz_> hello Hien 

[17:40] <Hien> @moritz_ hello

[17:41] <sjohnson> moritz_: more so just wondering if the design goal is to be just as powerful systemwise for some easy-to-write highlevel tasks

[17:41] <sjohnson> some tasks are making me realize that p5 is pretty refined and comprehensive

[17:42] *** _twitch left
[17:44] *** LumberCartel joined
[17:44] *** LumberCartel left
[17:46] *** daxim left
[17:46] *** masak joined
[17:46] <masak> \o/, zebras

[17:46] <jnthn> masak! \o/

[17:46] <masak> \o/!

[17:47] * jnthn wonders how to factorial a o/

[17:47] *** pmurias left
[17:48] <moritz_> well, by [*] 1..\o/

[17:48] <masak> duh :)

[17:48] <jnthn> :P

[17:49] <moritz_> #phasers in 71

[17:49] * jnthn will be about for it.

[17:49] <[particle]>  sjohnson: perl6:perl5::physics:biology - lots of rules and relationships, less to memorize

[17:51] *** hanekomu left
[17:54] *** dwhipp joined
[17:56] *** risou left
[18:01] <dwhipp> Looking at Numeric.pm I see a whole bunch of methods implemented as method foo() { note "foo needed"; fail "foo needed" }

[18:02] <dwhipp> I'm wondering if { fail :verbose, "..." } would be the right way to prevent this duplication

[18:03] <moritz_> dwhipp: rakudo sometimes silently eats fail() messages (and at the same time aborts execution of a statement)

[18:03] *** bluescreen10 left
[18:03] <moritz_> dwhipp: so it's more of a rakudo problem than a general problem with fail

[18:03] *** lue joined
[18:03] *** __rnddim__ left
[18:04] <dwhipp> I'd been thinking that implementing such an option would be a good way to learn PIR ... seems probably not needed

[18:06] *** coela left
[18:07] <masak> there are lots of other good reasons to learn PIR, most of them sitting in RT ;)

[18:08] <moritz_> btw dwhipp++ for the series patch

[18:08] *** dsp_ left
[18:08] *** chitragupt left
[18:09] *** gdey_ joined
[18:10] <dwhipp> Thanks -- I'll have to go trawling.

[18:10] *** Hien left
[18:12] *** jedai_ joined
[18:12] *** jedai left
[18:13] *** chitragupt joined
[18:14] *** Axius joined
[18:15] *** cdarroch joined
[18:15] *** cdarroch left
[18:15] *** cdarroch joined
[18:16] *** bluescreen10 joined
[18:23] <masak> dwhipp: it's a good idea to run whatever you find with the people here on #perl6. sometimes the status of tickets is partly encoded in people's heads.

[18:24] <masak> for example, there's a large number of open tickets that will miraculously be fixed when nom merges.

[18:24] *** dsp_ joined
[18:26] *** ymasory_ left
[18:26] <moritz_> where nom = new object model

[18:30] <masak> specifically, its representative branch in the rakudo repo.

[18:32] *** lamstyle_ joined
[18:35] *** GinoMan joined
[18:37] *** hanekomu joined
[18:39] *** pigdude left
[18:39] *** hanekomu_ joined
[18:41] *** pigdude joined
[18:41] *** hanekomu left
[18:45] *** envi left
[18:45] *** zby_home joined
[18:46] *** dsp_ left
[18:46] *** noganex_ joined
[18:49] *** noganex left
[18:50] *** am0c left
[19:00] <pmichaud> good afternoon, #perl6

[19:02] *** bluescreen10 left
[19:03] *** Axius left
[19:05] *** kaare_ left
[19:05] *** kaare__ joined
[19:08] *** MayDaniel joined
[19:10] *** dsp_ joined
[19:12] *** fhelmberger left
[19:15] *** mberends joined
[19:15] *** bluescreen10 joined
[19:17] <moritz_> good afternoon pmichaud. #phasers is in progress

[19:41] *** mberends left
[19:41] *** hercynium joined
[19:45] *** shi joined
[19:50] <pyrimidine> takadonet++ #bioperl6 work

[19:51] *** spq left
[19:57] <takadonet> pyrimidine: thanks :)

[19:57] <takadonet> cannot wait to get translate working completely!

[19:58] *** nymacro left
[20:02] <pyrimidine> takadonet: I think moritz_ or masak had a a nice perl6 post a year or so ago on translation

[20:03] * masak 

[20:03] <masak> it was just a one-liner.

[20:03] <takadonet> pyrimidine: i remember something was posted on this channel a long time ago

[20:03] <takadonet> ya

[20:04] <takadonet> I was more thinking in the lines of unambiguous bp changes 

[20:04] <takadonet> i.e M.K,S etc

[20:04] <pyrimidine> Bio::Tools::CodonTable had much of this stuff 

[20:05] <pyrimidine> which I see you're working on

[20:06] <takadonet> most of still stub methods

[20:08] *** bluescreen10 left
[20:11] <masak> http://strangelyconsistent.org/blog/the-genetic-code-oneliner-in-perl-6

[20:11] *** zby_home left
[20:11] <pyrimidine> masak: yep, still seems to work :)

[20:12] <masak> yay

[20:13] <takadonet> probably going to steal that....

[20:13] <takadonet> already have a working version but it's the p5 way :P

[20:13] <pyrimidine> That could very easily be applied for other codon tables

[20:13] <masak> please don't put the one-liner as-is in production code :P

[20:13] *** kaare__ is now known as kaare_

[20:14] <pyrimidine> oh, come on

[20:14] <pyrimidine> :)

[20:14] <masak> when one optimizes for readability, it's slightly longer.

[20:14] <takadonet> we will see

[20:14] <takadonet> :)

[20:14] <pyrimidine> masak: very true.  though it's fairly readable now, if you know how to read it.

[20:14] <takadonet> ya

[20:14] <masak> I disagree :)

[20:15] <pyrimidine> What would you improve on?  

[20:15] <masak> I think I'd do the long string as a hash table, laying it out so that the codons stood out.

[20:15] <masak> I'd definitely have things as several shorter statements, instead of one long.

[20:16] <pyrimidine> ok

[20:16] <masak> descriptive variable names.

[20:16] <masak> stuff like that.

[20:16] <takadonet> well atm I'm still in getting it to work stage

[20:17] <takadonet> Once everything is ported over and all the tests are passing. Then it's time to improve it

[20:18] * pyrimidine nods

[20:19] <takadonet> Since we have no real users, we can do whatever we want, when we want

[20:24] <masak> I think I'd write the hash table as "AAA" => "K" etc for extra clarity.

[20:24] <masak> one can lay it out in rows and columns so as to group things in the usual way.

[20:24] *** bluescreen10 joined
[20:34] *** dakkar left
[20:35] *** mberends joined
[20:36] *** tyatpi_ joined
[20:40] *** bluescreen10 left
[20:41] *** justatheory left
[20:41] *** justatheory joined
[20:45] *** tyatpi_ left
[20:47] *** MayDaniel left
[20:48] *** coldhead joined
[20:51] * TimToady tries once more to get home...  &

[20:51] <jnthn> TimToady: Good luck.

[20:52] * moritz_ wishes TimToady a successful and pleasant journey

[21:04] *** mkramer1 joined
[21:04] *** mberends left
[21:06] *** M_o_C joined
[21:08] *** mkramer left
[21:11] *** MayDaniel joined
[21:12] *** plainhao left
[21:14] *** plobsing left
[21:15] *** plobsing joined
[21:17] *** Rotwang joined
[21:17] *** tyatpi_ joined
[21:18] *** jevin joined
[21:19] *** MayDaniel left
[21:26] *** kulp joined
[21:27] *** kulp left
[21:27] *** plobsing left
[21:28] *** ashleydev left
[21:32] *** M_o_C left
[21:41] *** shi left
[21:44] *** shi joined
[21:46] *** Helios` left
[21:49] *** Helios` joined
[21:50] *** mkramer1 left
[21:53] *** plobsing joined
[21:54] <tyatpi_> Hello Room.  I want to install Perl 6, but rakudo.org seems to be down.  Or is it just me?

[21:55] <PerlJam> gack!

[21:55] <PerlJam> it's down for me as well

[21:55] <Rotwang> tyatpi_: you can get sources from github

[21:55] <plobsing> It's not just you! http://rakudo.org looks down from downforeveryoneorjustme.com.

[21:56] <PerlJam> tyatpi_: https://github.com/rakudo/rakudo

[21:58] <tyatpi_> plobsing, That is site is so helpful

[22:03] <masak> tyatpi_: http://github.com/rakudo/rakudo/downloads

[22:06] *** rbuels is now known as troll

[22:06] *** troll is now known as rbuels

[22:08] <masak> rbuels: glad it was just a passing phase ;)

[22:08] *** am0c joined
[22:08] <rbuels> masak: i was telegraphing my intentions in #bioinformatics ... like a cobra spreading its hood

[22:09] <masak> I guessed it was something like that.

[22:13] *** mkramer joined
[22:21] <masak> 'night, #perl6

[22:21] *** masak left
[22:22] *** bluescreen10 joined
[22:23] *** bluescreen10 left
[22:25] *** guest___ joined
[22:26] <guest___> hello, is the Rakudo site down for maintenance?

[22:27] <tadzik> not neceserilly for maintenance, but yes, down

[22:27] <tadzik> what do you need?

[22:27] <guest___> just wanted to check out if the new monthly was out

[22:27] <guest___> was down last night and down now

[22:28] *** GinoMan left
[22:28] <guest___> so...will it be back up or is there a status somewhere obvious that I missed?

[22:29] <tadzik> well, it feels a bit unstable these days

[22:29] <tadzik> you can follow the releases at github

[22:29] <guest___> the website or the implementation itself?

[22:30] <jdhore> The next monthly Rakudo release is not until March 17th

[22:31] <guest___> are monthlies no longer happening?

[22:31] <colomon> guest___: the release was last week

[22:31] <colomon> this month's, I mean.

[22:31] <tadzik> guest___: Stars are no longer monthly, if that's what you mean

[22:32] <guest___> yeah, just kind of not good when you go to rakudo.org and there is nothing there. doesn't instill a bunch of confidence.

[22:32] <jdhore> sites go down

[22:32] <jdhore> It's the internet

[22:32] <jdhore> It happens

[22:32] <guest___> yeah i know. i am in the monitoring business.

[22:33] <sjohnson> perl 6 has been canceled!

[22:33] <guest___> so...just grin and bear with it being part of the Perl ecosystem?

[22:35] <sjohnson> i wouldn't be worried about it

[22:35] <sbp> guest___: http://github.com/rakudo/rakudo/downloads

[22:36] <guest___> yup. thanks.

[22:36] <sbp> yw

[22:37] <guest___> is the Feb. version running on parrot 3.1?

[22:39] <sbp> ./build/PARROT_REVISION:RELEASE_3_1_0 3.1.0

[22:39] <colomon> which is to say, yes.

[22:40] <guest___> thank you

[22:40] <sbp> dim problem

[22:41] <sbp> (it is still St. David's Day here for a bit, after all)

[22:43] * colomon had a St. David's Day party gig back in 2007, at which we inexplicably played Irish, Quebecois, and Newfoundland music.

[22:45] <guest___> I'm sorry to hear that. That could bring all kinds of "things" out of the woodwork.

[22:45] <sbp> yeah, I can only stand so much Stereophonics too

[22:47] *** pigdude left
[22:47] <sjohnson> st david's day eh... *rubs chin*

[22:47] *** hanekomu_ left
[22:49] *** mkramer left
[22:50] <guest___> Just read Moritz's post on the 14th.  Is more focus shifting to the Niecza implementation?  

[22:51] *** kaare_ left
[22:51] *** Mowah left
[22:51] *** ab5tract left
[22:51] <colomon> guest___: Depends on what you mean by "more", I guess.

[22:51] <colomon> There's lots of active development on both Niecza and Rakudo's nom branch.

[22:51] <colomon> and some development on Rakudo's main branch, of course.

[22:52] <guest___> as someone who has limited time but wants and would like to see Perl 6 commonly in production...what the recommendation?

[22:52] <guest___> i'm just a sheeple...

[22:52] <guest___> but don't see too many vocal shephards

[22:53] <colomon> Right now today, your best bet might be to work on a module.  :)

[22:53] <colomon> Get something useful done in a sandbox of your own, and hopefully it will work on both implementations in the not-so-long run.

[22:54] <guest___> is the idea that we'll have multiple "common" implementations then?

[22:54] <colomon> the idea is that Perl 6 will have no official implementation.

[22:54] <colomon> And even compiler which can pass most of the spectest is officially a Perl 6.

[22:54] <colomon> *every

[22:55] <[Coke]> pmichaud++

[22:57] <guest___> great. who's working on the compiler for my System/38?

[22:57] *** shi left
[22:58] *** mberends joined
[22:58] <guest___> sorry I mean AS/400

[22:58] <guest___> i mean i Series

[22:58] <guest___> no, Series I

[22:59] <guest___> you kids and your dang language platforms. I can't even keep up with my IBM platforms.  I mean any compiler IBM Power platform?

[23:00] <guest___> I was hoping we could move off of PHP that we're using.

[23:00] *** plobsing left
[23:01] <flussence> you don't need Perl 6 for that. Even 5 is a million times improvement.

[23:01] <frettled> guest___: If I'd been mst, I would've said "well volunteered".  :D

[23:02] <frettled> (for working on the compiler for your IBM systems)

[23:02] <guest___> I'd rather not move back to RPG

[23:02] <frettled> Richard P. Grant?

[23:04] *** ymasory_ joined
[23:04] <guest___> is there an implementation on the JVM?

[23:05] <frettled> Someone here is actually working on that.

[23:05] <frettled> I don't recall the status of it, ISTR that they have to work around the lack of a "goto".

[23:06] <guest___> interesting

[23:06] <jnthn> mberends++ is working on a port of 6model and NQP

[23:07] <jnthn> It's based upon the CLR port.

[23:07] <guest___> any links?

[23:07] <jnthn> The aim is that once they are ported, Rakudo will be relatively easily ported.

[23:07] <jnthn> guest___: https://github.com/jnthn/6model/tree/master/java

[23:08] *** Rotwang left
[23:08] <guest___> thank you

[23:09] <guest___> C# lambda expressions (using => notation) become Java anonymous classes. This is a lot of workaround writing because the anonymous classes require an interface definition to implement, otherwise they inherit from Object.

[23:09] <guest___> ughhh

[23:10] <jnthn> It doesn't pass anything close to as many tests as the CLR version. Though I'm hacking with mberends this weekend so maybe we get some more progress. :)

[23:10] <jnthn> Yes, "fun"... :)

[23:10] <guest___> haha. well sounds like a great project.

[23:11] <jnthn> :)

[23:12] <frettled> There are lots of great little projectlets in the Perl 6 ecosystem.

[23:12] <sjohnson> thats cute

[23:12] <guest___> C# sealed class becomes Java final class.  Effect is not quite the same.

[23:12] * jnthn doesn't remember Java enough to know what the difference is :)

[23:13] <guest___> aren't you being a bit conservative with the use of "projectlets" for the scope?  :)

[23:13] *** plobsing joined
[23:14] <sjohnson> projectlets is a cute word

[23:15] <guest___> anyway, good stuff going. Sorry to disturb too much.  Just initially wanted to stop by and see what was up with the Rakudo site.  For newbies just exploring from the Perl 6 site it doesn't give off a warm vibe.  Thanks for your responses.

[23:16] <jnthn> guest___: Yes, it's not ideal. :(

[23:16] * jnthn hopes it'll stabalize somewhat soon.

[23:16] <guest___> but I do like your new Perl 6 velociraptor logo.  That'll teach 'em.....something.....I guess.

[23:16] <guest___> ciao!

[23:18] *** guest___ left
[23:20] <sjohnson> rakudo site works for me

[23:20] *** plobsing left
[23:20] <sjohnson> *shrug*

[23:20] *** slent_h joined
[23:20] <jnthn> sleep &

[23:21] <[Coke]> yes, I just pinged Andy.

[23:22] <alester> eet ees fix

[23:22] <[Coke]> alester++ # this psuedo reminds me of abester, from b5.

[23:30] <donri> is it madness to consider inventing a toy language to implement on parrot

[23:34] <[Coke]> nope.

[23:39] *** whiteknight joined
[23:49] *** tyatpi_ left
[23:50] *** am0c left
[23:53] *** tyatpi_ joined
[23:53] *** slent_h left
[23:56] <diakopter> there's more than one way not to do it

[23:57] *** donri left
