[00:02] *** Pathin joined
[00:04] *** Pathin left
[00:05] <TimToady> rakudo: use MONKEY_TYPING; augment class Int { has $.answer = 'lue' }; say 42.answer;

[00:05] <p6eval> rakudo 1ddda5: OUTPUT«===SORRY!===␤Modifications to classes are not allowed after instantiation.␤»

[00:06] <TimToady> That's Not Fair!!!

[00:07] <Tene> TimToady: Perhaps it's time to reconsider adding lexically-scoped class modifications to the spec? ;)

[00:08] *** Pathin joined
[00:39] <jlaire> perl6: say so any "y"|"yes" eq lc ("y" R// Mu)

[00:39] <p6eval> niecza v7-38-gf5e9082: OUTPUT«===SORRY!===␤␤This macro cannot be used as a function at /tmp/Nh_I94OEqO line 1:␤------> say so any "y"|"yes" eq lc ("y" R//⏏ Mu)␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 57…

[00:39] <p6eval> ..rakudo 1ddda5: OUTPUT«Bool::True␤»

[00:39] <p6eval> ..pugs: OUTPUT«*** ␤    Unexpected "R"␤    expecting operator or ")"␤    at /tmp/dsrmXoaZ8a line 1, column 33␤»

[00:39] <jlaire> nom: say so any "y"|"yes" eq lc ("y" R// Mu)

[00:40] <p6eval> nom: OUTPUT«Bool::True␤»

[00:42] <jlaire> masak: fwiw, http://laire.fi/t/crypt-patch-v2.txt

[00:43] <jlaire> it adds 6 non-ws characters :p

[00:46] *** colomon left
[00:53] *** Pathin left
[01:00] *** noganex_ joined
[01:00] *** huf left
[01:03] *** whiteknight joined
[01:03] *** noganex left
[01:04] *** tokuhir__ left
[01:06] *** Pathin joined
[01:20] *** thou joined
[01:29] *** colomon joined
[01:49] *** godfrey999 left
[01:56] <TimToady> perl6: say "foo" R&& 0

[01:56] <p6eval> pugs: OUTPUT«*** ␤    Unexpected "R"␤    expecting operator, ":" or ","␤    at /tmp/uywsdZHZYe line 1, column 11␤»

[01:56] <p6eval> ..rakudo 1ddda5: OUTPUT«0␤»

[01:56] <p6eval> ..niecza v7-38-gf5e9082: OUTPUT«===SORRY!===␤␤This macro cannot be used as a function at /tmp/aaNssrzgyL line 1:␤------> say "foo" R&&⏏ 0␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 570 (CORE die @ 2) ␤  at /…

[01:56] <TimToady> perl6: say "foo" R&& 1

[01:57] <p6eval> niecza v7-38-gf5e9082: OUTPUT«===SORRY!===␤␤This macro cannot be used as a function at /tmp/dWYzZL3Mbf line 1:␤------> say "foo" R&&⏏ 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 570 (CORE die @ 2) ␤  at /…

[01:57] <p6eval> ..pugs: OUTPUT«*** ␤    Unexpected "R"␤    expecting operator, ":" or ","␤    at /tmp/bsXI2Yk2Cq line 1, column 11␤»

[01:57] <p6eval> ..rakudo 1ddda5: OUTPUT«foo␤»

[01:57] *** whiteknight left
[02:03] <[Coke]> # FUDGED!

[02:03] <[Coke]> too few arguments: 0 passed, 26200224 expected

[02:08] <colomon> woah.  don't want to have to write out that many arguments.

[02:12] *** Chillance left
[02:13] <TimToady> use an xx

[02:13] <TimToady> or an ax

[02:22] *** bitpart joined
[02:28] *** bitpart left
[02:33] *** bkolera joined
[02:37] <TimToady> moritz: http://perlgeek.de/en/article/5-to-6#Postfcircumfix_and_Circumfix has a {} vs [] typo, reported by davido++

[02:39] <TiMBuS> Postfcircumfix

[02:39] <TiMBuS> well thanks i just spat all over my monitor reading that out loud :c

[02:39] <TimToady> that too...

[02:46] *** Instil___ joined
[02:49] *** Instil left
[02:49] *** bs338 joined
[03:24] *** donri left
[03:26] *** awwaiid left
[03:27] *** Su-Shee left
[03:28] *** Su-Shee joined
[03:34] <TimToady> http://rosettacode.org/wiki/Inverted_index#Perl_6 <-- kinda makes the other languages look verbose

[03:36] <TimToady> Hash.push is scary powerful

[03:44] <TiMBuS> what happens if you don't use push, but instead normal assignment?

[03:45] <TimToady> later keys clobber earlier dups

[03:45] <TiMBuS> ohhh

[03:46] <TiMBuS> that feature I always think about when munging data and them promptly forget until next time

[03:46] <TiMBuS> that -is- scary powerful :o

[03:52] *** Clinr121 joined
[03:55] *** anzime joined
[03:59] *** buubot_backup left
[04:07] *** Clinr121 left
[04:09] *** Pathin left
[04:12] *** Pathin joined
[04:14] *** thou left
[04:19] <soh_cah_toa> perl6: say $*OSNAME

[04:19] <p6eval> rakudo 1ddda5:  ( no output )

[04:19] <p6eval> ..niecza v7-38-gf5e9082: OUTPUT«Any()␤»

[04:19] <p6eval> ..pugs: OUTPUT«␤»

[04:19] <soh_cah_toa> ugh, it's not just my installation :(

[04:21] *** buubot_backup joined
[04:24] <soh_cah_toa> hmm...it looks like $*OS works but i'm almost positive that the spec says that $^O has become $*OSNAME

[04:30] <TimToady> perl6: say $*OS.perl

[04:30] <p6eval> niecza v7-38-gf5e9082: OUTPUT«Any␤»

[04:30] <p6eval> ..rakudo 1ddda5: OUTPUT«"linux"␤»

[04:30] <p6eval> ..pugs: OUTPUT«\undef␤»

[04:39] <sorear> I haven't implemented $*OS yet because there seems to be no standard for how it should work

[04:42] *** huf joined
[04:51] *** bkolera left
[04:59] *** soh_cah_toa left
[05:04] *** cooper left
[05:04] *** anzime left
[05:18] *** kaare__ joined
[05:18] *** benabik joined
[05:27] *** Aridai joined
[05:34] <szabgab> unfortunatelly I still cannot build Rakudo (the master branch) on Windows :)

[05:34] <szabgab> :(

[05:41] <sorear> szabgab: I've got binaries :>

[05:41] <sorear> (for my impl)

[05:48] *** molaf joined
[06:10] *** Aridai left
[06:25] <[Coke]> szabgab: I was able to build rakudo/nom using msvc express & strawberry perl.

[06:25] <[Coke]> needed a set of specific options for the parrot to do that.

[06:25] <[Coke]> failed a few parrot tests, but nothing major.

[06:25] <[Coke]> if you're still stuck, ping me, I'll find you the command line.

[06:25] <[Coke]> (or ask cotto in #parrot on irc.perl.org.)

[06:25] <[Coke]> but now, zzz

[06:26] <szabgab> night :)

[06:26] <szabgab> and for those who might be awake, I'd prefer to have my good old build using pure Strawberry back :)

[06:40] *** _twitch joined
[06:43] *** _twitch is now known as twitch_18_today

[07:02] *** godfrey999 joined
[07:14] *** satyavvd joined
[07:15] *** satyavvd_ joined
[07:18] *** satyavvd left
[07:30] *** satyavvd_ left
[07:32] *** wamba joined
[07:36] *** satyavvd joined
[07:38] *** Jackneill joined
[07:44] *** ZaphrodZenovka joined
[07:50] *** Jackneill left
[07:50] *** Jackneill joined
[07:54] *** kaare__ left
[08:03] *** dukeleto left
[08:03] *** dukeleto joined
[08:08] *** ciphertext left
[08:14] *** ciphertext joined
[08:31] *** ciphertext left
[08:33] *** godfrey999 left
[08:34] *** kaare__ joined
[08:38] *** zorgnax joined
[08:39] *** zorgnax left
[08:40] *** CBro2007 joined
[08:41] <CBro2007> hi all ... is perl6 completely different from 5?

[08:42] <CBro2007> I haven't used perl in a while, but know all the basics of it.. maybe say intermediate level. And then I notice some talk about Perl 6 being a "serious contender"

[08:43] <CBro2007> anyone here?

[08:43] <CBro2007> I was also wondering if perl 6 will now have a concept like Python's bindings? 

[08:43] <CBro2007> I would love for a Perl 6 project to talk to C++ libraries for example! 

[08:46] *** [perlhack] joined
[08:46] <[perlhack]> *THUMBS UP*

[08:48] <moritz> CBro2007: Perl 6 is very different from Perl 5, though they share a lot of philosophy behind the scence

[08:49] <moritz> and also quite some syntax

[08:50] <moritz> CBro2007: we have an experimantal foreign function interface for calling C functions here: https://github.com/jnthn/zavolaj

[08:51] <moritz> it looks quite nice, but still requires some work before it's really mature

[08:51] <moritz> interfacing C++ is always a problem

[08:51] <moritz> because C++ compilers use name mangling to compile C++ code to the same object code that C uses

[08:52] <moritz> and that name mangling is not standardized

[08:52] <CBro2007> moritz: thanks for the response. Its just that I am thinking about a research project and I know perl. Many others have recommended I learn python if I want to use "bindings" to other languages

[08:53] <moritz> the problem with C++ is pretty universal, and independent from the language you use

[08:53] <CBro2007> moritz: i just cannot be bothered learning python :)

[08:53] <moritz> the best you can do is write a C wrapper for C++ libraries, and then use the C interface from {perl5,perl6,python}

[08:54] <moritz> CBro2007: you can also use perl 5. Search on CPAN for 'ffi', 'foreign', 'C++' and so on

[08:54] <CBro2007> can I wrap c++ with c?

[08:54] <CBro2007> I am not sure that is possible

[08:54] <CBro2007> I know I can call C libs within C++

[08:54] <moritz> sure you can, by writing a C++ wrapper with some extern "C" { ... }  code

[08:54] <colomon> TimToady: on your inverted index -- shouldn't it search for files that include all of the given words?  At least, the problem seems vague...

[08:55] <CBro2007> I asked in the perl 5 channel and got the response that perl 6 and 5 are completely different things

[08:55] <CBro2007> while I was under the impression that 6 is just an upgrade on 5?

[08:55] <moritz> it's not just an upgrade

[08:55] <moritz> it's a completly new start

[08:56] <CBro2007> but does that mean that I cannot use any modules from CPAN that work with perl 5 yeah?

[08:57] <CBro2007> I am just worried that the work I do in perl 5 may not be portable to perl 6 (if it becomes the new norm)

[08:57] <CBro2007> moritz: would you say its too early to use perl 6?

[08:58] <CBro2007> ?

[09:00] *** cognominal_ joined
[09:02] <CBro2007> moritz: because it sounds like perl 5 is production code while perl 6 is not a complete implementation yeah?

[09:03] *** cognominal left
[09:08] *** [perlhack] left
[09:14] <TiMBuS> CBro2007, personally i wouldnt use rakudo in production at the moment

[09:14] <TiMBuS> but it guess its up to the producer?

[09:15] <CBro2007> TiMBuS: the thing is that I don't work for a company.. I am a researcher at a uni

[09:17] <CBro2007> so in other words I have the option to screw up a bit

[09:17] <CBro2007> :)

[09:17] <CBro2007> I just don't want to be stuck like - oh fuck we don't support this or that

[09:17] <CBro2007> or I cannot use C code

[09:17] <CBro2007> or I cannot connect to some kinda DB

[09:18] <CBro2007> you know stuff like that would suck

[09:18] <CBro2007> otherwise I am up for a "better perl"

[09:21] <szabgab> CBro2007: I don't think you have such a problem with rakudo, worst case you just need to implement the interface :)

[09:21] <szabgab> or feature

[09:21] <CBro2007> i wouldn't have a clue where to begin if I had to write an interface to C or C++ libraries I would like to use in my perl project

[09:21] <CBro2007> the idea is this

[09:22] <CBro2007> I have with me a team of other students mostly with java and python skills 

[09:22] <szabgab> CBro2007: its esy, you start here on the channel

[09:22] <CBro2007> I am more perl, c, c++

[09:22] *** ciphertext joined
[09:22] <CBro2007> we may or may not have code to share... and then I would like to whip up code really fast..I don't want to learn Python to be able to make use of some of my earlier written C or C++ libraries

[09:23] <CBro2007> I know in perl I can do pretty much anything that those guys claim python can do etc... and it will run pretty fast

[09:23] <CBro2007> if it has some bits that are slow.. I want to rewrite them in C and just be able to use them in my perl project

[09:23] <CBro2007> thinking more along the lines of using OO perl - Moose or something

[09:23] <CBro2007> does Moos work in Perl 6?

[09:24] <CBro2007> I have no idea about perl 6 sorry :)

[09:24] <szabgab> CBro2007: If you need to interact with others then probably p5 is still better

[09:24] <szabgab> P6 has a better object system built in than what Moose is

[09:25] <szabgab> so P6 = P5 + Moose+ about a lot of other things   (if you really need to compare)

[09:25] <CBro2007> man ... looks like it would have been awesome if P6 was an upgrade on P5

[09:25] <CBro2007> :)

[09:25] <CBro2007> yeah but P6 is not an upgrade on P5 is it?

[09:25] <CBro2007> I thought its written from scratch?

[09:25] <CBro2007> I mean can I use modules from cpAN written for p5?

[09:25] <szabgab> in many terms it is not

[09:25] <szabgab> not an upgrade

[09:26] <szabgab> as far as I know in a very limited way you can use CPAN

[09:26] *** huf left
[09:26] *** mj41 joined
[09:27] <szabgab> depending on how much time I have I 'd write stuff in both p5 and p6 just to see how they compare

[09:27] <CBro2007> hmm at the moment I know nothing about p6, but is the syntax similar?

[09:27] <CBro2007> or have you changed it completely ? :)

[09:27] <szabgab> it is not me :)

[09:27] <CBro2007> like you still have the $, % and stuff

[09:28] <CBro2007> or they don't exist any more

[09:28] <szabgab> yes, but the meannigs are not exactly the same

[09:28] <szabgab> element of an array is  @x[2]

[09:28] <CBro2007> that would suck :(

[09:28] <szabgab> and not $x[2]

[09:28] <szabgab> that means a learning curve

[09:28] <CBro2007> that actually I don't mind

[09:28] <CBro2007> that is more intuitive I would say

[09:29] <CBro2007> I always thought it was stupid to say $x[2]

[09:29] <CBro2007> hehe

[09:29] <szabgab> many people say so

[09:29] <CBro2007> as I see it.. p6 seems to be trying to make a better language

[09:29] <CBro2007> something that is more intuitive i think

[09:29] *** mux left
[09:29] <szabgab> indeed

[09:29] <CBro2007> but I am not sure if they want to make it lightweight and super fast compared to p5?

[09:29] <CBro2007> is that a criteria too?

[09:30] *** mux joined
[09:30] <szabgab> that's not the current objective

[09:30] <CBro2007> i see

[09:30] <szabgab> the current objective is to finish and imlement the features

[09:31] <CBro2007> how long do you think that will take?

[09:31] <szabgab> :)

[09:31] <CBro2007> good answer

[09:31] <CBro2007> :)

[09:31] *** huf joined
[09:31] <CBro2007> well I can always contribute my code to p6 as a library or something

[09:31] <moritz> I hope and exepect to have a very well usable compiler at the end of this year

[09:31] <CBro2007> hopefully its not too hacky

[09:31] <CBro2007> moritz: so you are the main dude :)

[09:32] <moritz> we're making a massive overhaul in a branch, it it's much faster already

[09:32] <CBro2007> moritz: are you working on rakudo? or building something completely new?

[09:32] <moritz> now we need to many of the features back in

[09:32] <moritz> CBro2007: i'm working on rakudo, yes. But i'm not the "main dude", that would be pmichaud and jnthn

[09:32] <CBro2007> I think I like the idea of keeping 2 simultaneous projects going .. in p5 and p6

[09:32] <CBro2007> nice work

[09:33] <CBro2007> I start my project in Sep

[09:33] <CBro2007> so it isn't too bad if you have something completed by end of this year

[09:33] <CBro2007> so are you running performance tests against p5? and you find it faster?

[09:33] <moritz> don't used the word "finished"

[09:34] <moritz> neither perl 5 nor GCC nor C++ are "finished"

[09:34] <CBro2007> ok ready for production?

[09:34] <CBro2007> :)

[09:34] <CBro2007> yeah yeah I know ...

[09:34] <moritz> if a software project is finished, it's dead :-)

[09:34] <CBro2007> so how about prod ready?

[09:34] <CBro2007> yeah like lisp

[09:34] <CBro2007> :)

[09:34] *** godfrey999 joined
[09:34] <CBro2007> hahha

[09:34] <moritz> performance won't be as good as p5 for now

[09:34] <CBro2007> hm

[09:34] <moritz> we focus on powerful and easily usable first

[09:35] <CBro2007> I am just starting to read --> http://www.perl.com/pub/2006/01/12/what_is_perl_6.html

[09:35] <moritz> I mean, if speed is your primary concern, you can use assembler or C

[09:35] <CBro2007> just to see what the differences are

[09:35] <CBro2007> i do use C

[09:36] *** satyavvd left
[09:37] <CBro2007> moritz: the idea is that I want to be able to whip up code super fast

[09:37] <CBro2007> and the bits that we think aren't so fast we can optimize or rewrite in C

[09:37] <CBro2007> I think I can write "ready" code much faster in perl

[09:37] <moritz> exactly :-)

[09:38] <CBro2007> and my work is more research oriented.. its more about writing prototypes and seeing what works what doesnt

[09:38] <CBro2007> so I have to rewrite shit over and over again

[09:38] <moritz> well, Perl 6 adds things like a built-in, rich object model, including a meta object model

[09:38] <CBro2007> not so much fun in a C or c++ project you know

[09:38] <CBro2007> i would certainly appreciate that :)

[09:38] <CBro2007> I just wanna kick butt over the python and java guys

[09:38] <CBro2007> :)

[09:39] <CBro2007> to me java is nice to read and code in etc... but usually runs slow

[09:39] <CBro2007> oh in p6 can you use a functional programming style?

[09:39] *** ciphertext left
[09:39] <moritz> yes

[09:39] <CBro2007> nice

[09:40] <CBro2007> i really hope you guys can also make it run faster than p5

[09:40] <CBro2007> that would be the perfect combo

[09:40] <CBro2007> :)

[09:40] <CBro2007> what do you guys write your code in?

[09:40] <CBro2007> C?

[09:40] <szabgab> and cheaper :)

[09:40] <CBro2007> cheaper? you buy perl? 

[09:41] <tadzik> CBro2007: Perl 6 mainly :) Also, Perl 5, C, Vala

[09:41] <szabgab> sorry, bad joke

[09:41] <CBro2007> hehe

[09:42] <moritz> the compiler is mostly written in Perl 6

[09:42] <CBro2007> ah so its not completely a write from scratch kinda project

[09:42] <CBro2007> I mean if p6 uses p5 code under the covers.. you will still inherit some of their performance headaches too

[09:43] <CBro2007> ok

[09:43] <tadzik> what do you mean in "not from scratch project"?

[09:43] <moritz> p5 is only used in the build system

[09:43] <CBro2007> so p6's main objective seems to be very much making it a more regular language

[09:43] <CBro2007> that more people can use

[09:44] <CBro2007> tadzik: my understanding was that the core of p5 is written in C

[09:44] <CBro2007> many of the built-in functions

[09:44] <CBro2007> but anyway ... I am more clear about the objective of p6 is now .. well kinda :)

[09:45] <CBro2007> will read up more about it

[09:45] <CBro2007> and if I get stuck..will bug you guys

[09:45] <CBro2007> hehe

[09:45] *** ciphertext joined
[09:52] <tadzik> please do :)

[09:53] <CBro2007> "Perl 6 has a Perl 5 compatibility layer" - is this true?

[09:53] <tadzik> it's supposed to be, yes :)

[09:54] <tadzik> there's a module which allows you to use Perl 5 modules in Perl 6 code, but it

[09:54] <CBro2007> does this mean if I find myself in the situations where p6 doesn't allow me to do something I can use p5 there?

[09:54] <tadzik> 's quite limited atm

[09:54] <CBro2007> ok

[09:55] <CBro2007> are all of you guys volunteers to p6?

[09:56] <tadzik> no one is forced to do that, so in a way everyone's a volunteer I'd say :)

[09:57] <CBro2007> no but what I mean is that how does one contribute?

[09:57] <tadzik> just do it :)

[09:57] <CBro2007> what skill sets do you need to help out in p6?

[09:57] *** daniel-s joined
[09:57] <tadzik> http://rakudo.org/how-to-help/

[09:57] <CBro2007> yeah but isn't there like a ToDo list or areas where we need more coders?

[09:58] <tadzik> see https://github.com/perl6/ecosystem/wiki/Most-Wanted%3A-Modules-to-write-port

[09:58] <tadzik> that's for the modules, you can read about them on modules.perl6.org

[09:59] <CBro2007> so I mean I know p5 ... not a guru or anything.. but wonder what else I need to know

[09:59] <CBro2007> do I just have to learn p6 syntax?

[10:00] <CBro2007> and then try to rewrite the p5 stuff like say the Crypto package to p6?

[10:00] <tadzik> now the easy way to get involved and get karma is: go through RT, look for bugs which have been fixed already and no one noticed (LOADS of them, really), and notify someone here that they should be closed. If they're still broken, writing a spectest helps

[10:00] <tadzik> I'd recommend learning Perl 6 semantics too :)

[10:00] <tadzik> you'll like moritz++'s "Perl 5 to 6" articles I suppose

[10:00] <tadzik> http://perlgeek.de/en/article/5-to-6

[10:00] <CBro2007> yeah I am thinking that if I can dig deeper into p6 core then maybe I get a chance to learn it quicker

[10:01] <CBro2007> i could be wrong

[10:01] <CBro2007> :)

[10:01] <tadzik> if you mean "p6 core" as the "p6 compiler", I'm not so sure

[10:01] <CBro2007> yeah I don't think I would want to go there

[10:01] *** daniel-s left
[10:02] <CBro2007> but I don't mind helping out rewriting some modules from p5 o p6

[10:02] *** daniel-s_ joined
[10:02] <tadzik> that's cool

[10:02] <CBro2007> I mean I had a pretty decent crytpography background

[10:02] <CBro2007> only thing is I don't know p6 syntax

[10:03] <CBro2007> and I was thinking that the work I do at uni is mostly stuff like computational geometry etc.. or network flow algos... that could be a module contribution too I guess

[10:03] <CBro2007> or maybe not :)

[10:03] <tadzik> read moritz's articles, read the Book, read the advent calendar and then learn one the go :)

[10:03] <tadzik> my first module contribution was Acme::Meow, everything's welcome :)

[10:03] <CBro2007> another thing... how do I know if someone else hasn't taken up the same task?

[10:04] <CBro2007> in moritiz's article it says its hard to learn p6 because it isn't as well documented

[10:04] <tadzik> hmm. They usually announce it here I suppose

[10:04] <CBro2007> and this channel is best to learn?

[10:04] <tadzik> probably :)

[10:04] <CBro2007> so say I was trying to rewrite one of those most wanted modules.. and got stuck ... would I get help here?

[10:04] <tadzik> I learned a lot just sitting here and trying to understand wth are those Big Guys talking about

[10:04] <tadzik> and I still do

[10:04] <tadzik> of course

[10:05] <CBro2007> yeah nice

[10:05] <tadzik> that reminds me, I'm ought to update my "start a module" guide

[10:05] <CBro2007> so what should i read after M's article from 5 to 6?

[10:05] <CBro2007> you mentioned a book?

[10:06] <tadzik> yep. github.com/perl6/book

[10:06] <CBro2007> k

[10:06] <CBro2007> and are all the DBI/DBD modules done for p6?

[10:06] *** daniel-s__ joined
[10:06] <tadzik> you may as well start from it, but I found moritz' articles to be the best start when I was starting

[10:06] *** daniel-s_ left
[10:06] <CBro2007> k

[10:06] <tadzik> I don't think any of them works currently, but I may be wrong. See modules.perl6.org

[10:07] <CBro2007> k

[10:09] *** [perlhack] joined
[10:09] <[perlhack]> :-)

[10:10] *** _daniel-s__ joined
[10:10] *** daniel-s__ left
[10:12] <CBro2007> shit p6 is so neat man!!

[10:12] <CBro2007> am looking at moritz's article here

[10:12] <CBro2007> my @a = 5, 1, 2;

[10:12] <CBro2007> my @b = @a.sort;

[10:13] <CBro2007> this is way more "pleasurable" to write shit in :)

[10:13] <tadzik> nom: my @a = sort(5, 1, 2); @a.perl.say

[10:13] <p6eval> nom: OUTPUT«Could not find sub &sort␤current instr.: '_block1002' pc 88 ((file unknown):68184701) (/tmp/VEk_lm0kbb:1)␤»

[10:13] <tadzik> rakudo: my @a = sort(5, 1, 2); @a.perl.say

[10:13] <p6eval> rakudo 1ddda5: OUTPUT«[1, 2, 5]␤»

[10:13] <tadzik> a'right

[10:14] <CBro2007> neat

[10:14] <CBro2007> this stuff will improve readability of perl code a milion times more for sure

[10:14] <CBro2007> :)

[10:16] <CBro2007> tadzik: are there more articles like the one you sent me?

[10:16] <CBro2007> tadzik: or is that the only one.?

[10:16] *** mj41 left
[10:16] *** whiteknight joined
[10:17] <tadzik> CBro2007: there is a whole series of Perl 5 to 6

[10:17] <tadzik> like 20 of them or so I think

[10:18] <CBro2007> ok 

[10:20] *** hckkid joined
[10:20] <CBro2007> tadzik: doesn't http://perlgeek.de/en/article/5-to-6  include it all?

[10:20] <CBro2007> or are there others?

[10:20] <CBro2007> I understand that that link has all the blog posts grouped together

[10:21] <tadzik> CBro2007: no, these are all

[10:21] <tadzik> yep

[10:22] <CBro2007> cool

[10:22] <CBro2007> thanks

[10:24] <moritz> CBro2007: perl6.org has lots of interesting links

[10:24] <CBro2007> is rakudo the best compiler at the moment?

[10:24] <moritz> well, it's the most feature complete

[10:24] <CBro2007> yeah I am here --> http://dev.perl.org/perl6/

[10:24] <moritz> niecza is the fastest, I think

[10:25] <moritz> perl6.org is more up-to-date, generally

[10:25] <CBro2007> cool

[10:25] *** mj41 joined
[10:25] <CBro2007> I use macosx

[10:26] <tadzik> oh, you'll probably have prove issues with panda then :)

[10:26] <CBro2007> so niecza is for CLR/.NET stuff on windows platform yeah?

[10:26] <tadzik> no, it runs on any platform I think

[10:26] <moritz> CBro2007: I use niecza with mono on linux

[10:26] <tadzik> as long as you have mono

[10:26] <moritz> CBro2007: works on a mac too (iirc colomon uses that)

[10:26] <tadzik> (gosh, isn't setting compilation slow?)

[10:26] <CBro2007> so will I have dramas installing rakudo on macosx

[10:27] <CBro2007> ok just saw your post

[10:27] *** araujo left
[10:27] <CBro2007> guys should I download --> Rakudo Star 2011.04 release

[10:28] <moritz> either that, or built the latest compiler from source

[10:28] <moritz> rakudo: say join ' ', sort { $^b <=> $^a }, 1, 2, 3

[10:28] <p6eval> rakudo 1ddda5: OUTPUT«3 2 1␤»

[10:29] <moritz> rakudo: say join ' ', sort  1, 2, 3

[10:29] <p6eval> rakudo 1ddda5: OUTPUT«1 2 3␤»

[10:29] <CBro2007> show off :)

[10:29] <CBro2007> hehe

[10:29] <CBro2007> These tarballs do not contain the documentation or modules found in Rakudo Star. It is strongly recommended that you download a Rakudo Star distribution unless you are a developer looking to hack on the compiler internals.

[10:30] <CBro2007> so I just want to mess with p6 and see if can work on modifying a p5 module to p6

[10:30] <CBro2007> so the distro should do for me yeah? or you reckon I will have dramas on the mac

[10:31] <tadzik> not neceserilly

[10:31] <tadzik> well Star contains Rakudo, Parrot, Book and some modules

[10:31] <tadzik> you can install Parrot and Rakudo by hand, and install modules you want manually, no problem with tha

[10:32] <CBro2007> i wil start by downloading the source and building it

[10:32] <CBro2007> so what do you recommend finally? build from source yeah?

[10:33] <moritz> that's what all the cool folks do :-)

[10:33] <CBro2007> hehe

[10:33] *** dorlamm joined
[10:33] <moritz> I can't really tell - I build rakudo at least daily, because I'm a rakudo contributor

[10:33] <moritz> so I've never seen the need for tarballs - but that's just me

[10:34] *** hckkid left
[10:34] <CBro2007> yeah your case is different

[10:34] <CBro2007> :)

[10:34] <CBro2007> ok i need ICU

[10:34] <CBro2007> hm

[10:35] *** cognominal_ left
[10:35] *** cognominal_ joined
[10:35] *** woosley joined
[10:37] <dalek> rakudo/nom: 2ad1cba | moritz++ | src/core/Any.pm:

[10:37] <dalek> rakudo/nom: add &sort sub; only works without a comparison block for now

[10:37] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2ad1cba315

[10:44] <tadzik> arr, I was just writing that! :)

[10:44] <tadzik> but I'm trying to hit the comparison sub case too

[10:45] <tadzik> invoke() not implemented in class 'Callable'. That sounds wrongish

[10:47] *** JimmyZ joined
[10:48] <JimmyZ> good early evening, #perl6

[10:51] <eiro> hello

[10:52] <eiro> any node.js like in perl6 ? 

[10:55] *** mj41 left
[11:10] *** Jackneill left
[11:16] <tadzik> what do you mean?

[11:20] *** ab5tract joined
[11:28] *** mj41 joined
[11:29] <CBro2007> http://pastebin.com/H7Yj1Ugu

[11:29] <CBro2007> I get this error while doing a "make"

[11:29] <eiro> tadzik, something to easily deal with async., long polls, callbacks ...

[11:31] <CBro2007> can I get some help guys?

[11:31] <CBro2007> wonder why it f'ed up there

[11:31] <CBro2007> :)

[11:32] <eiro> got to go ... bbl

[11:34] <tadzik> huh

[11:34] *** Jackneill joined
[11:36] *** woosley left
[11:42] <JimmyZ> CBro2007:  looks like there is a space  between PERL  and  6

[11:43] <JimmyZ> CBro2007: try to rename PERL 6 to perl6 or something without space ?

[11:44] *** Instil___ left
[11:56] *** wamba left
[12:01] *** wamba joined
[12:02] *** dorlamm left
[12:09] *** wamba left
[12:11] *** araujo joined
[12:12] <mberends> CBro2007: aye, JimmyZ++ is right, spaces in file and directory names are the work of the devil.

[12:12] *** [perlhack] left
[12:15] <mberends> Who would ever call a directory "My Documents" or "Program Files"?  That's the dumbest idea ever!

[12:16] <JimmyZ> blame Mircosoft!

[12:16] <mberends> maybe that should be "Micro Soft" ;)

[12:16] <JimmyZ> hehe

[12:18] <tadzik> tricky bastards. Yeah, why didn't they use that?

[12:19] <mberends> it was probably a moment of weakness

[12:21] <mberends> of course, they could have done worse and called them "My Documents, " and "Program FIles, " ;)

[12:24] <mberends> *Files of course.  After all, you should never have a need to type them, you can always click on them with the mouse, and leave the actual coding to the professionals.

[12:27] * mberends senses that one of his 'pet peeve' buttons must have been pushed

[12:42] *** Chillance joined
[12:46] *** JimmyZ left
[12:49] *** pochi joined
[12:49] *** twitch_18_today left
[12:53] *** Kivutarrr joined
[12:55] *** Mowah left
[13:10] *** Chillance left
[13:13] *** woosley joined
[13:16] <pmichaud> good morning, #perl6

[13:16] <phenny> pmichaud: 16 Jul 01:56Z <[Coke]> tell pmichaud nom: say +"4/2".WHAT

[13:16] <mberends> hello pm

[13:16] <pmichaud> nom: say +"4/2".WHAT

[13:16] <p6eval> nom: OUTPUT«Segmentation fault␤»

[13:16] <pmichaud> hmmmmm

[13:17] <pmichaud> nom: say +"4/5".WHAT

[13:17] <p6eval> nom: OUTPUT«Segmentation fault␤»

[13:17] <pmichaud> nom: say +"1/2".WHAT

[13:17] <p6eval> nom: OUTPUT«Segmentation fault␤»

[13:17] <pmichaud> oh

[13:17] <pmichaud> nom: say (+"4/2").WHAT

[13:17] <p6eval> nom: OUTPUT«Rat()␤»

[13:17] <pmichaud> nom: say +Rat

[13:17] <p6eval> nom: OUTPUT«Rat()␤»

[13:17] <pmichaud> nom: say "4/2".WHAT

[13:17] <p6eval> nom: OUTPUT«Str()␤»

[13:18] <mberends> ah

[13:18] <flussence> nom: say +"Str()"

[13:18] <pmichaud> nom:  say +Str

[13:18] <p6eval> nom: OUTPUT«0␤»

[13:18] <p6eval> nom: OUTPUT«Segmentation fault␤»

[13:18] <pmichaud> that be it

[13:18] <flussence> nom: say +"foo"

[13:18] <p6eval> nom: OUTPUT«0␤»

[13:18] <flussence> huh

[13:20] <jlaire> nom: +Str

[13:20] <p6eval> nom: OUTPUT«Segmentation fault␤»

[13:20] <jlaire> nom: +Mu

[13:20] <p6eval> nom: OUTPUT«No applicable candidates found to dispatch to for 'prefix:<+>'. Available candidates are:␤:(Numeric $a)␤:(Any $a)␤␤current instr.: 'prefix:<+>' pc 430528 (src/gen/CORE.setting.pir:104920) (src/gen/CORE.setting:1091)␤»

[13:23] <pmichaud> nom: say +Any

[13:23] <p6eval> nom: OUTPUT«Use of uninitialized value in numeric context␤0␤»

[13:23] <pmichaud> nom: say +Int

[13:23] <p6eval> nom: OUTPUT«Int()␤»

[13:25] *** Chillance joined
[13:29] <dalek> nqp-rx: 232e5cf | pmichaud++ | README:

[13:29] <dalek> nqp-rx: Update NQP -> NQP-rx .

[13:29] <dalek> nqp-rx: review: https://github.com/perl6/nqp-rx/commit/232e5cf2ba

[13:35] *** mj41 left
[13:38] *** Chillance left
[13:39] *** Chillance joined
[13:46] <CBro2007> hi all I am trying to build from source and get this error when I run "perl Configure.pl --gen-parrot" --> http://pastebin.com/CDadwnaH

[13:46] *** woosley left
[13:46] <CBro2007> can someone help me understand what the problem is please?

[13:46] <CBro2007> its macosx

[13:47] <CBro2007> i installed ICU earlier

[13:47] <CBro2007> and it seems to be installed correctly

[13:48] <CBro2007> dyld: Library not loaded: libicuuc.48.dylib 

[13:48] <CBro2007> don't get that bit

[13:48] <mberends> I see.

[13:48] *** JimmyZ joined
[13:49] <CBro2007> mberends: do you see the problem?

[13:49] *** woosley joined
[13:49] <JimmyZ> CBro2007: try to build parrot without icu

[13:49] *** fhelmberger left
[13:49] <flussence> looks like it's compiling with the correct path, but not running it with it

[13:50] <CBro2007> JimmyZ: I ran the commands following instructions at --> http://rakudo.org/how-to-get-rakudo/

[13:50] <mberends> on Linux we often need to install the -dev version of a library such as ICU. I don't know if that is also true for OSX, and I don't know why Parrot likes only -dev libraries, but that is a fact.

[13:50] <CBro2007> so not sure if I will then have a complete build if I don't have ICU?

[13:50] <CBro2007> I built ICU from source code too

[13:50] <flussence> some unicode features might not work, that's about it

[13:50] <CBro2007> but not sure if it was a dev release or not

[13:51] <CBro2007> so how do I configure without ICU?

[13:51] <mberends> you can build without ICU, there is a flag I think called --without-icu

[13:51] <moritz> you can try   perl Configure --gen-parrot --gen-parrot-option=--without-icu

[13:51] <CBro2007> ok will give that a shot

[13:51] <mberends> moritz++

[13:53] *** fhelmberger joined
[13:53] <CBro2007> failed :(

[13:53] <CBro2007> sorry

[13:53] <CBro2007> will paste the output

[13:55] <CBro2007> http://pastebin.com/9A6ggTnN

[13:55] *** drbean left
[13:56] <CBro2007> ok done --without-icu

[13:56] *** Mowah joined
[13:56] <CBro2007> doing something

[13:58] <CBro2007> guys I did --> perl Configure.pl --gen-parrot --without-icu

[13:58] <CBro2007> and got the same error as last time

[13:58] <CBro2007> dyld: Library not loaded: libicuuc.48.dylib

[13:58] <CBro2007>   Referenced from: /Users/mk/MYPERL6/rakudo/parrot/./miniparrot

[13:58] <CBro2007>   Reason: image not found

[13:59] <mberends> try --gen-parrot-option=--without-icu

[13:59] <CBro2007> mberends: that fails also

[13:59] <CBro2007> check out my latest paste

[14:00] <flussence> did you try typing it with two hyphens?

[14:00] <CBro2007> ah no

[14:00] <CBro2007> thanks :)

[14:00] <CBro2007> its doing something now..

[14:02] <mberends> in future, you may be able to alter the process you used to build ICU, so that Parrot can use it after all. It may be that Parrot is not finding the file, or it may  be that the file needs to contain debug symbols.

[14:03] <mberends> our OSX support staff are currently awol, but may reappear at any time ;)

[14:08] *** tokuhir__ joined
[14:11] <CBro2007> wohoo done!

[14:11] <CBro2007> all installed

[14:11] <CBro2007> need to add it to the path

[14:12] <mberends> don't forget to 'make install' to execute perl6 from outside its own directory

[14:13] <CBro2007> i did make install in the same dir

[14:13] <CBro2007> is that wrong?

[14:13] <tadzik> no, it's fine

[14:13] <CBro2007> k cool

[14:13] <CBro2007> so now just have to add perl6 to my path

[14:13] <dalek> rakudo/nom: cf0da7d | moritz++ | src/core/Str.pm:

[14:13] <dalek> rakudo/nom: make +Str die with an unhelpful error message, instead of segfaulting

[14:13] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cf0da7d5fb

[14:14] <mberends> moritz: should you get karma for being unhelpful? ;)

[14:15] <moritz> mberends: if the previous state was a segfault, yes

[14:15] <colomon> moritz++

[14:16] <moritz> I wonder if we should just add a multi prefix:<+>(Any:U) { warn "Use of uninitialized value in numeric context"; 0 }  or so

[14:16] <flussence> that'd be nice to have.

[14:17] <moritz> it would make it harder to write type objects that numify in a meaningful way

[14:17] <moritz> but I think that's OK :-)

[14:18] <mberends> I think we'd have to switch that off in strict mode

[14:18] <moritz> strict mode?

[14:18] <mberends> I know...

[14:18] <mberends> it's just a rather non-strict thing to do

[14:21] <moritz> mberends: strict would be dying outright, yes?

[14:22] <flussence> rakudo: 6;

[14:22] <p6eval> rakudo 1ddda5:  ( no output )

[14:22] <mberends> moritz: I'm not sure if that is how it's specced. I suppose you can't really numify something that is undefined.

[14:22] <flussence> (I wonder if that should say "Lax mode NYI"...)

[14:23] *** wamba joined
[14:26] *** estrai left
[14:32] <TimToady> CBro2007: you also want to be aware of http://rosettacode.org/wiki/Category:Perl_6

[14:33] <CBro2007> TimToady: whats that for?

[14:34] <TimToady> you can compare Perl 6 code for various tasks with other languages

[14:35] <TimToady> all working code on either rakudo or niecza

[14:35] <TimToady> shower &

[14:35] <CBro2007> TimToady: I got a list of modules that are needed in Perl6

[14:35] *** isBEKaml joined
[14:36] <CBro2007> https://github.com/perl6/ecosystem/wiki/Most-Wanted%3A-Modules-to-write-port

[14:38] <isBEKaml> nom: +Rat

[14:38] <p6eval> nom:  ( no output )

[14:38] <isBEKaml> nom: +Any

[14:38] <p6eval> nom: OUTPUT«Use of uninitialized value in numeric context␤»

[14:38] <pmichaud> the warning should be in .Numeric, not prefix:<+>

[14:39] <isBEKaml> pmichaud: what's the exact behaviour in numification of types?

[14:39] <pmichaud> isBEKaml: not sure off the top of my head for anything but Any

[14:40] <CBro2007> TimToady: is say JSON (http://rosettacode.org/wiki/JSON#Perl_6) rewritten in perl 6

[14:40] <CBro2007> ?

[14:40] <isBEKaml> pmichaud: ok, I'll search the spec. :)

[14:41] <pmichaud> I suppose one could argue that numification of a type should be 0-with-warning, just as stringification of types is ""-with-warning

[14:43] <CBro2007> TimToady: in the sense that the perl and perl6 version look exactly the same.... so can I call perl 5 modules from perl 6?

[14:44] <isBEKaml> pmichaud: as you said, I see no reason to numify types except perhaps to check types can be numified, but that could be done with variables too unless they throw errors. 

[14:44] <JimmyZ> CBro2007:  yes, see https://github.com/jnthn/pivo/blob/master/cgi-bin/add.p6

[14:44] <JimmyZ> CBro2007:  and  https://github.com/jnthn/pivo/blob/master/cgi-bin/get-data.p6

[14:44] <CBro2007> JimmyZ: what are those?

[14:45] <JimmyZ> call perl 5 modules from perl 6 :)

[14:45] <isBEKaml> pivo, eh? that's jnthn alright. :)

[14:45] <CBro2007> ah i see

[14:45] <isBEKaml> jnthn++

[14:45] <JimmyZ> well, sorear++ too

[14:46] * tadzik renames the wiki page

[14:46] <isBEKaml> JimmyZ: I was referring to pivo as beer. I think jnthn++'s tendency towards beer is known to you. Now I know he names stuff after beer too. :)

[14:47] <tadzik> CBro2007: please use https://github.com/perl6/ecosystem/wiki/Most-Wanted-Modules from now on

[14:48] <CBro2007> tadzik: yes boss :)

[14:49] <tadzik> :P

[14:49] *** whiteknight left
[14:49] <tadzik> I wanted to give that page a nicer URL for some time now

[14:52] <moritz> how about modules.perl6.org/wanted ?

[14:52] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; @stuff.sort:{ +$_ }.map: { $_ * 2 }; @stuff.perl.say; 

[14:52] <p6eval> rakudo 1ddda5: OUTPUT«Method 'sort:{ +$_ }' not found for invocant of class 'Array'␤  in main program body at line 22:/tmp/oXcMDsv9Xt␤»

[14:53] <tadzik> moritz: good too

[14:54] <dalek> modules.perl6.org: 19bc176 | tadzik++ | web/index.tmpl:

[14:54] <dalek> modules.perl6.org: Track ecosystem wiki page rename

[14:54] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/19bc176748

[14:54] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; @stuff.sort:{ +$_ }.map:{ $_ * 2 }; @stuff.perl.say; 

[14:54] <p6eval> rakudo 1ddda5: OUTPUT«Method 'sort:{ +$_ }' not found for invocant of class 'Array'␤  in main program body at line 22:/tmp/3Vw7RifR5u␤»

[14:54] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; @stuff.sort.map {$_ * 2}; @stuff.perl.say; 

[14:54] <p6eval> rakudo 1ddda5: OUTPUT«===SORRY!===␤Confused at line 22, near [email@hidden.address]
[14:55] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; @stuff.sort; @stuff.perl.say; 

[14:55] <p6eval> rakudo 1ddda5: OUTPUT«["4", "8", "2", "0", "1", "9"]␤»

[14:55] <moritz> need a : after map

[14:55] <moritz> rakudo: my @stuff = <4 8 2 0 1 9>; @stuff.sort.map: {$_ * 2}; say @stuff.perl

[14:55] <p6eval> rakudo 1ddda5: OUTPUT«["4", "8", "2", "0", "1", "9"]␤»

[14:56] <isBEKaml> moritz: that's what I gave the first time around but rakudo seemed to be confused about numification before passing to map. 

[14:56] <isBEKaml> ah

[14:56] <moritz> rakudo: my @stuff = <4 8 2 0 1 9>;say  @stuff.sort.map(* * 2_).perl

[14:56] <p6eval> rakudo 1ddda5: OUTPUT«===SORRY!===␤Confused at line 22, near "say  @stuf"␤»

[14:56] <isBEKaml> moritz: btw, sort isn't inplace?

[14:56] <moritz> isBEKaml: you just never do anything with the resut value of .map

[14:56] <moritz> rakudo: my @stuff = <4 8 2 0 1 9>;say  @stuff.sort.map(* * 2).perl

[14:56] <p6eval> rakudo 1ddda5: OUTPUT«(0, 2, 4, 8, 16, 18)␤»

[14:57] <moritz> no, there's not much that is in-place these days

[14:57] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; @stuff.sort.map: {* * 2}.perl.say;

[14:58] <p6eval> rakudo 1ddda5: OUTPUT«{ ... }␤No candidates found to invoke for method 'map' on object of type 'Parcel'; available candidates have signatures:␤:(Mu : &block;; *%_)␤:(Mu : %block;; *%_)␤␤  in main program body at line 22:/tmp/EJAMdKId6f␤»

[14:58] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; @stuff.sort.map:(* * 2).perl.say;

[14:58] <p6eval> rakudo 1ddda5: OUTPUT«===SORRY!===␤Malformed parameter at line 22, near "* * 2).per"␤»

[14:58] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; @stuff.sort.map(* * 2).perl.say;

[14:58] <p6eval> rakudo 1ddda5: OUTPUT«(0, 2, 4, 8, 16, 18)␤»

[14:59] <isBEKaml> moritz: that example was straight off spec. it doesn't see the block, it seems. 

[14:59] <isBEKaml> moritz++ # resident expert on p6coding :)

[15:00] <moritz> rakudo might get the precedence wrong in casecase like @a.map: {block}.another_method

[15:00] *** yogi_ joined
[15:00] *** matthiasw joined
[15:01] *** mj41 joined
[15:01] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; my @blah = @stuff.sort.map: {* * 2}; @blah.perl.say; # how about if it were the last?

[15:01] <p6eval> rakudo 1ddda5: OUTPUT«[{ ... }, { ... }, { ... }, { ... }, { ... }, { ... }]␤»

[15:01] <isBEKaml> boo

[15:02] *** yogi_ left
[15:02] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; my @blah = @stuff.sort.map: {* * 2}; @blah.join(",").perl.say;

[15:02] <p6eval> rakudo 1ddda5: OUTPUT«"_block1108,_block1108,_block1108,_block1108,_block1108,_block1108"␤»

[15:02] <isBEKaml> moritz++ again. 

[15:02] <moritz> isBEKaml: * * 2 itself constructs a block

[15:03] <moritz> isBEKaml: if you put anther { } around it, it creates a block that then returns the block created by * * 2

[15:03] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; my @blah = @stuff.sort.map:{ {* * 2} }; @blah.join(",").perl.say;

[15:03] <p6eval> rakudo 1ddda5: OUTPUT«Method 'map:{ {* * 2} }' not found for invocant of class 'Parcel'␤  in main program body at line 22:/tmp/htcSWXT6Ie␤»

[15:04] <moritz> the form with no space between : and { is called an adverbial block, and not yet implemented in rakudo

[15:04] <isBEKaml> block of blocks? should be an useful datastructure, perhaps. 

[15:04] <moritz> like higher-order functions

[15:04] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; my @blah = @stuff.sort.map: { {* * 2} }; @blah.join(",").perl.say;

[15:04] <p6eval> rakudo 1ddda5: OUTPUT«"_block1120,_block1120,_block1120,_block1120,_block1120,_block1120"␤»

[15:04] <moritz> rakudo: say { * + 3 }.().(5)

[15:04] <p6eval> rakudo 1ddda5: OUTPUT«8␤»

[15:05] *** ab5tract left
[15:05] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; my @blah = @stuff.sort.map: {* * 2}.() ; @blah.join(",").perl.say;

[15:05] <p6eval> rakudo 1ddda5: OUTPUT«"0,2,4,8,16,18"␤»

[15:06] <isBEKaml> I now know how it feels getting back in after sometime. :)

[15:06] <isBEKaml> moritz: btw, there were some build failures last night that I reported here. Received no response, were they resolved?

[15:10] *** wamba left
[15:10] <isBEKaml> moritz: here: https://gist.github.com/1086781

[15:12] <isBEKaml> rakudo: my @stuff = <4 8 2 0 1 9>; @stuff.sort.map: {* * 2}.().perl.say;

[15:12] <p6eval> rakudo 1ddda5: OUTPUT«{ ... }␤No candidates found to invoke for method 'map' on object of type 'Parcel'; available candidates have signatures:␤:(Mu : &block;; *%_)␤:(Mu : %block;; *%_)␤␤  in main program body at line 22:/tmp/T_mgcj7TVq␤»

[15:13] <isBEKaml> hmm

[15:15] <isBEKaml> pmichaud: Unless I missed something, the spec only talks about numification of values, not types. I think it's fair that the compiler should warn when numifying types. 

[15:15] * isBEKaml tries building rakudo again 

[15:16] *** woosley left
[15:18] *** wamba joined
[15:19] <moritz> isBEKaml: it just means "random memory fuckup", that error message

[15:19] <moritz> isBEKaml: when I encounter such a thing, I usually nuke everything with 'git clean -xdf' and try again

[15:20] <isBEKaml> moritz: that's what I tried now. Let's see after another hour or so. (that's how long it takes to build rakudo on my machine) :)

[15:20] <isBEKaml> make realclean && git clean -xdf

[15:20] *** mj41 left
[15:20] <moritz> :(

[15:21] <isBEKaml> I know, I think it's worth the wait if you guys are going to wittle down core.pir step to something much smaller. 

[15:22] <moritz> setting compilation seems slow in nom again too :(

[15:22] <tadzik> yeah :(

[15:23] <tadzik> seems it was a matter of size

[15:23] * moritz hopes for pmichaud++'s awesome new regex engine to speed up the parsing

[15:23] *** jaldhar left
[15:23] <moritz> tadzik: right

[15:23] *** whiteknight joined
[15:24] *** jaldhar joined
[15:27] <jlaire> rakudo: my @stuff = <4 8 2 0 1 9>; @stuff.sort.map({({$_ * 2})}).map({ $_.() }).perl.say

[15:27] <p6eval> rakudo 1ddda5: OUTPUT«(0, 2, 4, 8, 16, 18)␤»

[15:27] <jlaire> rakudo: my @stuff = <4 8 2 0 1 9>; @stuff.sort.map({({$_ * 2})}).map(*.()).perl.say

[15:27] <p6eval> rakudo 1ddda5: OUTPUT«invoke() not implemented in class 'Whatever'␤  in main program body at line 22:/tmp/p0aBe48eal␤»

[15:27] <jlaire> niecza: my @stuff = <4 8 2 0 1 9>; @stuff.sort.map({({$_ * 2})}).map({ $_.() }).perl.say

[15:27] <p6eval> niecza v7-38-gf5e9082: OUTPUT«(0, 2, 4, 8, 16, 18).list␤»

[15:27] <jlaire> niecza: my @stuff = <4 8 2 0 1 9>; @stuff.sort.map({({$_ * 2})}).map(*.()).perl.say

[15:27] <p6eval> niecza v7-38-gf5e9082: OUTPUT«Unhandled exception: Unable to resolve method postcircumfix:<( )> in class Whatever␤  at /tmp/kSHWtzWib1 line 1 (MAIN mainline @ 4) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1890 (CORE C885_ANON @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 189…

[15:27] <jlaire> hm

[15:33] *** isBEKaml left
[15:34] *** isBEKaml joined
[15:36] *** godfrey999 left
[15:39] <pmichaud> nom's setting is somewhat bigger than masters

[15:40] <pmichaud> yes, I'm hoping the regex engine can speed it up.

[15:41] <pmichaud> I've been distracted by @housetasks the past couple of days, but I'm hoping/expecting to get back to work on it this evening.

[15:41] <CBro2007> whats a good place to look at a lot of sample p6 code?

[15:42] <pmichaud> CBro2007: rosettacode.org

[15:42] <CBro2007> pmichaud: i hear that you are one of the main developers working on Rakudo

[15:42] <CBro2007> ?

[15:43] <pmichaud> CBro2007: I work on it from time to time, yes.

[15:43] <CBro2007> k

[15:47] *** CBro2007 left
[15:50] *** JimmyZ left
[15:50] *** PacoLinux left
[15:51] *** PacoLinux joined
[15:51] *** thou joined
[15:52] *** avar left
[15:52] *** avar joined
[15:58] *** godfrey999 joined
[15:59] *** bluescreen10 joined
[15:59] *** Kivutarrr left
[15:59] *** Kivutarrr joined
[16:08] *** _daniel-s__ left
[16:26] *** matthiasw left
[16:37] *** godfrey999 left
[16:37] <isBEKaml> moritz: same failure. :(

[16:37] <isBEKaml> https://gist.github.com/1087764

[16:39] <pmichaud> isBEKaml: there was a patch that needed to be applied to rakudo for gc write barriers... did that ever get applied? 

[16:39] <pmichaud> This looks suspiciously like that problem.

[16:40] <isBEKaml> pmichaud: not sure. I'm checking git logs

[16:41] <isBEKaml> pmichaud: this is on master. was that patch to be applied on master?

[16:41] <pmichaud> isBEKaml: yes.  https://github.com/rakudo/rakudo/pull/26

[16:44] <pmichaud> Let me know if that patch fixes the problem, if so I'll apply it to master.

[16:45] <isBEKaml> pmichaud: I'm applying it locally and running the build again. Will let you know in some time. 

[16:45] <isBEKaml> and yes, this machine has a lower memory than most. 512 megs. 

[16:46] <pmichaud> isBEKaml: many thanks

[16:48] <isBEKaml> pmichaud: no problem, if atleast this is how I can contribute after some time. :)

[16:54] *** thou left
[17:02] *** isBEKaml left
[17:04] *** isBEKaml joined
[17:06] *** cipherte1t joined
[17:07] *** ciphertext left
[17:22] *** Mowah left
[17:32] *** Kivutarrr left
[17:52] *** envi left
[17:55] *** envi joined
[18:00] *** birdwindupbird joined
[18:01] <isBEKaml> phenny: tell pmichaud That patch does solve the build failure on my machine. Thanks! :)

[18:01] <phenny> isBEKaml: I'll pass that on when pmichaud is around.

[18:07] *** isBEKaml left
[18:14] <dalek> rakudo: 1c91ecb | (Rakudo Perl)++ | src/ops/perl6.ops:

[18:14] <dalek> rakudo: Merge pull request #26 from atrodo/master

[18:14] <dalek> rakudo: 

[18:14] <dalek> rakudo: The new GC needs write barriers for certain ops

[18:14] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/1c91ecb6ea

[18:44] *** birdwindupbird left
[18:46] <dalek> rakudo: f63b825 | pmichaud++ | build/PARROT_REVISION:

[18:46] <dalek> rakudo: Bump PARROT_REVISION.

[18:46] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/f63b825892

[18:58] *** Jackneill left
[19:02] *** jaldhar left
[19:02] *** jaldhar joined
[19:10] *** jaldhar left
[19:11] *** jaldhar joined
[19:23] *** pmurias joined
[19:26] *** jaldhar left
[19:27] *** jaldhar joined
[19:40] *** benabik left
[19:42] *** MayDaniel joined
[19:42] *** birdwindupbird joined
[19:43] *** [Coke] left
[19:45] *** [Coke] joined
[19:50] *** MayDaniel left
[19:50] *** [Coke] left
[19:52] *** [Coke] joined
[19:53] *** birdwindupbird left
[19:58] *** [Coke] left
[20:00] *** [Coke] joined
[20:02] <sorear> good * #perl6

[20:03] <moritz> * *, *

[20:06] *** wamba left
[20:07] *** [Coke] left
[20:10] *** [Coke] joined
[20:14] *** [Coke] left
[20:16] *** [Coke] joined
[20:17] *** PacoLinux left
[20:24] *** molaf left
[20:25] *** wamba joined
[20:30] *** kaare__ left
[20:31] *** cooper joined
[20:38] *** cbk left
[20:41] *** rgrau` joined
[20:49] *** Moukeddar joined
[20:51] *** awwaiid joined
[20:52] *** [particle] left
[20:53] *** [particle] joined
[20:57] *** kst` is now known as kst

[21:04] *** Moukeddar left
[21:13] *** wamba left
[21:14] *** soh_cah_toa joined
[21:17] *** wamba joined
[21:19] *** lichtkind joined
[21:32] *** benabik joined
[21:38] *** wolfman2000 left
[21:39] *** y3llow_ joined
[21:39] *** pothos_ joined
[21:40] *** pothos left
[21:40] *** y3llow left
[21:40] *** y3llow_ is now known as y3llow

[21:40] *** pothos_ is now known as pothos

[21:43] *** Psyche^ joined
[21:44] *** cipherte1t left
[21:47] *** Patterner left
[21:47] *** Psyche^ is now known as Patterner

[21:50] *** ciphertext joined
[21:55] *** pmurias left
[21:57] *** thou joined
[22:06] *** mj41 joined
[22:14] *** wamba left
[22:23] *** alyx joined
[22:24] *** alyx is now known as Guest28298

[22:31] *** Fuad joined
[22:49] *** kid51 joined
[22:50] <Fuad> hello folks

[22:56] <sorear> hello, Fuad

[22:57] *** mj41 left
[23:00] *** Fuad left
[23:06] *** diakopter left
[23:25] *** dorlamm joined
[23:29] *** am0c joined
[23:29] *** orafu left
[23:29] *** orafu joined
[23:48] *** dayangkun joined
