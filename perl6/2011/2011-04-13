[00:03] *** nymacro joined
[00:03] *** risou_ left
[00:10] *** stkowski left
[00:13] *** _jaldhar left
[00:15] *** araujo joined
[00:28] *** sftp left
[00:29] *** sftp joined
[00:33] *** lue joined
[00:33] <lue> hello world! o/

[00:34] *** sftp left
[00:42] *** gantrixx left
[00:44] *** gantrixx joined
[00:52] *** cosimo joined
[00:56] <sorear> good * #perl6

[01:00] <colomon> \o

[01:03] *** jevin joined
[01:04] *** noganex_ left
[01:05] <sorear> moritz: niecza doesn't actually do "array in regex" yet

[01:06] *** woosley joined
[01:06] *** noganex joined
[01:08] <sorear> 05:38 < masak> Niecza is officially released by Stefan O'Rear, a moderately  famous entity.

[01:08] <sorear> \o/ I'm moderately famous

[01:09] <sorear> ashleydev: Perl 6 will not use anything like HM, because HM + subtypes = undecidable

[01:10] *** Su-Shee left
[01:10] <colomon> sorear: you're also an entity!

[01:16] *** Su-Shee joined
[01:18] *** araujo left
[01:23] <lue> .oO(what is HM?)

[01:27] <isBEKaml> lue: it's Hindley-Milner type system. used by haskell

[01:31] <isBEKaml> sorear: I might be wrong here, but I sort of got an impression that haskell solved the problem of subtyping using GADTs. I'm aware that haskell does not have subtype polymorphism like java does. 

[01:40] *** simcop2387 left
[01:41] *** simcop2387 joined
[01:42] <isBEKaml> phenny: "nee enna panre?"

[01:43] <isBEKaml> phenny: "nee enna panre?"?

[01:43] <phenny> isBEKaml: "Enna nee panre?" (id to en, translate.google.com)

[01:43] <isBEKaml> :)

[01:45] *** mtk left
[01:47] *** tzhs left
[01:49] <isBEKaml> phenny: "## #### ## ### ##?"?

[01:49] <phenny> isBEKaml: Unable to guess your crazy moon language, sorry.

[01:50] <isBEKaml> D: so that's how the text turned out.. 

[01:52] *** mtk joined
[01:53] <donri> phenny: "ey fattaru eller?"?

[01:53] <phenny> donri: "ey or Fatty?" (sv to en, translate.google.com)

[01:53] <donri> not quite.

[01:54] <isBEKaml> I'm stil not yet able to paste unicode text into irssi console. :(

[02:01] *** devendra left
[02:02] *** devendra joined
[02:02] *** silent_h_ left
[02:10] *** _jaldhar joined
[02:11] *** leprevost joined
[02:38] * colomon is officially scheduled to give a Perl 6 presentation at Penguicon.

[02:42] <woosley> Hello perl6, is 'opendir' implemented for now?

[02:44] <woosley> perl6: opendir("/");

[02:45] <p6eval> pugs: OUTPUT«*** Unsafe function 'opendir' called under safe mode␤    at /tmp/Bqyxcu0VVU line 1, column 1-13␤»

[02:45] <p6eval> ..niecza v4-47-gfffa4cd: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared routine:␤      'opendir' used at line Any()1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 388 (CORE die @ 2)␤  at /home/p6eval/niecza/src/STD.pm6 line 1141 (STD P6.comp_unit @ 75)␤ 

[02:45] <p6eval> ..at /home/p6eval/nie…

[02:45] <p6eval> ..rakudo 4bf132: OUTPUT«Could not find sub &opendir␤  in main program body at line 22:/tmp/1DrCbsEln_␤»

[02:46] *** GinoMan joined
[02:48] *** araujo joined
[02:48] *** coldhead joined
[02:50] <woosley> oh, spectest.data seems telling me that it is not here right now

[03:11] <isBEKaml> .u spade

[03:11] <isBEKaml> .u spade

[03:11] <phenny> U+2660 BLACK SPADE SUIT (♠)

[03:16] *** devendra is now known as f00

[03:17] *** f00 is now known as devendra

[03:22] *** hudnix left
[03:25] *** satyavvd joined
[03:27] *** Su-Shee left
[03:27] *** donri left
[03:28] *** Su-Shee joined
[03:39] *** dev29aug joined
[03:40] *** devendra left
[03:49] *** yuzebin joined
[03:54] *** leprevost left
[03:56] *** orafu left
[03:56] *** orafu joined
[04:03] *** dev29aug left
[04:13] *** kaare_ joined
[04:13] *** yuzebin left
[04:21] *** ymasory left
[04:51] *** molaf joined
[05:15] *** f joined
[05:15] *** justatheory left
[05:15] *** f left
[05:19] *** birdwindupbird joined
[05:19] *** birdwindupbird_ joined
[05:20] *** birdwindupbird left
[05:21] *** birdwindupbird_ left
[05:24] *** molaf left
[05:25] *** starcoder is now known as mootest

[05:25] *** mootest is now known as starcoder

[05:28] *** birdwindupbird_ joined
[05:28] *** birdwindupbird joined
[05:29] *** birdwindupbird_ left
[05:31] *** birdwindupbird left
[05:32] *** birdwindupbird joined
[05:32] *** birdwindupbird left
[05:32] *** birdwindupbird joined
[05:32] *** birdwindupbird left
[05:33] *** birdwindupbird joined
[05:36] *** eternaleye_ is now known as eternaleye

[05:37] *** _jaldhar left
[05:37] *** _jaldhar joined
[05:58] *** mberends left
[06:01] *** fhelmberger joined
[06:06] *** wtw joined
[06:14] *** krunen left
[06:15] *** lue left
[06:16] *** krunen joined
[06:22] *** birdwindupbird left
[06:22] *** birdwindupbird joined
[06:23] *** birdwindupbird left
[06:23] *** birdwindupbird joined
[06:25] *** mberends joined
[06:37] *** birdwindupbird left
[06:38] *** birdwindupbird joined
[06:48] *** muixirt joined
[06:48] <muixirt> good morning

[06:50] <isBEKaml> \o

[06:50] <sorear> hi

[06:51] <muixirt> how is Perl6 and Rakudo Perl doing these days?

[06:51] <sorear> perl6 is doing well, rakudo notsomuch

[06:52] *** yuzebin joined
[06:53] <muixirt> and the work on mop for nqp and/or parrot?

[06:53] <sorear> that has been at a standstill

[06:53] <sorear> jnthn had the gall to take a vacation :p

[06:54] <sorear> well, parrot is moving

[06:54] <muixirt> parrot? really? ;-)

[06:56] *** Trashlord left
[06:57] <muixirt> well vacation is good but a low bus number is bad

[07:02] *** yuzebin_ joined
[07:02] <moritz> right. I'd love to find a way to improve it.

[07:03] *** Trashlord joined
[07:03] *** daxim joined
[07:03] <muixirt> moritz: on what jnthn is working on?

[07:03] <moritz> muixirt: the new (meta) object system

[07:04] <moritz> http://irclog.perlgeek.de/phasers/2011-04-12#i_3487800

[07:04] *** yuzebin left
[07:05] <muixirt> moritz: I thought jnthn was working on it and the parrot folks were enthusiastic about it and wanted to implemented their version for parrot

[07:06] <moritz> that's mostly true

[07:06] <tadzik> now every language implementor on Parrot wants 6model :)

[07:06] <moritz> not all are enthusiastic to adopt a technology that is somehow related to perl

[07:06] <tadzik> I mean Ruby, Python's thinking about it too

[07:06] <moritz> because it carries a taint, you know

[07:07] <moritz> the basic primitives have nothing to do with Perl 6

[07:07] <moritz> they just happen to be sufficiently generic to allow Perl 6 semantics on top of them

[07:09] <muixirt> moritz: is there some coherent but understandable documentation on that stuff besides jnthn blog posts?

[07:11] * muixirt has rather vague thoughts w.r.t. a meta object model

[07:13] <moritz> muixirt: http://search.cpan.org/~doy/Moose-2.0000/lib/Class/MOP.pm#SEE_ALSO has a list of literature regarding MOPs

[07:14] <tadzik> muixirt: https://github.com/jnthn/6model/blob/master/overview.pod

[07:14] <muixirt> thanks guys

[07:14] <moritz> I've also written http://perlgeek.de/en/article/discovering-meta-object-protocol which is more from a user perspective

[07:14] * muixirt is lazy as always ...

[07:22] *** wallberg joined
[07:36] *** cosimo left
[07:38] *** Axius joined
[07:46] <muixirt> so Rakudo blocks on what?

[07:46] <moritz> on meta objects all the way down

[07:46] <moritz> and serialization of type objects at compile time

[07:48] <muixirt> serialization? Better support for this in parrot is talked about for how long?

[07:48] <isBEKaml> serialization? Isn't that a parrot thing?

[07:49] <moritz> as long as we've stated that we need it

[07:49] <muixirt> moritz: a diplomatic answer :-)

[07:50] <muixirt> there is probably a gsoc project for it this year...

[07:50] <moritz> no

[07:50] <moritz> jnthn has written his own thing for now

[07:51] <moritz> I don't know how generic it is, but it seems to work in nqp for now

[07:53] <muixirt> to hell with the gene tech hysteria in Europe! We need to clone jnthn at least 10 times. Fast.

[07:53] <isBEKaml> and they would all be doing the same thing. Effort duplication. :D

[07:54] *** Arcus joined
[07:55] <muixirt> isBEKaml: ok, we have to clone him 10,000 times with some mutations, and hope that will do it :-)

[07:55] <isBEKaml> :-)

[07:55] <isBEKaml> mutant jnthns!

[07:56] *** Axius left
[08:02] *** MindosCheng left
[08:04] *** muixirt_ joined
[08:05] *** muixirt left
[08:06] *** muixirt_ is now known as muixirt

[08:15] *** yuzebin_ left
[08:21] *** mj41 joined
[08:24] *** rindolf joined
[08:24] <rindolf> Hi all.

[08:24] <mberends> hi

[08:25] *** Arcus left
[08:25] <moritz> hi

[08:27] *** isBEKaml left
[08:27] <rindolf> mberends , moritz : what's up?

[08:27] *** yuzebin joined
[08:27] *** tzhs joined
[08:28] <moritz> $work is up

[08:28] *** Axius joined
[08:28] <moritz> and parrot segfaults

[08:32] *** mj41 left
[08:33] *** mj41 joined
[08:42] *** donri joined
[08:48] *** birdwindupbird left
[08:48] *** birdwindupbird joined
[08:49] *** birdwindupbird left
[08:49] *** birdwindupbird joined
[08:58] *** am0c joined
[08:59] *** Axius left
[09:17] *** pochi joined
[09:20] *** wallberg left
[09:31] *** mtk left
[09:35] *** am0c left
[09:36] *** am0c joined
[09:39] *** yuzebin left
[09:39] *** yuzebin joined
[09:39] *** cognominal_ left
[09:39] *** mtk joined
[09:40] *** cognominal joined
[09:41] *** yuzebin left
[09:45] <bbkr_> is there in P6 any smart equivalent of p5 code "defined $x and length $x" (except regexp match)?

[09:46] <moritz> rakudo: say so Any.?chars

[09:46] <p6eval> rakudo 4bf132: OUTPUT«Bool::False␤»

[09:46] <moritz> rakudo: say so ''.?chars

[09:46] <p6eval> rakudo 4bf132: OUTPUT«Bool::False␤»

[09:46] <moritz> rakudo: say so 'foo'.?chars

[09:46] <p6eval> rakudo 4bf132: OUTPUT«Bool::True␤»

[09:46] <moritz> bbkr_: not quite the same, but does what you want

[09:46] <bbkr_> moritz++

[09:46] <bbkr_> just what I was looking for

[09:47] *** woosley left
[09:50] *** Axius joined
[09:54] <miso2217> moritz: what do you think about this new attempt on a real life example for Backtracking:

[09:54] <miso2217> moritz: my regex word4 { <[a..z']>+ }; my regex after_can { (<&word4>) \W+ <?{ $0 eq 'can' }> <&word4> }; .say for "can this can't that.".match(:g, rx/ ( <&after_can> ) /);

[09:54] <miso2217> moritz: my token word4 { <[a..z']>+ }; my regex after_can { (<&word4>) \W+ <?{ $0 eq 'can' }> <&word4> }; .say for "can this can't that.".match(:g, rx/ ( <&after_can> ) /);

[09:55] <moritz> miso2217: if I want to match a word after 'can', I just write 'can' \W+ (\w+)

[09:56] <moritz> miso2217: or do I miss something very crucial?

[10:03] <miso2217> moritz: yes of course, but you won't illustrate backtracking that way.

[10:04] <miso2217> moritz: do you think there is a use case where disabling backtracking would be the the only solution

[10:04] <miso2217> morite: besides performance?

[10:04] *** MayDaniel joined
[10:06] <moritz> miso2217: I'm pretty sure the current example can be presented in a context where it only works with backtracking enabled, without being too contrived

[10:09] <miso2217> moritz: I have the feeling that for baktracking to be usefull you need to match something after the and, anchoring to start of word won't work I think.

[10:10] <miso2217> moritz: ah! may be something like "and andxxxxx" could work

[10:11] <moritz> (\w+)\W+$0\w+

[10:11] <moritz> doesn't need any backtracking

[10:12] <moritz> the classical example where backtracking is needed is the regex prime tester :-)

[10:12] <moritz> there are other examples in STD.pm6, but they are too complicated to present them in the book

[10:20] *** am0c left
[10:26] <miso2217> rakudo: my regex word { :ratchet \w+ }; my regex dup { <word=&word> \W+ $<word> }; if 'and andxxxxx beach' ~~ m/<&dup>/ { say 'match ', $/; } else { say 'no match'; }

[10:26] <p6eval> rakudo 4bf132: OUTPUT«match and and␤»

[10:27] <miso2217> moritz: any ideas on while that one matches? Shouldn't the :ratchet never enable the regex engine to give back anything else but andxxxx? Did I miss somethnig here?

[10:28] <miso2217> moritz: ah, sory I see

[10:36] *** kjeldahlw joined
[10:37] *** tzhs left
[10:46] *** darkop joined
[10:53] *** hudnix joined
[10:57] *** MayDaniel left
[11:10] <Axius> Do you guys know any sites with perl6 recipes/scripts? any suggestion is wellcome.

[11:12] *** pernatiy left
[11:14] <colomon> Axius: lots of perl6 examples at http://rosettacode.org/wiki/Category:Perl_6

[11:15] <colomon> (you might need to scroll down to see the list)

[11:16] <Axius> colomon: Thanks 

[11:18] * sbp points in the general direction of Learn in https://github.com/perl6/misc/wiki/Get-Into-Perl6

[11:18] <sbp> also if you find any more example, please add them there!

[11:25] * moritz points to http://perl6.org/documentation/

[11:25] <moritz> a meta pointer, kinda

[11:27] <sbp> how up to date is this? https://github.com/perl6/perl6-examples

[11:27] <sbp> the dates make it look not all that well maintained. is it reliable as a source to learn from?

[11:28] <moritz> not very up-to-date

[11:31] <dalek> perl6.org: fc4bcf0 | moritz++ | source/documentation/index.html:

[11:31] <dalek> perl6.org: [documentation] warn about perl6-examples outdatedness, sbp++

[11:31] <dalek> perl6.org: 

[11:31] <dalek> perl6.org: Also update link to the Using Perl 6 PDF

[11:31] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/fc4bcf057b

[11:38] *** isBEKaml joined
[11:40] *** Axius left
[11:41] *** meswami joined
[11:50] *** meswami left
[11:52] *** takadonet left
[11:54] *** Patterner left
[11:54] *** houghton joined
[11:56] *** Psyche^ joined
[11:56] *** Psyche^ is now known as Patterner

[11:56] <houghton> Hey, I was just curious whether Perl 6 development is stalled. It seems like there haven't been any updates in a while.

[11:57] <moritz> houghton: it goes on

[11:57] <houghton> great

[11:57] <moritz> houghton: it's just that one of our core developers had a bit of vacation

[11:57] <houghton> alright

[11:57] <moritz> and the second has complications in real life :(

[11:57] <houghton> ah

[11:57] <houghton> so there are two

[11:59] <houghton> Well, it's good stuff. Thanks for all the work.

[11:59] <moritz> houghton: there are other people working on rakudo now and then, but we usually do less "dramatic" work than jnthn and pmichaud :-)

[12:02] *** meswami joined
[12:02] *** pernatiy joined
[12:06] *** satyavvd left
[12:09] *** coldhead left
[12:09] *** houghton left
[12:12] *** shi joined
[12:14] *** Helios` left
[12:15] *** _sri left
[12:16] *** _sri joined
[12:17] *** Helios` joined
[12:24] *** takadonet joined
[12:24] <takadonet> morning all

[12:24] *** leprevost joined
[12:24] <rindolf> Hi takadonet 

[12:26] *** sftp joined
[12:30] *** am0c joined
[12:31] *** meswami left
[12:41] *** takadonet left
[12:43] *** takadonet joined
[12:45] *** cognominal left
[12:45] *** cognominal joined
[12:51] *** ggoebel left
[12:52] *** sylwek joined
[13:05] *** Holy_Cow joined
[13:07] *** ggoebel joined
[13:13] *** MayDaniel joined
[13:18] *** pmurias joined
[13:27] *** rindolf left
[13:35] *** MayDaniel left
[13:40] <pmurias> hi

[13:43] <pmurias> sorear: ping

[13:55] *** woosley joined
[13:55] <sorear> pmurias: hi

[13:58] *** ggoebel left
[14:01] <tadzik> a Perl 6 hackathon on YAPC \o/

[14:01] <jasonmay> that would be cool

[14:01] <moritz> yes

[14:02] <moritz> and I won't be there :(

[14:02] <jasonmay> I should get my IoC module up to date

[14:02] <tadzik> who's responsible?

[14:02] <moritz> though last year was pretty cool

[14:02] *** dakkar joined
[14:02] <moritz> tadzik: talk to Andrew Shitov or Richard Hainsworth

[14:03] <tadzik> oh, I just hoped it's someone I can easily give karma to

[14:03] <moritz> (Richard Hainsworth)++

[14:03] <moritz> (Andrew Shitov)++

[14:08] <pmurias> sorear: http://paste.scsys.co.uk/97172

[14:08] <tadzik> By Jonathan Worthington (‎jnthn‎) from Bratislava.pm

[14:08] <tadzik> jnthn++

[14:08] <pmurias> sorear: i'm trying to hook in the hoopl optimiser into niecza so that i can feed nam into it convieniently

[14:09] *** wtw left
[14:09] <pmurias> sorear: but i get that strange error

[14:10] <sorear> Have you touched anything in boot/?

[14:10] <sorear> Oh

[14:10] <pmurias> i forgot to change the Makefile

[14:10] <sorear> You need to add NieczaBackendHoopl to the list of units in the Makefile

[14:10] *** hanekomu joined
[14:11] <sorear> also that list is ordered by dependencies

[14:13] *** Trashlord left
[14:14] <pmurias> sorear: how do i supply a path to an executable instead of xgd-open being run

[14:14] <pmurias> to run_command

[14:14] *** Trashlord joined
[14:20] <pmurias> fixed it

[14:21] <pmurias> i had a typo and mono was trying to be too smart

[14:22] *** alester joined
[14:23] <dalek> niecza: 5fa1ca1 | pmurias++ | hoopl/ (3 files):

[14:23] <dalek> niecza: [hoopl] split out code into Nam.hs

[14:23] <dalek> niecza: review: https://github.com/sorear/niecza/commit/5fa1ca1745

[14:23] <dalek> niecza: e520a0c | pmurias++ | hoopl/ (3 files):

[14:23] <dalek> niecza: [hoopl]

[14:23] <dalek> niecza: add missing Nam.hs

[14:23] <dalek> niecza: review: https://github.com/sorear/niecza/commit/e520a0c42e

[14:23] <dalek> niecza: f40db59 | pmurias++ | hoopl/ (2 files):

[14:23] <dalek> niecza: [hoopl] convert string literals from json correctly

[14:23] <dalek> niecza: review: https://github.com/sorear/niecza/commit/f40db59e38

[14:23] <dalek> niecza: d9fcbb6 | pmurias++ | / (4 files):

[14:23] <dalek> niecza: added -Bhoopl

[14:23] <dalek> niecza: review: https://github.com/sorear/niecza/commit/d9fcbb6848

[14:23] <pmurias> sorear: i hope you don't mind me adding non-working -B backends

[14:24] *** Khisanth left
[14:25] *** MayDaniel joined
[14:25] *** am0c left
[14:25] <sorear> not at all

[14:28] <pmurias> what's the use of the sink opcode?

[14:29] <pmurias> why do we need it at all?

[14:30] *** justatheory joined
[14:30] *** kjeldahlw left
[14:30] <moritz> I don't know how niecza uses it

[14:30] <moritz> but I know that rakudo is in trouble for not having it

[14:31] <sorear> pmurias: it keeps the CLR evaluation stack balanced

[14:31] <moritz> since map and for are the same thing, a statement like   'for ^1000 { .say }' needs to store a return value for each iteration if it doesn't know it's in sink context

[14:31] *** sylwek left
[14:31] <sorear> moritz: niecza's sink is much lower level than that

[14:31] <moritz> ah

[14:34] <pmurias> sorear: so does it change semantics?

[14:35] *** mj41 left
[14:35] <tadzik> moritz: why is map and for the same thing?

[14:36] <moritz> tadzik: so that list comprehension works

[14:36] <tadzik> mhm

[14:37] <pmurias> sorear: what is it's return value?

[14:38] <sorear> Void

[14:39] <sorear> many control flow ops require Void children

[14:39] <dalek> niecza: e609afb | pmurias++ | hoopl/ (2 files):

[14:39] <dalek> niecza: [hoopl] handle sink - not sure if ignoring it is always correct

[14:39] <dalek> niecza: review: https://github.com/sorear/niecza/commit/e609afbc51

[14:40] <pmurias> sorear: is Void a Perl6-land value?

[14:40] <sorear> no

[14:41] <pmurias> i don't really understand why/when it's needed

[14:41] <pmurias> what do you mean by balancing the CLR evaluation stack?

[14:42] <sorear> inserting pop instructions when the result of an op isn't needed

[14:42] <sorear> this was a lot more necessary back before the backend was type-aware

[14:43] <pmurias> couldn't this be infered automatically by other opcodes?

[14:44] <pmurias> like prog implicitly inserting the pop instructions for all it's children except the last one when it's needed

[14:46] <sorear> it could, yes

[14:47] *** risou joined
[14:50] *** MindosCheng joined
[14:52] <isBEKaml> yapsi: say say

[14:52] <p6eval> yapsi: OUTPUT«===SORRY!===␤Unable to find module 'Yapsi' in the @*INC directories.␤(@*INC contains:␤  lib␤  /home/p6eval/.perl6/lib␤  /home/p6eval//p2/lib/parrot/3.2.0-devel/languages/perl6/lib␤  .)␤»

[14:52] <isBEKaml> uh, yapsi target was removed from p6eval?

[14:52] <moritz> no, it's just broken

[14:53] <sorear> if it were removed, there'd be no reply

[14:53] <isBEKaml> anything that can be done to fix it? 

[14:54] <dalek> evalbot: 0b5d13d | moritz++ | evalbot.pl:

[14:54] <dalek> evalbot: try to unbreak yapsi

[14:54] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/0b5d13d774

[14:54] <isBEKaml> moritz++

[14:55] <moritz> evalbot control restart

[14:55] *** p6eval left
[14:56] *** birdwindupbird left
[14:56] <moritz> Trying to connect to server irc.freenode.org

[14:56] <moritz> Lost connection to server irc.freenode.org.

[14:57] <moritz> it also took nearly a minute to git pull

[14:57] <moritz> seems the network over there is a bit unstable

[14:57] <isBEKaml> feather?

[14:57] *** p6eval joined
[14:57] *** ChanServ sets mode: +v p6eval

[14:57] <moritz> no, appflux

[14:57] <moritz> yapsi: say say 1

[14:58] <p6eval> yapsi: OUTPUT«(timeout)»

[14:58] <moritz> yapsi: say 1

[14:58] <p6eval> yapsi: OUTPUT«(timeout)»

[14:58] <isBEKaml> rakudo: say 42;

[14:58] <p6eval> rakudo 4bf132: OUTPUT«42␤»

[14:58] *** ggoebel joined
[14:59] <tadzik> the timeout may be to small, Yapsi is _slow_

[14:59] <moritz> oh, and the yapsi on that server isn't precompiled

[14:59] <isBEKaml> yapsi: say 42;

[15:00] <p6eval> yapsi: OUTPUT«(timeout)»

[15:00] <tadzik> yapsi -e 'say 42'  2,46s user 0,05s system 37% cpu 6,650 total

[15:00] <moritz> tadzik: precompiled?

[15:00] <tadzik> moritz: I think so

[15:00] <isBEKaml> precompiled? 

[15:00] <tadzik> I trust panda in this :)

[15:01] <tadzik> yes, precompiled

[15:01] <tadzik> panda++

[15:01] <pmurias> sorear: do you think it would make sense to have doc/nam.pod be partially machine readable, so that i could generate the haskell ast repr from that

[15:01] <isBEKaml> tadzik: what do you see when you run yapsi -e 'say say' ?

[15:01] <tadzik> Unknown instruction: say Any()

[15:01] <isBEKaml> tadzik: the reason I wanted to run this on p6eval was I got a different output than it should be. 

[15:01] <pmurias> as well as read in things about the ops such as which ops are side-effect free etc.

[15:02] <isBEKaml> tadzik: I think that's incorrect. If I have my history right, it should be displaying something along the lines of "unable to parse"

[15:02] <dalek> niecza: e1d1478 | pmurias++ | hoopl/ (2 files):

[15:02] <dalek> niecza: [hoopl] support bif_plus

[15:02] <dalek> niecza: review: https://github.com/sorear/niecza/commit/e1d1478601

[15:02] <tadzik> isBEKaml: what's your history? :)

[15:02] <tadzik> isBEKaml: yapsi has subs now, so it may be different

[15:03] <isBEKaml> tadzik: I say history because it's been a really long time since I messed with yapsi. :)

[15:03] <sorear> dunno

[15:03] <tadzik> for example, "say say 42" gives me "42\n1"

[15:03] <tadzik> so that output makes sense for me

[15:03] <tadzik> rakudo: say say

[15:03] <p6eval> rakudo 4bf132: OUTPUT«␤Bool::True␤»

[15:03] <tadzik> niecza: say say

[15:03] <p6eval> niecza v4-51-gd9fcbb6: OUTPUT«Potential difficulties:␤  Unsupported use of bare 'say'; in Perl 6 please use .say if you meant $_, or use an explicit invocant or argument at /tmp/hBVLN_vsgW line 1 (EOF):␤------> [32msay say[33m⏏[31m<EOL>[0m␤␤␤Bool::True␤»

[15:04] <tadzik> std: say say

[15:04] <p6eval> std 4608239: OUTPUT«Potential difficulties:␤  Unsupported use of bare 'say'; in Perl 6 please use .say if you meant $_, or use an explicit invocant or argument at /tmp/zxiTl2uSPO line 1:␤------> [32msay say[33m⏏[31m<EOL>[0m␤ok 00:01 118m␤»

[15:04] <tadzik> IOC, it's allright

[15:04] <tadzik> so yapsi is wrong, probably due to lack of Bool

[15:05] *** shi left
[15:05] <isBEKaml> tadzik: that's okay. one discomfiture in long breaks is you have to start all over again. :)

[15:06] *** MayDaniel left
[15:06] <isBEKaml> tadzik: I see what you mean now. Every <saycall> gets converted to a new instance of Future::Call. Named subs alright. :)

[15:06] <pmurias> sorear: i could keep that info in a seperate file or hardcoded in haskell

[15:09] *** Khisanth joined
[15:10] *** molaf joined
[15:10] <dalek> niecza: 2a67dcf | pmurias++ | docs/nam.pod:

[15:11] <dalek> niecza: example machine parsable info for bif_plus

[15:11] <dalek> niecza: review: https://github.com/sorear/niecza/commit/2a67dcfc52

[15:18] *** risou_ joined
[15:19] *** risou left
[15:20] *** _jaldhar left
[15:25] *** risou_ left
[15:25] *** risou joined
[15:27] *** mj41 joined
[15:29] *** risou_ joined
[15:31] *** risou left
[15:42] *** rtward joined
[15:44] *** am0c joined
[15:46] *** JimmyZ_ joined
[15:47] *** hanekomu left
[15:49] *** darkop left
[15:49] *** spq joined
[15:50] *** nymacro left
[15:58] *** gantrixx left
[15:59] *** gantrixx joined
[16:02] *** pernatiy left
[16:05] *** sufrostico left
[16:05] *** cognominal left
[16:06] *** cognominal joined
[16:09] *** Mowah joined
[16:13] *** woosley left
[16:20] *** icwiener joined
[16:23] *** GinoMan left
[16:28] <dalek> modules.perl6.org: 54d26fa | tadzik++ | web/index.tmpl:

[16:28] <dalek> modules.perl6.org: Add a note about the Most Wanted wiki page

[16:28] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/54d26faeb3

[16:34] *** mj41 left
[16:39] *** ymasory joined
[16:43] *** kfo_ joined
[16:46] *** kfo left
[16:53] <isBEKaml> the pointme bot still exists? 

[16:53] <isBEKaml> pointme: yapsi

[16:53] *** pmurias left
[16:54] <isBEKaml> if not, that listing must be taken off perl6.org

[16:55] *** rtward left
[16:56] <moritz> isBEKaml: then patch it out

[16:57] <isBEKaml> moritz: yes, I'm still looking around to set up my config. 

[16:57] <isBEKaml> moritz: unfortunately, lost them sometime back. :(

[17:01] *** mj41 joined
[17:06] *** cdarroch joined
[17:06] *** cdarroch left
[17:06] *** cdarroch joined
[17:07] <dalek> perl6.org: a78bce3 | Shrivatsan++ | source/getting-started/in (2 files):

[17:07] <dalek> perl6.org: Clear out proto zombies!

[17:07] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/a78bce32d5

[17:07] <dalek> perl6.org: 71ec874 | Shrivatsan++ | source/community/irc.html:

[17:07] <dalek> perl6.org: Remove entry for pointme bot since it doesn't seem to be used anymore.

[17:07] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/71ec874368

[17:07] <isBEKaml> moritz: Done. thanks. 

[17:08] <moritz> isBEKaml++

[17:18] *** jaffa4 joined
[17:18] *** mtk left
[17:18] *** mtk joined
[17:19] *** jaffa4 left
[17:19] *** stkowski joined
[17:25] <tadzik> so, pugs_svn is still there?

[17:25] <isBEKaml> dunno. 

[17:25] <moritz> no, it's dead

[17:25] <moritz> dalek does all the reporting

[17:26] <tadzik> thou it shall be removed

[17:26] *** yegor joined
[17:26] <tadzik> zaslon as well, no?

[17:26] <moritz> seems like

[17:27] <tadzik> and lisppaste

[17:27] <tadzik> ...and lambdabot

[17:27] <tadzik> the list suddenly became short and clear

[17:28] <tadzik> oh, I thought mubot is present sometimes, is it?

[17:28] <tadzik> seen mubot

[17:28] <aloha> Sorry, I haven't seen mubot.

[17:28] <tadzik> aloha should be added

[17:28] <tadzik> karma dalek

[17:28] <aloha> dalek has karma of 2.

[17:30] <dalek> perl6.org: f9fb952 | tadzik++ | source/community/irc.html:

[17:30] <dalek> perl6.org: More bots updates

[17:30] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/f9fb952b58

[17:31] *** yegor left
[17:31] *** Alias left
[17:36] *** JimmyZ__ joined
[17:37] *** JimmyZ_ left
[17:39] <JimmyZ__> jnthn: ping

[17:41] <miso2217> is it possible to use something like \w+ in a multitoken: multi token t:sym<\w+> { <sym>} ?

[17:42] *** yegor joined
[17:42] *** dakkar left
[17:45] <PerlJam> miso2217: interesting.  I doubt it though

[17:45] <PerlJam> (but what do I know?  Try it and see!)

[17:46] <PerlJam> miso2217: though if you really wanted \w+, why did you write <sym> ?

[17:48] *** PZt left
[17:50] <miso2217> PerlJam I thing the sum is mandatary as the argument name of a prototoken

[17:50] <miso2217> PerlJam: I thing the sum is mandatary as the argument name of a prototoken

[17:50] <miso2217> s/sum/sym/

[17:52] <miso2217> PerlJam: tried it and it didn't, may be my question sould have been "is it supposed to work"? 

[17:52] <PerlJam> miso2217: How I've been looking at it so far is when you say  token category:sym<foo>  { <pattern> } then "foo" is just a name for that particular pattern

[17:52] <PerlJam> (you just get the added benefit that <sym> will match that name in the regex)

[17:53] *** jfried joined
[17:54] <miso2217> PerlJam: Ah didn't get it that way so may be token t:sym<foo> { \w+ } could work? I'll try that one.

[17:55] *** PZt joined
[18:01] *** icwiener left
[18:05] *** jaffa4 joined
[18:06] <jaffa4> hi

[18:06] <jaffa4> I cannot compile nietza becaise it fails with an error

[18:10] <PerlJam> jaffa4: is the error "misspelled compiler name"?   ;)

[18:10] <jaffa4> ny()Strange text after block (missing comma, semicolon, comment marker

[18:10] <jaffa4> at cza\niecza\src\NAME.pm6 line 6:

[18:12] <jaffa4> another disappointment

[18:13] <jaffa4> figured out

[18:13] <jaffa4> stranged test == dos line endings

[18:13] <jaffa4> stranged text == dos line endings

[18:18] *** Chillance joined
[18:24] *** pernatiy joined
[18:26] *** impious joined
[18:28] *** rgrau joined
[18:33] <mberends> just compiled latest niecza here, it passed all its 1650 spectests on 32 bit Linux.

[18:34] *** risou_ left
[18:37] <jnthn> evening o/

[18:38] <colomon> \o

[18:38] <jnthn> Ah...my favorite Stockholm hotel :)

[18:38] * jnthn can't take too much advantage of the Czech beer on tap though... :)

[18:38] <MindosCheng> \o o/

[18:39] <isBEKaml> .oO(tapbeer ?)

[18:40] <jnthn> The opposite of bottled :)

[18:40] <isBEKaml> tapwater, tapbeer, tapstuff. :)

[18:40] <jnthn> .oO( if I drink enough of it, will I tapdance? )

[18:41] <isBEKaml> try it and let us know! :)

[18:42] <isBEKaml> .oO( tap jnthn dancing )? 

[18:42] <MindosCheng> \o          o/            \\o            o//                \o/

[18:43] <MindosCheng> (Some exercise after hacking to long)

[18:43] <mberends> jnthn: TAP == Taste Any Pivo?

[18:43] <jnthn> :D

[18:44] <jnthn> Test *All* Pivo of course. :)

[18:44] <mberends> :)

[18:46] *** ymasory left
[18:49] <jaffa4> where is the test suite resutl?

[18:52] <mberends> jaffa4: if you mean to test niecza, you need to first git clone https://github.com/perl6/roast.git and make a symbolic link to it before running `make spectest`

[18:53] <tadzik> how many does rakudo pass?

[18:53] <flussence> in roast?

[18:54] <tadzik> aye

[18:54] <flussence> http://smolder.parrot.org/app/projects/smoke_reports/5

[18:54] <mberends> 1650 tests passed in 101 files

[18:54] <mberends> oh, rakudo, sorry, I wrote about niecza :/

[18:56] <mberends> so rakudo passes 27636 tests in 548 files

[18:56] <jaffa4> there is one problem with rakudo now.

[18:56] <jaffa4> It is slow.

[18:57] <PerlJam> If that were the only problem, we'd be doing happy dances more here.

[18:57] <TimToady> jaffa4++ is correct, though, that if rakudo ran as fast as Perl 5, it would already be a better Perl

[18:57] *** molaf left
[18:58] <TimToady> (except for CPAN, of course)

[18:58] <flussence> I noticed it's got a lot better about RAM usage lately

[18:58] <PerlJam> It would be better as long as you choose a judicious axis along whcih to compare them  ;)

[19:10] *** ymasory joined
[19:12] *** SHODAN joined
[19:15] *** hanekomu joined
[19:16] <jnthn> It probably doesn't even needs to be as fast as Perl 5 in the immediate future. It just needs to not be glacial.

[19:17] <jaffa4> glacial?

[19:17] *** hanekomu left
[19:17] <jnthn> jaffa4: How fast to glaciers move? :)

[19:17] <jnthn> *do

[19:17] <jaffa4> ok

[19:17] *** hanekomu joined
[19:17] <SHODAN> fast?

[19:17] <jnthn> jaffa4: But really I mean, not ridiculously slow.

[19:18] <jnthn> It'd be less bad if you only ran into it when doing performance sensitive stuff. Right now you run into it when doing just about anything non-trivial.

[19:19] <jaffa4> Is this mainly parrot related or code generated is not optimal?

[19:20] <PerlJam> jaffa4: there are very few optimizations at any level in the code.

[19:20] <jnthn> Bit of both, but also things that could be optimized generally haven't been so far.

[19:21] <jnthn> flussence: Better RAM usage will at least partly be thanks to the generational GC, I suspect.

[19:21] <jnthn> It collects much more often, so you accumulate less garbage.

[19:25] <jaffa4> the optimising phase

[19:25] <jaffa4> When is it planned?

[19:29] *** Holy_Cow left
[19:30] *** Holy_Cow joined
[19:31] <jaffa4> rakudo: say 3**3;

[19:31] <p6eval> rakudo 4bf132: OUTPUT«27␤»

[19:32] <tadzik> jaffa4: well volunteered :)

[19:32] <tadzik> seriously, I feel like someone picking up Parrot's tree-optimizer and making use of it could do wonders

[19:34] *** rgrau left
[19:34] <PerlJam> jaffa4: sometime after 6model lands would be a good time  :)

[19:35] <jaffa4> What 6model?

[19:36] <PerlJam> jaffa4: 6model is the new basis for all things object that jnthn has been working on.

[19:37] *** GinoMan joined
[19:41] <jnthn> jaffa4: https://github.com/jnthn/6model/blob/master/overview.pod gives an overview

[19:50] *** masak joined
[19:50] <masak> lol hai zebras

[19:51] <jnthn> o/ maszak

[19:51] <PerlJam> mas zak?

[19:51] <jnthn> I added more 'z's 'cus he's in .pl :P

[19:51] <masak> czesc

[19:51] <isBEKaml> majak!

[19:51] <PerlJam> ah

[19:51] <masak> I'm indeed in .pl

[19:52] <masak> my z key is looking tired just by being here :)

[19:52] <jaffa4> mashak?

[19:53] <masak> I see I'm having my name refactored today :P

[19:53] <jaffa4> By the way, how do you pronounce it?

[19:54] <masak> jaffa4: mæːsak

[19:54] <jaffa4> It is not ENglish

[19:54] <masak> no.

[19:55] <masak> you can't show pronunciation with the English phonology :P

[19:55] <jaffa4> first, is like mother?

[19:56] <masak> the consonant, yes.

[19:56] *** Rotwang joined
[19:57] <masak> ooh, kudos to whoever set up https://github.com/perl6/misc/wiki/Get-Into-Perl6

[19:57] <masak> I hadn't seen that before.

[20:05] <PerlJam> I think that was tadzik 

[20:05] *** icwiener joined
[20:07] *** muixirt left
[20:09] <masak> if someone is still interested in signing up for my CQRS mini-course, you can do so now over at http://doodle.com/g6vsp3h3rs5cnk2v

[20:09] <masak> I'll wait a few minutes, and if no-one else signs up, I'll decide a date and time.

[20:10] <isBEKaml> masak: CQRS -- DDD ? 

[20:10] <masak> isBEKaml: yep.

[20:10] <masak> golden opportunity.

[20:10] <isBEKaml> masak: dunno. It's funny that I was looking at CQS a few days ago, random clicking th net. 

[20:11] <masak> isBEKaml: I'm in Poland because I just took a three-day course on CQRS.

[20:11] <masak> I'd like to pass this on, because it's great stuff.

[20:11] <isBEKaml> masak: CQRS course in Poland? wow, you must be a globe trotter for courses? students for courses? :P

[20:12] <masak> I'm assuming those were three rethorical questions... :)

[20:12] <isBEKaml> .oO(horses for courses)

[20:12] <masak> because I don't see what I should reply :P

[20:12] <isBEKaml> the second one wasn't. I seem to have a bad rep for affixing question marks to sentences, when I don't mean anything in there. :P

[20:13] <masak> I've been doing the opposite lately.

[20:13] <masak> no, I don't travel to go to courses that often, actually.

[20:13] <masak> more often travel to go speak at confs.

[20:13] <isBEKaml> Nice. 

[20:14] <isBEKaml> How do you plan to hold that course? online? 

[20:14] <isBEKaml> doodles, slides or screencasts? 

[20:15] <isBEKaml> however it is, I'll just sign up. :)

[20:15] <masak> <TimToady> jaffa4++ is correct, though, that if rakudo ran as fast as Perl 5, it would already be a better Perl

[20:15] <masak> I'm only half agreeing.

[20:15] <masak> Perl 5 has one big win: it's very mature.

[20:15] <masak> isBEKaml: please do.

[20:15] <masak> isBEKaml: I haven't decided on the format yet.

[20:16] <masak> isBEKaml: I'm thinking ditaa graphs and Perl 6 gists, though.

[20:18] <tadzik> cześć masaku

[20:18] <masak> domo arigato, cześć bardzo.

[20:19] <isBEKaml> masak: registered. excited! :)

[20:19] <masak> \o/

[20:19] <isBEKaml> japanese and czech in a single sentence? :D

[20:19] *** MayDaniel joined
[20:20] <masak> I was... ad-libbing...

[20:21] <masak> ok, Doodle closed. Friday 18:00-20:00 UTC it is.

[20:22] <moritz> \o/

[20:22] <isBEKaml> \o/

[20:22] <isBEKaml> that's actually close to midnight here. I'm fine with it though, but don't expect me to ask questions. :P

[20:22] *** ymasory left
[20:23] <masak> isBEKaml: you'll be as active as you want, of course.

[20:23] <isBEKaml> masak: sure, sure. considering that it's about 2 am here right now. ;)

[20:24] <masak> isBEKaml: then you have no excuse, buddy :P

[20:24] <isBEKaml> masak: I do, actually. It's off day today. Friday's work day. :P

[20:26] *** molaf joined
[20:27] <masak> isBEKaml: when you're staying up late, isn't it more important what kind of day it is the next day?

[20:27] <isBEKaml> masak: Before that kicks in, you come back from a long commute. ;)

[20:28] <isBEKaml> masak: enufffighting, friday 1800hrs UTC, I'll be there. 

[20:28] <masak> :)

[20:29] <isBEKaml> yapsi: say say; # does that still timeout over latency? 

[20:29] <p6eval> yapsi: OUTPUT«(timeout)»

[20:29] <isBEKaml> pfft

[20:29] <masak> oh, and Yapsi doesn't parse comments yet.

[20:30] <masak> so that would actually not parse.

[20:30] <isBEKaml> masak: that wasn't about comments. 

[20:30] <isBEKaml> yapsi: say 42;

[20:31] <masak> I know.

[20:31] <p6eval> yapsi: OUTPUT«(timeout)»

[20:31] <masak> Yapsi is slow :(

[20:31] <masak> even with precompilation, I suspect.

[20:31] <masak> the FUTURE added some extra cost.

[20:31] *** icwiener left
[20:31] <isBEKaml> It runs here, but not on appflux (?)

[20:35] *** icwiener joined
[20:36] *** icwiener left
[20:39] *** tty234 left
[20:40] *** skangas__ joined
[20:42] *** skangas left
[20:42] *** skangas__ is now known as skangas

[20:44] *** icwiener joined
[20:44] *** icwiener left
[20:45] *** Holy_Cow left
[20:46] *** icwiener joined
[20:48] <jaffa4> your calendar

[20:48] <jaffa4> masak

[20:48] * masak and jaffa4 privmsg

[20:49] *** pmurias joined
[20:52] *** Mowah left
[20:52] *** mj41 left
[20:52] *** isBEKaml left
[20:52] *** tty234 joined
[20:59] <masak> seems I'll likely get jaffa4 for the Friday course as well :)

[21:01] <colomon> masak++

[21:02] *** justatheory left
[21:03] *** kaare_ left
[21:06] *** hanekomu left
[21:13] *** GinoMan left
[21:18] <jasonmay> https://gist.github.com/918438

[21:18] <jasonmay> it got all out of order, oh well

[21:19] <jasonmay> am I just supposed to not write my app this way?

[21:20] <jasonmay> I'm not sure if the fact that my class starts with Foo:: but doesn't extend Foo is an issue

[21:20] <jasonmay> (rakudo)

[21:22] *** wallberg joined
[21:23] <masak> jasonmay: yes. this is a rakudobug.

[21:24] <masak> jasonmay: workaround: do 'class Foo { ... }' before doing 'use Foo::Bar'

[21:24] <masak> jasonmay: (with the three dots really being three dots)

[21:29] <jasonmay> that works, thanks!

[21:30] <masak> \o/

[21:31] <masak> I promised I would share an Amazon wishlist with books recommended from the CQRS course by Greg Young.

[21:31] <masak> here it is: http://www.amazon.co.uk/registry/wishlist/S1CF4BDV38BL

[21:31] <masak> that's in no particular order.

[21:44] <pmurias> masak: the little lisper?

[21:55] *** am0c left
[21:56] *** pothos_ joined
[21:56] *** mux_ joined
[21:57] *** takesako__ joined
[21:58] *** takesako_ left
[21:58] *** pothos left
[21:58] *** mux left
[21:58] *** pnu joined
[21:58] *** pothos_ is now known as pothos

[21:59] *** nnunley left
[21:59] *** nnunley joined
[21:59] *** jdhore joined
[22:00] *** chitragupt left
[22:01] *** jaffa4 left
[22:02] *** spq left
[22:03] <masak> interesting post with an interesting presentation in it: http://www.dagolden.com/index.php/1446/is-javascript-the-new-perl/

[22:03] <masak> 'night, #javascript

[22:03] <masak> er. I mean. :)

[22:03] *** masak left
[22:06] *** Rotwang left
[22:08] *** coldhead joined
[22:10] *** icwiener left
[22:19] *** Rotwang joined
[22:27] *** awoodland joined
[22:34] *** awoodland left
[22:39] *** SHODAN left
[22:43] *** MayDaniel left
[22:44] *** leprevost left
[22:45] *** pmurias left
[22:47] *** chitragupt joined
[22:52] *** whiteknight joined
[22:52] <sorear> good * #perl6

[23:02] *** jfried left
[23:17] *** ymasory joined
[23:20] <diakopter> \

[23:21] *** molaf_ joined
[23:25] *** molaf left
[23:26] *** flatwhatson left
[23:27] *** am0c joined
[23:28] *** stkowski left
[23:37] *** Chillance left
[23:39] *** lue joined
[23:39] <lue> hello world! o/

[23:43] *** _jaldhar joined
[23:43] <sorear> hellue

[23:43] *** DarthGandalf left
[23:43] *** ymasory left
[23:44] *** silent_h_ joined
[23:53] *** ymasory joined
