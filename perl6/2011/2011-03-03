[00:00] *** gdey_ left
[00:00] *** gdey_ joined
[00:09] *** kensanata left
[00:10] *** ponbiki joined
[00:25] *** woosley joined
[00:26] *** gdey_ left
[00:26] *** gdey_ joined
[00:28] *** saaki left
[00:28] *** shachaf left
[00:28] *** shachaf joined
[00:29] *** stifynsemons left
[00:30] *** woosley left
[00:30] *** ribasushi left
[00:31] *** tyatpi_ left
[00:32] *** ribasushi joined
[00:37] *** ab5tract left
[00:37] *** pmurias joined
[00:52] *** stkowski left
[00:53] *** woosley joined
[00:54] *** mberends left
[01:10] *** Sarten-X joined
[01:15] *** qiyong joined
[01:22] *** cognominal joined
[01:25] *** am0c joined
[01:37] *** dalek joined
[01:37] *** ChanServ sets mode: +v dalek

[01:39] *** wooden left
[01:39] *** Helios` left
[01:39] *** PerlJam left
[01:39] *** arlinius left
[01:39] *** s1n left
[01:39] *** zamolxes_ left
[01:39] *** pjcj left
[01:39] *** flatwhatson_ left
[01:39] *** barika left
[01:43] *** Chat1791 joined
[01:43] *** wooden joined
[01:43] *** Helios` joined
[01:43] *** PerlJam joined
[01:43] *** arlinius joined
[01:43] *** s1n joined
[01:43] *** zamolxes_ joined
[01:43] *** pjcj joined
[01:43] *** flatwhatson_ joined
[01:43] *** barika joined
[01:44] <Chat1791> anyone in here from Canada

[01:45] *** Chat1791 left
[01:45] *** wooden left
[01:45] *** Helios` left
[01:45] *** PerlJam left
[01:45] *** arlinius left
[01:45] *** s1n left
[01:45] *** zamolxes_ left
[01:45] *** pjcj left
[01:45] *** flatwhatson_ left
[01:45] *** barika left
[01:45] <sjohnson> charsbar: yes

[01:45] <sjohnson> oops.. wrong person

[02:11] *** ilogger2 joined
[02:11] *** ChanServ sets mode: +v ilogger2

[02:24] *** TimToady joined
[02:25] *** sorear joined
[02:25] *** diakopter joined
[02:26] *** stifynsemons joined
[02:36] *** agentzh joined
[02:46] <diakopter> hunh

[02:48] <sorear> good * #perl6

[02:50] *** gimix joined
[03:03] *** stifynsemons left
[03:04] *** stifynsemons joined
[03:17] <sorear> dwhipp: hi

[03:37] *** mathw joined
[03:45] *** stifynsemons left
[03:48] *** dwhipp_ joined
[03:49] <sorear> dwhipp_: Hi

[03:49] <dwhipp_> hi

[03:49] <sorear> perl6/specs commit bits are handed out quite freely

[03:49] *** skangas_ joined
[03:49] <sorear> if you want a rakudo commit bit, you need to mail in a waiver

[03:50] <dwhipp_> That OK, I can use pull requests

[03:50] <dwhipp_> I was just a little surprised by the asymmetry

[03:51] *** AphelionZ joined
[03:51] *** skangas_ is now known as skangas

[03:51] <sorear> http://www.perlfoundation.org/attachment/legal/cla3.pdf # I think this is the one

[03:52] <dwhipp_> colomon: thx for submitting my change

[03:54] <dwhipp_> sorear: thanks for the link

[03:56] <dwhipp_> Probably should do the legal stuff even without a commit bit -- patches are patches, however they get in

[03:57] <sorear> If you plan to do anything on the Parrot side of the fence, know that PaFo has an independant CLA system

[03:59] <dwhipp_> It would be nice to do these things electronically -- physical docs seem so archaic

[04:05] <sorear> you can scan a filled-out CLA and email it to (I forget where)

[04:05] *** f00li5h joined
[04:06] <sorear> (someday, the world will figure out that digital signatures are more secure than scanned handwriting.  Someday.)

[04:22] *** dwhipp_ left
[04:23] *** Su-Shee_ joined
[04:24] *** stifynsemons joined
[04:39] *** JimmyZ joined
[04:47] *** AphelionZ left
[04:48] *** stifynsemons left
[04:49] *** stifynsemons joined
[04:51] *** stifynsemons left
[04:54] *** JodaZ joined
[05:10] *** LoRe_ joined
[05:10] *** JimmyZ left
[05:11] *** robinsmidsrod joined
[05:11] <cotto> README says that ICU isn't a hard requirement for Rakudo.  Is that still correct?

[05:11] *** JimmyZ joined
[05:15] *** stifynsemons joined
[05:19] *** JimmyZ_ joined
[05:20] *** JimmyZ left
[05:20] *** JimmyZ_ is now known as JimmyZ

[05:31] *** JimmyZ left
[05:33] *** JimmyZ joined
[05:36] *** JimmyZ_ joined
[05:38] *** JimmyZ left
[05:38] *** JimmyZ_ is now known as JimmyZ

[05:45] *** stifynsemons left
[05:51] *** kaare_ joined
[05:55] <sorear> cotto: It should be

[05:55] <sorear> someday once we have more plumagy stuff icu will probably be made a hard dependancy

[05:56] <sorear> but as long as enabling parrot-ICU remains prohibitively difficult on Win32, Rakudo has to cope with sometimes not having it

[05:56] <sorear> AIUI

[05:57] *** _twitch joined
[05:57] *** nymacro joined
[05:58] <cotto> sorear, ok.  thanks

[05:59] *** satyavvd joined
[06:08] *** fhelmberger joined
[06:48] *** _twitch left
[07:01] *** cjk101010 joined
[07:03] *** mfranc joined
[07:06] *** mtk joined
[07:07] *** risou joined
[07:12] *** risou left
[07:12] *** wtw joined
[07:12] *** risou joined
[07:36] <tadzik> morning

[07:44] *** mfranc left
[08:05] *** Su-Shee_ is now known as Su-Shee

[08:12] *** Mowah joined
[08:15] *** risou left
[08:16] *** risou joined
[08:21] *** snearch joined
[08:31] *** mberends joined
[08:54] *** snearch left
[08:56] <mberends> Here is an excellent thread that came up while researching "smoke testing". It brought back so many memories, particularly the "intermittent windshield wiper" that featured in my 1961 Mini 850.  http://www3.telus.net/bc_triumph_registry/smoke.htm

[09:00] *** tzhs joined
[09:02] <jdhore> mberends, you drive a 1961 Mini?

[09:03] <mberends> drove, from 1975 to 1978

[09:04] <jdhore> ah

[09:05] <jdhore> Anyone who drives a classic Mini today is very worthy of my respect.

[09:05] <jdhore> A classic Mini is a BRILLIANT car

[09:05] <mberends> we once famously transported 8 people in it for about 5 miles - I was in the "trunk".

[09:08] <mberends> it wasn't 100% original, the previous owner had modded it with a Weber carb that managed to reduce the fuel economy from 50 to 35 miles per gallon (imp).

[09:09] <jdhore> wow

[09:09] *** AphelionZ joined
[09:09] <jdhore> With that carb, did it have about the same performance as the Cooper?

[09:09] <jdhore> Or just that classic Rally Mini sound?

[09:10] *** kfo left
[09:10] <mberends> it was a hack, the performance came out worse istr. The 0-60 time was either 27 or 34 seconds.

[09:11] <jdhore> ouch

[09:12] *** AphelionZ left
[09:12] <jdhore> Even my "modern" (late 80's) 4-cylinder Diesel pickup truck has better performance than that

[09:15] <mberends> so does my mid 90's 5-cylinder Diesel minibus

[09:15] *** _twitch joined
[09:19] <jdhore> hmm...mid-90's...5-cylinder...minibus...I'm guessing VW EuroVan?

[09:21] *** ponbiki joined
[09:21] <moritz_> dwhipp: just looked into the backlog... rakudo commit bit policy is a bit stricter than that of most other repos :(. After a few good patches and sending in a signed Contributor's License Agreement you usually get a commit bit

[09:22] <moritz_> dwhipp: until then you're stuck with pull requests / patches. Sorry about that.

[09:30] *** pjcj joined
[09:32] <mberends> jdhore: yes, Caravelle Club 8. most serious omission: aircon :(

[09:32] <jdhore> I like aircon in a car, but it's not a must-have

[09:35] <mberends> from personal experience I can confirm the old adage that if you have a (minibus|pickup truck|trailer), you'll always have friends :)

[09:38] <jdhore> heh

[09:38] <jdhore> I do have the: "Yes I have A pickup truck, no I will not help you move" T-shirt

[09:39] <mberends> ymmv ;-)

[09:41] <mberends> lol

[09:44] *** JimmyZ left
[09:48] *** plobsing_ joined
[09:49] *** daxim joined
[09:51] *** risou left
[09:54] *** pmurias joined
[09:54] <pmurias> sorear: ping

[10:03] *** drbean_ joined
[10:17] *** coldhead joined
[10:17] *** drbean_ left
[10:18] *** drbean joined
[10:20] <moritz_> in perl 5, my $obj; sub f { $obj->x } keeps a reference to $obj, because sub f can be called from anywhere (it's in the symbol table)

[10:20] <moritz_> in perl 6, could $obj be garbage collected once &f goes out of scope (being lexical and all)?

[10:21] *** agentzh left
[10:23] *** dakkar joined
[10:25] *** ab5tract joined
[10:31] *** plobsing joined
[10:32] *** bbkr joined
[10:34] *** plobsing_ left
[10:38] *** kfo joined
[10:39] <mberends> moritz_: that makes sense

[10:39] <jnthn> o/ #perl6

[10:40] <moritz_> \o

[10:42] <tadzik> o/

[10:43] <tadzik> imho sub f should hold a reference to $obj, so it won't get collected before f is

[10:43] <moritz_> sure

[10:44] <moritz_> the question is if &f's pad is going to get collected at all

[10:44] <moritz_> and I hope the answer is "yes"

[10:44] <mberends> \o jnthn: for polpolnik, are you willing to upgrade the VirtualBox on pivo from 1.x to 4.x? It would simplify maintenance. That means going ex-Debian and installing VirtualBox from source.

[10:46] <mberends> *popolnik

[10:47] <mberends> (I'm making a repo of build scripts)

[10:48] <jnthn> mberends: I'm very tight on time today/tomorrow - is it something that I need to help with?

[10:49] <jnthn> mberends: It's not being used for anything else though.

[10:49] <jnthn> So no problems with upgrading.]

[10:55] <moritz_> tadzik: did you experiment with a :vtable('destroy') override in Mu.pir recently?

[10:56] <mberends> jnthn: no rush, this weekend is fine. Unless you're happy to put my login into /etc/sudoers ;)

[10:59] *** amkrankruleuen joined
[11:02] *** pmurias left
[11:03] <mberends> I suppose jnthn and masak have to finish their homework before they're allowed to go out and play

[11:07] <jnthn> :P

[11:08] <jnthn> $dayjob and talk slides and such fun :)

[11:08] <jnthn> At least I got most of one of my talks done last night :)

[11:25] *** hanekomu joined
[11:31] *** ab5tract left
[11:43] *** [particle] joined
[11:43] *** ab5tract joined
[11:48] *** satyavvd left
[11:52] *** leprevost joined
[12:01] *** cotto joined
[12:09] *** bluescreen10 joined
[12:15] *** ab5tract left
[12:16] *** Axius joined
[12:22] *** perplexa joined
[12:34] *** PacoLinux_ joined
[12:39] *** pmurias joined
[12:39] *** tomaw joined
[12:51] *** PacoLinux_ left
[12:53] *** PacoLinux_ joined
[12:56] <pmurias> sorear: ping

[13:00] *** coldhead left
[13:04] *** PacoLinux_ left
[13:05] * colomon almost has smash's benchmarking code working on his system.

[13:07] *** Axius left
[13:11] *** dalek joined
[13:11] *** ChanServ sets mode: +v dalek

[13:11] *** mtk left
[13:12] *** mtk joined
[13:16] *** mtk left
[13:19] *** MayDaniel joined
[13:20] *** mtk joined
[13:23] *** takadonet joined
[13:24] <colomon> anyone know how to use DBI / SQLite?

[13:24] <moritz_> in Perl 6?

[13:24] <colomon> no, in Perl 5.

[13:24] <takadonet> morning all

[13:24] <colomon> trying to get smash's benchmark stuff running.

[13:24] <colomon> and he uses a perl 5 harness

[13:24] <moritz_> colomon: I'd look into the MiniDB test suite if there's an example

[13:24] <colomon> error I'm getting is

[13:24] <colomon> DBD::SQLite::db do failed: no such table: bench at run_bench.pl line 13.

[13:24] <colomon> DBD::SQLite::db prepare failed: no such table: bench at run_bench.pl line 14.

[13:25] <moritz_> ah, seems like you need to create a table first

[13:32] * colomon knows basically nothing of database handling in perl.

[13:32] <colomon> or anywhere else, for that matter.

[13:33] <moritz_> if there's no schema in the benchmark repo, you have to try to reverse-engineer the table layout from the queries

[13:33] <takadonet> ouch

[13:33] <colomon> it looks like it should be very simple

[13:34] <colomon> but then, I don't understand why he didn't just dump the results in a text file.

[13:34] <moritz_> in particular the code for inserting things into the db should contain all rows (except mabe autoincremeting IDs)

[13:34] <colomon> my $sth = $dbh->prepare("INSERT INTO bench VALUES (?,?,?,?,?)");

[13:34] <moritz_> urks.

[13:35] *** Tene joined
[13:35] *** Tene left
[13:35] *** Tene joined
[13:36] *** MayDaniel left
[13:37] <colomon> moritz_: if I get you a simple comma-separate file of benchmark results, can you use your amazing powers of SVG to make graphs?

[13:38] <takadonet> colomon: Smash not around to help u?

[13:38] <moritz_> colomon: SVG::Plot can (it needs arrays of arrays, but it's an easy transformation; there are scripts that do something similar in the examples/ dir)

[13:38] <mberends> colomon: I know very well how to write such code, but I don't want to spend time on your instance because it is covered by what I plan to do this weekend with popolnik.

[13:38] * colomon does not have smash's graph code, just the benchmark running code

[13:39] <moritz_> it's the old "I want to polish this code before I publish it" thing

[13:39] * moritz_ usually prefers unpolished code to unpublished code

[13:39] *** risou joined
[13:40] <colomon> takadonet: he's presumably busy, else he'd be running these benchmarks himself.

[13:41] <colomon> poplnik?

[13:42] <jnthn> .oO( Popolnik has something in common with Zavolaj and Blizkost. )

[13:42] <moritz_> a jnthnproject?

[13:42] <mberends> popolnik: an ashtray (Slovak): a smoker results consolidation database

[13:43] <colomon> ooo, smoker

[13:43] <[Coke]> is rakudo's config system smart enough to bail out it parrot available is too old?

[13:43] <[Coke]> (after switch to git?)

[13:43] <moritz_> mberends: is that your agenda for the hackathon?

[13:43] <jnthn> moritz_: Language the name is taken from. :)

[13:43] <moritz_> [Coke]: yes

[13:44] <mberends> moritz_: yes, one of the items, under the general umbrella of "ecosystem".

[13:44] <moritz_> [Coke]: the code is a bit convoluted, but stealable

[13:45] <[Coke]> moritz_: ... Was just going to comment on the convoluted bit. :P

[13:46] <moritz_> [Coke]: I planned to do a single function that reads PARROT_REVISION, and returns the current revision (if any), the required, the release version (if any) and the information if it's new enough

[13:47] <moritz_> [Coke]: but after the decision to target nqp (which then targets parrot) I kinda lost motivation for doing so

[13:47] <moritz_> though now i realize that if it's not rakudo that needs that step, nqp will

[13:48] <jnthn> :)

[13:51] <moritz_> it's just always a PITA to test

[13:53] * moritz_ hates fragile systems without unit tests

[13:57] <colomon> Life is a fragile system without unit tests.  ;)

[13:58] <moritz_> life has very rigid unit tests

[13:58] *** ggoebel left
[13:58] <moritz_> called "survival"

[13:58] <moritz_> and if you fail, you die

[13:59] <moritz_> every commit to your DNA is check in post-commit hooks

[13:59] *** ggoebel joined
[14:01] <moritz_> that why we still live

[14:03] <[Coke]> O_o

[14:07] *** plobsing left
[14:08] *** ab5tract joined
[14:09] <mberends> "life's a test, and then you die"

[14:10] <dalek> rakudo: 9bca538 | moritz++ | build/lib/Parrot/CompareRevisions.pm:

[14:10] <dalek> rakudo: [build] make parse_parrot_revision_file a bit more reusable

[14:10] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/9bca5384a7

[14:20] *** kaare_ left
[14:27] *** zanga_zanga joined
[14:29] *** _jaldhar joined
[14:31] *** awoodland joined
[14:31] <colomon> phenny: tell masak Your svg module is still using done_testing.

[14:31] <phenny> colomon: I'll pass that on when masak is around.

[14:33] <moritz_> colomon: it does not :-)

[14:33] * colomon finds it more than a little bit sad that he still has to install modules by hand, and fix things as he goes.

[14:33] <colomon> ooo, moritz_'s svg module.

[14:34] <colomon> I thought masak wrote it?

[14:34] * colomon feels very confused

[14:34] <moritz_> we renamed masak's SVG module to XML::Writer or so

[14:34] <colomon> phenny: tell masak Never mind.

[14:34] <phenny> colomon: I'll pass that on when masak is around.

[14:34] *** JimmyZ joined
[14:34] <moritz_> and I've create a new SVG that is actually SVG specific (masak's wasn't)

[14:34] <colomon> moritz_: yes, I installed that one first.  :)

[14:35] <colomon> btw, I have a massive benchmarking run going on my 64-bit Linux system.

[14:35] <moritz_> now I've updated SVG::Plot too

[14:35] *** leprevost left
[14:36] <colomon> and just before I could type "make test" in it!  moritz_++

[14:37] *** tom_tsuruhara joined
[14:37] <colomon> btw, what I find sad isn't that we haven't fixed everything yet, but that our ecosystem is not well-enough used or automatically tested to detect build-breaking changes until months after they happen.

[14:38] <moritz_> agreed

[14:39] <colomon> okay, so I've got a comma-separated data file, and svg-plot installed.

[14:40] *** pigdude joined
[14:40] *** pigdude left
[14:41] *** zanga_zanga left
[14:41] <moritz_> colomon: look at examples/parse-spectest-progress.pl

[14:41] <colomon> just what I had open.  :)

[14:41] <moritz_> it uses Text::CSV::Simple to turn things into a graph

[14:41] <moritz_> but you might just was well split on ',' or so

[14:42] <colomon> it is a very simple file format, after all.  :)

[14:42] <moritz_> though you might want to use :lines instead of :stacked-bars

[14:43] <colomon> errr... Text::CSV::Simple isn't in the ecosystem?

[14:44] * colomon is trying to run the example.

[14:44] *** takadonet left
[14:44] <moritz_> colomon: might be in the Text::CSV repo

[14:45] <colomon> bah, I'm just going to jump in and start coding.

[14:45] *** am0c joined
[14:45] <moritz_> +1 :-)

[14:46] <moritz_> fwiw the tests from the SVG::Plot test suite are woefully incomplete

[14:46] <moritz_> mostly because I don't have any clue how I should test it

[14:46] *** mtk left
[14:46] <colomon> moritz_: believe me, I understand how that works. 

[14:47] *** mtk joined
[14:49] <colomon> afk # toddler dressing time

[14:50] *** takadonet joined
[14:53] *** ruoso joined
[14:53] *** AphelionZ joined
[14:54] <ruoso> rakudo: say "hello from android irc client"

[14:54] <p6eval> rakudo 9bca53: OUTPUT«hello from android irc client␤»

[14:55] <moritz_> niecza: say 'hello from another compiler :-)'

[14:55] *** tzhs left
[14:55] <p6eval> niecza v3-28-ge477540: OUTPUT«hello from another compiler :-)␤»

[14:55] <moritz_> ruoso: how are you?

[14:56] <flussence_> ouch, just got bitten by Javascript treating null and undefined as separate values :(

[14:56] *** pmurias left
[15:03] <PerlJam> flussence_: but ... they are separate values  :)

[15:11] * moritz_ is all for having null, nil, undef, undefined and Mu as separate values in the language

[15:13] <flussence_> don't forget NaN :)

[15:13] <moritz_> of course, NaN and -NaN

[15:13] *** risou_ joined
[15:13] <PerlJam> moritz_: I'd be curious about the distinction you see between undef and undefined

[15:14] <PerlJam> moritz_: other than that, I agree with you entirely  :)

[15:14] <moritz_> PerlJam: undef is from Perl 5, undefined from ECMAscript :-)

[15:14] * moritz_ forgot Nil

[15:15] *** risou left
[15:16] <cotto> I'm running spectest_regression against the mmd-op-cache branch of parrot.  When I run make spectest_regression I see a failure in test 13 of t/spec/S02-builtin_data_types/instants-and-durations.t, but when I run that test alone it works.

[15:16] <flussence_> .oO( why isn't the opposite of "defined" called "fined"? )

[15:16] <moritz_> cotto: ignore that one

[15:16] <cotto> moritz_, will do.  Thanks.

[15:16] <moritz_> cotto: it's a time dependent floating point inaccuracy in some p6 level code

[15:16] <cotto> is it known-wonky?

[15:17] <cotto> sounds exciting

[15:17] <moritz_> well, the 'time dependent' really comes from the testing

[15:17] <moritz_> because it always uses 'now' as one of the reference values

[15:18] <moritz_> and it's triggered in about one of 10 cases or so

[15:18] <moritz_> but I haven't got around to investigate it in detail

[15:20] <moritz_> and I don't want to skip it because we don't have many more time interval arithmetic tests

[15:22] *** plobsing joined
[15:23] *** hanekomu_ joined
[15:24] *** MayDaniel joined
[15:24] *** hanekomu_ left
[15:25] *** hanekomu left
[15:27] *** MayDaniel left
[15:29] <colomon> std: https://gist.github.com/852937

[15:29] <p6eval> std 4608239: OUTPUT«[31m===[0mSORRY![31m===[0m␤Unrecognized regex metacharacter , (must be quoted to match literally) at /tmp/1joZnaM28B line 3:␤------> [32m$benchmark, $time) = $line.split(m/\s* ,[33m⏏[31m \s*/);[0m␤Couldn't find terminator / at /tmp/1joZnaM28B line 3:␤------>

[15:29] <p6eval> ..[32m$benchmark…

[15:29] <colomon> ah

[15:29] <colomon> std++

[15:30] * moritz_ knows why he wrote "split on ','" :-)

[15:30] <moritz_> rakudo: /,/

[15:30] <p6eval> rakudo 9bca53: OUTPUT«===SORRY!===␤Confused at line 22, near "/,/"␤»

[15:30] <colomon> std: https://gist.github.com/852937

[15:30] <p6eval> std 4608239: OUTPUT«[31m===[0mSORRY![31m===[0m␤Variable $tie is not predeclared at /tmp/1BDCKpwEzr line 5:␤------> [32mchmarks{$benchmark}.push($rakudo => $tie[33m⏏[31m);[0m␤Function 'lines' needs parens to avoid gobbling block at /tmp/1BDCKpwEzr line 2:␤------> [32mfor lines[33m⏏[31m ->

[15:30] <p6eval> ..$l…

[15:31] * colomon apparently needs to get std working locally again

[15:31] <colomon> std: https://gist.github.com/852937

[15:31] <p6eval> std 4608239: OUTPUT«[31m===[0mSORRY![31m===[0m␤Function 'lines' needs parens to avoid gobbling block at /tmp/pOBeupqHRm line 2:␤------> [32mfor lines[33m⏏[31m -> $line {[0m␤Missing block (apparently gobbled by 'lines') at /tmp/pOBeupqHRm line 8:␤------> [32m<BOL>[33m⏏[31mfor

[15:31] <p6eval> ..%benchmarks.key…

[15:31] <moritz_> for lines() -> $line

[15:31] *** justatheory joined
[15:33] <colomon> std: https://gist.github.com/852937

[15:33] <p6eval> std 4608239: OUTPUT«ok 00:01 127m␤»

[15:33] <colomon> ouch!

[15:34] <colomon> just realized the trans-sprintf benchmark has actually gotten slower, not faster.  :(

[15:37] <jnthn> :/

[15:39] <colomon> more on that once I've got the graphs displaying.

[15:45] *** Rotwang joined
[15:49] <domidumont> Hello. Is anyone here involved with packaging parrot or rakudo for Debian ? (I'm willing to help even if I'm don't have much tuit)

[15:50] <moritz_> domidumont: parrot people have been working on that, occasionally

[15:50] <moritz_> over in #parrot on irc.perl.org

[15:50] <moritz_> domidumont: there's a ports/debian directory in parrot which should contain all the necessary files, albeit a bit outdated

[15:51] <moritz_> domidumont: also don't miss docs/project/debian_packaging_guide.pod in the parrot repo

[15:51] <domidumont> moritz_: ah, was this used to produce the current (outdated) package in Debian ?

[15:51] <colomon> moritz_:  can you take a look at https://gist.github.com/852937 and see if there is anything obvious I'm doing wrong?  the result graph is pretty useless...

[15:51] <moritz_> domidumont: I think so

[15:51] <domidumont> moritz_: ok. Thanks. I'll ask on #parrot channel for more information

[15:52] <colomon> moritz_: resulting SVG is https://gist.github.com/852974

[15:52] <moritz_> colomon: values expects an array of arrays - are you passing that along?

[15:52] <colomon> why an array of arrays?

[15:52] <colomon> or, what is the array of arrays?

[15:53] <moritz_> wait, I was still thinking of stacked bars

[15:53] <moritz_> let me re-check

[15:53] <moritz_> (array of arrays because each data series should have one y value per x value)

[15:54] *** Sarten-X joined
[15:56] <colomon> what should the arrays look like, then?

[15:56] <moritz_> colomon: you'll need :values([@data.keys], ) or :values([[@data.keys]]) I think

[15:56] <colomon> I thought I was passing a Y value to go with each label.

[15:56] <moritz_> that's what i would expect if it plotted only one data series per graph, ever

[15:57] <colomon> with :values([[@data.keys]]) I get a Divide by zero error from SVG::Plot.

[15:57] <moritz_> it expects ([y1-for-x1, y1-for-x2, ...], [y2-for-x1, y2-for-x2, ...], ...)

[15:59] <moritz_> colomon: I can't really investigate now, but will later on if you also provide a data file

[16:00] <colomon> I'll poke around at it a bit more, and then send you the data file if I don't make any progress.

[16:02] <colomon> !!!

[16:02] *** hercynium joined
[16:02] <colomon> ah.

[16:02] <colomon> :values([@data>>.value]), not >>.values

[16:02] <colomon> duh.

[16:02] <moritz_> oh.

[16:03] <colomon> bitten by p6

[16:03] <colomon> 's urge to do something.

[16:05] <colomon> hmmm... would just plain .values work there?

[16:05] <colomon> nope.

[16:07] <moritz_> .values on an array returns the array (or a copy thereof)

[16:08] <colomon> right

[16:08] <colomon> that makes sense

[16:09] <colomon> is it possible to put a label on the entire graph?

[16:09] <colomon> and how do I embed the SVG in an HTML file?  ;)

[16:09] <moritz_> that would be a title

[16:10] <moritz_> <img src="path/to/graph.svg" />

[16:10] *** plobsing left
[16:10] <moritz_> there's also "real" embedding, but it requires xhtml, not html

[16:10] <colomon> gotcha.

[16:11] * moritz_ hopes colomon doesn't want IE support

[16:11] <colomon> I need to get this stuff bundled up into a package and in the ecosystem, so people who are better at the graphics bits can hack on it.

[16:12] *** tom_tsuruhara left
[16:12] <colomon> can't inkscape convert SVG to PNG or something?

[16:12] <moritz_> it can

[16:13] <colomon> what should I use as the package name for this?

[16:13] <moritz_> inkscape --export-png=target.png -D --file=input.svg

[16:13] <moritz_> Benchmark::Chart or so?

[16:14] <moritz_> or Benchmark::Plot # to keep consistent with SVG::Plot

[16:14] <colomon> I was actually thinking of tossing smash's benchmark harness in there too.

[16:14] <colomon> Benchmark::Plot would be simple and straightforward, though.  hmmm.

[16:19] *** Psyche^ joined
[16:19] *** Psyche^ is now known as Patterner

[16:21] *** vert2 joined
[16:23] *** pmurias_ joined
[16:23] *** pmurias_ left
[16:23] *** pmurias joined
[16:23] *** pmurias left
[16:26] *** Layla_91 joined
[16:27] <Layla_91> Howdy world o/

[16:27] <jnthn> Layla_91! \o/

[16:27] <Layla_91> jnthn: =)

[16:27] <jnthn> Layla_91: Hope you're less feverish than last time I saw you here? :)

[16:28] <Layla_91> jnthn: yup.. now am so fresh and ready for some work B-)

[16:28] <Layla_91> jnthn: How's perl6 doing ? :D

[16:29] <jnthn> Layla_91: yay! Glad you're better

[16:30] <jnthn> Layla_91: Perl 6 is doing OK. Though I ddin't have enough hacking time recently. :(

[16:30] <jnthn> Layla_91: Though on the up side, I'm writing some new slides. :)

[16:31] <Layla_91> jnthn: yay! :D I am so hungry for knowledge! :D I spent 3 days doing nothing in the hospital.. I hugged my laptop when came home! :D

[16:31] <jnthn> Aww

[16:32] <jnthn> Hospital sounds un-fun. :( At least you've got your laptop back now. :)

[16:33] <Layla_91> jnthn: yes :) but I have tons of pending work,,, as I Figuring out from the e-mails... :\

[16:34] <Layla_91> jnthn: And they are moving me to a PHP team... (they are taking away my Mac :'''( )

[16:34] <jnthn> Oh noes!!! :(

[16:35] <Layla_91> jnthn: its ok I will buy one.. someday =)

[16:36] <Layla_91> jnthn: plus php is easier to me :)

[16:37] <jnthn> :)

[16:37] *** AphelionZ left
[16:38] *** JimmyZ left
[16:38] *** AphelionZ joined
[16:39] <Layla_91> jnthn: can you give me the link to your slides again? can't find my bookmarks :S

[16:39] *** bluescreen10 left
[16:40] <Layla_91> jnthn: Somebody must put them on perl6 site... seriously :\

[16:40] <moritz_> Layla_91: how about you do it? :-)

[16:41] <Layla_91> moritz_: mmm.. Can I put my name and picture there too? :P

[16:41] <jnthn> layls: http://www.jnthn.net/articles.shtml

[16:41] <jnthn> Do we not have links to presentations and stuff on perl6.org already?

[16:41] <jnthn> Maybe not. :)

[16:42] <jnthn> Good idea though.

[16:43] <jnthn> http://www.perl6.org/documentation/ could be a good place to link to a page of some good Perl 6 presentations to see.

[16:44] <Layla_91> http://www.jnthn.net seems cool :-) Like an entire library! :)

[16:48] *** bbkr left
[16:48] *** d4l3k_ joined
[16:48] *** dalek left
[16:49] <Layla_91> moritz_: can I really add content to the perl6 website?

[16:49] <jnthn> Layla_91: http://pivo.jnthn.net/ is cool (and very slow loading) 'cus it's written in Perl 6. :)

[16:49] *** AphelionZ left
[16:49] <Layla_91> jnthn: omg looool! ^_^

[16:49] *** donri joined
[16:49] <Layla_91> * Taking a dive into the slides..... back sooon.........

[16:49] *** d4l3k_ left
[16:50] *** bbkr joined
[16:50] *** dalek joined
[16:50] *** ChanServ sets mode: +v dalek

[16:52] *** cjk101010 left
[16:55] <Layla_91> jnthn: Russia not mentioned in photos :(

[16:55] <donri> In Soviet Russia, photos mention you!

[16:56] *** daxim left
[16:56] *** pothos_ joined
[16:57] <Layla_91> donri: what do you mean?

[16:58] <jnthn> Layla_91: Plenty of Russia photos from http://travel.jnthn.net/ :-)

[16:58] <donri> I mean only the meanest of things.

[16:58] *** pothos_ is now known as pothos

[16:58] <jnthn> Layla_91: Sure I've used a Russia photo in some talk :)

[16:58] *** mkramer joined
[16:59] <jnthn> If not, I promise to soon :P

[16:59] <sjn> o/

[17:00] <sjn> seen masak

[17:00] <aloha> masak was last seen in #perl6 20 hours 48 mins ago saying "I can't believe we didn't have that one already. tadzik++".

[17:00] <sjn> aloha: thanks! ^^

[17:00] <Layla_91> jnthn: jnthn++ :)

[17:01] *** pothos left
[17:01] * colomon tried to update his local git, and now has completely broken it.  :(

[17:01] *** pothos joined
[17:05] *** skangas_ joined
[17:05] *** nymacro left
[17:06] *** skangas left
[17:06] *** skangas_ is now known as skangas

[17:06] *** lestrrat left
[17:07] *** lestrrat joined
[17:07] *** am0c left
[17:12] *** Layla_91 left
[17:13] *** risou_ left
[17:13] *** risou joined
[17:14] *** plobsing joined
[17:17] *** icwiener joined
[17:18] *** ruoso left
[17:18] *** ruoso_ joined
[17:19] *** ab5tract left
[17:27] *** dukeleto- joined
[17:27] *** dukeleto- left
[17:27] <moritz_> colomon: did you have any success with generating SVGs?

[17:28] *** sunnavy_ joined
[17:28] *** sunnavy left
[17:28] *** HarryS left
[17:28] *** Rotwang left
[17:28] <colomon> moritz_: yes

[17:28] <moritz_> \o/

[17:28] *** dukeleto joined
[17:28] *** dukeleto left
[17:28] <colomon> but I've had very little success getting my script pushed to github.

[17:28] *** HarryS joined
[17:28] *** Rotwang joined
[17:28] *** eternaleye joined
[17:29] *** chitragupt joined
[17:29] *** dukeleto joined
[17:29] *** dukeleto left
[17:29] <colomon> currently refreshing my entire macports ecosystem in hopes of getting a working and reasonably-up-to-date version of git.

[17:29] *** dukeleto joined
[17:29] *** dukeleto left
[17:30] *** dukeleto joined
[17:30] *** dukeleto left
[17:31] *** dukeleto joined
[17:31] *** dukeleto left
[17:31] *** dukeleto joined
[17:31] *** dukeleto left
[17:31] *** bluescreen10 joined
[17:32] *** dukeleto joined
[17:32] *** dukeleto left
[17:32] *** dukeleto joined
[17:32] *** dukeleto left
[17:35] *** eternaleye left
[17:36] *** eternaleye joined
[17:36] *** pjcj left
[17:37] *** dukeleto joined
[17:37] *** dukeleto left
[17:37] *** dukeleto joined
[17:37] *** dukeleto left
[17:37] *** dukeleto joined
[17:37] *** dukeleto left
[17:37] *** cdarroch joined
[17:37] *** cdarroch left
[17:37] *** cdarroch joined
[17:37] *** dukeleto joined
[17:37] *** dukeleto left
[17:37] *** dukeleto joined
[17:37] *** dukeleto left
[17:37] *** pjcj_ joined
[17:37] *** eternaleye left
[17:37] *** eternaleye joined
[17:37] *** dukeleto joined
[17:37] *** dukeleto left
[17:37] *** dukeleto joined
[17:37] *** dukeleto left
[17:39] *** arnsholt_ joined
[17:40] *** hercynium left
[17:40] *** dukeleto joined
[17:40] *** dukeleto left
[17:41] <dalek> rakudo: 09461fc | moritz++ | / (3 files):

[17:41] <dalek> rakudo: [build] Perl 5 cleanup

[17:41] <dalek> rakudo: 

[17:41] <dalek> rakudo: * move read_config file to module

[17:41] <dalek> rakudo: * remove parrot_ name parts

[17:41] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/09461fc4d4

[17:41] <dalek> rakudo: 191305f | moritz++ | build/PARROT_REVISION:

[17:41] <dalek> rakudo: bump PARROT_REVISON for testing

[17:41] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/191305fe5a

[17:41] <dalek> rakudo: 4e55077 | moritz++ | Configure.pl:

[17:41] <dalek> rakudo: [build] if --gen-parrot-prefix is present, ignore all other possibly available parrot_config executables

[17:41] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/4e5507753b

[17:41] *** dukeleto joined
[17:41] *** dukeleto left
[17:41] *** dukeleto joined
[17:41] *** dukeleto left
[17:42] *** dukeleto joined
[17:42] *** dukeleto left
[17:42] *** dukeleto joined
[17:42] *** dukeleto left
[17:43] *** gdey_ joined
[17:43] *** gdey_ left
[17:43] *** gdey_ joined
[17:47] *** dukeleto joined
[17:49] *** dukeleto left
[17:49] *** mkramer left
[17:49] *** ponbiki left
[17:49] *** TimToady left
[17:49] *** mkramer1 joined
[17:51] *** ponbiki joined
[17:51] *** TimToady joined
[17:51] *** dukeleto joined
[17:51] *** dukeleto left
[17:53] *** masak joined
[17:53] <masak> good evening, dear zebras.

[17:54] <masak> tonight I'm committed -- not to mention dedicated -- to bring you a p5 review post.

[17:54] *** dukeleto joined
[17:54] <masak> just because I like you so much, #perl6. :)

[17:54] <phenny> masak: 14:31Z <colomon> tell masak Your svg module is still using done_testing.

[17:54] <phenny> masak: 14:34Z <colomon> tell masak Never mind.

[17:55] <moritz_> \o/

[17:55] *** takesako joined
[17:56] *** Axius joined
[17:57] *** ponbiki left
[17:57] *** TimToady left
[17:58] <jnthn> o/ masak

[18:05] *** eternaleye left
[18:06] *** mtk left
[18:07] *** ilogger2_ joined
[18:09] <moritz_> wow, Configure.pl and gen_parrot.pl use different mechanisms for reading config information from parrot

[18:16] *** dalek joined
[18:16] *** ChanServ sets mode: +v dalek

[18:16] <jdhore> moritz_, BTW, i don't know if you saw, but i believe bacek said that gms would probably not be the default GC with the parrot 3.2.0 release and that perhaps Rakudo should default to it in configure.....

[18:16] <tadzik> heh, I'll have to re-revert my commit :)

[18:16] <PerlJam> gms?

[18:16] *** __rnddim__ joined
[18:16] *** shachaf joined
[18:17] <PerlJam> oh

[18:17] <PerlJam> generational mark sweep

[18:17] <PerlJam> bacek++

[18:17] *** TimToady joined
[18:17] *** ponbiki joined
[18:17] <[Coke]> jdhore: correct. if rakudo wants that, they should continue to specify it for --gen-parrot

[18:18] <[Coke]> I believe current concensus is can't be default until after 3.3 (but by all means, use it now.)

[18:18] <PerlJam> [Coke]: because of policy?

[18:19] *** IRSeekBot joined
[18:19] <[Coke]> it's not a drop in replacement - you have to write more code in your project to safely use it.

[18:20] <[Coke]> rakudo already has that code, but joe user doesn't.

[18:20] <PerlJam> gotcha

[18:22] *** Guest87704 joined
[18:22] *** _ilbot joined
[18:22] *** TiMBuS left
[18:22] *** pochi left
[18:22] *** rblackwe left
[18:22] *** breinbaas left
[18:23] *** ponbiki left
[18:23] *** zykes- left
[18:23] *** maja joined
[18:23] *** pochi joined
[18:23] *** breinbaas joined
[18:23] *** thepler joined
[18:23] *** TiMBuS joined
[18:23] *** eternaleye_ joined
[18:23] *** rblackwe joined
[18:23] *** zykes- joined
[18:24] *** araujo joined
[18:24] *** Solarion joined
[18:24] *** ponbiki joined
[18:26] *** amkrankr1leuen joined
[18:26] *** Layla_91_ joined
[18:28] *** lestaway joined
[18:28] *** dalek left
[18:28] *** lestaway is now known as lestrrat

[18:29] <Layla_91_> jnthn: are you still here?

[18:29] <moritz_> Layla_91_: (re perl6.org website) yes.

[18:29] *** dalek joined
[18:29] *** ChanServ sets mode: +v dalek

[18:29] <masak> Layla_91_: I think jnthn went for a walk.

[18:30] *** bbkr_ joined
[18:30] <Layla_91_> masak: hi! =)

[18:30] <masak> Layla_91_: \o :)

[18:30] <Layla_91_> moritz_: how?

[18:31] *** mtk joined
[18:31] <moritz_> Layla_91_: first step: tell me your github ID

[18:32] <masak> (zeroth step: get a github account)

[18:32] <moritz_> Layla_91_: then clone the perl6/perl6.org repo, apply and push your changes, wait.

[18:32] <moritz_> it's updated from source every 15 min or so

[18:32] *** szbalint left
[18:33] *** mberends joined
[18:33] <PerlJam> gotcha

[18:33] <Layla_91_> masak: (the real teacher.. :D ), moritz_: I will need to create an account, give me few minutes..

[18:33] *** Rotwang joined
[18:33] <PerlJam> oops

[18:33] *** ponbiki left
[18:33] *** szabgab left
[18:33] *** szbalint joined
[18:34] <masak> PerlJam: in Soviet Russia, I've got YOU.

[18:34] *** szabgab joined
[18:34] *** ponbiki joined
[18:34] <Layla_91_> masak: what is everybody talking about soviet russia? I can not understand the jokes.. :S this is second time for today..

[18:35] *** _twitch joined
[18:35] <PerlJam> Layla_91_: In soviet russia the jokes understand you.

[18:35] <moritz_> Layla_91_: http://uncyclopedia.wikia.com/wiki/Russian_reversal_%28joke%29

[18:36] <masak> Layla_91_: http://en.wikipedia.org/wiki/Slashdot#Culture

[18:36] <masak> also, autopun spotting on what PerlJam just said :)

[18:37] <Layla_91_> kinda did not like the essence a lot.. Russia is both oppressive and bad :( I think america is the bad guys :P

[18:38] <Layla_91_> But sounds funny ^_^

[18:38] <moritz_> Layla_91_: that doesn't matter for jokes :-)

[18:38] <PerlJam> Layla_91_: But we have Chuck Norris!

[18:38] *** szbalint left
[18:39] *** szbalint joined
[18:39] <Layla_91_> PerlJam: ah.. we have Yeltsin xD

[18:39] <masak> Yeltsin is kinda badass.

[18:40] *** Rotwang left
[18:40] <masak> there's probably some law of Nature that prevents him from ever ending up in a fight with Chuck Norris.

[18:41] <Layla_91_> masak: hehehehe :D

[18:41] *** bluescreen10 joined
[18:41] <Layla_91_> Oh totally forgot! github! :P

[18:42] <moritz_> masak: repulsion of singularities!

[18:42] <masak> moritz_: that's probably it. if there were two singularities in the same place, it'd be a duality. :P

[18:43] *** betterworld left
[18:43] *** cookys_ left
[18:44] *** betterworld joined
[18:48] *** ilogger2 joined
[18:49] *** betterworld joined
[18:50] *** betterworld left
[18:50] *** Rotwang joined
[18:50] *** ChanServ sets mode: +v ilogger2

[18:50] *** betterwo1ld joined
[18:50] <jnthn> Layla_91_: fear not, I'm back :P

[18:50] *** cookys joined
[18:50] <Layla_91_> jnthn: \o/

[18:51] <Layla_91_> jnthn: creating a github account based on the Mr.moritz_ request :P I needed to ask you something but maybe later today :) 

[18:52] *** lamstyle joined
[18:53] *** hercynium joined
[18:53] *** hercynium left
[18:53] *** hercynium joined
[18:54] *** ruoso joined
[18:54] *** ruoso_ joined
[18:54] *** ruoso left
[18:54] *** ruoso_ left
[18:55] <jnthn> Layla_91_: yay...GitHub account = can hack on lots of Perl 6 projects \o/

[18:56] *** ruoso joined
[18:56] <Layla_91_> moritz_: layla-91 =)

[18:56] *** bhwu left
[18:56] *** ruoso left
[18:56] *** ruoso joined
[18:57] *** sunnavy joined
[18:57] *** LoRe joined
[18:58] *** Su-Shee joined
[18:58] *** pmichaud joined
[18:58] *** mathw joined
[18:58] *** hatseflats joined
[18:58] *** simcop2387 joined
[18:58] <moritz_> Layla_91_: added. Welcome!

[18:58] *** robinsmidsrod joined
[18:58] <moritz_> oh I forgot, many people in the channel can add you via hugme

[18:59] <Layla_91_> moritz_: thanks =)

[18:59] <moritz_> ...except that hugme seems to have gone pinin' for the fjords...

[18:59] <Layla_91_> moritz_: now I understand nothing O_o .. pinin huh?!

[19:00] <moritz_> Layla_91_: "pining for the fjords" is like "dying"

[19:00] <Layla_91_> moritz_: undersood.. :)

[19:01] *** hugme joined
[19:01] *** ChanServ sets mode: +v hugme

[19:01] <Layla_91_> Must have a nice avatar first ^_^

[19:01] <moritz_> Layla_91_: http://www.youtube.com/watch?v=4vuW6tQ0218 prominently featured here

[19:02] *** ruoso left
[19:02] *** allbery_b joined
[19:03] <Layla_91_> moritz_: my dad used to watch this show :)

[19:06] <Layla_91_> I like British Accent :) must get monty python DVDs :)

[19:07] <jnthn> There's quite a few ways to have a British accent. :)

[19:07] <slavik1> Layla_91_: one of the 5 people was american

[19:08] <Layla_91_> slavik1: I am not that expert (since I am not american nor british) but I guess it is the british ones who speak more funny :)

[19:08] <slavik1> true

[19:10] <Layla_91_> jnthn: like what? I want to speak BRITISH! :D

[19:11] *** tadzik joined
[19:11] <moritz_> Layla_91_: living in britain helps a lot, my deary

[19:12] <masak> or looking at British sitcoms.

[19:12] <Layla_91_> moritz_: I wish I could.. :'(

[19:13] <Layla_91_> masak: you are great today! ^_^

[19:13] <jnthn> Layla_91_: I have some cousins who speak "British" like me, but I find their accent decidedly hard to follow. Britsh accents can vary quite a lot. And lots of regional slang too, just for fun. :)

[19:15] <Layla_91_> jnthn: We had a customer from Ireland 2 months ago.. I think his accent was too different from british one.. but funnier! =)

[19:15] <jnthn> Yes, they're fun, but often very nice to listen to. :)

[19:16] <moritz_> a thick Irish accent is *very* hard to understand

[19:16] <moritz_> I had a flat made in Scotland... quite impossible to understand

[19:16] <moritz_> i usually gave up three "excuse me?" iterations :-)

[19:17] *** TiMBuS joined
[19:17] <Layla_91_> jnthn, moritz_: he kept making his voice louder and louder.. I guess he thought I am deaf not that I could not understand his accent :S

[19:18] *** dual joined
[19:19] *** bluescreen10 joined
[19:21] <Layla_91_> ah... I have to create a wordpress or Gravatar.com account to have an avatar.. :\ 

[19:21] <Layla_91_> oh god I promissed someone to setup a joomla server for him and completely forgot.. !

[19:21] <Layla_91_> leaving!

[19:21] <Layla_91_> o/

[19:23] <jnthn> Layla_91_: o/

[19:34] *** GinoMan joined
[19:39] *** bluescreen10 left
[19:43] *** TiMBuS left
[19:43] *** TiMBuS joined
[19:44] *** pyrimidine joined
[19:52] *** bluescreen10 joined
[20:07] <masak> hm. getting a strange error involving infix:<~>

[20:07] *** Rotwang left
[20:08] *** saaki joined
[20:08] <moritz_> die "strange error involving infix:<~>" ?

[20:08] <masak> no, a multi dispatch failure.

[20:09] <masak> if only I knew what the types of the operands were... :)

[20:09] <jnthn> :/

[20:09] <masak> someone should totally patch that error to say "you passed in ..."

[20:09] <jnthn> That'd be...odd. Since ~ works on (Any,Any)

[20:10] * colomon is still trying to get git working again on his system.  (Though there was a long nom break in there.)

[20:10] <moritz_> rakudo: say infix:<~>(Mu, 1)

[20:10] <p6eval> rakudo 191305: OUTPUT«No applicable candidates found to dispatch to for 'infix:<~>'. Available candidates are:␤:(Any $x = { ... })␤:(Any $a, Any $b)␤␤  in main program body at line 22:/tmp/M4PLaGZ2b2␤»

[20:10] <masak> I'm currently updating and rebuilting Parrot/Rakudo. see if the problem persists.

[20:10] <masak> moritz_: that's the error.

[20:10] <moritz_> so, a Mu involved?

[20:10] <masak> but I was doing something totally innocent with a .substr and a literal string.

[20:10] *** frettled joined
[20:10] <masak> don't see where the Mu would come from.

[20:11] <moritz_> I remember substr out of range returning Mu or so

[20:11] <masak> that's just... wrong.

[20:11] <moritz_> rakudo: say 'abc'.substr(5).perl

[20:11] <p6eval> rakudo 191305: OUTPUT«Mu␤»

[20:11] <masak> is there an RT ticket for that?

[20:11] <moritz_> I think so

[20:11] <masak> moritz_++

[20:11] <masak> that must be it, then.

[20:12] <jnthn> What should it do?

[20:12] <moritz_> fail('substr out of range')

[20:12] <jnthn> That'd make sense.

[20:12] <colomon> rakudo: say infix:<~>(fail('substr out of range'), 1)

[20:12] <p6eval> rakudo 191305:  ( no output )

[20:12] <jnthn> masak: You should harrass somebody at a hackathon to help get the arg listing on errors implemented.

[20:12] <masak> what does &fail return in a typed subroutine?

[20:12] <masak> jnthn: oh, good idea.

[20:13] <jnthn> masak: iirc, Failure is somehow always magically acceptable. Or something.

[20:13] <jnthn> Otherwise failing wouold cause a type check error :/

[20:13] *** ruoso joined
[20:14] *** ruoso left
[20:14] <masak> right.

[20:14] <masak> so Failure is a bottom type, basically.

[20:16] <masak> "PARROT VM: Could not load bytecodeNULL current PMC at 2 in thaw"

[20:16] <masak> we're back to sucky error messages when Rakudo and Parrot versions are out-of-sync. :(

[20:17] <masak> I'd like to see something like "You tried to use this HLL compiled for Parrot x.y.z, but this is Parrot i.j.k"

[20:18] * colomon seems to have git version 1.7.4.1 installed on his MBP again!

[20:18] <colomon> errr.... first time for that version, actually.

[20:19] *** ruoso joined
[20:20] <colomon> as a bonus, it looks like I've managed to make perl 5.12 my default!  \o/

[20:20] * colomon wonders how much stuff he broke in the process....

[20:21] <colomon> moritz_: are you fixing the substr returns Mu bug?  it certainly appears to be LHF...

[20:22] *** Rotwang joined
[20:23] <moritz_> colomon: I fear that the might might make things worse, considering how crappy the failure implementation is

[20:23] <colomon> but will you let yourself be governed by your fears?  ;)

[20:23] <moritz_> yes

[20:26] * masak is reminded of the lyrics of Deteriorata: "... Give up."

[20:26] <masak> ooh, and Deteriorata is on Spotify! \o/

[20:27] <masak> [Coke]: ping

[20:32] *** VXZ joined
[20:38] *** lamstyle left
[20:41] <colomon> moritz_: https://github.com/colomon/Benchmark-Plot

[20:47] <colomon> now in ecosystem, too.

[20:47] <masak> colomon++

[20:48] <dalek> ecosystem: 49ae828 | (Solomon Foster)++ | projects.list:

[20:48] <dalek> ecosystem: Add Benchmark::Plot.

[20:48] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/49ae828f9e

[20:48] <colomon> It's graphs are pretty crude, but it's a start.

[20:48] <colomon> *Its

[20:49] *** lamstyle_ joined
[20:49] <masak> rakudo: my $time-difference = now - now; say $time-difference.fmt("%s")

[20:49] <p6eval> rakudo 191305: OUTPUT«Method 'fmt' not found for invocant of class 'Duration'␤  in main program body at line 22:/tmp/pDKYRoRLvu␤»

[20:49] <masak> yup. still hating Duration.

[20:49] <masak> can we please kill it now?

[20:49] <masak> it's basically a cumbersome Num.

[20:52] <colomon> Regardless of whether it should be killed (I've no dog in that fight), shouldn't that work anyway?

[20:52] <masak> depends if it's Cool, I guess.

[20:52] <colomon> but it should be, shouldn't it?

[20:53] <masak> I don't think the spec has an opinion about that.

[20:53] <colomon> I thought almost all builtin types were supposed to be.

[20:53] <masak> I'm not sure where that point of view comes from :)

[20:53] <masak> in my mind, only a select few builtin classes derive from Cool.

[20:54] <masak> they're common, yes. but they're not that many.

[20:54] <jnthn> They're common in core but uncommon in userspace.

[20:54] <masak> I wouldn't call Str and Int uncommon in userspace...

[20:54] <jnthn> I meant declarationally.

[20:55] <masak> oh, agreed.

[20:55] <masak> but I could definitely see someone inheriting from Cool in userspace, too.

[20:56] *** bluescreen10 left
[20:59] <colomon> Wow, the spec is actually completely silent on the question.

[21:01] <tadzik> ~~

[21:01] <masak> tadzik! \o/

[21:01] <masak> tadzik: you know what? this time tomorrow, we'll have met. :)

[21:02] *** ruoso_ joined
[21:02] <tadzik> yay! I'm looking forward :)

[21:02] <tadzik> I need to pack my things and ponies

[21:02] <masak> and zebras.

[21:02] <masak> I have a whole compartment in my bag just for the zebras.

[21:03] <tadzik> oh my, my wannabe-ISP is hilarous

[21:04] <tadzik> have I told the story of the ISP who isn't able to connect the cables for 2 monts?

[21:05] <flussence_> pff, I spent 6 months with my connection dropping every 2-3 minutes because mine wouldn't admit the problem was on their end

[21:05] <tadzik> more than a month after breaking the deal (accepted by both sides) I get a bill for .85 PLN (~20 euro cents)

[21:05] *** ruoso left
[21:05] <tadzik> to care or not to care...

[21:06] <dalek> tpfwiki: (chris denorch)++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6

[21:06] <masak> I'm benchmarking the p5 solutions now.

[21:08] *** plobsing joined
[21:10] <colomon> \o/

[21:10] <masak> colomon: interesting. fox's solution is the naivest. it beats yours for the small string lengths, but your solution gets back at it for the large ones.

[21:11] <colomon> That's actually a pretty common thing with algorithms, no?

[21:11] <masak> :P

[21:12] <masak> well, after having just run yours I figgered that wasn't what I was going to see.

[21:12] <masak> https://gist.github.com/853570

[21:12] * colomon seems to recall that bubble sort is the best sort for arrays of length 4...

[21:12] <tadzik> oh wow

[21:13] * colomon has no idea what that gist means.

[21:13] <masak> looks like fox's solution is to be preferred up to string lengths of about 50 chars.

[21:13] <masak> colomon: oh, sorry. first column is length, of both strings.

[21:13] <masak> second column is whether there is a common substring at all.

[21:14] <masak> (I try both without and with a common substring for all lengths)

[21:14] <colomon> huh.  I'm surprised mine is so much slower when there is a common substring

[21:14] <masak> third column is run time in seconds.

[21:14] <colomon> in the 320 case.

[21:14] <masak> colomon: that might just be GC, mind.

[21:14] <masak> I should run it once with the Y/N reversed.

[21:14] <colomon> I'll bet I'm doing something grotesquely inefficient, actually.

[21:15] <masak> or that :P

[21:15] <masak> yeah, the difference is a bit too large to be ascribed to just GC, actually.

[21:15] <masak> but I'll still do the reverse test, I think.

[21:17] *** ruoso joined
[21:18] <masak> chromatic++ # http://www.modernperlbooks.com/mt/2011/03/why-modern-perl-teaches-oo-with-moose.html

[21:19] <colomon> I'm not sure exactly what, but I'm betting that's it.  Once I had the SuffixTree built, I didn't really look too closely at the efficiency of building substrings from it.

[21:20] *** ruoso_ left
[21:21] <masak> fwiw, fox's solution exhibits the same increase even for the same lengths.

[21:24] *** plobsing left
[21:25] <colomon> huh.  I guess I should actually time the bits before jumping to conclusions.

[21:28] <colomon> That is to say, I don't know the effect duplicate substrings has on SuffixTree construction time.

[21:29] <masak> oh yes. suffix trees definitely beat the naive algorithm.

[21:29] <masak> I'm relieved to see that.

[21:30] *** ruoso left
[21:32] *** GinoMan2440 joined
[21:35] *** GinoMan left
[21:36] <moritz_> \o/ my first contribution to a scientific conference has been accepted 

[21:36] <colomon> moritz_++

[21:37] <masak> yay. moritz_++

[21:37] <jnthn> moritz_++

[21:37] <tadzik> great!

[21:37] <tadzik> congratulations!

[21:38] <moritz_> thanks

[21:41] <masak> argh. these benchmarks are taking too long. won't be able to finish today.

[21:41] <masak> oh well. at least now I have an approach.

[21:43] <tadzik> masak: have you checked the weather maybe?

[21:44] <masak> tadzik: no...?

[21:44] <tadzik> just asking

[21:44] <colomon> masak: how are you getting your two strings to compare?

[21:44] <masak> colomon: hold on, I'll nopaste you the data-generation script.

[21:44] <colomon> danke

[21:45] *** hercynium left
[21:46] <masak> https://gist.github.com/853570

[21:47] <colomon> perfect

[21:48] <colomon> hmmm... you realize this may not be the most realistic test.

[21:48] <colomon> ?

[21:51] <masak> sure.

[21:51] <masak> I'm mostly interested in the general trend.

[21:51] <masak> but, hm. seems I'm hitting memory/swapping considerations at the upper end. :/

[21:51] <colomon> ah, the joys of Rakudo!

[21:52] <masak> :/

[21:52] <jnthn> Rakud'oh!

[21:52] <moritz_> :-)

[21:52] * jnthn is working on his talk :)

[21:54] <masak> interesting that the naive solution had swapping issues, but colomon's with lots of objects didn't, not as much at least.

[21:54] <masak> that suggests that reducing runtime of medium-long programs could be an end in itself :)

[21:54] <colomon> how is the naive solution implemented?

[21:54] <colomon> I mean, broadly speaking.

[21:55] <masak> out loop over chars of one string. inner loop over chars of other.

[21:55] *** Mowah joined
[21:55] <masak> from those two positions, check how many from that point forward are shared.

[21:55] <colomon> actually using the chars, or some sort of sub-strings?

[21:55] <masak> compare with maximum so far.

[21:55] <jnthn> That...should be memory cheap...

[21:55] <masak> it should.

[21:56] <jnthn> wtf.

[21:56] <colomon> we may be finding rakudo glitches here, too...

[21:56] * jnthn wonders if we're accidentally keeping things around when iterating that we shouldn't be.

[21:56] <colomon> oooo, yeah, if the inner loop's iterator hung around, that would be beyond ugly....

[21:58] <masak> fox's statistics online: https://gist.github.com/853570

[21:58] <masak> I'll stop there for tonight. will probably have some time to continue tomorrow.

[21:59] <jnthn> colomon: A quick test produces no evidence for that, but I agree, it would be.

[21:59] <jnthn> Will have to look more closely.

[22:00] <dalek> nqp/lexical-setting: a32c5f9 | jonathan++ | src/NQP/Compiler.pm:

[22:00] <dalek> nqp/lexical-setting: Make sure if we try to use a setting twice it'll work out.

[22:00] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/a32c5f944b

[22:01] <masak> 'night, #perl6.

[22:01] <colomon> o\

[22:01] <tadzik> see you tomorrow :)

[22:02] <jnthn> Yay, Holland Hackathon \o/

[22:02] <mberends> \o/

[22:02] <jnthn> Are we all meeting up at the airport?

[22:03] <tadzik> I'm just trying to figure that out :)

[22:03] <jnthn> tadzik: What time you land?

[22:04] <tadzik> jnthn: the ticket says 18:55

[22:04] <jnthn> Ah, OK

[22:04] <jnthn> masak and I get in at 21:00

[22:04] <tadzik> you'll have a Greeting Comitee then :)

[22:05] <jnthn> \o/

[22:05] * colomon is kind of jealous.  :)

[22:05] * tadzik is kind of excited

[22:07] *** Chillance joined
[22:10] *** hanekomu joined
[22:11] <slavik1> wait, so you are all going to code while getting high?

[22:11] <slavik1> I am diff in the wrong job

[22:12] <jnthn> Yes. We're going to smoke LOADS of weed and then, like, commit man!

[22:13] <PerlJam> jnthn: you're getting married?!?

[22:13] <jnthn> ...weed is a marriage ritual?

[22:13] <PerlJam> jnthn: no, but committing is.

[22:13] * colomon can't say much of anything after several cider-fueled hacking runs this winter.

[22:14] <jnthn> Thanks to Rakudo, I've commited hundreds of times. :P

[22:16] * [Coke] wonder what masak wanted.

[22:16] *** coldhead joined
[22:23] <colomon> rakudo: say time

[22:23] <p6eval> rakudo 191305: OUTPUT«1299191029␤»

[22:23] <colomon> rakudo: say time

[22:23] <p6eval> rakudo 191305: OUTPUT«1299191038␤»

[22:26] *** Su-Shee left
[22:28] *** pmurias joined
[22:28] *** aindilis joined
[22:31] *** Rotwang left
[22:35] *** mtk joined
[22:41] <colomon> phenny: tell masak My timings runs using your data-generation script are showing very significant differences from one test run to another.  For 80, for instance, I've gotten average (N, Y) runs of (10.8, 14.2), (9.4, 10.8), and (9.6, 11.4).  Maybe difference has to do with different random strings?

[22:41] <phenny> colomon: I'll pass that on when masak is around.

[22:51] *** coldhead left
[22:51] *** mberends joined
[22:52] *** tom_tsuruhara joined
[22:52] <sjohnson> rakudo: say 3

[22:52] <p6eval> rakudo 191305: OUTPUT«3␤»

[22:52] <sjohnson> rakudo: say (undef // 4)."pig"

[22:52] <p6eval> rakudo 191305: OUTPUT«===SORRY!===␤Unsupported use of undef as a value; in Perl 6 please use something more specific:␤  Mu (the "most undefined" type object),␤ an undefined type object such as Int,␤  Nil as an empty list,␤  !*.defined as a matcher or method,␤     Any:U as a type constraint␤     or

[22:52] <p6eval> ..fail() as a fail…

[22:52] <sjohnson> rakudo: say (undef // 4)~"pig"

[22:52] <p6eval> rakudo 191305: OUTPUT«===SORRY!===␤Unsupported use of undef as a value; in Perl 6 please use something more specific:␤  Mu (the "most undefined" type object),␤ an undefined type object such as Int,␤  Nil as an empty list,␤  !*.defined as a matcher or method,␤     Any:U as a type constraint␤     or

[22:52] <p6eval> ..fail() as a fail…

[22:53] <sjohnson> defined-or in perl6? :3

[22:53] <tadzik> please read the error message :)

[22:56] <sjohnson> rakudo: say (nil // 4)~"pig"

[22:56] <p6eval> rakudo 191305: OUTPUT«===SORRY!===␤Null regex not allowed at line 22, near " 4)~\"pig\""␤»

[22:56] <sjohnson> argh, i've forgotten how to concat strings in the perl6 world. i'm not long for this [perl6] world

[22:57] <tadzik> owait

[22:57] <tadzik> rakudo: say (Nil // 4) ~ "pig"

[22:57] <p6eval> rakudo 191305: OUTPUT«4pig␤»

[22:57] <tadzik> rakudo: say (nil // 4) ~ "pig"

[22:57] <p6eval> rakudo 191305: OUTPUT«===SORRY!===␤Null regex not allowed at line 22, near " 4) ~ \"pig"␤»

[22:58] <tadzik> std: say (nil // 4) ~ "pig"

[22:58] <p6eval> std 4608239: OUTPUT«[31m===[0mSORRY![31m===[0m␤Null regex not allowed at /tmp/3ti6xoF7Gw line 1:␤------> [32msay (nil //[33m⏏[31m 4) ~ "pig"[0m␤Two terms in a row at /tmp/3ti6xoF7Gw line 1:␤------> [32msay (nil // [33m⏏[31m4) ~ "pig"[0m␤    expecting any of:␤ bracketed infix␤       

[22:58] <p6eval> ..infix or meta…

[22:58] <tadzik> std: nil

[22:58] <p6eval> std 4608239: OUTPUT«[31m===[0mSORRY![31m===[0m␤Undeclared routine:␤ 'nil' used at line 1␤Check failed␤FAILED 00:01 117m␤»

[22:58] *** plobsing joined
[22:58] <tadzik> I wonder why does it parse as a regex

[22:59] <jnthn> tadzik: nil is parsed as a list op

[22:59] <jnthn> tadzik: That means we're expecting a term after it, not an operator.

[23:00] <tadzik> jnthn: so isn't nil an undeclared routine?

[23:00] <jnthn> tadzik: yes

[23:01] <jnthn> tadzik: any time you have "x y" and x isn't a known term, it treats it as a call to x and parses y as a term.

[23:01] <jnthn> And we call x a list op in this case, to make ourselves feel it's not a violation of TTIAR. ;-)

[23:03] <tadzik> :)

[23:06] *** hanekomu left
[23:08] *** tom_tsuruhara left
[23:09] <sjohnson> i broketed it.

[23:28] *** plobsing left
[23:44] *** whiteknight joined
[23:48] *** pmurias left
[23:53] *** Mowah left
