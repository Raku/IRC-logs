[00:02] *** frhodes joined
[00:11] *** jevin left
[00:13] *** jevin joined
[00:16] *** frhodes left
[00:31] *** Patterner left
[00:32] *** Psyche^ joined
[00:32] *** Psyche^ is now known as Patterner

[00:32] *** uasi joined
[00:39] *** whiteknight left
[00:47] <colomon> rakudo: my $start = times[0];my $i = 0; for 1..1000 { $i = $i + $_; }; say $i; say times[0] - $start;

[00:47] <p6eval> rakudo 493e23: OUTPUT«Could not find sub &times␤  in <anon> at /tmp/kzquodDmMe:1␤  in <anon> at /tmp/kzquodDmMe:1␤␤»

[01:00] *** uasi left
[01:04] *** woosley joined
[01:06] *** REPLeffect left
[01:14] *** uasi joined
[01:20] *** REPLeffect joined
[01:46] <sorear> &times should be LHF

[02:01] <colomon> A shame quickly loop 100,000 times is not.  

[02:02] <colomon> *looping

[02:04] *** daniel-s left
[02:09] <lue> Could I get an account on feather? I've been using a different remote server, and ssh is now telling me of possible DNS spoofing [I've been thinking of moving to feather for a while now anyway]

[02:26] *** daniel-s joined
[02:37] *** daniel-s left
[02:41] *** daniel-s joined
[02:45] <abercrombie> Hi #perl6, is it possible to re-visit $*ARGFILES?

[02:47] <abercrombie> I used $*ARGFILES to read the command line file once, now I want to read the file again. Is there any way other than open() ?

[02:53] <sorear> seen Juerd

[02:53] <aloha> Juerd was last seen in #perl6 9 days 2 hours ago leaving the channel.

[02:57] <sorear> lue: you could get an account easily if Juerd were here.  I'm sending em a short mail now.

[02:58] <lue> Alright, thanks sorear

[02:59] <sorear> lue: btw, I'm 95% sure that Juerd will ask for fairly detailed personal information - Juerd's company insists on having records of exactly who is using the machine they donate

[03:00] <TimToady> rakudo: say $*ARGFILES.perl

[03:00] <p6eval> rakudo 493e23: OUTPUT«ArgFiles<37112368>␤»

[03:00] <TimToady> b: say $*ARGFILES.perl

[03:00] <p6eval> b 1b7dd1: OUTPUT«IO;ArgFiles.new(args => [], filename => Any, PIO => Any, ins => Any, autoflush => Any, path => Any, stat => IO;Stat.new(path => Any))␤»

[03:03] <sorear> yucky

[03:03] <sorear> I still think that Perl 6 shouldn't require paths and filehandles to use the same class

[03:03] *** samlh joined
[03:04] <sorear> they might both do the Stattable role

[03:04] <sorear> but I'll admit not grokking IO::Any

[03:05] <TimToady> rakudo: $*ARGS = '/etc/passwd'; say lines[0]; $*ARGS = '/etc/group'; say lines[0]

[03:05] <p6eval> rakudo 493e23: OUTPUT«Cannot assign to a non-container␤  in <anon> at /tmp/t2d7EkAA_n:1␤  in <anon> at /tmp/t2d7EkAA_n:1␤␤»

[03:05] <TimToady> rakudo: @*ARGS = '/etc/passwd'; say lines[0]; @*ARGS = '/etc/group'; say lines[0]

[03:05] <p6eval> rakudo 493e23: OUTPUT«root:x:0:0:root:/root:/bin/bash␤daemon:x:1:1:daemon:/usr/sbin:/bin/sh␤»

[03:05] *** jevin left
[03:05] *** jevin joined
[03:06] <TimToady> it does not appear that assigning @*ARGS resets $*ARGFILES currently; arguably a bug

[03:09] <abercrombie> Do you mean after @*ARGS = '..', lines should restart from the first line of the new @*ARGS?

[03:10] <TimToady> that is how P5 handles @ARGV and <>, I think, though I could be misremembering

[03:11] * sorear looks for sensitive data in the p6eval chroot

[03:11] *** agentzh joined
[03:11] <sorear> it looks like moritz has been pretty good about this, I can't find anything *really* important

[03:12] <TimToady> sorear: I think some of what is going on with IO is trying to minimize race conditions between filenames and inode identities; the only safe thing to do with a filename is to immediately open it, and do everything else with the file descriptor

[03:13] <TimToady> otherwise there is no guarantee whatsoever that /foo/bar at time N is the same file at time N+1

[03:14] <TimToady> many security breaks come from this

[03:14] <dalek> rakudo/nom: c773a04 | Coke++ | t/spectest.data:

[03:14] <dalek> rakudo/nom: track failure modes

[03:14] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/c773a04d75

[03:14] <TimToady> a normal stat should generally only be done for informative purposes like ls

[03:15] <TimToady> so it comes down to naming, caching, *and* off-by-one errors :)

[03:15] <abercrombie> TimToady: You are right. In perl5 it will reset to the new one

[03:16] <TimToady> so whoever implemented ARGFILES was making some unwarranted assumptions, from the standpoint of "default to Perl 5 semantics"

[03:23] *** Su-Shee_ joined
[03:27] *** Su-Shee left
[03:28] *** imarcusthis left
[03:30] <abercrombie> Is b: for the 2011.07 version?

[03:31] *** imarcusthis joined
[03:33] <TimToady> aye

[03:33] <abercrombie> b: @*ARGV="a"

[03:33] <p6eval> b 1b7dd1: OUTPUT«Cannot modify readonly value␤  in '&infix:<=>' at line 1:src/metamodel/RoleToInstanceApplier.nqp␤  in main program body at line 22:/tmp/yNuE0EDNMF␤»

[03:33] <abercrombie> b: @*ARGS="a"

[03:33] <p6eval> b 1b7dd1:  ( no output )

[03:35] <abercrombie> lines[0] will only read the first line, right? Not read the whole file and retrieve the first line

[03:35] * sorear needs to come up with something to say on the Parrot lists to offset the noise generators

[03:36] <sorear> abercrombie: lines[0] will open the file, read the first line, and leave the file open indefinitely

[03:36] <sorear> abercrombie: hopefully you're on an OS that closes files on exit

[03:37] <abercrombie> So is this the lazy evaluation? Coz from the grammer I think it equals to lines()[0]

[03:37] <sorear> it exactly equals that

[03:38] <abercrombie> Since a mere lines() will give us the whole file, I guess it utilize the lazy eval tech, am I right?

[03:40] <sorear> righht

[03:41] <abercrombie> Thanks. Does niecza reset the line number when @*ARGS get assigned to a new value?

[03:43] <sorear> does it make me a bad person to have an extremely low opinion of KatrinaTheLamia

[03:43] <sorear> abercrombie: @*ARGS isn't magical.  No-one can tell you've changed it.

[03:44] <PerlJam> sorear: no.

[03:44] <sorear> (why did I even bother reading her last mail...)

[03:44] <abercrombie> Coz in Perl5 the ARGV thing is "sensitive"

[03:46] <PerlJam> sorear: I wonder if KatrinaTheLamia is really just a trick to derail interesting/productive conversation

[03:48] <sorear> PerlJam: we have so many people on the perl 6 lists who have no firm grounding in reality

[03:50] <sorear> I especially have to wonder what to think about Damian Conway.  I'm told he's a brilliant hacker but I find myself thinking "that's a horrible idea" every time he posts

[03:50] <sorear> *on implementation matters

[03:51] *** jamtech joined
[03:53] <abercrombie> #1   @*ARGS="a.txt"; say lines[0]; lines; @*ARGS="a.txt"; say lines[0];  

[03:53] <abercrombie> #2   @*ARGS="a.txt"; say lines[0]; say lines; @*ARGS="a.txt"; say lines[0];  

[03:53] <abercrombie> the first one won't get reset while the second one does.

[03:54] <abercrombie> So it seems the problem is due to optimization?

[03:54] <PerlJam> sorear: Damian pushes the envelope of reality a little bit.  In a way, he's like a Perl 6 venture capitalist but with ideas instead of money.

[03:58] *** envi_laptop joined
[04:01] *** uasi left
[04:01] *** uasi joined
[04:01] *** birdwindupbird joined
[04:05] *** satyavvd joined
[04:05] <sorear> abercrombie: laziness!

[04:05] <sorear> abercrombie: lines; # this does nothing

[04:06] <sorear> abercrombie: +lines; # tells Perl to simulate wc -l, and exhausts all the lists

[04:06] *** uasi left
[04:06] *** jamtech left
[04:12] <abercrombie> sorear: I see. Thank you.

[04:30] *** molaf joined
[04:37] *** kaare_ joined
[04:52] *** kfo_ joined
[04:55] *** kfo left
[05:00] *** uasi joined
[05:01] *** plobsing left
[05:08] *** zby_home_ joined
[05:08] *** zappepcs_ left
[05:11] *** saaki left
[05:11] *** tadzik left
[05:11] *** sftp_ joined
[05:11] *** sftp left
[05:11] *** BinGOs left
[05:11] *** ascent_ left
[05:12] *** sftp_ left
[05:12] *** PZt left
[05:12] *** sjn left
[05:12] *** yves left
[05:12] *** cotto_work left
[05:12] *** pmichaud left
[05:12] *** dju left
[05:12] *** saaki joined
[05:12] *** PZt joined
[05:13] *** pmichaud joined
[05:13] *** sjn joined
[05:13] *** yves joined
[05:13] *** cotto_work joined
[05:13] *** BinGOs joined
[05:13] *** ascent_ joined
[05:14] *** molaf left
[05:14] *** tadzik joined
[05:15] *** dju joined
[05:23] *** donri left
[05:25] *** abercrombie left
[05:28] *** ZapZ_ joined
[05:30] *** ZapZ_ left
[05:31] *** ZapZ_ joined
[05:35] *** ZapZ_ left
[05:35] *** ZapZ_ joined
[05:36] <moritz> good morning

[05:47] <lue> hello moritz o/

[05:51] <sorear> hi moritz.

[05:51] <sorear> TimToady++ discovered a new hole in our sandbox

[05:51] <sorear> hmm, I wonder

[05:51] <sorear> niecza: my @*ARGS = '/etc/passwd'; say lines;

[05:51] <p6eval> niecza v9-10-g678102e: OUTPUT«Land der Berge, Land am Strome, Land der Äcker, Land der Dome, Land der Hämmer, zukunftsreich! Heimat bist du großer Söhne, Volk, begnadet für das Schöne, vielgerühmtes Österreich, vielgerühmtes Österreich!  Heiß umfehdet, wild umstritten liegst dem Erdteil…

[05:52] <sorear> niecza: @*ARGS = '/etc/passwd'; say lines;

[05:52] <p6eval> niecza v9-10-g678102e: OUTPUT«Land der Berge, Land am Strome, Land der Äcker, Land der Dome, Land der Hämmer, zukunftsreich! Heimat bist du großer Söhne, Volk, begnadet für das Schöne, vielgerühmtes Österreich, vielgerühmtes Österreich!  Heiß umfehdet, wild umstritten liegst dem Erdteil…

[05:52] <sorear> niecza: @*ARGS = '/etc/passwd'; say $*ARGFILES.lines;

[05:52] <p6eval> niecza v9-10-g678102e: OUTPUT«Unhandled exception: CORE open may not be used in safe mode␤  at /home/p6eval/niecza/lib/CORE.setting line 0 (CORE open @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting line 2008 (CORE ArgFiles.get @ 16) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1999 (…

[05:59] * sorear out

[06:03] *** wtw joined
[06:04] *** eiro left
[06:07] *** orafu left
[06:09] *** orafu joined
[06:10] *** Su-Shee_ is now known as Su-Shee

[06:10] *** zby_home_ left
[06:11] *** REPLeffect left
[06:15] *** SHODAN joined
[06:24] *** REPLeffect joined
[06:42] *** amil joined
[06:42] *** amil left
[06:47] *** koban` joined
[06:47] *** wamba joined
[06:47] *** koban` left
[06:49] *** drbean left
[07:11] *** PZt left
[07:13] *** mj41 joined
[07:15] *** PZt joined
[07:32] <cotto> when is mls usually online?

[07:34] <moritz> cotto: in on or two hours maybe

[07:34] <moritz> late CEST (UTC+2) uptime :-)

[07:35] <cotto> that might explain why I can't seem to catch him

[07:35] <cotto> stupid earth with its wildly differing timezones

[07:38] <lue> .oO(stupid Time with its wildly differing speeds and starting positions)

[07:42] *** drbean joined
[07:44] <tadzik> good morning #perl6

[07:44] <lue> good evening tadzik o/

[07:48] <jnthn> morning, #perl6

[07:49] <lue> evening jnthn o/ [I'm getting the distinct feeling I'm in the wrong timezone]

[07:49] <tadzik> timezones. They're all wrong

[07:51] <jnthn> tadzik: Thanks for the benchmarking :)

[07:51] <lue> .oO(There should either be one timezone (UTC), or ∞ timezones (setting your clock to the sun))

[07:51] <jnthn> tadzik: Guessing that you'd --optimize'd the setting?

[07:52] <tadzik> jnthn: yes

[07:52] <tadzik> the size of the pbc didn't change at all

[07:52] <tadzik> (as du CORE.setting.pbc says) 

[07:56] <jnthn> at all?

[07:56] <jnthn> I'd not have expected much difference in either direction

[07:56] *** im2ee joined
[07:56] <jnthn> But something

[07:57] <im2ee> Hi! :)

[08:02] <moritz> jnthn: 'du' has file system block size resolution

[08:02] <moritz> so probably 4kb

[08:02] <moritz> so "no change at all" => "no change by more than 4kb"

[08:03] <lue> .oO(does 'll' (or 'ls -l') do the same sort of block size resolution?)

[08:04] <moritz> lue: no, as you can easily see from the numbers

[08:05] <moritz> if you run it on a small file

[08:06] <lue> Now that I think about it, it's pretty obvious. Maybe I'm just tired.

[08:06] <tadzik> im2ee: hello

[08:06] <tadzik> I think du -b could be more accurate, yes

[08:06] <moritz> but 'du' is 'disc usage', and disc usage *is* measured in fs blocks

[08:06] * moritz uses   wc -c  for byte counts

[08:07] <tadzik> right

[08:07] <tadzik>        -b, --bytes

[08:07] <tadzik>               equivalent to `--apparent-size --block-size=1'

[08:07] <tadzik> and --apparent-size "print  apparent  sizes,  rather  than  disk usage;"

[08:10] *** thou left
[08:21] *** envi_laptop left
[08:32] <jnthn> moritz: ah, ok

[08:32] <jnthn> I suspect for loops run faster because the optimizer improved the iterator code in the setting somewhat.

[08:35] *** wamba left
[08:35] <mls> morning perl6!

[08:35] <mls> so we're inlining now? jnthn++

[08:35] <moritz> \o mls 

[08:36] <mls> (be careful to not to inline blocks that contain OUTER::)

[08:36] <mls> s/to//

[08:37] <jnthn> mls: Well, that's easy, OUTER:: ain't implemented yet :)

[08:37] <moritz> we don't have OUTER:: yet :-)

[08:37] <jnthn> mls: We're only inlining immediate blocks

[08:37] <mls> yeah, I know. But we'll have it someday.

[08:37] <jnthn> This isn't the really interesting inlining.

[08:37] <jnthn> That's *much* harder.

[08:38] <mls> moritz: what about callframe()? Do blocks appear in the callframe?

[08:38] <moritz> mls: they do

[08:38] * jnthn wonders how much space the spec gives us there.

[08:39] <mls> hmm, I worry about callframe(4).leave(1) or such...

[08:39] <jnthn> Yeah. 

[08:39] <moritz> mls: that would be very fragile code

[08:39] <moritz> well, the spec talks about callframes, not about execpted callframes in the absence of optimizations :-)

[08:39] <mls> Yes, I know. We should ask TimToady++ about his thoughts on inlining

[08:41] <jnthn> Another interesting task will be an NQP optimizer. We can be a lot more aggressive there.

[08:41] <mls> True.

[08:41] <jnthn> oh heh

[08:41] <jnthn> if I make an NQP optimizer

[08:41] <jnthn> And then compile NQP under it

[08:41] <jnthn> Then the optimizer will optimize itself

[08:41] <jnthn> :)

[08:42] <mls> Too bad it doesn't optimize even better then ;)

[08:43] <moritz> maybe it does? it's hard to tell in advance what optimizations do to the code :-)

[08:46] *** jamtech joined
[08:47] *** wamba joined
[08:51] *** wamba left
[09:16] *** cosimo left
[09:24] *** jamtech left
[09:41] *** envi_laptop joined
[09:53] *** lue left
[09:58] <tadzik> make spectest with --optimize is 5 seconds longer. Likely noise, or there's not much to inline in the roast

[09:59] <tadzik> that's assuming https://gist.github.com/1197158 actually turns on the optimizer permanently :)

[10:00] <moritz> tadzik: looks like it should :-)

[10:01] <jnthn> tadzik: Noise

[10:02] <tadzik> probably, yes

[10:02] <jnthn> But tbh, it's walking the entire tree to do *one* kind of optimization.

[10:02] <tadzik> which probably doesn't occur too often in the chain of is() is() is() :)

[10:02] <jnthn> If we're breaking even already that's kinda nice...

[10:03] <jnthn> Yeah, tests don't contain loopy hot pants

[10:03] <jnthn> er

[10:03] <tadzik> we are breaking, but only 2 tests :)

[10:03] <jnthn> hot paths

[10:03] <jnthn> wtf :)

[10:03] <jnthn> tadzik: Two tests break?

[10:03] <tadzik> t/spec/S04-exception-handlers/catch.rakudo and t/spec/S04-statements/given.rakudo

[10:03] <jnthn> ah, good to know.

[10:03] <tadzik> 2 tests files. Will paste

[10:03] <jnthn> Thanks.

[10:03] <jnthn> For a first cut, that's not much breakage.

[10:03] <tadzik> https://gist.github.com/1197173

[10:13] *** pochi left
[10:23] *** espadrine joined
[10:50] *** pernatiy left
[11:06] *** pochi joined
[11:10] *** cosimo joined
[11:12] *** JimmyZ_ joined
[11:13] *** daxim joined
[11:16] *** wamba joined
[11:23] *** wamba left
[11:28] *** odoacre left
[11:33] *** Patterner left
[11:34] *** Psyche^ joined
[11:34] *** Psyche^ is now known as Patterner

[11:36] *** espadrine left
[11:37] *** Chillance joined
[11:39] *** espadrine joined
[11:41] *** odoacre joined
[11:42] *** plobsing joined
[11:46] *** envi_laptop left
[11:49] *** pernatiy joined
[11:52] *** tlocalhos left
[11:54] *** tlocalhos joined
[12:00] *** bluescreen10 joined
[12:02] *** bluescreen10 left
[12:08] *** mtk joined
[12:11] *** woosley left
[12:17] *** benabik joined
[12:17] *** hanekomu joined
[12:18] *** bluescreen10 joined
[12:37] *** sahadev joined
[12:39] <dalek> nqp: 8ad13af | moritz++ | tools/build/PARROT_REVISION:

[12:39] <dalek> nqp: bump PARROT_REVISION to after the pmc_is_ptr merge

[12:39] <dalek> nqp: review: https://github.com/perl6/nqp/commit/8ad13af138

[12:40] <jnthn> moritz++

[12:40] <jnthn> The nommap entry about the while 1 leak can also now go \o/

[12:40] <moritz> will make it go

[12:41] *** satyavvd left
[12:41] * [Coke] yawns

[12:42] * moritz commits

[12:42] <dalek> rakudo/nom: 860fe17 | moritz++ | / (2 files):

[12:42] <dalek> rakudo/nom: bump nqp revision, remove memory leak from NOMMAP

[12:42] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/860fe17159

[12:42] <jnthn> I have Perl 6 day on Thursday. I plan to deal with the parametric roles issues so they can be removed from nommap

[13:01] *** agentzh left
[13:01] *** sftp joined
[13:01] *** envi_laptop joined
[13:04] <[Coke]> one of the tests started hanging again, btw. (and by hanging, I could just mean "takes forever to complete and I didn't want to wait")

[13:06] *** araujo left
[13:19] *** agentzh joined
[13:22] *** araujo joined
[13:28] *** stephanmg joined
[13:28] *** stephanmg left
[13:30] *** stephanmg joined
[13:30] *** stephanmg left
[13:36] *** Holy_Cow joined
[13:37] *** stephanmg joined
[13:37] *** stephanmg left
[13:41] *** plobsing_ joined
[13:43] *** plobsing left
[13:49] *** IRCReaderBOT joined
[13:50] *** SHODAN left
[13:51] *** hanekomu left
[13:51] *** IRCReaderBOT left
[13:55] *** stephanmg joined
[13:55] *** stephanmg left
[14:02] <[Coke]> anyone remember the "show links between github committers" groovy bouncy diagram?

[14:03] <tadzik> gource

[14:04] <felher> if i wan't a unflatted(is that even a word?) array of <a b c>, <d e f>, <and so on>. Whats the preffered way to write that? [ [<a b c>], [<d e f>], [<and so on>] ]?

[14:05] <tadzik> <a bc c>.item should work

[14:05] <tadzik> and I think you mean "flatten"

[14:06] <tadzik> rakudo: say [ <a b c>, <d e f> ].perl

[14:06] <p6eval> rakudo 860fe1: OUTPUT«["a", "b", "c", "d", "e", "f"]␤»

[14:06] <moritz> [<d e f>] will return an Array, <d e f>.item a Parcel

[14:06] <tadzik> rakudo: say [ <a b c>.item, <d e f>.item ].perl

[14:06] <moritz> rakudo: say [ <a b c>; <d e f> ].perl

[14:06] <p6eval> rakudo 860fe1: OUTPUT«[("a", "b", "c"), ("d", "e", "f")]␤»

[14:06] <p6eval> rakudo 860fe1: OUTPUT«["d", "e", "f"]␤»

[14:07] <tadzik> moritz: comma

[14:07] <moritz> the one with ; didn't work

[14:07] <tadzik> oh, it's meant to?

[14:08] <tadzik> as a super-comma

[14:08] <moritz> dunno if it should work

[14:08] <moritz> frankly I don't know when ; is statement separator, and when it's super-comma

[14:08] <[Coke]> tadzik: that wasn't what I was thinking, but is awesome.

[14:09] <moritz> which is slightly worrying, but only slightly

[14:09] <PerlJam> [Coke]: code-swarm?

[14:09] <tadzik> I want to see the other one then

[14:09] <felher> tadzik, moritz: thnx :)

[14:09] <tadzik> felher: I hope that didn't confuse you even more :)

[14:10] <tadzik> pmichaud++ gave an excellent talk on this on the yapc, but I feel I should watch it once or twice again :)

[14:11] <felher> tadzik: a talk about arrays, parcels and such?

[14:11] <tadzik> felher: yes

[14:11] <felher> tadzik: is there a video?

[14:11] <tadzik> felher: not yet

[14:11] <tadzik> I think there are no videos from yapc::eu yet, but there are ought to be

[14:11] <tadzik> I'm looking forward to them, I missed too much talks due to schedule clashes

[14:12] <PerlJam> [Coke]: oh ... I know what you're talking about ... There's a URL where you can enter a github repo and it gives a wire-frame tree that bounces around a little bit that connects all of the committers.

[14:12] <felher> tadzik: yeah, i'd really like to watch them, too. :)

[14:12] <PerlJam> [Coke]: sorry, I don't remember the service

[14:14] <[Coke]> perljam;aye, that's the one. ;)

[14:14] <[Coke]> (the one you don't remember, not code-swarm ;)

[14:14] <moritz> there are publich IRC logs available of this channel, you know...

[14:14] <moritz> *public

[14:14] <moritz> maybe I should implement an option to show only links from a page

[14:15] <PerlJam> moritz: it's hard to search them when you don't know what you're searching for  :)

[14:15] *** stephanmg joined
[14:15] *** stephanmg left
[14:16] <[Coke]> nor am I sure that it was even mentioned here. I just know it was mentioned in a perl context.

[14:16] <PerlJam> it was mentioned either here or on #parrot I think.

[14:17] <PerlJam> I remember playing with it for a good 5 minutes or so :)

[14:18] *** wtw left
[14:20] *** bluescreen10 left
[14:35] <PerlJam> [Coke]: great!  now it's going to bug me all day what that site is since I can't remember it

[14:35] *** bluescreen10 joined
[14:36] <sorear> good * #perl6

[14:40] <moritz> PerlJam: maybe looking through http://moritz.faui2k3.org/tmp/perl6-links.txt helps you to find it

[14:41] <moritz> PerlJam: it's the last 1000 lines in #perl6 which contained http links

[14:42] <PerlJam> moritz++  !

[14:42] <moritz> http://www.stargit.net/#rakudo maybe?

[14:42] <PerlJam> http://www.stargit.net/#rakudo

[14:42] <PerlJam> yep

[14:42] <tadzik> oh, there's my dot there

[14:43] <tadzik> the fisheye is funny

[14:45] <moritz> SQL is sometimes very practical

[14:45] <moritz> though that query took a minute or two to run

[14:48] *** uasi left
[14:48] *** uasi joined
[14:52] *** abercrombie joined
[14:52] *** risou_awy is now known as risou

[14:52] *** uasi left
[14:58] *** samlh left
[15:00] <[Coke]> PerlJam++ moritz++

[15:01] *** thou joined
[15:06] *** birdwindupbird left
[15:07] *** samlh joined
[15:08] *** hanekomu joined
[15:10] *** hanekomu left
[15:16] *** Sarten-X left
[15:16] *** agentzh left
[15:25] *** Sarten-X joined
[15:26] *** REPLeffect left
[15:29] *** skangas is now known as skng

[15:43] *** REPLeffect joined
[15:48] *** envi_laptop left
[15:50] *** hanekomu joined
[15:53] *** samlh_ joined
[15:54] *** daniel-s left
[15:54] *** samlh left
[15:54] <flussence> .oO( argh... no wonder my laptop was running slow, that `now` bug was eating all my RAM in the background :( )

[16:05] *** hanekomu left
[16:09] *** mj41 left
[16:18] *** MayDaniel joined
[16:20] *** plobsing_ left
[16:26] *** molaf joined
[16:28] *** jevin left
[16:28] <abercrombie> Hi, #perl6. One of my friends encountered a strange problem. His Rakudo version is 2011.07, his system locale is en_US.UTF-8. All those settings are same as mine. But for a same file which contains a Unicode var name, I can run smoothly while he cannot. His rakudo complained: Confused at line 1, near "my $\u5b87\u822a = \""    I've checked that \u5b87 is the UTF-16 encoding for that unicode 

[16:28] <abercrombie> character. But we are sure the file is encoded in UTF-8 according to the result of "file" command and "od -x" command. Any suggestion?

[16:30] *** MayDaniel left
[16:31] *** jevin joined
[16:32] <pmichaud> good morning, #perl6

[16:33] <pmichaud> abercrombie: I suspect that you have ICU loaded on your system and your friend does not.

[16:33] <jnthn> hi, pmichaud 

[16:34] <pmichaud> (ICU is the library that Parrot uses for unicode handling)

[16:34] <pmichaud> jnthn: o/

[16:35] <abercrombie> How can I check whether I have it loaded?

[16:35] *** Holy_Cow left
[16:35] <pmichaud> ng: print %*VM<config><has_icu>;  # maybe?

[16:35] <pmichaud> b: print %*VM<config><has_icu>;  # maybe?

[16:35] <p6eval> b 1b7dd1: OUTPUT«Any()»

[16:35] <pmichaud> nope

[16:35] <pmichaud> hmmm

[16:35] *** Holy_Cow joined
[16:35] <jnthn> pmichaud: What's to focus on in nom? Besides the parametrics stuff that I know I should do...

[16:36] <pmichaud> jnthn: I need to re-orient myself with nom and its recent changes.  I'll likely do that a bit later today.

[16:36] <jnthn> pmichaud: OK

[16:36] *** jaldhar left
[16:36] *** jaldhar joined
[16:36] <jnthn> pmichaud: Pretty much all my work at the weekend was performance oriented rather than feature/bug oriented.

[16:36] *** hanekomu joined
[16:37] <pmichaud> jnthn: good, that's where our biggest pain point was

[16:37] <jnthn> Aye, but we probably have others now ;)

[16:37] <pmichaud> agreed

[16:37] <jnthn> Not that we don't need a lot more performance work, but... :)

[16:37] *** hanekomu left
[16:39] <abercrombie> pmichaud: I just don't know why his Rakudo tried to explain the character in UTF-16? His file is encoded in UTF-8

[16:40] <mls> pmichaud: hi! I found the cause of the high lineof() percentage 

[16:40] <mls> the one that made you suspicious of the profiler

[16:42] <pmichaud> mls: ooooh, do tell!

[16:43] *** Holy_Cow left
[16:43] <mls> the profiler overhead for each op was too big

[16:44] <mls> as lineof() consisted of an insane amount of very fast ops, the result was skewed

[16:44] <mls> (the profiler timed each op, which didn't make much sense)

[16:45] <mls> I changed the code so that it only does the tick calculation when the context changes, and old ng's lineof went from 20% to 7%

[16:45] <mls> 5% is correct

[16:47] <mls> in other words, functions with many ops had a too high tick value

[16:47] <pmichaud> makes good sense

[16:48] <mls> I'm currently changing the code so that the profiler can also do "annotation segment" profiling

[16:48] <mls> (aka HLL profiling)

[16:49] <mls> then we'll have a real perl6/nqp profiler

[16:50] <pmichaud> mmmm, annotation segment profiling

[16:50] <pmichaud> that will be... awesome

[16:50] <pmichaud> mls++  # fantastic patches

[16:50] <jnthn> mls++ indeed

[16:50] <mls> thanks!

[16:51] <mls> (I like doing low level stuff ;) )

[16:51] <jnthn> Yes, it's fun :)

[16:51] <pmichaud> your low-level stuff is helping our high-level stuff immensely.

[16:51] <jnthn> Very much so.

[16:56] <[Coke]> mls++

[16:58] *** masak joined
[16:58] <masak> good evening, lambdaparrots.

[16:59] <jnthn> o/ masak

[16:59] <pmichaud> o/ masak

[17:00] <benabik> (\x -> "Good evening, " ++ x) "masak"

[17:00] <masak> ooh, Haskell!

[17:01] <benabik> lunch &

[17:01] *** JimmyZ_ left
[17:01] *** benabik left
[17:04] *** pernatiy left
[17:08] <mls> afk -> home...

[17:09] *** daxim left
[17:11] *** donri joined
[17:14] *** am0c joined
[17:16] *** SABAQJF joined
[17:17] *** jevin left
[17:18] *** jevin joined
[17:19] *** hanekomu joined
[17:21] *** MayDaniel joined
[17:24] *** mj41 joined
[17:30] *** MayDaniel left
[17:33] *** wamba joined
[17:35] *** samlh_ left
[17:37] *** araujo left
[17:49] *** pyrimidine joined
[17:55] *** mberends joined
[18:06] <masak> #phasers in 55?

[18:07] <colomon> Bool::True

[18:07] <mberends> ooh! thanks for the reminder

[18:07] <jnthn> oops, I didn't dinner yet

[18:08] *** jevin left
[18:09] <masak> rakudo: if 21 % 4 -> $r { say "Thanks for the remainder: $r ;)" }

[18:09] <p6eval> rakudo 860fe1: OUTPUT«Thanks for the remainder: 1 ;)␤»

[18:10] *** jevin joined
[18:16] *** jevin left
[18:17] *** molaf left
[18:17] *** baest_ joined
[18:19] *** baest left
[18:21] *** jevin joined
[18:22] *** samlh joined
[18:31] *** am0c left
[18:33] *** pmurias joined
[18:37] <moritz> masak++ # Thanks for the remainder

[18:39] <diakopter> %

[18:40] <Su-Shee> "uhm?" ;) src/core/YOU_ARE_HERE.pm  > src/gen/core.pm 

[18:42] *** wamba left
[18:45] *** wamba joined
[18:48] <jnthn> ;)

[18:55] <Su-Shee> that's what you see if you watch rakudo building while knitting..

[18:55] *** takadonet joined
[18:55] *** takadonet left
[18:59] *** birdwindupbird joined
[18:59] *** samlh left
[19:21] *** pmurias left
[19:22] *** Holy_Cow joined
[19:23] *** pmurias joined
[19:23] *** risou is now known as risou_awy

[19:26] *** Holy_Cow left
[19:29] *** birdwindupbird left
[19:30] *** pmurias left
[19:31] *** pmurias joined
[19:38] *** tyatpi_ joined
[19:42] *** wamba left
[19:44] *** plobsing joined
[19:44] <masak> I finally understand why we have both the names "CORE" and "setting" in the terminology.

[19:44] <masak> "CORE" is just a setting among settings.

[19:44] *** skng is now known as skangas

[19:44] <PerlJam> masak: so that we can pun CORN and CORP like niecza does?  ;)

[19:44] <masak> sort of the "official", recommended one.

[19:45] <masak> PerlJam: I just assumed that pun was from STD/TimToady. :)

[19:45] <masak> maybe I underestimated sorear.

[19:45] <tadzik> CORP is a setting for CORPorations? :P

[19:45] <PerlJam> I don't know the provenance, so I can't say for sure.

[19:45] <PerlJam> I just noticed it with niecza.

[19:46] * masak .oO( dark wings, dark puns )

[20:01] *** molaf joined
[20:06] *** pernatiy joined
[20:07] *** [Coke] left
[20:08] <moritz> darkpan?

[20:09] <masak> I rest my dark case. :)

[20:09] *** ab5tract joined
[20:15] *** supernovus joined
[20:15] *** jevin left
[20:18] *** jevin joined
[20:19] <pmurias> masak: re recommended one, it's the default one

[20:20] <masak> aye, that's probably a better way to phrase it. :)

[20:21] <masak> but, just like with many other things in Perl 6, we do recommend our defaults ;)

[20:32] <diakopter> watching http://irclog.perlgeek.de/parrotsketch/2011-09-06 live is interesting

[20:33] <masak> aye.

[20:35] *** im2ee left
[20:36] <masak> rakudo: lines("README".IO)

[20:36] <p6eval> rakudo 860fe1:  ( no output )

[20:36] *** im2ee joined
[20:36] <masak> rakudo: say lines("README".IO)

[20:36] <p6eval> rakudo 860fe1: OUTPUT«Method 'readline' not found for invocant of class 'Mu'␤  in method get at src/gen/CORE.setting:4681␤  in sub coro at src/gen/CORE.setting:3732␤  in method reify at src/gen/CORE.setting:3702␤  in method reify at src/gen/CORE.setting:3506␤  in method reify at src/gen…

[20:36] <masak> hm.

[20:37] <diakopter> rakudo: say "README".IO.readline

[20:37] <p6eval> rakudo 860fe1: OUTPUT«Method 'readline' not found for invocant of class 'IO'␤  in <anon> at /tmp/eOdfB3CxJy:1␤  in <anon> at /tmp/eOdfB3CxJy:1␤␤»

[20:37] <masak> rakudo: lines("words")

[20:37] <p6eval> rakudo 860fe1: OUTPUT«Too many positional parameters passed; got 2 but expected 1␤  in method lines at src/gen/CORE.setting:2906␤  in sub lines at src/gen/CORE.setting:4777␤  in <anon> at /tmp/DJP5vqcJu3:1␤  in <anon> at /tmp/DJP5vqcJu3:1␤␤»

[20:37] <masak> that's the error I was looking for.

[20:37] * masak submits rakudobug

[20:38] <masak> breaks hangman in the adventure game book.

[20:38] <masak> b: lines("README"); say "alive"

[20:38] <p6eval> b 1b7dd1: OUTPUT«Operation not permitted in safe mode␤  in 'Safe::forbidden' at line 2:/tmp/KUoemhjfvP␤  in 'lines' at line 5932:src/gen/core.pm␤  in main program body at line 22:/tmp/KUoemhjfvP␤»

[20:38] <masak> b++

[20:38] <moritz> b--

[20:38] <moritz> it tried to open file README

[20:38] <moritz> but iirc it shouldn't, should it?

[20:38] <masak> well, that was right at some point ;)

[20:39] <moritz> nom: say "a\nb\nc".lines.perl

[20:39] <diakopter> what's b

[20:39] <masak> diakopter: welcome back :P

[20:39] <moritz> rakudo: say "a\nb\nc".lines.perl

[20:39] <p6eval> rakudo 860fe1: OUTPUT«("a", "b", "c").list␤»

[20:39] *** molaf left
[20:39] <moritz> diakopter: it's the beijing release

[20:39] <masak> diakopter: we decided to confuse everyone with our branch names.

[20:39] <moritz> diakopter: last release of the old rakudo/master

[20:40] <diakopter> k thx

[20:40] <masak> from what I can see in the setting source, the sub form &lines tries to call the method form .lines with an argument that doesn't bind to a parameter.

[20:40] <masak> $limit

[20:40] *** zby_home_ joined
[20:41] <moritz> where is $limit not bound?

[20:42] <masak> in Str.lines

[20:42] * moritz doesn't understand

[20:42] <moritz> oh

[20:43] <moritz> it's used in IO.lines

[20:43] <masak> doesn't help us much :)

[20:45] <moritz> so what should "a\nb\nc\n".lines(1) do?

[20:45] <moritz> return "a"? or the whole string?

[20:45] <TimToady> rakudo: sub MAIN { say "hi" }

[20:45] <p6eval> rakudo 860fe1: OUTPUT«hi␤»

[20:45] <TimToady> innersting

[20:45] *** pernatiy left
[20:45] <moritz> TimToady: nom has a *very* basic MAIN implementation

[20:45] <jnthn> rakudo: sub MAIN ($outfile = 'sphere-perl6.pgm') { say $outfile }

[20:45] <p6eval> rakudo 860fe1: OUTPUT«sphere-perl6.pgm␤»

[20:46] <Tene> rakudo: sub MAIN($a,$b) { ... }

[20:46] <p6eval> rakudo 860fe1: OUTPUT«Not enough positional parameters passed; got 0 but expected 2␤  in sub MAIN at /tmp/uGrlaFDuR9:1␤  in sub MAIN_HELPER at src/gen/CORE.setting:5956␤  in <anon> at /tmp/uGrlaFDuR9:1␤  in <anon> at /tmp/uGrlaFDuR9:1␤␤»

[20:46] <Tene> :(

[20:47] <diakopter> rakudo: my sub MAIN { say "hi" }

[20:47] <p6eval> rakudo 860fe1: OUTPUT«hi␤»

[20:47] <TimToady> it's actually been some time since I "ported" sphere to nom, so MAIN showing up is not too surprising

[20:50] <diakopter> rakudo: our sub MAIN { say "hi" }

[20:50] <p6eval> rakudo 860fe1: OUTPUT«hi␤»

[20:51] *** kaare_ left
[20:54] <masak> rakudo: .say for "README".IO.lines

[20:54] <p6eval> rakudo 860fe1: OUTPUT«Method 'readline' not found for invocant of class 'Mu'␤  in method get at src/gen/CORE.setting:4681␤  in sub coro at src/gen/CORE.setting:3732␤  in method reify at src/gen/CORE.setting:3702␤  in method reify at src/gen/CORE.setting:3506␤  in method reify at src/gen…

[20:54] <masak> I think this should work, too.

[20:54] <jnthn> b: .say for "README".IO.lines

[20:55] <p6eval> b 1b7dd1: OUTPUT«Method 'eof' not found for invocant of class ''␤  in 'IO::eof' at line 5675:src/gen/core.pm␤  in <anon> at line 5691:src/gen/core.pm␤  in main program body at line 1:src/metamodel/RoleToInstanceApplier.nqp␤»

[20:55] <masak> /o\

[20:55] <diakopter> wow

[20:55] <masak> screw this, I'm learning Python instead.

[20:56] <masak> :P

[20:56] <tadzik> NO CHOICES MEAN YOU CAN NEVER BE WRONG

[20:56] <tadzik> ha! That's like straight from my fortunes file!

[20:56] <masak> AT LEAST WE'LL BE WRONG TOGETHER

[20:57] <tadzik> masak: https://gist.github.com/1198940

[20:57] <masak> I swear I didn't know about that quote

[20:57] <masak> at least not consciously ;)

[20:58] <tadzik> (:

[20:58] <masak> anyway, I hear Python 3k is great, and only was 8 years in the making.

[20:59] <flussence> those print() parentheses were crafted out of pure unobtanium!

[20:59] <tadzik> Python 3 to Python 2 is like Perl 5.12 to Perl 5.10, no?

[20:59] <Woodi> hi #perl6

[20:59] <dalek> roast: 0ae420b | moritz++ | S32-str/lines.t:

[20:59] <dalek> roast: test Str.lines(limit), lines(Str)

[20:59] <dalek> roast: review: https://github.com/perl6/roast/commit/0ae420be90

[20:59] <tadzik> hi Woodi 

[20:59] <PerlJam> hello Woodi 

[20:59] <dalek> rakudo/nom: fe590ef | moritz++ | src/core/Str.pm:

[20:59] <dalek> rakudo/nom: implement $limit in Str.lines

[20:59] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/fe590ef357

[21:00] <Woodi> ii cannot sleep tonight and decided to put online "collection" of "text"s :)

[21:00] <flussence> tadzik: I guess so. The major version increment is there because they changed the syntax of some fairly fundamental things, and There's Only One Way To Do It

[21:00] *** PacoLinux_ left
[21:00] <tadzik> yeah

[21:01] <Woodi> i think such colection can be idea for blogs to get more new users...

[21:01] *** PacoLinux_ joined
[21:01] <Woodi> i mean, especially part new-features-in-p6...

[21:01] <masak> yo Woodi

[21:02] <Woodi> its at https://github.com/slunski/CrazyP6/ , pls not ban me....

[21:03] *** pernatiy joined
[21:03] <Woodi> just idea, becouse, it's possible, you look on this from close distance...

[21:03] <masak> we don't usually ban people.

[21:04] <Woodi> i strongly hope...

[21:04] <tadzik> we should have a wiki page with those

[21:05] <masak> it's a bit hard to read in its current form because some of the lines are very long.

[21:05] <flussence> masak: click the "raw" link, it wraps better there :)

[21:05] <Woodi> i rather think about that all as sensation not something faq :)

[21:06] <im2ee> Ehh.. Im ill. Good night! Dobranoc :)

[21:06] <tadzik> dobranoc im2ee 

[21:06] <Woodi> it's just copy-paste...

[21:06] <Woodi> czesc :)(

[21:07] <Woodi> ok, i will go now too. i will try to repair redability. gn

[21:08] <tadzik> gn Woodi 

[21:08] *** im2ee left
[21:10] *** supernovus left
[21:12] *** zby_home_ left
[21:13] *** bluescreen10 left
[21:15] <diakopter> moritz: your irclog is hanging for me

[21:16] <diakopter> as of 4 minutes ago

[21:16] <flussence> hm, same

[21:17] <diakopter> oo now it's back

[21:19] *** Chillance left
[21:20] *** jdhore left
[21:21] <flussence> .oO( I get the somewhat dubious honour of having the last word in a file named "CrazyP6"... )

[21:22] <tadzik> (:

[21:22] *** natureboy joined
[21:24] <moritz> diakopter: seems to work again here... for you too?

[21:28] <flussence> moritz: works alright now. Seems like the HTTP server went to sleep, it was getting to the "waiting for response" part

[21:29] *** bluescreen10 joined
[21:29] * moritz doesn't like that, but finds it much less disturbing than hanging logging bots

[21:33] *** pmurias left
[21:34] <diakopter> moritz: which web server is it

[21:34] <masak> 'night, #perl6

[21:34] <diakopter> n

[21:34] <moritz> diakopter: mine

[21:34] *** masak left
[21:34] * moritz -> sleep

[21:34] <diakopter> moritz: I mean, which software

[21:34] <moritz> diakopter: apache2

[21:35] *** pmurias joined
[21:36] *** jdhore joined
[21:40] *** pmurias left
[21:41] *** bluescreen10 left
[21:43] *** pmurias joined
[21:45] *** y3llow left
[21:45] *** pothos left
[21:47] *** pmurias left
[21:47] *** y3llow joined
[21:48] *** pothos_ joined
[21:48] *** pothos_ is now known as pothos

[21:49] *** pmurias joined
[21:49] *** y3llow left
[21:49] *** y3llow joined
[21:50] *** pothos left
[21:51] *** pothos_ joined
[21:51] *** pothos_ is now known as pothos

[21:54] *** lue joined
[21:55] *** pmurias left
[21:57] *** pmurias joined
[21:58] *** molaf joined
[21:59] *** mj41 left
[22:00] *** hanekomu left
[22:01] *** samlh joined
[22:15] *** pmurias left
[22:17] *** pmurias joined
[22:37] *** araujo joined
[22:37] *** araujo left
[22:37] *** araujo joined
[22:40] *** japhb joined
[22:46] *** pmurias left
[22:46] *** plobsing_ joined
[22:47] *** plobsing left
[22:48] *** pmurias joined
[22:52] *** pmurias left
[22:54] *** whiteknight joined
[22:54] *** pmurias joined
[22:55] *** [Coke] joined
[23:00] *** felher joined
[23:01] *** pmurias left
[23:03] *** pmurias joined
[23:29] *** benabik joined
[23:31] <pmichaud> comments on my performance today in #parrotsketch and #parrot extremely welcome.  email or /msg if you don't want your comments to be public

[23:34] *** pmurias left
[23:34] *** cognominal_ left
[23:36] *** cognominal joined
[23:37] *** jerome_ left
[23:41] *** ab5tract left
[23:45] <felher> pmichaud: i know very little about parrot so i guess i won't be of any help on that matter. I would like to read what you've written (for the sake of learning), though, if there is a public log?

[23:46] <felher> pmichaud: oh, seems like there is the same log available as there is for #perl6. So never mind my question. :)

[23:48] <cotto_work> yup.  moritz++ does a nice job with that

[23:51] <felher> yeah, moritz++ indeed.

[23:52] *** jerome_ joined
[23:54] *** molaf_ joined
[23:58] *** molaf left
