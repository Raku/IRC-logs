[00:07] *** dorlamm left
[00:09] *** mikemol left
[00:14] *** mikemol joined
[00:20] *** aindilis joined
[00:31] <sorear> std: tr[a..z][A..Z];

[00:31] <p6eval> std dc62e1d: OUTPUT«ok 00:01 119m␤»

[00:32] <sorear> std: tr[a..z]:to[moo]␤A..Z␤moo␤

[00:32] <p6eval> std dc62e1d: OUTPUT«Use of uninitialized value $CCSTATE in string eq at STD.pm line 52538.␤ok 00:01 120m␤»

[00:32] <sorear> niecza: tr[a..z]:to[moo]␤A..Z␤moo␤

[00:32] <p6eval> niecza v12-64-g7dedef9: OUTPUT«===SORRY!===␤␤Action method quote:tr not yet implemented at /tmp/HQxrwQQUC9 line 1:␤------> tr[a..z]:to[moo]⏏<EOL>␤␤Use of uninitialized value in string context␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 773 (w…

[00:33] <sorear> curious that tr can use heredocs for the replacement but not for the lhs

[00:33] *** MindosCheng left
[00:35] <lichtkind> moritz: sorry i was asking jnthn instead, because i wanted to talk in the calender leaf more about pairs and there general usage he found it ok just have to fix some slightly incorretness about perl 5

[00:37] *** cognominal_ joined
[00:39] *** cognominal left
[00:54] *** wolfman2000 joined
[00:55] *** packetknife left
[01:09] <sorear> TimToady: What is the intended semantics of tr/\d/x/ ?

[01:17] *** krakan left
[01:17] *** krakan joined
[01:36] *** tokuhirom joined
[01:38] *** alvis joined
[01:41] <[Coke]> nom: say 3.141592654  * 1337 / 100

[01:41] <p6eval> nom c7b0aa: OUTPUT«42.00309378398␤»

[01:41] *** tokuhirom left
[01:41] <[Coke]> whoa.

[01:42] *** packetknife joined
[01:49] *** benabik joined
[01:55] *** tokuhirom joined
[01:56] * [Coke] does another run of niecza vz. rakudo spectesting.

[01:58] *** tokuhirom left
[01:58] *** tokuhirom joined
[01:59] *** benabik left
[02:00] * sorear is forgetting how to write p5 :|

[02:03] *** fridim_ left
[02:05] *** cognominal_ left
[02:11] *** hundskatt left
[02:13] *** emanonwzy joined
[02:16] *** emanonwzy left
[02:33] <TiMBuS> its extra hard without moose

[02:58] *** packetknife left
[03:03] * colomon just got around to reading the backlog from earlier today, and thinks it's quite awesome to see jnthn++ and sorear++ chatting away, and then a bunch of commits landing to both niecza and nom.  Can't smile enough for it!  :)

[03:23] *** Guest11969 left
[03:40] *** Patterner left
[03:40] *** Psyche^ joined
[03:40] *** Psyche^ is now known as Patterner

[03:46] *** Radvendi1 joined
[03:51] *** clkao left
[04:13] *** lichtkind left
[04:14] *** mikemol left
[04:19] *** agentzh joined
[04:35] <japhb> phenny, tell jnthn It looks to me like setting elem_st in repr_bind_pos_{int,num} is copy pasta from repr_at_pos_{int,num} and that variable isn't actually used in the bind functions.

[04:35] <phenny> japhb: I'll pass that on when jnthn is around.

[04:35] * japhb finally catches up on backlog

[04:39] *** tokuhirom left
[04:42] *** risou_awy is now known as risou

[04:49] <[Coke]> nom: say 9050/18222

[04:49] <p6eval> nom c7b0aa: OUTPUT«0.496652398199978␤»

[04:50] <[Coke]> nom: say 9673 / 18374

[04:50] <p6eval> nom c7b0aa: OUTPUT«0.526450419070426␤»

[04:50] <[Coke]> nom: say 10304 / 18388

[04:50] <p6eval> nom c7b0aa: OUTPUT«0.560365455731999␤»

[04:51] <[Coke]> https://gist.github.com/1476841 - latest niecza vs. rakudo cage match numbers.

[04:51] <[Coke]> some pretty big gains in 3 days.

[04:55] *** Chillance left
[04:56] *** mikemol joined
[05:02] <TiMBuS> whhaaa- oh. [Coke], rakudo and niecza are swapped on that last run.

[05:02] <TiMBuS> bit sneaky

[05:11] <[Coke]> keeping you on your toes!

[05:11] <[Coke]> I'll normalize it.

[05:13] <[Coke]> TiMBuS: done

[05:22] <dalek> roast: 4c68d1a | moritz++ | S32-exceptions/misc.t:

[05:22] <dalek> roast: skipped tests for X::Obsolete

[05:22] <dalek> roast: review: https://github.com/perl6/roast/commit/4c68d1a505

[05:39] *** obra joined
[05:41] *** obra left
[05:41] * sorear found a more current contact for the ICU script guy

[05:42] <sorear> I wonder what obra is looking for

[06:18] *** am0c joined
[06:19] *** risou is now known as risou_awy

[06:22] *** bluescreen10 left
[06:23] *** bluescreen10 joined
[06:30] *** agentzh left
[07:26] <dalek> niecza: 841c18e | sorear++ | / (2 files):

[07:26] <dalek> niecza: Start on Unicode property data reader

[07:26] <dalek> niecza: review: https://github.com/sorear/niecza/commit/841c18e2ec

[07:31] *** molaf joined
[07:53] <TiMBuS> sorear, guessing from his hostmask, probably bad inodes

[07:54] <TiMBuS> i feel bad for that one

[07:54] <sorear> obra is someone important

[07:54] <TiMBuS> internet famous

[07:55] <geekosaur> not just internet famous, though

[07:58] *** Radvendi1 left
[08:01] <dalek> niecza: 5abbd8a | sorear++ | lib/UCD.cs:

[08:01] <dalek> niecza: Implement inflation and access for "Binary" properties

[08:01] <dalek> niecza: review: https://github.com/sorear/niecza/commit/5abbd8adba

[08:02] * sorear -> sleep

[08:03] <sorear> tomorrow: finish lib/UCD.cs stuff; embed a copy of unidata; add a Niecza::UCD Perl interface; add <:Foo> syntax

[08:08] *** [particle]1 joined
[08:09] *** ingyfoo joined
[08:09] *** jnthn_ joined
[08:10] *** broquain1 joined
[08:10] *** pothos_ joined
[08:12] *** slavik2 joined
[08:13] *** wolfman2_ joined
[08:14] *** pkkm joined
[08:16] *** ingy left
[08:16] *** jnthn left
[08:16] *** slavik1 left
[08:16] *** pothos left
[08:16] *** broquaint left
[08:16] *** [particle] left
[08:16] *** wolfman2000 left
[08:16] *** pothos_ is now known as pothos

[08:39] *** pothos left
[08:39] *** pothos joined
[08:40] <moritz> niecza: sub MAIN() { say 3 }

[08:41] <p6eval> niecza v12-66-g5abbd8a: OUTPUT«Potential difficulties:␤  &MAIN is declared but not used at /tmp/TpzfrykaOv line 1:␤------> sub MAIN⏏() { say 3 }␤␤»

[08:57] *** preflex left
[08:59] *** preflex joined
[09:01] *** preflex left
[09:05] *** preflex joined
[09:10] *** preflex left
[09:12] *** preflex joined
[09:13] *** molaf left
[09:21] <moritz> niecza: multi f('foo') { }

[09:21] <p6eval> niecza v12-66-g5abbd8a: OUTPUT«Unhandled exception: Unable to resolve method ast in class Any␤  at /home/p6eval/niecza/src/NieczaActions.pm6 line 2103 (NieczaActions.parameter @ 105) ␤  at /home/p6eval/niecza/src/STD.pm6 line 2931 (P6.parameter @ 233) ␤  at /home/p6eval/niecza/src/STD.p…

[09:22] *** GlitchMr joined
[09:53] *** lestrrat left
[09:54] *** lestrrat joined
[10:37] <moritz> niecza: class A { has $.a; has $.b = $.a }

[10:37] <p6eval> niecza v12-66-g5abbd8a: OUTPUT«===SORRY!===␤␤Variable $.a used where no 'self' is available at /tmp/KLDwQcyxJx line 1:␤------> class A { has $.a; has $.b = ⏏$.a }␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line…

[10:38] <moritz> sorear: that error is questionable; when $.b is initialized, an invocant needs to be somewhere, so you can just make it available

[10:49] *** hundskatt joined
[11:00] *** cedric_ joined
[11:01] *** tokuhirom joined
[11:01] <cedric_> Hello #perl6

[11:02] <moritz> \o cedric_ 

[11:02] <cedric_> std: my %contributors_of; ++« %contributors_of<specs, roast, rakudo, niecza, ...> # :)

[11:02] <p6eval> std dc62e1d: OUTPUT«ok 00:01 120m␤»

[11:03] <cedric_> Is the grammar.^parse function supposed to return a Grammar object or a Match object?  Rakudo and Niecza differ in this respect:

[11:03] <cedric_> perl6: grammar Test { token TOP { . } }; say $(Test.parse: 'test').WHAT

[11:03] <p6eval> niecza v12-66-g5abbd8a: OUTPUT«Test()␤»

[11:03] <p6eval> ..pugs b927740: OUTPUT«*** No such method in class Test: "&parse"␤    at /tmp/cNjAEYKFjs line 1, column 41-59␤»

[11:03] <p6eval> ..rakudo c7b0aa: OUTPUT«Match()␤»

[11:04] <moritz> cedric_: I think it shoudl always be a Match

[11:09] <cedric_> moritz: What's the preferred way to submit this kind of issues? (Github tracker, #perl6, ...)

[11:10] <moritz> cedric_: niecza bug reports go to the issue tracker on github

[11:10] <moritz> niecza: grammar Test { toekn TOP { . } }; say Test.parse('test') ~~ Match

[11:10] <p6eval> niecza v12-66-g5abbd8a: OUTPUT«===SORRY!===␤␤Bogus statement at /tmp/E6R2XNBow1 line 1:␤------> grammar Test { toekn TOP { ⏏. } }; say Test.parse('test') ~~ Match␤␤Parse failed␤␤»

[11:10] <moritz> niecza: grammar Test { token TOP { . } }; say Test.parse('test') ~~ Match

[11:10] <p6eval> niecza v12-66-g5abbd8a: OUTPUT«Bool::False␤»

[11:17] <cedric_> moritz: smart check :) I'll report this issue to sorear. Thanks!

[11:19] *** woosley joined
[11:24] *** cedric_ left
[11:25] *** [particle]1 is now known as [particle]

[11:26] *** woosley left
[11:34] *** fridim_ joined
[11:45] <jnthn_> afternoon o/

[11:45] <moritz> \o jnthn_ 

[11:46] <tadzik> hello

[11:50] * moritz wonders if masak++ will soon return from vacations

[11:50] *** am0c left
[11:50] <jnthn_> .oO( oh noes, ogonek! )

[11:50] *** jnthn_ is now known as jnthn

[11:51] <jnthn> moritz: In theory, todayish. :)

[11:51] <phenny> jnthn: 04:35Z <japhb> tell jnthn It looks to me like setting elem_st in repr_bind_pos_{int,num} is copy pasta from repr_at_pos_{int,num} and that variable isn't actually used in the bind functions.

[11:52] *** am0c joined
[11:52] <dalek> nqp: fab287d | jnthn++ | src/ops/nqp.ops:

[11:52] <dalek> nqp: Remove copy-pasted lines that aren't needed. japhb++ for noticing.

[11:52] <dalek> nqp: review: https://github.com/perl6/nqp/commit/fab287db75

[11:57] *** clkao joined
[12:26] *** donri joined
[12:34] *** woosley joined
[12:36] *** woosley left
[12:38] *** orafu left
[12:38] *** orafu joined
[12:43] *** cognominal joined
[12:46] *** MayDaniel joined
[12:50] <jnthn> Oooh! Snow! :)

[12:56] <colomon> we got a light dusting

[12:58] <jnthn> I think it's the first we've had here this winter.

[12:59] <jnthn> Last year, we got a load as early as November.

[12:59] <colomon> We got a couple of inches back in November, but then it rained.

[13:11] <moritz> nom: .say for ^0

[13:11] <p6eval> nom c7b0aa:  ( no output )

[13:17] *** Trashlord left
[13:45] *** molaf joined
[13:45] *** preflex left
[13:47] *** preflex joined
[13:47] *** i0h joined
[13:49] *** MayDaniel left
[13:50] *** preflex left
[13:52] *** preflex joined
[13:54] *** raiph joined
[13:56] <raiph> good *

[13:56] *** am0c left
[13:57] <raiph> colomon: in "Day 1: Catching Up With Perl 6" you state "at the moment there are four different Perl 6 implementations of interest"

[13:57] <colomon> yes

[13:57] *** am0c joined
[13:57] <raiph> colomon: i'm curious why perlito is omitted

[13:58] <colomon> I know absolutely nothing about it.  :)

[13:58] <raiph> colomon: ah! :)

[13:58] <raiph> colomon: kinda like the ron paul effect

[13:58] <colomon> kind of, I guess.

[13:59] <colomon> note that you're the first person I can recall objecting to leaving it out of the overview.

[14:00] <raiph> colomon: i'm not objecting; just noticed it; i had barely any awareness of perlito too

[14:00] <jnthn> ...who's ron paul?

[14:00] <jnthn> ;-

[14:00] *** taiju joined
[14:00] <jnthn> )

[14:01] *** taiju left
[14:01] <colomon> jnthn: fringe US presidential candidate

[14:01] <jnthn> colomon: Yeah, I'm aware...was just fulfilling the effect. :)

[14:01] <colomon> jnthn++

[14:01] <raiph> but then i saw a mention of perlito a couple days ago, played for a while, and thought, nice, i wonder if it is tested against the test suite, i wonder if this, that, the other...

[14:04] <raiph> colomon: i was thinking of adding a post to the Day 1 entry; then i decided i ought msg you first

[14:06] <tadzik> who's a "fringe" candidate?

[14:06] <jnthn> tadzik: One who doesn't cut the hair so it comes down almost to their eyes.

[14:07] <tadzik> heh

[14:07] <jnthn> tadzik: I guess definition is something like "one who only appeals to a small amount of the electorate, so doesn't really stand a chance of actually winning"

[14:07] <tadzik> oh, we have a few like this in Poland to

[14:07] <tadzik> *too

[14:09] <jnthn> bah. My train tickets for visiting family in the UK cost more than my flight from here to the UK...

[14:10] *** molaf left
[14:25] *** lichtkind joined
[14:39] *** Trashlord joined
[14:42] *** molaf joined
[14:49] *** Lothar left
[14:54] *** Lothar joined
[14:58] *** risou_awy is now known as risou

[14:59] *** GlitchMr left
[15:16] *** molaf left
[15:18] *** molaf joined
[15:21] *** molaf left
[15:34] *** molaf joined
[15:36] *** GlitchMr joined
[15:40] *** molaf left
[15:47] <mikemol> I'm hesitant to ask Perl 5 questions in here, but I'm trying to convert the p6 spec to epub, so perhaps it for a good enough cause. :)

[15:47] <tadzik> go on :)

[15:47] <mikemol> Is there a way to command cpan to install perl modules to a user-specfic path?

[15:48] <tadzik> I'm sure cpanm can do taht

[15:48] <mikemol> Hm. I have cpan and cpanp. *googles for cpanm*

[15:48] <tadzik> cpanm -L extlib Plack                                     # install Plack and all non-core deps into extlib

[15:48] <tadzik> from the manpage

[15:48] <tadzik> use cpanm, it's awesome

[15:48] <tadzik> as in: Just Works

[15:50] *** tokuhirom left
[15:52] *** Chillance joined
[15:53] *** ab5tract left
[15:59] *** cognominal left
[16:06] *** ab5tract joined
[16:16] <moritz> \o

[16:17] <jnthn> hi, moritz 

[16:18] <tadzik> hello

[16:18] *** envi_ left
[16:25] <moritz> jnthn: your name is in today's slot of the advent calendar schedule -- do you think you'll manage to write a post today?

[16:26] <jnthn> moritz: eek, I forgot it was today...my brain thought tomorrow somehow

[16:26] <jnthn> moritz: I can write something :)

[16:27] <jnthn> Thanks for the reminder!

[16:27] *** overrosy joined
[16:28] <moritz> jnthn: great, and you're welcome

[16:29] <moritz> nom: say DateTime.now

[16:29] <p6eval> nom c7b0aa: OUTPUT«DateTime.new(year => 2011, month => 12, day => 18, hour => 15, minute => 50, second => 0, timezone => $*TZ)␤»

[16:30] <moritz> good, today is the 18th :-)

[16:30] <jnthn> ;)

[16:30] <jnthn> Not quite sure what to write on.

[16:30] <jnthn> I guess I could do another meta-programming related post, but this time look at how we use it to build stuff inside Rakudo too.

[16:30] <jnthn> Dunno if that'd be interesting.

[16:31] <moritz> well, I'd find it interesting for sure :-)

[16:31] <jnthn> Guess I could pick a non-trivial but non-mind-blowing missing feature and walk through how it's added.

[16:31] *** overrosy left
[16:31] <jnthn> Maybe making "method foo() { ... }" in a role act as a requirement that the method is implemented in the target class, for example.

[16:32] <colomon> +1

[16:32] <colomon> not for that particular feature necessarily, but that's a great general idea, IMO

[16:32] <jnthn> Well, it's a feature I can (a) think of and (b) is easy to explain, and about the right level of difficulty for such a post.

[16:33] <colomon> sure, I was just clarifying my +1.  :)

[16:33] *** overrosy joined
[16:33] <colomon> you were typing faster than me. 

[16:38] <jnthn> eek.

[16:38] <jnthn> I tried to implement the Proxy class. It nearly worked apart from...

[16:39] <jnthn> ...the FETCH method tried to decontainerize the container to put it in self.

[16:39] <jnthn> Which of course recursively calls FETCH, which... :)

[16:39] <mikemol> Ok, finally got the EBook::EPUB module installed. Now to start writing a script to use it...

[16:40] <tadzik> creating a mobi of Using Perl 6 I just converted the HTML version, iirc

[16:41] <lichtkind> moritz: wid langsam zeit gell, gib mir noch 20 min das paste ich dir artikel

[16:42] <tadzik> slowly time passes, give me 20 minutes to paste my article?

[16:43] <lichtkind> very good

[16:43] <tadzik> is that more-less correct?

[16:43] <lichtkind> except the first words were : its about time

[16:44] <tadzik> instead of "slowly time passes"?

[16:44] <tadzik> I recognised only langsam and zeit

[16:44] <lichtkind> gell is not really german but a bavarian acknowledging sound

[16:44] <tadzik> I see

[16:45] <lichtkind> tadzik: it was a bit provoking because moritz is from an area that politically is bavaria, even most people there dont like that fact :)

[16:46] * jnthn usually hears "langsam" as an excuse for why his train will be late. "There's a langsam train in front of us!"

[16:46] <tadzik> :P

[16:46] <lichtkind> yes it goes for slow and slowly

[16:52] <moritz> lichtkind: you can paste the article for review whenever you want

[16:53] <moritz> lichtkind: and it's usually faster if you just do it, instead of asking if you should do or announcing that you will

[16:55] <lichtkind> moritz: i can sleep better if someone checked for errors

[16:58] *** MindosCheng joined
[16:59] *** whiteknight joined
[16:59] *** whiteknight is now known as Guest47633

[17:00] * moritz can better check for errors when he can actually read the article :-)

[17:04] <lichtkind> moritz: duh

[17:12] <tadzik> jnthn: hey, idea. Panda fails because JSON/Tiny.pir is not the right one, but it works fine with JSON/Tiny.pm used to build the .pir one. So can't we just fallback to .pm if .pir is too old?

[17:12] <tadzik> or not the right one

[17:14] <tadzik> oh, I think I see the problem

[17:15] <tadzik> it's about pirs compiled against pirs, not pm's ran against pirs, right?

[17:15] <jnthn> tadzik: yes

[17:16] <tadzik> so we'll have to recursively fallback to all the pms and bleh

[17:21] <lichtkind> hm the same pwd is meassured by phpBB medium and by wordpress strong

[17:22] <mikemol> lichtkind: Yeah, different password measurement algorithms are, well, different.

[17:22] <mikemol> I once got "very strong!" out of an algorithm with "~~~aaa222"

[17:22] *** mj41 joined
[17:24] <tadzik> there's this famous password in Poland, "dupa.8". Very secure, letters, numbers, special chars

[17:24] <tadzik> everyone uses it for everything he/she doesn't care about

[17:26] <tadzik> (dupa is a not-really-polite word for the bottom)

[17:26] <lichtkind> moritz: i saved a draft , can you see it?

[17:26] <lichtkind> moritz: i will change start and ending a bit

[17:27] *** Guest47633 left
[17:28] <flussence> if there's one thing I absolutely can't stand, it's websites with length limits on the password field. The only worse thing I've seen is one that had a limit on it only on the login page

[17:41] <flussence> .oO( I just did `perl $some_script.sh` by accident and it ran it in a shell anyway... looks like someone's made that mistake before :)

[17:42] *** jlaire left
[17:42] <tadzik> heh

[17:42] <moritz> flussence: perl looks at the shebang line, and is happy to step aside for the shell mentioned in there

[17:46] *** jlaire joined
[17:47] *** cognominal joined
[18:27] *** risou is now known as risou_awy

[18:30] *** jlaire left
[18:30] *** localhost left
[18:32] *** localhost joined
[18:32] <dalek> nqp: cde2f95 | jnthn++ | src/6model/reprs/CArray.c:

[18:32] <dalek> nqp: Fix various thinkos in CArray.

[18:32] <dalek> nqp: review: https://github.com/perl6/nqp/commit/cde2f958e4

[18:34] *** jlaire joined
[18:38] <dalek> zavolaj: 9ae5ba5 | jnthn++ | lib/NativeCall.pm6:

[18:38] <dalek> zavolaj: Support creating and passing arrays to C also.

[18:38] <dalek> zavolaj: review: https://github.com/jnthn/zavolaj/commit/9ae5ba5b25

[18:38] <dalek> rakudo/nom: d377bbe | jnthn++ | src/binder/container.c:

[18:38] <dalek> rakudo/nom: Correct handling of container FETCHes from things other than the Perl 6 Scalar type.

[18:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/d377bbe3b1

[18:38] <dalek> rakudo/nom: 3fc1613 | jnthn++ | src/binder/container.c:

[18:38] <dalek> rakudo/nom: Fix handling of STORE for contaienrs other than Scalar.

[18:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3fc1613f33

[18:38] <dalek> rakudo/nom: 4e608ce | jnthn++ | src/Perl6/Metamodel/BOOTSTRAP.pm:

[18:38] <dalek> rakudo/nom: First cut implementation of Proxy.

[18:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4e608ce99e

[18:38] <dalek> rakudo/nom: ac2b24c | jnthn++ | src/Perl6/Actions.pm:

[18:38] <dalek> rakudo/nom: Relax type parameterization a bit.

[18:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ac2b24c2be

[18:38] <dalek> rakudo/nom: 2ea566d | jnthn++ | tools/build/NQP_REVISION:

[18:38] <dalek> rakudo/nom: Bump to latest NQP revision for some fixes.

[18:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2ea566d1c1

[18:38] <tadzik> fun

[18:39] <mikemol> Well, after all of 20 minutes tinkering in between other things, I've got all the specs as epubs. Need to write a slightly better script so that I better metadata in there, but this is a nice milestone.

[18:39] <noidea> Just wondering, whic his the prefered perl6 interpreter?

[18:39] <noidea> which*

[18:39] <mikemol> I'm using McNamer's pod2epub application. Most of the rigamarole was around getting prereqs on my system.

[18:40] <mikemol> *McNamaera

[18:40] <mikemol> bah

[18:40] <tadzik> noidea: I'd recommend Rakudo

[18:40] <noidea> tadzik: thank you

[18:40] <tadzik> niecza has some nice things that rakudo doesn't, though. Threading, CLR interop; it's also faster

[18:41] <tadzik> Rakudo runs on Parrot and Niecza runs on Mono/.NET

[18:41] <noidea> Then why do you suggest Rakudo?

[18:41] <noidea> Oh.. .NET

[18:41] <tadzik> it has more modules available

[18:41] <tadzik> what are you planning to do?

[18:41] <tadzik> (with Perl 6)

[18:42] <noidea> Well, I'm running an Ubuntu machine, so I'd prefer to stay away from .NET

[18:42] <noidea> Just pess with perl6 a bit. I tried perl5 a while ago and found it obnoxious

[18:42] <mikemol> noidea: Ubuntu has mono packages. No idea how current they are, though.

[18:42] <noidea> mess*

[18:42] <tadzik> I think on Ubuntu you may already have some stuff... what mikemol said

[18:42] * noidea hass very laggy internet atm

[18:44] * mikemol muses that someone should implement NQP in JavaScript.

[18:45] *** ab5tract left
[18:45] <tadzik> well volunteered! :P

[18:45] <mikemol> If I knew JS well enough, I'd consider it.

[18:45] <mikemol> Let me get my C++ version out the door, first, and then I'll consider learning JS for the purpose. :)

[18:48] *** mj41 left
[18:57] *** raiph left
[18:58] *** ab5tract joined
[19:09] *** raiph joined
[19:09] <sorear> good * #perl6

[19:10] <raiph> o/ sorear

[19:11] <sorear> o/ raiph 

[19:12] <sorear> noidea: don't get the idea that Niecza is strictly superior - it's not, in a lot of ways

[19:14] <raiph> aiui, nqp is aimed purely at bootstrapping a full p6; is a strict, small, subset of p6; is intended to remain just that; and only current impl has a pir backend. 

[19:15] <raiph> or could it become a lightweight p6, useful for duties other than bootstrapping, say as a training language?

[19:16] <raiph> noidea: could you summarize what you found obnoxious about perl5? 

[19:18] <sorear> raiph: nqp is a small, bootstrappable language which is used to implement Rakudo

[19:19] <sorear> raiph: the three phases of Rakudo, alpha, ng, and nom, each have a corresponding nqp

[19:19] <sorear> the ng nqp, commonly called nqp-rx, was used for a while as Parrot's standard mid-level language, but that role is falling to winxed

[19:20] <raiph> sorear: thx.

[19:21] <raiph> i'm confused by "bootstrappable"; i was thinking "for bootstrapping". or is that the same?

[19:22] <noidea> raiph: Well, I've come from a pascal java python backround (just a bit of each language, not getting too indepth) but not being able to set parameters in the definition of a function, and having to use a horrible sigil hack-ish way to get a an array out of a hash (like getting array @a = @hash['arr'];, except it was dirty)

[19:23] <noidea> And I was wondering about whats been backported to perl5, from perl6. like setting parameters (sub a($x, $y) {}) in a function

[19:24] <sorear> raiph: nqp is implemented in nqp

[19:24] <noidea> I didnt spend too much time with perl5 though. I just couldn't deal with it at the time (a little less than a year ago)

[19:31] <raiph> sorear: ah. thx. 

[19:32] *** spine joined
[19:37] <raiph> noidea: i only used perl professionally in the 90s.

[19:38] <raiph> noidea: even then i found p5 argument/parameter stuff was almost shockingly minimalist.

[19:38] *** GlitchMr left
[19:39] <noidea> how is it minimalist if you have to shift; multiple times to get your arguments?

[19:39] <sorear> noidea: minimalist means that the programmer has to to more work because the language is minimal

[19:40] <noidea> mmm. I see

[19:41] *** Lothar left
[19:42] <raiph> P6 is not at all minimalist. some argue that it's gone far (much too far) in the other direction.

[19:43] <noidea> I feel like it might be the right direction - looking at some of the code examples

[19:44] <noidea> Im not all for a batteries included style, but it certainly does help when you dont have to do everything yourself

[19:44] <noidea> I'm sure theres a module in CPAN for the parameter 'annoyance' i had

[19:45] <raiph> noidea: i think the damian did a P6 arg passing module

[19:45] <noidea> I thought perl6 had it built in

[19:45] <noidea> I think i ought to do some more reading

[19:48] * lichtkind isntall panda

[19:49] *** ksi joined
[19:50] <raiph> noidea: yes, P6 has it built in. indeed, beautifully done, imo. what i meant was that there are a bunch of P5 modules that give to p5 some of what P6 has to offer, and one example is...

[19:50] *** am0c left
[19:52] <noidea> raiph: ahh thats what I've been looking for. Its brilliant to be able to change the core with 3rd party modules

[19:53] <raiph> hmm. not sure about this. http://search.cpan.org/~brentdax/Perl6-Parameters-0.03/Parameters.pm

[19:53] <raiph> didn't find what i thought existed. that one is by brent dax and dated 2002.

[19:54] <sorear> I think what you are looking for is http://search.cpan.org/~ilmari/MooseX-Method-Signatures-0.37/lib/MooseX/Method/Signatures.pm

[19:55] <sorear> 2011, rafl

[19:55] <raiph> sorear: i should have realized it was moosish 

[19:55] <sorear> moose was created by a bunch of pugs hackers who wanted to use the p6 object model in the real world

[19:56] <lichtkind> panda: Incorrect pre-compiled version of lib/JSON/Tiny/Actions.pm loaded

[19:56] <sorear> although moose and p6 have diverged :|

[19:57] <raiph> sorear: oh. is that the 6model stuff?

[19:58] <sorear> no, this was way before 6model

[20:00] *** pkkm left
[20:02] <raiph> sorear: oh. but can't be worse than what was before. (all roll your own oo). at least now there's a unification of sorts.

[20:02] <raiph> sorear: not between p5 and p6, but just within p5.

[20:03] <raiph> then, grossly simplifying, if you don't think too much, p5 oo is like, say, ruby oo, as far as p6 is concerned.

[20:04] <raiph> or am waving my hands too much?

[20:09] <moritz> yes :-)

[20:09] * moritz -> sleep

[20:09] <raiph> moritz: \\o//

[20:12] *** Lothar joined
[20:12] <raiph> sorear: i can interpret exchange about oo two radically different ways

[20:12] *** pkkm joined
[20:13] <raiph> sorear: are u saying moose and P6 diverged significantly before 6model?

[20:16] <sorear> raiph: yes

[20:16] <raiph> sorear: thx. 

[20:19] <raiph> aiui 6model is, simplifying a lot, just another take on the original parrot goal of supporting any dynamic lang OO system

[20:19] <raiph> albeit with a renewed determination to be sufficient for P6 needs.  is that about right?

[20:21] <jnthn> 6model isn't about dynamic language OO systems specifically.

[20:22] <jnthn> It's designed so you could express a very static OO system in it also.

[20:22] <jnthn> And hit the various points inbetween (e.g. Gradual Typing)

[20:29] *** packetknife joined
[20:30] *** y3llow_ joined
[20:30] *** pothos_ joined
[20:30] <raiph> jnthn: thx. 

[20:32] *** y3llow left
[20:32] *** pothos left
[20:32] *** y3llow_ is now known as y3llow

[20:33] *** pothos_ left
[20:33] *** pothos joined
[20:36] *** pothos left
[20:36] *** pothos joined
[20:41] <tadzik> lichtkind: yeah, known :/

[20:41] <tadzik> I don't really know how to resolve this in a sensemaking way

[20:42] <tadzik> lichtkind: the workaround is find ~/.perl6/lib -name *.pir -delete

[20:42] <lichtkind> you will find a soluteion

[20:42] <lichtkind> solution

[20:42] <lichtkind> where is my brain

[20:43] <raiph> jnthn: is this the best overview of 6model? https://github.com/jnthn/6model/blob/master/overview.pod

[20:48] *** ksi left
[20:48] <jnthn> raiph: Seems to be still accurate.

[20:50] <raiph> jnthn: thx.

[21:01] <sorear> jnthn: when you get a chance, I would like your feedback on the rest of the DUBIOUS/DISCUSS items

[21:01] <sorear> (I understand this may be a while, perhaps even post-26th)

[21:03] <jnthn> sorear: Yeah, it probably will be. I already responded to the ones I had an immediate view on. :)

[21:04] *** ksi joined
[21:04] <sorear> jnthn: I thought you only responded to one of them

[21:04] <jnthn> sorear: I thought it was two... :)

[21:05] <sorear> ah, <~~0> was counted?

[21:06] <jnthn> sorear: Well, I guess I can only count that as "partially responded" :)

[21:07] <jnthn> sorear: As in, the case where the thing has captures within it I'm still not too sure on.

[21:11] *** Trashlord left
[21:12] <lichtkind> jnthn: it still needs some final touch http://perlpunks.de/paste/show/4eee570f.168a.d2

[21:12] <lichtkind> but i think its much better now

[21:12] <lichtkind> its in the wordpress do what you want with it

[21:12] *** Trashlord joined
[21:25] <lichtkind> dalek: tell moritz: i will look tomorrow at the text again but i see it as finished

[21:26] <lichtkind> dalek: tell @moritz i will look tomorrow at the text again but i see it as finished

[21:27] <lichtkind> phenny, tell moritz i will look tomorrow at the text again but i see it as finished

[21:27] <phenny> lichtkind: I'll pass that on when moritz is around.

[21:27] <lichtkind> phenny: thanks

[21:44] *** Moukeddar joined
[21:47] *** pkkm left
[21:51] <colomon> errr... where are we on today's Advent post?

[21:51] <jnthn> colomon: Almost written.

[21:51] <colomon> \o/

[21:51] <jnthn> (Working on it. :))

[21:51] <colomon> I was afraid you'd gone to bed.  :)

[21:52] <jnthn> No, no. It's not even 11pm here yet!

[21:52] <jnthn> Bed is like, 2am or something. :P

[21:55] *** Moukeddar left
[21:55] <colomon> what can I say, I'm an old man.  :)

[21:56] <spine> perl6: say ("ab" ~~ / (.*) b /).Bool;

[21:56] <p6eval> niecza v12-66-g5abbd8a: OUTPUT«Bool::True␤»

[21:56] <p6eval> ..pugs b927740: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20111008/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HAND…

[21:56] <p6eval> ..rakudo 2ea566: OUTPUT«Bool::False␤»

[21:56] <spine> is that expected behaviour or some unimplemented backtracking code in rakudo?

[21:57] *** mj41 joined
[21:57] <colomon> errr.... is what the expected behavior?

[21:57] <jnthn> It's the by now infamous Rakudo backtracking bug.

[21:58] <spine> colomon: say ("ab" ~~ / (.*) b /).Bool; prints OUTPUT«Bool::False

[21:59] <spine> jnthn: ok, thanks. I never know if there is some new feature or if I am hitting bugs :)

[21:59] <spine> same regex without capturing group works

[22:03] *** IngisKahn joined
[22:25] *** molaf joined
[22:31] <dalek> rakudo/nom: 539843e | jnthn++ | src/ (2 files):

[22:31] <dalek> rakudo/nom: Add a .yada property to routines, so we can spot those that are just .../???/!!!.

[22:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/539843e408

[22:31] <dalek> rakudo/nom: 0ac04a7 | jnthn++ | src/Perl6/ (2 files):

[22:31] <dalek> rakudo/nom: Set the yada flag as needed.

[22:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0ac04a71c4

[22:31] <dalek> rakudo/nom: 2bc97f6 | jnthn++ | src/Perl6/Metamodel/ (3 files):

[22:31] <dalek> rakudo/nom: Make a method foo() { ... } in a role serve as a requirement that the method is implemented, rather than an actual method that we compose in. The implementation could come from the class, a parent class or another role.

[22:31] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2bc97f6c88

[22:34] *** molaf left
[22:36] *** broquain1 is now known as broquaint

[22:43] * jnthn proof-reads the advent post

[22:47] <tadzik> I wonder what funny C library binding I can now write, having struct introspection and arrays

[22:49] <jnthn> http://perl6advent.wordpress.com/2011/12/18/the-view-from-the-inside-using-meta-programming-to-implement-rakudo/

[22:50] <tadzik> awsum!

[22:50] <jnthn> tadzik: The structs and arrays are a tad limited at the moment, fwiw. But already you can probably do things that weren't possible before :)

[22:50] <tadzik> how limited?

[22:51] <jnthn> tadzik: Just on the type of things they can contain.

[22:51] <jnthn> tadzik: e.g. at the moment it's only doubles and ints. I'll have it handling various sizes of integer pretty soon. After that because arrays of strings, pointers to structs and just opaque pointers.

[22:52] <tadzik> alrighty

[22:57] *** snarkyboojum left
[22:58] *** snarkyboojum joined
[22:59] *** simcop2387 left
[22:59] *** ksi left
[23:00] *** PacoLinux left
[23:01] *** simcop2387 joined
[23:02] <jnthn> so, that beer I wanted...

[23:06] <lichtkind> jnthn: thank you

[23:06] <lichtkind> hope you liek it

[23:06] <lichtkind> im off

[23:12] <jnthn> night, lichtkind 

[23:12] <lichtkind> jnthn: found any quirks?

[23:13] <lichtkind> good night all o/

[23:15] <jnthn> lichtkind: Thatswhy => That's why

[23:15] <lichtkind> yes but the one spelling proram i have allowed me that :)

[23:15] <lichtkind> i mostly ment content quirks

[23:17] <jnthn> (:@good, :@bad) := |classify { good_music($_) ?? 'good' !! 'bad' }, %song.values;

[23:17] <jnthn> does that actually work? :)

[23:17] <lichtkind> jnthn: i taken it out of synopses

[23:17] <jnthn> OK :)

[23:17] <lichtkind> i tested binding

[23:17] <jnthn> Then it probably should :)

[23:18] <lichtkind> yeah better i test it

[23:19] <jnthn> OK, I'm gone for the night. o/

[23:20] <lichtkind> sleep well

[23:23] <lichtkind> phenny, tell jnthn no it doesnt work now: Cannot use bind operator with this LHS at line 44, near " |classify"

[23:23] <phenny> lichtkind: I'll pass that on when jnthn is around.

[23:26] <mj41> nom: my $b = "b"; say qq/a {$b} $b c/;

[23:26] <p6eval> nom 2bc97f: OUTPUT«a b b c␤»

[23:26] <mj41> nom: my $b = "b"; say Q:c/a {$b} c/;

[23:26] <p6eval> nom 2bc97f: OUTPUT«===SORRY!===␤Colons may not be used to delimit quoting constructs at line 1, near ":c/a {$b} "␤»

[23:28] <mj41> trying to prototype simple templating system based on Q:c ... but Q:c not supported yet :-)

[23:29] *** simcop2387 left
[23:31] * mikemol cackles

[23:31] *** simcop2387 joined
[23:31] <mikemol> With the exception of some unicode weirdness, I have a script which pulls title and authorship metadata from the p6 spec pods and then launches pod2epub.

[23:36] *** lichtkind left
[23:39] *** simcop2387 left
[23:41] *** snearch joined
[23:41] *** simcop2387 joined
[23:50] <djanatyn> o/

[23:50] <sorear> Hello!

[23:50] <djanatyn> Hey.

