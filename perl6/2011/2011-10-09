[00:00] *** cognominal___ joined
[00:03] *** cognominal_ left
[00:06] *** localhost left
[00:20] *** cognominal___ left
[00:20] *** cognominal___ joined
[00:24] *** whiteknight left
[00:27] *** wolfman2000 joined
[00:38] *** daniel-s joined
[00:57] *** am0c left
[01:23] *** woosley joined
[01:28] <soh_cah_toa_> perl6: caller

[01:28] <p6eval> rakudo 9928ec: OUTPUT«Could not find sub &caller␤  in block <anon> at /tmp/2_4Pub7LWL:1␤  in <anon> at /tmp/2_4Pub7LWL:1␤»

[01:28] <p6eval> ..pugs, niecza v10-40-ga57ed3d:  ( no output )

[01:28] <soh_cah_toa_> perl6: say caller

[01:28] <p6eval> niecza v10-40-ga57ed3d: OUTPUT«CallFrame.new(...)␤»

[01:28] <p6eval> ..rakudo 9928ec: OUTPUT«Could not find sub &caller␤  in block <anon> at /tmp/QUpLX1y6Jc:1␤  in <anon> at /tmp/QUpLX1y6Jc:1␤»

[01:28] <p6eval> ..pugs: OUTPUT«␤»

[01:29] <soh_cah_toa_> perl6: say caller.package

[01:29] <p6eval> pugs: OUTPUT«*** No such method in class Scalar: "&package"␤    at /tmp/cK3nizSsNa line 1, column 5 - line 2, column 1␤»

[01:29] <p6eval> ..rakudo 9928ec: OUTPUT«Could not find sub &caller␤  in block <anon> at /tmp/kMCAKqiJdn:1␤  in <anon> at /tmp/kMCAKqiJdn:1␤»

[01:29] <p6eval> ..niecza v10-40-ga57ed3d: OUTPUT«␤Unhandled Exception: Unable to resolve method package in class CallFrame␤  at /tmp/uf7F_5wqqf line 1 (MAIN mainline @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 2133 (CORE C1024_ANON @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 2134 (CORE …

[01:29] <soh_cah_toa_> perl6: say caller().package

[01:29] <p6eval> pugs: OUTPUT«*** No such method in class Scalar: "&package"␤    at /tmp/LCnYauYaut line 1, column 5 - line 2, column 1␤»

[01:29] <p6eval> ..rakudo 9928ec: OUTPUT«Could not find sub &caller␤  in block <anon> at /tmp/oX5tpMpIHL:1␤  in <anon> at /tmp/oX5tpMpIHL:1␤»

[01:29] <p6eval> ..niecza v10-40-ga57ed3d: OUTPUT«␤Unhandled Exception: Unable to resolve method package in class CallFrame␤  at /tmp/g113biodC6 line 1 (MAIN mainline @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 2133 (CORE C1024_ANON @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 2134 (CORE …

[01:29] <soh_cah_toa_> :(

[01:32] <TimToady> perl6: sub foo { say callframe(1).^methods }; foo

[01:32] <p6eval> niecza v10-40-ga57ed3d: OUTPUT«␤Unhandled Exception: Excess arguments to CORE callframe, used 0 of 1 positionals␤  at /home/p6eval/niecza/lib/CORE.setting line 0 (CORE callframe @ 0) ␤  at /tmp/Tx9kIBttfX line 1 (MAIN foo @ 3) ␤  at /tmp/Tx9kIBttfX line 1 (MAIN mainline @ 1) ␤  at /home…

[01:32] <p6eval> ..pugs: OUTPUT«*** No such subroutine: "&callframe"␤    at /tmp/eoMojlcufM line 1, column 15-37␤»

[01:32] <p6eval> ..rakudo 9928ec: OUTPUT«new line file callframe level annotations my eager elems end classify infinite flat hash list pick roll reverse sort values keys kv pairs Array grep first join map min max minmax postcircumfix:<[ ]> at_pos all any one none postcircumfix:<{ }> reduce ACCEPTS WHERE W…

[01:54] *** kfo joined
[01:57] *** kfo_ left
[02:25] *** tokuhiro_ joined
[02:26] *** alvis left
[02:37] *** JimmyZ joined
[02:38] *** alvis joined
[02:48] *** sftp left
[02:53] *** S11001001 joined
[02:59] <diakopter> perl6: class A { method WHAT { say 5 } }; say A.new.WHAT

[02:59] <p6eval> rakudo 9928ec, niecza v10-40-ga57ed3d: OUTPUT«A()␤»

[02:59] <p6eval> ..pugs: OUTPUT«5␤1␤»

[03:11] <JimmyZ> nom: say callframe.^methods

[03:11] <p6eval> nom 9928ec: OUTPUT«new line file callframe level annotations my eager elems end classify infinite flat hash list pick roll reverse sort values keys kv pairs Array grep first join map min max minmax postcircumfix:<[ ]> at_pos all any one none postcircumfix:<{ }> reduce ACCEPTS WHERE WHIC…

[03:11] <benabik> nom: $_ = 'us1'; $_++; .say

[03:11] <p6eval> nom 9928ec: OUTPUT«us2␤»

[03:12] <benabik> nom: $_ = 1; .++; .say # does this work?

[03:12] <p6eval> nom 9928ec: OUTPUT«===SORRY!===␤Method 'unshift' not found for invocant of class 'Undef'␤»

[03:12] <benabik> Nope!

[03:16] <sorear> niecza: $_ = 1; .++; .say;

[03:16] <p6eval> niecza v10-40-ga57ed3d: OUTPUT«2␤»

[03:16] <benabik> niecza++

[03:17] <JimmyZ> it's a niecza bug, methinks

[03:24] <benabik> JimmyZ: .++ is supposed to work, IIRC

[03:24] <TimToady> as long as $_ is rw, yes

[03:25] <JimmyZ> and so .>>.++ ?

[03:26] <TimToady> niecza: $_ = [1,2,3]; .».++; .say

[03:26] <p6eval> niecza v10-40-ga57ed3d: OUTPUT«===SORRY!===␤␤Bogus statement at /tmp/nH5CpHfzGq line 1:␤------> $_ = [1,2,3]; ⏏.».++; .say␤␤Parse failed␤␤»

[03:27] <TimToady> niecza: $_ = [1,2,3]; .»++; .say

[03:27] <p6eval> niecza v10-40-ga57ed3d: OUTPUT«===SORRY!===␤␤Bogus statement at /tmp/lNprqxNIrr line 1:␤------> $_ = [1,2,3]; ⏏.»++; .say␤␤Parse failed␤␤»

[03:27] <TimToady> niecza: $_ = [1,2,3]; $_»++; .say

[03:27] <p6eval> niecza v10-40-ga57ed3d: OUTPUT«2 3 4␤»

[03:27] *** Limbic_Region left
[03:27] <TimToady> niecza: $_ = [1,2,3]; $_.»++; .say

[03:27] <p6eval> niecza v10-40-ga57ed3d: OUTPUT«2 3 4␤»

[03:27] <TimToady> interesting

[03:28] <TimToady> std: $_ = [1,2,3]; .»++; .say

[03:28] <p6eval> std 20ae3bd: OUTPUT«===SORRY!===␤Bogus statement at /tmp/7d6UtTom71 line 1:␤------> $_ = [1,2,3]; ⏏.»++; .say␤Parse failed␤FAILED 00:01 123m␤»

[03:28] <TimToady> hmm, looks like it's my fault

[03:29] <diakopter> TimToady: while you're here, why can't 'say' be the name of a label?

[03:30] <diakopter> std: say: say 4; goto say

[03:30] <p6eval> std 20ae3bd: OUTPUT«===SORRY!===␤Unsupported use of bare 'say'; in Perl 6 please use .say if you meant $_, or use an explicit invocant or argument at /tmp/NAFqK3S6MN line 1:␤------> say: say⏏ 4; goto say␤Two terms in a row at /tmp/NAFqK3S6MN line 1:␤…

[03:30] <diakopter> sorry if you've already answered that

[03:30] <TimToady> the p5ism checker assumes you're smart enough not to do that :)

[03:31] <diakopter> ah

[03:33] *** kst left
[03:33] *** kst joined
[03:35] <sorear> diakopter: even without the p5ism check, that would result in "Cannot invoke a Label" or something to that effect because you've hidden CORE::say

[03:36] <diakopter> oooooh

[03:37] <TimToady> I think I have a fix for the goto say part

[03:38] <sorear> I'm going to fix it by removing the big list from STD.pm6 and making it rely on a trait instead

[03:38] <sorear> so it doesn't leak onto say overrides

[03:40] <dalek> std: 580b69a | larry++ | STD.pm6:

[03:40] <dalek> std: don't complain about p5isms shadowed by terms

[03:40] <dalek> std: review: https://github.com/perl6/std/commit/580b69acc1

[03:48] <dalek> niecza/serialize: d832c02 | sorear++ | lib/Serialize.cs:

[03:48] <dalek> niecza/serialize: Second draft of serialization code

[03:48] <dalek> niecza/serialize: review: https://github.com/sorear/niecza/commit/d832c02cc0

[03:59] *** static_perl joined
[04:01] *** wooden joined
[04:01] *** wooden left
[04:01] *** wooden joined
[04:02] *** tokuhiro_ left
[04:03] *** S11001001 left
[04:12] *** cognominal___ left
[04:13] *** gfldex left
[04:13] *** cognominal joined
[04:15] *** gfldex joined
[04:22] *** soh_cah_toa_ left
[04:25] <TimToady> std: say: goto say;

[04:25] <p6eval> std 20ae3bd: OUTPUT«===SORRY!===␤Unsupported use of bare 'say'; in Perl 6 please use .say if you meant $_, or use an explicit invocant or argument at /tmp/8gN05StDF6 line 1:␤------> say: goto say⏏;␤Check failed␤FAILED 00:01 119m␤»

[04:26] <sorear> std updates every 2 hours

[04:26] <sorear> evalbot rebuild std

[04:26] <p6eval> OK (started asynchronously)

[04:28] <TimToady> btw, niecza worked very well for my quiz editor today; only blew up once when I typed a letter where it was expected a number

[04:29] <TimToady> that was using my faked up bash-c command, and a monkey-patched .fmt

[04:30] <TimToady> std: say: goto say;

[04:30] <p6eval> std 580b69a: OUTPUT«ok 00:01 119m␤»

[04:30] *** envi joined
[04:30] <TimToady> std: subset say of Str; say;

[04:31] <p6eval> std 580b69a: OUTPUT«ok 00:01 118m␤»

[04:35] <sorear> TimToady: awesome

[04:36] <dalek> niecza/serialize: b25256f | sorear++ | / (2 files):

[04:36] <dalek> niecza/serialize: Add Serialize.cs to build, fix build errors

[04:36] <dalek> niecza/serialize: review: https://github.com/sorear/niecza/commit/b25256fde4

[04:38] *** Chillance left
[04:46] *** JimmyZ_ joined
[04:47] *** araujo left
[04:48] *** JimmyZ_ left
[04:49] *** JimmyZ left
[05:18] *** kst left
[05:19] *** kst joined
[05:38] *** mberends joined
[05:53] <sorear> o/ mberends

[05:54] <mberends> o/ sorear. I'm thinking of reading the result of your commits in the Niecza/serialize branch

[05:56] *** static_perl left
[05:58] <sorear> mberends: I'd like to talk about 6model/C.  What are your goals for te project?

[06:03] <mberends> sorear: ok. 6model/C is purely experimental, so firstly that producing a complete Perl 6 implementation is not a main goal. I would rather see it applying Occam's razor to 6model and seeing what minimalism can deliver.

[06:04] <sorear> a minimalistic C[89]9 NQP?

[06:05] <mberends> yes, that sums it up nicely

[06:06] *** alvis left
[06:06] <mberends> from a bootstrapping perspective, the aim is to have minimal toolchain dependencies, and so far only GCC or MSC are required. I'm willing to work hard to keep it that way.

[06:15] <mberends> It will differ from NQP by not being designed primarily to bootstrap a bigger Perl 6 on  top of itself. Instead it will be designed to be a compact Perl 6 subset. If features not essential to Perl 6 bootstrapping can be efficiently added, they will be. For example, NCI/FFI.

[06:16] <mberends> ^^ all this subject to it ever working at all :P

[06:20] *** alvis joined
[06:33] *** Trashlord joined
[06:38] <dalek> niecza/serialize: 1993029 | sorear++ | lib/ (6 files):

[06:38] <dalek> niecza/serialize: Start implementing serialization for our objects

[06:38] <dalek> niecza/serialize: review: https://github.com/sorear/niecza/commit/1993029d00

[06:39] * sorear sleep

[06:43] *** jlaire left
[06:55] <moritz> good morning

[06:59] *** agentzh joined
[07:01] *** kst left
[07:02] *** kst joined
[07:11] <moritz> niecza: say so try { die "foo" }

[07:11] <p6eval> niecza v10-40-ga57ed3d: OUTPUT«Bool::False␤»

[07:12] <moritz> niecza: say WHAT try { die "foo" }

[07:12] <p6eval> niecza v10-40-ga57ed3d: OUTPUT«Any()␤»

[07:12] *** sayu joined
[07:13] *** PacoLinux left
[07:28] <moritz> rakudo: say (try  { die "foo" }).WHAT

[07:29] <p6eval> rakudo 9928ec: OUTPUT«Exception()␤»

[07:29] <moritz> rakudo: say (try  { die "foo" }).so

[07:29] <p6eval> rakudo 9928ec: OUTPUT«Bool::True␤»

[07:29] <moritz> rakudo: say (try  { die "foo" }).defined

[07:29] <p6eval> rakudo 9928ec: OUTPUT«Bool::True␤»

[07:34] *** kst left
[07:35] *** kst joined
[07:58] *** woosley left
[08:01] *** ella_ joined
[08:03] <ella_> rainning inthe philippines.. dared to chat...

[08:09] *** ella_ left
[08:11] *** kst left
[08:11] *** kst joined
[08:39] *** GlitchMr joined
[08:40] <moritz> I'm going to update roast and rakudo to the proper eval() semantics of not catching exctpions

[08:40] *** kst left
[08:40] <moritz> that's a huge fallout

[08:40] *** kst joined
[08:41] <moritz> and I hope that niecza profits from the roast change, because it's been doing it right for quite some time now :-)

[08:45] <moritz> so far I'm on 42 changed files in roast

[08:55] *** im2ee joined
[08:56] <im2ee> Hello! :)

[08:56] <moritz> hell im2ee 

[08:56] <moritz> *hello

[08:57] <moritz> sorry :-)

[08:57] *** mberends left
[08:57] *** cognominal_ joined
[09:00] *** cognominal___ joined
[09:01] *** cognominal left
[09:02] * moritz is stupid

[09:02] <moritz> I've been writing  nok try { eval 'string' }  all the time

[09:02] <moritz> and i haven't realized I can simply use   dies_ok { eval 'string' }

[09:02] *** mberends joined
[09:03] *** cognominal_ left
[09:04] <mberends> moritz: if the number of files was 42, you must have been doing something right ;)

[09:06] <moritz> mberends: now I'm at 51 :(

[09:06] <mberends> ++moritz

[09:13] *** kst left
[09:13] <moritz> how clean is niecza's 'make spectest' usually?

[09:13] *** kst joined
[09:15] *** mberends left
[09:18] *** PacoLinux joined
[09:28] <dalek> rakudo/nom: 005e43f | moritz++ | / (4 files):

[09:28] <dalek> rakudo/nom: Merge branch 'eval-throws' into nom

[09:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/005e43f40b

[09:28] <dalek> rakudo/nom: aa8f193 | moritz++ | t/spectest.data:

[09:28] <dalek> rakudo/nom: stop running S06-operator-overloading/imported-subs.t, its tests all skipped or bogusly passing

[09:28] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/aa8f193811

[09:30] <dalek> roast: 001e798 | moritz++ | / (54 files):

[09:30] <dalek> roast: &eval does not catch exceptions.

[09:30] <dalek> roast: 

[09:30] <dalek> roast: This has far reaching consequences for roast, and this

[09:30] <dalek> roast: patch only catches a subset of them.

[09:30] <dalek> roast: It also removes a few evals that were only there for error

[09:30] <dalek> roast: catching, and are now useless.

[09:30] <dalek> roast: Some fudging has also changed.

[09:30] <dalek> roast: review: https://github.com/perl6/roast/commit/001e798bcb

[09:30] <dalek> roast: 888689e | moritz++ | S06-signature/passing-arrays.t:

[09:30] <dalek> roast: small niecza fudging

[09:30] <dalek> roast: review: https://github.com/perl6/roast/commit/888689e936

[09:31] <moritz> e

[09:31] *** orafu left
[09:32] *** GlitchMr left
[09:33] *** orafu joined
[09:37] *** espadrine joined
[09:39] *** espadrine left
[09:39] *** kst left
[09:40] *** kst joined
[09:40] *** MayDaniel joined
[09:52] *** araujo joined
[09:53] *** espadrine joined
[09:53] *** jkeats joined
[09:53] <jkeats> eek, hello

[09:54] <jkeats> sorry for bothering #perl with perl6 questions

[09:56] *** espadrine left
[10:04] <moritz> hell jkeats -- no problem for us :-)

[10:06] <jkeats> so i'm building icu to have a look at rakudo, i think.

[10:08] *** kst left
[10:08] *** kst joined
[10:09] <jkeats> so what are the things i keep reading about in various perl5 packages about wanting to look like or be compatible with perl6?

[10:09] <jkeats> things like moose and perl5i

[10:10] <jkeats> is there an effort underway to make features from perl6 available or familiar to perl5 users?

[10:10] <jkeats> i ask mainly because i am largely unfamiliar and interested.

[10:14] *** SHODAN joined
[10:25] <moritz> jkeats: well, Moose started off as an effort to bring the Perl 6 runtime to perl 5

[10:25] <moritz> but it's not quite compatible

[10:25] <moritz> ie the efforts diverged a bit

[10:25] <jkeats> it seems that way

[10:25] <jkeats> that, ah, the antlers kind of got in the way :)

[10:26] <jkeats> it's an interesting way of writing perl

[10:26] *** Moukeddar joined
[10:26] <moritz> (will have more time for answering in ~20min)

[10:26] <Moukeddar> Hi guys

[10:26] <jkeats> i guess i need to start looking at some perl6 code to have a better idea of what i'm missing.

[10:27] *** alvis left
[10:27] *** wamba joined
[10:29] *** wamba left
[10:31] *** wamba joined
[10:32] <TiMBuS> jkeats, people here are fond of rosettacode examples of perl 6..

[10:33] <TiMBuS> rosettacode.org/wiki/Category:Perl_6

[10:33] <TiMBuS> the perl5 examples are always just above the 6

[10:33] <jkeats> (building rakudo star presently)

[10:34] <jkeats> ooh, lazy evaluation

[10:34] <jkeats> does that mean perl6 gets some haskell?

[10:35] <TiMBuS> it gets quite a bit

[10:35] <jkeats> huh, that's neat

[10:36] <jkeats> well i mean aside from pugs

[10:36] *** poiuy joined
[10:38] <jkeats> i am not seeing any network examples

[10:38] <TiMBuS> you could always make some :D

[10:38] *** kst left
[10:39] *** poiuy left
[10:40] <TiMBuS> but uh, some dude made an irc bot framework: https://github.com/TiMBuS/Net--IRC

[10:40] <jkeats> huh, i need to look deeper

[10:40] <jkeats> heh

[10:41] <jkeats> wait, is that based on the iiiiiinfamous net::irc?

[10:41] <Moukeddar> some dude ? lol

[10:42] *** kst joined
[10:42] <jkeats> aw man, my build failed

[10:42] <jkeats>   Reason: Incompatible library version: libreadline.6.2.dylib requires version 8.0.0 or later, but libiconv.2.dylib provides version 7.0.0

[10:42] <jkeats> thats awful irritating

[10:42] *** alvis joined
[10:43] <jkeats> oh good grief and the sun is coming up.

[10:43] <jkeats> i am going to get some sleep.

[10:43] <jkeats> TiMBuS: thank you, i will have a look at that.

[10:43] <TiMBuS> jkeats, no problem

[10:43] *** Moukeddar left
[10:44] <TiMBuS> and if its any consolation, its based on Net::IRC::Pluggable, except less broken

[10:44] <jkeats> heh

[10:44] * jkeats is a hardcore adherent to poe::component::irc

[10:44] <TiMBuS> its a good example of how stupidly good perl6 is for event based programming

[10:44] <TiMBuS> due to its object dispatch

[10:44] <jkeats> but, ginght/gmorning/etc and thanks again

[10:44] <jkeats> oooh

[10:45] <TiMBuS> righto

[10:45] * jkeats <3 event-based

[10:48] *** risou_awy is now known as risou

[10:48] <dalek> roast: df16235 | moritz++ | S (6 files):

[10:48] <dalek> roast: random rakudo unfudges

[10:48] <dalek> roast: review: https://github.com/perl6/roast/commit/df16235ef8

[10:49] *** MayDaniel left
[11:00] *** whiteknight joined
[11:13] *** kst left
[11:17] *** kst joined
[11:30] *** Trashlord left
[11:37] *** replore left
[11:37] *** Trashlord joined
[11:40] *** Patterner left
[11:40] *** replore_ joined
[11:42] *** Psyche^ joined
[11:42] *** Psyche^ is now known as Patterner

[11:43] *** sftp joined
[11:53] *** kst left
[11:54] *** kst joined
[11:55] *** Trashlord left
[12:01] *** sayu left
[12:01] *** SHODAN left
[12:05] *** jedai joined
[12:12] *** Chillance joined
[12:15] *** sftp left
[12:15] *** sftp joined
[12:24] *** MayDaniel joined
[12:26] *** jlaire joined
[12:31] *** kst left
[12:33] *** kst joined
[12:45] *** espadrine joined
[12:46] *** gfldex left
[12:47] *** gfldex joined
[12:47] *** espadrine left
[12:51] *** espadrine joined
[12:52] *** volodin661 joined
[12:54] *** espadrine left
[12:56] *** MayDaniel left
[13:10] *** kst left
[13:12] *** kst joined
[13:12] * moritz wonders if SVG::Plot was as glacial on b as it feels on nom

[13:13] <moritz> nearly half a minute for executing the example from the synopsis (plotting two curves of 101 points each)

[13:34] *** kaare_ joined
[13:42] *** kst left
[13:43] *** nebuchadnezzar left
[13:44] *** kst joined
[14:05] *** ab5tract joined
[14:09] *** volodin661 left
[14:15] *** kst left
[14:15] *** satyavvd joined
[14:20] *** nebuchadnezzar joined
[14:22] *** skangas left
[14:23] *** satyavvd_ joined
[14:25] *** satyavvd left
[14:25] *** satyavvd_ is now known as satyavvd

[14:26] *** kst joined
[14:30] *** satyavvd left
[14:48] *** am0c joined
[14:52] *** kst left
[14:54] *** kst joined
[14:56] <sorear> moritz: there are always warnings, but I like to have it PASS most of the time.  It probably doesn't atm because my attention hasn't been focused on master, though.

[14:56] <sorear> good * #perl6

[14:57] *** ab5tract left
[14:59] <moritz> sorear: it was PASS after a tiny fudge from me (I think I had modified that test before=

[14:59] <moritz> s/=/)/

[14:59] <moritz> nom: eval '1 1'

[14:59] <p6eval> nom aa8f19: OUTPUT«===SORRY!===␤Confused at line 1, near "1 1"␤»

[15:05] *** whiteknight left
[15:09] *** ab5tract joined
[15:13] *** GlitchMr joined
[15:16] *** kst left
[15:18] *** nicte joined
[15:19] *** nicte left
[15:19] *** donri joined
[15:19] *** donri left
[15:19] *** donri joined
[15:20] *** kst joined
[15:22] <dalek> rakudo/nom: f6eb61d | Coke++ | t/spectest.data:

[15:22] <dalek> rakudo/nom: run fudged test.

[15:22] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/f6eb61d5d9

[15:23] <moritz> ah, that test probably passes since Match became Cool

[15:23] <dalek> roast: 8428300 | Coke++ | S03-metaops/cross.t:

[15:23] <dalek> roast: Remove incorrect RT reference ...

[15:23] <dalek> roast: 

[15:23] <dalek> roast: ... but I don't know the right reference, sorry.

[15:23] <dalek> roast: review: https://github.com/perl6/roast/commit/84283007cb

[15:24] * moritz doesn't know either atm

[15:31] *** S11001001 joined
[15:31] *** donri left
[15:35] *** ab5tract left
[15:35] *** donri joined
[15:35] *** rgrau joined
[15:38] <[Coke]> moritz: niecza's make spectest should be clean, unless someone *cough* changed the spec tests.

[15:39] <[Coke]> ... and now I'm caught up, mostly. Hi!

[15:40] *** Trashlord joined
[15:40] <moritz> [Coke]: that would be me, sorry :/

[15:41] <moritz> [Coke]: but I believe I fixed all of that today

[15:42] <[Coke]> moritz: ;)

[15:42] <[Coke]> it should be pretty easy going forward, now that it's mostly clean, I hope.

[15:42] <[Coke]> thanks.

[15:45] *** kst left
[15:47] *** ab5tract joined
[15:47] <[Coke]> nom: say [+]278,448,7,-63

[15:47] <p6eval> nom aa8f19: OUTPUT«670␤»

[15:48] <[Coke]> jnthn++

[15:48] <[Coke]> (trimming tickets off the /new/ end!)

[15:48] <[Coke]> who runs try.rakudo.org?

[15:49] <flussence> I think I currently get the blame for that :)

[15:49] <[Coke]> flussence: do you have a bugqueue?

[15:49] <flussence> the github project page has one, maybe I should put a link to it...

[15:50] <[Coke]> github url?

[15:50] <flussence> https://github.com/moritz/try.rakudo.org/issues

[15:52] <benabik> flussence: Unless you added it very quickly, it's already there.

[15:52] <flussence> probably already there :)

[15:53] <flussence> (I know there's a mention of #perl6 on the page...)

[15:53] <flussence> hm, I have an idea to fix that...

[15:53] *** kst joined
[15:55] <[Coke]> rakudo: say 1 ^^ 1

[15:55] <p6eval> rakudo aa8f19: OUTPUT«Nil␤»

[15:55] <[Coke]> rakudo: say (1 ^^ 1).WHAT

[15:55] <p6eval> rakudo aa8f19: OUTPUT«Nil␤»

[15:56] <benabik> rakudo: 0 ^^ !

[15:56] <benabik> rakudo: 0 ^^ 1

[15:56] <p6eval> rakudo aa8f19: OUTPUT«===SORRY!===␤Confused at line 1, near "0 ^^ !"␤»

[15:56] <p6eval> rakudo aa8f19:  ( no output )

[15:56] <benabik> rakudo: say 0 ^^ 1

[15:56] <p6eval> rakudo aa8f19: OUTPUT«1␤»

[15:57] <benabik> Nil is a little odd.  I would have expected Bool::False, but Nil is false, IIRC

[15:58] <[Coke]> the ticket says False. It's an update from Failure, though.

[15:58] <[Coke]> rakudo: my %h=('a'=>1,'b'=>2); my $h_ref=\%h; say $h_ref.{'a'}

[15:59] <p6eval> rakudo f6eb61: OUTPUT«exists_keyed_str() not implemented in class 'Mu'␤  in method at_key at src/gen/CORE.setting:3249␤  in method postcircumfix:<{ }> at src/gen/CORE.setting:1011␤  in block <anon> at /tmp/J7FOLR_f3K:1␤  in <anon> at /tmp/J7FOLR_f3K:1␤»

[15:59] <[Coke]> rakudo: say (\my %h)<a>

[15:59] <p6eval> rakudo f6eb61: OUTPUT«exists_keyed_str() not implemented in class 'Mu'␤  in method at_key at src/gen/CORE.setting:3249␤  in method postcircumfix:<{ }> at src/gen/CORE.setting:1011␤  in block <anon> at /tmp/5rDn0XQCzx:1␤  in <anon> at /tmp/5rDn0XQCzx:1␤»

[16:07] <flussence> uh oh

[16:07] <flussence> moritz: ping - feather3's ran out of inodes

[16:07] *** eiro left
[16:08] <[Coke]> rakudo: role A { my $!foo; }; role B { my $!foo; }; class C does A does B; say 'alive';

[16:08] <p6eval> rakudo f6eb61: OUTPUT«===SORRY!===␤Too late for semicolon form of $*PKGDECL definition at line 1, near "say 'alive"␤»

[16:08] <[Coke]> rakudo: role A { my $!foo; }; role B { my $!foo; }; class C does A does B

[16:08] <p6eval> rakudo f6eb61: OUTPUT«===SORRY!===␤Unable to parse $*PKGDECL definition at line 1, near ""␤»

[16:10] <[Coke]> phenny: ask masak to look at RT#77184

[16:10] <phenny> [Coke]: I'll pass that on when masak is around.

[16:11] <[Coke]> rakudo:  my @a //= (3); @a.perl.say;

[16:11] <p6eval> rakudo f6eb61: OUTPUT«maximum recursion depth exceeded␤Method 'dispatch:<.?>' not found for invocant of class 'Integer'␤current instr.: 'is-hidden' pc 817656 (src/gen/CORE.setting.pir:224638) (src/gen/CORE.setting:5921)␤»

[16:12] <[Coke]> rakudo:  my @a ||= (3); @a.perl.say;

[16:12] <p6eval> rakudo f6eb61: OUTPUT«Array.new(3)␤»

[16:13] <[Coke]> rakudo: { use v5; }

[16:13] <p6eval> rakudo f6eb61:  ( no output )

[16:17] *** kst left
[16:17] *** dual joined
[16:18] <[Coke]> rakudo: say (0 := 1)

[16:18] <p6eval> rakudo f6eb61: OUTPUT«===SORRY!===␤Cannot use bind operator with this LHS at line 1, near " 1)"␤»

[16:18] <[Coke]> rakudo: {}[-1]

[16:18] <p6eval> rakudo f6eb61:  ( no output )

[16:18] <moritz> flussence: fixing...

[16:18] <[Coke]> rakudo: {}[-1].say

[16:19] <p6eval> rakudo f6eb61: OUTPUT«Cannot use negative index -1 on Hash␤  in method postcircumfix:<[ ]> at src/gen/CORE.setting:975␤  in block <anon> at /tmp/vzYkcpC7CX:1␤  in <anon> at /tmp/vzYkcpC7CX:1␤»

[16:19] <flussence> I'm cleaning up bits of my user dir to get some back too

[16:19] <[Coke]> rakudo: {}[-1].WHAT.say

[16:19] <p6eval> rakudo f6eb61: OUTPUT«Failure()␤»

[16:19] <moritz> flussence: not necessary

[16:19] <flussence> oh, I see :)

[16:19] <[Coke]> ooh. Failure. I gets it.

[16:19] <moritz> flussence: lots of files in ~tene/.ccache/

[16:19] <moritz> which I'm deleting now

[16:20] <moritz> (same story happend on feather2 iirc)

[16:20] <moritz> deleting that takes some time...

[16:22] <[Coke]> rakudo: my $x = 'aaa'; print ++$x, ' : '; print -$x, ' : '; say ++$x;

[16:22] <p6eval> rakudo f6eb61: OUTPUT«aab : 0 : aac␤»

[16:23] *** agentzh left
[16:24] <[Coke]> nom: say [+]273,451,7,-67

[16:24] *** Mowah_ joined
[16:24] <p6eval> nom f6eb61: OUTPUT«664␤»

[16:25] <[Coke]> moritz: are you the "writes the needed tests" guy? 

[16:26] <moritz> [Coke]: when I have the tuits and motivation, yes

[16:26] <moritz> flussence: 365837 inodes free on feather3 :-)

[16:26] <flussence> [Coke]: reload the page on try.rakudo.org, tell me what you think :)

[16:26] <flussence> moritz++

[16:26] <[Coke]> I smell blog post, enticing people to write perl6 today.

[16:27] <[Coke]> flussence: is this in relation to the bug? I didn't even look at it, I just copied it over like a robot.

[16:28] <flussence> well, I'm gonna go ahead and claim it's fixed

[16:28] *** kst joined
[16:28] <[Coke]> flussence: ah, I see. Yah, works for me in chrome.

[16:29] <[Coke]> flussence: thanks for helping lower the bug count!

[16:29] <flussence> .oO( I thought "Chrome 5" looked a bit odd there :)

[16:29] <[Coke]> flussence++ #thanks for helping lower the bug count!

[16:29] <flussence> some days I make it higher :)

[16:33] <moritz> then you get a ++ too, for submitting the bugs in the first place

[16:36] *** Sarten-X left
[16:38] *** cognominal___ left
[16:39] *** cognominal joined
[16:39] *** alvis left
[16:49] *** S11001001 left
[16:54] *** alvis joined
[16:57] *** kst left
[16:58] *** kst joined
[17:00] *** Sarten-X joined
[17:10] <dalek> roast: dd094a9 | moritz++ | integration/weird-errors.t:

[17:10] <dalek> roast: test for RT #76996, and correct and unfudge some tests

[17:10] <dalek> roast: review: https://github.com/perl6/roast/commit/dd094a9807

[17:18] *** Sarten-X left
[17:31] *** kst left
[17:33] *** bluescreen10 joined
[17:34] *** kst joined
[17:36] *** icwiener joined
[17:41] *** sftp left
[17:42] *** sftp joined
[17:43] *** packetknife joined
[17:44] <dalek> niecza/serialize: eddfcbb | sorear++ | lib/ (4 files):

[17:44] <dalek> niecza/serialize: Remove old freeze/thaw system

[17:44] <dalek> niecza/serialize: review: https://github.com/sorear/niecza/commit/eddfcbbf2d

[17:44] <dalek> niecza/serialize: ab1ca5d | sorear++ | lib/Kernel.cs:

[17:44] <dalek> niecza/serialize: Remove superceded hints mechanism

[17:44] <dalek> niecza/serialize: review: https://github.com/sorear/niecza/commit/ab1ca5da64

[17:44] <dalek> niecza/serialize: c6ea422 | sorear++ | lib/ (3 files):

[17:44] <dalek> niecza/serialize: Move sub flags to the correct place

[17:44] <dalek> niecza/serialize: review: https://github.com/sorear/niecza/commit/c6ea4220e4

[17:51] *** envi left
[17:57] *** kst left
[17:58] *** kst joined
[18:10] *** molaf joined
[18:18] *** donri left
[18:20] *** kst left
[18:24] *** plobsing_ joined
[18:27] *** plobsing left
[18:28] <GlitchMr> rakudo: ::

[18:28] <p6eval> rakudo f6eb61: OUTPUT«===SORRY!===␤Cannot look up empty name␤»

[18:29] <GlitchMr> At least it makes more sense than PHP error...

[18:35] *** kst joined
[18:41] <sorear> nom: class A { if 1 { my $x = 5; method foo() { $x } } }; say A.foo

[18:41] <p6eval> nom f6eb61: OUTPUT«5␤»

[18:47] *** tokuhiro_ joined
[18:53] *** help_ left
[18:54] *** y3llow joined
[18:58] *** jferrero joined
[19:00] *** kst left
[19:02] <Tene> moritz: I have no idea why that happens; I haven't used feather in years, and I've never done anything with ccache

[19:04] <moritz> Tene: never mind, it's history

[19:04] <Tene> moritz: just letting you know that I definitely don't care. :)

[19:07] *** sftp left
[19:08] *** GlitchMr left
[19:10] *** kst joined
[19:15] *** sftp joined
[19:18] *** sftp left
[19:26] *** tokuhiro_ left
[19:28] *** risou is now known as risou_awy

[19:33] *** kst left
[19:38] *** pmurias joined
[19:42] *** PacoLinux left
[19:48] *** kst joined
[20:02] *** sftp joined
[20:09] *** sftp left
[20:12] *** kst left
[20:12] *** kst joined
[20:15] *** zby_home joined
[20:20] *** sftp joined
[20:30] *** kaare_ left
[20:31] *** Moukeddar joined
[20:35] *** Moukeddar left
[20:51] *** pnu left
[20:52] *** pnu joined
[20:57] *** pnu left
[20:57] *** pnu joined
[21:01] *** benabik left
[21:02] *** Mowah_ left
[21:04] *** kmwallio joined
[21:06] *** am0c left
[21:14] *** flussence_ joined
[21:15] *** flussence left
[21:15] *** flussence_ is now known as flussence

[21:18] *** whiteknight joined
[21:22] *** kst left
[21:23] *** dual left
[21:23] <im2ee> Good night! o/

[21:24] *** im2ee left
[21:29] *** daniel-s left
[21:30] *** donri joined
[21:44] *** Trashlord left
[21:45] *** Trashlord joined
[21:45] *** PacoLinux_ left
[21:45] *** pnu left
[21:46] *** ab5tract left
[21:47] *** mberends joined
[21:47] *** pnu joined
[21:57] *** twirp joined
[21:58] *** kmwallio left
[22:02] *** kst joined
[22:03] *** am0c joined
[22:09] *** Grrrr left
[22:09] <szabgab> As I was preparing the Perl Weekly I looked at http://planetsix.perl-foundation.org/ There were no news for 2 weeks now :(

[22:09] *** Grrrr joined
[22:11] *** donri left
[22:20] *** zby_home left
[22:21] *** twirp left
[22:27] *** alvis left
[22:28] *** pnu left
[22:30] *** pnu joined
[22:34] *** pmurias left
[22:35] <sorear> o/ szabgab

[22:37] *** kst left
[22:40] *** rgrau left
[22:41] *** jlaire left
[22:42] *** jlaire joined
[22:42] *** alvis joined
[23:05] *** wamba left
[23:09] *** am0c left
[23:19] *** molaf_ joined
[23:21] *** kst joined
[23:22] *** icwiener left
[23:22] *** molaf left
[23:34] *** Chillance left
[23:42] *** whiteknight left
[23:50] *** bluescreen10 left
[23:52] *** kst left
