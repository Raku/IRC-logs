[00:10] *** dayangkun joined
[00:36] *** aindilis joined
[00:45] *** tangent_ left
[01:10] <TimToady> I suspect the proper way to think about it is that .perl returns the representation of a (pre-contextualized) capture, which means it does need to represent the do/don't-interpolate-me flag somehow.

[01:12] *** jferrero left
[01:12] <TimToady> we might possibly allow @[2,3,4] as a representation of "I'm an array interpolate me", but that doesn't help with interpolating non-arrays

[01:13] <TimToady> maybe some other notation is in order, related to () vs \()

[01:14] <TimToady> but that would be confusing if ([]) forced interpolation

[01:15] <TimToady> so probably something with @

[01:15] <TimToady> std: @[]

[01:15] <p6eval> std a71faea: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Non-declarative sigil is missing its name at /tmp/uky9DxEM1p line 1:‚ê§------> [32m<BOL>[33m‚èè[31m@[][0m‚ê§Use of uninitialized value $first in string eq at STD.pm line 65062.‚ê§Use of uninitialized value $sigil in string eq at STD.pm line 65067.‚ê§Use

[01:15] <p6eval> ..of ‚Ä¶

[01:15] <TimToady> that's available

[01:15] <TimToady> std: @{}

[01:15] <p6eval> std a71faea: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Unsupported use of @{}; in Perl 6 please use @() at /tmp/PFfs_8LK2I line 1:‚ê§------> [32m@{}[33m‚èè[31m<EOL>[0m‚ê§Parse failed‚ê§FAILED 00:01 112m‚ê§¬ª

[01:15] <TimToady> that's sorta not

[01:19] <TimToady> maybe @[] can optimize @([]), and the rest just stick with @(stuff)

[01:22] *** pochi left
[01:22] <TimToady> but I agree that we need an exacter representation of what Perl thinks it has, including the fiddly bits

[01:27] *** cooper joined
[01:28] *** alyxx joined
[01:30] * starcoder waves at alyxx

[01:30] * cooper waves at starcoder and alyxx

[01:30] <starcoder> lol

[01:33] <alyxx> lolhai cooper

[01:37] *** pochi joined
[01:51] *** [Coke] left
[01:53] *** [Coke] joined
[01:58] *** [Coke] left
[02:00] *** [Coke] joined
[02:02] *** Chillance left
[02:05] *** [Coke] left
[02:06] *** [Coke] joined
[02:13] *** Eevee left
[02:14] *** Eevee joined
[02:27] *** risou_awy is now known as risou

[02:47] *** alyxx left
[02:47] *** alyxx joined
[03:13] *** whiteknight left
[03:21] *** risou is now known as risou_awy

[03:23] *** Su-Shee_ joined
[03:27] *** Su-Shee left
[03:32] *** cibs left
[03:33] *** alester_ joined
[03:33] *** daemon left
[03:33] *** cibs joined
[03:34] *** molaf_ left
[03:34] *** daemon joined
[03:34] *** molaf_ joined
[03:34] *** Ali_h_ joined
[03:36] *** Tedd1 left
[03:36] *** Tedd1 joined
[03:37] *** Ali_h left
[03:39] *** thou joined
[03:43] *** Ali_h_ is now known as Ali_h

[03:50] <sorear> hello starcoder, alyxx, cooper.  New here?

[03:50] <alyxx> yuppers

[03:50] <sorear> welcome!

[03:50] <alyxx> thank you! :)

[03:51] <starcoder> sorear: not me

[03:51] <starcoder> been here for quite a while :P

[03:51] <starcoder> mostly idling though

[03:53] *** [particle]1 joined
[03:54] *** [particle] left
[03:59] *** alyxx is now known as alyx

[04:08] <sorear> starcoder: heh.  did you recruit alyx? :)

[04:10] *** alc joined
[04:15] *** [particle]1 left
[04:16] *** [particle] joined
[04:21] <starcoder> sorear: yes and no

[04:21] <starcoder> lol

[04:23] <cooper> hello sorear and thanks for the welcome

[04:23] *** miso_soup joined
[04:24] *** fhelmberger joined
[04:47] *** woosley joined
[05:09] *** ymasory left
[05:15] *** fhelmberger left
[05:23] *** alester_ left
[05:26] *** thou left
[05:29] *** bukakk3 joined
[05:30] *** kfo joined
[05:31] *** satyavvd left
[05:31] *** woosley left
[05:34] *** kfo_ left
[05:38] *** yegor left
[05:49] *** alester left
[05:49] *** snarkyboojum left
[05:50] *** bukakk3 left
[05:51] *** snarkyboojum joined
[05:56] *** woosley joined
[06:11] *** miso_soup left
[06:11] *** noganex joined
[06:12] *** noganex_ left
[06:13] *** woosley left
[06:18] *** kjeldahl joined
[06:22] *** alc left
[06:27] *** woosley joined
[06:33] *** _jaldhar left
[06:33] *** _jaldhar joined
[06:33] *** troys joined
[06:39] *** _jaldhar left
[06:40] *** troys left
[06:42] *** _jaldhar joined
[06:43] *** cooper left
[06:55] *** masak joined
[06:55] <masak> hi zebry

[06:56] <jnthn> :P

[06:56] <phenny> jnthn: 14 May 20:12Z <plobsing_> tell jnthn I have updated the zavolaj patch: http://nopaste.snit.ch/45500. it still doesn't like something about the references.

[06:56] *** _jaldhar left
[06:57] <sorear> hi masak !

[06:59] * masak is about to get up on stage and give the "Athlete Programming" talk

[07:00] <sorear> does that have anything to do with pmichaud and my habits of designing compilers on walks?

[07:01] <jnthn> sorear: heh, 6model was designed in the city park where I live also :)

[07:01] <jnthn> Seems most hard problems are solved afk ;)

[07:05] *** quadmaniac joined
[07:05] *** quadmaniac left
[07:06] *** _jaldhar joined
[07:07] <masak> http://masak.org/carl/yapc-russia-2011-athlete-programming/talk.pdf # talk slides

[07:07] *** masak left
[07:08] <jnthn> oh noes, he spoiled the surprise!

[07:08] <jnthn> :P

[07:09] <dalek> rakudo/nom: e4cf922 | jnthn++ | src/Perl6/SymbolTable.pm:

[07:09] <dalek> rakudo/nom: Start to fill out parameter and signature object building.

[07:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e4cf922d45

[07:11] *** baest_ joined
[07:12] *** baest left
[07:12] *** MayDaniel joined
[07:16] *** dolmen joined
[07:19] *** MayDaniel left
[07:22] *** dionys joined
[07:22] *** _jaldhar left
[07:23] <jnthn> ooh, masak's talk time \o/

[07:41] *** _jaldhar joined
[07:48] *** f00li5h left
[07:50] *** woosley left
[07:52] *** Su-Shee_ is now known as Su-Shee

[07:53] *** alc joined
[07:55] *** alc left
[08:00] *** woosley joined
[08:00] *** ImpatientSpoon joined
[08:00] <mberends> I enjoy the slides in http://masak.org/carl/yapc-russia-2011-athlete-programming/talk.pdf !  You lucky conference attendees, you get the soundtrack as well ! ;)

[08:04] *** meteorjay left
[08:12] *** AlexKotov joined
[08:14] <sorear> hey AlexKotov

[08:17] <AlexKotov> I'm here, on YAPC::Russia ))

[08:17] <jnthn> mberends: It was a nice talk. :)

[08:18] <AlexKotov> Carl Masak just finished his talk, it was almost perfect, yes

[08:18] <sorear> Is it acceptable for a Perl 6 implementation to reuse call frame objects?

[08:19] <moritz> what does that mean for the user?

[08:19] <sorear> sorry, CallFrame objects

[08:19] <moritz> what does that mean for the user?

[08:19] <sorear> e.g. for ^2 { push @arr, callframe }; say @arr[0] === @arr[1]

[08:19] *** masak joined
[08:19] <masak> AlexKotov: thanks :)

[08:19] <mberends> ++masak

[08:20] <moritz> sorear: not sure, the .my should be different, no?

[08:20] <masak> I had a few hiccups. I got a bit stuck in explaining exact set cover, and the Thompson engine. I forgot the name of Joel Spolsky.

[08:20] <masak> could've been improved with a bit of rehearsing, I think :)

[08:21] <sorear> moritz: maybe the .my is also reused

[08:21] <AlexKotov> now Anatoly Sharifulin starts his talk about http://mojolicio.us/ 

[08:21] <sorear> I'll leave you to think about this - *out*

[08:25] <masak> alyx: hi; welcome to #perl6. :)

[08:26] <alyx> hiya masak 

[08:27] <AlexKotov> http://www.picamatic.com/view/7559376_P1050576_halfsized/

[08:28] <AlexKotov> On pic from left to right: masak, jnthn, Anatoly Sharifulin

[08:28] <masak> AlexKotov: we look very busy with out laptops :)

[08:28] <masak> our*

[08:28] *** mj41 joined
[08:29] <tadzik> hello zebras

[08:29] <mberends> hello stripey one

[08:29] <moritz> \o\

[08:29] <tadzik> /o/

[08:29] *** wamba joined
[08:30] <masak> tadzik: hi. –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ó–∞–≥–∞—Ü–∫–∏–π (zag) will give a talk on his CPAN module http://search.cpan.org/~zag/Perl6-Pod-0.29/lib/Perl6/Pod.pm this afternoon. do you want me to ask him something?

[08:30] * tadzik looks forward to reading the masak's slides

[08:30] <tadzik> masak: I'll think about it, thanks

[08:31] <masak> looking forward to that talk.

[08:32] <masak> http://event.perlrussia.org/mayperl4/talk/116 # talk description

[08:32] *** araujo left
[08:32] *** dur-randir joined
[08:33] <tadzik> bbi20

[08:38] <dalek> rakudo/nom: 67b2264 | jnthn++ | src/CORE.setting/traits.pm:

[08:38] <dalek> rakudo/nom: Simply proto - don't need {*} but just *.

[08:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/67b2264f3c

[08:38] <dalek> rakudo/nom: 2d6d0c6 | jnthn++ | src/Perl6/Grammar.pm:

[08:38] <dalek> rakudo/nom: Parse onlystar.

[08:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/2d6d0c6333

[08:45] *** dolmen left
[08:48] *** jaldhar_ joined
[08:48] *** _jaldhar left
[08:52] *** jaldhar_ left
[08:52] *** jaldhar_ joined
[08:53] <AlexKotov> jnthn detected on photo in blog article

[08:53] <AlexKotov> http://livehh.ru/mishinna/entry/yapc-russia-2011-perl-khakaton

[08:53] *** wamba left
[08:53] <AlexKotov> (2nd photo, he is 4th from the left)

[08:56] <masak> AlexKotov: you have a jnthn detector? :)

[08:56] <masak> does it react to high concentrations of puns?

[08:56] <AlexKotov> I'm just looking, what's on about YAPC::Russia over internet

[08:56] <masak> oh! AlexKotov++

[08:58] <jnthn> masak: :P

[09:00] *** M_o_C joined
[09:01] *** jaldhar_ left
[09:01] <tadzik> I'm a-back

[09:02] <masak> tadzik: you're 8 minutes late :P

[09:02] *** awoodland joined
[09:03] <tadzik> masak: one of the questions I thought about: After implementing the part you implemented, and still having some specs before you, is there anything in Pod6 you consider overengineered and you'd prefer to rip it off the specs and never use it again?

[09:03] <tadzik> masak: traffic jams :)

[09:03] *** daemon left
[09:03] <masak> tadzik: ok, so "if you had to pick something to jettison from S26, what would it be?"

[09:04] <tadzik> yeah, feel free to refactor the question as long as it still passes the tests :)

[09:04] <masak> :D

[09:05] <tadzik> or other way: if you were (re)designing Pod6 during implementing Pod6 parser, how would it differ now?

[09:05] <masak> right.

[09:05] <masak> "what, IYHO, did we get wrong?"

[09:06] <mberends> I would build in partial Pod5 compatibility by making =pod an alias for =begin pod, and =cut an alias for =end pod.

[09:07] <masak> mberends: what would we gain from being compatible with Pod5 in that way? it's not like we're syntactically compatible in the rest of Perl 6.

[09:07] <mberends> many existing pod5 tools would be able to grok our pod, while we don't have enough pod6 tools.

[09:08] <mberends> for example, github

[09:08] <tadzik> github can't read our Pod anyway

[09:08] <masak> right. it would just make Pod parsers the world over sad.

[09:08] <tadzik> although it tries hard: https://github.com/tadzik/gsocmess/blob/master/docs/S26-documentation.pod

[09:09] <mberends> we *could* write pod[56] that github could grok

[09:09] <mberends> and we should

[09:09] <masak> that's tantamount to just using Pod5.

[09:09] <mberends> temporarily, only until the world is "pod6 ready"

[09:11] <masak> I do see the benefit of having a nicely rendered CPAN module page.

[09:11] <masak> if I could get that and still have my programs compile, all the better.

[09:12] <masak> it's just that temporary solutions such as making '=pod' and '=cut' legal syntax tend to stick around and then become part of the unremovable back-compat legacy.

[09:13] *** jaldhar_ joined
[09:13] <masak> "We can't remove '=pod' and '=cut' support! Think of all the modules in the Dark6Pan using this feature!"

[09:14] <mberends> I think that is a strawman objection

[09:14] <masak> well, would the feature be put in with a sunset clause?

[09:14] <masak> if not, I contend that the above will happen.

[09:15] <mberends> a deprecation cycle in Perl 6.1 might take care of it

[09:16] <moritz> making a new language with to-be-deprecated behavior built in seems kinda wrong

[09:17] <masak> it's a tradeoff, for sure.

[09:17] <masak> the payoff would have to be very clear in this case for me to want to do something like this.

[09:17] <mberends> I have forgotten what was so wrong with retaining the words =pod and =cut in the first place. Is it that they *don't* break anything and we want breakage?

[09:18] <masak> good question.

[09:18] *** jaldhar_ left
[09:20] <tadzik> masak: any particular soundtrack I should put on the speakers while reading your slides

[09:20] <tadzik> ?

[09:20] <masak> tadzik: Grieg's "Morgenstimmung"

[09:20] <masak> (it's part of "Peer Gynt")

[09:21] <tadzik> aye

[09:21] <jnthn> oh, I hate that guy...always resetting my connection.

[09:21] <masak> jnthn: that's because you keep trying to log on in the Hall of the Mountain King. he doesn't like that.

[09:22] <tadzik> (:

[09:23] *** noganex_ joined
[09:24] <tadzik> I can almost hear the laughs in the slide #113

[09:26] *** noganex left
[09:30] *** jaldhar_ joined
[09:32] *** mj41 left
[09:32] <tadzik> masak++ # nice slides, shame I couldn't see the presentation

[09:39] *** wamba joined
[09:40] *** noganex_ left
[09:40] *** jaldhar_ left
[09:40] *** jaldhar_ joined
[09:42] *** noganex joined
[09:44] *** am0c joined
[09:47] *** _jaldhar_ joined
[09:47] *** jaldhar_ left
[09:48] *** wamba left
[10:11] *** jfried joined
[10:31] <AlexKotov> YAPC live: masak is watching jnthn talk about rakudo

[10:31] <AlexKotov> http://www.picamatic.com/view/7559513_P1050579_halfsized/

[10:32] *** c9s_ joined
[10:32] <uKibab> http://dl.kibab.com/john2.jpg

[10:32] <uKibab> :-)

[10:36] *** c9s_ left
[10:36] *** noganex_ joined
[10:36] *** c9s_ joined
[10:38] *** noganex left
[10:48] *** woosley left
[10:55] *** risou_awy is now known as risou

[11:02] <jnthn> Talk slides available at http://jnthn.net/articles.shtml

[11:02] *** wamba joined
[11:02] *** Psyche^ joined
[11:03] <masak> \o/

[11:03] <masak> jnthn++

[11:04] <jnthn> I look forward to giving the "I've done all of this!" version of the talk ;)

[11:05] *** Patterner left
[11:05] *** Psyche^ is now known as Patterner

[11:08] * moritz looks forward to giving the "exploiting all the nice features that jnthn++ implemented" talk :-)

[11:08] <dalek> rakudo/nom: 8b9892d | jnthn++ | src/Perl6/SymbolTable.pm:

[11:08] <dalek> rakudo/nom: Start to fill out code object setup.

[11:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8b9892dcd4

[11:08] <dalek> rakudo/nom: 6dd9027 | jnthn++ | src/CORE.setting/traits.pm:

[11:08] <dalek> rakudo/nom: Just use a single dispatch for our first trait handler for now - easier to get to a point where something works.

[11:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/6dd9027d0f

[11:10] <jnthn> moritz: :)

[11:10] <jnthn> .oO( masak looks forward to giving the "ways I broke all the nice features that jnthn++ implemented" talk )

[11:12] <masak> :D

[11:13] <masak> oh, we don't have any bot that bites self-karma-incrementers?

[11:13] <jnthn> That...was not my aim :P

[11:13] <masak> ...right... :P

[11:14] <masak> "it was in a thought bubble!"

[11:14] <moritz> in #perlde self-incrementing karma actually decreases your karma

[11:14] <jnthn> Exactly. I didn't actually increment my karma. I just thought about it.

[11:14] <masak> karma masak

[11:14] <aloha> masak has karma of 344.

[11:14] <masak> masak++

[11:14] <masak> karma masak

[11:14] <aloha> masak has karma of 344.

[11:14] <masak> oh, good.

[11:14] <jnthn> nice try :P

[11:14] <masak> purely in the interests of science :P

[11:14] <jnthn> karma jnthn

[11:14] <aloha> jnthn has karma of 502.

[11:15] <jnthn> karma jonathan

[11:15] <aloha> jonathan has karma of 1064.

[11:15] <masak> !

[11:15] <jnthn> darn, my longer name is winning :P

[11:15] <masak> I... I'm not sure I've seen 4-digit karma before.

[11:15] <jnthn> I did some commits :P

[11:15] * masak .oO( this jonathan++ guy is awesome )

[11:15] *** woosley joined
[11:15] <jnthn> :P

[11:16] *** woosley left
[11:16] <masak> hm. woosley logged in, saw jnthn's tongue, and logged out. some people are too sensitive... :)

[11:17] <AlexKotov> karma uKibab

[11:17] <aloha> uKibab has karma of 0.

[11:18] *** risou is now known as risou_awy

[11:18] <masak> karma 0 fo amrak sah

[11:18] <aloha> 0 fo amrak sah has karma of 0.

[11:19] <masak> :)

[11:19] <cognominal> jnthn++

[11:36] *** whiteknight joined
[11:40] <mberends> wow. jnthn++ http://jnthn.net/papers/2011-yapc-russia-compiler.pdf

[11:43] *** mj41 joined
[11:56] <masak> now the Perl 6 Pod talk is beginning.

[11:56] <tadzik> nice

[11:56] * jnthn watches, wishes he wasn't awful at Russian and could follow it more :)

[11:57] * masak too

[11:57] <masak> zag++ (the speaker) has made Rakudo available on FreeBSD.

[11:57] <jnthn> aye \o/

[11:57] <masak> he's also translating the "Using Perl 6" book to Russian.

[11:59] <masak> jnthn: wow, is that an actual book containing the spec in Russian?

[12:00] <jnthn> masak: I wondered that, but then I wondered if it's actually 26 from the camel

[12:00] <masak> oh!

[12:00] <masak> yeah, that fits better :)

[12:00] <masak> that's why it was just "26" and not "S26".

[12:02] *** woosley joined
[12:02] <jnthn> :P

[12:03] <masak> mberends: realization: =cut doesn't really fit into the whole thinking about the four types of Pod things. they're all either self-delimiting, or ended with a corresponding =end

[12:07] <mberends> masak: sure. we don't want =pod or =cut in an ideal future world. I just want them now, and for the next 2 years or so (+/- 2 years)

[12:12] <masak> mberends: maybe a Pod slang might help here. then it'd be predeclared (and possibly requiring a module), and this easier to isolate and deprecate.

[12:12] <masak> thus*

[12:13] *** M_o_C left
[12:13] <mberends> masak: that may be a useful solution, if it can be implemented easily.

[12:13] <mberends> the reason I want pod5 backward compatibility now is to encourage and enable Perl 6 programmers to write their Perl 6 documentation in (a subset of) Pod6 today.

[12:14] <masak> nod. I want that too.

[12:17] <mberends> use MONKEY_POD; # eek!

[12:18] <masak> +1

[12:18] <tadzik> :D

[12:18] <mberends> use ZEBRA_POD;

[12:18] <tadzik> =cut :is-actually(end pod)

[12:19] <jnthn> lol :)

[12:19] * jnthn imagines a pod full of monekys

[12:19] * tadzik imagines something like 'panda docs'

[12:20] <tadzik> http://imgur.com/xFSQF if you don't remember

[12:20] <masak> :)

[12:22] <masak> std: DOC INIT { say "OH HAI" }

[12:22] <p6eval> std a71faea: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Undeclared name:‚ê§    'DOC' used at line 1‚ê§Check failed‚ê§FAILED 00:01 114m‚ê§¬ª

[12:22] <masak> it's in S26...

[12:22] <jnthn> std: DOC use Foo::Bar;

[12:22] <p6eval> std a71faea: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Undeclared names:‚ê§   'DOC' used at line 1‚ê§   'Foo::Bar' used at line 1‚ê§Undeclared routine:‚ê§  'use' used at line 1‚ê§Check failed‚ê§FAILED 00:01 112m‚ê§¬ª

[12:23] <AlexKotov> std: say "test"

[12:23] <p6eval> std a71faea: OUTPUT¬´ok 00:01 113m‚ê§¬ª

[12:23] <masak> std: say "only the chunkiest bacon you've ever eaten!"

[12:23] <p6eval> std a71faea: OUTPUT¬´ok 00:01 113m‚ê§¬ª

[12:23] <jnthn> why did you do that? :P

[12:24] <AlexKotov> std: say 1+2

[12:24] <p6eval> std a71faea: OUTPUT¬´ok 00:01 114m‚ê§¬ª

[12:24] <masak> jnthn: I... I don't know. :)

[12:24] <jnthn> :P

[12:24] <masak> jnthn: I seem to have poor impulse control lately :)

[12:24] <AlexKotov> How to make IRC print output ?

[12:24] <masak> rakudo: say "OH HAI"

[12:24] <p6eval> rakudo be887a: OUTPUT¬´OH HAI‚ê§¬ª

[12:24] <tadzik> std is not a compiler

[12:24] <masak> AlexKotov: std is just a parser.

[12:24] <tadzik> well, besides very simple code of course...

[12:24] <moritz> rakudo: say [*] 1..6

[12:24] <p6eval> rakudo be887a: OUTPUT¬´720‚ê§¬ª

[12:24] <AlexKotov> Aaaahh! Got it :)

[12:25] <moritz> tadzik: like, itself? :-)

[12:25] <AlexKotov> rakudo: say "hello"

[12:25] <p6eval> rakudo be887a: OUTPUT¬´hello‚ê§¬ª

[12:25] <tadzik> std: say "ok 00:01 {120.rand.Int}m"

[12:25] <p6eval> std a71faea: OUTPUT¬´ok 00:01 113m‚ê§¬ª

[12:25] <masak> rakudo: sub postfix:<!>($n) { [*] 1..$n }; say 5!

[12:25] <p6eval> rakudo be887a: OUTPUT¬´120‚ê§¬ª

[12:25] <uKibab> rakudo: die

[12:25] <p6eval> rakudo be887a: OUTPUT¬´Died‚ê§‚ê§  in main program body at line 22:/tmp/S6zDb_BmsW‚ê§¬ª

[12:25] <masak> tadzik: your GSoC proj is in the talk! \o/

[12:26] <tadzik> oh!

[12:26] <tadzik> what about it?

[12:26] <masak> tadzik: screenshot with project proposal.

[12:26] <tadzik> cool

[12:26] <uKibab> tadzik++

[12:26] <tadzik> do you understand any words zag++ says?

[12:26] <jnthn> tadzik: Is going through various POD implementation efforts.

[12:26] <masak> tadzik: yes, quite a lot from context.

[12:26] <AlexKotov> rakudo: say "I'm alive!"

[12:26] <p6eval> rakudo be887a: OUTPUT¬´I'm alive!‚ê§¬ª

[12:27] <uKibab> AlexKotov: ;-)

[12:27] <masak> rakudo: say "I'm ", <alive dead undead undecided>.roll, "!"

[12:27] <p6eval> rakudo be887a: OUTPUT¬´I'm dead!‚ê§¬ª

[12:27] <uKibab> =)))

[12:28] <tadzik> rakudo: say "I'm ", <alive dead undead undecided a-carrot>.roll, "!"

[12:28] <p6eval> rakudo be887a: OUTPUT¬´I'm a-carrot!‚ê§¬ª

[12:28] <tadzik> I knew it!

[12:28] <masak> :P

[12:28] <jnthn> rakudo: say "I'm gonna drink a {<beer vodka>.pick}!"

[12:28] <p6eval> rakudo be887a: OUTPUT¬´I'm gonna drink a beer!‚ê§¬ª

[12:28] <tadzik> this is one of those moments when the whole universe rushes to make random what you want it to be

[12:28] <masak> rakudo: given "I'm a carrot!" { s/c/p/; .say }

[12:28] <p6eval> rakudo be887a: OUTPUT¬´Cannot modify readonly value‚ê§  in '&infix:<=>' at line 1‚ê§  in main program body at line 22:/tmp/8AiIHFY_hM‚ê§¬ª

[12:29] <masak> rakudo: given "I'm a carrot!" <-> $_ { s/c/p/; .say }

[12:29] <p6eval> rakudo be887a: OUTPUT¬´===SORRY!===‚ê§Missing block at line 22, near ""‚ê§¬ª

[12:29] <masak> oh, right.

[12:29] *** donri joined
[12:29] <masak> rakudo: given "I'm a carrot!" -> $_ is rw { s/c/p/; .say }

[12:29] <p6eval> rakudo be887a: OUTPUT¬´Cannot modify readonly value‚ê§  in '&infix:<=>' at line 1‚ê§  in main program body at line 22:/tmp/2MPJGj03sQ‚ê§¬ª

[12:29] <tadzik> :)

[12:29] <jnthn> masak: It's *binding*.

[12:29] <tadzik> . o O ( masak submits rakudobug )

[12:29] <masak> jnthn++

[12:30] <masak> rakudo: my $_ = "I'm a carrot!"; s/c/p/; .say

[12:30] <p6eval> rakudo be887a: OUTPUT¬´===SORRY!===‚ê§Redeclaration of symbol $_ at line 22, near " = \"I'm a "‚ê§¬ª

[12:30] <masak> rakudo: $_ = "I'm a carrot!"; s/c/p/; .say

[12:30] <p6eval> rakudo be887a: OUTPUT¬´I'm a parrot!‚ê§¬ª

[12:30] <tadzik> rakudo: given "I'm a carrot!" { .subst(/c/, 'p').say }

[12:30] <p6eval> rakudo be887a: OUTPUT¬´I'm a parrot!‚ê§¬ª

[12:30] <jnthn> tadzik: nicer :)

[12:30] <masak> tadzik++ # no side effects

[12:31] <tadzik> Perl 5 can do that too now

[12:31] <jnthn> masak is so impure... :P

[12:31] <tadzik> If only I had 5.14 <3

[12:31] <masak> tadzik: it's free, you know... :)

[12:31] <tadzik> I'll wait for Gentoo to put it into repos, it can't be *that* long

[12:31] <AlexKotov> Do you have Perl5 bot on this channel?

[12:31] <tadzik> I think there was one

[12:32] <tadzik> seen buubot

[12:32] <aloha> buubot was last seen in #perl6 101 days 16 hours ago joining the channel.

[12:32] <tadzik> I'm so old

[12:32] <AlexKotov> buubot: say "1"

[12:32] <tadzik> ENOBUUBOT

[12:32] <moritz> it would be  buubot: eval: say "1"

[12:32] <AlexKotov> buubot: eval: say "1"

[12:33] <AlexKotov> buubot is sleeping )

[12:33] <tadzik> vlc--; gstreamer++ # I knew it

[12:33] <tadzik> pardon my offtopic

[12:33] * uKibab notes that perl 5.14 is not in FreeBSD ports collection yet

[12:34] <BinGOs> it'll be in pkgsrc well before it is in ports

[12:34] <moritz> it's in perlbrew now :-)

[12:34] <uKibab> maybe :-) depends on [email@hidden.address] workload :-)

[12:34] <moritz> in fact I'm running my local p5 webapp project on top of 5.14 right now

[12:37] <masak> tadzik: I asked your question. bit of a language barrier, but he had a couple of answers.

[12:37] <tadzik> I'm all ears

[12:37] <masak> tadzik: (1) the 'use' syntax changed in the last few versions. it used to be more convenient for non-Perl 6 implementations.

[12:37] <masak> (I don't know in exactly what way)

[12:38] *** ImpatientSpoon left
[12:38] <masak> tadzik: (2) it's not clear from S26 alone what the exact hierarchy is of the Pod components. it's necessary to refer to TheDamian's CPAN module -- and it shouldn't be.

[12:38] <tadzik> yeah, I know something about that :)

[12:38] <masak> tadzik: (3) something in Russian that I didn't get. will have to ask someone later.

[12:38] <tadzik> :)

[12:38] <uKibab> BTW if you read http://search.cpan.org/~jesse/perl/README.freebsd, it references to the quite old PR #35703 that was closed two years ago. Maybe it's safe to remove that warning from README file?

[12:39] <masak> uKibab: sounds like something for the p5p list.

[12:40] <moritz> or #p5p in on irc.perl.org

[12:41] <uKibab> ok, thanks

[12:42] <moritz> phenny: tell hinrik stray < character in method name in http://search.cpan.org/~hinrik/Bot-BasicBot-0.87/lib/Bot/BasicBot.pm#topic%3C

[12:42] <phenny> moritz: I'll pass that on when hinrik is around.

[12:42] * uKibab will first check if this note is present in the official perl5.12 tarball

[12:43] *** wamba left
[12:49] *** Chillance joined
[12:53] <dalek> rakudo/nom: e30e220 | jnthn++ | src/Perl6/Grammar.pm:

[12:53] <dalek> rakudo/nom: Fix typename declaration checking.

[12:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e30e2209c0

[12:53] <dalek> rakudo/nom: 3d49450 | jnthn++ | src/Perl6/ (2 files):

[12:53] <dalek> rakudo/nom: Start to refactor code handling; various related cleanups. Tossed multi-sub bits which need re-doing for new proto semantics.

[12:53] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3d4945029d

[12:55] <AlexKotov> For jnthn and masak - about current YAPC talk with no words but in Russian :)

[12:56] <AlexKotov> The speaker works in state organization that develops compilers

[12:56] <masak> oh!

[12:56] <masak> yes, I saw it was something to do with compilers.

[12:56] <masak> what kind?

[12:56] <AlexKotov> Presentation is about how they run automatic tests for compilers

[12:57] <masak> nice!

[12:58] <AlexKotov> The talk contains all kind of government-style burocracy that may exists ))

[12:58] <masak> waitwait... bureaucracy for the compilers? :)

[12:59] <AlexKotov> bureaucracy for the organization where he works and style they use in their job

[13:00] <AlexKotov> It's like in USSR-time, when we cloned US-computers and replaced latin terms by cyrillic )

[13:00] <masak> :)

[13:01] <masak> I can see how that'd be useful. things are much more accessible to people on this side of the language barrier. in fact, it's very much in line with the message of my talk today.

[13:02] <AlexKotov> Oh! UML! First slide in latin ))

[13:02] <masak> :D

[13:02] <masak> yeah... but it's UML... :P

[13:02] <AlexKotov> masak: yes, probably the same pattern as you've described )

[13:02] <masak> it's everywhere!

[13:03] * uKibab worked with "brand russian" compiler for BAGET operating system 2 years ago. The compiler's filename was "bt32d-gcc"

[13:04] <masak> what did the 'bt32d' stand for?

[13:05] <uKibab> that was the board name. In fact it had MIPS-R3000 processor, manufactured using licensed MIPS IP core (VHDL)

[13:05] <uKibab> they refused to provide sources for this compiler, even though it was obviously GCC

[13:06] <uKibab> but then we began to compile applications using plain mips-mips-elf gcc :-)

[13:06] <uKibab> we didn't want to use their binary crap, because they had it for linux, and we needed freebsd

[13:07] <uKibab> so called "russian intellectual property"

[13:08] <uKibab> but these guys seem to run Perl on ELBRUS machines

[13:08] <dalek> rakudo/nom: a99581f | jnthn++ | src/Perl6/Actions.pm:

[13:08] <dalek> rakudo/nom: Make trait_mod:<is> actually locate the handler and dispatch to it. Doesn't actually manage to invoke it yet - Code is missing something.

[13:08] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a99581fac2

[13:09] <uKibab> Wiki article abount this arch: http://en.wikipedia.org/wiki/Elbrus_%28computer%29

[13:09] <masak> "elbrus" in Swedish means "electrical noise" :)

[13:09] *** AlexKotov left
[13:10] <masak> oh noes, conf ended!

[13:10] <uKibab> YAPC-Russia is over!

[13:10] *** snearch joined
[13:12] <masak> pivo &

[13:12] *** mj41 left
[13:12] *** masak left
[13:13] *** dionys left
[13:14] *** dur-randir left
[13:16] *** Schwern left
[13:20] *** sjn joined
[13:28] *** dayangkun left
[13:29] *** daemon joined
[13:31] *** daemon left
[13:31] *** daemon joined
[13:33] *** dudulz joined
[13:34] *** miso_soup joined
[13:35] *** daemon left
[13:35] *** daemon joined
[13:45] *** benabik left
[13:49] *** buubot_backup joined
[13:49] *** dudulz left
[13:51] *** araujo joined
[13:52] *** daemon left
[13:52] *** bluescreen10 left
[13:54] *** benabik joined
[13:54] *** daemon joined
[13:54] *** snearch left
[13:59] <szabgab> I just seen that perl 5.14 was release on 5.14, that's nice

[13:59] <szabgab> if they make it a tradition then we can expect 5.16 to be release on 5.16

[14:00] <szabgab> and 6.1 released 9 years from now on 1st June :)

[14:01] * szabgab goes back to his regular hiding place

[14:01] *** dur-randir joined
[14:03] *** buubot_backup left
[14:05] *** buubot_backup joined
[14:08] *** daemon left
[14:09] *** orafu left
[14:09] *** daemon joined
[14:10] *** am0c left
[14:10] *** orafu joined
[14:17] *** daemon left
[14:19] *** daemon joined
[14:25] *** daemon left
[14:27] *** daemon joined
[14:30] *** risou_awy is now known as risou

[14:46] *** orafu left
[14:47] *** orafu joined
[14:55] *** mberends left
[15:00] *** dj-dongdot joined
[15:06] *** dj-dongdot left
[15:06] *** whiteknight left
[15:07] *** ymasory joined
[15:09] *** dur-randir left
[15:13] *** birdwindupbird joined
[15:26] *** kaare_ joined
[15:33] *** orafu left
[15:40] *** guru joined
[15:40] *** guru is now known as Guest43348

[15:42] *** am0c joined
[15:45] *** woosley left
[15:48] <Guest43348> info guru

[15:50] <Guest43348> bye

[15:51] *** Guest43348 left
[15:51] *** orafu joined
[15:53] *** Mowah joined
[16:14] *** dju_ joined
[16:14] *** dju left
[16:16] <pmichaud> ping

[16:16] <pmichaud> (yes, a broadcast ping)

[16:17] <tadzik> poing

[16:17] <pmichaud> I'm wondering if Rakudo should target Parrot release - 1

[16:17] <pmichaud> instead of the monthly parrot release

[16:19] <tadzik> I don't think that goes well with Parrot folks making things better/faster for us. They update, and we can test it after a month

[16:19] <pmichaud> I agree at first blush, but I'm wanting to explore the ramifications fully before I decide to nix the idea :)

[16:20] <pmichaud> I think it does pose problems around the Parrot supported releases, too

[16:20] <pmichaud> i.e., we wouldn't report a problem with a supported release until the next monthly release comes out

[16:35] <moritz> what benefit would we have from targeting older releases?

[16:37] *** birdwindupbird left
[16:37] *** skyheights joined
[16:39] <skyheights> jnthn++ masak++    # wonderful perl6 ambassadors

[16:40] *** skyheights left
[16:42] *** [Coke] left
[16:42] *** miso_soup left
[16:44] *** ymasory left
[16:44] *** ymasory joined
[16:44] *** [Coke] joined
[16:52] *** SHODAN joined
[16:56] <sbp> heh. was going to ask what they did this time

[16:57] *** thou joined
[16:59] *** thou left
[16:59] *** nymacro left
[17:00] *** nymacro joined
[17:21] *** zby_home_ joined
[17:22] <perplexa> buscher?

[17:23] <perplexa> ?? hello buscher

[17:23] <perplexa> meh

[17:23] <sbp> hello perplexa

[17:24] *** benabik left
[17:24] *** benabik joined
[17:24] <perplexa> ?? hello buscher

[17:24] <perplexa> ach kA das dictionary is hier aus 

[17:25] <perplexa> und ich hab grad krinen bock, das uebers telefon zu konfigurieren

[17:25] <perplexa> geduldsspiele sind nix fuer nen sonntag ;)

[17:26] <moritz> perplexa: this is a place for discussing Perl 6 usage and development, primarily in English. Please stick to the rules.

[17:27] <sbp> perplexa: wir nur etwa Perl6 hier reden. bitte sprechen Perl6 nur, und rede dar√ºber in Englisch, wenn Sie so freundlich

[17:27] <sbp> moritz: what did jnthn and masak do to earn skyheights's praise?

[17:28] <moritz> sbp: giving talks at YAPC::Russia

[17:28] <moritz> sbp: and hackathoning

[17:28] <sbp> thanks

[17:54] *** dju__ joined
[17:57] *** dju_ left
[18:04] <sorear> good * #perl6

[18:05] *** am0c left
[18:07] <moritz> \o

[18:07] * dukeleto waves

[18:09] <moritz> rakudo: my @color = [qw/red blue/, [[['violet']]]], ['black', 'white']; say so 'red' ~~ any @color

[18:10] <p6eval> rakudo be887a: OUTPUT¬´Bool::False‚ê§¬ª

[18:10] *** wiolyn joined
[18:11] *** wiolyn left
[18:12] <sorear> moritz: context?

[18:14] <moritz> sorear: http://www.nntp.perl.org/group/perl.perl5.porters/2011/05/msg172367.html

[18:20] *** HarryS left
[18:35] <sorear> niecza: my @colors = <red green blue>; say so @colors ~~ *.grep('red')

[18:35] <p6eval> niecza v5-7-g00f93bd: OUTPUT¬´Bool::True‚ê§¬ª

[18:38] *** Zapelius left
[18:40] <sorear> Backlog reveals no answer to my question from last night

[18:41] <sorear> niecza: my $cf;‚ê§for ^2 {‚ê§  say $cf.line if $_;‚ê§  $cf = callframe;‚ê§}

[18:41] <p6eval> niecza v5-7-g00f93bd: OUTPUT¬´3‚ê§¬ª

[18:41] <sorear> Is this behavior acceptable?

[18:41] *** sjn_ joined
[18:42] <moritz> rakudo: my @c; for ^2 { push @c, callframe }; say @c[0].my.<$_>

[18:42] <p6eval> rakudo be887a: OUTPUT¬´Any()‚ê§¬ª

[18:42] <moritz> rakudo: my @c; for ^2 { push @c, callframe }; say @c[0].my.perl

[18:42] <p6eval> rakudo be887a: OUTPUT¬´{"\$MAIN" => 19, "\$/" => 25, "\$!" => 28, "\@c" => 32, "__CANDIDATE_LIST__" => 33, "\$_" => 36}‚ê§¬ª

[18:43] *** thou joined
[18:43] *** sjn left
[18:43] <moritz> sorear: what else could/should it print?

[18:44] *** sjn_ is now known as sjn

[18:44] <moritz> rakudo: my $cf;‚ê§for ^2 {‚ê§  say $cf.line if $_;‚ê§  $cf = callframe;‚ê§}

[18:45] <p6eval> rakudo be887a: OUTPUT¬´24‚ê§¬ª

[18:45] <moritz> rakudo: say callframe.line

[18:45] <p6eval> rakudo be887a: OUTPUT¬´22‚ê§¬ª

[18:45] <moritz> (p6eval adds some pre-text)

[18:54] *** _jaldhar_ left
[18:54] *** _jaldhar_ joined
[18:59] *** ymasory left
[19:01] *** noganex joined
[19:02] *** noganex_ left
[19:04] *** mj41 joined
[19:05] <sorear> moritz: 5

[19:06] <sorear> moritz: because $cf was the inner frame from the first iteration of the loop, which finished by the time $cf.line was called

[19:06] *** Schwern joined
[19:10] <sorear> niecza: my $*X = 1; sub foo { gather { take $*X } }; my $y; if 1 { my $*X = 2; $y = foo }; say $y[0]

[19:10] <p6eval> niecza v5-7-g00f93bd: OUTPUT¬´2‚ê§¬ª

[19:10] <sorear> A change I'm working on locally will make that 1

[19:11] <sorear> Unacceptable?

[19:11] <moritz> there's no code on line 5 - how could it print 5?

[19:12] <sorear> moritz: an implicit leave;

[19:13] <moritz> sorear: I understand callframe()'s .line to be tied to the executed line

[19:13] <moritz> sorear: not to the end of the block

[19:14] <sorear> the last executed code in the first iteration is the implicit leave

[19:24] *** risou is now known as risou_awy

[19:29] <lue> hello zebras o/

[19:30] <sorear> hello lue.

[19:31] <sorear> My last snippet returning 1 (because of $*-vars in inlined blocks becoming invisible to 'gather') would be a killer, right?  I 

[19:34] *** Zapelius joined
[19:39] *** wamba joined
[19:40] <sorear> tooo quiet.

[19:40] <sorear> hey, lue, maybe you can help :>

[19:40] <moritz> sorear: yes, returning 1 would be wrong

[19:40] *** birdwindupbird joined
[19:42] *** kjeldahl left
[19:47] <sorear> maybe there should be more than one kind of "is dynamic"

[19:47] <sorear> $*FOO needs to have simple and predictable semantics

[19:48] <sorear> but anyone relying on $CALLER::CALLER::CALLER::_ deserves whatever they get

[19:48] *** icwiener joined
[19:49] * moritz agreeds

[19:49] <moritz> *agrees

[19:52] <sjn> yes, agreedyness is bad. don't be agreedy! :)

[19:58] *** kaare_ left
[20:04] *** SHODAN left
[20:04] *** kjeldahl joined
[20:10] *** birdwindupbird left
[20:23] *** jfried left
[20:27] *** y3llow_ joined
[20:28] *** HarryS joined
[20:28] *** y3llow left
[20:28] *** y3llow_ is now known as y3llow

[20:53] *** zby_home_ left
[20:57] <dalek> niecza: 15f2145 | sorear++ | / (4 files):

[20:57] <dalek> niecza: Allow $_ to be accessed dynamically, even when inlined

[20:57] <dalek> niecza: review: https://github.com/sorear/niecza/commit/15f2145a50

[21:07] *** awoodland left
[21:09] <sorear> interesting

[21:09] <sorear> should ok /a+/, "..." work?

[21:20] *** kjeldahl left
[21:24] <colomon> sorear: you want to match against $_?

[21:29] *** ymasory joined
[21:30] *** _jaldhar_ left
[21:41] *** Mowah left
[21:42] *** Mowah_ left
[21:42] *** dju_ joined
[21:46] *** dju__ left
[21:50] *** icwiener left
[21:51] *** _jaldhar_ joined
[21:58] *** mj41 left
[22:03] <sorear> colomon: yes

[22:05] <colomon> then that seems like it should work, no?  are there issues with it?

[22:07] <colomon> okay, I see there are in Rakudo, at least.  huh.

[22:08] *** _jaldhar_ left
[22:09] *** geekosaur is now known as allbery_b

[22:09] *** molaf_ left
[22:10] *** allbery_b is now known as geekosaur

[22:10] *** plobsing_ left
[22:12] *** plobsing joined
[22:13] <sorear> colomon: the booliness gets tested in &ok, which doesn't have the same setting of $_

[22:14] <colomon> oh!

[22:15] <colomon> are you sure that's it?  the error I got here was Method 'match' not found for invocant of class '' -- but wouldn't the invocant be the regex?

[22:18] *** _jaldhar_ joined
[22:32] * colomon admits that sorear++'s explanation does seem reasonable.

[22:33] <pmichaud> draft proposal for Rakudo/Parrot relationship managers:  http://pmichaud.com/sandbox/relman-draft.txt

[22:34] <pmichaud> comments and suggestions welcomed

[22:34] <pmichaud> I'm open for suggestions on <person1> and <person2> for Rakudo.  All combinations I've thought of would be acceptable to me (this isn't to imply that the ones I've not thought of would be unacceptable)

[22:37] *** bluescreen10 joined
[22:37] <colomon> sorear: okay, I don't understand the error message I'm getting, but I'm with you 100% on it probably not doing what you want.

[22:39] <colomon> sorear: (which is to say, I just looked at the source for Regex.Bool)

[22:48] <sorear> pmichaud++

[22:50] <colomon> indeed, pmichaud++

[22:51] <sorear> Is there supposed to be a list of possible Rakudo candidates here?

[22:51] <pmichaud> you mean in the message?  no

[22:52] <pmichaud> I'm willing to let this group come up with a consensus pick for the two reps. 

[22:52] <pmichaud> I don't feel that I have to be one of the reps (but will certainly do so if others feel I should be one)

[22:55] <colomon> It seems to me there is a shortage of obvious candidates -- at least if you presume a fairly high level of Parrot understanding....

[22:55] <sorear> I've already made my picks for the two worst people, among 1y+ IRC regulars

[22:56] <dalek> niecza: 4bdcf2b | sorear++ | / (3 files):

[22:56] <dalek> niecza: Implement Regex.Bool automatic $_ matching

[22:56] <dalek> niecza: review: https://github.com/sorear/niecza/commit/4bdcf2b772

[22:58] *** Trashlord left
[23:00] *** Trashlord joined
[23:01] *** f00li5h joined
[23:03] <sorear> perl6: say 'ab-c'.split(/<.ws>/).perl

[23:03] <p6eval> niecza v5-8-g15f2145: OUTPUT¬´(timeout)¬ª

[23:03] <p6eval> ..rakudo be887a: OUTPUT¬´("", "ab", "-", "c", "")‚ê§¬ª

[23:03] <p6eval> ..pugs: OUTPUT¬´Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {‚ê§    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.16/blib6/pugs/perl5/lib';‚ê§    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;‚ê§}‚ê§'Pugs::Runtime::Match::HsBridge'‚ê§"‚ê§*** '<HANDLE>' trapped by operat‚Ä¶

[23:23] *** Ali_h left
[23:23] *** Ali_h_ joined
[23:24] *** Ali_h_ is now known as Ali_h

[23:30] *** thou left
[23:35] *** Schwern left
[23:37] <dalek> niecza: d0bd18d | sorear++ | / (2 files):

[23:37] <dalek> niecza: Break loop in .split when a zero-width assertion is used as a delimiter

[23:37] <dalek> niecza: review: https://github.com/sorear/niecza/commit/d0bd18d9ee

[23:47] *** risou_awy is now known as risou

[23:48] *** wamba left
[23:48] <sorear> I will add a method/function to Niecza such that foo([1,2,3]) == False, foo(@([1,2,3])) == True

[23:48] <sorear> Taking name suggestions.

[23:48] <sorear> (also whether it should be a method or a function)

[23:48] *** risou is now known as risou_awy

[23:48] *** risou_awy is now known as risou

[23:53] *** PacoLinux left
[23:53] *** risou is now known as risou_awy

[23:56] *** whiteknight joined
