[00:01] *** dju__ joined
[00:04] *** dju_ left
[00:07] *** icwiener left
[00:07] *** ab5tract left
[00:08] *** nymacro joined
[00:16] *** Rotwang left
[00:16] *** vmspb left
[00:17] *** molaf_ joined
[00:18] *** coldhead left
[00:20] *** bacek_at_work left
[00:20] *** molaf left
[00:24] *** c1sung_ left
[00:24] *** c1sung joined
[00:29] *** benabik joined
[00:32] *** benabik left
[00:34] *** perimosocordiae left
[00:39] *** aesop left
[00:44] *** aesop joined
[00:48] *** TheIronMarx joined
[00:48] <TheIronMarx> Is "Mar" a reserved word?

[00:48] *** envi joined
[00:50] *** aesop left
[00:56] *** TheIronMarx left
[01:00] *** AphelionZ joined
[01:02] <AphelionZ> Hello, I'm trying to do some screen scraping with perl6 - mainly reading html from a URL and parsing out image tags. However, I'd like to eventually work in authentication. What's the best module / method for this?

[01:05] *** aesop joined
[01:05] *** donri left
[01:12] *** aesop left
[01:22] *** aesop joined
[01:36] *** jferrero left
[01:36] *** edenc left
[01:36] *** edenc joined
[01:37] <sorear> AphelionZ: I doubt there is one yet

[01:41] <AphelionZ> sorear: Hmm, what about calling command line tools like cURL?

[01:43] <Util> AphelionZ: Reading http://modules.perl6.org/ , I see several flavors of web server, but only one web client so far: perl6-lwp-simple . Also, nothing yet to parser HTML.

[01:43] <Util> Either write the modules yourself (and please add them to our Modules listing!), sponsor someone to develop for you (very do-able!), wait patiently, or use the excellent Perl 5 modules (LWP, HTML::TokeParser or HTML::TreeBuilder).

[01:44] <Util> AphelionZ: you can build any command-line and run it from within Perl6. `curl` works fine; I am doing it myself.

[01:44] <AphelionZ> ok, great. All of these sound like good options. Thank you!

[01:44] <Util> Glad to help!

[01:45] *** woosley joined
[02:01] *** noganex_ joined
[02:01] *** noganex left
[02:02] *** demond joined
[02:03] *** demond left
[02:26] *** stifynsemons left
[02:27] *** gbacon joined
[02:27] <diakopter> perlesque: my double $b; eval '$b = Syste' ~ 'm::Double.Parse("55' ~ '9165")'; say($b)

[02:27] <p6eval> perlesque: OUTPUT«unhandled node type: <invalid>␤Statement_list 1␤ <invalid> <unexpected: [@372,1109:1112='eval',<117>,43:31], resync=sub say(object $z) {Console.WriteLine($z)};

[02:27] <p6eval> ..self.posies = List[object…

[02:27] <diakopter> oh eah

[02:27] <diakopter> yeah

[02:28] <dalek> sprixel: b7bca70 | diakopter++ | / (6 files):

[02:28] <dalek> sprixel: more regex work; re-fix eval

[02:28] <dalek> sprixel: review: https://github.com/diakopter/sprixel/commit/b7bca70cfa

[02:28] <diakopter> perlesque: my double $b; eval '$b = Syste' ~ 'm::Double.Parse("55' ~ '9165")'; say($b)

[02:28] <p6eval> perlesque: OUTPUT«␤Unhandled Exception: System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.␤  at System.Collections.Generic.Dictionary`2[System.String,sprixel.FrameGen].get_Item (System.String key) [0x00000] in <filename unknown>:0 ␤  at

[02:28] <p6eval> ..sprixel.Env.SetE…

[02:29] <diakopter> ergh

[02:29] <diakopter> oh, it can't find the "setting"

[02:30] <dalek> sprixel: f37db63 | diakopter++ | sprixel/ (2 files):

[02:30] <dalek> sprixel: help out p6eval a bit more

[02:30] <dalek> sprixel: review: https://github.com/diakopter/sprixel/commit/f37db63a1b

[02:32] <diakopter> :/

[02:32] *** stifynsemons joined
[02:34] *** chiehwen left
[02:36] *** TiMBuS left
[02:41] *** TiMBuS joined
[02:41] *** whiteknight left
[02:49] *** AphelionZ left
[02:56] <diakopter> S05 is out-of-sync with STD wrt :ignoremark (S05) vs. :ignoreaccent (STD) ... which is right and which is the fossil...?

[02:56] <diakopter> phenny: ask TimToady  S05 is out-of-sync with STD wrt :ignoremark (S05) vs. :ignoreaccent (STD) ... which is right and which is the fossil...?

[02:56] <phenny> diakopter: I'll pass that on when TimToady is around.

[03:04] *** rdesfo left
[03:06] *** agentzh joined
[03:19] *** donri joined
[03:29] *** cibs left
[03:30] *** cibs joined
[03:40] *** mtk left
[03:44] *** ggoebel joined
[03:46] *** mtk joined
[03:54] *** stifynsemons left
[04:04] <sorear> diakopter: STD is the fossil

[04:06] *** envi_ joined
[04:07] *** envi__ joined
[04:09] *** envi left
[04:10] *** donri left
[04:10] *** stifynsemons joined
[04:11] *** envi_ left
[04:18] *** satyavvd joined
[04:18] *** coldhead joined
[04:25] *** Su-Shee left
[04:28] *** Su-Shee joined
[04:31] *** kchevy joined
[04:31] <kchevy> any one wanna bb$

[04:31] <kchevy> bbm

[04:31] *** kchevy left
[04:32] *** gbacon left
[04:34] *** leprevost left
[04:35] *** leprevost joined
[04:35] <lue> is there a reason why    regex blankline {^^ \h* $$ \n}    never matches a blank line?

[04:37] *** stifynsemons left
[04:37] *** coldhead is now known as bot-t

[04:38] *** bot-t is now known as Guest82181

[04:39] <lue> Hm. I see the problem isn't with the regex itself...

[04:42] <lue> figured it out. Apparently a problem with what order I put the regexes in.

[04:45] *** Guest82181 is now known as coldhead

[04:48] <dalek> std: bacd722 | diakopter++ | STD.pm6:

[04:48] <dalek> std: fix STD fossil: ignoreaccent/sameaccent/a/aa -> ignoremark/samemark/m/mm   sorear++

[04:48] <dalek> std: review: https://github.com/perl6/std/commit/bacd722678

[04:50] *** Kingston44 joined
[04:54] *** am0c left
[05:06] *** Kingston44 left
[05:06] *** am0c joined
[05:07] *** stifynsemons joined
[05:14] *** cibs left
[05:19] *** cibs joined
[05:21] *** cibs left
[05:21] *** cibs joined
[05:35] *** masonkramer left
[05:41] *** plobsing left
[05:48] *** satyavvd left
[05:48] *** satyavvd joined
[05:49] *** AphelionZ joined
[05:51] <AphelionZ> I'm using proto to install perl6-lwp-simple and I'm getting this error: Unable to open filehandle from path 'projects.state'

[05:51] <AphelionZ> has anybody else seen that?

[05:55] *** kaare_ joined
[06:14] *** flatwhatson left
[06:15] *** sftp left
[06:16] *** cjk101010 joined
[06:17] *** kanishka joined
[06:26] *** flatwhatson joined
[06:27] *** flatwhatson_ left
[06:28] *** mberends left
[06:31] *** masak joined
[06:31] <masak> morning, zebras!

[06:32] <masak> just wanted to pop in and say $hi before the work week begins ;)

[06:35] <masak> AphelionZ: you should probably be using neutro nowadays.

[06:35] <masak> AphelionZ: proto is in a severe state of disrepair at this point.

[06:36] <AphelionZ> It was just suggested that I try neutro and now I get this error on osx: ethod 'postcircumfix:<{ }>' not found for invocant of class 'Failure'

[06:36] <masak> ok, that's at least easier to deal with.

[06:36] <masak> does it give you a file and line number with that?

[06:37] <AphelionZ> yeah, Code.pir:39

[06:37] <masak> huh.

[06:37] <TiMBuS> errr maybe a few more steps back down the backtrace?

[06:38] <masak> AphelionZ: please put up a nopaste of the whole sequence of events on gist.github.com for tadzik.

[06:39] <AphelionZ> Ok, np: https://gist.github.com/836735

[06:41] * masak goes to work

[06:41] *** masak left
[06:43] <TiMBuS> that seems pretty bad.. that there error

[07:03] *** stifynsemons left
[07:09] *** wtw joined
[07:18] <moritz_> good morning

[07:18] <sorear> hi moritz_

[07:19] <moritz_> diakopter: (backlog) :ignoremark is correct, anything with "accent" in its name is a fossile (not all marks are accents, so it was renamed)

[07:20] <sorear> looks like I'm not going to get a whole lot done on niecza this week

[07:21] <jdhore> I've gotta say, I miss a lot of the C-like stuff in P6.

[07:21] <sorear> "the C-like stuff"?

[07:23] <jdhore> C-style for loops, do {} while instead of repeat {} while, C-style ternary operator and all the bitwise operator changes.

[07:23] <jdhore> That's part of why I love Perl and i'm sad that its going.

[07:24] <jdhore> I mean i'm relatively sure that someone will add that all back as syntactic sugar with a module, but until that happens... :(

[07:24] <moritz_> you still got C-style for loops in p6, they are just spelled 'loop' (but otherwise same syntax)

[07:25] <jdhore> but no parens

[07:25] <jdhore> though close enough, i suppose

[07:26] <moritz_> rakudo: loop (my $x = 1; $x < 5; $x++) { say $x }

[07:26] <p6eval> rakudo 9ed54c: OUTPUT«1␤2␤3␤4␤»

[07:26] <moritz_> parens!

[07:27] <jdhore> oh, cool, in the wiki article it looked like no parens, though....

[07:27] <dalek> rakudo: 880a0a7 | moritz++ | src/Perl6/Grammar.pm:

[07:27] <dalek> rakudo: better error message for ?:

[07:27] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/880a0a75ee

[07:27] <dalek> rakudo: 050ce79 | moritz++ | src/Perl6/Grammar.pm:

[07:27] <dalek> rakudo: parse ff, ff^ etc. infix operators

[07:27] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/050ce797bb

[07:27] <jdhore> rakudo: loop my $x = 1; $x < 4; $x++ { say $x }

[07:27] <p6eval> rakudo 9ed54c: OUTPUT«===SORRY!===␤Missing block at line 22, near "my $x = 1;"␤»

[07:28] <moritz_> jdhore: don't trust that wiki too much :(

[07:28] <jdhore> Yeah, i think i'll register an account on the wiki and document that

[07:28] <jdhore> ah

[07:28] <sorear> jdhore: C-style for loops, test-at-end loops, ternary operator, bitwise operators are all still available in Perl 6

[07:29] <jdhore> sorear, I know they are, just the way of doing them has changed and i haven't seen what the reasoning for the change is.

[07:29] *** am0c left
[07:29] <sorear> jdhore: have you read the apocalypses yet?

[07:30] <jdhore> sorear, I just read the operators synopsis

[07:33] <jdhore> but the apocalypses don't seem to mention what i was referring to, except in saying: "By removing the C-like syntax stuff, we can drop the operator precedence table from 24 items to 18 items."

[07:33] <sorear> jdhore: the synopses say what changed, the apocalypes say why

[07:36] <sorear> A03 explains why ?: was changed

[07:36] <sorear> but I guess the bitop split came after A03 was finalized

[07:38] <sorear> Where did the synopses live prior to 20081126?

[07:38] <dalek> tpfwiki: JD++ | http://www.perlfoundation.org/perl6/index.cgi?perl_6_delta_tablet

[07:39] *** AphelionZ left
[07:40] <jdhore> ah, that explanation was quite nice

[07:40] <jdhore> with an explanation, it makes perfect sense

[07:40] <moritz_> sorear: in a dev.perl.org SVN repo

[07:40] <jdhore> OK, changed my nick on the wiki to my actual nick...I didn't think it'd report wiki changes here :D

[07:41] <sorear> moritz_: does the history for that still exist?

[07:41] * sorear -> sleep

[07:41] <moritz_> sorear: http://svn.perl.org/viewvc/perl6/doc/trunk/design/

[07:42] *** TiMBuS left
[07:42] *** TiMBuS joined
[07:48] *** flatwhatson_ joined
[07:58] *** justatheory left
[08:01] *** shi joined
[08:02] *** cosimo left
[08:05] <jdhore> Is there a list somewhere of what help is needed?

[08:10] *** f00li5h left
[08:11] *** xabbu42 left
[08:13] *** f00li5h joined
[08:16] *** Sarten-X left
[08:20] *** daxim joined
[08:28] <jnthn> morning o/

[08:28] *** Sarten-X joined
[08:31] *** dip joined
[08:31] *** am0c joined
[08:32] *** dip is now known as Guest62719

[08:32] *** Guest62719 left
[08:39] *** Sarten-X left
[08:43] <tadzik> hello zebras

[08:45] <tadzik> jnthn: you mean Rakudo help?

[08:47] <jnthn> tadzik: ...huh?

[08:48] <tadzik> ouch, tab fail

[08:48] <tadzik> jdhore: I mean you :)

[08:48] <tadzik> pardon jnthn 

[08:48] <jdhore> tadzik, Rakudo help, general P6 help, 

[08:48] <jdhore> Parrot help, i'm looking to help wherever i can

[08:49] <tadzik> jdhore: yesterday's bugfixing party was quite effective, if you ask me

[08:50] <jdhore> Well i was just curious if documentation help was needed or help testing on different platforms was needed or what.

[08:51] <tadzik> the general workflow is: 1) click on the random bug 2) if it seems fixed alredy, poke somebody on #perl6 3) if it's not, and it has no spectest, write a spectest for it and mark it todo 4) go to step one

[08:51] <tadzik> jdhore: do you have Ruby experience?

[08:52] <jdhore> A tiny bit, why?

[08:53] <tadzik> Cardinal development has quite moved forward recently, and there's lots of LHF around

[08:53] <tadzik> https://github.com/parrot/cardinal/tree/

[08:53] <tadzik> I got to fixing tests yesterday morning, and not only it was quite easy, it also gave a good results :)

[08:55] *** Sarten-X joined
[08:55] *** noganex_ is now known as noganex

[08:56] <tadzik> the easiest way of fixing tests is realizing 0 in Ruby is true, and every "if [CardinalInteger] ..." is broken :)

[08:56] <tadzik> anyway, you may want to join #cardinal on irc.perl.org

[08:58] *** JimmyZ joined
[08:58] <tadzik> or go on with closing Rakudo tickets, there are gazillions of them and my experience shows that they are often closable for they just started to work

[09:00] <dalek> bench-scripts: fb1820a | bacek++ | dice.pl:

[09:00] <dalek> bench-scripts: Use .roll instead of deprecated version of .pick(:replace)

[09:00] <dalek> bench-scripts: review: https://github.com/perl6/bench-scripts/commit/fb1820acc8

[09:03] *** dakkar joined
[09:10] <tadzik> bacek: well, that might not have been the best move

[09:11] <tadzik> bacek: see https://github.com/perl6/bench-scripts/pull/1

[09:13] *** f00li5h left
[09:21] *** tzhs joined
[09:24] *** _twitch joined
[09:24] *** dev_ joined
[09:24] *** f00li5h joined
[09:27] <bacek> tadzik, oops...

[09:27] <dalek> bench-scripts: e2f7fec | bacek++ | dice.pl:

[09:27] <dalek> bench-scripts: Revert "Use .roll instead of deprecated version of .pick(:replace)"

[09:27] <dalek> bench-scripts: 

[09:27] <dalek> bench-scripts: This reverts commit fb1820acc8fc79687528a3c9e697601245e72433.

[09:27] <dalek> bench-scripts: review: https://github.com/perl6/bench-scripts/commit/e2f7fecb9f

[09:33] <tadzik> bacek: TBH, I think actually commiting that is the best idea. Then we can think of a way to make it run under older Rakudos

[09:33] <tadzik> *If* anyone is gonna run this on old Rakudos anyway

[09:33] <bacek> tadzik, let's wait until next R* release. When is it btw?

[09:34] <jdhore> bacek, March 17

[09:35] <bacek> jdhore, less than a month. I can wait :)

[09:35] *** agentzh left
[09:35] <tadzik> is it? I think they are not monthly anymore

[09:36] <jdhore> oh, the next * release...I'm not sure

[09:36] <jdhore> It's less than 2 months, i know that, but i don't know when

[09:36] <tadzik> The next planned release of Rakudo Star will be 

[09:36] <tadzik> in April 2011.

[09:36] <tadzik> https://github.com/rakudo/star/blob/master/skel/docs/announce/2011.01

[09:37] <tadzik> bacek: ^

[09:37] <bacek> tadzik, hmmm...

[09:37] <jnthn> It's possible we do one sooner thanks to GenGC.

[09:37] <tadzik> aren't we waiting for 6model now?

[09:38] <Tene> https://github.com/mileszs/ack.vim is pretty awesome, btw

[09:39] <jdhore> My Rakudo release is now in my Google Calendar.....With every time reminder set my phone would let me.... :D

[09:39] <Tene> list matches from ack in a quickfix window in vim

[09:40] <jnthn> tadzik: Maybe, but OTOH holding back a 30%+ performance improvement from folks who use only the * releases feels...less than awesome.

[09:40] <tadzik> hmm

[09:41] *** tzhs left
[09:42] <Tene> jnthn: what's your estimated timetable for the nom branch, btw?

[09:43] *** tzhs joined
[09:43] <jdhore> what is the nom branch again? Porting Rakudo to nqp from nqp-rx??

[09:44] *** agentzh joined
[09:44] <Tene> jdhore: from nqp-rx to nqp on 6model

[09:45] <jdhore> ah

[09:46] *** flatwhatson_ left
[09:52] <Tene> phenny: tell masak to check out https://github.com/mileszs/ack.vim

[09:52] <phenny> Tene: I'll pass that on when masak is around.

[09:52] <Tene> phenny: thanks

[09:56] *** domidumont joined
[09:58] *** dev_ left
[09:58] *** gimix joined
[10:00] *** dev__ joined
[10:01] *** dev__ left
[10:02] *** _dev0_ joined
[10:02] *** _dev0_ left
[10:02] *** Rotwang joined
[10:03] *** _dev0_ joined
[10:06] *** countley left
[10:07] *** Trashlord left
[10:08] *** leprevost left
[10:08] *** countley joined
[10:12] *** awoodland joined
[10:13] *** JimmyZ left
[10:25] *** kanishka left
[10:28] *** lamstyle left
[10:29] <jnthn> Tene: Need to fix up a few other issues before I can really dig into it, but hope to have them dealt with in the next week or two. Hope to have it mergable by April.

[10:33] *** lamstyle joined
[10:35] <TiMBuS> IO::Socket::INET::open refuses to connect to anything. strange.

[10:36] <TiMBuS> Can't connect closed socket in 'IO::Socket::INET::open' at line 5882:CORE.setting

[10:37] <TiMBuS> hmmm that error isnt printed by rakudos code. must be a parrot issue

[10:38] *** coldhead left
[10:38] <jnthn> TiMBuS: On OSX?

[10:38] <TiMBuS> ubuntu

[10:38] <jnthn> ah

[10:38] <jnthn> I heard someone else had some socket issues recently...but thought they turned out to be OSX issues.

[10:38] <jnthn> *OSX-specific

[10:39] *** lamstyle left
[10:42] *** lamstyle joined
[10:44] <TiMBuS> errrr so in parrots code it spits that error of the socket is closed..

[10:44] <TiMBuS> isnt 'connect' how you open it

[10:47] <bacek> TiMBuS, it's .connect

[10:48] <TiMBuS> well yes

[10:49] <bacek> TiMBuS, .connect(SockAddr $addr)

[10:49] *** woosley left
[10:50] *** woosley joined
[10:50] <TiMBuS> yeah but the issue is the socket isnt 'open' which apparently means that the socket filehandle == PIO_INVALID_HANDLE

[10:51] <TiMBuS> according to all this source code im reading

[10:51] <TiMBuS> none of which is helping =/

[10:52] <TiMBuS> oh ok because in Parrot_io_socket_initialize_handle, it actually does: PARROT_SOCKET(socket)->os_handle = (PIOHANDLE)PIO_INVALID_HANDLE;

[10:53] <TiMBuS> what.

[10:53] <tadzik> :D

[11:04] *** drbean left
[11:28] *** agentzh left
[11:28] *** Sarten-X left
[11:36] *** Sarten-X joined
[11:40] *** Sarten-X left
[11:45] *** satyavvd left
[11:48] *** Sarten-X joined
[11:49] *** sftp joined
[12:03] *** stifynsemons joined
[12:08] *** drbean joined
[12:13] *** Vlavv left
[12:16] *** donri joined
[12:17] *** masonkramer joined
[12:26] *** Vlavv joined
[12:27] *** masonkramer left
[12:40] *** awoodland left
[12:55] *** donri left
[12:56] *** V15170R joined
[12:57] *** woosley1 joined
[12:58] *** Mowah joined
[12:59] *** Trashlord joined
[13:00] *** am0c left
[13:02] *** countley left
[13:04] *** countley joined
[13:08] *** condor_ joined
[13:11] <condor_> a

[13:13] *** condor_ is now known as asmc

[13:15] *** stifynsemons left
[13:15] *** bluescreen joined
[13:22] <asmc> test

[13:26] *** tzhs left
[13:29] <flussence> ok 1 -

[13:34] *** plobsing joined
[13:35] *** tzhs joined
[13:39] *** _dev0_ left
[13:43] *** gbacon joined
[13:46] *** condor_ joined
[13:49] *** kaare_ left
[13:57] *** donri joined
[13:58] <condor_> exit

[13:59] <donri> enter

[14:00] *** condor__ joined
[14:05] *** condor__ left
[14:06] *** condor__ joined
[14:11] *** condor__ left
[14:11] *** condor__ joined
[14:15] *** awoodland joined
[14:18] *** Axius joined
[14:18] *** condor__ left
[14:18] *** kaare_ joined
[14:22] *** risou joined
[14:31] *** tzhs left
[14:37] *** Kovensky left
[14:38] *** Trashlord left
[14:39] *** Koven joined
[14:41] *** Koven is now known as Kovensky

[14:53] *** MayDaniel joined
[14:55] *** PacoLinux joined
[14:56] <colomon> quiet here this morning.

[14:57] *** xinming left
[14:58] *** xinming joined
[14:58] * jnthn drops a pin

[14:59] *** risou left
[14:59] *** risou joined
[15:06] *** arlinius left
[15:09] *** kanishka joined
[15:09] * colomon wonders if he heard something

[15:10] *** lamstyle left
[15:12] *** am0c joined
[15:13] *** Sarten-X left
[15:16] *** lamstyle joined
[15:16] *** cjk101010 left
[15:19] *** lamstyle left
[15:20] *** countley left
[15:21] *** Sarten-X joined
[15:21] *** woosley left
[15:25] *** _twitch left
[15:28] *** wtw left
[15:31] *** lamstyle joined
[15:31] *** Sarten-X left
[15:35] *** noganex_ joined
[15:38] *** noganex left
[15:42] *** TiMBuS left
[15:45] *** fhelmberger left
[15:45] *** TiMBuS joined
[15:45] *** fhelmberger joined
[15:48] *** noganex_ left
[15:52] *** noganex joined
[15:54] *** JimmyZ joined
[15:55] *** Axius left
[15:56] *** masonkramer joined
[16:02] *** Sarten-X joined
[16:03] *** thepler joined
[16:04] *** V15170R left
[16:05] *** shi left
[16:11] *** Sarten-X left
[16:13] <sorear> good * #perl6

[16:16] *** Patterner left
[16:16] <JimmyZ> morning, sorear :)

[16:17] *** Psyche^ joined
[16:17] *** Psyche^ is now known as Patterner

[16:22] *** MayDaniel left
[16:24] *** AphelionZ joined
[16:25] *** woosley1 left
[16:28] *** kanishka1 joined
[16:28] *** kanishka1 left
[16:28] *** kanishka left
[16:32] *** JimmyZ left
[16:33] <moritz_> \o

[16:38] <jnthn> o/

[16:39] *** kanishka joined
[16:42] <donri> Anyone interested in a Perl 6 only reddit board?

[16:42] *** Sarten-X joined
[16:42] <donri> The Perl one has too much Perl 5 "noise" for me

[16:46] *** coldhead joined
[16:47] *** justatheory joined
[16:50] *** awwaiid joined
[16:50] *** kjeldahl joined
[16:51] <donri> I made one anyway, if anyone wish to help admin it tell me http://www.reddit.com/r/perl6/

[16:51] *** Sarten-X left
[16:54] *** risou left
[16:56] *** hanekomu joined
[16:57] *** risou joined
[17:00] *** risou left
[17:00] *** risou_ joined
[17:02] *** Sarten-X joined
[17:02] <moritz_> donri: so far we've published most Perl 6 stuff to r/programming/, because we want to reach those that aren't keen on Perl 6 yet (but hopefully will be soon)

[17:05] <donri> good point, though cross-posts are ok

[17:09] *** mberends joined
[17:12] *** Sarten-X left
[17:16] *** gbacon left
[17:16] *** _twitch joined
[17:17] *** am0c left
[17:19] <moritz_> I'll happily admin it, but I don't know yet how often I'll actually look at it

[17:19] <moritz_> (reddit nickname perlgeek)

[17:22] *** Sarten-X joined
[17:31] *** _twitch left
[17:32] *** Sarten-X left
[17:33] *** awoodland left
[17:35] *** _twitch joined
[17:35] *** masonkramer left
[17:36] *** masonkramer joined
[17:42] *** mtk left
[17:42] *** envi__ left
[17:49] *** jtbraun left
[17:50] *** mtk joined
[17:52] *** jtbraun joined
[17:53] *** Sarten-X joined
[17:54] *** jtbraun left
[17:54] *** rindolf joined
[17:54] * rindolf paws at the channel.

[17:54] <rindolf> Hi all.

[17:55] *** varna left
[17:55] <sorear> hello, rindolf

[17:55] <rindolf> sorear: what's up?

[17:56] *** MayDaniel joined
[17:58] *** cdarroch joined
[17:58] *** cdarroch left
[17:58] *** cdarroch joined
[18:02] *** Sarten-X left
[18:06] *** wrac joined
[18:07] *** nymacro left
[18:09] *** jtbraun joined
[18:11] *** _twitch left
[18:12] *** MayDaniel_ joined
[18:13] *** AphelionZ left
[18:15] *** _twitch joined
[18:15] <wrac> hello, "using perl 6" mentions pattern matching in decomposing nested structures by multis; however multi fun([$x, $x]) doesn't work "as expected"; i was looking in S-06 but failed. did i miss something? interestingly, the spec defines forms with arguments as constant values!

[18:15] *** MayDaniel left
[18:17] <PerlJam> wrac: you expected that multi to only execute when given, as the only argument, an array with 2 elements where the values of those 2 elements are exactly the same?

[18:17] <rindolf> PerlJam: hi, what's up?

[18:17] <rindolf> Wow! #perl6  is growing nicely - 231 nicks.

[18:18] <PerlJam> hey rindolf.  nothing much.  Killing time while I get some lunch before a code review.

[18:18] <wrac> yes, fun(1, 1)

[18:18] <wrac> but not fun(1, 2)

[18:18] <rindolf> PerlJam: ah.

[18:18] <PerlJam> wrac: you mean  fun [1,1]  or fun([1,1]) I t hink

[18:19] <wrac> sorry, fun([1,1]). you are right.

[18:20] <PerlJam> wrac: Well, I think the problem stems from mentioning $x twice.  You should be able however to do something like this:  multi fun([$x,$y] where { $x === $y }) { ... }

[18:21] <PerlJam> Choose your own equality there :)

[18:21] <PerlJam> I'm not sure if you meant "equal in value" or "identically the same"

[18:21] <PerlJam> maybe $x =:= $y is what you wanteD?

[18:22] *** MayDaniel_ left
[18:22] *** MayDaniel_ joined
[18:23] *** Sarten-X joined
[18:24] *** masak joined
[18:24] <masak> hola, zebras!

[18:24] <phenny> masak: 09:52Z <Tene> tell masak to check out https://github.com/mileszs/ack.vim

[18:24] <jnthn> lolitsmasak!

[18:24] <masak> \o/

[18:25] * masak , famished, makes nom

[18:27] *** Trashlord joined
[18:30] <wrac> i am newbe in p6 syntax, but probably here is the issue: fun([$x, $x]) would not specify exactly what "equality type" is expected, so such a construct is not present in the spec :( syntax with "where" clause is to much verbose.

[18:32] <dukeleto> jnthn: thanks for your recent email to parrot-dev about mop/role stuff :)

[18:32] *** Layla_91 joined
[18:32] *** Sarten-X left
[18:33] <sorear> FWIW, Miranda supported $x, $x pattern matching, but it was dropped from Haskell because making it DWIM in a majority of cases proved impossible

[18:34] <PerlJam> wrac: the where clause is verbose for a reason.  It lets you be explicit.

[18:39] *** Chillance joined
[18:39] <jnthn> Добрый вечер, Layla_91 o/

[18:40] <sorear> rindolf: The sky?  I never know how to answer that question.

[18:40] <jnthn> sorear: I had some thoughts on subset stuff but it's...not very coherent. Yet. :)

[18:40] <Layla_91> jnthn: prevet.. I have cold.. home all day :''(

[18:40] <jnthn> sorear: I'll try and figure something useful out in the next day or so. The way the type cache stuff is at the moment isn't...quite right.

[18:41] <jnthn> Layla_91: Aww. :(

[18:41] <jnthn> Layla_91: Чай. With lemon. :)

[18:41] <rindolf> sorear: never mind, bye for now.

[18:41] <rindolf> Enough talk for me.

[18:42] <Layla_91> jnthn: Already had few.. also I learned some perl6 during the day.. read some of your slides too :)

[18:42] *** rindolf left
[18:42] <wrac> trying this fun([$x, $x]) i meant erlang, but in "complexity" perl6 is closer to haskell, so the choice is probably justified. erlang is rather pragmatic.

[18:43] <masak> wrac: what is it that you're trying to do?

[18:43] <jnthn> Layla_91: Not heard people using my slides as a cold remedy before. :)

[18:43] <PerlJam> wrac: does erlang do "value matching" with that?

[18:43] <jnthn> Layla_91: Hope they made some sense. :)

[18:43] *** Sarten-X joined
[18:43] <jnthn> Layla_91: It's nearly conference season again. I have to make some new talks. :O

[18:44] *** daxim left
[18:44] <Layla_91> jnthn: they made a lot of sense.. I like the fact that they were short but informative.. 

[18:45] <jnthn> That's what I try for :)

[18:45] <Layla_91> jnthn: I don't like long books.. or those with no cartoons =]

[18:45] <jnthn> Layla_91: I actually did one talk with some silly stick-man cartoons recently, though it wasn't about Perl. :)

[18:46] <PerlJam> Layla_91: Does that mean we should start writing the "Cartoon Guide to Perl 6"   ;-)

[18:46] <masak> "Zebra's Guide to Perl 6" :)

[18:46] <PerlJam> masak++

[18:46] <masak> with cartoon zebras!

[18:47] <Layla_91> jnthn: I thrown an idea few days ago about creating something like Why's (Poignant) Guide to Ruby.. 

[18:47] <masak> actually it was Layla_91++/tadzik++'s idea.

[18:47] <jnthn> Watched over by Henry the Hyper Op, and Perry the Pointy Block \o/

[18:47] <jnthn> Layla_91: I think some people are tempted to catch it ;)

[18:47] <Layla_91> jnthn: yes masak said he is a great artist and will provide the cartoons :P

[18:48] <jnthn> masak++

[18:48] <jnthn> ;)

[18:48] <masak> hey! :P

[18:49] *** molaf_ left
[18:49] <Layla_91> it really makes a lot of difference when you read something that have some humor.. like the lisp book published by oreilly.. I loved lisp after checking it =)

[18:50] *** hanekomu left
[18:50] *** _dev0_ joined
[18:50] <jnthn> Layla_91: Whenever I hear "lisp" and "humor" I can't help but remember http://xkcd.com/297/ :)

[18:51] <tadzik> hey hey :)

[18:51] <Layla_91> jnthn: XD

[18:51] <jnthn> o/ tadzik 

[18:51] <Layla_91> tadzik: heey! :D

[18:52] <Layla_91> jnthn: Perl6 have Camelia.. which is a good start :)

[18:52] <jnthn> camelia++

[18:53] *** Sarten-X left
[18:53] <Layla_91> jnthn: and I think I have fever++

[18:53] <jnthn> Layla_91: I think the only thing that's ++ about a fever is $layla.temperature

[18:53] <jnthn> :/

[18:54] <Layla_91> yes.. we need a loop to decrease it or I will die with a bad exit message :(

[18:54] <jnthn> ...please don't. :'(

[18:54] <jnthn> I'd kinda miss you a bit. :P

[18:54] *** gbacon joined
[18:55] <Layla_91> jnthn: aww :P

[18:55] <Layla_91> jnthn: I think there is anothe comic I saw long time ago about lisp and perl on xkcd.. moment..

[18:56] <jnthn> Ah, the one about the dude who thought the universe was written in lisp, but then God is all like "lol no, we hacked it up in Perl"? :)

[18:56] <Layla_91> jnthn: yes yes :D

[18:56] <jnthn> :D

[18:57] <Layla_91> Lemons and tea are not working.. I must visit a doctor.. see you all soon :)

[18:58] <jnthn> Layla_91: Take care! Get well soon! *hug*

[18:58] <tadzik> hugme: hug Layla_91 

[18:58] * hugme hugs Layla_91

[18:58] * tadzik hugs too

[18:59] *** Layla_91 left
[19:02] <wrac> PerlJam: sorry for delay... the identity.

[19:03] *** Sarten-X joined
[19:03] *** MayDaniel_ left
[19:04] *** jtbraun left
[19:07] *** risou_ left
[19:12] *** bluescreen left
[19:13] *** Sarten-X left
[19:24] *** shi joined
[19:27] *** bluescreen joined
[19:29] *** jtbraun joined
[19:31] *** hanekomu joined
[19:34] *** Sarten-X joined
[19:41] *** molaf joined
[19:43] *** Sarten-X left
[19:46] *** bluescreen left
[19:53] *** Sarten-X joined
[19:53] *** kanishka left
[19:54] *** Tedd1 left
[19:54] *** Tedd1 joined
[19:57] *** fhelmberger left
[19:58] <wrac> PerlJam: correction: erl's =:= is called "exactly equals to" and pretty much behaves as "value matching" (1 is not exactly the same as 1.0, but for two distinct lists =:= yields true if both lists "look exactly the same").

[20:02] <jnthn> In Perl 6 it's more object reference equality.

[20:03] *** condor_ left
[20:03] *** Sarten-X left
[20:06] *** jtbraun1 joined
[20:07] *** asmc left
[20:14] *** Sarten-X joined
[20:15] *** _twitch left
[20:23] *** Sarten-X left
[20:24] *** vmspb joined
[20:24] *** mberends left
[20:25] *** MayDaniel joined
[20:32] *** icwiener joined
[20:34] *** Sarten-X joined
[20:36] <moritz_> in Perl 6 structure equivalence is called infix eqv

[20:36] <moritz_> and =:= tests if tow containers are really the same

[20:43] *** Sarten-X left
[20:44] <jnthn> rakudo: say [1,[2,3]] eqv [1,[2,3]]; say [1,[2,3]] =:= [1,[2,3]]

[20:44] <p6eval> rakudo 050ce7: OUTPUT«Bool::True␤0␤»

[20:44] <jnthn> 0?

[20:45] * masak submits rakudobug

[20:46] *** jaldhar left
[20:46] *** wrac left
[20:47] *** jaldhar joined
[20:49] *** molaf left
[20:49] <moritz_> =:= is broken anyway in rakudo

[20:50] <masak> oh?

[20:50] <tadzik> stop it masak! We haven't fixed the old bugs yet!

[20:50] <moritz_> rakudo: my $x := my $y; say $x =:= $y

[20:50] <p6eval> rakudo 050ce7: OUTPUT«0␤»

[20:50] <jnthn> :/

[20:50] <moritz_> rakudo: my $x; sub f($y) { say $x =:= $y }; f($x)

[20:50] <p6eval> rakudo 050ce7: OUTPUT«0␤»

[20:51] <masak> tadzik: if that had been a concern of mine... :P

[20:51] <masak> let's just say I'd be very concerned right now.

[20:51] <jnthn> That second one surprises me a tad less, though I suspect it's still wrong.

[20:51] <moritz_> or put another way, I don't know any case where =:= actually returns true

[20:51] <jnthn> The first is because binding in Rakudo is a bit icky.

[20:52] <jnthn> I suspect we should just compile scalar bindings like we do in NQP.

[20:53] *** jaldhar left
[20:56] *** jaldhar joined
[21:03] *** cognominal left
[21:04] *** Sarten-X joined
[21:14] *** Sarten-X left
[21:17] *** MayDaniel left
[21:19] <tadzik> what holds command-line arguments in nqp?

[21:24] *** s1n left
[21:24] *** Sarten-X joined
[21:34] *** Sarten-X left
[21:40] *** s1n joined
[21:42] <moritz_> I don't even know if that's available

[21:42] <moritz_> at least I never managed to actually grok the code path of command line arguments in HLL::Compiler

[21:44] *** y3llow_ joined
[21:45] <moritz_> nqp: class A { method foo { say 3 } }; A."foo"()

[21:45] *** Sarten-X joined
[21:45] <p6eval> nqp: OUTPUT«Routine declaration requires a signature at line 1, near "{ say 3 } "␤current instr.: 'parrot;HLL;Grammar;panic' pc 17541 (gen/hllgrammar-grammar.pir:4828)␤»

[21:45] *** pothos_ joined
[21:45] <moritz_> nqp: class A { method foo() { say 3 } }; A."foo"()

[21:45] <p6eval> nqp: OUTPUT«Unable to parse blockoid, couldn't find final '}' at line 1␤current instr.: 'parrot;Regex;Cursor;FAILGOAL' pc 3435 (src/Regex/Cursor.pir:233)␤»

[21:45] <moritz_> nqp: class A { method foo() { say 3 } }; 

[21:45] <p6eval> nqp: OUTPUT«Unable to parse blockoid, couldn't find final '}' at line 1␤current instr.: 'parrot;Regex;Cursor;FAILGOAL' pc 3435 (src/Regex/Cursor.pir:233)␤»

[21:45] <moritz_> nqp: class A { method foo() { say(3) } }; A."foo"

[21:45] <p6eval> nqp: OUTPUT«Quoted method name requires parenthesized arguments at line 1, near ""␤current instr.: 'parrot;HLL;Grammar;panic' pc 17541 (gen/hllgrammar-grammar.pir:4828)␤»

[21:45] <moritz_> nqp: class A { method foo() { say(3) } }; A."foo"()

[21:45] <p6eval> nqp: OUTPUT«3␤»

[21:45] *** tewk joined
[21:47] *** pothos left
[21:47] *** pothos_ is now known as pothos

[21:47] *** y3llow left
[21:47] *** y3llow_ is now known as y3llow

[21:47] <tewk> Where do I look to find a spec for non-blocking io

[21:47] <moritz_> nqp: for [1, 2, 3] { say($_); last }

[21:47] <p6eval> nqp: OUTPUT«1␤»

[21:48] <moritz_> tewk: there's none yet :(

[21:48] <tewk> What about blocking file io? 

[21:49] *** vmspb left
[21:49] <moritz_> S32/IO

[21:50] <moritz_> http://perlcabal.org/syn/S32/IO.html but don't believe everything that's written there

[21:50] <moritz_> it's a mixture of practical stuff, overengineered stuff and underengineered stuff

[21:50] <masak> and wishful thinking.

[21:51] *** kaare_ left
[21:53] *** s1n left
[21:54] *** Sarten-X left
[21:54] *** molaf joined
[21:55] *** shi left
[21:59] <masak> 'night, #perl6

[21:59] *** masak left
[22:00] *** s1n joined
[22:03] *** starcoder left
[22:07] <dalek> nqp: 9a7d4a9 | moritz++ | src/HLL/Compiler.pm:

[22:07] <dalek> nqp: move some code in HLL::Compiler.compile from PIR to NQP

[22:07] <dalek> nqp: review: https://github.com/perl6/nqp/commit/9a7d4a9a92

[22:07] <dalek> nqp: 05b3461 | moritz++ | src/HLL/Compiler.pm:

[22:07] <dalek> nqp: rewrite method compile in NQP. A bit shorter now :-)

[22:07] <dalek> nqp: review: https://github.com/perl6/nqp/commit/05b3461477

[22:07] <dalek> nqp: e659566 | moritz++ | src/stage0/ (4 files):

[22:07] <dalek> nqp: update bootstrap

[22:07] <dalek> nqp: review: https://github.com/perl6/nqp/commit/e659566f02

[22:07] *** jtbraun left
[22:08] *** jtbraun1 left
[22:09] *** starcoder joined
[22:10] *** jtbraun joined
[22:11] <lue> hello! o/

[22:12] *** cschimm1 left
[22:13] *** cschimm1 joined
[22:13] *** Kovensky left
[22:14] <moritz_> \o

[22:15] *** Sarten-X joined
[22:15] *** s1n left
[22:15] *** awoodland joined
[22:16] *** s1n joined
[22:17] *** jtbraun left
[22:17] <tadzik> o/

[22:21] *** cschimm1 left
[22:22] *** dakkar left
[22:24] <lue> Can anyone tell me why this grammar will parse only one pod6 block, and stops? https://gist.github.com/837820

[22:24] *** Sarten-X left
[22:31] *** cschimm1 joined
[22:31] *** kjeldahl left
[22:31] <jnthn> lue: I don't see it immediately.

[22:32] <jnthn> lue: Only guess is it could be some curious interaction with $$ \n and then wanting a ^^ but I'd expect that to work.

[22:32] <tadzik> oh, jnthn. Are you aware of any way to access command-line arguments from nqp?

[22:33] <jnthn> tadzik: 'fraid not.

[22:33] *** plobsing left
[22:33] <jnthn> tadzik: Guess it'd be nice if they were in @*ARGS

[22:34] *** Kovensky joined
[22:35] *** plobsing joined
[22:37] <tadzik> nqp: @*ARGS

[22:37] <p6eval> nqp: OUTPUT«Contextual @*ARGS not found␤current instr.: '_block11' pc 0 (EVAL_1:26684416)␤»

[22:37] <tadzik> hmm

[22:37] <jnthn> Yeah, NYI

[22:39] *** Koven joined
[22:39] *** Kovensky left
[22:40] <tadzik> jnthn: http://wklej.org/id/480224/ -- does anything look wrong to you here?

[22:40] <tadzik> Null PMC access in find_method('new_class') is what I get

[22:41] <jnthn> new_class?

[22:41] <tadzik> yeah

[22:41] <jnthn> I'm guessing this is using something that used P6metaclass?

[22:41] <jnthn> What is Deprecations.pbc written with?

[22:41] <jnthn> nqp-rx?

[22:41] <tadzik> here's the module: http://wklej.org/id/480227/

[22:41] <tadzik> yeah, nqprx

[22:41] <jnthn> oh

[22:41] <jnthn> Then I suspect you need before load_bytecode of the Deprecations PBC to

[22:42] <jnthn> load_bytecode 'P6object.pbc'

[22:42] <jnthn> I think that's what it's called, anyways. :)

[22:43] *** hanekomu left
[22:43] *** cosimo joined
[22:43] *** lue left
[22:44] *** lue joined
[22:44] *** woosley joined
[22:45] <tadzik> yeah, now it fails due to 'parrot;YAML;Tiny;read_string', so my part is over (:

[22:45] *** Sarten-X joined
[22:48] <tadzik> bacek: you around?

[22:48] <tadzik> oh, wrong channel

[22:48] *** wolverian left
[22:54] *** wolverian joined
[22:54] *** Sarten-X left
[22:59] *** jtbraun joined
[23:04] <lue> afk

[23:09] *** whiteknight joined
[23:15] *** Sarten-X joined
[23:17] *** woosley left
[23:25] *** Sarten-X left
[23:27] *** Mowah left
[23:27] *** Mowah joined
[23:28] *** MayDaniel joined
[23:37] *** aesop left
[23:39] *** Mowah left
[23:40] <donri> Perl 6 code looks better with Perl 5 coloring in Vim :(

[23:41] <Tene> donri: better than the perl 6 coloring?

[23:41] <donri> Yea

[23:41] <Tene> Huh.  That hasn't been my experience.

[23:41] <donri> Maybe it's my colorscheme

[23:43] <wolverian> I think the perl 6 colouring had some weird choices,

[23:43] <sorear> perl 6 coloring in vim gets to be unusably laggy at around 2000 lines on my 2003 PC

[23:43] <Tene> donri: I'm using the zenburn colorscheme, and before that was desert

[23:44] <sorear> so I've learned to deal with perl 5 coloring

[23:44] <donri> Yea. It gets more syntax right, but uses weird colors for some things

[23:44] <sorear> I guess because p5 is easier to lex

[23:44] <Tene> sorear: I've seen that too, although not unusably so.

[23:44] <sorear> Tene: every. single. time. I add or delete a character, 500ms to recolorize the file :/

[23:45] *** aesop joined
[23:46] <donri> also I wish it would trigger perl6 ft for "use v6"

[23:47] <tadzik> sorear: same here (lagging)

[23:47] *** alester left
[23:48] <sorear> I guess not many people routinely edit 2000+ line Perl 6 files

[23:52] <flussence> it becomes pretty unusable a lot sooner than that on my netbook

[23:55] <flussence> the template toolkit tt2html.vim is just as slow for me though. wonder if they have anything in common...

[23:56] <flussence> (apart from the slow scripting engine :)

