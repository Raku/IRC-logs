[00:10] *** Rotwang joined
[00:11] *** donri left
[00:18] *** Moukeddar_ joined
[00:22] *** Moukeddar left
[00:29] *** Rotwang left
[00:55] *** Moukeddar_ left
[00:58] *** cdarroch left
[01:07] *** rublind joined
[01:07] *** whiteknight joined
[01:08] *** rublind left
[01:37] <Tene> Anyone here know anyone looking for work?

[01:39] *** rdesfo left
[02:05] *** whiteknight left
[02:07] *** lichtkind left
[02:11] *** alester joined
[02:13] *** Chillance left
[02:14] <perigrin> Tene: autarch is looking for work

[02:25] *** envi joined
[02:54] *** leprevost joined
[03:06] *** bacek left
[03:07] *** bacek joined
[03:07] <aesop> Tene: what kind

[03:09] *** risou joined
[03:09] <Tene> aesop: linux sysadmin, lots of automation written in perl

[03:10] <aesop> full time?

[03:10] <Tene> Yes.

[03:11] <aesop> argh

[03:11] <aesop> i've been looking for something to do on the side

[03:12] <Tene> although, we're getting pretty desperate, so we're trying to consider how to expand our candidate pool.  They've had bad experiences with telecommuting before, but I'm trying to talk them into it, as it's not going to be worse than staying understaffed. :P

[03:13] <Tene> I hadn't heard anyone suggest part-time contracts, though.

[03:13] <Tene> I'll bring it up.

[03:14] <aesop> yea, if the scheduling for the position changes ping me in here, i might be available for it

[03:21] *** jaldhar joined
[03:23] *** Su-Shee_ joined
[03:27] *** Su-Shee left
[03:42] *** ruben1194navarr1 joined
[03:45] *** ruben1194navarro left
[03:59] *** hudnix left
[04:04] *** leprevost left
[04:19] *** orafu left
[04:22] *** orafu joined
[04:35] *** xinming left
[04:35] *** xinming joined
[04:41] *** risou left
[04:41] *** risou joined
[04:44] *** ruben1194navarro joined
[04:44] *** newtonrunz joined
[04:46] *** ruben1194navarr1 left
[04:48] *** risou_ joined
[04:50] *** bacek left
[04:51] *** risou left
[05:01] *** alester left
[05:11] *** coldhead left
[05:13] *** risou_ left
[05:15] *** Khisanth left
[05:19] *** justatheory left
[05:29] *** Khisanth joined
[05:41] *** risou joined
[05:42] *** Enzo joined
[05:47] *** ruben1194navarr1 joined
[05:50] *** ruben1194navarro left
[05:50] *** risou left
[05:53] *** risou joined
[05:54] *** molaf__ left
[06:16] *** masak joined
[06:16] <masak> lol hi from a train

[06:17] <sorear> how does that work?  satellites?

[06:17] <sorear> broadband over third rail? :)

[06:17] <masak> :P

[06:18] <masak> i have a little Huawei device that I plug in, like almost everyone nowadays.

[06:18] <masak> the little Huawei device... I don't know what it communicates with. but probably ordinary ground stations.

[06:19] <masak> I think it's slightly uncanny, because I plug it in right next to my left hand, and it emits a very faint but detectable heat field.

[06:21] <sorear> like radiative/convective heating, or like your hand is absorbing the transmitter radiation?

[06:21] <masak> the former.

[06:25] *** coldhead joined
[06:25] *** masak left
[06:29] *** risou left
[06:36] *** jaldhar left
[06:36] *** jaldhar joined
[06:39] *** ruben1194navarr1 left
[06:40] *** masak joined
[06:40] <masak> bah, tunnels.

[06:40] *** Helios` left
[06:41] *** Helios` joined
[06:42] *** donri joined
[06:44] <lestrrat> hmm, not quite getting how p6 handles parameters. sometime I get [ ( ... ) ] instead of [ ... ]  (1 element seq of seq, insead of the entire seq) when I pass arguments to my object constructor.

[06:44] <lestrrat> is there a general guideline for passing around parameters sot that they DWIM ?

[06:45] <lestrrat> not quite groking the conversion...

[06:46] <masak> lestrrat: I recognize what you're describing.

[06:46] <masak> lestrrat: it all comes down to signature binding being... binding.

[06:46] *** birdwindupbird joined
[06:47] <lestrrat> I guess if I'm writing my own sub, I can just do stuff like *@list or whatever, but how do you handle it when you're passing stuff to your constructor?

[06:48] <lestrrat> in simple case, this worked for me : class Foo { @.list };    Foo.new( list => (...) )

[06:48] <lestrrat> but then I started making object factories, and things started getting hairy.

[06:48] <lestrrat> say, Factory.create_foo( args_for_foo1 => { list => (...) } )

[06:49] <lestrrat> I then tried iterating for @.list -> $v, and $v contains the entire list instead of the listing being initialized with the values

[06:49] <lestrrat> I might be approaching this too P5-ish, but ... just not groking it :)

[06:50] <masak> I think you're doing fine.

[06:50] <masak> at this point, a gist from you with a minimal piece of code would help me.

[06:51] <lestrrat> yeah I know. I wrote a rather long hairy piece of code, so I'm having problems extracting a minimal case :)

[06:51] <lestrrat> will try though.

[06:51] <masak> it's usually possible.

[06:56] <lestrrat> masak: https://gist.github.com/938427

[06:57] *** masak left
[06:57] *** masak joined
[06:58] <lestrrat> masak: https://gist.github.com/938427 (repost just in case)

[07:01] <lestrrat> afk

[07:02] *** mj41 joined
[07:04] *** masak left
[07:05] <lestrrat> man, damn the train :)

[07:06] *** nymacro joined
[07:11] *** bacek joined
[07:23] *** envi left
[07:24] *** envi joined
[07:35] *** masak joined
[07:36] <masak> lestrrat: I think your expectation is a very reasonable one.

[07:36] <masak> partly because I'm sometimes bitten by this one myself :)

[07:38] <masak> lestrrat: here's my previous take on it: http://rt.perl.org/rt3/Ticket/Display.html?id=67872

[07:38] <masak> no, wait. that one was resolved.

[07:39] <masak> hm. it's not this one either.

[07:39] <masak> http://rt.perl.org/rt3/Ticket/Display.html?id=76242

[07:40] <masak> I know there was a spec change involved. maybe I can find it that way.

[07:41] <masak> it was around March last year, because I was discussing this in the car with jnthn and mberends while jnthn was moving house.

[07:43] *** coldhead left
[07:45] <masak> ah. here is the spec commit: https://github.com/perl6/specs/commit/74206e4f188a6d3559f34cba158ec8c13774c18d

[07:48] *** Axius joined
[07:49] <lestrrat> does that mean you need to bind the parameters via ref binding in order to achieve what I'm trying to do?

[07:50] *** Su-Shee_ is now known as Su-Shee

[07:52] *** masak left
[07:54] *** Axius left
[07:59] <moritz> you can try @.list.list

[07:59] <moritz> not sure if it helps, or if it is what you want

[07:59] <moritz> I find the behavior weird too

[08:25] *** pmurias joined
[08:31] *** mj41 left
[08:53] *** mj41 joined
[08:59] *** mj41 left
[09:03] *** yegor joined
[09:10] *** yegor left
[09:18] <dalek> niecza: 90a60f5 | pmurias++ | hoopl/.gitignore:

[09:18] <dalek> niecza: [hoopl] added .gitignore

[09:18] <dalek> niecza: review: https://github.com/sorear/niecza/commit/90a60f5c8e

[09:18] <dalek> niecza: 4db171f | pmurias++ | hoopl/ (5 files):

[09:18] <dalek> niecza: [hoopl] simple-test/if.t is converted to Op

[09:18] <dalek> niecza: review: https://github.com/sorear/niecza/commit/4db171ff88

[09:39] <lestrrat> hmm, I can't really find a way to do what I want other than creating a BUILD that flattens the incoming list

[09:52] *** IllvilJa left
[10:07] *** woosley joined
[10:15] *** bacek left
[10:21] *** mj41 joined
[10:25] *** dorlamm joined
[10:39] *** f00li5h left
[10:39] *** MayDaniel joined
[10:46] *** Axius joined
[10:47] *** dorlamm left
[10:55] *** f00li5h joined
[10:55] *** bacek joined
[10:56] *** bacek left
[10:56] *** bacek joined
[11:01] *** Bucciarati joined
[11:03] *** donri left
[11:06] *** yegor joined
[11:09] *** MayDaniel left
[11:15] *** Axius left
[11:17] *** whiteknight joined
[11:19] *** icwiener joined
[11:19] *** icwiener left
[11:19] *** icwiener joined
[11:26] <jnthn> afternoon, #pelr6

[11:26] <jnthn> ...oops :)

[11:27] <Juerd> Is that the secret channel? :)

[11:28] <jnthn> ;)

[11:39] *** hudnix joined
[11:41] *** mj41 left
[11:46] *** tewk joined
[11:47] *** Solarion left
[11:47] *** Solarion joined
[11:55] *** Patterner left
[11:57] *** Psyche^ joined
[11:57] *** Psyche^ is now known as Patterner

[12:18] *** pmurias left
[12:19] *** Bzek left
[12:19] *** risou joined
[12:19] *** bacek left
[12:27] *** Chillance joined
[12:45] *** am0c joined
[12:53] *** MayDaniel joined
[13:02] *** birdwindupbird left
[13:19] *** risou_ joined
[13:22] *** risou left
[13:39] *** skangas_ joined
[13:40] *** Tedd1 left
[13:41] *** Tedd1 joined
[13:41] *** skangas left
[13:41] *** skangas_ is now known as skangas

[13:51] *** whiteknight left
[13:58] *** Helios` left
[14:00] *** Helios` joined
[14:11] *** woosley left
[14:17] *** MayDaniel left
[14:22] *** risou joined
[14:22] *** JimmyZ joined
[14:23] *** risou_ left
[14:23] <JimmyZ> good evening, #perl6

[14:24] <moritz> \o

[14:44] *** am0c left
[14:50] *** krakan joined
[14:56] *** krakan left
[14:57] *** am0c joined
[14:58] *** isBEKaml joined
[14:59] <isBEKaml> good *, #perl6! 

[15:08] <sjn> heh

[15:09] <sjn> I actually read that as "good Whatever"

[15:09] * sjn is obviously damaged already

[15:09] <isBEKaml> sjn: * holds your boat. :)

[15:10] <sjn> meh, *

[15:10] <sjn> :)

[15:10] * sjn wonders if there's a "meh" operator or method, and what it would do

[15:11] <sjn> maybe "meh" would just be an alias for "Whatever"? :)

[15:11] <isBEKaml> you could add that to ouch.pm, yeah. :)

[15:18] *** JimmyZ left
[15:19] *** JimmyZ joined
[15:20] <sorear> \o/ I started a meme

[15:21] <isBEKaml> sorear: \\o

[15:22] *** justatheory joined
[15:23] *** risou_ joined
[15:25] *** Helios` left
[15:25] *** risou left
[15:26] *** Helios` joined
[15:28] *** birdwindupbird joined
[15:29] *** JimmyZ left
[15:30] <moritz> sjn: I think 'good *' was actually meant as 'good Whatever', given that people have different timezones, so wishing a good morning would be off in most parts of the world

[15:31] <isBEKaml> mostly like good localtime() used by moritz++ . :)

[15:34] <isBEKaml> however, people in eastern timezones have it easy - they just have to wish "good evening" and chances are, they'd not be far off the mark. unless you count alaska. :)

[15:39] <moritz> or you can answer with the canonical "it's always morrning somewhere" - still I like 'good *' :-)

[15:40] <sorear> I did start that one, right?

[15:41] *** krakan joined
[15:41] <moritz> sorear: yes

[15:42] <isBEKaml> irc and timezones remind me of a certain blog I read. It talked about introducing new devs into their projects by organiziing a build-it conference or something. It included GNOME Vidalia team too, I think. 

[15:45] <isBEKaml> ah, here it is: http://blog.lydiapintscher.de/2011/04/18/how-vidalia-and-gimp-found-new-contributors-just-by-asking/

[16:10] *** fglock joined
[16:25] *** pmurias_ joined
[16:26] *** pmurias_ left
[16:26] *** pmurias joined
[16:26] <pmurias> fglock: hi

[16:27] <fglock> pmurias: hi

[16:27] <pmurias> fglock: how's perlito doing?

[16:28] <fglock> I've released version 7.0 - I think it looks ok :)

[16:29] <pmurias> do you use it for anything?

[16:30] <pmurias> fglock: it's released as v6 on CPAN?

[16:30] <fglock> nferraz is trying to use it for programming an app in the iPhone, but I don't use it myself

[16:30] <fglock> yes - v6.pm in cpan

[16:30] <fglock> I've used your code to make it more generic

[16:30] <fglock> so it can also use other backends

[16:31] <pmurias> fglock: he is using the js backend?

[16:31] <fglock> yes, with Titanium

[16:32] <fglock> http://www.appcelerator.com/products/titanium-mobile-application-development/

[16:36] <pmurias> fglock: will you be at YAPC::EU?

[16:38] <fglock> hmm - probably not, but I haven't decided yet

[16:39] <fglock> are you going?

[16:41] <pmurias> yes

[16:51] <pmurias> fglock: you now live in the Netherlands?

[16:53] <fglock> yes, I'm in Amsterdam

[16:53] <moritz> at booking.com?

[16:53] <fglock> yes

[16:53] * moritz wonders if there any perl hackers in Amsterdam *not* working for booking :-)

[16:53] <fglock> yes, there are :)

[16:59] *** Vlavv_ joined
[17:03] *** Vlavv left
[17:09] <sorear> WOAH!

[17:09] <sorear> fglock \o/

[17:10] *** hudnix left
[17:10] <tadzik> fglock: working with Bruno?

[17:12] <fglock> tadzik: yes

[17:12] <fglock> sorear: hi

[17:13] *** Axius joined
[17:14] *** mj41 joined
[17:18] <fglock> sorear: somebody asked me about Perl 6 for the Windows phone, I've pointed out to Niecza

[17:18] <sorear> Perl 6 exists offline now?

[17:18] <fglock> offline?

[17:19] *** Axius left
[17:19] <sorear> outside #perl6 / perl.org ezmlm

[17:19] <fglock> heh - yes, it does

[17:20] <fglock> many people can't stay online, I guess

[17:29] *** isBEKaml left
[17:31] <dalek> sprixel: db6b67f | diakopter++ | / (7 files):

[17:31] <dalek> sprixel: add simple scalar variable interpolation into string literals; add modulus operator

[17:31] <dalek> sprixel: review: https://github.com/diakopter/sprixel/commit/db6b67f1d7

[17:32] *** risou_ left
[17:42] <dalek> sprixel: c73fd92 | diakopter++ | sprixel/src/ (3 files):

[17:42] <dalek> sprixel: interpolate only in double-quoted strings

[17:42] <dalek> sprixel: review: https://github.com/diakopter/sprixel/commit/c73fd9203f

[17:49] <fglock> hmm - the compiler in Perlito is now 5 years old

[17:49] <fglock> it is based on lrep, which started about february or march 2006

[17:52] * pmurias remembers lrep

[17:52] <sorear> lrep?

[17:52] <pmurias> it was used to bootstrap mp5

[17:52] <pmurias> * mp6

[17:53] <pmurias> mp6 then evolved into kp6 (which died) and perlito (which lives on)

[17:58] * sorear is very new here

[18:08] *** birdwindupbird left
[18:10] <dalek> nqp/ctmo: d59b19a | jonathan++ | src/ (3 files):

[18:10] <dalek> nqp/ctmo: Pass along current view of $*GLOBALish to module loader. Needs to be optional param now until we take another trip around the bootstrapper.

[18:10] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/d59b19ac5d

[18:10] <dalek> nqp/ctmo: 22efd68 | jonathan++ | src/stage0/ (6 files):

[18:10] <dalek> nqp/ctmo: Update bootstrap.

[18:10] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/22efd687c6

[18:10] <dalek> nqp/ctmo: 184a976 | jonathan++ | src/ModuleLoader.pm:

[18:10] <dalek> nqp/ctmo: The dumbest GLOBAL merger that could possibly work (TM). Seems it actually will handle what NQP needs - or at least, it doesn't complain about anything.

[18:10] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/184a976c2e

[18:10] <dalek> nqp/ctmo: 2882b8e | jonathan++ | src/ModuleLoader.pm:

[18:10] <dalek> nqp/ctmo: Make sure multiple uses of the same module won't run into issues.

[18:10] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/2882b8ef5a

[18:10] <dalek> nqp/ctmo: e46af01 | jonathan++ | src/ModuleLoader.pm:

[18:10] <dalek> nqp/ctmo: A symbol can never conflict with itself.

[18:10] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/e46af01858

[18:10] <dalek> nqp/ctmo: 57da2ce | jonathan++ | src/NQP/Actions.pm:

[18:10] <dalek> nqp/ctmo: Extend find_lex, which finds a compile-time known lexical, to find_sym, which knows how to look in packages too.

[18:10] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/57da2ce61d

[18:10] <dalek> nqp/ctmo: 772f1f5 | jonathan++ | src/HLL/SerializationContextBuilder.pm:

[18:10] <dalek> nqp/ctmo: Fix a thinko.

[18:10] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/772f1f5f2a

[18:21] *** Helios` left
[18:22] *** Helios` joined
[18:32] *** justatheory left
[18:33] *** justatheory joined
[18:37] *** justatheory left
[18:39] *** am0c left
[18:41] *** am0c joined
[18:47] *** whiteknight joined
[18:59] *** MayDaniel joined
[19:00] *** Holy_Cow joined
[19:00] *** Holy_Cow left
[19:12] *** birdwindupbird joined
[19:14] <lue> hello world! o/

[19:14] <colomon> \o

[19:15] <tadzik> hello lue o/

[19:15] <birdwindupbird> o/

[19:19] *** Helios` left
[19:20] *** Helios` joined
[19:22] *** mj41 left
[19:24] <dalek> nqp/ctmo: c15d820 | moritz++ | build/Makefile.in:

[19:24] <dalek> nqp/ctmo: [build] fix whitespaces in Makefile.in

[19:24] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/c15d820fcc

[19:26] *** justatheory joined
[19:27] <tadzik> :)

[19:33] <jnthn> meh, that jnthn guy sucks... :P

[19:34] <jnthn> moritz++ :)

[19:34] <moritz> it's more that the file format sucks

[19:34] <moritz> distinguishing blanks and tabs... meh.

[19:34] <jnthn> :)

[19:35] <jnthn> Well, the problem is that my make program agrees. So doesn't. :)

[19:36] *** bacek joined
[19:36] *** Helios` left
[19:37] *** Helios` joined
[19:44] <jnthn> moritz: Can I take your lack of other "oh noes" comments to mean the ctmo branch built fine for you other than this fix? :)

[19:48] *** aindilis left
[19:52] *** daxim joined
[19:52] *** MayDaniel left
[19:53] *** silent_h_ joined
[19:55] *** sftp left
[19:56] *** Helios` left
[19:57] *** Helios` joined
[19:59] *** tomaw left
[20:00] *** GinoMan joined
[20:01] *** envi left
[20:01] <moritz> jnthn: yes

[20:02] *** phenny left
[20:04] <jnthn> moritz: OK, thanks.

[20:04] <moritz> jnthn: parallel build is borked, but that's nothing new

[20:05] <jnthn> moritz: I've just added a bunch of makefile dependencies here.

[20:05] *** silent_h_ left
[20:05] *** phenny joined
[20:05] <jnthn> moritz: Hit the point where I need it to be a bit more honest about those ever for normal build. :)

[20:05] *** tomaw_ joined
[20:05] <jnthn> Oh gah. I just also ran into Match not being a 6model class yet...

[20:06] <diakopter> perlesque: https://gist.github.com/938925

[20:06] <p6eval> perlesque: OUTPUT«socks 4 50␤sunglasses 7 20␤note-case 22 80␤waterproof overclothes 43 75␤waterproof trousers 42 70␤suntan cream 11 70␤banana 27 60␤glucose 15 60␤sandwich 50 160␤water 153 200␤compass 13 35␤map 9 150␤value: 1030 weight: 396␤»

[20:06] <diakopter> oh good; that still works.

[20:09] *** tomaw_ is now known as tomaw

[20:09] <dalek> nqp/ctmo: da7760a | jonathan++ | src/ (3 files):

[20:09] <dalek> nqp/ctmo: Add a --module-path option so we can make sure we load the correct module during the bootstrap.

[20:09] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/da7760a24c

[20:09] <dalek> nqp/ctmo: e67c854 | jonathan++ | build/Makefile.in:

[20:09] <dalek> nqp/ctmo: Build Regex.pbc in the stages, like everything else. Also add a bunch of dependencies to try and get things a bit more honest. May go some way to helping the parallel build also.

[20:09] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/e67c854e13

[20:11] * moritz tests

[20:13] <moritz> jnthn: parallel build now succeeded (with -j3 )

[20:14] <moritz> failures in 4 tests - you probably expect those

[20:15] *** ruoso joined
[20:15] <jnthn> yay :)

[20:15] *** sftp joined
[20:15] <jnthn> moritz: Can you remember how far match-nom was from working?

[20:15] <jnthn> moritz: Looking at the branch, it's hard to guess... :)

[20:16] <moritz> jnthn: build fails

[20:16] <moritz> jnthn: something related to vtables, you said, but I always got a different (and non-helpful) error message

[20:19] <jnthn> moritz: OK

[20:19] <jnthn> Whoa. I think git just managed to merge all of ctmo into that branch with just one conflict I had to fix by hand!

[20:19] *** SHODAN left
[20:20] <moritz> now imagine you'd have to do that with svn... :-)

[20:20] <jnthn> "Can only use get_how on a SixModelObject"

[20:21] * jnthn looks at how hard it'll be to fix

[20:21] <diakopter> Johnny Six is not alive

[20:21] <jnthn> Wasn't planning to do this now but...it may be less hassle to do it than work around it.

[20:22] *** aindilis joined
[20:26] <colomon> do it!

[20:29] *** fglock left
[20:31] *** birdwindupbird left
[20:32] <dalek> Heuristic branch merge: pushed 200 commits to nqp/match-nom by jnthn

[20:34] * jnthn <3 git

[20:49] <dalek> nqp/match-nom: b39657f | jonathan++ | / (5 files):

[20:49] <dalek> nqp/match-nom: Various twiddles to bring that was done in the original match-nom branch up to date with the latest changes in ctmo.

[20:49] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/b39657f91f

[20:49] <jnthn> OK, now I seem to be at a "real" error: "Malformed package declaration at line 10, near "('P6str') ""

[20:50] <jnthn> e.g. something is busted with Match that affects the parse.

[20:50] <moritz> that's the error I've been seeing all along, and which isn't helpful at all :(

[20:51] *** justatheory left
[20:51] *** justatheory joined
[20:55] <jnthn> At least we see the same error now

[20:55] <jnthn> Well, it's hard for the parser to give a good error if it's broken. ;)

[20:55] <jnthn> The bug is that it actually hits the error condition.

[20:55] <jnthn> Which I guess is because somehow it ends up with corrupted match state.

[20:56] *** justatheory left
[20:58] <moritz> now it shows that we don't have tests for the Match object

[21:02] *** starcoder left
[21:02] <jnthn> Well, at the moment we can't even parse a source file that just contains "1"...so something is fundementally busted somewhere.

[21:02] *** starcoder joined
[21:09] <jnthn> Oh..

[21:09] <jnthn>     $I0 = repr_get_attr_int self, cur_class, '$!from'

[21:09] <jnthn>     $I0 = repr_get_attr_int self, cur_class, '$!to'

[21:09] <jnthn>     $I2 = isge $I1, $I0

[21:09] <jnthn> ...I'm guessing one of those should set $I1.

[21:09] <moritz> ... yes.

[21:10] <moritz> the second one, presumably

[21:10] <jnthn> I presume so

[21:10] <jnthn> The parsetraces made it look like every match always matched...

[21:10] <jnthn> Which led here. :)

[21:11] *** donri joined
[21:12] <dalek> nqp/match-nom: 6677389 | jonathan++ | src/Regex/Cursor-builtins.pir:

[21:12] <dalek> nqp/match-nom: Restore some DEBUG capabilities.

[21:12] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/6677389462

[21:12] <dalek> nqp/match-nom: e886b7e | jonathan++ | src/Regex/Match.pir:

[21:12] <dalek> nqp/match-nom: Fix a probable copy-pasto. Also toss some useless :vtable declarations - we set those up via the meta-object now.

[21:12] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/e886b7e663

[21:12] <jnthn> moritz: With that fixed we can actually parse and compile simple programs using the match-nom branch.

[21:12] *** lue left
[21:14] <jnthn> Latest error is about get_string_keyed() not implemented, which is probably not too hard to fix.

[21:14] *** lue joined
[21:14] <jnthn> But it goes pretty deep into the parse of the meta-objects now.

[21:20] *** donri left
[21:38] *** justatheory joined
[21:40] <dalek> nqp/match-nom: 48e3d16 | jonathan++ | src/HLL/Grammar.pm:

[21:40] <dalek> nqp/match-nom: We don't implement the string-returning keyed variants of the v-table yet; just work around that, since the values for now are all stored boxed anyway, so it doesn't matter to much where we unbox.

[21:40] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/48e3d16f37

[21:40] <dalek> nqp/match-nom: ad848d0 | jonathan++ | src/ops/nqp.ops:

[21:40] <dalek> nqp/match-nom: Make sure we really do consider all available Parrot v-table indexes when building the overloads array; we missed some off the end.

[21:40] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/ad848d0305

[21:40] <dalek> nqp/match-nom: 8b9383f | jonathan++ | src/pmc/sixmodelobject.pmc:

[21:40] <dalek> nqp/match-nom: Make unshift_pmc and push_pmc overridable.

[21:40] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/8b9383f362

[21:40] <dalek> nqp/match-nom: af53a9b | jonathan++ | src/core/NQPCapture.pm:

[21:40] <dalek> nqp/match-nom: Override unshift_pmc and push_pmc in NQPCapture.

[21:40] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/af53a9b0b0

[21:44] *** tomaw left
[21:45] *** tomaw_ joined
[21:47] <dalek> sprixel: 2b2adbf | diakopter++ | / (9 files):

[21:47] <dalek> sprixel: more p6 grammar interpreter work - end-of-input, string literals

[21:47] <dalek> sprixel: review: https://github.com/diakopter/sprixel/commit/2b2adbf7dc

[22:08] <dalek> nqp/match-nom: af16e75 | jonathan++ | src/core/NQPCapture.pm:

[22:08] <dalek> nqp/match-nom: Implement .list and .hash on NQPCapture.

[22:08] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/af16e75423

[22:08] <dalek> nqp/match-nom: 354eff8 | jonathan++ | src/HLL/Grammar.pm:

[22:08] <dalek> nqp/match-nom: Fix an earlier fix. D'oh.

[22:08] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/354eff89b7

[22:09] <jnthn> With this, match-nom now parses the meta-objects and module loader. Now just to track down that's going on in the setting...

[22:12] *** f00li5h left
[22:12] *** f00li5h joined
[22:20] <dalek> nqp/match-nom: 15a19ea | jonathan++ | src/core/NQPCapture.pm:

[22:20] <dalek> nqp/match-nom: Unfortunately, we rely on the semantics of Capture returning PMCNULL; mimic that for now in NQPCapture. This is the last bug that stood in the way of NQP completely building on match-nom. No test regressions either! No speed win, though that's not entirely surprising at this point - there's several known sub-optimalities. moritz++ for most of the work on match-nom.

[22:20] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/15a19eaf00

[22:24] <jnthn> To clarify, I expect the object-y bits are mostly more optimal, but moving Capture to NQP has produced other costs that we can't yet optimize away. And we're not even emitting the object-y bits optimally yet either (can't until I finish up this compile-time meta-objects work).

[22:25] <jnthn> It *should* be a memory win as match objects now inline the from/to directly as ints in the object, rather than making Integer PMCs.

[22:26] *** donri joined
[22:26] <dalek> nqp/ctmo: 05aa5ed | jonathan++ | / (117 files):

[22:26] <dalek> nqp/ctmo: Merging ctmo into match-nom.

[22:26] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/05aa5ed8d7

[22:26] <dalek> nqp/ctmo: b39657f | jonathan++ | / (5 files):

[22:26] <dalek> nqp/ctmo: Various twiddles to bring that was done in the original match-nom branch up to date with the latest changes in ctmo.

[22:26] *** dalek left
[22:27] *** dalek joined
[22:27] *** ChanServ sets mode: +v dalek

[22:32] <dalek> nqp/ctmo: dccac63 | jonathan++ | src/stage0/ (7 files):

[22:32] <dalek> nqp/ctmo: Update bootstrap.

[22:32] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/dccac638e2

[22:41] *** polettix joined
[22:42] <polettix> perl6: any <one two three>

[22:42] <p6eval> niecza v4-69-g4db171f: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared routine:␤      'any' used at line Any()1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 388 (CORE die @ 2)␤  at /home/p6eval/niecza/src/STD.pm6 line 1141 (STD P6.comp_unit @ 75)␤  at

[22:42] <p6eval> ../home/p6eval/niecza/…

[22:42] <p6eval> ..pugs, rakudo ecc4ef:  ( no output )

[22:43] <polettix> perl6: any <one two three>;

[22:43] <p6eval> niecza v4-69-g4db171f: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared routine:␤      'any' used at line Any()1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 388 (CORE die @ 2)␤  at /home/p6eval/niecza/src/STD.pm6 line 1141 (STD P6.comp_unit @ 75)␤  at

[22:43] <p6eval> ../home/p6eval/niecza/…

[22:43] <p6eval> ..pugs, rakudo ecc4ef:  ( no output )

[22:44] <polettix> perl6: my $x = any <one two three>; $x.say;

[22:44] <p6eval> rakudo ecc4ef: OUTPUT«any("one", "two", "three")␤»

[22:44] <p6eval> ..niecza v4-69-g4db171f: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared routine:␤      'any' used at line Any()1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 388 (CORE die @ 2)␤  at /home/p6eval/niecza/src/STD.pm6 line 1141 (STD P6.comp_unit @ 75)␤  at

[22:44] <p6eval> ../home/p6eval/niecza/…

[22:44] <p6eval> ..pugs: OUTPUT«any(VStr "one",VStr "three",VStr "two")␤»

[22:44] <polettix> perl6: my $x = any<one two three>; $x.say;

[22:45] <p6eval> niecza v4-69-g4db171f: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared routine:␤      'any' used at line Any()1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 388 (CORE die @ 2)␤  at /home/p6eval/niecza/src/STD.pm6 line 1141 (STD P6.comp_unit @ 75)␤  at

[22:45] <p6eval> ../home/p6eval/niecza/…

[22:45] <p6eval> ..pugs: OUTPUT«*** Odd number of elements found where hash expected: VJunc any()␤    at /tmp/Ajx7q3sCzH line 1, column 4-27␤»

[22:45] <p6eval> ..rakudo ecc4ef: OUTPUT«any()␤»

[22:45] <polettix> is that space really necessary?

[22:45] <sorear> yes

[22:46] <polettix> where can I found out more about it?

[22:47] <polettix> (which I hope to be a polite way of asking "why?")

[22:48] <sorear> I forgot

[22:48] *** pmurias left
[22:48] <sorear> but the issue has to do with ambiguities

[22:48] <sorear> for instance, "if %foo{12} { ... }"

[22:49] <sorear> the required lack of space on hash subscripts allows Perl 6 to parse that

[22:50] <jnthn> S02 talks about it a bit, starting "In general, whitespace is optional in Perl 6..."

[22:52] <polettix> thanks!

[22:56] <polettix> cheers

[22:56] *** polettix left
[22:58] *** icwiener left
[23:07] *** hudnix joined
[23:11] *** ymasory joined
[23:12] *** Mowah left
[23:18] *** herzen joined
[23:23] *** Sarten-X left
[23:23] *** noganex_ left
[23:27] *** noganex joined
[23:34] *** Sarten-X joined
[23:47] *** gavin2u joined
[23:47] <gavin2u> hi buddy

[23:49] <sorear> ?

[23:52] *** gavin2u left
