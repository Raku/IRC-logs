[00:01] *** maja left
[00:01] *** cdarroch left
[00:02] *** alester left
[00:03] *** maja joined
[00:06] *** leprevost joined
[00:13] *** plobsing joined
[00:23] *** stifynsemons left
[00:28] *** bbkr left
[00:36] *** cosimo joined
[00:52] *** bbkr joined
[00:58] *** woosley joined
[01:00] *** woosley left
[01:01] *** hercynium left
[01:11] *** mtk left
[01:14] *** am0c joined
[01:16] *** qiyong joined
[01:20] *** mtk joined
[01:25] *** stifynsemons joined
[01:37] *** stifynsemons left
[01:38] *** stifynsemons joined
[01:48] *** stifynsemons left
[02:00] *** noganex joined
[02:03] *** noganex_ left
[02:43] *** mikehh_ joined
[02:43] *** whiteknight left
[02:44] *** mikehh left
[02:50] *** stifynsemons joined
[03:03] *** stifynsemons left
[03:10] *** _twitch joined
[03:21] *** stifynsemons joined
[04:02] *** bacek left
[04:20] *** nymacro joined
[04:23] *** Su-Shee_ joined
[04:24] <mberends> good morning Su-Shee_ 

[04:26] *** Su-Shee left
[04:54] *** hudnix left
[04:54] *** hudnix joined
[05:28] *** drbean left
[05:40] *** GinoMan joined
[05:51] *** charsbar left
[05:52] *** charsbar joined
[05:52] <sorear> good * #perl6

[05:53] *** stifynsemons left
[05:53] <mberends> good evening sorear

[05:55] *** lamstyle_ is now known as lamstyle

[05:55] *** lamstyle left
[05:55] *** lamstyle joined
[06:05] *** drbean joined
[06:05] *** jaldhar left
[06:05] *** jaldhar joined
[06:09] *** drbean left
[06:12] *** drbean joined
[06:14] *** somenamenotregis joined
[06:15] *** somenamenotregis left
[06:16] *** drbean left
[06:18] *** drbean joined
[06:23] *** drbean left
[06:26] <tadzik> good day

[06:26] <mberends> morning tadzik

[06:27] *** xinming_ joined
[06:29] <tadzik> what a wonderful week it is

[06:29] *** drbean joined
[06:29] <sorear> how so?

[06:30] <sorear> mberends: I hear you're having goto issues *lure* *lure*

[06:30] *** xinming left
[06:31] <tadzik> sorear: I passed my driving exam, plus I'm going for probably the most exciting holidays I've had for months, maybe even counting the holiday season. And they will be Perl6-related

[06:31] <mberends> sorear: it's a nasty itch. My sekrit project lures me stronger, though.

[06:32] * sorear out

[06:32] <tadzik> so, I don't mind how things are :)

[06:33] <mberends> tadzik: congrats on the driving license. Now only two more sleeps, and then the mini P6 hackathon really begins :)

[06:34] *** cosimo left
[06:40] *** drbean left
[06:40] <tadzik> aye :)

[06:42] *** drbean joined
[06:47] *** necrodearia left
[06:48] *** kaare_ joined
[06:49] *** necrodearia joined
[06:49] *** GinoMan left
[07:10] *** robinsmidsrod left
[07:10] *** cjk101010 joined
[07:11] *** robins joined
[07:15] *** mfranc joined
[07:24] *** gdey_ left
[07:25] *** donri joined
[07:25] *** drbean_ joined
[07:26] *** Mowah joined
[07:26] *** drbean left
[07:29] *** gdey_ joined
[07:32] *** fhelmberger joined
[07:37] *** justatheory left
[07:38] *** drbean_ left
[07:40] *** Su-Shee_ is now known as Su-Shee

[07:42] *** mberends left
[07:53] *** mberends joined
[07:53] <mberends> donri: inventing toy languages on Parrot is exactly why pmichaud++ made the Parrot Compiler Toolkit.

[07:54] <donri> Yea :)

[07:54] <moritz_> not just toy languages

[07:55] <donri> Basing the syntax of a bastardization of Python + LISP + Haskell and some Perl 6, can you imagine

[07:55] *** shi joined
[07:57] <donri> http://i.imgur.com/6mIxi.png  hooray making a vim syntax file before anything else

[07:58] <mberends> I think Perl 6 is doomed to remain a toy language unless we can make at least one implementation that people outside of its developer circle choose to use on a large scale.

[07:59] <donri> Agreed. That day is not doomed to not come, I would think, but might take years.

[07:59] <mberends> aye

[08:03] <tadzik> ie eleven years? :)

[08:08] <mberends> a hundred years was (I hope jokingly) posited as the expected lifetime of Perl 6, so we have plenty of wiggle room. The greatest danger is that alternative projects lure away most of the developers before that chosen-by-ousiders implementation is delivered.

[08:11] <donri> You mean in a hundred years it will be obsoleted?

[08:12] <donri> With the singularity just around the corner I'm not so sure ;)

[08:12] *** drbean joined
[08:13] <mberends> donri: I am sure that a hundred years will see such unimaginable changes in computer architecture that there will be many currently unanticipated new language requirements.

[08:13] <donri> Exactly

[08:13] *** robins is now known as robinsmidsrod

[08:14] <donri> Maybe the nanoclouds will run Erlang because of the heavy dependency on communication

[08:14] <donri> mwahahah

[08:15] * mberends looks for his Erlang manual and realises he doesn't have one

[08:16] *** Eevee left
[08:20] *** drbean left
[08:22] *** drbean joined
[08:23] <mberends> it's sunny but freezing here in NL. sunny++ freezing--

[08:27] <donri> slightly-too-cold++ > slightly-too-hot--

[08:28] <mberends> jnthn would agree with you, but having lived in Africa, I like it hot

[08:29] <donri> I like boys hot but weather is best served cold.  :)

[08:36] *** Eevee joined
[08:50] *** tzhs joined
[08:56] <jnthn> mberends: Sounds like nice weather. ;)

[08:56] <jnthn> morning all, btw :)

[08:59] *** mtk left
[08:59] <moritz_> \o

[09:02] *** am0c left
[09:08] *** mtk joined
[09:13] *** tzhs left
[09:18] *** tzhs joined
[09:25] *** tzhs left
[09:28] *** daxim joined
[09:43] *** dakkar joined
[09:49] *** woosley joined
[10:00] *** agentzh joined
[10:06] *** bacek joined
[10:19] *** f00li5h left
[10:28] *** leprevost left
[10:32] <tadzik> o/

[11:09] *** nymacro left
[11:11] *** nymacro joined
[11:37] *** qiyong left
[11:58] *** coldhead left
[12:04] *** donri left
[12:04] *** donri joined
[12:04] *** zanga_zanga joined
[12:06] *** zanga_zanga left
[12:09] *** pumphaus left
[12:10] *** woosley left
[12:10] *** pumphaus joined
[12:11] *** agentzh left
[12:12] *** cognominal left
[12:15] *** woosley joined
[12:30] *** bluescreen10 joined
[13:37] *** amkrankruleuen left
[13:39] *** amkrankruleuen joined
[13:45] *** stifynsemons joined
[13:49] *** jferrero left
[14:01] *** stifynsemons left
[14:04] *** woosley left
[14:05] <moritz_> it's quiet in here.

[14:06] <donri> lies, moritz_ just spoke

[14:06] <moritz_> I spoiled it!

[14:06] <donri> have you no shame

[14:09] *** plobsing left
[14:13] *** spq joined
[14:22] *** JimmyZ joined
[14:22] *** jaldhar left
[14:23] *** jaldhar joined
[14:24] *** bluescreen10 left
[14:26] *** amkrankruleuen left
[14:29] *** pnu left
[14:32] *** pnu joined
[14:33] *** amkrankruleuen joined
[14:34] *** pmurias_ joined
[14:34] *** pmurias_ left
[14:34] *** pmurias joined
[14:34] <pmurias> sorear: ping

[14:35] <pmurias> phenny: tell sorear could you explain what does newrwlist var do exactly?

[14:35] <phenny> pmurias: I'll pass that on when sorear is around.

[14:38] *** cogno joined
[14:38] *** cogno left
[14:38] *** cogno joined
[14:46] *** cogno left
[14:56] *** spq left
[14:59] *** awoodland joined
[14:59] <PerlJam> greetings

[14:59] <moritz_> o/

[15:00] *** pigdude joined
[15:03] *** pigdude left
[15:03] *** pigdude joined
[15:04] *** pmurias left
[15:05] *** shi left
[15:11] *** kaare_ left
[15:12] *** mkramer joined
[15:15] <takadonet> morning all

[15:15] <PerlJam> good morning takadonet 

[15:16] *** bluescreen10 joined
[15:16] *** wtw left
[15:18] *** MayDaniel joined
[15:21] *** tom_tsuruhara joined
[15:21] *** tom_tsuruhara left
[15:22] *** tom_tsuruhara joined
[15:22] *** cjk101010 left
[15:23] <sorear> phenny: tell pmurias Do you know the difference between [1,2,3] and @([1,2,3]) ?  newrwlistvar is exactly like newscalar, but gives the result the flattening bit.

[15:23] <phenny> sorear: I'll pass that on when pmurias is around.

[15:23] <phenny> sorear: 14:35Z <pmurias> tell sorear could you explain what does newrwlist var do exactly?

[15:23] *** Axius joined
[15:26] *** _twitch left
[15:31] *** orafu left
[15:32] <takadonet> pyrimidine: ping

[15:40] *** plobsing joined
[15:41] <sorear> good * #perl6

[15:42] <takadonet> sorear: yo

[15:50] *** mkramer1 joined
[15:51] *** kaare_ joined
[15:53] *** mkramer left
[15:53] *** pmurias joined
[15:55] <pmurias> sorear: hi

[15:55] <phenny> pmurias: 15:23Z <sorear> tell pmurias Do you know the difference between [1,2,3] and @([1,2,3]) ?  newrwlistvar is exactly like newscalar, but gives the result the flattening bit.

[15:57] *** Axius left
[15:58] *** JimmyZ left
[15:59] *** stifynsemons joined
[16:07] *** wooden joined
[16:13] <sorear> phenny: hi

[16:13] <sorear> pmurias: hi

[16:13] *** tyatpi_ left
[16:14] <pmurias> sorear: i found a bug in niecza, commiting test for it..

[16:15] <dalek> niecza: 345f499 | pmurias++ | / (2 files):

[16:15] <dalek> niecza: [cl-backend] added division

[16:15] <dalek> niecza: review: https://github.com/sorear/niecza/commit/345f4993e1

[16:15] <dalek> niecza: e477540 | pmurias++ | t/bug.t:

[16:15] <dalek> niecza: added test for bug

[16:15] <dalek> niecza: review: https://github.com/sorear/niecza/commit/e477540c08

[16:15] <pmurias> sorear: SAFE.pm6 has a 1/0, that's not valid Perl 6

[16:15] <pmurias> rakudo: say 1/0

[16:15] <p6eval> rakudo 74dcce: OUTPUT«Inf␤»

[16:15] <pmurias> or is it?

[16:15] <pmurias> pugs: 1/0

[16:15] <p6eval> pugs: OUTPUT«*** Illegal division by zero␤    at /tmp/786Eb9JH0S line 1, column 1 - line 2, column 1␤»

[16:16] <plobsing> rakudo: say (1/0).perl

[16:16] <p6eval> rakudo 74dcce: OUTPUT«1/0␤»

[16:16] *** Patterner left
[16:17] <sorear> pmurias: niecza's handling of numbers is quite wrong; but there have been more important things to worry about :/

[16:18] <pmurias> sorear: see the bug

[16:18] <pmurias> sorear: it seems the pseudo-inlining pass turns some infix:<=> calls in constants incorrectly

[16:19] *** Psyche^ joined
[16:19] *** Psyche^ is now known as Patterner

[16:19] <sorear> pmurias: = in constants is syntactically special

[16:20] <sorear> niecza: sub infix:<=>($,$b) { say $b }; constant quux = 1; my $a; $a = 2;

[16:20] <p6eval> niecza v3-26-g77a9821: OUTPUT«2␤»

[16:20] <sorear> looks right to me

[16:20] <sorear> that's not pseudo-inlining at work - it's special-cased in STD and in the actions

[16:21] *** hercynium joined
[16:21] <sorear> pugs: sub infix:<=>($,$b) { say $b }; constant quux = 1;

[16:21] <p6eval> pugs: OUTPUT«*** ␤    Unexpected "$,$"␤    expecting formal parameter or ")"␤    at /tmp/X5YKhdECge line 1, column 15␤»

[16:21] <sorear> pugs: sub infix:<=>($a,$b) { say $b }; constant quux = 1;

[16:21] <p6eval> pugs: OUTPUT«*** ␤    Unexpected "="␤    expecting ":" or "("␤    at /tmp/PrnWzqQyiy line 1, column 48␤»

[16:26] *** daxim left
[16:29] *** kulp joined
[16:29] *** kulp left
[16:34] *** pmurias left
[16:34] *** dsp_ left
[16:35] *** plainhao joined
[16:38] *** GinoMan joined
[16:40] *** mtk left
[16:42] *** dsp_ joined
[16:46] *** fhelmberger left
[16:47] *** cibs left
[16:49] *** mtk joined
[16:49] *** risou joined
[16:49] *** pmurias joined
[16:49] *** tyatpi_ joined
[16:50] <pmurias> sorear: other thing, all the bif_* opcodes take containers as arguments, once we have an container removal optimalisation pass that will have to change

[16:53] *** cogno joined
[16:54] <pyrimidine> takadonet: pong

[16:54] *** MayDaniel left
[16:54] *** cogno left
[16:57] <sorear> phenny: tell TimToady pmurias and I disagree on what sub infix:<=>($,$a) { say $a }; constant foo = 5; # should do

[16:57] <phenny> sorear: I'll pass that on when TimToady is around.

[16:58] <sorear> pmurias: I'm still waiting for a revelation on container removal.  As long as post-declared subs can have is rw arguments, I don't think it's feasable.

[16:58] <pmurias> sorear: i don't have a strong opinion on that

[17:00] *** tyatpi_ left
[17:00] <jnthn> sorear: Looking at STD and pondering implementation sanity, I agree with your interpretation.

[17:01] <pmurias> sorear: we will need a proper optimalisation framework to do that

[17:01] <pmurias> that is something hoopl based rather then adhoc code transformations

[17:02] <sorear> nothing whole program can be reasonably done here

[17:03] <sorear> we need something fairly fast and sub-at-a-time, because as soon as a named sub is closed it can potentially be called

[17:03] <sorear> I asked TimToady earlier about sub...sub...sub... BEGIN { eval "sub" ~ (0..9).pick }

[17:04] <sorear> totally legit

[17:04] <pmurias> hm?

[17:05] * jnthn hopes that can be relaxed for 6.0.0

[17:05] <pmurias> you mean using eval to generate a sub name?

[17:06] <jnthn> pmurias: No, calling subs in the current compilation unit in a BEGIN

[17:06] <jnthn> If they're outside of the BEGIN itself, of course.

[17:07] <sorear> in general, every time a BEGIN block is seen, all previous subs need to be callable

[17:08] <sorear> that includes implicit BEGINs in use, constant, enum, subset, etc

[17:08] <jnthn> Easy to say, total nuisance to do.

[17:09] *** mkramer1 left
[17:09] <jnthn> Guess we'll end up needing to, though. :/

[17:10] *** pmurias left
[17:10] *** justatheory joined
[17:13] *** alester joined
[17:13] *** pmurias joined
[17:15] <pmurias> we can do the optimalisations after the last BEGIN

[17:15] <pmurias> the optimiser doesn't have to be fast, if the optimiser takes 30sec to make the setting or a commonly used module a few times faster it's worth it

[17:18] <pmurias> sorear: how can i compile SAFE.pm6 without a setting?

[17:19] *** cibs joined
[17:23] *** pmurias left
[17:25] *** pmurias joined
[17:26] <sorear> pmurias: on-stack replacement is a hard problem

[17:28] <sorear> theoretically, we should wait until the end of the MAIN CHECK to do sensitive optimizations

[17:28] <sorear> I'm not really sure how this should work

[17:29] <sorear> it's SAFE.setting, and it *is* a setting

[17:29] <sorear> I think you can just use -Bxxx -C SAFE

[17:29] <pmurias> i want to run SAFE.setting with -Bclisp

[17:30] <pmurias> and i don't want it to load lib/SAFE.setting

[17:30] <pmurias> sorear: my understanding is that we will do whole program optimalisations once to program is safe to disk as .nam

[17:30] <sorear> you don't need to do anything special - SAFE.setting is special cased to not load itself at NieczaFrontendSTD:497

[17:34] <pmurias> in order to support calling subs out of BEGIN we will need to change our model to constructing the program picewise and then serialising it

[17:35] *** mberends left
[17:37] <pmurias> sorear: the psuedo-inliner doesn't handle the insides of infix:</> if i do that

[17:39] <pmurias> sorear: would you mind the optimiser being in haskell (so that we don't need to rewrite hoopl)

[17:40] *** dsp_ left
[17:42] *** awoodland left
[17:43] *** mberends joined
[17:43] *** cdarroch joined
[17:43] *** cdarroch left
[17:43] *** cdarroch joined
[17:47] *** pmurias left
[17:48] *** pmurias joined
[17:51] *** mfranc left
[17:53] <sorear> pmurias: what do you mean?  -C CORE and -C SAFE work fine, they're used in the Makefile

[17:55] <sorear> pmurias: yes, I oppose Haskell componenets.  I just got done getting rid of all the Perl 5 components - I'm now quite pleased that the compiler can run in a single process

[17:57] <pmurias> bjj&

[17:57] *** pmurias left
[17:57] <sorear> bjj?

[18:00] *** mkramer joined
[18:01] *** noganex left
[18:01] *** mkramer1 joined
[18:01] *** cjk101010 joined
[18:03] *** lue left
[18:03] *** lue joined
[18:05] *** mkramer left
[18:05] *** noganex joined
[18:06] *** bluescreen10 left
[18:09] *** dakkar left
[18:10] *** ashleydev joined
[18:18] *** ashleydev left
[18:18] *** dsp_ joined
[18:22] *** bluescreen10 joined
[18:23] *** ashleydev joined
[18:27] *** GinoMan left
[18:28] *** AphelionZ joined
[18:30] *** plobsing left
[18:39] *** bluescreen10 left
[18:40] *** risou left
[18:46] *** jaldhar left
[18:47] *** lue left
[18:48] *** lue joined
[18:48] *** AphelionZ left
[18:49] *** AphelionZ joined
[18:49] *** AphelionZ left
[18:51] *** pmurias joined
[18:55] *** nymacro left
[19:01] *** ashleydev left
[19:01] *** araujo left
[19:10] *** pmurias left
[19:10] <mberends> lue: are you working on the P6 to GCC project you blogged about? (https://rdstar.wordpress.com/2011/01/22/some-thoughts-on-p6-on-gcc/) I highly recommend Andy Shitov's Boost/Spirit based "Personal Perl 6 compiler" as a proof of concept. Demo: http://perl6.ru/p6c Russian talk: http://talks.shitov.ru/ppt/kzpw2009/inside-perl6-compiler.pdf Source (in Subversion): svn://svn.shitov.ru/p6c

[19:19] *** allbery_b left
[19:24] *** allbery_b joined
[19:25] *** araujo joined
[19:25] *** plobsing joined
[19:28] *** cjk101010 left
[19:39] <tadzik> http://wklej.org/id/485775/ -- wouldn't that fix this and that?

[19:40] <moritz_> tadzik: try it :-)

[19:40] <tadzik> hmm

[19:40] <tadzik> it probably won't break anything :) I'll see if it works and maybe commit

[19:42] *** masak joined
[19:42] <masak> lol hi zebras

[19:43] <tadzik> hmm, seems that nqp can't parse "if 5 && 7 > 5"

[19:43] <tadzik> hai masak!

[19:43] <tadzik> or it can

[19:43] <moritz_> nqp: say(3) if 5 && 7 > 5;

[19:43] <p6eval> nqp: OUTPUT«3␤»

[19:44] <moritz_> nqp-rx: say(3) if 5 && 7 > 5;

[19:44] <moritz_> nqprx: say(3) if 5 && 7 > 5;

[19:44] <p6eval> nqprx: OUTPUT«3␤»

[19:44] <moritz_> nqprx: if 5 && 7 > 5 { say('OH YES') };

[19:44] <p6eval> nqprx: OUTPUT«OH YES␤»

[19:44] * moritz_ doesn't see the problem

[19:44] <tadzik> it's just me forgotting to use say with parens :)

[19:44] <tadzik> forgetting I think

[19:45] <moritz_> I do that all the time too

[19:45] <tadzik> but the patch doesn't parse for some reason

[19:46] <tadzik> ooh, I see it

[19:46] <tadzik> ...why two underscores? :(

[19:46] <tadzik> it won't fit in my vim now

[19:52] <tadzik> yay, it works!

[19:55] *** dsp_ left
[19:55] *** dsp_ joined
[19:55] *** ashleydev joined
[19:58] <masak> std: my $______

[19:58] <p6eval> std 4608239: OUTPUT«ok 00:01 119m␤»

[19:58] <masak> oh the obfuscation possibilities.

[20:00] <tadzik> std: my $__\o/

[20:00] <p6eval> std 4608239: OUTPUT«===SORRY!===␤Confused at /tmp/viSNab8iqx line 1:␤------> my $__\⏏o/␤    expecting any of:␤     postfix␤        postfix_prefix_meta_operator␤Parse failed␤FAILED 00:01 120m␤»

[20:00] <jnthn> std: ::_______

[20:00] <p6eval> std 4608239: OUTPUT«ok 00:01 118m␤»

[20:01] <masak> std: ::__::__::__

[20:01] <p6eval> std 4608239: OUTPUT«ok 00:01 118m␤»

[20:01] <dalek> rakudo: af66096 | tadzik++ | src/Perl6/Module/Loader.pm:

[20:01] <dalek> rakudo: When loading a module, don't use .pir if it's older than the .pm

[20:01] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/af66096a3f

[20:01] <tadzik> yay, my 17th commit :)

[20:01] *** pigdude left
[20:04] *** ashleydev left
[20:11] <jnthn> tadzik++ :D

[20:11] <masak> I can't believe we didn't have that one already. tadzik++

[20:11] <jnthn> That'll save some confusion. :)

[20:13] *** bluescreen10 joined
[20:15] <tadzik> like with last Test.pm update

[20:15] <tadzik> I wonder how many # XXX LHF live in the source tree

[20:15] <moritz_> ack for the rescue

[20:16] <tadzik> almost a quarter of a percent of commits are mine :P

[20:18] <flussence> for variable name obfuscation, PHP probably wins: $£€¥  = 1;

[20:18] <flussence> .u   

[20:18] <phenny> U+00A0 NO-BREAK SPACE ( )

[20:18] <phenny> U+0020 SPACE ( )

[20:19] *** bluescreen10 left
[20:23] *** ashleydev joined
[20:24] <plobsing> jnthn: is it worth converting Zavolaj to use the new Parrot pointer types (old ones are deprecated), or will nom be bringing larger changes here?

[20:27] <jnthn> Zavolaj is worth updating.

[20:27] <jnthn> nom may enable a bunch of stuff but Zavolaj will certainly go on existing beyond it.

[20:28] <jnthn> (e.g. nom may help Zavolaj be better, but isn't a replacement for it.)

[20:28] <plobsing> but will my changes just get swallowed up in a sea of nom changes in a couple of weeks (a case where I'd classify it as "not worth it")

[20:29] <plobsing> basically, how much does nom change the inner workings of Zavolaj?

[20:31] <jnthn> Zavolaj mostly works off signature and object introspection. The APIs for those will change little so far as Zavolaj is concerned.

[20:32] <plobsing> OK

[20:32] <jnthn> So ti's certainly worth it.

[20:32] <jnthn> *it's

[20:33] *** bluescreen10 joined
[20:37] *** coldhead joined
[20:42] <mberends> \o/ zavolaj updates!

[20:44] *** pigdude joined
[20:44] *** tyatpi_ joined
[20:44] *** pigdude left
[20:52] *** mberends left
[20:53] *** mberends joined
[20:53] *** plobsing left
[20:55] *** ab5tract joined
[20:57] *** stkowski joined
[20:59] *** masak left
[21:09] *** plobsing joined
[21:14] *** plainhao left
[21:15] *** takadonet left
[21:21] *** mikehh_ is now known as mikehh

[21:21] *** y3llow_ joined
[21:21] *** pothos_ joined
[21:23] *** pothos left
[21:23] *** y3llow left
[21:24] *** pothos_ is now known as pothos

[21:24] *** y3llow_ is now known as y3llow

[21:24] *** dsp_ left
[21:26] *** jferrero joined
[21:28] *** Rotwang joined
[21:37] *** bluescreen10 left
[21:46] *** dsp_ joined
[21:57] *** plobsing left
[22:03] *** gdey_ left
[22:10] *** meraxes_ left
[22:13] *** flussence_ joined
[22:16] *** flussence left
[22:23] <dalek> specs: e1c674c | (Dave Whipp)++ | S32-setting-library/Numeric.pod:

[22:23] <dalek> specs: Add conjugate method (for RT 76602)

[22:23] <dalek> specs: review: https://github.com/perl6/specs/commit/e1c674c451

[22:30] *** araujo left
[22:35] *** kulp joined
[22:36] *** kulp left
[22:37] *** eeffnnknnf joined
[22:40] *** araujo joined
[22:45] *** whiteknight joined
[22:46] *** kaare_ left
[22:47] *** gdey_ joined
[22:53] <dwhipp> I was able to push directly to perl6/specs, but rakudo/rakudo.git is denied. Should I fork and send a pull request, or can I get a commit bit for rakudo (or should I be editing a different branch)?

[22:54] *** Rotwang left
[22:56] *** dalek left
[22:56] *** kensanata joined
[22:57] *** diakopter left
[22:58] <tadzik> you might not have a commit bit to rakudo

[22:58] <tadzik> people like Pull Requests, I observed

[23:00] *** TimToady left
[23:00] *** sorear left
[23:01] <dwhipp> I think I have commit bit for specs and tests, but not rakudo itself. Pull requests aren't hard though

[23:02] *** GinoMan joined
[23:03] *** gdey_ left
[23:06] *** tom_tsuruhara left
[23:11] *** eeffnnknnf left
[23:13] *** necrodearia is now known as mizerydearia

[23:26] *** leprevost joined
[23:34] *** gdey_ joined
[23:39] *** Mowah left
[23:46] *** plobsing joined
[23:47] *** hercynium left
[23:51] *** AphelionZ joined
[23:56] *** athomason joined
