[00:01] <bacek_at_work> masak, if rakudo build will fail try http://nopaste.snit.ch/31882 patch. (Unless it was already committed by moritz_)

[00:01] *** contempt joined
[00:01] *** risou left
[00:01] *** contempt left
[00:02] <masak> bacek_at_work: ok.

[00:02] *** contempt joined
[00:02] *** contempt left
[00:03] *** risou joined
[00:03] *** felliott joined
[00:04] *** ymasory_ left
[00:10] *** Vlavv joined
[00:12] *** zb joined
[00:14] *** vmspb left
[00:16] <sorear> hey masak, I need help refilling my TODO

[00:17] *** am0c left
[00:17] <masak> sorear: :)

[00:17] <masak> sorear: people seem to have been expecting decimal/rational literals quite a lot lately.

[00:18] *** zb left
[00:18] <masak> sorear: I must confess to having put aside very little time lately for niecza. I built it the other day, that's all.

[00:22] *** Vlavv left
[00:26] <masak> sorear: on a general level, it would be very interesting to see Niecza connect to the spectests in roast, even a little bit. but I've understood that that basically requires &eval, which is hard.

[00:27] <jnthn> sleep &

[00:31] <masak> bacek_at_work: everything looks fine.

[00:32] <masak> bacek_at_work: compilation worked, including the Test.pm module that didn't work before. say "OH HAI" works. the beginning of 'make spectest' looks fine.

[00:32] <masak> all green from me.

[00:32] * masak goes to bed

[00:32] <masak> 'night, #perl6

[00:33] *** masak left
[00:35] *** Vlavv joined
[00:48] *** felliott left
[00:55] *** felliott joined
[00:56] *** ymasory left
[00:58] *** felliott left
[00:59] <Tene> rakudo: say "A\n\nB\n".lines.perl

[00:59] <p6eval> rakudo 6f9116: OUTPUT¬´("A", "", "B")‚ê§¬ª

[01:01] *** gdey left
[01:03] *** cotto joined
[01:03] *** aindilis joined
[01:03] *** dju left
[01:03] *** dju joined
[01:03] *** dju left
[01:03] *** dju joined
[01:06] *** zb joined
[01:07] *** varna left
[01:07] *** cognominal joined
[01:11] *** cotto left
[01:11] *** cotto joined
[01:12] *** kfo left
[01:16] *** cotto left
[01:17] *** cotto joined
[01:18] *** am0c joined
[01:19] *** cotto left
[01:21] *** zb left
[01:25] *** kfo joined
[01:33] *** varna joined
[01:37] *** zb joined
[01:43] *** zb left
[01:48] *** rdesfo left
[02:03] *** noganex left
[02:04] *** zb joined
[02:05] *** noganex joined
[02:10] *** zb left
[02:10] *** zb joined
[02:25] *** leprevost joined
[02:43] *** dju_ joined
[02:43] *** dju_ left
[02:43] *** dju_ joined
[02:44] *** dju left
[02:45] *** cotto joined
[02:49] *** dju_ left
[02:49] *** dju_ joined
[02:55] *** satyavvd joined
[02:55] *** whiteknight left
[03:01] *** pigdude left
[03:05] *** DarthGandalf left
[03:10] *** stifynsemons joined
[03:31] *** hudnix left
[03:34] *** hudnix joined
[03:43] *** stifynsemons left
[04:03] <dalek> niecza: 7e0a0a2 | sorear++ | TODO:

[04:03] <dalek> niecza: Add a couple more TODO items

[04:03] <dalek> niecza: review: https://github.com/sorear/niecza/commit/7e0a0a2bbc

[04:04] *** DarthGandalf joined
[04:04] *** bpalmer left
[04:04] *** bacek joined
[04:09] *** bacek left
[04:13] *** bacek joined
[04:18] *** _jaldhar_ joined
[04:22] *** stifynsemons joined
[04:23] *** Su-Shee_ joined
[04:27] *** Su-Shee left
[04:40] *** lakshman left
[04:42] *** sftp left
[04:56] *** cdarroch left
[05:30] *** nymacro joined
[05:31] *** lakshman joined
[05:46] <sorear> Did we ever come to a consensus about removing explicit plans from spec tests?

[05:54] *** woosley joined
[06:07] *** stifynsemons left
[06:08] *** hatseflats left
[06:08] *** hatseflats joined
[06:13] *** cjk101010 joined
[06:21] *** Mowah joined
[06:25] <sorear> ugh.  Spectests use .exists and .delete :/

[06:33] *** gabiruh left
[06:33] *** gabiruh joined
[06:34] *** leprevost left
[06:34] *** leprevost joined
[06:37] *** Bzek left
[06:38] *** Bzek joined
[06:44] *** Bzek left
[06:53] *** mberends left
[06:55] *** risou_ joined
[06:55] *** wtw joined
[06:57] *** risou left
[06:57] *** kaare_ joined
[07:00] *** fhelmberger joined
[07:02] *** woosley left
[07:02] *** woosley joined
[07:05] *** krunen_ left
[07:05] *** cosimo_ left
[07:06] *** krunen joined
[07:16] <dalek> roast: ef6789c | sorear++ | S02-lexical-conventions/unicode.t:

[07:16] <dalek> roast: Fudge S02-lexical-conventions/unicode.t for niecza

[07:16] <dalek> roast: review: https://github.com/perl6/roast/commit/ef6789c5bb

[07:16] <dalek> roast: 5623d0c | sorear++ | S02-builtin_data_types/array.t:

[07:16] <dalek> roast: Fudge S02/array for niecza

[07:16] <dalek> roast: review: https://github.com/perl6/roast/commit/5623d0c208

[07:16] <dalek> roast: 719c77d | sorear++ | S02-builtin_data_types/autovivification.t:

[07:16] <dalek> roast: Fudge S02/autovivification for niecza

[07:16] <dalek> roast: review: https://github.com/perl6/roast/commit/719c77dcaa

[07:16] <dalek> roast: 1b68345 | sorear++ | S02-builtin_data_types/bool.t:

[07:16] <dalek> roast: Fudge S02/bool for niecza

[07:16] <dalek> roast: review: https://github.com/perl6/roast/commit/1b68345cb7

[07:22] *** zb left
[07:29] *** zb joined
[07:34] <dalek> niecza: 811d5d9 | sorear++ | / (2 files):

[07:34] <dalek> niecza: Add a few more test functions, test files

[07:34] <dalek> niecza: review: https://github.com/sorear/niecza/commit/811d5d9855

[07:35] <dalek> roast: 450bf58 | sorear++ | S02-names_and_variables/contextual.t:

[07:35] <dalek> roast: fudge S02/contextual for niecza

[07:35] <dalek> roast: review: https://github.com/perl6/roast/commit/450bf587c2

[07:35] * sorear -> sleep

[07:37] *** fhelmberger left
[07:41] <moritz_> good morning

[07:42] *** justatheory left
[07:45] *** mtk left
[07:50] *** pigdude joined
[07:51] *** pigdude left
[07:52] <moritz_> masak++ # p4 reviews

[07:52] *** pigdude joined
[07:53] *** mtk joined
[07:54] *** pigdude left
[07:54] *** pigdude joined
[07:54] *** pigdude left
[07:55] *** pigdude joined
[07:57] *** pigdude left
[07:57] *** pigdude joined
[08:01] *** pigdude left
[08:05] <diakopter> moritz_: you're up..... early?

[08:05] <diakopter> oh, nm

[08:06] * diakopter imagines what I might've missed at last week's #pashers

[08:06] <diakopter> er.  #phasers

[08:07] *** agentzh joined
[08:07] <mathw> morning

[08:08] <diakopter> \

[08:10] *** woosley left
[08:11] * diakopter giggles at "altitude on mars"

[08:12] *** Su-Shee_ is now known as Su-Shee

[08:13] *** drbean joined
[08:20] *** Nevin joined
[08:20] *** Nevin left
[08:31] *** ab5tract joined
[08:47] *** woldrich joined
[08:48] <woldrich> rakudo: printf("%s is %s\n", (3 == 3) ? 3 : 4, 'nice');

[08:48] <p6eval> rakudo 6f9116: OUTPUT¬´===SORRY!===‚ê§Unable to parse postcircumfix:sym<( )>, couldn't find final ')' at line 22‚ê§¬ª

[08:48] <woldrich> Why is that?

[08:53] <moritz_> std: printf("%s is %s\n", (3 == 3) ? 3 : 4, 'nice');

[08:53] <p6eval> std 625303c: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Unsupported use of ?: for the conditional operator; in Perl 6 please use ??!! at /tmp/x0pufR33Nv line 1:‚ê§------> [32mprintf("%s is %s\n", (3 == 3) ?[33m‚èè[31m 3 : 4, 'nice');[0m‚ê§Parse failed‚ê§FAILED 00:01 123m‚ê§¬ª

[08:53] <woldrich> :|

[08:53] <moritz_> woldrich: std generally gives better syntax errors... read it, it tells you what you did wrong :-)

[08:53] <snarkyboojum> because the ternary op is now ?? !!

[08:54] <woldrich> moritz_,  I see, can I get those nice messages on my box as well? I'm tired of ====SORRY!==== :<

[08:55] <moritz_> woldrich: https://github.com/perl6/std/

[08:55] <moritz_> the README tells you what you need

[08:56] <woldrich> ah, nice, thank you

[08:58] <moritz_> and then ./viv yourfile.pl

[08:58] <moritz_> there's also STD on CPAN

[08:59] <snarkyboojum> you can also do ./tryfile yourfile.pl too after you installed std

[08:59] <moritz_> ah, that's in tools/ in the source

[09:01] <snarkyboojum> yeah, nice colourful output :)

[09:06] <snarkyboojum> so, have winners been announced for masak's challenge?

[09:07] <snarkyboojum> oh, not all problems have been covered eh

[09:08] <woldrich> hm...

[09:08] <woldrich> http://codepad.org/UxYbnRRk :/

[09:09] <woldrich> and my ternary still doesnt work in perl6 .. oh well :)

[09:09] *** leprevost left
[09:09] <woldrich> is there a perl6-compatible pastebin that's preferred somewhere?

[09:09] <moritz_> rakudo: say True ?? 3 !! 4;

[09:09] <p6eval> rakudo 6f9116: OUTPUT¬´3‚ê§¬ª

[09:09] <moritz_> rakudo: say False ?? 3 !! 4;

[09:09] <p6eval> rakudo 6f9116: OUTPUT¬´4‚ê§¬ª

[09:09] <snarkyboojum> rakudo: printf("%s is %s\n", (3 == 3) ?? 3 !! 4, 'nice');

[09:09] <moritz_> woldrich: we often use gist.github.com, but it doesn't directly support perl 6

[09:09] <p6eval> rakudo 6f9116: OUTPUT¬´3 is nice‚ê§¬ª

[09:10] <woldrich> alright; http://codepad.org/0OUlkUjo

[09:10] <moritz_> woldrich: rakudo startup time is known to be much larger than p5's, and runtime is 2 to 3 orders of magnitudes slower

[09:10] <moritz_> we're working on it.

[09:11] <moritz_> woldrich: == compares numerically

[09:11] <woldrich> but eq didnt work? :/

[09:11] <moritz_> and an array in numeric context just returns the number of elements

[09:11] <moritz_> woldrich: in what way it did not work?

[09:11] <woldrich> hmm, eq worked now. :p

[09:12] <moritz_> rakudo: say <a b> eqv <a c>

[09:12] <p6eval> rakudo 6f9116: OUTPUT¬´Bool::False‚ê§¬ª

[09:12] <moritz_> rakudo: say <a b> eqv <a b>

[09:12] <p6eval> rakudo 6f9116: OUTPUT¬´Bool::True‚ê§¬ª

[09:12] <moritz_> woldrich: I think you should use eqv. It does structural comparison

[09:12] <woldrich> so, (join('', @list) eq scalar(reverse(join('', @list))) .. ?

[09:12] <woldrich> oh...

[09:13] <woldrich> yeah, there.

[09:13] <moritz_> if you join,  ('ab', 'c') and ('a', 'bc') compare equal

[09:13] <moritz_> do you want that?

[09:13] <moritz_> if yes, write   @list.join eq @list.join.flip

[09:14] <woldrich> yeah, no, eqv is what I wanted. By the way, is there something like an perl6doc executable?

[09:14] <moritz_> not yet :(

[09:14] <woldrich> Okay..

[09:15] <snarkyboojum> that would surely be a super awesome GSOC idea :P

[09:15] <snarkyboojum> oh, it was wasn't it..

[09:15] <moritz_> snarkyboojum: we have grok, which came out of a GSOC project

[09:15] <moritz_> snarkyboojum: but it's not only the program, we also need the docs :/

[09:15] <snarkyboojum> moritz_: that's right.. a p5 type implementation from memory

[09:15] <woldrich> I have yet to find a language that even come close to the amazing perl5 documentation

[09:16] <snarkyboojum> woldrich: definitely agree with you

[09:16] <moritz_> I've had very good acceptance rate of doc patches to the p5 .pod files

[09:16] <snarkyboojum> moritz_: aye, docs iz the hard biz eh :P

[09:18] <woldrich> moritz_, really? that's interesting. Following the p5p ml, and when someone contributes a patch, it usually starts a flamewar... mostly the old timers that manages to veto it

[09:18] <snarkyboojum> but we have awesome specs and perl6book :D

[09:18] *** xabbu42 joined
[09:18] <moritz_> woldrich: I often submitted small-scale doc patches for things that were previously omitted or unclear

[09:18] <moritz_> woldrich: and I often went through #p5p IRC channel, not the mailing list :-)

[09:19] <woldrich> Is there some 'real' applications or modules one could read? iirc someone whipped up a LWP::Simple... somewhere

[09:19] <woldrich> moritz_, ah.

[09:19] <snarkyboojum> woldrich: modules.perl6.org

[09:19] <moritz_> you can find the LWP::Simple and other stuff on http://modules.perl6.org/

[09:19] <woldrich> oh, nice, I was looking at cpan6.org :)

[09:20] <moritz_> and for example I've done http://perlgeek.de/blog-en/perl-6/physical-modelling.html with self-written (and still working) Perl 6 modules

[09:20] *** felliott joined
[09:20] <snarkyboojum> I look at that occasionally - it doesn't seem to change

[09:20] <woldrich> Yeah... I'll get around and try to port some modules of my own

[09:21] <snarkyboojum> and then there's clever perl 6 code at rosettacode.org

[09:23] <snarkyboojum> or should I say, http://rosettacode.org/wiki/Category:Perl_6

[09:23] <woldrich> I see there's Term::ANSIColor, Term::ExtendedColor shouldn't be too hard... Are there any plans for a cpan for perl6? The cpan6.org site seemed a bit ... dead. The cpan source is available, so it should be pretty easy setting that up?

[09:24] <moritz_> not so easy :(

[09:24] <moritz_> p6 has some ... extended requirements

[09:24] <moritz_> see S11

[09:24] *** dakkar joined
[09:24] <woldrich> Synopsis 11?

[09:24] <moritz_> yes

[09:25] <moritz_> if you look at irc.perl6.org, the string S11 is automatically turned into a link to the right synopsis

[09:25] <woldrich> hah. nifty

[09:34] *** masak joined
[09:35] <masak> almost-still-morning, #perl6

[09:35] <woldrich> masak, it's cold today :)

[09:35] <moritz_> \o masak 

[09:36] <snarkyboojum> o/

[09:36] *** am0c^ joined
[09:36] <Tene> masak: I'm not so sure about your last bug submission, btw... it doesn't look like the problem is actually in the lines method

[09:37] <Tene> rakudo: say "A\n\nB\n".lines.perl

[09:37] <masak> Tene: I think moritz_ already fixed that bug.

[09:37] <p6eval> rakudo 6f9116: OUTPUT¬´("A", "", "B")‚ê§¬ª

[09:37] <Tene> ah, well

[09:37] <masak> moritz_++

[09:37] <moritz_> I did

[09:37] *** daxim joined
[09:37] <masak> Tene: it's a hectic industry :)

[09:37] <Tene> I suppose that might explain why p6eval reports it working correctly, then. :)

[09:37] <moritz_> interestingly enough, it revealed a bug in .comb

[09:38] *** jnthn left
[09:38] *** jnthn joined
[09:38] *** ab5tract left
[09:39] <masak> maybe I didn't mention that the bug came out of dogfooding.

[09:39] <masak> I discovered it when looking at the code blocks in the review notes generated by the Perl 6 sacript that throws together code and reviews.

[09:40] <masak> oh, and if I've missed anything significant in my http://strangelyconsistent.org/p6cc2010/ reviews, please let me know. I'll happily take suggestions for improvements.

[09:41] *** am0c left
[09:41] <moritz_> well, I blogged about some :-)

[09:45] <Su-Shee> *haha* I'm curious when this will happen in the perl world: http://python3wos.appspot.com/ (python 3 wall of shame :)

[09:45] *** ab5tract joined
[09:46] *** arnsholt left
[09:46] <moritz_> Su-Shee: I'm quite sure it won't, because the gap between p5/p6 is much larger than between py2/py3

[09:47] <masak> moritz_: I'll see about integrating the ones you blogged about, sometime later today.

[09:47] <Su-Shee> well translate it into "doesn't load in..." :)

[09:52] <snarkyboojum> esp if perl 6 implementation can run perl 5 :D

[09:53] <dalek> evalbot: 326fd1f | moritz++ | build-scripts/rebuild-nqp.sh:

[09:53] <dalek> evalbot: script for rebuilding nqp

[09:53] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/326fd1f88e

[09:53] <dalek> evalbot: b81275b | moritz++ | evalbot.pl:

[09:53] <dalek> evalbot: nqp target now runs nqp, nqprx runs nqp-rx

[09:53] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/b81275bbd9

[09:55] <moritz_> phenny: tell diakopter that I "git stash"ed some changes to evalbot, because I needed to pull and didn't know what to do with them - fell free to 'git stash apply' + commit, or let them rot

[09:55] <phenny> moritz_: I'll pass that on when diakopter is around.

[09:55] *** p6eval left
[09:56] *** p6eval joined
[09:56] *** ChanServ sets mode: +v p6eval

[09:56] <tadzik> Su-Shee: I made a hall of shame for the new module system :)

[09:56] <tadzik> https://github.com/tadzik/ecosystem/tree/master/SHELTER

[09:57] <Su-Shee> tadzik: :)

[09:59] *** ab5tract left
[09:59] <snarkyboojum> tadzik: those that don't have a neutro compatible manifest file?

[10:00] <moritz_> tadzik: where's the spec for the new meta file?

[10:00] *** nymacro left
[10:00] *** ab5tract joined
[10:00] <tadzik> snarkyboojum: yeah

[10:01] <moritz_> I think I updated json, and forgot the rest of my modules :-)

[10:01] <tadzik> moritz_: um, yeah, well, I mean, there will be! I promise!

[10:01] <tadzik> Maybe today :)

[10:01] <moritz_> tadzik: or a pseudo-canonical example?

[10:02] <snarkyboojum> you're co-opting module metadata :P!

[10:02] <tadzik> moritz_: just look at the existing ones :)

[10:02] <tadzik> neutro has one, 50% of modules have :)

[10:02] *** stifynsemons joined
[10:03] <moritz_> uhm

[10:03] <moritz_> neutro has a deps.proto

[10:03] <moritz_> but not .json file

[10:04] <snarkyboojum> moritz_: try the metainfo branch

[10:05] <moritz_> nqp: class A { }; say A;

[10:05] <p6eval> nqp: OUTPUT¬´Confused at line 1, near "say A;"‚ê§current instr.: 'parrot;HLL;Grammar;panic' pc 17541 (gen/hllgrammar-grammar.pir:4828)‚ê§¬ª

[10:05] <snarkyboojum> tadzik: the metainfo branch should be made trunk already! :P

[10:05] <moritz_> nqp: class A { }; say(A);

[10:05] <p6eval> nqp: OUTPUT¬´A()‚ê§¬ª

[10:05] <moritz_> jnthn++

[10:07] <tadzik> snarkyboojum: too bad it's slow as a snail race :)

[10:08] <snarkyboojum> tadzik: slower than master?

[10:08] <tadzik> and last time I planned I had some reasons not to merge it

[10:08] <snarkyboojum> tadzik: a nd does master work?

[10:08] <tadzik> snarkyboojum: far slowe, yes. The json parsing is 40 seconds. On every run

[10:08] <tadzik> snarkyboojum: yes

[10:09] <snarkyboojum> tadzik: ok then!

[10:09] <snarkyboojum> tadzik: maybe it was proto or pls that didn't work

[10:10] <tadzik> snarkyboojum: I'm afraid it's both :P

[10:11] <snarkyboojum> I've been thinking of what I can do for a Perl 6 "hack in the pub" day/evening here in Sydney (I have one or two takers), and thought a good candidate might be to get people to try modules/compilers/whatever and just log as many legit bugs against them as possible

[10:11] <snarkyboojum> </evil-thoughts> :)

[10:11] <masak> snarkyboojum: sounds nice.

[10:11] <masak> snarkyboojum: getting people in the destructive mood somehow :)

[10:12] <snarkyboojum> masak: I was thinking I could call it "bug-a-masak"

[10:12] <masak> "let's see how we can subvert this system"

[10:12] <moritz_> :-)

[10:13] <tadzik> I'm thinking of a bug-fixing party. Actually diving the whole RT to a three parts: those bugs which are alredy fixed, those doable for a mere mortal, and those being absolute black magic

[10:13] <masak> snarkyboojum: would it require me to fly to Sydney? ;)

[10:14] <masak> tadzik: the first part is already divided for you.

[10:14] <snarkyboojum> tadzik: both approaches sound very yin yang :) I like it.

[10:14] <moritz_> I'm afraid that far too many fall into the "absolute black magic" category :(

[10:15] <tadzik> masak: actually, no. Last time I wanted to fix some bugs on the RT, every time I found something like "oh, I may be able to fix this", it was alredy working on Rakudo, but it was still open

[10:15] <snarkyboojum> masak: probably - I can't guarantee flights, but I could guarantee a quantity of beer ;)

[10:15] *** TH14 joined
[10:18] *** TH14 left
[10:20] <jnthn> Beer?! Where?!

[10:20] <jnthn> er, morning #perl6 :)

[10:20] <moritz_> good late morning jnthn :-)

[10:21] <moritz_> jnthn: is it OK to apply bacek's patch from yesterday to rakudo/master?

[10:21] <jnthn> moritz_: Related to write-barriers?

[10:21] <moritz_> jnthn: aye

[10:21] <jnthn> moritz_: Got a link to it handy?

[10:21] <moritz_> http://nopaste.snit.ch/31882

[10:21] <snarkyboojum> jnthn: I swear I visualised you saying that before you did :) 

[10:21] <moritz_> it also has a few changes for the form

[10:21] <moritz_> -                bind_fail = Rakudo_binding_bind_one_param(interp, lexpad, elements[i],

[10:21] <moritz_> +                bind_fail = Rakudo_binding_bind_one_param(interp, lexpad, llsig, elements[i],

[10:22] <bacek> ~~

[10:22] <phenny> bacek: 11 Feb 14:58Z <masak> tell bacek http://trac.parrot.org/parrot/ticket/2006

[10:22] <jnthn> moritz_: Looks sensible to me.

[10:22] <bacek> jnthn, it's required for write-barriering of llsig

[10:22] <jnthn> bacek: Yes, understand. :)

[10:23] <tadzik> .u ‚ô´

[10:23] <phenny> U+266B BEAMED EIGHTH NOTES (‚ô´)

[10:23] <jnthn> bacek: It's pretty much what I would have done. :)

[10:23] <jnthn> bacek++

[10:23] <bacek> jnthn, :)

[10:23] <tadzik> uhm, they don't look lik eights on my font

[10:23] <jnthn> bacek: I hear you've been hacking on some gen-gc opts too?

[10:24] <bacek> jnthn, yes. But I'm epically failing to make it twice faster on compiling core.pm.

[10:24] <bacek> jnthn, only 42% speed-up :)

[10:24] <jnthn> "only" :P

[10:24] <moritz_> "only"

[10:24] <tadzik> fail! :D

[10:24] <bacek> jnthn, comparing to gc ms2

[10:25] <jnthn> bacek: This implies that before we spent...at least half of runtime doing GC?

[10:25] <jnthn> Or around that kinda mark?

[10:25] <bacek> jnthn, about 40%

[10:25] <jnthn> bacek: OK

[10:25] <tadzik> erm, we still Do use GC there

[10:25] <moritz_> so what's the next big thing? PCC?

[10:25] <bacek> jnthn, oton rakudo creates _a lot_ of GCable.

[10:25] <tadzik> I hope so. I believe dozens of calls are the reason JSON::TIny is so slow

[10:25] <jnthn> bacek: Yeah. That's going to improve a lot.

[10:26] <bacek> moritz_, yes. PCC is terribly slow.

[10:26] <bacek> jnthn, excellent!

[10:26] <tadzik> what are GCables?

[10:27] <tadzik> sounds like something from Glib :)

[10:27] <moritz_> objects that the garbage collector has to consider

[10:27] <bacek> moritz_, last test from t/spec/S02-builtin_data_types/instants-and-durations.t looks suspicious. It fails from time to time. I suspect due floating point rounding.

[10:27] <tadzik> mhm

[10:27] <moritz_> bacek: I know, but I don't really know what to do about itj

[10:27] <tadzik> oh, I read that as G-Cables

[10:28] <bacek> moritz_, ok. I just want to confirm that isn't gen_gc bug :)

[10:29] <moritz_> I've seen it fail occasionally on master too

[10:32] <bacek> tadzik, do you have any benchmarks for JSON::Tiny? Which are running for 2-3 seconds.

[10:33] * colomon is leaving his epic post on rationals and gcd unfinished to go back to bed.

[10:33] <tadzik> bacek: Well, I can write some. This will just be "parse a sufficiently long json string"

[10:34] *** am0c^ left
[10:35] <bacek> tadzik, just give me something to test on. "canonical". So I can compare performance between builds.

[10:35] <tadzik> whoa, whoa, what's that new repl startup time? Are you nuts?

[10:35] <tadzik> bacek++

[10:35] <jnthn> tadzik: On gen-gc branch? :)

[10:36] <tadzik> jnthn: yeah

[10:37] <jnthn> Nice!

[10:38] *** cogno joined
[10:40] *** cogno left
[10:42] <tadzik> hmm, every method call and an operator in Rakudo is a sub call. PCC is The Bottleneck, no?

[10:46] <jnthn> Well, or the lack of an inlining optimizer...or the multi-dispatch cache... :)

[10:47] <jnthn> The current multi-dispatch cache allocates a GC-able every lookup. It'll be replaced by one that doesn't :)

[10:47] *** VXZ joined
[10:49] <tadzik> big performance hits behind the corner, I like it

[10:52] *** tzhs joined
[10:58] *** agentzh left
[11:03] <Tene> tadzik: PCC has pretty big performance impact, yes.  It is definitely a target for optimization.

[11:12] *** TH14 joined
[11:13] <masak> moritz_: I'm wondering if your comment on "double blank lines" in http://perlgeek.de/blog-en/perl-6/thoughts-on-p6cc.html wasn't influenced by the .lines bug...

[11:14] <moritz_> masak: the other submissions didn't show so many double newlines

[11:14] *** TH14 left
[11:19] *** Vlavv left
[11:22] *** awoodland joined
[11:23] *** VXZ left
[11:24] *** thepler left
[11:24] *** thepler joined
[11:28] *** stifynsemons left
[11:31] *** xabbu42 left
[11:32] *** Chillance joined
[11:32] <masak> moritz_: well, maybe they didn't have as many empty lines.

[11:37] *** arnsholt joined
[11:42] *** satyavvd left
[11:43] *** TH14 joined
[11:43] *** TH14 left
[11:43] *** thepler left
[11:46] *** coldhead left
[11:50] *** bacek left
[11:59] *** ab5tract left
[11:59] *** shi joined
[12:01] *** thepler joined
[12:05] <arnsholt> Apparently, I'm James T. Kirk =D

[12:09] *** ab5tract joined
[12:14] <masak> :)

[12:24] *** timbunce joined
[12:25] *** timbunce left
[12:27] * Alias skates with a guy who's derby name is James T Hurt

[12:38] *** MayDaniel joined
[12:42] *** satyavvd joined
[12:44] <masak> ouch :)

[12:45] *** satyavvd_ joined
[12:47] *** satyavvd left
[12:50] *** TH14 joined
[12:55] *** TH14 left
[12:59] *** TH14 joined
[13:00] *** _twitch joined
[13:00] *** masak left
[13:01] <TH14> lonely here

[13:01] <moritz_> TH14: try a dating site :-)

[13:02] *** pnu left
[13:02] *** TH14 left
[13:04] *** _twitch left
[13:04] *** _twitch joined
[13:04] <tadzik> try linux irc channels, I met my love there :)

[13:05] *** mberends joined
[13:05] <jnthn> ...such things happen out of the movies? Wow! :)

[13:05] <moritz_> try real life, I met my wife there :-)

[13:05] <tadzik> I was suprised too :)

[13:05] *** pnu joined
[13:06] <mberends> o/ jnthn moritz_ tadzik 

[13:06] <tadzik> mberends: o/

[13:06] <jnthn> o/ mberends 

[13:06] <moritz_> \o *

[13:06] <takadonet> morning all

[13:13] *** awoodland left
[13:14] *** HarryS left
[13:16] *** [Coke] left
[13:16] *** arthur-_ joined
[13:18] *** redicaps joined
[13:18] * moritz_ hacks on the search feature of the IRC logs

[13:19] <moritz_> let's see how long it takes to build a fulltext index on the lines

[13:20] <flussence> how's it storing the data right now? just a plaintext file?

[13:20] <moritz_> mysql

[13:21] <moritz_> and it currently uses mysql's full text search

[13:21] <moritz_> which sucks

[13:21] <moritz_> so I'm trying KinoSearch next

[13:21] <flussence> I know, I had to do something complicated with it for $dayjob :)

[13:22] * jnthn had good experience with Solr.

[13:22] <flussence> I don't know if I was just phrasing the query wrong, but it seems you can't even join on rows found by a fulltext match()...

[13:22] *** saaki left
[13:22] *** [Coke] joined
[13:24] <moritz_> flussence: arbitrary restrictions are found occasionally when dealing with mysql

[13:26] <dalek> rakudo: 76cd24a | bacek++ | src/ (2 files):

[13:26] <dalek> rakudo: more write barriers

[13:26] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/76cd24a19f

[13:26] <dalek> rakudo: 1a997d3 | moritz++ | build/PARROT_REVISION:

[13:26] <dalek> rakudo: bump PARROT_REVISION to the current release

[13:26] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/1a997d3c29

[13:28] <moritz_> 10min for building 676MB index

[13:29] *** obra left
[13:29] *** am0c joined
[13:30] <moritz_> and 0.1s for searching a query with about 10 hits

[13:40] *** MayDaniel left
[13:55] *** masak joined
[13:55] <masak> \o/

[13:55] <tadzik> \o

[13:59] <takadonet> o/

[14:04] <flussence> .oO( finally got that php work done with... back to finishing the CGI.pm one :( )

[14:06] * masak hugs flussence 

[14:12] <flussence> oh well, the one upside to being given all these side jobs by myself is that I can use git without anyone noticing :)

[14:13] <tadzik> (:

[14:14] *** plobsing left
[14:14] *** satyavvd_ left
[14:14] *** HarryS joined
[14:24] *** awoodland joined
[14:25] *** ab5tract left
[14:25] *** Vlavv joined
[14:30] *** stifynsemons joined
[14:33] *** lakshman left
[14:34] *** M_o_C joined
[14:38] *** stifynsemons left
[14:42] *** gdey joined
[14:43] *** _twitch left
[14:46] *** _twitch joined
[14:47] *** plainhao joined
[14:52] *** Trashlord left
[14:55] *** gdey left
[14:56] *** gdey joined
[14:57] *** bluescreen_ joined
[14:59] *** plobsing joined
[15:02] *** felliott left
[15:04] * TimToady is at sfo, about to go in search of caffeine...

[15:04] *** alester joined
[15:04] *** shi left
[15:05] *** kaare_ left
[15:09] *** mberends left
[15:10] *** M_o_C left
[15:11] *** masak left
[15:12] *** skangas joined
[15:17] *** wtw left
[15:19] *** rdesfo joined
[15:20] *** ymasory joined
[15:23] *** fhelmberger joined
[15:23] *** pigdude joined
[15:23] *** pigdude left
[15:23] *** pigdude joined
[15:24] *** redicaps left
[15:27] <sorear> hi #perl6

[15:28] <tadzik> hi sorear 

[15:30] *** M_o_C joined
[15:31] *** M_o_C left
[15:35] *** _sri left
[15:41] *** sftp joined
[15:41] *** _sri joined
[15:41] *** _sri left
[15:42] *** knewt2_ left
[15:42] *** _sri joined
[15:50] *** donri joined
[15:50] *** Trashlord joined
[15:50] <donri> why does subs require {}?

[15:50] <phenny> donri: 14 Feb 23:45Z <Tene> tell donri btw, if you *do* run into other non-readline programs, please use rlwrap.  Friends don't let friends use non-readline interactive programs. ;)

[15:51] *** bluescreen_ left
[15:51] <donri> Tene: haha thanks dear :)

[15:51] <colomon> loliblogged: http://justrakudoit.wordpress.com/2011/02/15/simplifying-rationals/

[15:51] <sorear> donri: because Perl 6 uses { } for all constructs that produce a lexical scope

[15:51] <moritz_> donri: because a sub without executable code wouldn't make much sense

[15:52] <donri> does "if" require {} for single-statements?

[15:52] <moritz_> and the way to attache code to a name or variable is { }

[15:52] <moritz_> yes

[15:52] <donri> i was thinking it didn't but i'm wrong :D

[15:52] <moritz_> except statement ending if

[15:52] <moritz_> rakudo: say 3 if True;

[15:52] <donri> yea

[15:52] <sorear> also, sub doesn't require { } in all cases

[15:52] <p6eval> rakudo 6f9116: OUTPUT¬´3‚ê§¬ª

[15:52] <donri> so if bodies are scoped?

[15:52] *** stifynsemons joined
[15:52] <sorear> per spec, you're allowed to say sub MAIN; and have the rest of the file be MAIN's body

[15:53] <sorear> don't think anyone implemenmts this yet

[15:53] <moritz_> std: sub MAIN; say 3

[15:53] <p6eval> std 625303c: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Malformed block at /tmp/CislUY8PLH line 1:‚ê§------> [32msub MAIN[33m‚èè[31m; say 3[0m‚ê§    expecting any of:‚ê§        new name to be defined‚ê§ routine_def‚ê§    trait‚ê§Parse failed‚ê§FAILED 00:01 117m‚ê§¬ª

[15:53] <donri> rakudo: if (True) { my $var = 3; }; say $var

[15:53] <p6eval> rakudo 6f9116: OUTPUT¬´===SORRY!===‚ê§Symbol '$var' not predeclared in <anonymous> (/tmp/lhxSXRhOPC:22)‚ê§¬ª

[15:53] <sorear> donri: yes, it's not like Javascript in that regard

[15:53] <flussence> how about adding statement-ending sub for consistency? :)

[15:53] <PerlJam> beware the hobgoblin of foolish consistency.

[15:53] <donri> does that only work for MAIN?

[15:54] <sorear> flussence: I think that's spelled "given $^a"

[15:54] <donri> per spec

[15:54] <sorear> donri: yes

[15:54] <donri> how disappointing

[15:54] <flussence> std: say $^x sub(3); # please don't work

[15:54] <p6eval> std 625303c: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Placeholder variable $^x may not be used outside of a block at /tmp/ikH3x5CcSW line 1:‚ê§------> [32msay $^x[33m‚èè[31m sub(3); # please don't work[0m‚ê§Two terms in a row at /tmp/ikH3x5CcSW line 1:‚ê§------> [32msay $^x [33m‚èè[31msub(3); # please

[15:54] <p6eval> ..don't‚Ä¶

[15:54] <moritz_> donri: in javascript, it's the function() that introduces a new scope. In Perl (5 and 6) it's the {

[15:54] <donri> I come from Python ;)

[15:54] *** ymasory left
[15:54] <flussence> JS also does it for loops, I think

[15:54] <sorear> S06:423

[15:54] <donri> which has mad scoping rules

[15:55] <moritz_> I never grokked python's scoping ru... ah, that explains it :-)

[15:55] <PerlJam> python's scoping rules are simple .... too simple  ;)

[15:55] <donri> haha

[15:56] <donri> it's not not having to predeclare variables that are set up conditionally for example

[15:56] <donri> s/not not/neat not/

[15:56] <donri> but the scoping is still mad in python

[15:56] <PerlJam> donri: if by "neat" you mean "crazy", I agree with you  :)

[15:57] <flussence> *insert obligatory it-can't-be-as-bad-as-php here*

[15:57] *** envi left
[15:57] <PerlJam> well, to be fair, auto-declared vars are just fine, but they don't give the compiler enough information to help you when you accidentally do something stupid.

[15:58] <PerlJam> (and people tend to do stupid things far more often than they'd admit)

[15:58] <moritz_> especially while learning a language, and being confused by hundred other things

[15:59] <colomon> I can usually do six stupid things before breakfast!

[16:00] <donri> PerlJam: neat if you have an else so that it gets unconditionally set

[16:00] <donri> but it might require some computation so you don't want to do it first if it's not used

[16:00] *** plobsing left
[16:00] <moritz_> all stupid things I do are before breakfast, except maybe until I stop having breakfasts altogether

[16:01] <broquaint> flussence: JS vars are function scoped - https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Core_Language_Features#Variable_Scope

[16:01] <moritz_> colomon: in your blog, "25/50 + 50/100 is required to be 100/100" ENOMATH

[16:03] <colomon> huh?

[16:03] <moritz_> oh, I can't read, sorry

[16:03] <flussence> hm, guess I just got in the habit of writing var inside for() a lot in JS...

[16:03] <moritz_> colomon: I thought you had written 25/100

[16:04] <PerlJam> EPOORREADING

[16:05] <PerlJam> colomon: though, I have to wonder what a "cartoon of worms" is exactly  :)

[16:06] * PerlJam draws some worms and animates them

[16:07] <colomon> .... errr.... cartoon is wrong.

[16:07] <colomon> carton.

[16:07] * colomon had a massive spelling fail there.

[16:07] <PerlJam> or just a lazy finger

[16:07] <colomon> moritz_: the sad thing is, at least as I read the spec, 25/100 + 50/100 can be 3/4.

[16:08] <colomon> moritz_: I assumed that was just a think-o in the spec for the rest of the article.

[16:08] *** benabik joined
[16:09] *** Rotwang joined
[16:09] <colomon> well, I suppose technically 100 is a multiple of 100

[16:09] <colomon> but so is 0, by that logic.  :)

[16:09] <PerlJam> colomon: I don't know ... the part  you quoted talks about lazy reduction of fractions, so 25/100 + 50/100  is 75/100 unless and until the "100" exceeds the storage size of an Int

[16:10] <colomon> PerlJam: lazy reduction is optional.

[16:10] <colomon> except when it isn't.

[16:10] <colomon> except it still is then, too.

[16:10] <colomon> that's a major point of the blog post.

[16:12] <flussence> rakudo: my $a = 10/10; for (1..9) { $a.denominator--; say $a }

[16:12] <p6eval> rakudo 6f9116: OUTPUT¬´Cannot modify readonly value‚ê§  in '&infix:<=>' at line 1‚ê§  in <anon> at line 7461:CORE.setting‚ê§  in main program body at line 1‚ê§¬ª

[16:13] <flussence> oh, guess that answers what I was wondering

[16:13] <flussence> lazy/nonlazy would behave differently there

[16:13] <flussence> if it worked

[16:14] <flussence> rakudo: my $a = 10/10; for (1..9) { $a = $a.numerator/$a.denominator-1; say $a }

[16:14] <moritz_> Rats are immutable

[16:14] <p6eval> rakudo 6f9116: OUTPUT¬´0‚ê§-1‚ê§-2‚ê§-3‚ê§-4‚ê§-5‚ê§-6‚ê§-7‚ê§-8‚ê§¬ª

[16:14] <flussence> and I get it wrong as usual :)

[16:14] <flussence> rakudo: my $a = 10/10; for (1..9) { $a = $a.numerator/($a.denominator-1); say $a }

[16:14] <p6eval> rakudo 6f9116: OUTPUT¬´Inf‚ê§-1‚ê§-Inf‚ê§1‚ê§Inf‚ê§-1‚ê§-Inf‚ê§1‚ê§Inf‚ê§¬ª

[16:14] <flussence> that looks nonlazy to me...

[16:14] <colomon> :\

[16:14] <PerlJam> $rat.=norm does look like it mutates the Rat to me.

[16:15] <colomon> flussence: Rakudo is very definitely non-lazy.

[16:15] <moritz_> rakudo: say (10/10).perl

[16:15] <p6eval> rakudo 6f9116: OUTPUT¬´1/1‚ê§¬ª

[16:15] <colomon> PerlJam:  of course not.  it's just $rat = $rat.norm

[16:15] <moritz_> PerlJam: yep, but that only works on variables, not on values

[16:15] <colomon> errr, I shouldn't say "of course not".

[16:15] *** Patterner left
[16:15] <colomon> but that's the general way p6 works.

[16:16] *** cjk101010 left
[16:16] <colomon> Rakudo doesn't implement anything like the rules in the spec for simplifying fractions.

[16:16] <colomon> to be fair, I think many / most of those rules were added after Rat was implemented.

[16:17] <colomon> but to be precise, I've long been pretty dubious about the spec's rules on simplification, so I've been dragging my feet implementing it.  Looking at FatRat just brought that into focus.

[16:17] *** plobsing joined
[16:18] *** Psyche^ joined
[16:18] *** Psyche^ is now known as Patterner

[16:22] <PerlJam> colomon: where in the "strict reading" do you get that "50/100 + 50/100 can be 1/1"  ?

[16:23] <colomon> PerlJam: the question is whether 100 is a multiple of 100.

[16:25] <PerlJam> colomon: If I say  my $a = 50/100 + 50/100; then I expect that $a.nu == 100 && $a.de == 100 and that $a.perl == "1"

[16:25] <colomon> based on the spec, you mean?

[16:25] <PerlJam> yes

[16:26] <colomon> I think you mean $a.perl eq "1."

[16:27] <colomon> as "1" would be an Int, not a Rat.

[16:27] <PerlJam> er, right

[16:27] <colomon> moritz_ has suggested the spec really meant that to $a.perl to be "1.00" in this case, but failed to actually say it.

[16:27] <colomon> s/that to//

[16:28] *** gdey left
[16:28] <PerlJam> perhaps

[16:28] * colomon has a toddler climbing on him to watch train videos in another window at the moment.

[16:31] <PerlJam> It seems to me that the verbiage on .perl is just wacky.  Fix that and things get much better

[16:38] *** justatheory joined
[16:38] *** ab5tract joined
[16:41] <colomon> wacky how?  (I mean, I agree it needs fixing, but then, I'm also of the opinion that 25/100 + 25/100 should be 1/2.)

[16:47] *** vert2 joined
[16:50] *** tzhs left
[16:51] <[Coke]> I wonder why the spec is telling implementations what to do there.

[16:58] *** ab5tract left
[17:00] <[Coke]> http://blogs.perl.org/users/xenu/2011/02/perl-5-subroutine-prototypes-really-suck.html - there's an opportunity for a P6 nudge.

[17:02] <tadzik> seen x3nU

[17:02] <aloha> x3nU was last seen in #perl6 23 days 4 hours ago leaving the channel.

[17:02] <[Coke]> colomon: have you tried offering a spec patch?

[17:03] <colomon> [Coke]: I hesitate to do that until I understand fully why the spec is the current weird way.

[17:03] *** daxim left
[17:03] *** benabik left
[17:04] <colomon> Presumably TimToady had a reason for the way things are, so while I think they are wrong, I'd rather discuss it rather than just start changing the spec.

[17:05] *** shi joined
[17:05] <[Coke]> That's why I suggested a patch instead of a commit. But ok.

[17:06] *** pigdude left
[17:06] <PerlJam> I think in the absense of TimToady here, a commit to the spec is a good communication tool :)

[17:06] <colomon> I guess the idea of submitting a patch for something I could just change directly never occurred to me.  :)

[17:07] *** rdesfo left
[17:09] *** _twitch left
[17:15] *** plobsing left
[17:18] *** bhwu joined
[17:36] *** bacek joined
[17:39] *** MayDaniel joined
[17:46] *** sji joined
[17:47] *** shi left
[17:49] *** bacek left
[17:51] *** dju__ joined
[17:54] *** tty234_ joined
[17:55] *** TiMBuS|Away joined
[17:55] *** pochi_ joined
[17:55] *** hillu_ joined
[17:55] *** domidumont1 joined
[17:55] *** pjcj_ joined
[17:55] *** jmmills_ joined
[17:56] *** lamstyle left
[17:56] *** spq left
[17:56] *** shachaf left
[17:56] *** pochi left
[17:56] *** domidumont left
[17:56] *** fith left
[17:56] *** kcwu left
[17:56] *** TiMBuS left
[17:56] *** pjcj left
[17:56] *** nothingmuch left
[17:56] *** bartolin left
[17:56] *** hillu left
[17:56] *** jmmills left
[17:56] *** cibs left
[17:56] *** JodaZ left
[17:56] *** cotto_work left
[17:56] *** amkrankr1leuen left
[17:56] *** moritz_ left
[17:56] *** cxreg left
[17:56] *** rokoteko left
[17:56] *** lestrrat left
[17:56] *** eternaleye left
[17:56] *** jdhore left
[17:56] *** broquaint left
[17:56] *** woldrich left
[17:56] *** hcchien left
[17:56] *** dalek left
[17:56] *** thepler left
[17:56] *** hatseflats left
[17:56] *** Su-Shee left
[17:56] *** bacek_at_work left
[17:56] *** Sargun left
[17:56] *** charsbr__ left
[17:56] *** Kovensky left
[17:56] *** diakopter left
[17:56] *** allbery_b left
[17:56] *** apejens left
[17:56] *** lue left
[17:56] *** yahooooo left
[17:56] *** nsh left
[17:56] *** nrr left
[17:56] *** gfldex left
[17:56] *** rbuels left
[17:56] *** flussence left
[17:56] *** mux left
[17:56] *** aloha left
[17:56] *** kolibrie left
[17:56] *** frodwith left
[17:56] *** meraxes left
[17:56] *** bhwu left
[17:56] *** stifynsemons left
[17:56] *** kaydsoft left
[17:56] *** jferrero left
[17:56] *** pyrimidine left
[17:56] *** REPLeffect left
[17:56] *** tty234 left
[17:56] *** Eevee left
[17:56] *** starcoder left
[17:56] *** mj41 left
[17:56] *** jql left
[17:56] *** simcop2387 left
[17:56] *** cookys left
[17:56] *** vert2 left
[17:56] *** Mowah left
[17:56] *** dju_ left
[17:56] *** kjeldahl left
[17:56] *** ddima left
[17:56] *** edenc left
[17:56] *** estrabd left
[17:56] *** jjore left
[17:56] *** frettled left
[17:56] *** Patterner left
[17:56] *** kst left
[17:56] *** jevin left
[17:56] *** silug left
[17:56] *** phenny left
[17:56] *** Helios left
[17:56] *** sbp left
[17:56] *** takesako left
[17:56] *** TiMBuS|Away is now known as TiMBuS

[17:56] *** lamstyle_ joined
[17:57] *** felliott joined
[17:59] *** edenc joined
[17:59] *** vert2 joined
[18:01] *** kaydsoft joined
[18:01] *** kjeldahl joined
[18:03] *** awoodland left
[18:03] *** stifynsemons joined
[18:05] *** lue joined
[18:05] *** yahooooo joined
[18:05] *** nsh joined
[18:05] *** nrr joined
[18:05] *** gfldex joined
[18:05] *** rbuels joined
[18:05] *** flussence joined
[18:05] *** mux joined
[18:05] *** aloha joined
[18:05] *** kolibrie joined
[18:05] *** frodwith joined
[18:05] *** meraxes joined
[18:05] *** calvino.freenode.net sets mode: +v aloha

[18:06] *** cibs joined
[18:06] *** Helios joined
[18:06] *** Patterner joined
[18:06] *** Eevee joined
[18:06] *** kst joined
[18:06] *** jevin joined
[18:06] *** silug joined
[18:06] *** phenny joined
[18:06] *** sbp joined
[18:06] *** takesako joined
[18:07] *** bartolin joined
[18:07] *** woldrich joined
[18:07] *** JodaZ joined
[18:07] *** cotto_work joined
[18:07] *** amkrankr1leuen joined
[18:07] *** cxreg joined
[18:07] *** moritz_ joined
[18:07] *** lestrrat joined
[18:07] *** rokoteko joined
[18:07] *** eternaleye joined
[18:07] *** jdhore joined
[18:07] *** broquaint joined
[18:07] *** hcchien joined
[18:07] *** dalek joined
[18:07] *** calvino.freenode.net sets mode: +v dalek

[18:09] *** tomaw is now known as 5EXAB34GN

[18:10] *** spq joined
[18:10] *** shachaf joined
[18:10] *** simcop2387 joined
[18:10] *** REPLeffect joined
[18:10] *** nothingmuch_ joined
[18:10] *** jql joined
[18:10] *** bhwu joined
[18:10] *** thepler joined
[18:10] *** Mowah joined
[18:10] *** hatseflats joined
[18:10] *** Su-Shee joined
[18:10] *** bacek_at_work joined
[18:10] *** Sargun joined
[18:10] *** jferrero joined
[18:10] *** pyrimidine joined
[18:10] *** ddima joined
[18:10] *** charsbr__ joined
[18:10] *** Kovensky joined
[18:10] *** mj41 joined
[18:10] *** diakopter joined
[18:10] *** estrabd joined
[18:10] *** allbery_b joined
[18:10] *** apejens joined
[18:10] *** jjore joined
[18:10] *** frettled joined
[18:10] *** cookys joined
[18:10] *** spq left
[18:10] *** REPLeffect left
[18:10] *** bhwu left
[18:10] *** jferrero left
[18:10] *** pyrimidine left
[18:10] *** mj41 left
[18:10] *** cookys left
[18:10] *** shachaf left
[18:10] *** simcop2387 left
[18:10] *** Mowah left
[18:10] *** ddima left
[18:10] *** estrabd left
[18:10] *** jjore left
[18:10] *** frettled left
[18:10] *** donri left
[18:10] *** donri_ joined
[18:10] *** donri_ left
[18:10] *** donri joined
[18:11] *** Mowah joined
[18:12] *** 5EXAB34GN is now known as tomaw

[18:13] *** shachaf joined
[18:13] *** bacek joined
[18:13] *** pigdude joined
[18:13] *** ddima joined
[18:14] *** jferrero joined
[18:16] <lue> hello zebras! #phasers today?

[18:16] *** cibs left
[18:16] <dalek> rakudo: cea2411 | KodiB++ | docs/ChangeLog:

[18:16] <dalek> rakudo: [docs] Mentioned xor changes in ChangeLog.

[18:16] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/cea2411df8

[18:17] *** MayDaniel left
[18:17] *** jjore joined
[18:17] *** cibs joined
[18:18] *** felipe left
[18:18] *** sftp left
[18:19] *** sftp joined
[18:22] *** pigdude left
[18:23] *** spq joined
[18:23] *** simcop2387 joined
[18:23] *** bhwu joined
[18:23] *** pyrimidine joined
[18:23] *** mj41 joined
[18:23] *** estrabd joined
[18:23] *** cookys joined
[18:23] *** frettled joined
[18:24] *** tty234_ left
[18:24] *** tty234_ joined
[18:24] *** lamstyle_ left
[18:24] *** lamstyle_ joined
[18:24] *** domidumont1 left
[18:24] *** domidumont1 joined
[18:24] *** vert2 left
[18:24] *** vert2 joined
[18:25] *** mberends joined
[18:25] *** cookys left
[18:25] <Util> lue: Yes, #phasers in 37 minutes. However, freenode announced 24 minutes ago that they have lost half the network due to hub issues.

[18:26] *** cookys joined
[18:26] <Util> If you cannot connect, you can monitor on http://irclog.perlgeek.de/phasers/2011-02-15

[18:26] *** plobsing joined
[18:27] <[Coke]> w a ? I c n t h a   o .

[18:27] <flussence> I got a server message 2 days ago saying the server I was on would be going down for maintenance, maybe it's that.

[18:27] <flussence> actually, half the network sounds like something else...

[18:29] *** cjk101010 joined
[18:32] *** lue left
[18:32] *** cdarroch joined
[18:32] *** cdarroch left
[18:32] *** cdarroch joined
[18:32] *** lue joined
[18:34] <lue> I better go do something so I can report it then :)

[18:35] *** cibs left
[18:37] *** dakkar left
[18:37] *** cookys left
[18:38] *** cookys joined
[18:41] *** spq left
[18:42] *** spq joined
[18:44] *** lakshman joined
[18:45] *** kaare_ joined
[18:49] *** starcoder joined
[18:50] *** kcwu joined
[18:54] *** simcop2387 left
[18:54] *** estrabd left
[18:54] *** frettled left
[18:54] *** frettled joined
[18:54] *** bhwu left
[18:54] *** pyrimidine left
[18:54] *** mj41 left
[18:55] *** estrabd joined
[18:55] *** mj41 joined
[18:55] *** pyrimidine joined
[18:56] *** skangas left
[18:57] *** simcop2387 joined
[18:57] *** [particle]1 is now known as [particle]

[19:01] *** cibs joined
[19:01] *** MayDaniel joined
[19:02] *** felipe joined
[19:02] *** cibs left
[19:02] *** cibs joined
[19:03] *** dual joined
[19:08] *** felliott left
[19:11] *** lue left
[19:13] *** lue joined
[19:15] <lue> (curse this computer!)

[19:16] *** colomon left
[19:20] * jnthn curses lue's computer

[19:23] *** risou_ left
[19:29] *** masak joined
[19:29] <masak> \o/

[19:31] <mberends> \o

[19:32] <masak> mberends: looking forward to meeting you in... less than three weeks. :)

[19:33] *** cibs left
[19:34] *** cibs joined
[19:34] <masak> std: 1.

[19:34] <p6eval> std 625303c: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Decimal point must be followed by digit at /tmp/4mO910GHhO line 1:‚ê§------> [32m1.[33m‚èè[31m<EOL>[0m‚ê§Unsupported use of . to concatenate strings; in Perl 6 please use ~ at /tmp/4mO910GHhO line 1 (EOF):‚ê§------> [32m1.[33m‚èè[31m<EOL>[0m‚ê§Parse

[19:34] <p6eval> ..faile‚Ä¶

[19:34] <masak> rakudo: say +"1."

[19:34] <p6eval> rakudo 6f9116: OUTPUT¬´1‚ê§¬ª

[19:35] *** perigrin_ joined
[19:37] *** takadonet left
[19:37] <masak> I think we need both a strict and a non-strict numifier, both fairly core.

[19:37] *** frettled left
[19:38] <lue> I shall take part in the rare activity of placing feet on solid ground in the interest of movement. afk! o/

[19:38] *** MayDaniel left
[19:39] *** frettled joined
[19:41] *** perigrin left
[19:41] *** perigrin_ is now known as perigrin

[19:45] *** felliott joined
[19:54] *** perigrin left
[19:54] *** ymasory joined
[20:00] *** benabik joined
[20:01] *** WAA5ICG joined
[20:05] <masak> 13WAA5ICG: I nominate you for Postmodernist IRC Nick of the Week.

[20:05] *** sji left
[20:07] *** sji joined
[20:08] *** jimbob joined
[20:13] *** pigdude joined
[20:15] *** pigdude left
[20:15] *** pigdude joined
[20:16] <masak> least useful key on the keyboard, anyone?

[20:16] * masak has a candidate, but waits until he hears others' suggestions

[20:16] <flussence> f8

[20:16] <masak> really? you have no application that uses f8?

[20:17] <flussence> probably lots, but it's so indescript I can never remember what most of them do.

[20:17] <masak> maybe it's because I'm a child of the DOS era programs... the Fn keys are very useful :)

[20:17] <apejens> caps lock

[20:18] <masak> F8 means "go back to running at full speed" in many debuggers.

[20:18] <flussence> F1 is a help button, F2 edits stuff in spreadsheets, F3 is find-next, F4 is for closing a window, F5 is reload, F6 switches frames, F7 does something in firefox that I remember because I keep hitting it accidentally...

[20:18] <masak> apejens: for all the poor sods who haven't changed Caps Lock to Ctrl, you mean? :P

[20:18] <flussence> actually, maybe I should say f9.

[20:18] <masak> apejens: actually Scroll Lock wins over Caps Lock, easy.

[20:18] <apejens> masak: well I have done that as well :)

[20:18] <flussence> F10 toggles maximise, F11 is fullscreen, F12 usually screws stuff up.

[20:18] <apejens> masak: my macs don't have scroll lock :)

[20:19] <masak> :)

[20:19] <masak> you're not missing anything important. :)

[20:19] <apejens> I know :p

[20:19] <flussence> it's a tossup between 8 and 9, but I think you've covered 8

[20:19] <benabik> Eject is the least useful on mine.  In no small part because I don't remember the last time I used my CD drive.

[20:20] <masak> flussence: I think I use F8 more than I use Right Shift.

[20:20] *** pigdude left
[20:20] <flussence> well then, anyone know a common use for F9? :)

[20:20] <apejens> benabik: true :p

[20:21] <apejens> f9 is next song on macs :p

[20:21] <benabik> apejens beat me to it.

[20:21] <apejens> but I use "f8" more, as thats play/pause

[20:22] <apejens> masak: right shift is also a good candidate, but eject wins for me I guess,if keys I've remapped no longer counts as the old keys :p

[20:22] *** pmichaud_ joined
[20:22] *** szabgab_ joined
[20:23] <flussence> if we're allowed to use hardware-specific buttons, then I pick the zoom¬± keys on mine, because they generate keycodes X11 can't handle.

[20:23] *** fhelmberger left
[20:23] *** Lorn joined
[20:23] *** dsp__ joined
[20:24] <Tene> I don't remember the last time I used scroll lock or the "menu" key next to my right "windows" key.

[20:24] *** y3llow_ joined
[20:24] <Tene> or pause/break

[20:24] <Tene> pretty sure I've used print screen occasionally, but very low numbers

[20:24] *** am0c left
[20:24] <masak> Tene: I wonder who invented the menu/right-click key, and why.

[20:24] <mberends> I last used a PrtSc/SysRq key over a decade ago, probably to operate a DOS multitasker.

[20:25] <masak> I've used print screen on several occasions in the past month.

[20:25] *** pnu_ joined
[20:25] *** lamstyle joined
[20:25] *** cjk101012 joined
[20:25] <masak> I've never used SysRq, I think. still don't know what it does, really.

[20:25] *** dju__ left
[20:25] *** ponpon joined
[20:26] <Tene> in linux, there are several key combinations involving sysrq that are handled by the kernel directly.

[20:26] *** gbacon_ joined
[20:26] <Tene> you can use it for a secure access key, to verify that the kernel has killed everything listening to a terminal, or to sync all files, unmount all mounted filesystems, and power-cycle the system.

[20:26] <Tene> the last three sometimes used in extreme failure scenarios.

[20:27] <mberends> IBM designed SysRq to flag out-of-band commands in mainframe terminal emulators

[20:27] *** pochi_ left
[20:27] *** lamstyle_ left
[20:27] *** pnu left
[20:27] *** Chillance left
[20:27] *** cotto left
[20:27] *** cognominal left
[20:27] *** araujo left
[20:27] *** cjk101011 left
[20:27] *** y3llow left
[20:27] *** Lorn__ left
[20:27] *** szabgab left
[20:27] *** gbacon left
[20:27] *** hugme left
[20:27] *** pmichaud left
[20:27] *** ponbiki left
[20:27] *** dsp_ left
[20:27] <Tene> "everything is crashed, and the system is otherwise unresponsive, so let's unmount the drives with as little damage as possible before rebooting"

[20:27] *** y3llow_ is now known as y3llow

[20:27] <flussence> if we're allowed to use hardware-specific buttons, then I pick the zoom¬± keys on mine, because they generate keycodes X11 can't handle.

[20:27] <flussence> whoops

[20:27] <flussence> wrong window

[20:27] <masak> Tene: I could have used that the other day.

[20:27] <flussence> (first middle click, now readline gets me...)

[20:28] *** pochi joined
[20:29] *** cognominal joined
[20:29] *** cotto joined
[20:30] *** araujo joined
[20:30] *** cibs left
[20:32] *** cibs joined
[20:32] <tadzik> masak: this-useless-thing-between-right-alt-and-right-ctrl

[20:33] <masak> tadzik: what, the Product key? :)

[20:33] <flussence> that's the "9~" key

[20:33] <flussence> in a terminal at least

[20:34] <tadzik> hrm

[20:34] <masak> tadzik: the Useless key is bloody annoying in some old DOS games that assume that there's no key between Ctrl and Alt. :(

[20:34] <tadzik> masak: http://www.lytebyte.com/wp-content/uploads/2008/05/right-click-keyboard-key.jpg

[20:35] <tadzik> I'm mad at KDE4 which forbids me from binding it to my quicklaunch app

[20:35] <masak> oh, that one.

[20:35] <apejens> it's like you guys don't have macs, I'm shocked! :)

[20:35] <masak> yes, we talked a little about it above.

[20:35] <tadzik> as if anyone uses that or something

[20:35] <flussence> Try xbindkeys, it seems to work much better than any DE's keyboard shortcuts that I've used.

[20:35] <masak> apejens: even on the Mac I used my Model M keyboard...

[20:36] <masak> apejens: I had Ctrl bound as Cmd, and Caps Lock bound as Ctrl.

[20:36] <apejens> I've just changed caps lock

[20:36] <tadzik> flussence: yeah, I guess so. I'm still using xdm for there is no civilized DM which runs .xinitrc properly

[20:37] *** jimbob left
[20:37] <flussence> this one time, I found out that mashing the right combination of keys in one of kde's shortcut settings windows makes it print garbage in the shortcut text

[20:38] *** plainhao left
[20:38] *** donaldh joined
[20:38] <flussence> and xdm's a bit more civilised than how I tend to run things :)

[20:39] *** _jaldhar_ left
[20:39] <apejens> this one time, at band camp, I met someone who used caps lock

[20:40] <masak> :P

[20:40] <masak> apejens: http://bash.org/?835030

[20:40] <tadzik> mberends: what will be your talk at the NL workshop?

[20:41] <Tene> apejens: I regularly use caps lock.  I use it for any sequence of capital letters with length > 1.

[20:42] <Tene> Well, many, at least.  More frequent use with greater sequence length.

[20:42] <moritz_> jnthn: is it on purpose that $!target in Regex::Cursor is not typed as str?

[20:42] <jnthn> moritz_: ish

[20:43] <Tene> apejens: How would *you* type "our $VERSION", or "our $DEFAULT_CONNSPEC"?

[20:43] *** mberends left
[20:43] <jnthn> moritz_: I was gonna do it but (a) it's a much smaller win since the same immuted string PMC gets passed around during the whole parse so it doesn't save us that much at all, and (b) TimToady seemed unsure if there was a place for a "str" in Perl 6

[20:44] <apejens> Tene: I use shift with my right pinky finger

[20:45] <masak> same.

[20:45] <Tene> apejens: I get figner pain if I use too many modifier keys, and switching back and forth which shift key I'm pressing to complement the current hand pressing the letter is annoying.

[20:45] <tadzik> right?

[20:46] *** coldhead joined
[20:46] <tadzik> touching my right shift gives an impression that it has never been used

[20:48] <apejens> $VERSION

[20:48] <apejens> I use right, jsut tested :p

[20:50] *** cjk101010 left
[20:56] *** mberends joined
[21:00] *** pothos left
[21:00] *** y3llow left
[21:01] *** pothos joined
[21:02] *** y3llow joined
[21:05] *** vmspb joined
[21:05] *** perigrin joined
[21:08] *** mberends left
[21:08] *** cdarroch left
[21:09] *** cdarroch joined
[21:09] *** cdarroch left
[21:09] *** cdarroch joined
[21:10] <moritz_> jnthn: does add_parrot_vtable_mapping require the sub to previously installed as a method?

[21:14] *** perigrin left
[21:14] <jnthn> moritz_: no

[21:15] <jnthn> moritz_: method () is parrot_vtable('blah') { ... } # just a Parrot v-table method

[21:15] <jnthn> method foo() is parrot_vtable('get_string') { ... } # normal method AND get_string method

[21:15] <moritz_> jnthn: I meant HOW.'add_parrot_vtable_mapping'

[21:16] <moritz_> but it's probably the same under the hood anyway :-)

[21:16] <jnthn> ah, you were asking at the MOP level :)

[21:16] <jnthn> The first line I wrote is just a call to add_parrot_vtable_mapping

[21:16] <jnthn> The second is a call to that and also add_method

[21:16] <jnthn> A normal method foo() { } is just a call to add_method

[21:16] <jnthn> Installing it as a Parrot v-table is totally orthogonal. :)

[21:17] <jnthn> So you can do it as just a v-table, just a method, or both. 

[21:17] *** kst` joined
[21:17] *** mkramer1 joined
[21:17] *** fith joined
[21:17] <jnthn> And yes, if in doubt you can always declare a class, then look at the PIR to see the MOP calls that produced it :)

[21:17] *** cookys_ joined
[21:18] *** [sbp] joined
[21:20] *** sbp left
[21:20] *** [sbp] is now known as sbo

[21:20] *** sbo is now known as sbp

[21:20] *** Lorn_ joined
[21:20] *** frettled_ joined
[21:20] *** mkramer1 left
[21:23] *** simcop2387_ joined
[21:23] *** benabik left
[21:23] *** Helios- joined
[21:25] *** Lorn left
[21:25] *** frettled left
[21:25] *** simcop2387 left
[21:25] *** cookys left
[21:25] *** jferrero left
[21:25] *** Helios left
[21:25] *** Patterner left
[21:25] *** Eevee left
[21:25] *** kst left
[21:25] *** jevin left
[21:25] *** silug left
[21:25] *** phenny left
[21:25] *** takesako left
[21:25] *** TiMBuS left
[21:25] *** simcop2387_ is now known as simcop2387

[21:25] *** alester left
[21:25] *** TiMBuS|Away joined
[21:25] *** TiMBuS|Away is now known as TiMBuS

[21:27] *** MayDaniel joined
[21:28] *** Eevee joined
[21:30] <dalek> nqp/match-nom: 6314c26 | moritz++ | src/Regex/Match.pir:

[21:30] <dalek> nqp/match-nom: first shot at moving Regex::Match to 6model. Does not even compile yet

[21:30] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/6314c26040

[21:30] <dalek> nqp/match-nom: a5a8a85 | moritz++ | src/Regex/Match.pir:

[21:30] <dalek> nqp/match-nom: fix stupid thinko

[21:30] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/a5a8a85555

[21:30] <dalek> nqp/match-nom: a66d699 | moritz++ | src/Regex/Cursor.pir:

[21:30] <dalek> nqp/match-nom: fix new_match

[21:30] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/a66d699b94

[21:31] *** jevin joined
[21:32] *** jferrero joined
[21:34] *** takesako joined
[21:37] <moritz_> jnthn: what's the setter equivalent to repr_get_attr_int ?

[21:38] <moritz_> ah, bind, not set

[21:39] *** takadonet joined
[21:40] <dalek> nqp/match-nom: b863609 | moritz++ | src/Regex/Cursor.pir:

[21:40] <dalek> nqp/match-nom: remove 3-arg setattribute from Regex::Cursor.MATCH

[21:40] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/b863609bf0

[21:42] *** donaldh left
[21:44] <jnthn> moritz_: Yeah, I'm trying to kill "set" as its hardly clear whether one is binding or assigning.

[21:45] <moritz_> jnthn: yep, I understand

[21:45] <moritz_> jnthn: https://github.com/perl6/nqp/issues/#issue/4 is the current status

[21:45] <moritz_> it's a bit sad that I can't run p6regex_test without fully building nqp 

[21:46] <jnthn> We could if only the meta-model bits were pulled out of nqp.pbc into their own PBC file.

[21:47] <jnthn> I think that's do-able but didn't have chance to try it yet.

[21:48] *** skangas joined
[21:50] *** donaldh joined
[21:53] <jnthn> moritz_: OK, if you got it so far as compiling and giving a parse fail that's pretty decent progress. :)

[21:57] <jnthn> moritz_: Looks quite sane.

[21:57] <jnthn> moritz_: Not sure why it doesn't work without running it. :)

[21:59] <jnthn> +    $I0 = repr_get_attr_int self, cur_class, '$!to'

[21:59] <jnthn>   	131 	

[21:59] <jnthn> +    $P0 = $I0

[21:59] <jnthn> 59 	132 	

[21:59] <jnthn>      .return ($P0)

[21:59] <jnthn> The $P0 = $I0 is actually making a needless box, potentially

[21:59] <jnthn> .return ($I0) is fine there :)

[22:00] *** spq left
[22:01] <moritz_> .

[22:02] <jnthn> (That's not why it doesn't work, mind. Looking for that now.)

[22:02] *** TH14 joined
[22:02] <moritz_>     $I0 = repr_get_attr_int self, cur_class, '$!from'

[22:02] <moritz_>     from = box $I0

[22:02] <moritz_>     repr_bind_attr_int match, match_class, '$!from', $I0

[22:02] <moritz_>     $I0 = repr_get_attr_int self, cur_class, '$!pos'

[22:02] <moritz_>     to = box $I0

[22:02] <moritz_>     repr_bind_attr_int match, match_class, '$!to', $I0

[22:02] *** felliott left
[22:03] <moritz_> is it a problem that it's $I0 twice in there?

[22:03] <jnthn> No

[22:03] <jnthn> Though I don't know if those to and from are actually used?

[22:03] <jnthn> Other than in this bit of the code?

[22:03] <moritz_> they are

[22:03] <jnthn> I was hoping those could go away altogether

[22:03] <jnthn> Oh.

[22:03] <jnthn> Darn.

[22:03] <jnthn> Anyway, changing that is optimization

[22:04] <moritz_> i can eliminate them

[22:04] <jnthn> OK, but let's try and make it work at all first. :)

[22:05] <dalek> nqp/match-nom: edbb70c | moritz++ | src/Regex/Cursor.pir:

[22:05] <dalek> nqp/match-nom: get rid of some boxing

[22:05] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/edbb70c8b2

[22:05] *** TH14 left
[22:05] * moritz_ couldn't resist :-)

[22:05] *** shortcircuit left
[22:05] *** ruoso left
[22:05] <jnthn> :)

[22:06] *** felliott joined
[22:06] *** Mowah left
[22:07] *** felliott left
[22:08] <tadzik> yay, writing games is fun

[22:08] <tadzik> even in C :)

[22:08] <masak> +1

[22:08] <jnthn> moritz_: erm.

[22:09] <jnthn> moritz_: ...the branch didn't build for you?

[22:09] <moritz_> jnthn: no

[22:09] <jnthn> oh wait...wtf...

[22:09] * moritz_ tries after git clean -xdf

[22:11] <jnthn> I screwed up the branch checkout :)

[22:12] *** dsp__ is now known as dsp_

[22:12] *** pigdude joined
[22:13] *** stkowski joined
[22:14] <jnthn> moritz_: Oh!

[22:15] *** ymasory left
[22:15] <jnthn> "Main challenge: 6model doesn't do PMC inheritance"

[22:15] <jnthn> That's a challenge because the thing needed to get capture semantics in some way :)

[22:16] <moritz_> at which point is PMC inheritance needed?

[22:17] <moritz_> oh, parent => Cursor

[22:17] <jnthn> moritz_: The original code had 'parent'=>'Capture'

[22:17] <jnthn> And Capture is a PMC

[22:17] <moritz_> right, Capture

[22:18] <moritz_> so I need has-a Array and Hash?

[22:18] <jnthn> Yeah but...

[22:18] <jnthn> I think we may be better of writing a Capture class that has those.

[22:18] *** ruoso joined
[22:18] <jnthn> And then inheriting from it 

[22:19] <jnthn> Otherwise Match ends up with an implementation of Capture inside it.

[22:19] <moritz_> hm, ok

[22:19] <jnthn> I shoulda been more explicit about that.

[22:19] <jnthn> That (important ;)) bit aside, I'm pretty sure the rest of what you've done is exactly what was needed though.

[22:20] <moritz_> I was just about to say that :-)

[22:20] <moritz_> where should Capture.$Whatever live? 

[22:20] <jnthn> set_pmc_keyed() not implemented

[22:20] <jnthn> Yup, telltale :)

[22:21] <jnthn> I guess if you want to write it in NQP, then it can inherit from NQPMu and just go in the same place as that file. (more)

[22:22] <jnthn> NQPMu shouldn't actually be in the meta-model folder anyway, but rather be part of a setting, like it is in nqpclr.

[22:22] <jnthn> But that's a later refactor.

[22:22] <jnthn> So for now feel free to derive an NQPCapture from NQPMu and we'll see how that ends up.

[22:24] <dalek> nqp/match-nom: 205e5e1 | jonathan++ | src/Regex/Match.pir:

[22:24] <dalek> nqp/match-nom: A little more unboxing. :-)

[22:24] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/205e5e157f

[22:25] *** donaldh left
[22:40] <masak> new blog post: http://strangelyconsistent.org/blog/theres-plurality-in-wrongness

[22:41] <jnthn> .oO( wrongnesses )

[22:41] *** sji left
[22:42] <masak> essentially, yes :)

[22:45] *** sji joined
[22:47] *** donaldh joined
[22:47] <dalek> nqp/match-nom: 6db30e4 | moritz++ | src/ (2 files):

[22:47] <dalek> nqp/match-nom: add hacky NQPCapture

[22:47] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/6db30e438b

[22:48] *** saaki joined
[22:49] *** MayDaniel left
[22:49] <moritz_> curiously that doesn't change the failure mode

[22:49] <moritz_> anyway, bed

[22:49] <jnthn> masak++ # nice post :)

[22:50] <jnthn> moritz_: Thanks!

[22:50] <jnthn> moritz_: pulling ;)

[22:50] *** pigdude left
[22:50] <jnthn> moritz_: Didyou add it to the makefile?

[22:51] <jnthn> oh, wait, you added it to the same file

[22:51] <jnthn> OK :)

[22:52] <jnthn> Will investigate; sleep well :)

[22:53] <jnthn> Ah, it's 'cus I didn't set up those vtables as overridable yet.

[22:53] * jnthn does so.

[22:56] *** kjeldahl left
[23:00] *** donri left
[23:03] *** felliott joined
[23:03] <tadzik> masak: your blog looks funny on Opera

[23:04] <masak> tadzik: sorry to hear that.

[23:04] <masak> Opera is generally very good at HTML and CSS...

[23:04] <jnthn> It's hilarious in IE, but the jokes all fall flat in Firefox

[23:04] <jnthn> ;)

[23:04] <jnthn> (Actually, it looks fine in Firefox :))

[23:06] <tadzik> I fell like Opera is very standards-compliant, but not very web-compliant

[23:06] <tadzik> like a compiler with -Werror by default

[23:07] *** benabik joined
[23:08] <dalek> nqp/match-nom: 866ea1f | jonathan++ | src/pmc/rakudoobject.pmc:

[23:08] <dalek> nqp/match-nom: Make a few more v-tables overridable (e.g. ones that NQPCapture needs to override). Gets us a bit further with Match on 6model.

[23:08] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/866ea1f01f

[23:09] <masak> 'night, #perl6

[23:09] *** masak left
[23:17] <cotto_work> d'oh.  I was just about to complement him on his wrongness blog post.

[23:17] <cotto_work> masak++ for that

[23:18] *** kaare_ left
[23:22] *** jferrero left
[23:25] *** silug joined
[23:30] <dalek> nqp/match-nom: a484ca8 | jonathan++ | src/Regex/Match.pir:

[23:30] <dalek> nqp/match-nom: Fix up some attribute accesses in Match to be done the 6model way.

[23:30] <dalek> nqp/match-nom: review: https://github.com/perl6/nqp/commit/a484ca8773

[23:33] *** plobsing left
[23:46] *** donaldh left
