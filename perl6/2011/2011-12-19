[00:01] <tadzik> hello djanatyn 

[00:01] *** fridim_ left
[00:04] * djanatyn plays around with Bailador

[00:04] <mikemol> http://dl.dropbox.com/u/9066248/p6epubs.tar , for those interested.

[00:04] <djanatyn> Sorry I haven't been around a while. I've been really busy, writing perl5 and java

[00:04] <mikemol> The script I wrote probably isn't great perl 5. I haven't actively written much perl in ages.

[00:04] *** Radvendii joined
[00:05] <Radvendii> hey guys

[00:05] <mikemol> Also, it depends on App-Pod2Epub.

[00:05] <Radvendii> i have an idea for perl6, is there a better place to suggest it?

[00:05] <mikemol> Radvendii: Not AFAIK.

[00:05] <mikemol> Speak!

[00:05] <Radvendii> afaik?

[00:06] <mikemol> As Far As I Know

[00:06] <Radvendii> oh

[00:06] <Radvendii> cool

[00:06] <Radvendii> anyways

[00:07] <Radvendii> why not represent strings as scalars and arrays, so you can do the stuff you want to with them as a scalar, but when it's convenient (like taking a slice) access them as arrays

[00:07] <Radvendii> one could also do @string[0].uc instead of $string.ucfirst

[00:07] <Radvendii> reduces the number of primitives you have to know

[00:08] <Radvendii> and, since strings are really just arrays of chars anyways, wouldn't this be relatively easy to implement?

[00:09] <mikemol> Is there already a p6advent post on this subject?

[00:10] <mikemol> Radvendii: I'm not particularly familiar with Perl 6 (yet), but someone around here will have an answer.

[00:10] <Radvendii> okay... but they have to be on at the right time, is there a more permanent suggestion box?

[00:11] *** tokuhirom joined
[00:17] *** lestrrat left
[00:18] *** lestrrat joined
[00:21] *** mj41 left
[00:25] *** packetknife left
[00:26] <raiph> rakudo: @a = <a b>; say "@a as Array: " ~ @a ~ " and as String: " ~ @a as String

[00:26] <p6eval> rakudo 2bc97f: OUTPUT«===SORRY!===␤Variable @a is not predeclared at line 1, near " = <a b>; "␤»

[00:26] *** packetknife joined
[00:26] <raiph> rakudo: my @a = <a b>; say "@a as Array: " ~ @a ~ " and as String: " ~ @a as String

[00:26] <p6eval> rakudo 2bc97f: OUTPUT«===SORRY!===␤Confused at line 1, near "say \"@a as"␤»

[00:46] *** Chillance left
[00:49] *** ingyfoo is now known as ingy

[00:53] *** packetknife left
[01:02] *** tokuhirom left
[01:22] *** ab5tract left
[01:22] <raiph> rakudo: my @a = $(@a); say @a;

[01:22] <p6eval> rakudo 2bc97f: OUTPUT«maximum recursion depth exceeded␤  in method defined at src/gen/CORE.setting:549␤  in method Bool at src/gen/CORE.setting:545␤  in sub prefix:<!> at src/gen/CORE.setting:1938␤  in method reify at src/gen/CORE.setting:4257␤  in method gimme at src/gen/CORE.setting:4…

[01:23] *** MindosCheng left
[01:52] *** raiph left
[01:58] <dalek> niecza: d9e5c69 | sorear++ | lib/UCD.cs:

[01:58] <dalek> niecza: Add ucd_get_value, inflate code for enumerated/catalog properties

[01:58] <dalek> niecza: review: https://github.com/sorear/niecza/commit/d9e5c69b7b

[01:59] *** hypolin joined
[01:59] *** lestrrat left
[02:00] *** woosley joined
[02:01] *** envi_ joined
[02:02] *** lestrrat joined
[02:02] *** spine left
[02:17] *** snearch left
[02:31] *** donri left
[02:34] <dalek> niecza: 60d6d0d | sorear++ | lib/UCD.cs:

[02:34] <dalek> niecza: Add support for property aliases

[02:34] <dalek> niecza: review: https://github.com/sorear/niecza/commit/60d6d0d9e0

[02:34] <dalek> niecza: 808b2c1 | sorear++ | lib/Niecza/UCD.pm6:

[02:34] <dalek> niecza: Add Niecza::UCD minimalist access module

[02:34] <dalek> niecza: review: https://github.com/sorear/niecza/commit/808b2c168a

[02:47] <djanatyn> How difficult would it be to add POST support to Bailador, and where would I start if I wanted to do it?

[02:53] *** hundskatt left
[03:02] <dalek> niecza: e4cb8d0 | sorear++ | lib/U (2 files):

[03:02] <dalek> niecza: Add support for property value aliases

[03:02] <dalek> niecza: review: https://github.com/sorear/niecza/commit/e4cb8d03ff

[03:12] <sorear> djanatyn: 1. no clue 2. talking to tadzik

[03:21] <djanatyn> looks like I would have to mess with HTTP::Server::Simple, maybe

[03:37] *** molaf joined
[03:38] *** Patterner left
[03:39] *** dayangkun joined
[03:41] *** Psyche^ joined
[03:41] *** Psyche^ is now known as Patterner

[03:50] *** dayangkun left
[03:50] *** rbr joined
[03:56] *** rbr left
[04:00] *** agentzh joined
[04:15] *** noidea left
[04:20] *** benabik joined
[04:28] <japhb> phenny, ask jnthn Can you add 32-bit floats to your CArray short list?  That would open up the chance for a fair portion of the OpenGL API.

[04:28] <phenny> japhb: I'll pass that on when jnthn is around.

[04:28] *** i0h left
[04:33] *** xjiujiu joined
[04:41] *** molaf left
[04:56] *** alc joined
[05:20] *** envi_ left
[05:45] *** kaleem joined
[05:46] *** kaleem left
[05:46] *** kaleem joined
[05:47] *** kaleem left
[05:47] *** kaleem joined
[05:49] *** kaleem left
[05:49] *** kaleem joined
[05:53] *** Radvendii left
[05:54] *** kcwu left
[05:55] *** pothos left
[05:55] *** y3llow left
[05:55] *** kcwu joined
[05:56] *** y3llow joined
[05:56] *** pothos joined
[05:59] *** pothos left
[05:59] *** pothos joined
[06:07] *** am0c joined
[06:23] *** bluescreen10 left
[06:23] *** bluescreen10 joined
[06:42] *** mkramer joined
[06:48] <moritz> \o

[06:48] <phenny> moritz: 18 Dec 21:27Z <lichtkind> tell moritz i will look tomorrow at the text again but i see it as finished

[06:51] <sorear> o/ moritz

[06:53] *** snarkyboojum left
[06:53] <moritz> hi sorear. I'm very excited to see efforts on Unicode support in niecza

[06:54] *** xjiujiu left
[06:54] *** snarkyboojum joined
[06:55] <moritz> sorear: btw if you need somebody to discuss Unicode stuff, Helmut Wollmersdorfer

[06:55] <moritz> ... might be interesting to talk to

[06:55] <moritz> he is deeply in the matter, and has written a few posts to p6l about that

[06:55] <moritz> he has been disappointed by the lack of feedback, but if you're actually doing stuff, he might be motivated again :-)

[06:56] <sorear> hmm, I don't remember any of his posts...

[06:57] <moritz> last one was 2011-06-03 in response to Tom Christiansen

[06:58] <sorear> I'm not really sure what constitutes "Unicode stuff" - my problems are either technical writing problems (This standard annex is unclear!) or linguistic problems (ohai jnthn I hear ch is a letter in slovak does that mean "ch".chars==1?)

[06:58] *** xjiujiu joined
[06:58] <sorear> the former I try to send to the writers, the latter I look for good speakers

[06:58] *** wtw joined
[07:00] <sorear> I don't see anything in http://www.nntp.perl.org/group/perl.perl6.language/2011/06.html

[07:00] <TiMBuS> i see jnthn is working on a bit of C/nci stuff atm. is there a todo list or something?

[07:01] <moritz> sorear: well, I think he can help a bit with linguistic problems, but more importantly it's somebody who has many use cases, and can answer questions like "what kind of features do you want?"

[07:02] <TiMBuS> someone wanted to know if perl6 worked with sqlite a few months back... can it now?

[07:02] <TiMBuS> rakudo* not perl6

[07:02] <moritz> TiMBuS: I don't think so; the NCI requirements might be met (no idea), but I don't think we have an sqlite driver yet

[07:04] <TiMBuS> i more meant the NCI requirements..

[07:04] <TiMBuS> but i guess i could write the headers

[07:04] <TiMBuS> :[ the least fun part of calling a C lib

[07:05] <sorear> moritz: are you thinking of http://www.nntp.perl.org/group/perl.perl6.language/2010/05/msg33686.html ?

[07:06] <moritz> sorear: I didn't, but that's certainly one of his posts :-)

[07:07] <sorear> so, do I just send him a pm, "Hi, Moritz Lenz suggested we get in touch since I'm actively doing Unicode stuff for a compiler" ?

[07:08] <moritz> sorear: yes.

[07:08] <moritz> (mention that it's a Perl 6 compiler :-)

[07:09] <moritz> of course it also helps if you have specific topics to discuss

[07:12] *** xjiujiu left
[07:12] *** xjiujiu joined
[07:13] <sorear> moritz: *shrug* I've been thinking in terms of S05 this week, not really Unicode as such

[07:14] <sorear> moritz: do you have a current email?

[07:14] <sorear> for em

[07:22] *** baest joined
[07:25] *** mkramer left
[07:33] *** koban joined
[07:33] *** xjiujiu left
[07:34] *** xjiujiu joined
[07:35] *** mkramer1 joined
[07:42] *** bacek joined
[07:47] *** xjiujiu left
[07:50] <moritz> sorear: just a sec...

[07:53] <moritz> sent via /msg

[07:55] <sorear> thanks

[07:59] <sorear> mailed

[08:01] *** kensanata joined
[08:17] *** mkramer1 left
[08:18] *** mkramer joined
[08:18] <sorear> *hahah* my first attempt at Name access is producing word salad

[08:19] <TiMBuS> is there a way to breakpoint in gdb when entering a different shared lib

[08:21] <sorear> that sounds difficult to do with gdb alone, but with ltrace it would be easier

[08:21] <TiMBuS> bummer

[08:22] <sorear> ltrace hacks the dynamic linker to replace all inter-dll calls with versions that also print name/args

[08:22] <sorear> so break the print rountine

[08:25] <TiMBuS> does ltrace stop after a certain amount of tracing

[08:26] <dalek> niecza: e09cd3f | sorear++ | lib/UCD.cs:

[08:26] <dalek> niecza: Support for inflating character name properties

[08:26] <dalek> niecza: review: https://github.com/sorear/niecza/commit/e09cd3fa48

[08:26] <TiMBuS> Parrot_api_run_bytecode(0x26256c8, 0x25d22b8, 0x2630188, 0x25d22b8, 1 <unfinished ...>

[08:26] <TiMBuS> --- SIGSEGV (Segmentation fault) ---

[08:26] <TiMBuS> it should go further than that

[08:27] <sorear> I guess you could break in the PLT entries, one at a time

[08:27] <sorear> (consult an ELF manual)

[08:27] <TiMBuS> i miss ollydbg

[08:27] <TiMBuS> :<

[08:31] *** overrosy left
[08:32] <jnthn> mornin'

[08:32] <phenny> jnthn: 18 Dec 23:23Z <lichtkind> tell jnthn no it doesnt work now: Cannot use bind operator with this LHS at line 44, near " |classify"

[08:32] <shachaf> I was trying to figure out recently, after having a pretty miserable time with gdb, whether there exists a good instruction-level debugger for Linux.

[08:32] <phenny> jnthn: 04:28Z <japhb> ask jnthn Can you add 32-bit floats to your CArray short list?  That would open up the chance for a fair portion of the OpenGL API.

[08:32] <shachaf> It seems that the answer is no. :-(

[08:32] *** overrosy joined
[08:33] <jnthn> phenny: tell japhb it's pretty much top of the list; I know exactly how to do it :)

[08:33] <phenny> jnthn: I'll pass that on when japhb is around.

[08:33] <sorear> gdb can be made significantly better with display/i *$eip and some other stunts

[08:35] <shachaf> Is display different from print?

[08:35] <sorear> yes

[08:35] <shachaf> I was using p/100i *$eip or something along those lines.

[08:35] <shachaf> Also disas, though it only seems to work when you have symbols.

[08:35] <sorear> that command instructs gdb to print the current instruction after every stepi

[08:36] <shachaf> Oh, right, *that* display.

[08:36] <shachaf> That would've helped, yes. :-)

[08:36] <sorear> I also wrote a hacked version of objcopy that injects symbols into a stripped binary

[08:37] <shachaf> Hmm.

[08:38] <shachaf> Should I ever have a need to use gdb for that again, I'll hopefully remember this.

[08:41] <TiMBuS> well okay it seems dyncall is making it into sqlite.so with no issues. and then it bounces off a trampoline function for some reason. and then mov's 0 into [rsi] (which is also 0?)

[08:41] <TiMBuS> bang

[08:41] <TiMBuS> wtf

[08:41] <dalek> rakudo/nom: 7ed1840 | moritz++ | src/Perl6/Actions.pm:

[08:41] <dalek> rakudo/nom: throw X::NYI errors for several NYI features

[08:41] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7ed1840e1c

[08:42] <sorear> TiMBuS: calls across .so files go into trampolines.  Reading ELF stuff may be useful

[08:43] <TiMBuS> they usually do

[08:43] <TiMBuS> im not too fussed about that

[08:44] <shachaf> TiMBuS: rsi is probably the second argument to the function?

[08:45] <TiMBuS> the second int

[08:45] <TiMBuS> so its a pointer but its 0

[08:46] <TiMBuS> this would have been easier if i had just installed sqlite-dbg. but there we go

[08:46] <TiMBuS> jnthn, do opaquepointers work in nom?

[08:48] *** mj41 joined
[08:50] <jnthn> TiMBuS: Yeah, I tested those

[08:50] <sorear> \o/ ß => ss

[08:50] <dalek> niecza: 383966e | sorear++ | lib/ (3 files):

[08:50] <dalek> niecza: Add support for String properties

[08:50] <dalek> niecza: review: https://github.com/sorear/niecza/commit/383966ef63

[08:51] * sorear -> sleep... guess I didn't get to <:Foo> today

[08:53] <dalek> specs: 12c8b58 | moritz++ | S32-setting-library/Exception.pod:

[08:53] <dalek> specs: [S32::Exceptions] briefly describe the default exception printer

[08:53] <dalek> specs: review: https://github.com/perl6/specs/commit/12c8b58f52

[09:08] <TiMBuS> oh christ im so damn retarded

[09:09] <TiMBuS> so, how do you declare a pointer to a pointer in zavolaj

[09:11] <jnthn> TiMBuS: What's the use case? OpaquePointer really doesn't care much what you have a pointer to - it's just...a pointer. :)

[09:11] <TiMBuS> but a ptr to a ptr can be set

[09:11] <TiMBuS> and since a normal opaqueptr = 0

[09:12] <TiMBuS> doesnt work for the things that return object pointers

[09:13] <TiMBuS> (such as sqlite3_open)

[09:13] <TiMBuS> actually. pfftpfpf. opaquepointers shouldnt be 0 at all! why is it 0

[09:15] *** koban left
[09:15] <jnthn> TiMBuS: I guess I'm gonna need some kinda Pointer[blah] type if we want to handle pointers to stuff in a generic fashion.

[09:16] <TiMBuS> mayybe. but that's not the issue i think

[09:16] <TiMBuS> heres the last call that the sqlite example does (according to gdb): openDatabase (zFilename=0x5e67b10 "test.db", ppDb=0x0, flags=6, zVfs=0x0)

[09:18] <TiMBuS> ppDb=0x0? ¯\(ºдಠ)/¯

[09:23] <TiMBuS> i could deal if you just add a method to return the address of a CPointer.. and another method to set the contents of a CPointer

[09:26] <jnthn> Both possible.

[09:28] <TiMBuS> but i guess thats only a small skip away from just implementing dereferencing

[09:30] *** envi_ joined
[09:37] <moritz> phenny: tell [Coke] about http://perlgeek.de/blog-en/perl-6/grant-report-errors-4.html grant status update

[09:37] <phenny> moritz: I'll pass that on when [Coke] is around.

[09:38] *** woosley left
[09:43] <dalek> rakudo/nom: 1eadbbf | moritz++ | src/core/Exception.pm:

[09:43] <dalek> rakudo/nom: re-prioritize decisions in the default exception handler

[09:43] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/1eadbbf078

[09:57] *** alvis left
[10:02] *** dakkar joined
[10:05] *** alvis joined
[10:06] <tadzik> djanatyn: ping

[10:06] *** mkramer left
[10:08] *** mkramer joined
[10:09] *** hundskatt joined
[10:09] *** hypolin left
[10:10] <tadzik> djanatyn: I thought about it a bit. Random thoughts: you need to split @routes between @get and @post for example, then before doing the actual dispatching check if $env<method> is GET or POST or what and then do the handler lookup

[10:10] *** SHODAN left
[10:12] *** SHODAN joined
[10:25] *** xjiujiu joined
[10:31] <moritz> maybe make routes a hash with request method as key

[10:31] *** nek joined
[10:32] <moritz> and you can make get() and post() return their arguments

[10:32] <moritz> so that you can write   get post '/' => sub { ... }

[10:33] <tadzik> hmm, nice idea

[10:33] <tadzik> maybe we could make it another task (possibly harder) and give it to djanatyn as well

[10:34] *** alc left
[10:35] *** jerome_ left
[10:38] *** jerome_ joined
[10:43] <tadzik> now brain seems awake. Good morning #perl6 :)

[10:45] <moritz> good morning tadzik's brain :-)

[10:47] <tadzik> who's for advent today?

[10:47] <moritz> masak++

[10:47] *** daxim joined
[10:48] <tadzik> oh cool

[10:48] <moritz> aye

[10:48] <tadzik> I can catch some of the remaining days

[10:48] <moritz> that would be nice

[10:49] <moritz> lichtkind has written a post too, let's just schedule it for the 20th (aka tomorrow)

[10:49] <moritz> so that you have time to prepare a post for the 21st, if that works for you

[10:50] <dalek> mu: fd36e37 | tadzik++ | misc/perl6advent-2011/schedule:

[10:50] <dalek> mu: Claim 21st

[10:50] <dalek> mu: review: https://github.com/perl6/mu/commit/fd36e37e9a

[10:50] <tadzik> heh, I've just claimed 21st ;)

[10:50] <tadzik> good sync

[10:51] * moritz will probably get a merge conflict :-)

[10:51] <tadzik> :)

[10:51] <tadzik> I like the github editor

[10:51] <dalek> mu: 36b31d6 | moritz++ | misc/perl6advent-2011/schedule:

[10:51] <dalek> mu: [advent] more scheduling

[10:51] <dalek> mu: review: https://github.com/perl6/mu/commit/36b31d69c8

[10:51] <moritz> now we have only two vacancies left

[10:52] <moritz> I might do one day together with masak

[10:52] <moritz> phenny: ask TimToady if he wants to the 24th post for the advent calendar

[10:52] <phenny> moritz: I'll pass that on when TimToady is around.

[10:53] <moritz> phenny: tell TimToady erm, missing verb. Insert 'write' where appropriate :-)

[10:53] <phenny> moritz: I'll pass that on when TimToady is around.

[11:01] *** daemon joined
[11:03] *** daemon left
[11:05] *** daemon joined
[11:11] *** somep6user joined
[11:11] *** jlaire left
[11:11] *** alvis left
[11:12] *** somep6user left
[11:13] *** somep6user joined
[11:15] *** jlaire joined
[11:16] <somep6user> perl6: say "go go";

[11:16] <p6eval> pugs b927740, rakudo 1eadbb, niecza v12-72-g383966e: OUTPUT«go go␤»

[11:16] <somep6user> niecza: say 2334r345345;

[11:16] <p6eval> niecza v12-72-g383966e: OUTPUT«===SORRY!===␤␤Whitespace is required between alphanumeric tokens at /tmp/flUmkHiCFu line 1:␤------> say 2334⏏r345345;␤␤Two terms in a row at /tmp/flUmkHiCFu line 1:␤------> say 2334⏏r345345;␤␤Parse fa…

[11:18] <somep6user> niecza: say 2334345345

[11:18] <p6eval> niecza v12-72-g383966e: OUTPUT«2334345345␤»

[11:21] *** alvis joined
[11:46] <somep6user> perl6: my $a=5; my $b=6; [+] $a,$b,10;

[11:46] <p6eval> pugs b927740, rakudo 1eadbb, niecza v12-72-g383966e:  ( no output )

[11:46] *** tokuhirom joined
[11:46] <somep6user> perl6: my $a=5; my $b=6; say [+] $a,$b,10;

[11:46] <p6eval> pugs b927740, rakudo 1eadbb, niecza v12-72-g383966e: OUTPUT«21␤»

[11:49] <somep6user> perl6: @aaa=<1 2 3 4 5>;

[11:49] <p6eval> pugs b927740: OUTPUT«*** ␤    Unexpected "=<"␤    expecting "::"␤    Variable "@aaa" requires predeclaration or explicit package name␤    at /tmp/0yECMCY_3a line 1, column 5␤»

[11:49] <p6eval> ..niecza v12-72-g383966e: OUTPUT«===SORRY!===␤␤Variable @aaa is not predeclared at /tmp/_AjPx9EFgv line 1:␤------> <BOL>⏏@aaa=<1 2 3 4 5>;␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 880 (die @ 2) ␤  at /home…

[11:49] <p6eval> ..rakudo 1eadbb: OUTPUT«===SORRY!===␤Variable @aaa is not predeclared at line 1, near "=<1 2 3 4 "␤»

[11:51] <somep6user> perl6: my $a=5; my $b=6; [+] $a,$b,10; my @aaa = <1 2 3 4 5>; say @aaa >>++;

[11:51] <p6eval> niecza v12-72-g383966e: OUTPUT«===SORRY!===␤␤Postfix found where infix expected (change whitespace?) at /tmp/rXapij03b_ line 1:␤------> b,10; my @aaa = <1 2 3 4 5>; say @aaa >>⏏++;␤␤Parse failed␤␤»

[11:51] <p6eval> ..pugs b927740: OUTPUT«<Error><Error><Error><Error><Error>␤»

[11:51] <p6eval> ..rakudo 1eadbb: OUTPUT«===SORRY!===␤Missing << or >> at line 1, near "+;"␤»

[11:52] <somep6user> perl6: my @aaa = <1 2 3 4 5>; say @aaa >> ++;

[11:52] <p6eval> pugs b927740: OUTPUT«*** ␤    Unexpected ">>"␤    expecting operator, ":" or ","␤    at /tmp/UEA3ij2r_n line 1, column 33␤»

[11:52] <p6eval> ..niecza v12-72-g383966e: OUTPUT«===SORRY!===␤␤Unsupported use of >> to do right shift; in Perl 6 please use +> or ~> at /tmp/dnJubPmAjN line 1:␤------> my @aaa = <1 2 3 4 5>; say @aaa >>⏏ ++;␤␤Prefix requires an argument at /tmp/dnJubPmAjN line 1:␤---…

[11:52] <p6eval> ..rakudo 1eadbb: OUTPUT«===SORRY!===␤Unsupported use of >> to do right shift; in Perl 6 please use +> or ~> at line 1, near "++;"␤»

[11:57] *** nek left
[11:58] <somep6user> perl6: my @aaa = <1 2 3 4 5>; say @aaa􏿽xBB++;

[11:58] <p6eval> rakudo 1eadbb: OUTPUT«===SORRY!===␤Confused at line 1, near "say @aaa\ufffd+"␤»

[11:58] <p6eval> ..niecza v12-72-g383966e: OUTPUT«===SORRY!===␤␤Confused at /tmp/frtCn1U7Ld line 1:␤------> my @aaa = <1 2 3 4 5>; say @aaa⏏�++;␤␤Parse failed␤␤»

[11:58] <p6eval> ..pugs b927740: OUTPUT«decodeUTF8': bad data: '\65533'␤*** ␤    Unexpected "\65533++;"␤    expecting "::", term postfix, operator, ":" or ","␤    at /tmp/q6Gg24fzoe line 1, column 32␤»

[12:01] *** lichtkind joined
[12:02] <somep6user> my @aaa = <1 2 3 4 5>; @aaa􏿽xBB++; say @aaa.perl;

[12:02] <somep6user> perl6: my @aaa = <1 2 3 4 5>; @aaa􏿽xBB++; say @aaa.perl;

[12:03] <p6eval> pugs b927740: OUTPUT«decodeUTF8': bad data: '\65533'␤*** ␤    Unexpected "\65533++;"␤    expecting "::", term postfix or operator␤    at /tmp/g2D4fbu5Ly line 1, column 28␤»

[12:03] <p6eval> ..niecza v12-72-g383966e: OUTPUT«===SORRY!===␤␤Confused at /tmp/Iwe30hinPS line 1:␤------> my @aaa = <1 2 3 4 5>; @aaa⏏�++; say @aaa.perl;␤␤Parse failed␤␤»

[12:03] <p6eval> ..rakudo 1eadbb: OUTPUT«===SORRY!===␤Confused at line 1, near "@aaa\ufffd++; s"␤»

[12:03] <lichtkind> :)

[12:03] *** mkramer left
[12:03] <tadzik> b: my @aaa = <1 2 3 4 5>; @aaa»++; say @aaa.perl;

[12:03] <p6eval> b 1b7dd1: OUTPUT«["2", "3", "4", "5", "6"]␤»

[12:08] <somep6user> perl6:  my @aaa = <1 2 3 4 5>; say @aaa.perl;

[12:08] <p6eval> rakudo 1eadbb: OUTPUT«Array.new("1", "2", "3", "4", "5")␤»

[12:08] <p6eval> ..pugs b927740: OUTPUT«["1", "2", "3", "4", "5"]␤»

[12:08] <p6eval> ..niecza v12-72-g383966e: OUTPUT«["1", "2", "3", "4", "5"].list␤»

[12:09] <tadzik> I think it's just hyperops that are NYI in most implementations

[12:13] *** raiph joined
[12:13] <somep6user> perl6: my @aaa = <1 2 3 4 5>; @aaa􏿽xBB ++; say @aaa.perl;

[12:13] <p6eval> rakudo 1eadbb: OUTPUT«===SORRY!===␤Confused at line 1, near "@aaa\ufffd ++; "␤»

[12:13] <p6eval> ..niecza v12-72-g383966e: OUTPUT«===SORRY!===␤␤Confused at /tmp/nVjwxLk2Br line 1:␤------> my @aaa = <1 2 3 4 5>; @aaa⏏� ++; say @aaa.perl;␤␤Parse failed␤␤»

[12:13] <p6eval> ..pugs b927740: OUTPUT«decodeUTF8': bad data: '\65533'␤*** ␤    Unexpected "\65533"␤    expecting "::", term postfix or operator␤    at /tmp/OrFxvZSuE3 line 1, column 28␤»

[12:16] <somep6user> perl6: my @aaa = <1 2 3 4 5>; [*] @aaa; say @aaa.perl;

[12:17] <p6eval> rakudo 1eadbb: OUTPUT«Array.new("1", "2", "3", "4", "5")␤»

[12:17] <p6eval> ..pugs b927740: OUTPUT«["1", "2", "3", "4", "5"]␤»

[12:17] <p6eval> ..niecza v12-72-g383966e: OUTPUT«["1", "2", "3", "4", "5"].list␤»

[12:23] *** preflex_ joined
[12:23] *** preflex left
[12:23] *** preflex_ is now known as preflex

[12:30] <lichtkind> moritz: beside a small warning that last line is not yet full duported is there anything else to change ?

[12:39] *** orafu left
[12:39] <moritz> lichtkind: what are you talking about? and what is "duported"?

[12:39] *** orafu joined
[12:39] <lichtkind> supported

[12:40] <lichtkind> my last code line, ah well i told phenny to paste this jnthn

[12:40] <lichtkind> i thought you for a minue

[12:41] <moritz> last line of code in the advent post? or what?

[12:42] *** mkramer joined
[12:43] *** flussence_ joined
[12:43] *** shachaf_ joined
[12:46] *** jtpalmer_ joined
[12:46] *** pnu_ joined
[12:46] *** kst` joined
[12:46] *** hundskatt_ joined
[12:46] *** Woodi_ joined
[12:46] *** TimToady_ joined
[12:46] *** meraxes_ joined
[12:46] *** risou_awy left
[12:46] *** TimToady left
[12:46] *** pnu left
[12:46] *** revdiablo left
[12:46] *** ingy left
[12:46] *** araujo left
[12:46] *** stepnem left
[12:46] *** Khisanth left
[12:46] *** amkrankruleuen left
[12:46] *** zostay left
[12:46] *** REPLeffect left
[12:46] *** BooK left
[12:46] *** meraxes left
[12:46] *** ingy joined
[12:46] *** pomysl_ joined
[12:47] *** flussence left
[12:47] *** silug left
[12:47] *** ranguard left
[12:47] *** Woodi left
[12:47] *** hundskatt left
[12:47] *** pomysl left
[12:47] *** jtpalmer left
[12:47] *** shachaf left
[12:47] *** overrosy left
[12:47] *** kst left
[12:47] *** ranguard joined
[12:47] *** REPLeffect joined
[12:47] *** amkrankruleuen joined
[12:47] *** hundskatt_ is now known as hundskatt

[12:47] *** araujo_ joined
[12:47] *** BooK joined
[12:47] *** raiph left
[12:47] *** arlinius left
[12:47] *** orevdiabl joined
[12:47] <lichtkind> yes the last code example, its modified from synopses but i yesterday night discovered unimplemented

[12:47] <moritz> shouldn't that be written as

[12:47] <moritz> \(:@good, @bad) := classify(..)

[12:47] <moritz> ?

[12:47] <moritz> erm no. :(:@good, @bad) := classify(..)

[12:47] <moritz> on the left side should be a signature, and right side a capture

[12:47] *** zostay_ joined
[12:47] *** overrosy_ joined
[12:48] *** stepnem joined
[12:49] *** ggoebel joined
[12:49] *** arlinius joined
[12:52] *** alvis left
[12:52] *** Trashlord left
[12:52] *** jnthn left
[12:52] *** mikemol left
[12:52] *** Helios left
[12:52] *** kranius left
[12:52] *** DarthGandalf left
[12:52] *** chra left
[12:52] *** Tene left
[12:52] *** jasonmay left
[12:52] *** alvis joined
[12:52] *** Trashlord joined
[12:52] *** jnthn joined
[12:52] *** mikemol joined
[12:52] *** kranius joined
[12:52] *** Helios joined
[12:52] *** DarthGandalf joined
[12:52] *** chra joined
[12:52] *** Tene joined
[12:52] *** jasonmay joined
[12:54] *** flussence_ left
[12:55] *** flussence joined
[12:57] *** alvis left
[12:57] *** Trashlord left
[12:57] *** jnthn left
[12:57] *** mikemol left
[12:57] *** Helios left
[12:57] *** kranius left
[12:57] *** DarthGandalf left
[12:57] *** chra left
[12:57] *** Tene left
[12:57] *** jasonmay left
[12:59] *** Khisanth joined
[13:00] *** alvis joined
[13:00] *** Trashlord joined
[13:00] *** jnthn joined
[13:00] *** mikemol joined
[13:00] *** kranius joined
[13:00] *** Helios joined
[13:00] *** DarthGandalf joined
[13:00] *** chra joined
[13:00] *** Tene joined
[13:00] *** jasonmay joined
[13:00] *** risou_awy joined
[13:07] *** silug joined
[13:11] *** renormalist left
[13:15] *** somep6user left
[13:19] *** bluescreen10 left
[13:19] *** somep6user joined
[13:28] *** araujo_ left
[13:28] <moritz> perl6: enum A <b c d>; say b.Str

[13:28] <p6eval> pugs b927740: OUTPUT«*** No such subroutine: "&enum"␤    at /tmp/fasDCDQYDV line 1, column 1-15␤»

[13:28] <p6eval> ..rakudo 1eadbb, niecza v12-72-g383966e: OUTPUT«b␤»

[13:28] *** araujo joined
[13:29] *** panterax joined
[13:33] *** bluescreen10 joined
[13:36] *** zhangkaizhao joined
[13:39] <moritz> nom: say ([1, 1], { $_ >>+<< [1,1])[^2].perl

[13:39] <p6eval> nom 1eadbb: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 2␤»

[13:39] <moritz> nom: say ([1, 1], { $_ >>+<< [1,1]} ... * )[^2].perl

[13:39] <p6eval> nom 1eadbb: OUTPUT«(1, 1)␤»

[13:39] <moritz> why doesn't that print out  ([1, 1], [2, 2]) ?

[13:39] <moritz> bug?

[13:40] <moritz> nom: say [1, 1] >>+<< [1, 1]

[13:40] <p6eval> nom 1eadbb: OUTPUT«2 2␤»

[13:40] <moritz> that part seems to work fine

[13:53] *** lestrrat left
[13:54] *** simcop2387 left
[13:54] *** lestrrat joined
[13:54] *** simcop2387 joined
[14:03] <colomon> nom: say ([1, 1], { $_ >>+<< [1,1]} ... * )[^1].perl

[14:03] <p6eval> nom 1eadbb: OUTPUT«(1,)␤»

[14:04] <jnthn> nom: say ([1, 1], { $_ >>+<< [1,1]} ... * )[^4].perl

[14:04] <p6eval> nom 1eadbb: OUTPUT«(1, 1, 2, 2)␤»

[14:04] *** mj41 left
[14:04] <jnthn> Excessive flattening.

[14:05] <jnthn> oh, it's probably the "take flattens" bug

[14:05] *** jlaire left
[14:05] <colomon> nom: say ([1, 1], { $_ >>+<< [1,1]} ... * )[^10].perl

[14:05] <p6eval> nom 1eadbb: OUTPUT«Sorry, lists on both sides of non-dwimmy hyperop are not of same length:␤    left: 1 elements, right: 2 elements␤␤  in sub hyper at src/gen/CORE.setting:8693␤  in block <anon> at /tmp/L9R2pprxKy:1␤  in sub coro at src/gen/CORE.setting:4499␤  in method reify at src/gen…

[14:07] *** envi_ left
[14:09] <[Coke]> https://gist.github.com/1476841 no real change in spec tests in 3 days.

[14:09] <phenny> [Coke]: 09:37Z <moritz> tell [Coke] about http://perlgeek.de/blog-en/perl-6/grant-report-errors-4.html grant status update

[14:09] <[Coke]> moritz++ saw it, thanks!

[14:10] <felher> moritz: i just saw that you added $@ and $% to the spec. Thnx :)

[14:10] *** kaleem left
[14:12] <[Coke]> (not that I expect rakudo and niecza to pass more tests every day. ;)

[14:13] <literal> w35

[14:13] <jnthn> ...literally dozens of windows.

[14:14] *** kaleem joined
[14:15] <moritz> [Coke]: which reminds me, I wanted to write tests for the stubbing thing that jnthn++ implemented for the advent calendar... :-)

[14:15] *** kaleem left
[14:18] <[Coke]> moritz++

[14:18] <[Coke]> and jnthn++, wth.

[14:19] <colomon> [Coke]: apologies for the lack of progress.  Things have been very busy here.  ;)

[14:19] <colomon> and my Advent post sucked up all my spare p6 time. 

[14:22] <[Coke]> colomon: another 729 tests to hit 60%, if rakudo stands still.

[14:23] <colomon> how many to hit 66.6%?  ;)

[14:23] <jnthn> moritz: yes, tests for that would be great

[14:24] <[Coke]> ~1944

[14:25] <jnthn> nom: sub foo() is rw { my $x; return Proxy.new: FETCH => method () { $x }, STORE => method ($v) { $x = 2 * $v }; }; my $a := foo(); $a = 21; say $a

[14:25] <p6eval> nom 1eadbb: OUTPUT«42␤»

[14:25] <jnthn> Also I did a first cut implementation of Proxy yesterday. Don't know that's tested anywhere.

[14:26] <jnthn> Spec'd in S06 iirc.

[14:27] *** jlaire joined
[14:27] *** GlitchMr joined
[14:27] <moritz> does  'my $x is Proxy' work?

[14:27] <jnthn> not yet.

[14:28] <jnthn> ...what would that mean? :)

[14:28] <jnthn> (you didn't give Proxy a STORE or FETCH...)

[14:28] <moritz> jnthn: only makes sense for classes that wrap or inherit from Proxy

[14:28] <jnthn> moritz: Yes

[14:29] <jnthn> Anyway, NYI.

[14:29] *** pkkm joined
[14:29] <jnthn> I implemented Proxy 'cus I needed it for Zavolaj.

[14:31] *** mj41 joined
[14:31] <dalek> roast: 21e85ed | moritz++ | S14-roles/stubs.t:

[14:31] <dalek> roast: initial tests for composing roles with stubbed methods

[14:31] <dalek> roast: review: https://github.com/perl6/roast/commit/21e85edecd

[14:32] *** woosley joined
[14:35] <moritz> did I miss any important cases?

[14:35] *** lateau_ joined
[14:36] * lichtkind added pretty to index a

[14:37] *** kaleem joined
[14:38] *** lateau_ left
[14:39] *** mkramer left
[14:41] *** pkkm left
[14:42] <lichtkind> rakudo: my @d= 1..5; say @d.fmt( jojo %d   %d);

[14:42] <p6eval> rakudo 1eadbb: OUTPUT«===SORRY!===␤Variable %d is not predeclared at line 1, near "   %d);"␤»

[14:42] *** pkkm joined
[14:42] <lichtkind> rakudo: my @d= 1..5; say @d

[14:42] <p6eval> rakudo 1eadbb: OUTPUT«1 2 3 4 5␤»

[14:42] <lichtkind> rakudo: my @d= 1..5; say @d.fmt( "jojo %d   %d");

[14:42] <p6eval> rakudo 1eadbb: OUTPUT«Null PMC access in get_integer()␤  in method fmt at src/gen/CORE.setting:1697␤  in method reify at src/gen/CORE.setting:4352␤  in method reify at src/gen/CORE.setting:4257␤  in method reify at src/gen/CORE.setting:4257␤  in method gimme at src/gen/CORE.setting:4621…

[14:43] *** woosley left
[14:43] <lichtkind> rakudo: my @d= 1..5; say @d.fmt( "%d", ',');

[14:43] <p6eval> rakudo 1eadbb: OUTPUT«1,2,3,4,5␤»

[14:43] <lichtkind> rakudo: my @d= 1..5; say @d.fmt( "%d-", ',');

[14:43] <p6eval> rakudo 1eadbb: OUTPUT«1-,2-,3-,4-,5-␤»

[14:43] <lichtkind> rakudo: my @d= 1..5; say @d.fmt( "%d-");

[14:43] <p6eval> rakudo 1eadbb: OUTPUT«1- 2- 3- 4- 5-␤»

[14:44] <lichtkind> rakudo: my @d= 1..5; say @d.fmt( "%d-%s");

[14:44] <p6eval> rakudo 1eadbb: OUTPUT«Null PMC access in get_string()␤  in method fmt at src/gen/CORE.setting:1697␤  in method reify at src/gen/CORE.setting:4352␤  in method reify at src/gen/CORE.setting:4257␤  in method reify at src/gen/CORE.setting:4257␤  in method gimme at src/gen/CORE.setting:4621␤…

[14:44] <lichtkind> rakudo: my @d= 1..5; say @d.fmt( "-%s");

[14:44] <p6eval> rakudo 1eadbb: OUTPUT«-1 -2 -3 -4 -5␤»

[14:44] <lichtkind> got it :)

[14:44] *** mkramer joined
[14:44] <jnthn> npmca ist crap, though.

[14:45] * masak submits rakudobug

[14:45] <masak> hello, #perl6 :)

[14:45] <jnthn> masak. He submits bugs, THEN greets you.

[14:45] * masak submerges in $dayjob again, hoping to re-appear later in the week

[14:46] *** mkramer left
[14:48] *** lateau_ joined
[14:49] *** agentzh left
[14:49] *** PacoLinux joined
[14:49] <lichtkind> rakudo: my @d= 1..6; say @d.fmt( "%d-%s");

[14:49] <p6eval> rakudo 1eadbb: OUTPUT«Null PMC access in get_string()␤  in method fmt at src/gen/CORE.setting:1697␤  in method reify at src/gen/CORE.setting:4352␤  in method reify at src/gen/CORE.setting:4257␤  in method reify at src/gen/CORE.setting:4257␤  in method gimme at src/gen/CORE.setting:4621␤…

[14:49] <masak> rakudo: say sprintf("%d-%s", 42)

[14:49] <p6eval> rakudo 1eadbb: OUTPUT«Null PMC access in get_string()␤  in sub sprintf at src/gen/CORE.setting:1841␤  in block <anon> at /tmp/l7bxDeoee7:1␤  in <anon> at /tmp/l7bxDeoee7:1␤»

[14:49] <masak> sprintf is the real culprit.

[14:50] <jnthn> ah

[14:50] * moritz thought so

[14:52] <jnthn> moritz: The test didn't cover the inheritance case of having a method.

[14:52] *** jaldhar left
[14:52] <moritz> jnthn: right

[14:52] * lichtkind likes fmt

[14:53] <jnthn> moritz: Other than that, it looks good.

[14:53] <jnthn> moritz: I think there may be an RT for this too

[14:58] *** kensanata left
[14:58] *** Radvendii joined
[15:02] *** xjiujiu left
[15:08] *** donri joined
[15:11] *** tokuhirom left
[15:12] <colomon> niecza: say (a => 3) eqv (a => 3)

[15:12] <p6eval> niecza v12-72-g383966e: OUTPUT«Unhandled exception: Cannot use value like Pair as a number␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting line 195 (Any.Numeric @ 4) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting li…

[15:13] <flussence> seeing that sprintf talk made me wonder... does zavolaj know how to do varargs stuff like that?

[15:13] <jnthn> flussence: Not yet.

[15:14] <jnthn> flussence: I in theory can support it, but it's probably not trivial.

[15:14] <jnthn> oh, maybe it's not so horrific.

[15:14] <flussence> hm, what about vsprintf? va_list is just a struct, afaik

[15:14] <jnthn> I know dyncall supports it for cdecl.

[15:17] <lichtkind> http://www.perlfoundation.org/perl6/index.cgi?perl_6_basics_tablet#fmt

[15:17] <lichtkind> new stuff

[15:18] <colomon> nom: say (a => 3).invert

[15:18] <p6eval> nom 1eadbb: OUTPUT«3 => "a"␤»

[15:19] <colomon> should Enum have an invert method?

[15:23] <dalek> roast: 9872f1f | (Solomon Foster)++ | S0 (2 files):

[15:23] <dalek> roast: Fudge for niecza.

[15:23] <dalek> roast: review: https://github.com/perl6/roast/commit/9872f1f734

[15:25] *** risou_awy is now known as risou

[15:26] *** wtw left
[15:30] *** thou joined
[15:32] <colomon> ugh, lots of failures in the niecza spectest.  anyone know if they are expected?  it's hard to see what they could have to do with my latest change...

[15:33] <dalek> niecza: 1da092a | (Solomon Foster)++ | lib/CORE.setting:

[15:33] <dalek> niecza: Add kv sub, Pair.invert.

[15:33] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1da092a170

[15:33] <dalek> niecza: 81237b2 | (Solomon Foster)++ | t/spectest.data:

[15:33] <dalek> niecza: Turn on pair.t.

[15:33] <dalek> niecza: review: https://github.com/sorear/niecza/commit/81237b2959

[15:34] *** mj41 left
[15:36] *** mkramer joined
[15:37] *** mkramer left
[15:45] <[Coke]> colomon: https://gist.github.com/1476841 shows failures for some time now.

[15:46] <[Coke]> (since 12/14)

[15:46] <colomon> huh.  I'm not getting anything like 295 failures.  More like 8.

[15:49] *** mj41 joined
[15:49] <[Coke]> that's using t/spec/test_summary, which is like, but entirely the same as, 'make spectest'. Also, we might have different platforms.

[15:51] *** lateau_ left
[15:54] *** somep6user left
[15:58] *** benabik left
[15:58] *** benabik joined
[16:10] <dalek> roast: 2fdbd0d | (Solomon Foster)++ | S05-metasyntax/litvar.t:

[16:10] <dalek> roast: Fix fudging for niecza.

[16:10] <dalek> roast: review: https://github.com/perl6/roast/commit/2fdbd0ddcf

[16:10] <dalek> roast: 6b769eb | (Solomon Foster)++ | S05-metasyntax/litvar.t:

[16:10] <dalek> roast: Unfudge passing tests.

[16:10] <dalek> roast: review: https://github.com/perl6/roast/commit/6b769ebc27

[16:12] <dalek> roast: cd2cf77 | (Solomon Foster)++ | S05-metasyntax/repeat.t:

[16:12] <dalek> roast: Unfudge for niecza.

[16:12] <dalek> roast: review: https://github.com/perl6/roast/commit/cd2cf775f9

[16:16] <dalek> roast: d72e0b4 | (Solomon Foster)++ | S05-metasyntax/sequential-alternation.t:

[16:16] <dalek> roast: Refudge for niecza.

[16:16] <dalek> roast: review: https://github.com/perl6/roast/commit/d72e0b43ce

[16:24] <colomon> nom: "hello foo bar and baz".capitalize

[16:24] <p6eval> nom 1eadbb:  ( no output )

[16:24] <colomon> nom: say "hello foo bar and baz".capitalize

[16:24] <p6eval> nom 1eadbb: OUTPUT«Hello Foo Bar And Baz␤»

[16:26] <colomon> nom: say "hello foo bar and baz".substr(6, 10).capitalize

[16:26] <p6eval> nom 1eadbb: OUTPUT«Foo Bar An␤»

[16:33] *** kaleem left
[16:34] *** kaleem joined
[16:38] <colomon> sorear: ping

[16:38] <colomon> say "hello".lc.subst(:g, /\w+/, { say "boo $0"; ucfirst $0; })

[16:38] <colomon> nom: say "hello".lc.subst(:g, /\w+/, { say "boo $0"; ucfirst $0; })

[16:38] <p6eval> nom 1eadbb: OUTPUT«boo ␤␤»

[16:44] *** baest left
[16:51] <colomon> nom: say "hello".subst(:g, /\w+/, { say "boo $0"; ucfirst $0; })

[16:51] <p6eval> nom 1eadbb: OUTPUT«boo ␤␤»

[16:52] <colomon> niecza: say "hello".subst(:g, /\w+/, { say "boo $0"; ucfirst $0; })

[16:52] <p6eval> niecza v12-74-g81237b2: OUTPUT«Use of uninitialized value in string context␤  at /home/p6eval/niecza/lib/CORE.setting line 782 (warn @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 169 (Mu.Str @ 9) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting …

[16:52] <colomon> arrrgh, complete brainfail

[16:52] <colomon> niecza: "hello".capitalize

[16:52] <p6eval> niecza v12-74-g81237b2: OUTPUT«Use of uninitialized value in string context␤  at /home/p6eval/niecza/lib/CORE.setting line 782 (warn @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 169 (Mu.Str @ 9) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting …

[16:52] <colomon> niecza: say "hello".capitalize

[16:52] <p6eval> niecza v12-74-g81237b2: OUTPUT«===SORRY!===␤␤Confused at /tmp/KQNNKRpM7B line 1:␤------> say "hello".capitaliz⏏e␤␤Parse failed␤␤»

[16:52] <colomon> niecza: say "hello".capitalize()

[16:52] <p6eval> niecza v12-74-g81237b2: OUTPUT«===SORRY!===␤␤Confused at /tmp/uHNpdznJqT line 1:␤------> say "hello".capitaliz⏏e()␤␤Parse failed␤␤»

[16:53] <colomon> std: say "hello".capitalize()

[16:53] <p6eval> std dc62e1d: OUTPUT«===SORRY!===␤Confused at /tmp/eCyhXCuI_A line 1:␤------> say "hello".capitaliz⏏e()␤    expecting any of:␤     POST␤   bracketed infix␤        infix or meta-infix␤    method arguments␤       postfix␤        postfix_prefix_meta_operator␤  

[16:53] <p6eval> ..statement modifier loo…

[16:53] <colomon> perl6: say "hello".capitalize

[16:53] <p6eval> pugs b927740, rakudo 1eadbb: OUTPUT«Hello␤»

[16:53] <p6eval> ..niecza v12-74-g81237b2: OUTPUT«Use of uninitialized value in string context␤  at /home/p6eval/niecza/lib/CORE.setting line 782 (warn @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 169 (Mu.Str @ 9) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting …

[16:54] <colomon> niecza: say "hello".subst(:g, /\w+/, { ucfirst $0 })

[16:54] <p6eval> niecza v12-74-g81237b2: OUTPUT«Use of uninitialized value in string context␤  at /home/p6eval/niecza/lib/CORE.setting line 782 (warn @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 169 (Mu.Str @ 9) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting …

[17:02] *** TimToady_ is now known as TimToady

[17:20] <sorear> good * #perl6

[17:20] <colomon> \o

[17:20] <colomon> you're just in time to stop me from going back to $work.  ;)

[17:21] <colomon> if you've got a moment...

[17:22] *** Radvendii left
[17:23] <sorear> colomon: Hi I ave a moment.

[17:23] <colomon> \o/

[17:23] <colomon> so capitalize is borked

[17:24] <sorear> colomon: I just got rid of the /\w+/, { ucfirst $0 } "feature".  Are you seriously telling me the spectests use it? :|

[17:24] <colomon> and I've been tracking it down, and it appears to be because subst isn't setting $/ to the match value properly.

[17:24] <colomon> sorear: no, niecza's setting uses it

[17:24] <sorear> ah

[17:24] <sorear> that's fixable.

[17:24] <colomon> what bit of it did you get rid of?

[17:25] <sorear> /\w+/ contains no capturing groups, so $0 should not have been defined

[17:25] *** daxim left
[17:25] <sorear> previously niecza had a hack where, with no capturing groups, $0 meant $/

[17:25] <colomon> .... interesting.

[17:25] *** molaf joined
[17:26] <colomon> so should ucfirst $/ work, then?

[17:26] <sorear> the original purpose of this hack was to make say "foo" ~~ /./ do something useful, before .gist was added

[17:26] <sorear> yes

[17:26] <colomon> niecza: say "hello".subst(:g, /\w+/, { ucfirst $/ })

[17:26] <sorear> I'm testing a fix now

[17:26] <p6eval> niecza v12-74-g81237b2: OUTPUT«Hello␤»

[17:26] <colomon> sorear++

[17:27] <sorear> ...or you can test it!

[17:27] <colomon> fix for capitalize, you mean?

[17:27] <colomon> I'd be happy to test it.

[17:28] <dalek> niecza: 80c1f80 | sorear++ | lib/CORE.setting:

[17:28] <dalek> niecza: Fix bogus use of $0 in capitalize (colomon++)

[17:28] <dalek> niecza: review: https://github.com/sorear/niecza/commit/80c1f802c8

[17:28] <sorear> no, you just did.

[17:28] <sorear> I didn't think to use p6eval ;)

[17:28] <colomon> ah.  :)

[17:29] <colomon> yup, that makes capitalize work much, much better.  :)

[17:30] <colomon> I've been working on cleaning up the spectest so it tests clean, and that was a bit of a show-stopper.

[17:36] <colomon> t/spec/S05-grammar/action-stubs.t is crashing outright, I'm guessing that's got something to do with your current changes?

[17:39] *** Woodi_ left
[17:39] *** Woodi joined
[17:40] *** zhangkaizhao left
[17:43] <sorear> that's funny because action stubs were removed from the spec 1y+ ago

[17:44] * sorear tries it to see how (and more importantly, where) it crashes

[17:45] *** fridim_ joined
[17:45] <[Coke]> perl6: say 1..3 minmax -6..-2

[17:45] <p6eval> niecza v12-74-g81237b2: OUTPUT«Unhandled exception: minmax NYI␤  at /home/p6eval/niecza/lib/CORE.setting line 889 (die @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 2049 (infix:<minmax> @ 2) ␤  at /tmp/rov5n_SH1i line 1 (mainline @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting li…

[17:45] <p6eval> ..pugs b927740: OUTPUT«*** No such subroutine: "&infix:minmax"␤    at /tmp/15AkplD8YP line 1, column 1 - line 2, column 1␤»

[17:45] <p6eval> ..rakudo 1eadbb: OUTPUT«-6..3␤»

[17:45] *** simcop2387 left
[17:45] *** am0c left
[17:46] *** simcop2387 joined
[17:47] <sorear> what?

[17:48] <sorear> it should not be hitting the MMD dispatcher for this ...

[17:51] *** MindosCheng joined
[17:51] <[Coke]> perl6:say +(5..5)

[17:51] <[Coke]> perl6: say +(5..5)

[17:51] <p6eval> niecza v12-74-g81237b2: OUTPUT«Unhandled exception: Cannot use value like Range as a number␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting line 195 (Any.Numeric @ 4) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /tmp/Zmj5aYUqkh line 1 (mainline @ 1) …

[17:51] <p6eval> ..pugs b927740, rakudo 1eadbb: OUTPUT«1␤»

[17:52] <[Coke]> so, why would that be 1 ?

[17:52] <[Coke]> niecza sounds saner here.

[17:53] <sorear> hahahaha.

[17:53] <[Coke]> nom: say +(1..10)

[17:53] <p6eval> nom 1eadbb: OUTPUT«10␤»

[17:53] <sorear> niecza: sub foo { '{*}' }; say foo()

[17:53] <p6eval> niecza v12-74-g81237b2: OUTPUT«Unhandled exception: System.NullReferenceException: Object reference not set to an instance of an object␤  at Niecza.Kernel.TypeDispatcher (Niecza.Frame th, Boolean tailcall) [0x00000] in <filename unknown>:0 ␤  at Niecza.Kernel.StandardTypeProtoC (Niecza.…

[17:53] <[Coke]> ah, it's the # of elements?

[17:53] <sorear> [Coke]: seems likely

[17:53] <sorear> [Coke]: like +@(self)

[17:53] <[Coke]> That's almost sane.

[17:54] <[Coke]> If you agree, it'll get you 4 more spec tests. ;)

[17:54] <sorear> I agree

[17:54] *** benabik left
[17:55] <sorear> niecza: say ('abc{*}' ~~ m:pos(0) / '{*}' /); say ('{*}' ~~ m:pos(0) / '{*}' /);

[17:55] <p6eval> niecza v12-74-g81237b2: OUTPUT«Bool::False␤#<match from(0) to(3) text({*}) pos([].list) named({}.hash)>␤»

[17:56] *** tokuhirom joined
[17:56] * [Coke] will try to patch that.

[17:58] <dalek> niecza: 25c05b3 | sorear++ | src/niecza:

[17:58] <dalek> niecza: sub foo {*} and sub foo { '{*}' } are not the same, *sigh*

[17:58] <dalek> niecza: review: https://github.com/sorear/niecza/commit/25c05b321a

[17:58] <sorear> colomon: t/spec/S05-grammar/action-stubs.t passes again

[17:59] <sorear> except for the bit where subst changes $/

[18:00] <sorear> which is something I have mixed feelings on

[18:00] <sorear> look at, say, t/spec/fudge lines 115-117

[18:00] <sorear> subst changing $/ is useful in practice!

[18:06] *** dakkar left
[18:08] <colomon> sorear++

[18:10] *** mj41 left
[18:14] *** s1n left
[18:17] <dalek> roast: 84d0e6f | (Solomon Foster)++ | S05-capture/match-object.t:

[18:17] <dalek> roast: Refudge for niecza.

[18:17] <dalek> roast: review: https://github.com/perl6/roast/commit/84d0e6f4b3

[18:19] *** shachaf_ is now known as shachaf

[18:21] <dalek> niecza: ea02434 | coke++ | lib/CORE.setting:

[18:21] <dalek> niecza: Make Range in numeric context return # of elements.

[18:21] <dalek> niecza: review: https://github.com/sorear/niecza/commit/ea024343e7

[18:21] <dalek> roast: 27d0c93 | coke++ | S0 (2 files):

[18:21] <dalek> roast: niecza unfudge

[18:21] <dalek> roast: review: https://github.com/perl6/roast/commit/27d0c93cfa

[18:22] *** risou is now known as risou_awy

[18:24] *** molaf left
[18:27] <colomon> [Coke]++

[18:29] <dalek> roast: 3564b2f | coke++ | S03-metaops/reduce.t:

[18:29] <dalek> roast: niecza unfudge

[18:29] <dalek> roast: review: https://github.com/perl6/roast/commit/3564b2f8b8

[18:29] <[Coke]> ah, missed one.

[18:30] *** MindosCheng left
[18:31] *** localhost left
[18:32] *** localhost joined
[18:37] *** MindosCheng joined
[18:50] *** ispeak_ joined
[18:51] *** arlinius left
[18:54] <tadzik> 'evening

[18:54] <colomon> 'afternoon

[18:55] <sorear> hello.

[19:03] *** kaleem left
[19:04] *** ispeak_ left
[19:04] *** ispeak joined
[19:11] <lichtkind> cheers o/

[19:11] <lichtkind> rakudo doenst know lol or is it gone?

[19:12] <colomon> LoL is not gone

[19:12] <lichtkind> yes but the operator is callen lol not?

[19:13] <colomon> I have no idea

[19:13] <lichtkind> didnt worked in rakudo

[19:14] <tadzik> never heard of a lol operator

[19:15] <lichtkind> s03 has heard and so did I

[19:15] <lichtkind> i wrote it into the tablets 2 years ago

[19:15] <lichtkind> buhuhu nobody is following my work

[19:16] <lichtkind> but curiosly S02 write it LoL and S03 lol

[19:17] <lichtkind> LoL seames to be a built in type

[19:17] <lichtkind> and lol the op

[19:18] *** mj41 joined
[19:25] <[Coke]> looks like no lol spec tests.

[19:27] *** tokuhirom left
[19:29] *** mj41 left
[19:30] <[Coke]> nom: say ~(1..2)

[19:30] <p6eval> nom 1eadbb: OUTPUT«1 2␤»

[19:30] <[Coke]> nom: say ~('a'..'b')

[19:30] <p6eval> nom 1eadbb: OUTPUT«a b␤»

[19:31] <[Coke]> nom: say (1..2)

[19:31] <p6eval> nom 1eadbb: OUTPUT«1..2␤»

[19:32] *** alfoos joined
[19:33] *** Chillance joined
[19:36] *** alfoos left
[19:42] *** Chillance left
[19:50] *** zby_home joined
[19:55] <masak> oh hai, #perl6!

[19:57] <flussence> yayitsmasak!

[19:57] <colomon> \o

[19:57] <masak> \o/

[19:57] <sorear> Hello masak \o/ \o/ \o/

[19:57] <masak> I've missed you people

[19:58] *** pkkm_ joined
[19:58] *** panterax left
[19:59] <sorear> masak: I'm past finals and I have plenty of time now

[19:59] <masak> the dire lack of #perl6 was only partly made up for by wonderful weather, awesome food, and daily massages for two weeks :)

[20:00] <masak> sorear: nice to hear. I'm past the hump of work for this year, and have some moderate amounts of time.

[20:00] <tadzik> lol! Masak!

[20:00] <masak> I'm happy to report that a p6cc will happen this year. we don't know exactly when yet, but stay tuned.

[20:00] <masak> lol! tadzik! \o/

[20:00] <tadzik> \o/

[20:00] <sorear> p6cc?

[20:00] <tadzik> coding contest!

[20:00] <masak> ayup

[20:01] <masak> some excellent problems lined up for you this year. :)

[20:01] *** pkkm left
[20:01] <sorear> masak: by "this year", do you mean "the next 12 days" or "the next 12-377 days" ?

[20:02] <masak> well, the announcement will hopefully be in the former, but it'll stretch on during the early parts of the latter.

[20:02] <masak> er, "it" being the contest.

[20:02] <masak> not the announcement. :)

[20:03] <tadzik> hell with the contest. How was the vacation?

[20:03] <masak> warm. sunny. relaxing.

[20:03] <jnthn> evenin'

[20:03] <masak> Hong Kong woulda beat Singapore in awesomeness, if it weren't for the smog.

[20:04] <masak> Ko Lanta was endearing.

[20:04] *** baest joined
[20:04] <masak> my travel companions and good friends are dears, too.

[20:04] <masak> lol, jnthn!

[20:05] <jnthn> omgz, masak!

[20:05] <jnthn> :)

[20:05] <masak> I am really tired. my, um, plan is to blog for p6adv and then go to bed, like, a lot.

[20:07] <masak> most of my body actually believes it's 3 am in Hong Kong right now.

[20:07] <masak> which it is -- argh, you know what I mean. :)

[20:07] <jnthn> masak: going to be once should be sufficient. Getting up to go to bed multiple times won't help. :)

[20:07] * masak hopes the blog post will turn out better than his confused ramblings on channel

[20:08] <jnthn> Just do a post on how to write a bf compiler :)

[20:08] * masak .oO( just write a gf compiler and change some stuff )

[20:09] <masak> no, I know what to write about.

[20:09] <tadzik> . o O ( just write gf a compiler )

[20:09] <sorear> ...a gf compiler?

[20:09] <tadzik> heh, that reminds me

[20:09] <jnthn> . o O ( just gf )

[20:09] <tadzik> "what is gonna be your present for me?" "suprise. I'll make it myself" "...you'll write me a program?"

[20:10] <tadzik> true_story.png

[20:10] <sorear> probably not talking about GF(2**8)

[20:10] <masak> sorear++ :)

[20:10] <masak> sorear: I'm all for diversifying portfolios, but wow that's a lot of GF...

[20:11] <sorear> Galois fields

[20:11] * masak knows

[20:11] * jnthn didn't :)

[20:11] <masak> the Galois fields are a nice spot to have a little picnic with one's gf...

[20:12] <tadzik> Loooow lieeeee, the fieeelds of Galoiiiiiis

[20:13] <colomon> I thought they were still a bit bloody...

[20:13] <masak> only with martyrs.

[20:18] *** bbkr1 joined
[20:18] *** molaf joined
[20:20] *** cooper joined
[20:21] *** kst` is now known as kst

[20:23] *** mj41 joined
[20:25] *** flussence left
[20:29] *** flussence joined
[20:31] *** molaf left
[20:37] *** sftp left
[20:39] *** sftp joined
[20:43] <dalek> niecza: d9cc964 | sorear++ | lib/UCD.cs:

[20:43] <dalek> niecza: Implement procedural na and dm mappings for CJK and Hangul

[20:43] <dalek> niecza: review: https://github.com/sorear/niecza/commit/d9cc964b1c

[20:45] * [Coke] wonders how pairs should sort.

[20:45] <[Coke]> perl5: my %hash = (1=>2,3=>4,5=>6); say %hash.pairs.sort()

[20:45] <[Coke]> perl6: my %hash = (1=>2,3=>4,5=>6); say %hash.pairs.sort() #whoops

[20:45] <p6eval> rakudo 1eadbb: OUTPUT«"1" => 2 "3" => 4 "5" => 6␤»

[20:45] <p6eval> ..pugs b927740: OUTPUT«1 23 45 6␤»

[20:45] <p6eval> ..niecza v12-77-gea02434: OUTPUT«Unhandled exception: System.InvalidOperationException: Comparison threw an exception. ---> Cannot use value like Pair as a number␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting line 195 (Any.Numeric @ 4) ␤  at <unknown> …

[20:45] <jnthn> Hangul! \o/

[20:52] <masak> 한글!

[20:53] *** bbkr1 left
[20:54] <sorear> jnthn: mmm?

[20:54] <jnthn> sorear: I just think Hangul is awesome. ;)

[20:55] <sorear> oh yes.  yes it is.

[20:55] <jnthn> I learned how to read it once (the sounds, not many of the meanings). It's rusted now though. :(

[20:56] * jnthn should visit Korea again :)

[20:56] <jnthn> The people and food are also awesome. :)

[20:56] <sorear> perl6: say "\c[HANGUL SYLLABLE HAN]"

[20:56] <p6eval> niecza v12-77-gea02434: OUTPUT«===SORRY!===␤␤Action method charname not yet implemented at /tmp/FIPmcwKra2 line 1:␤------> say "\c[HANGUL SYLLABLE HAN⏏]"␤␤Action method charnames not yet implemented at /tmp/FIPmcwKra2 line 1:␤------> say "\c[HAN…

[20:56] <p6eval> ..rakudo 1eadbb: OUTPUT«한␤»

[20:56] <p6eval> ..pugs b927740: OUTPUT«Unknown charname 'HANGUL SYLLABLE HAN' at /usr/share/perl/5.10/unicore/Name.pl line 1␤ï¿½␤»

[20:56] <[Coke]> jnthn: you hear the korea news, I presume?

[20:57] <sorear> perl6: say "\c[FULL STOP]"

[20:57] <p6eval> niecza v12-77-gea02434: OUTPUT«===SORRY!===␤␤Action method charname not yet implemented at /tmp/G3AB36G_ye line 1:␤------> say "\c[FULL STOP⏏]"␤␤Action method charnames not yet implemented at /tmp/G3AB36G_ye line 1:␤------> say "\c[FULL STOP[33…

[20:57] <p6eval> ..pugs b927740, rakudo 1eadbb: OUTPUT«.␤»

[20:57] <sorear> rakudo, really?

[20:57] <sorear> I'm suprised Rakudo can do this

[20:58] <jnthn> [Coke]: Yes, read it first thing this morning.

[20:58] <jnthn> sorear: Sometimes Rakudo does stuff. ;-)

[20:58] <jnthn> sorear: It only works if on a Parrot built with ICU, iirc.

[20:58] <sorear> ooc, where is that implemented?

[20:59] <jnthn> sorear: Good question. I *think* there's a dynop.

[20:59] <jnthn> That calls into ICU.

[21:02] <sorear> jnthn: looks like charname in src/HLL/Actions.pm

[21:02] <jnthn> oh. :)

[21:02] <sorear> -> pir::find_codepoint__Is( ~$/ )

[21:02] <jnthn> ah, oK. 

[21:02] <jnthn> Then a Parrot core op that delegates to ICU :)

[21:02] <jnthn> https://github.com/sorear/niecza/commit/d9cc964b1c

[21:02] <sorear> I figured there was a dynop but I was more interested in where on the Rakudo side

[21:02] *** Radvendii joined
[21:02] <Radvendii> hey guys

[21:02] <sorear> jnthn: What about that commit?

[21:03] <sorear> o/ Radvendii

[21:03] *** GlitchMr left
[21:03] <jnthn> sorear: ooops :)

[21:04] <jnthn> sorear: Accidental paste :)

[21:04] <jnthn> .oO( at least there wasn't anything else on the clipboard :) )

[21:04] <sorear> rakudo: say ord "\c[LINEAR B SYLLABLE B008 A]"

[21:04] <p6eval> rakudo 1eadbb: OUTPUT«65536␤»

[21:06] <sorear> rakudo: say "\c[LATIN CAPITAL LETTER A WITH MACRON AND GRAVE]"

[21:06] <p6eval> rakudo 1eadbb: OUTPUT«===SORRY!===␤Unrecognized character name LATIN CAPITAL LETTER A WITH MACRON AND GRAVE at line 1, near "]\""␤»

[21:06] <sorear> rakudo: say "\c[TAMIL CONSONANT NN]"

[21:06] <p6eval> rakudo 1eadbb: OUTPUT«===SORRY!===␤Unrecognized character name TAMIL CONSONANT NN at line 1, near "]\""␤»

[21:10] <jnthn> .u LATIN CAPITAL LETTER A WITH MACRON AND GRAVE

[21:10] <phenny> jnthn: Sorry, no results for 'LATIN CAPITAL LETTER A WITH MACRON AND GRAVE'.

[21:10] <jnthn> .u TAMIL CONSONANT NN

[21:10] <phenny> jnthn: Sorry, no results for 'TAMIL CONSONANT NN'.

[21:10] <jnthn> Hm. :)

[21:10] <jnthn> .u LINEAR B SYLLABLE B008 A

[21:10] <phenny> jnthn: Sorry, no results for 'LINEAR B SYLLABLE B008 A'.

[21:10] <jnthn> oh :)

[21:11] <sorear> One of those is the name of a supplementary character, the other two are from NamedSequences.txt

[21:12] <jnthn> sh, k

[21:12] <jnthn> *ah

[21:28] *** pkkm_ left
[21:30] <masak> blog post! \o/ http://perl6advent.wordpress.com/2011/12/19/day-19-abstraction-and-why-its-good/

[21:32] <colomon> jnthn: is the "$got.defined" line in Test.pm's sub is there to prevent "uninitialized variable" warnings?

[21:33] <jnthn> colomon: Imagine so.

[21:33] <jnthn> colomon: oh

[21:33] <jnthn> colomon: more likely to do with Failure actually

[21:33] <masak> aye.

[21:33] <jnthn> masak: yay!

[21:33] <masak> the comment even says so.

[21:34] <masak> i.e. making sure the Failures don't trigger and throw an exception.

[21:34] <colomon> how exactly does it do that?

[21:34] * colomon is trying to figure out how to deal with tons of uninitialized variable warnings in Niecza test runs.

[21:37] <sorear> fix the tests that do "x" ~ Any without a good reason?

[21:38] <masak> colomon: calling .defined disarms the Failure.

[21:41] <colomon> sorear: the tests I'm looking at are the other way around.  we're getting Any when we should be getting a more useful object.

[21:41] <sorear> colomon: and the tests don't fail?

[21:42] <colomon> sorear: they fail, they just fail with a lot of useless stack trace noise

[21:43] <sorear> Perhaps use Test ought to suppress warnings entirely

[21:43] <masak> huh? sounds like a bad idea.

[21:43] <colomon> https://gist.github.com/1499027 for instance

[21:44] <masak> ok, going to bed at least a hundred times now. 'night.

[21:44] <sorear> colomon: probably a good idea to put // '' into Test.pm6 then

[21:44] <sorear> in &is

[21:46] <colomon> right, but then that breaks if someone does do     is $x, Any

[21:46] <sorear> no

[21:46] <sorear> that never worked

[21:46] <sorear> niecza: use Test; is "", Any, "moo";

[21:46] <p6eval> niecza v12-78-gd9cc964: OUTPUT«Use of uninitialized value in string context␤  at /home/p6eval/niecza/lib/CORE.setting line 782 (warn @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 169 (Mu.Str @ 9) ␤  at <unknown> line 0 (ExitRunloop @ 0) ␤  at /home/p6eval/niecza/lib/Test.pm6 line…

[21:47] <sorear> niecza: use Test; is "", Any, "moo"; CONTROL { return }

[21:47] <p6eval> niecza v12-78-gd9cc964: OUTPUT«ok 1 - moo␤»

[21:47] <colomon> let me try it and see what happens to the spectest run.... er?

[21:47] <sorear> is that what you mean?

[21:48] <diakopter> phenny: tell moritz typo in your last spec commit

[21:48] <phenny> diakopter: I'll pass that on when moritz is around.

[21:49] <sorear> colomon: http://pastie.org/3042880

[21:50] *** lue joined
[21:52] <lue> Is it OK for me to install my own recent version of rakudo on feather? (I would assume yes, but the server's welcome message has me overly-worried)

[21:56] <sorear> lue: it is OK for you to do a systemwide install of the latest Rakudo

[21:56] <sorear> lue: the original idea for feather was that all of the users would share admin rights, but what's actually happened is that everybody neglects it

[21:56] <sorear> tragedy of the commons

[21:57] <lue> Oh, I thought I would just keep a most-recent version in my own home folder.

[21:57] <sorear> seems wasteful

[22:01] <colomon> sorear: sorry to disappear on you, co-opted to cooking noms for my family.  will return post-nom

[22:03] <lue> So I'm guessing it would be alright for me to compile Rakudo nom and then install it to /usr/local ?

[22:06] <sorear> yes

[22:17] *** Chillance joined
[22:24] <lue> Hm. Did anyone else get the "perl6.org is ugly" email? 'Cos it doesn't look like it went through any mailing list.

[22:25] <sorear> lue: it came to you because you're a member of the perl6 organization on github

[22:25] <lue> ah, [That would explain the "github" bit in the From header] duh to myself.

[22:34] *** ggoebel left
[22:37] *** benabik joined
[22:38] * [Coke] ruvs whitespacebot!

[22:44] *** baest left
[22:44] * sjn waits for someone to write an indentbot

[22:51] * lue apparently can't write to /usr/local . Oh well.

[23:06] *** tokuhirom joined
[23:08] <colomon> sorear: your patch (slightly tweaked) works fine.  I'm still seeing similar messages fly by during the spectest, so there must be similar problems lurking in Test.pm6

[23:09] <dalek> niecza: d18c193 | (Solomon Foster)++ | lib/Test.pm6:

[23:09] <dalek> niecza: Avoid warnings in "is".

[23:09] <dalek> niecza: review: https://github.com/sorear/niecza/commit/d18c193cc9

[23:09] <colomon> Ack, should have said "sorear++" in the message.

[23:11] <colomon> sorear++ again, just for good measure

[23:13] *** mj41 left
[23:22] *** ispeak left
[23:22] *** ispeak_ joined
[23:22] *** ispeak_ left
[23:29] *** am0c joined
[23:30] *** zby_home left
[23:37] <dalek> roast: ab7accd | (Solomon Foster)++ | S03-operators/assign.t:

[23:37] <dalek> roast: Fudge for niecza.

[23:37] <dalek> roast: review: https://github.com/perl6/roast/commit/ab7accd96a

[23:37] <dalek> niecza: 8c6d50c | (Solomon Foster)++ | t/spectest.data:

[23:37] <dalek> niecza: Turn on S03-operators/assign.t.

[23:37] <dalek> niecza: review: https://github.com/sorear/niecza/commit/8c6d50c9ed

[23:39] *** tokuhirom left
[23:46] *** snearch joined
[23:51] *** fridim_ left
[23:58] *** lestrrat left
[23:59] *** lestrrat joined
