[00:17] *** dukeleto left
[00:17] *** dukeleto joined
[00:23] *** wamba left
[00:25] *** araujo left
[00:26] *** araujo joined
[00:26] *** zorgnax left
[00:35] <dalek> niecza: 4508d7b | sorear++ | lib/ (2 files):

[00:35] <dalek> niecza: Start building RuntimeUnit objects

[00:35] <dalek> niecza: review: https://github.com/sorear/niecza/commit/4508d7bcc1

[00:35] <dalek> niecza: 04df192 | sorear++ | lib/ (2 files):

[00:35] <dalek> niecza: Serialized representation, not contstructors, for declarative prefixes

[00:35] <dalek> niecza: review: https://github.com/sorear/niecza/commit/04df192676

[00:38] <sorear> that change alone brings STD.BOOT down from 477378 to 408958 (bytes of IL)

[01:21] <dalek> niecza: 183a42a | sorear++ | lib/ (2 files):

[01:21] <dalek> niecza: Use a blob for the SubInfo constructor

[01:21] <dalek> niecza: review: https://github.com/sorear/niecza/commit/183a42a442

[01:54] *** donri left
[01:58] *** kst joined
[02:01] *** _jaldhar left
[02:01] *** _jaldhar joined
[02:04] <sorear> 294695

[02:05] *** _jaldhar left
[02:05] *** _jaldhar joined
[02:31] <dalek> niecza: 75a1ba9 | sorear++ | lib/ (2 files):

[02:31] <dalek> niecza: Encode signatures as blobs

[02:31] <dalek> niecza: review: https://github.com/sorear/niecza/commit/75a1ba96f3

[02:31] <sorear> 281777 (despite code to set up index->metaobject mapping)

[02:35] *** huf left
[02:51] *** yinyin joined
[02:58] *** PZt left
[03:03] *** lue left
[03:08] *** am0c left
[03:09] *** kfo joined
[03:12] *** kfo_ left
[03:17] <dalek> niecza: d39d163 | sorear++ | src/NieczaPass (2 files):

[03:17] <dalek> niecza: Avoid generating symbols for has methods in void context

[03:17] <dalek> niecza: review: https://github.com/sorear/niecza/commit/d39d163a3c

[03:25] *** am0c joined
[03:27] *** PZt joined
[03:32] *** agentzh joined
[03:49] *** araujo left
[03:53] *** dukeleto left
[03:53] *** dukeleto joined
[03:57] *** colomon left
[04:10] <dalek> niecza: 583d03b | sorear++ | lib/ (2 files):

[04:10] <dalek> niecza: Eliminate top-level protosub fields, they do not pull their weight

[04:10] <dalek> niecza: review: https://github.com/sorear/niecza/commit/583d03b658

[04:10] <dalek> niecza: 7febed1 | sorear++ | lib/CLRBackend.cs:

[04:10] <dalek> niecza: Coalesce identical constants

[04:10] <dalek> niecza: review: https://github.com/sorear/niecza/commit/7febed1f89

[04:17] *** satyavvd joined
[04:34] *** pernatiy_ left
[04:45] <dalek> niecza: 481e8ca | sorear++ | lib/ (2 files):

[04:45] <dalek> niecza: Use a denser coding of strings, also coalesce them

[04:45] <dalek> niecza: review: https://github.com/sorear/niecza/commit/481e8ca396

[04:51] *** _jaldhar left
[04:51] *** _jaldhar joined
[04:53] *** jaldhar_ joined
[04:54] *** _jaldhar left
[04:56] *** jaldhar_ left
[04:57] *** jaldhar_ joined
[05:08] *** _jaldhar_ joined
[05:08] *** jaldhar_ left
[05:09] *** fhelmberger joined
[05:16] *** yinyin left
[05:22] *** birdwindupbird joined
[05:23] *** _jaldhar_ left
[05:24] *** _jaldhar_ joined
[05:29] *** koban joined
[05:35] *** pamera joined
[05:36] *** Eevee left
[05:38] *** Eevee joined
[05:43] <moritz> tadzik++ # gsoc blog post

[05:50] *** wtw joined
[05:53] *** jaldhar joined
[05:53] *** _jaldhar_ left
[05:57] *** _jaldhar joined
[05:58] *** jaldhar left
[06:03] *** pernatiy joined
[06:07] <dalek> niecza: 280737c | sorear++ | lib/ (2 files):

[06:07] <dalek> niecza: Generate class member info as blobs

[06:07] <dalek> niecza: review: https://github.com/sorear/niecza/commit/280737c3f8

[06:07] <dalek> niecza: 77f924c | sorear++ | lib/ (2 files):

[06:07] <dalek> niecza: Move more of the sub2 logic into LoadSubInfo

[06:07] <dalek> niecza: review: https://github.com/sorear/niecza/commit/77f924cd4b

[06:08] *** _jaldhar left
[06:10] *** amkrankruleuen left
[06:10] *** _jaldhar joined
[06:13] *** kaare_ joined
[06:15] *** amkrankruleuen joined
[06:19] *** _jaldhar left
[06:21] *** _jaldhar joined
[06:30] *** wamba joined
[06:46] *** mj41 joined
[06:51] *** amkrankruleuen left
[06:52] *** amkrankruleuen joined
[07:00] *** amkrankruleuen left
[07:01] *** amkrankruleuen joined
[07:07] <sorear> I wish zip -r wouldn't include vim swap files

[07:09] <sorear> nice, niecza --help goes from 5.1s to 2.5s after rebooting it with the current improvements

[07:09] <benabik> sorear: That's why I like git-archive and generally include a Makefile recipe to include any build products I need.

[07:09] <sorear> well, I'm making a zip of generated files mostly

[07:10] * sorear wonders if it still makes sense to use zip

[07:10] <benabik> sorear: Ah.  Less useful then, although that is the reason I use git-archive.  :-D

[07:22] *** Mowah joined
[07:27] *** amkrankruleuen left
[07:28] *** amkrankruleuen joined
[07:35] *** SHODAN joined
[07:36] *** timbunce joined
[07:36] *** timbunce left
[07:41] <dalek> niecza: f3e0436 | sorear++ | / (3 files):

[07:41] <dalek> niecza: Simplify handling of alternation metadata

[07:41] <dalek> niecza: review: https://github.com/sorear/niecza/commit/f3e0436694

[07:41] *** amkrankruleuen left
[07:44] *** amkrankruleuen joined
[08:05] *** domidumont joined
[08:16] *** huf joined
[08:22] *** dakkar joined
[08:31] <dalek> niecza: ea4bffe | sorear++ | lib/ (2 files):

[08:31] <dalek> niecza: First foray into a true constant pool

[08:31] <dalek> niecza: review: https://github.com/sorear/niecza/commit/ea4bffe31f

[08:31] <dalek> niecza: ad0859a | sorear++ | lib/ (2 files):

[08:31] <dalek> niecza: Extend pooling to CC[] and AltInfo

[08:31] <dalek> niecza: review: https://github.com/sorear/niecza/commit/ad0859af36

[08:32] *** pamera left
[08:33] *** cognominal left
[08:40] *** amkrankruleuen left
[08:46] *** amkrankruleuen joined
[08:49] *** Jon_Doe joined
[08:49] *** daniel-s joined
[08:53] <Jon_Doe> perl6: say 3

[08:53] <p6eval> pugs, rakudo 30ebf7, niecza v5-56-gf3e0436: OUTPUT«3␤»

[08:53] <Jon_Doe> lolwut.

[08:54] *** Jon_Doe left
[08:54] <tadzik> pff

[08:57] *** icwiener joined
[09:11] *** nymacro joined
[09:18] <dalek> niecza: 60b2044 | sorear++ | lib/ (2 files):

[09:18] <dalek> niecza: And now user variables get pooling too

[09:18] <dalek> niecza: review: https://github.com/sorear/niecza/commit/60b2044dad

[09:18] <dalek> niecza: 50b1205 | sorear++ | lib/ (2 files):

[09:18] <dalek> niecza: Finish converting all types of constants to the pool system

[09:18] <dalek> niecza: review: https://github.com/sorear/niecza/commit/50b120514f

[09:25] * sorear out

[09:25] <sorear> STD.dll is under 2MB now \o/

[09:37] *** PacoLinux left
[09:41] *** tzhs joined
[09:46] *** amkrankruleuen left
[09:47] *** amkrankruleuen joined
[09:49] *** amkrankruleuen left
[09:49] *** amkrankruleuen joined
[09:54] *** tzhs left
[09:59] *** wamba left
[10:02] *** noganex left
[10:03] *** noganex joined
[10:05] *** amkrankruleuen left
[10:07] *** wamba joined
[10:09] *** Moukeddar joined
[10:09] <Moukeddar> hello Perl9

[10:09] <Moukeddar> 6*

[10:10] *** Moukeddar left
[10:11] *** amkrankruleuen joined
[10:12] *** pernatiy left
[10:12] <jdhore1> Can I ask a really quick P5 question?

[10:14] <daniel-s> jdhore1, well, there is #perl

[10:14] <daniel-s> but also

[10:14] <daniel-s> this place seems kinda quiet, so I don't think there's anyone to tell you off, even if you were doing something wrong by asking

[10:15] <jdhore1> Well...what's the best way to check if something isn't undef? (i'm having a brainfart)... if ($variable) {} ?

[10:16] <huf> defined 

[10:17] <huf> if (defined $foo) { ...

[10:17] *** amkrankruleuen left
[10:17] <jdhore1> huf, for Perl 5?

[10:18] <huf> yes, isnt that what you were asking?

[10:18] <jdhore1> Yeah, I was just making sure

[10:18] <daniel-s> in perl6, would it be if $variable.defined ?

[10:18] <daniel-s> cos now it's got a method

[10:22] *** amkrankruleuen joined
[10:28] <jdhore1> Thanks guys

[10:28] <jdhore1> It's 6:30AM (nearly) and i haven't been to bead yet so i'm a bit tired

[10:33] *** snearch joined
[10:35] *** daniel-s left
[10:37] *** amkrankruleuen left
[10:48] *** amkrankruleuen joined
[10:57] *** awoodland joined
[11:02] *** Psyche^ joined
[11:06] *** Patterner left
[11:06] *** Psyche^ is now known as Patterner

[11:08] *** agentzh left
[11:20] *** MayDaniel joined
[11:24] *** jfried joined
[11:26] *** donri joined
[11:31] *** pernatiy joined
[11:39] *** MayDaniel left
[11:41] *** tzhs joined
[11:41] *** SHODAN left
[11:42] *** donri left
[11:43] *** pamera joined
[11:45] *** mtk left
[11:45] *** tzhs left
[11:47] *** amkrankruleuen left
[11:48] *** amkrankruleuen joined
[11:48] *** yves_ left
[11:52] *** wamba left
[11:53] *** mtk joined
[12:00] *** yves joined
[12:15] *** snearch left
[12:15] *** awoodland left
[12:17] *** bacek left
[12:19] *** colomon joined
[12:22] *** bluescreen10 joined
[12:23] *** satyavvd left
[12:37] *** hanekomu joined
[12:44] *** pernatiy left
[12:47] *** SHODAN joined
[12:53] *** amkrankruleuen left
[12:54] *** Holy_Cow joined
[12:55] *** Holy_Cow left
[12:55] *** wamba joined
[12:56] *** amkrankruleuen joined
[13:02] *** donri joined
[13:03] *** wamba left
[13:05] *** daniel-s joined
[13:08] *** amkrankruleuen left
[13:13] *** amkrankruleuen joined
[13:41] *** hercynium left
[13:52] *** pernatiy joined
[14:01] <sorear> daniel-s: the sub form still exists (and is substantially faster on niecza)

[14:01] <sorear> good * #perl6

[14:05] *** PacoLinux joined
[14:05] *** wknight8111 joined
[14:19] <sorear> hello jdhore1.

[14:20] *** satyavvd joined
[14:22] *** domidumont left
[14:23] *** hercynium joined
[14:23] *** hercynium left
[14:23] *** hercynium joined
[14:25] *** wtw left
[14:26] *** nymacro left
[14:27] *** jevin left
[14:30] *** jrockway left
[14:30] <dalek> niecza: 69332cd | sorear++ | lib/CORE.setting:

[14:30] <dalek> niecza: Fix * smartmatch behavior

[14:30] <dalek> niecza: review: https://github.com/sorear/niecza/commit/69332cd953

[14:31] *** jrockway joined
[14:32] *** jevin joined
[14:33] *** alester joined
[14:45] *** jerome left
[14:49] *** jerome joined
[14:51] *** jrockway left
[14:52] *** jevin left
[14:53] *** jrockway joined
[14:53] *** jevin joined
[14:54] *** am0c left
[14:58] *** thou joined
[15:00] *** koban left
[15:00] *** SHODAN left
[15:01] *** araujo joined
[15:03] *** daniel-s left
[15:03] *** domidumont joined
[15:04] *** noganex_ joined
[15:04] *** noganex left
[15:07] *** am0c joined
[15:09] *** huf left
[15:10] *** thou left
[15:11] *** orafu left
[15:11] *** ymasory joined
[15:12] *** orafu joined
[15:24] *** wamba joined
[15:28] *** rindolf joined
[15:28] <rindolf> Hi all.

[15:29] <colomon> o/

[15:29] *** cognominal_ joined
[15:32] *** Sarten-X joined
[15:46] *** kjeldahl joined
[15:51] *** kensanata joined
[16:01] <jnthn> evening, #perl6

[16:02] <dalek> specs: 74b208c | larry++ | S06-routines.pod:

[16:02] <dalek> specs: don't include positional names in API

[16:02] <dalek> specs: 

[16:02] <dalek> specs: As suggested by masak++ and jnthn++, remove the names of positionals

[16:02] <dalek> specs: from the public API.

[16:02] <dalek> specs: 

[16:02] <dalek> specs: In its place, substitute the more useful ability to treat positionals

[16:02] <dalek> specs: as if they were named by the use of *numeric* keys.  That is, move the

[16:02] <dalek> specs: ability to name positionals out of the binder and into the coercion

[16:02] <dalek> specs: from hash to capture.  This answers the three objections to named positionals:

[16:02] <dalek> specs:     * The positions of the positionals are already part of the public API.

[16:02] <dalek> specs:     * This has no run-time overhead (unless you force this coercion to happen

[16:02] <dalek> specs: 	at run time, using prefix:<|> for instance).

[16:02] <dalek> specs:     * People will use this because many external formats do not support captures.

[16:02] <dalek> specs: review: https://github.com/perl6/specs/commit/74b208c3d7

[16:03] *** thou joined
[16:04] <jnthn> \o/

[16:04] <jnthn> (walks by the neva)++

[16:05] *** ymasory left
[16:05] <rindolf> Hi jnthn 

[16:05] *** satyavvd left
[16:05] <jnthn> o/ rindolf 

[16:08] <rindolf> jnthn: what's up?

[16:10] <jnthn> rindolf: Not much...just getting back to dayjob after a vacation in Russia. :)

[16:10] <jnthn> Well, vacation and YAPC. :)

[16:10] <rindolf> jnthn: ah.

[16:10] <rindolf> jnthn: YAPC?

[16:10] <jnthn> YAPC::Russia

[16:21] *** jfried left
[16:28] *** birdwindupbird left
[16:32] *** cdarroch joined
[16:32] *** cdarroch left
[16:32] *** cdarroch joined
[16:34] *** satyavvd joined
[16:37] <colomon> woah, that's a biggish change, no?

[16:37] <colomon> 74b208c3d7dc6bc3fb913be3376492e2d72733f6, I mean

[16:38] <colomon> if nothing else, I foresee a good number of spectests needing to be fixed

[16:46] *** satyavvd left
[16:48] <TimToady> yes, it was up there on the Richter scale

[16:49] <TimToady> but at this point in Perl 6's life, it's always better to fix something sooner rather than later

[16:49] <colomon> Still, TimToady++ -- both for seeing it was the right thing to do and being willing to take the pain of doing it.

[16:49] *** wamba left
[16:52] <colomon> Though I'm doubting you will handle fixing all the spectests yourself.  ;)

[16:57] *** mj41 left
[17:00] * TimToady has learned to delegate anything that I can cajole other people into doing as well as I would do it...

[17:00] *** pernatiy left
[17:01] *** rindolf left
[17:03] <colomon> jnthn: how hard would it be to implement that change in current Rakudo?  (Maybe as a branch?)  A lot easier to fix  spectests with a "working" compiler to test them on.

[17:06] *** sftp left
[17:07] *** dakkar left
[17:08] *** wamba joined
[17:09] *** hanekomu left
[17:11] *** kensanata left
[17:16] *** wamba left
[17:16] *** snearch joined
[17:16] *** wamba joined
[17:36] *** am0c left
[17:38] <dalek> rakudo/nom: 8cdd3e9 | jnthn++ | src/ (3 files):

[17:38] <dalek> rakudo/nom: Remove named to positional paramter binding.

[17:38] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/8cdd3e9460

[17:41] <colomon> jnthn++

[17:45] *** Eevee left
[17:46] *** sftp joined
[17:49] *** am0c joined
[17:57] <moritz> oh hai

[17:57] * moritz feels he missed something big-ish :-)

[17:58] <colomon> you can't refer to positional arguments by name anymore.  (external to the function, that is)

[17:59] <colomon> (NYI ... er ... NY unimplemented? in Rakudo, natch.)

[18:03] *** Eevee joined
[18:03] *** Chillance joined
[18:10] <dalek> roast: 87efb8a | moritz++ | S32-array/ (10 files):

[18:10] <dalek> roast: [S32-array] unfossile tests. Most of that is calling positional arguments by name

[18:10] <dalek> roast: review: https://github.com/perl6/roast/commit/87efb8a182

[18:17] *** awoodland joined
[18:17] *** arnsholt left
[18:17] *** arnsholt_ joined
[18:18] *** fhelmberger left
[18:19] *** mberends joined
[18:19] <tadzik> neh, a test passes on gsocmess, fails on Rakudo

[18:20] <tadzik> I'm one spectest from gsoc-podparser passing the spectests :)

[18:20] <mberends> tadzik: nice :)

[18:21] <tadzik> mberends: have you seen the latest blag toast?

[18:21] <tadzik> rakudo: say '=' ~~ /\w/

[18:21] <mberends> tadzik: yes, where you almost finished weeks 1 and 2 during week 0 ;)

[18:21] <p6eval> rakudo 30ebf7: OUTPUT«␤»

[18:22] <tadzik> mberends: I was close to being a hipster cat: http://memegenerator.net/instance/7912124 ;)

[18:22] *** ymasory joined
[18:23] *** PacoLinux left
[18:23] <tadzik> I still have some dunnos though, turns out that $=POD variable, scheduled for some deep august I think, needs to be available now, or some substitute of it

[18:23] *** PacoLinux joined
[18:23] <mberends> tadzik: that site looks like potentially too much information...

[18:26] <tadzik> :P

[18:27] <tadzik> that's the weird region of the internet

[18:27] *** orafu left
[18:35] *** kaare_ left
[18:35] *** wamba left
[18:39] <dalek> roast: c5fa27b | moritz++ | S32- (13 files):

[18:39] <dalek> roast: [S32] remove more tests for now-gone calling-positionals-by-named tests

[18:39] <dalek> roast: review: https://github.com/perl6/roast/commit/c5fa27b821

[18:39] <dalek> roast: 19614fb | moritz++ | S32- (14 files):

[18:39] <dalek> roast: [S32] unfossile more tests

[18:39] <dalek> roast: review: https://github.com/perl6/roast/commit/19614fbd80

[18:40] <sorear> colomon: 'deimplemented' would be good

[18:40] * moritz fears his internet will expire in 5 minutes :/

[18:41] <sorear> that's about how soon I'm leaving for my first final

[18:41] <moritz> sorear: I wish you the best of luck

[18:41] <tadzik> sorear: what's that one from?

[18:42] <mberends> good luck sorear

[18:42] *** wamba joined
[18:43] <sorear> colomon: or maybe 'disimplemented'

[18:43] <dalek> roast: 85d2267 | moritz++ | S32-str/ (9 files):

[18:43] <dalek> roast: [S32] more unfossiling

[18:43] <dalek> roast: review: https://github.com/perl6/roast/commit/85d22670cf

[18:44] <sorear> thanks all

[18:44] <colomon> sorear: so NYD either way?  :)

[18:44] <sorear> perl6: sub foo($x) { say $x.perl }; foo(5 => "bar")

[18:44] <p6eval> rakudo 30ebf7, niecza v5-61-g69332cd: OUTPUT«5 => "bar"␤»

[18:44] <p6eval> ..pugs: OUTPUT«(5 => "bar")␤»

[18:45] <sorear> TimToady: is foo("0" => "foo") magic now?

[18:46] *** saaki left
[18:46] <TimToady> I suspect only 0 => is, if the "" overrides the naminess

[18:46] <sorear> TimToady: you just broke the old system for recognizing magic pairs (S06:713)

[18:46] <TimToady> only specced string dwim for the run-time coercion

[18:48] <sorear> TimToady: is \d+ '=>' <term> considered an "autoquoting" pair now?

[18:48] <moritz> oh wow, the hotel wifi had a countdown from 24h... and then it was at 0, and disconnected

[18:48] <dalek> specs: 0140a6f | larry++ | S06-routines.pod:

[18:48] <dalek> specs: fix 0 => $arg naminess

[18:48] <dalek> specs: review: https://github.com/perl6/specs/commit/0140a6f03e

[18:48] <moritz> ... and then I could re-ologin with the exact same login data :-)

[18:49] <tadzik> :)

[18:49] <sorear> TimToady: clarification needed: is it legal to mix types, like foo($x, 0 => $y) ?

[18:49] <moritz> colomon: there are a *lot*

[18:49] <moritz> colomon: ... of tring spectest with :base etc.

[18:49] <moritz> s/tring/trig/

[18:49] <colomon> moritz: oh!  

[18:49] <colomon> let me take care of those.

[18:49] <tadzik> yay, the spectests will run faster!

[18:49] <TimToady> sorear: that would be a positional collision, so should complain

[18:50] <moritz> oh wait, maybe :base is always named

[18:50] <TimToady> (I suspect)

[18:50] <moritz> ... or should be named?

[18:50] <moritz> dunno

[18:50] <sorear> TimToady: in the old system, named arguments bump positionals, like foo($y,$x)

[18:50] <colomon> moritz: $base is positional, but ... making it named might make sense.

[18:50] <tadzik> rakudo: say "   ==> and <==" ~~ / \h* <!before '=' \w> \N+ \n /

[18:50] <TimToady> could argue it the other way too...

[18:50] <p6eval> rakudo 30ebf7: OUTPUT«␤»

[18:50] <tadzik> ...oh?

[18:50] *** mj41 joined
[18:51] <moritz> tadzik: no \n in the string

[18:51] <tadzik> oh sure

[18:51] <tadzik> rakudo: say "   ==> and <==\n" ~~ / \h* <!before '=' \w> \N+ \n /

[18:51] <p6eval> rakudo 30ebf7: OUTPUT«   ==> and <==␤␤»

[18:51] <tadzik> right

[18:51] <tadzik> hrm, exactly the same piece of Pod works in gsocmess repo, fails when I moved the grammar into rakudo and ran the specetsts

[18:51] <tadzik> bleh, spec-tests

[18:52] <sorear> TimToady: when would the syntax foo(1 => ..., 0 => ...) be useful in source code?

[18:52] <moritz> nqp-rx: say("   ==> and <==\n" ~~ / \h* <!before '=' \w> \N+ \n/);

[18:52] <TimToady> sorear: for when a company establishes a stupid guideline that requires it :)

[18:52] <moritz> nqprx: say("   ==> and <==\n" ~~ / \h* <!before '=' \w> \N+ \n/);

[18:52] <p6eval> nqprx: OUTPUT«   ==> and <==␤␤»

[18:53] <TimToady> or for when you really want to say one of the named arguments first

[18:53] <TimToady> for endweight reasons, say

[18:53] <tadzik> phenny: "sztuka dla sztuki"?

[18:53] <phenny> tadzik: "art for art's sake" (pl to en, translate.google.com)

[18:53] <colomon> moritz: if we no longer have named positionals, is there any point in those tests anymore?  those tests are essentially testing that the name is correct, if the non-named tests work then obviously explicit positional tests will work (or the compiler is broken).

[18:53] <tadzik> googletranslate++

[18:54] <sorear> +1 to remove

[18:54] <sorear> TimToady: ok

[18:54] <TimToady> or for a foolish consistency when there are lots of other named args

[18:54] <sorear> TimToady: does Perl 6 require left to right evaluation?

[18:55] <sorear> i.e. can foo(1 => bar(), 0 => baz()) be converted into foo(baz(), bar()); ?

[18:55] <TimToady> I don't think arg separator comma enforces any order

[18:57] <TimToady> though S, might :)

[18:57] <sorear> does that extend fo foo() + bar() \equiv infix:<+>(foo(), bar()) \equiv bar() R+ foo() ?

[18:58] <sorear> S still seems pretty handwavey to me.  Do not grok.

[18:58] <sorear> oops

[18:58] <sorear> I really have to go

[18:58] <TimToady> o/

[19:00] <colomon> oh noez, the Soperatives are on to sorear++

[19:00] *** uniejo joined
[19:00] <TimToady> but in general it seems best to me not to spec order of evaluation except for operators that explicitly promise such

[19:01] *** uniejo left
[19:02] <TimToady> that, and the implicit ordering implied by laziness, but that doesn't mean the "shell" of the lazy list is unevaluated

[19:02] <colomon> TimToady: doesn't that run the risk of making Perl 6 programs evaluate in different ways depending on the compiler you're running it on?

[19:03] <TimToady> that's always the case, if you rely on unspecced semantics :)

[19:03] <colomon> .oO( the agony of side effects )

[19:03] <TimToady> so write in an FP style and you won't have this problem so much :P

[19:05] <TimToady> or make sure of your sequence points if you're relying on non-idempotence

[19:07] <TimToady> maybe we can warn someday about side effects that are forced share a void context

[19:07] <TimToady> *sink

[19:08] *** mberends left
[19:08] <colomon> Do you use S, to make sure of sequence points?

[19:09] * TimToady waves hands in colomon's general direction

[19:09] *** mberends joined
[19:09] <colomon> :p

[19:09] <TimToady> but that's one of the (possibly related) imagined uses of S

[19:23] *** mkramer1 joined
[19:24] *** [Coke] left
[19:25] *** [Coke] joined
[19:28] *** mkramer joined
[19:31] *** mkramer1 left
[19:33] *** [Coke] left
[19:35] *** [Coke] joined
[19:40] <pmichaud> quick note:  commit 0140a6f (0 => $arg naminess)  seems to violate the notion of "avoid special cases"

[19:41] <pmichaud> and the example of   doit :123<now>  looks like it has the potential to be especially confusing

[19:41] <pmichaud> (perhaps make it clear that :123<now> is not a Pair

[19:43] <pmichaud> I'll go back and scan the irclogs to see what prompted the update in the first place... gotta run for now though -- bbl

[19:48] *** Mowah left
[19:52] *** bluescreen10 left
[19:56] *** jevin left
[19:57] *** mberends left
[19:57] *** bluescreen10 joined
[19:58] <tadzik> if somebody didn't break spectest recently, gsoc-podparser would pass the spectests

[19:58] *** mberends joined
[19:58] <tadzik> (was that valid English?)

[19:59] *** _jaldhar left
[20:01] <tylercurtis> tadzik: I think "hadn't broken" instead of "didn't break" would be more correct.

[20:02] <tadzik> that's the same conditional as in "if I had a lot of money I would buy a car", right?

[20:02] <tadzik> That's the only example I remember

[20:02] <tadzik> I always learned through "that feels right" instead of knowing the rules, but that results in situation like "hrm, that sounds wrong"

[20:04] <tadzik> http://nopaste.snit.ch/47164 -- the first one looks like a gsoc-podparser win

[20:06] *** huf joined
[20:07] *** snearch left
[20:08] *** silug left
[20:09] *** saaki joined
[20:17] <dalek> roast: 98727c8 | tadzik++ | S32- (3 files):

[20:17] <dalek> roast: Fix plans

[20:17] <dalek> roast: review: https://github.com/perl6/roast/commit/98727c857e

[20:20] <TimToady> pmichaud: the original discussion was at http://irclog.perlgeek.de/perl6/2011-05-21#i_3781961

[20:22] *** thou left
[20:23] <jnthn> colomon: I don't plan to do anything about it in master, however if anybody wants to then the patch I did in nom should make it relatively obvious what to do.

[20:23] <colomon> how soon is r-nom going to land?  ;)

[20:23] <jnthn> colomon: However the patch can't be applied to master as the binder in nom has changed too much due to the parameter/signature unification.

[20:25] <colomon> jnthn & masak: ooo, nice position paper there.  :)

[20:25] <jnthn> colomon: I'd love to land it for the June release, but it may take a little longer than that. 

[20:25] <jnthn> colomon: June has lots of red days.

[20:25] <jnthn> colomon: Which will be conducive to hacking on nom. :)

[20:26] <colomon> oh, for what's it's worth, I meant "land" in the rakudo-nom is hackable sense, not in the "replaces beta" sense.  

[20:26] <jnthn> oh!

[20:26] <jnthn> Then sooner.

[20:26] <jnthn> :)

[20:27] * TimToady wonders in what sense it's not hackable now...

[20:27] <colomon> TimToady: in my case it was the "cannot be built on OS X" sense, but that may have been fixed by now

[20:28] <tadzik> I think 'hackable' is like 'it builds, and mere mortals can work towards fixing the tests'

[20:28] <colomon> tadzik++

[20:28] <colomon> or fixing its code.

[20:28] <jnthn> TimToady: What tadzik said.

[20:29] <jnthn> I need to put back methods and probably attributes before people can really dig in more :)

[20:29] <colomon> that heady period last year where we had a zillion ng commits each day, because it was easy to hack on and make useful progress very quickly.

[20:30] <jnthn> Right, that's the point I'm aiming at.

[20:30] <tadzik> fun fun fun fun

[20:30] <colomon> fun fun fun fun AND we can help lighten the load on jnthn++

[20:31] <jnthn> :)

[20:32] <jnthn> Hmm...huh. It builds on my laptop and not on my desktop... :/

[20:32] * jnthn wonders whoz up with that

[20:33] <jnthn> tadzik: Does current nom mostly build for you (e.g. up until the setting compilation fail)?

[20:33] <frettled> jnthn: it's obvious that it requires personal warmth and tenderness

[20:33] *** pamera left
[20:34] <jnthn> frettled: Actually I can't use laptops while placed on my lap :)

[20:34] <jnthn> frettled: My eyesight isn't good enough to see the screen properly without doing my back n.

[20:34] <jnthn> *in

[20:34] <Tene> phenny: ask masak whether he ever released his slides from yapc::ru

[20:34] <phenny> Tene: I'll pass that on when masak is around.

[20:34] <Tene> phthanks

[20:35] <moritz> didn't he show a download link in here before the talk?

[20:36] <frettled> jnthn: A not-so-classic case of PICNIC, then

[20:37] <frettled> …though I have a weird image of a severely contorted jnthn, trying to peer closely at a laptop screen in his lap

[20:38] <Tene> moritz: I wasn't watching IRC then

[20:39] <moritz> jnthn: nom build fails with "Illegal option --vmlibs"

[20:39] <Tene> moritz: he did; found it

[20:39] <Tene> thanks

[20:39] <Tene> phenny: tell masak nm; moritz mentioned that you already posted a link

[20:39] <phenny> Tene: I'll pass that on when masak is around.

[20:39] <moritz> jnthn: ...during the step home/moritz/p6/rakudo/parrot_install/bin/nqp --target=pir --output=src/gen/perl6-metamodel.pir --encoding=utf8 \ --vmlibs=perl6_ops src/gen/Metamodel.pm

[20:40] <moritz> does that mean my nqp is too old?

[20:40] <moritz> seems like

[20:41] <moritz> (non-versioned dependencies)--

[20:43] <tadzik> jnthn: mostly build, yes

[20:43] <tadzik> jnthn: depends on how "current" is your current

[20:43] <tadzik> jnthn: I'm now running the spectests on gsoc-podparser, and I'm not going to make my cpu cry even more

[20:44] <tadzik> it's running make spectest for like 5th time today already

[20:44] <moritz> Tene: jnthn asked about nom :-)

[20:44] <tadzik> Tene: he did, I have them

[20:44] <tadzik> (the slides)

[20:44] <tadzik> oh, you already know that

[20:46] <jnthn> moritz: Yes, means nqp is too old.

[20:46] <jnthn> moritz: Feel free to implement the versioning.

[20:46] <Tene> moritz: eh?  what about jnthn?

[20:46] <moritz> Tene: sorry, meant to talk to tadzik

[20:47] <moritz> jnthn: huh, "/perl6 --setting=NULL --target=pir --output=src/gen/CORE.setting.pir src/gen/CORE.setting" spits out PIR to STDOUT

[20:48] <tadzik> moritz: what did you mean?

[20:48] <tadzik> ha, it's official!

[20:48] <tadzik> *drums drums drums*

[20:48] <tadzik> gsoc-podparser passes more spectests than master \o/

[20:49] <moritz> tadzik++

[20:49] * moritz doesn't think coeherent anymore and should really sleep now

[20:49] <moritz> good night

[20:50] <colomon> o/

[20:51] *** ymasory left
[20:52] <tadzik> o/

[20:55] *** thou joined
[20:57] <jnthn> moritz: Yeah, debugging output.

[20:57] <jnthn> moritz: I'll clear it up in a bit.

[21:10] *** hercynium left
[21:17] <dalek> rakudo/nom: e11dd26 | jnthn++ | src/Perl6/SymbolTable.pm:

[21:17] <dalek> rakudo/nom: Make sure we can install symbols that originate from other compilation units in lexicals.

[21:17] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e11dd26ced

[21:17] <dalek> rakudo/nom: 58b566b | jnthn++ | src/Perl6/Grammar.pm:

[21:17] <dalek> rakudo/nom: Allow defining of previously stubbed packages. Also detect illegal redeclarations and whine.

[21:17] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/58b566b68a

[21:17] <dalek> rakudo/nom: 7ab3578 | jnthn++ | src/Perl6/SymbolTable.pm:

[21:17] <dalek> rakudo/nom: Also need to allow composing things from another SC - it shouldn't ever really happen in real code but it does in the bootstrap.

[21:17] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/7ab3578ee2

[21:20] *** ymasory joined
[21:26] <felher> Hey folks. Is there a more explicit way of testing if $some_object is an instance of class X than smart-matching $some_object against X?

[21:26] <tadzik> rakudo: my $a = "foo"; say $a.isa(Str)

[21:26] <p6eval> rakudo 30ebf7: OUTPUT«1␤»

[21:26] <tadzik> rakudo: my $a = "foo"; say $a.isa(Num)

[21:26] <p6eval> rakudo 30ebf7: OUTPUT«0␤»

[21:26] <tadzik> there we go

[21:26] <felher> tadzik: Great. Thnx!

[21:27] <tadzik> you're welcome :)

[21:27] *** wknight8111 left
[21:32] *** icwiener left
[21:35] *** mj41 left
[21:46] <PerlJam> felher: smart matching is not "isa" anyway

[21:48] <felher> PerlJam: Whats the difference between $object ~~ X, where X is a classname and $object.isa(X)?

[21:48] <dalek> rakudo/nom: 45cfbca | jnthn++ | src/Perl6/Metamodel/MultipleInheritance.pm:

[21:48] <dalek> rakudo/nom: Avoid tripping up over containers.

[21:48] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/45cfbcafb9

[21:48] <dalek> rakudo/nom: 403525b | jnthn++ | / (7 files):

[21:48] <dalek> rakudo/nom: Add empty non-stub versions of various classes. We now generate PIR for the setting for the first time (e.g. this resolved the incomplete stubs errors). Sadly, said PIR doesn't actually compile just yet.

[21:48] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/403525bd6f

[21:53] <jnthn> felher: Probably none in terms of results. In master, the .isa is probably faster. In nom, the ~~ will probably be faster.

[21:54] <tadzik> jnthn: why so?

[21:56] <PerlJam> felher: $object ~~ X   is the same as $object.does(X), which is not quite the same semantics as $object.isa(X)  for all X  :)

[21:59] <jnthn> tadzik: ~~ will hit the type check cache which handles the more general notion of acceptance.

[22:00] *** pernatiy joined
[22:02] <felher> PerlJam: Ah, k, thnx. I guess i have to read a bit more about that. :)

[22:04] <felher> jnthn: what is the 'nom'-branch? Is it kind of a 'experimental' branch?

[22:06] <jnthn> felher: It's "next generation" of Rakudo, essentially. New meta-model, much more support for gradual typing, preparing the ground for many future optimizations.

[22:08] <felher> jnthn: Sounds good. :) ty.

[22:09] <dalek> rakudo/nom: 5ee5d8e | jnthn++ | src/ (2 files):

[22:09] <dalek> rakudo/nom: A little more sketching out of how we'll handle lazy magicals.

[22:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5ee5d8e267

[22:09] <dalek> rakudo/nom: 0a91e5b | jnthn++ | src/Perl6/Actions.pm:

[22:09] <dalek> rakudo/nom: Need to load 6model guts. With this, we make it through the build for the first time.

[22:09] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0a91e5b679

[22:11] <tadzik> yay!

[22:12] <tadzik> jnthn: I can't make it through the build

[22:12] <jnthn> tadzik: Aww. Failure mode?

[22:12] <tadzik> http://nopaste.snit.ch/47165

[22:13] <jnthn> Dang, that's what I get on my desktop too

[22:13] <jnthn> Wonder what's different on my laptop...

[22:13] <tadzik> what about a fresh clone?

[22:13] <jnthn> What's on line 1343, ooc?

[22:14] <colomon> perl Configure --gen-nqp  ?

[22:14] <jnthn> ah, repr_bind_attr_str

[22:14] <jnthn> I fixed that in nqp yesterday

[22:15] <jnthn> tadzik: What colomon++ said.

[22:15] <jnthn> wait, though...I did that...

[22:15] <colomon> I was just asking if that was the way to build nom.  :)

[22:16] <jnthn> colomon: Ah

[22:16] <jnthn> colomon: Yes, plus --gen-parrot if you need a Parrot also.

[22:16] <colomon> so like perl Configure --gen-parrot --gen-nqp    ?

[22:16] <jnthn> Yes

[22:16] *** alester left
[22:17] * colomon hits ctrl-C and types that in.

[22:18] *** pernatiy left
[22:18] *** ymasory left
[22:20] <jnthn> colomon: fwiw, I suspect the OSX bug isn't resolved.

[22:20] <colomon> thought I'd try, anyway.

[22:20] <tadzik> jnthn: I think I have nqp installed, but will check

[22:20] <tadzik> jnthn: yes it is

[22:21] <tadzik> oh, but it's not todays

[22:22] *** silug joined
[22:23] <jnthn> hmm...something is odd. 

[22:23] <colomon> oh, great, have to deal with the PCRE bug too.  sigh.

[22:23] <jnthn> oh hmm

[22:24] <colomon> just need to dig out the command-line argument for it.

[22:24] <tadzik> --without-pcre

[22:25] <jnthn> tadzik: oh wtf...somehow --gen-nqp isn't actually getting the latest nqp

[22:26] <jnthn> fixed.

[22:30] <dalek> rakudo/nom: 83a3b57 | jnthn++ | build/gen_nqp.pl:

[22:30] <dalek> rakudo/nom: Fix --gen-nqp.

[22:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/83a3b57fb0

[22:30] <dalek> rakudo/nom: e3e62e5 | jnthn++ | .gitignore:

[22:30] <dalek> rakudo/nom: Update .gitignore.

[22:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/e3e62e5efe

[22:38] *** zorgnax joined
[22:39] <zorgnax> Is there a Perl6 infix calculator example anywhere?

[22:39] *** Chillance left
[22:39] *** ymasory joined
[22:42] <tadzik> well, the Perl 6 executable is one

[22:43] <tadzik> but I'm not aware of any

[22:44] <zorgnax> Maybe Ill make one

[22:44] <zorgnax> I dont see any clear example of one

[22:46] <tadzik> you may want to look around for a Compiler-calculator from some pmichaud's talk

[22:48] *** lumi_ left
[22:49] <jnthn> tadzik: After the --gen-nqp fix, the build seems to be going better on my other machine now :)

[22:49] <tadzik> jnthn: I'm not using --gen-nqp, and updating nqp helped

[22:51] <tadzik> jnthn++ # it compiles!

[22:51] <tadzik> so, where's the LHF? :P

[22:52] <jnthn> tadzik: Add empty Code/Block/Routine/Sub/Method/Signature/Parameter in setting; see the patch where I added Mu/Any/Cool

[22:53] <tadzik> how about all of what you listed? :)

[22:54] <colomon> jnthn: woah.  I get a seg fault now when I build rakudo-nom

[22:54] <sorear> good * #perl6

[22:54] <tadzik> hello sorear 

[22:54] <tadzik> how did the final go, what was it?

[22:54] <colomon> Users/colomon/tools/nom/rakudo/parrot_install/bin/nqp --target=pir --output=src/gen/perl6-grammar.pir --encoding=utf8  src/Perl6/Grammar.pm

[22:54] <colomon> make: *** [Perl6/Grammar.pbc] Segmentation fault

[22:55] <jnthn> colomon: I'm seeing that occasionally too :/

[22:55] <colomon> jnthn: twice in a row for me, suggested cure?

[22:55] <jnthn> colomon: Sadly, none - it needs some time with a debugger, I suspect.

[22:55] <jnthn> colomon: Feel free to try and get a gdb backtrace if you are able to reproduce it reliably.

[22:56] <colomon> trying valgrind now.  :)

[22:57] <sorear> felher: $object ~~ X is actually closer to $object.^does(X)

[22:57] <sorear> tadzik: well.  "english".

[22:58] <sorear> jnthn: has the ~~ changes landed in rakudo/nom yet?

[22:58] <colomon> changes?

[22:58] <tadzik> sorear: isn't english your native language?

[22:58] <sorear> 14:53 < jnthn> felher: Probably none in terms of results. In master, the .isa  is probably faster. In nom, the ~~ will probably be faster.

[22:58] <sorear> 14:59 < jnthn> tadzik: ~~ will hit the type check cache which handles the more  general notion of acceptance.

[22:59] <tadzik> jnthn: http://wklej.org/id/534389/ how is that?

[23:00] <sorear> tadzik: in the US school system, "english" also includes things like analyzing texts and learning how to write papers

[23:00] *** zorgnax left
[23:00] <sorear> tadzik: do they distinguish that from "polski" where you live?

[23:00] <tadzik> that's like Polish in Poland. But here, that usually ends in high school

[23:00] <tadzik> sorear: yeah, it's quite equivalent

[23:01] <tadzik> so, no, they don't distinguish it. But you don't study Polski anymore when studying on the University. Unless you are actually on Polonistyka

[23:02] <jnthn> sorear: I don't even have operators yet. :)

[23:02] <tadzik> phenny: "Polonistyka"?

[23:02] <phenny> tadzik: "Polish Studies" (pl to en, translate.google.com)

[23:02] <tadzik> yeah, whatever

[23:02] <jnthn> tadzik: nearly; you_are_here should come last.

[23:02] <colomon> jnthn: valgrinding now for real.  :)

[23:03] <tadzik> jnthn: alright

[23:04] <tadzik> jnthn: so once attributes and methods land, we could start filling those in?

[23:04] <felher> sorear: yeah, thnx.  But i sure have to read http://perlcabal.org/syn/S12.html to understand what .^does means and what those meta-objects are.

[23:04] <jnthn> tadzik: Yeah. Those are next on the nommap.

[23:04] <tadzik> supercool

[23:04] <felher> But not today. good night, folks.

[23:05] <colomon> o/

[23:05] <tadzik> g'night felher 

[23:07] <dalek> rakudo/nom: 4c68206 | tadzik++ | / (8 files):

[23:07] <dalek> rakudo/nom: Add some new (empty) classes to CORE.setting

[23:07] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4c68206635

[23:08] <jnthn> tadzik: Thanks. :)

[23:08] *** thou left
[23:09] <tadzik> thanks too :)

[23:09] *** mtk left
[23:10] *** Woody2143 left
[23:10] <tadzik> should I also add everything else, like Rat, Complex, IO etc?

[23:11] <tadzik> not sure if there's really a point in that :)

[23:11] <jnthn> tadzik: Yeah, not that much point yet.

[23:12] <dalek> rakudo/nom: 0f60ad2 | jnthn++ | src/Perl6/ModuleLoader.pm:

[23:12] <dalek> rakudo/nom: Make setting's use Perl6::Metamodel function.

[23:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0f60ad2d52

[23:12] <dalek> rakudo/nom: 3eae147 | jnthn++ | src/Perl6/Actions.pm:

[23:12] <dalek> rakudo/nom: Fix package compilation up a bit.

[23:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/3eae147a61

[23:12] <dalek> rakudo/nom: dff1ae8 | jnthn++ | src/Perl6/Actions.pm:

[23:12] <dalek> rakudo/nom: Toss incorrect CHECK-time. Also, get us closer to actual being able to run something.

[23:12] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/dff1ae8461

[23:12] *** lumi_ joined
[23:13] *** Woody2143 joined
[23:14] <jnthn> Oops, gotta teach in the morning

[23:14] <jnthn> sleep &

[23:17] *** _jaldhar joined
[23:17] <tadzik> g'night

[23:18] <colomon> arrrrgh.  I think it worked fine under valgrind.

[23:18] *** mtk joined
[23:21] *** daniel-s joined
[23:22] *** wamba left
[23:25] <sorear> pmichaud: ping

[23:26] <sorear> daniel-s: hi

[23:26] <daniel-s> hey

[23:26] * daniel-s is cold

[23:26] * sorear hugs

[23:27] * PerlJam resists the urge to shout "hug pile!"

[23:27] <daniel-s> lol

[23:27] <daniel-s> google says it's 12C outside

[23:27] <tadzik> is the game "grenade" known to you? It was quite popular back in the scouting dys

[23:27] <daniel-s> ...google exaggerates

[23:28] <tadzik> daniel-s: that's so nerdy. You could open the window

[23:28] <sorear> Where I live, it's never even 1 C outside.

[23:28] <sorear> :/

[23:29] <daniel-s> tadzik, and look outside? perish the thought! I might get a ray of sunlight on my skin or even breath fresh air

[23:29] <tadzik> ;)

[23:29] <sorear> just get a cheap thermometer

[23:29] <sorear> the kind with a bimetallic coil and a needle need no batteries and are pretty much indestructable

[23:29] <tadzik> heh, I've worn a long pants for the first time in a week today, and I was boiling

[23:30] <PerlJam> It's 31C where I am ... and that's cool for this time of the year.

[23:31] *** awoodland left
[23:31] <colomon> 22C here, and that's about normal, though it's disturbingly humid

[23:34] *** ymasory left
[23:34] <colomon> got a core dump, anyway...

[23:35] <tadzik> I like it when I use valgrind to catch a segfault, and valgrind survives the segfault

[23:36] <sorear> 62 outside, but I live in backwardland where the degrees are smaller

[23:36] <colomon> backwardland++

[23:37] <PerlJam> sorear: Just check the thing that displays temperature in celcius and you're good to go  ;)

[23:37] <colomon> I asked google to translate to C for me.  :)

[23:38] <colomon> https://gist.github.com/987868 is my backtrace (nom crash)

[23:38] <sorear> PerlJam: the bimetallic coil thermometer outside is only marked in F.

[23:38] <sorear> also, I think it's at least as old as I am.

[23:39] *** yegor joined
[23:41] *** whiteknight joined
[23:46] *** yegor left
[23:48] <sorear> phenny: tell pmichaud How hard do you intend to fight 1 => $foo ?  I'd rather not be implementing it if it will go away soon.

[23:48] <phenny> sorear: I'll pass that on when pmichaud is around.

[23:49] <TimToady> surely it's how hard pmichaud++ fights relative to how hard /me fights... :)

[23:54] <PerlJam> What's wrong with 1 => $foo   ?

[23:55] <sorear> PerlJam: http://irclog.perlgeek.de/perl6/2011-05-23#i_3791367

