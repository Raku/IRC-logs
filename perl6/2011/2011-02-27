[00:10] *** molaf__ joined
[00:14] *** molaf_ left
[00:34] *** stifynsemons left
[00:38] *** alester joined
[00:39] *** nymacro joined
[00:43] *** nymacro left
[00:53] *** justatheory joined
[00:57] *** nymacro joined
[01:07] *** nymacro left
[01:15] *** Woody4286 left
[01:28] *** nymacro joined
[01:28] *** Woody4286 joined
[01:28] *** dorlamm joined
[01:45] *** masonkramer left
[01:46] *** masonkramer joined
[02:01] *** flatwhatson_ left
[02:01] *** noganex joined
[02:04] *** dorlamm left
[02:04] *** noganex_ left
[02:19] *** mtk left
[02:28] *** mtk joined
[02:33] *** stifynsemons joined
[02:36] *** donri left
[02:40] *** risou joined
[02:41] *** Rotwang left
[02:45] *** envi left
[02:49] *** stifynsemons left
[02:50] *** stifynsemons joined
[03:13] *** hatseflats left
[03:15] *** stifynsemons left
[03:18] *** coldhead` is now known as coldhead

[03:19] *** xinming_ is now known as xinming

[03:22] *** JimmyZ joined
[03:26] *** whiteknight left
[03:33] *** stifynsemons joined
[03:55] *** rdesfo joined
[04:23] *** Chillance left
[04:23] *** Su-Shee_ joined
[04:27] *** Su-Shee left
[04:29] *** ColloquyUser joined
[04:38] *** nadim__ left
[04:39] *** nadim__ joined
[04:53] *** ColloquyUser left
[04:58] *** _twitch joined
[04:58] *** larsen left
[05:03] *** larsen joined
[05:03] *** simcop2387 left
[05:04] *** rdesfo left
[05:04] *** chocolaate-maan joined
[05:04] *** chocolaate-maan left
[05:05] *** simcop2387 joined
[05:40] <sorear> good * #perl6

[05:43] *** jaldhar left
[05:43] *** jaldhar joined
[05:47] *** alester left
[05:48] *** alester joined
[05:52] *** alester left
[05:53] *** satyavvd joined
[05:56] *** satyavvd_ joined
[05:58] *** satyavvd left
[06:05] *** stifynsemons left
[06:07] *** stifynsemons joined
[06:09] *** alester joined
[06:09] *** alester left
[06:10] *** stifynsemons left
[06:15] *** Bzek left
[06:16] *** Bzek joined
[06:32] *** satyavvd_ left
[06:35] *** satyavvd joined
[06:40] *** JimmyZ left
[06:40] *** Trashlord left
[06:40] *** barika left
[06:45] *** Trashlord joined
[06:46] *** JimmyZ joined
[06:46] *** barika joined
[06:55] *** coldhead left
[06:58] <[Coke]> Note that the new GC is only temporarily the default.

[06:59] <[Coke]> it will likely be reverted back for the release.

[06:59] <[Coke]> (so explicitly choosing it is not a bad thing.)

[07:07] *** pumphaus left
[07:07] *** risou left
[07:07] *** risou joined
[07:07] *** pumphaus joined
[07:12] *** JimmyZ left
[07:23] *** chocolaate-maan joined
[07:23] *** chocolaate-maan left
[07:35] *** SAABV4M joined
[07:41] *** nymacro left
[07:44] *** nymacro joined
[07:49] *** f00li5h joined
[08:03] *** justatheory left
[08:25] *** wooden left
[08:30] *** _twitch left
[08:38] <moritz_> sorear: fwiw masak also thinks that we need to steal things back from Moose

[08:38] <moritz_> sorear: and I agree... the current object creation and initialization feels crufty

[08:51] *** Mowah joined
[08:56] *** woosley joined
[08:57] *** satyavvd left
[09:04] *** satyavvd joined
[09:17] *** colomon_ joined
[09:17] *** colomon left
[09:17] *** colomon_ is now known as colomon

[09:18] *** ggoebel joined
[09:49] *** _dev0_ left
[09:59] *** sunnavy left
[09:59] *** pothos left
[10:00] *** pothos joined
[10:00] *** sunnavy joined
[10:06] *** envi joined
[10:08] *** hatseflats joined
[10:10] *** cschimm1 joined
[10:11] *** cschimm1_ left
[10:16] *** sunnavy left
[10:18] *** sunnavy joined
[10:23] *** sji joined
[10:25] *** Su-Shee_ is now known as Su-Shee

[10:28] *** _twitch joined
[10:42] <tadzik> moritz_: could someone provoke a discussion on p6l?

[10:43] *** pmurias joined
[10:47] <pmurias> hi

[10:48] <pmurias> tadzik: can't you provoke the discussion?

[10:49] <moritz_> tadzik: about what?

[10:49] <tadzik> well, probably. I just thought it'd be a bigger hit if started by someone from the inside

[10:49] <moritz_> your are from the inside

[10:49] <tadzik> moritz_: about "we're not as usable as Moose"

[10:49] <tadzik> not from the p6l circles

[10:49] <moritz_> and p6l picks up nearly every discussion :-)

[10:50] <tadzik> ;)

[10:50] <tadzik> oh well, I wanted to subscribe anyway

[10:50] <tadzik> mind if I refer to you in the post? moritz_, sorear 

[10:55] *** flatwhatson_ joined
[10:56] <moritz_> tadzik: I don't mind at all... I just think we should have concrete things to say

[10:56] <moritz_> where exactly Moose is more usable

[10:57] <moritz_> for example I like the BUILDARGS things

[10:57] <moritz_> not sure what masak-san thinks

[10:57] <tadzik> it fiils weird that there is DESTROY: the easy way to do stuff when the object dies, but there is *no* easy way to do stuff when it comes to life

[10:59] <moritz_> well, there is... in theory

[10:59] <moritz_> I don't quite understand the interaction BUILD and automatic attribute initialization

[10:59] <tadzik> in which one?

[10:59] <moritz_> but I feel it should be BUILD

[10:59] <tadzik> we can write new(), when we have to bless ourselves, or BUILD, when we have to set the parameters ourselves

[11:00] <moritz_> maybe a solution would be to have a BUILD to which we can redispatch to get the attribute initilization

[11:01] <moritz_> ie you can say submethod BUILD(*%args) { nextwith |%args, b => 3 }  or so

[11:01] <tadzik> how would it look like? I don't quite get the idea

[11:01] <moritz_> but I don't know how redispatching interacts with submethods

[11:02] *** Rotwang joined
[11:02] *** cognominal_ left
[11:03] <tadzik> so the Perl6 BUILD is actually Moose's BUILDARGS, and there is nothing like Moose's BUILD

[11:03] <moritz_> or maybe the solution is to present a more hash-like interface to the object at some point

[11:04] <moritz_> no, Perl 6 .new corresponds most closely to Moose's BUILDARGS

[11:04] <moritz_> it's what you use to change the signature of the .new call

[11:04] <moritz_> for example to allow positional arguments to .new

[11:04] <tadzik> mhm

[11:05] <tadzik> righd

[11:05] <moritz_> hugme: add dwhipp to perl6

[11:05] * hugme hugs dwhipp. Welcome to the perl6 github organization

[11:08] <tadzik> btw, how deep diving to the metamodel implementation (or somewhere lese?) is needed to fix the DESTROY in Rakudo?

[11:09] <moritz_> tadzik: dunno if parrot provides a method that's triggered by the GC

[11:09] <moritz_> another thing to consider is multi inheritance

[11:09] <moritz_> if the parents do too much logic in their .new methods, you need to call those, even though you maybe want to construct the object yourself

[11:09] <moritz_> that just calls for trouble

[11:22] *** orafu left
[11:25] *** mberends left
[11:25] *** orafu joined
[11:25] *** mberends joined
[11:30] <tadzik> moritz_: but filehandles are being closed somehow, yes? Or that's the Parrot thing too?

[11:30] <dalek> tpfwiki: (Byron Voights)++ | http://www.perlfoundation.org/perl6/index.cgi?usmap

[11:51] <moritz_> tadzik: they should be. Currently they aren't

[11:53] <tadzik> huh

[11:56] <pmurias> moritz_: how do i run all the nieczas tests?

[11:57] <dalek> niecza: 78147ba | pmurias++ | / (2 files):

[11:57] <dalek> niecza: [cl-backend] hack around xspan and disable the beta reduction pass

[11:57] <dalek> niecza: review: https://github.com/sorear/niecza/commit/78147ba2fd

[12:02] <tadzik> whoa, that was fun

[12:02] <tadzik> http://nopaste.snit.ch/34387

[12:03] <jnthn> o/, #perl6

[12:03] <phenny> jnthn: 23 Feb 00:21Z <Tene> ask jnthn if I should expect to need to write my own repr for cardinal, or if I should be able to get by on P6opaque at first.

[12:03] <phenny> jnthn: 24 Feb 03:23Z <Tene> ask jnthn when he expects to have time available to talk to me about cardinal metamodel on 6model.

[12:03] <tadzik> jnthn: \o

[12:03] <mberends> o/ jnthn

[12:04] <tadzik> doesn't work for parent classes, but it's an ugly hack anyway :)

[12:05] <jnthn> phenny: Tell Tene was mostly offline the last few days. Will be about and have time a lot more this week, on evenings especially. 

[12:05] <jnthn> phenny: tell Tene was mostly offline the last few days. Will be about and have time a lot more this week, on evenings especially. 

[12:05] <phenny> jnthn: I'll pass that on when Tene is around.

[12:07] <jnthn> phenny: tell Tene you may well be able to make do with P6opaque for a while or maybe even for good - it all hinges on how attribute access works in Ruby, which I don't know about (yet). :-)

[12:07] <phenny> jnthn: I'll pass that on when Tene is around.

[12:11] <moritz_> \o

[12:14] <moritz_> tadzik: huh, what triggers method AFTERPARTY?

[12:14] <tadzik> moritz_: my 4-line patch to Mu.pir :>

[12:17] <colomon> jnthn!  \o/

[12:21] * jnthn wonders how much happened while he was away for a few days :)

[12:22] <tadzik> we rewrote 6model in PHP while you weren't looking

[12:23] <jnthn> So now it's all like SixModel\REPR\PHPOpaque and stuff? :-)

[12:24] <tadzik> no no, we needed to escape those backslashes

[12:24] <tadzik> so that's SixModel\\\REPR\\\PHPOpaque

[12:24] <tadzik> you know, longer code = better readability :)

[12:24] <jnthn> Well, in that case we should do a Visual Basic port too... :P

[12:25] *** am0c^ joined
[12:25] <moritz_> it's actaully SixModelBACKSLAHREPRBACKSLAHPHPOpaque, because all those \ were just line noise

[12:25] <tadzik> yeah, symbols in code suck

[12:25] <jnthn> moritz_: I can't wait to see the code that parses that :P

[12:26] <tadzik> it actually does s:g/BACKSLASH/ '\' /. Because who will use BACKSLASH in strings or anything anyway?

[12:27] <moritz_> rakudo: say 'SixModelBACKSLAHREPRBACKSLAHPHPOpaque'.split('BACKSLASH').perl

[12:27] <p6eval> rakudo 6cf616: OUTPUT«("SixModelBACKSLAHREPRBACKSLAHPHPOpaque")␤»

[12:27] <tadzik> yeah, typos are hell

[12:28] <tadzik> rakudo: say 'SixModelBACKSLASHREPRBACKSLASHPHPOpaque'.split('BACKSLASH').perl

[12:28] <p6eval> rakudo 6cf616: OUTPUT«("SixModel", "REPR", "PHPOpaque")␤»

[12:29] <tadzik> yeah. The newest Rakudo Weekly Challenges will be „find 10 differences between this two lines of code” :)

[12:30] *** pmurias left
[12:30] <moritz_> jnthn: yesterday night we discussed stealing python string format language for Perl 6

[12:30] <moritz_> jnthn: it's like printf, but also with support for named arguments

[12:30] <tadzik> note that this time it's not a joke

[12:31] <moritz_> %(name)s

[12:32] <moritz_> https://gist.github.com/845617

[12:33] <moritz_> jnthn: oh, and I applied for a Hague grant: http://news.perlfoundation.org/2011/02/hague-grant-application-struct.html please leave your comment

[12:33] <jnthn> moritz_: I don't dislike that idea, though I'm not sure what it buys over interpolation.

[12:38] *** am0c^ left
[12:44] <moritz_> jnthn: I want error objects to contain a format string and additional environment data

[12:44] <moritz_> accessible in a hash-like fashion

[12:45] <moritz_> so the error format strings should be able to use that information, and identify it by name

[12:45] <moritz_> if I'd use interpolation, every error object would need to be a closure

[12:46] <jnthn> moritz_: ah, I see...

[12:48] <moritz_> I mean we could stuff that functionality into the error class too

[12:49] <moritz_> but then people might construct error objects just to get the formatting facility :-)

[12:53] <moritz_> tadzik: could you please check the recent patches to RT, if they are the same as you applied from the pull requests?

[12:55] *** MayDaniel joined
[12:55] *** MayDaniel left
[12:55] *** MayDaniel joined
[12:57] <tadzik> moritz_: how do I find them?

[12:57] <moritz_> tadzik: http://rt.perl.org/rt3/

[12:57] <moritz_> the first three tickets in perl6 queue

[12:58] <tadzik> 52242 53804 and 54804 are the first three ones for me

[12:58] <tadzik> oh, I see some unowned tickets

[12:59] <moritz_> RT #84948, RT #84950 and RT #84966

[12:59] <tadzik> well, two of the pull requests were merged by you, I mangled them a bit after that

[13:00] <moritz_> huh? I didn't touch any of the IO related pull requests

[13:00] <moritz_> ah, masak it was

[13:00] <tadzik> oh, maybe masak

[13:01] <tadzik> the one about smartmatching is still on github I think

[13:01] * tadzik feels like we should be able to go down to 500 open tickets for the next release

[13:02] <dalek> roast: e49ad1b | moritz++ | integration/advent2010-day (2 files):

[13:02] <dalek> roast: [advent] more consistent naming

[13:02] <dalek> roast: review: https://github.com/perl6/roast/commit/e49ad1b73e

[13:03] <jnthn> moritz_: Commented on the grant.

[13:03] <moritz_> jnthn: thanks

[13:07] <tadzik> http://rt.perl.org/rt3/Ticket/Display.html?id=65404 -- isn't that closable?

[13:07] <tadzik> rakudo: package A::B {}; say A::B.perl;

[13:08] <p6eval> rakudo 6cf616: OUTPUT«Method 'perl' not found for non-object␤  in main program body at line 22:/tmp/ulV5z2cH7k␤»

[13:11] <tadzik> http://rt.perl.org/rt3/Ticket/Display.html?id=63760 -- needs a test, LHF

[13:13] *** mtk left
[13:15] * moritz_ assigns the testneeded tag

[13:21] *** whiteknight joined
[13:22] *** mtk joined
[13:30] *** satyavvd left
[13:40] *** tangj joined
[13:41] *** tangj left
[13:41] *** donri joined
[13:45] *** masonkramer left
[13:50] *** JimmyZ joined
[13:54] <JimmyZ> I don't think RT #63760 has fixed. rakudo give the wrong message which doesn't follow std.

[13:58] *** baest joined
[13:59] *** baest_ left
[14:05] *** colomon left
[14:06] *** MayDaniel_ joined
[14:06] *** kaare_ joined
[14:08] *** MayDaniel left
[14:29] *** woosley left
[14:38] *** rdesfo joined
[15:17] <sorear> good * #perl6

[15:18] <moritz_> \o

[15:19] *** nymacro left
[15:20] *** am0c joined
[15:20] <mberends> o/ sorear

[15:21] <JimmyZ> sigh, Test.pm is broken on windows :(

[15:22] <dalek> roast: 57bc8e4 | jimmy++ | S03-operators/identity.t:

[15:22] <dalek> roast: adde tests for RT #84594

[15:22] <dalek> roast: review: https://github.com/perl6/roast/commit/57bc8e443f

[15:22] *** redmorning joined
[15:22] <moritz_> JimmyZ: in what way?

[15:22] <JimmyZ> rindex is NYI :(

[15:23] <JimmyZ> ===SORRY!===

[15:23] <JimmyZ> Unicode rindex not implemented

[15:24] <moritz_> while compiling Test.pm? or using it?

[15:24] <JimmyZ> using it

[15:25] <JimmyZ> ./perl6 roast/S*/*.t

[15:25] <JimmyZ> sigh, site.icu-project.org is blocked by GFW :(

[15:34] <flussence> hmm, that reminds me I wanted to figure out why those 3 tests fail for me...

[15:35] <flussence> (t/spec/S05-mass/properties-derived.rakudo:363-365)

[15:36] <flussence> .u 0855

[15:36] <phenny> U+0855 (No name found)

[15:37] *** rdesfo left
[15:37] <flussence> (sigh... whoever decided gucharmap should sort unicode blocks by name instead of starting codepoint needs the cluebat treatment)

[15:38] <moritz_> flussence: fyi it has the 'All' pseudo block where you can scroll through all of the codepionts

[15:38] <moritz_> but I agree that it should have an option to change the ordering

[15:38] <flussence> yeah, but scrolling to 0x855 when it lists up to 0x1fffff is pretty awkward :)

[15:39] <flussence> (that character is listed as unassigned, those tests should pass, right?)

[15:39] <flussence> well obviously, they should pass, but I don't see why it's broken.

[15:39] <moritz_> uhm, what does the test do?

[15:40] <flussence> tests that it isn't isAlphabetic

[15:40] <moritz_> hmm

[15:41] <flussence> hold on, how is isAlphabetic defined?

[15:41] <flussence> is that using stuff in ICU?

[15:41] <moritz_> probably

[15:42] <flussence> http://en.wikipedia.org/wiki/Mandaic_alphabet

[15:42] <flussence> it's defined in Unicode 6.0

[15:42] <flussence> maybe my icu library's too new? :)

[15:43] <moritz_> IWBN if the test used something that is defined the same way in all Unicode versions

[15:44] <flussence> could use one of the special never-going-to-be-defined codepoints...

[15:44] <moritz_> +1

[15:45] <sorear> tadzik: imo p6l is a bad idea for most stuff.  too much bikeshedding happens there.

[15:46] <flussence> trying to figure out which version of Unicode ICU 4.6 supports. The docs are annoyingly vague...

[15:46] *** stifynsemons joined
[15:46] <moritz_> maybe we should ask the admins to unsubscribe everybody from p6l

[15:46] <flussence> oh, it does support 6.0 after all

[15:46] <moritz_> and then see who cares and re-subscribes :-)

[15:47] <moritz_> (silently unsubscribe, of course :-)

[15:49] <sorear> I'm just going to release ~now, it's Monday in SYD

[15:50] <moritz_> \o/

[15:53] *** JimmyZ left
[16:00] <tadzik> sorear: bikeshedding?

[16:03] <moritz_> tadzik: endlessly arguing about small details (like the color of your bike shed) instead of tackling the actually important questions

[16:04] <tadzik> I see. So what's the way then?

[16:05] <moritz_> discuss it here in the channel, and when you have something that's an improvement, push it to perl6/specs

[16:05] <tadzik> heh. So, who has any BUILD ideas? :)

[16:08] <flussence> everyone ok if I s/0855/297C/ to fix that test? (replacing it with random punctuation)

[16:08] <moritz_> flussence: forgiveness > permission

[16:08] <flussence> good point :)

[16:16] *** Patterner left
[16:18] *** Psyche^ joined
[16:18] *** Psyche^ is now known as Patterner

[16:20] <dalek> roast: ff3b9f6 | (Anthony Parsons)++ | S05-mass/properties-derived.t:

[16:20] <dalek> roast: Fix 3 tests which fail with icu-4.6

[16:20] <dalek> roast: 

[16:20] <dalek> roast: This originally tested that an undefined codepoint matched <!isAlphabetic>, but

[16:20] <dalek> roast: as of Unicode 6.0 it's defined *and* part of an alphabet. Replaced it with a

[16:20] <dalek> roast: defined punctuation codepoint.

[16:20] <dalek> roast: review: https://github.com/perl6/roast/commit/ff3b9f6414

[16:24] *** am0c left
[16:28] <moritz_> flussence++

[16:33] *** masonkramer joined
[16:34] *** rindolf joined
[16:34] <rindolf> Hi all.

[16:36] <flussence> whee, waterbed effect!

[16:36] <flussence> t/spec/S03-operators/identity.rakudo Parse errors: Bad plan.  You planned 45 tests but ran 43.

[16:37] <tadzik> hi rindolf 

[16:38] <rindolf> Hi tadzik 

[16:38] <rindolf> tadzik: what's up?

[16:39] <tadzik> rindolf: just chillin out, notmuch. Did some toying around with new module manager solutions

[16:40] <rindolf> tadzik: ah.

[16:40] <tadzik> thought a bit, hacked a bit, thought a bit, hacked a bit, and eventually ended up with almost exactly what masak has come to with his pls :)

[16:40] <rindolf> tadzik: for Perl 6?

[16:40] <tadzik> rindolf: aye

[16:40] <rindolf> tadzik: OK.

[16:42] <tadzik> neutro didn't scale pretty well. Was nice as a quick, temporary solution, the lack of testability and imperative design became painful over time

[16:52] <jnthn> tadzik: One week until hackathon! \o/

[16:54] *** whiteknight left
[17:08] *** pmurias joined
[17:09] <pmurias> sorear: hi

[17:09] <pmurias> what does xspan do?

[17:09] <sorear> where's dalek :/

[17:09] <sorear> pmurias: like the old span + ehspan

[17:10] *** kanishka joined
[17:13] *** justatheory joined
[17:17] *** kanishka left
[17:18] <dalek> niecza: 2df976d | sorear++ | / (2 files):

[17:18] <dalek> niecza: Update bootstrap for v3

[17:18] <dalek> niecza: review: https://github.com/sorear/niecza/commit/2df976dd48

[17:18] <dalek> niecza: 2b8bb64 | sorear++ | / (2 files):

[17:18] <dalek> niecza: Merge branch 'master' of github.com:sorear/niecza

[17:18] <dalek> niecza: review: https://github.com/sorear/niecza/commit/2b8bb641db

[17:19] <sorear> oh, git push --tags means *only* tags

[17:19] <sorear> fixed.

[17:21] <dalek> nqp/lexical-setting: 8dfba49 | jonathan++ | / (5 files):

[17:21] <dalek> nqp/lexical-setting: Move some files around, in anticipation of splitting out what's setting and what's meta-model.

[17:21] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/8dfba49d78

[17:21] <dalek> nqp/lexical-setting: c8671ad | jonathan++ | / (7 files):

[17:21] <dalek> nqp/lexical-setting: Toss the previous setting directory, having moved parts of it to the core direcotry. Update some our-scoped things to leixcally scoped things. Update build process a little, in preparation for really having this as a lexically outer setting.

[17:21] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/c8671adf23

[17:21] <dalek> nqp/lexical-setting: b62d7bc | jonathan++ | .gitignore:

[17:21] <dalek> nqp/lexical-setting: Update .gitignore.

[17:21] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/b62d7bc9e3

[17:21] <dalek> nqp/lexical-setting: d36ca9c | jonathan++ | / (2 files):

[17:21] <dalek> nqp/lexical-setting: Stub in a --setting= command line argument.

[17:21] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/d36ca9c9f5

[17:21] <dalek> nqp/lexical-setting: 93dc13f | jonathan++ | / (3 files):

[17:21] <dalek> nqp/lexical-setting: Re-work the build and bootstrap process to fit the new role of the setting. Since it'll be the outer lexical scope of programs, it needs to be built like the rest of the various bootstrapped bits, not just sa if it's a module.

[17:21] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/93dc13f3ae

[17:21] <dalek> nqp/lexical-setting: 5be7a2c | jonathan++ | .gitignore:

[17:21] <dalek> nqp/lexical-setting: Update .gitignore.

[17:21] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/5be7a2c5b3

[17:22] <sorear> announcement sent.

[17:22] <sorear> now I guess I should update nam.pod for pmurias

[17:27] * mberends makes the latest niecza :-)

[17:34] <mberends> ugh, mono 2.6.7 (default in Ubuntu 2011.04 prerelease) is not good enough for niecza :-(

[17:36] *** _twitch left
[17:36] <sorear> I'd love to test it better, but the Mono project has made 2.6.7 impossible to install

[17:37] <sorear> What problems are you having?

[17:37] <mberends> I'll paste the first 2 error lines:

[17:37] <mberends> WARNING: The runtime version supported by this application is unavailable.

[17:38] <mberends> Using default runtime: v1.1.4322

[17:38] <mberends> and then:

[17:38] <mberends> Unhandled Exception: System.TypeLoadException: Could not load type 'Niecza.CLRBackend.CLRBackend' from assembly 'CLRBackend, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'.

[17:40] <mberends> sorear: don't  worry about it, I'll just move to another computer in a few hours.

[17:40] <sorear> bad gmcs 2.11, no cookie

[17:41] <sorear> runtime version from executable, "v4.0.30319"

[17:41] <mberends> yeah

[17:41] * sorear wonders if this is sanely fixable

[17:45] <dalek> niecza: edbde81 | sorear++ | docs/nam.pod:

[17:45] <dalek> niecza: Update nam docs for recent changes

[17:45] <dalek> niecza: review: https://github.com/sorear/niecza/commit/edbde811d5

[17:47] <mberends> sorear: the only reason to bother with older toolchains is if you want to lower the barrier to entry for niecza newbies. Time will catch up the backlog anyway, probably in 6 months with Ubuntu. It may not be worth holding back your own work for that.

[17:49] *** risou left
[17:53] *** Oby420 joined
[17:53] <Oby420> perl6: say "helo";

[17:54] <p6eval> pugs, rakudo 6cf616, niecza v3-2-g2b8bb64: OUTPUT«helo␤»

[17:55] <Oby420> rakudo: say "helo";

[17:55] <p6eval> rakudo 6cf616: OUTPUT«helo␤»

[17:55] <sorear> mberends: 2.6.7 is still considered the "latest stable release" in mono-land

[17:55] <sorear> mberends: it's like Parrot - every 3 major releases, a stable one

[17:55] <donri> perl6: say 1 == 2|1

[17:55] <Oby420> std: say "helo";

[17:56] <p6eval> pugs: OUTPUT«any(VBool False,VBool True)␤»

[17:56] <p6eval> ..rakudo 6cf616: OUTPUT«any(Bool::False, Bool::True)␤»

[17:56] <p6eval> ..niecza v3-2-g2b8bb64: OUTPUT«Unhandled exception: Junctions NYI␤  at /home/p6eval/niecza/lib/SAFE.setting line 389 (SAFE die @ 2)␤  at /home/p6eval/niecza/lib/SAFE.setting line 1163 (SAFE infix:<|> @ 2)␤  at /tmp/S4Fe68ifrA line 1 (MAIN mainline @ 1)␤  at /home/p6eval/niecza/lib/SAFE.setting line

[17:56] <p6eval> ..1183 (SAFE C4…

[17:56] <p6eval> std 4608239: OUTPUT«ok 00:01 119m␤»

[17:56] <mberends> sorear: then how is 2.6.7 impossible to install for you?

[17:57] <sorear> mberends: you need to get a special bootstrapping binary to compile monos, and the current (2.10) bootstrap binary won't compile 2.6

[17:58] <mberends> naughty mono-project, no cookie!

[17:58] <sorear> I suspect I'll need to set up a VM and install an oldish binary linux distro

[17:59] <mberends> sorear: I may be able to host a system for you if you can get by with ssh access.

[17:59] <sorear> wait, wait

[17:59] <sorear> I just noticed - I have 2.6.7 in my package manager

[17:59] <sorear> I'm not sure whether to debian++ or debian--

[18:00] <mberends> heh

[18:00] <sorear> I mean, this is debian "unstable" but they're two major versions behind on a major package

[18:00] <donri> what os do you use

[18:01] <moritz_> sorear: you can always say debian+- :-)

[18:01] <mberends> Oby420: sorry about the evalbot breakage, it normally works much better. Please don't give up, try again later :)

[18:01] <Oby420> thanks

[18:01] <flussence> gentoo's got 2.6.7... I wonder if that still works

[18:02] <donri> sorear: http://mono-project.com/DistroPackages/Debian

[18:04] <donri> ubuntu+1 still on 2.6.7 heh

[18:05] <Oby420> raduko: say "ss\nss"

[18:07] *** Oby420 left
[18:08] *** Chillance joined
[18:08] <sorear> mberends: evalbot broke?

[18:09] <mberends> yes, and I'm not able/clueful to fix it :(

[18:09] <sorear> What evidence do you have that it's broken?

[18:10] <mberends> rakudo: say "OH HAI";

[18:10] <p6eval> rakudo 6cf616: OUTPUT«OH HAI␤»

[18:10] * mberends <- clueless anyway

[18:11] <mberends> it just looked like Oby420 was not getting much success

[18:11] <donri> he spelled it "raduko"

[18:12] <mberends> d'oh!

[18:12] <sorear> except the first three times ey got a reply

[18:12] <sorear> before: 1997 line diff -e output for STD.pm6

[18:15] <sorear> niecza: my $foo = "a2c"; if $foo ~~ s/\d// { say $/; say $foo; }

[18:15] <p6eval> niecza v3-2-g2b8bb64: OUTPUT«2␤ac␤»

[18:25] <donri> niəcza: say nothing!

[18:25] <sorear> Your e is upside down.

[18:26] <donri> ohnoes

[18:29] <tadzik> jnthn: aye :)

[18:30] <tadzik> jnthn: oh, what do you think about the BUILD discussion, did you follow up?

[18:31] <tadzik> oh wow, is jnthn splitting the compilation process?

[18:32] *** rindolf left
[18:33] <tadzik> how do I fetch a remote branch? git fetch origin lexical-setting gives me fatal: Couldn't find remote ref lexical-setting

[18:34] <moritz_> git fetch origin

[18:34] <moritz_> that gets you all the branches

[18:34] <jnthn> tadzik: I'm giving NQP support for a proper lexically outer setting.

[18:35] <jnthn> tadzik: It turned out that doing so makes life easier in various ways for other bits I want to do.

[18:35] <tadzik> moritz_: turns out it did nothing :/

[18:36] <tadzik> http://nopaste.snit.ch/34411

[18:37] <moritz_> tadzik: it's a branch in nqp, not rakudo

[18:37] <tadzik> oh, my bad

[18:38] *** Grimnir_ left
[18:38] <tadzik> yeah, now git fetch origin works fine :)

[18:43] <tadzik> jnthn: nqp fails tests, correct?

[18:45] <jnthn> tadzik: At least one.

[18:45] <tadzik> how about two? :)

[18:46] <jnthn> Only if you don't have ICU.

[18:47] <jnthn> I think otherwise only 1 should fail.

[18:48] <moritz_> one test file with 4 subtests

[18:49] <tadzik> let me install some nopaste app

[18:50] <jnthn> moritz_: aye

[18:50] <jnthn> moritz_: That's what I see too.

[18:50] <tadzik> http://gist.github.com/846417

[18:51] <jnthn> aye, that matches what I see. Just failures in t/hll/02-modules.t.

[18:53] <tadzik> hmm, is there a way to generate a lazy hash?

[18:54] <tadzik> aw, nevermind, this won't help

[18:54] <tadzik> there'd have to be a lazy JSON parser :)

[18:59] <sorear> niecza: constant %foo = (:a, :b); say +[ %foo ]

[18:59] <p6eval> niecza v3-3-gedbde81: OUTPUT«1␤»

[18:59] <sorear> niecza: my %foo = (:a, :b); say +[ %foo ]

[18:59] <p6eval> niecza v3-3-gedbde81: OUTPUT«2␤»

[19:00] <gfldex> tadzik: a lazy json parser could make sense

[19:01] *** Grimnir_ joined
[19:03] <tadzik> these is no RT for the lack of DESTROY?

[19:07] <tadzik> jnthn: is there a way to create a mock with TEst::Mock with some parameters to the constructor?

[19:11] *** Grimnir_ left
[19:15] <dalek> niecza: b5b00c1 | sorear++ | src/STD.pm6:

[19:15] <dalek> niecza: Use $/ and s/// in our STD

[19:15] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b5b00c1ce3

[19:15] <dalek> niecza: 1d6cac8 | sorear++ | / (3 files):

[19:15] <dalek> niecza: use endsym<> in STD, fix constant hash flattening

[19:15] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1d6cac8c18

[19:15] *** Grimnir_ joined
[19:16] <sorear> niecza: given 2 { when 0 { say "A" }; default { say "B" }; say "C" }

[19:16] <p6eval> niecza v3-3-gedbde81: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Action method statement_control:default not yet implemented at /tmp/i5X69V9ihx line 1:␤------> [32m when 0 { say "A" }; default { say "B" }[33m⏏[31m; say "C" }[0m␤␤Unhandled exception: Unable to resolve method statement_level in class

[19:16] <p6eval> ..Str␤  at /h…

[19:16] <sorear> oops

[19:18] <jnthn> tadzik: Don't think I did anything special for construction just yet.

[19:19] <jnthn> tadzik: So I suspect not. Probably an easy enough addition.

[19:19] <tadzik> jnthn: that'd be nice. Now there's no way to test an object which expects something through the constructor

[19:19] <tadzik> ...assuming constructor is .new :)

[19:19] <jnthn> tadzik: *nod*

[19:19] <tadzik> is it possible for mocked to receive the existing object?

[19:21] <sorear> Has anyone else received the niecza v3 announcement?

[19:21] <sorear> s/else //

[19:21] <tadzik> nah

[19:21] <sorear> I still haven't gotten remote echo

[19:21] <sorear> although p6eval is running v3-* :)

[19:24] <jnthn> sorear: I didn't see it show up on the perl6-compiler mailing list.

[19:24] <jnthn> tadzik: No, but I don't think that makes sense.

[19:24] <jnthn> tadzik: I'll add a way to do constructor args.

[19:25] <tadzik> ++jnthn

[19:27] <moritz_> sorear: no annoucement got

[19:28] *** dual left
[19:34] <masonkramer> rakudo: (1,2,3,4) «+» (1,2)

[19:34] <p6eval> rakudo 6cf616:  ( no output )

[19:34] <masonkramer> rakudo: say (1,2,3,4) «+» (1,2)

[19:34] <p6eval> rakudo 6cf616: OUTPUT«2446␤»

[19:35] <tadzik> multi sub skip($count, $reason) is export

[19:35] <tadzik> multi sub todo($reason, $count) is export

[19:36] <tadzik> LTA!

[19:36] <tadzik> can I fix this, or should we warn the users first somehow?

[19:38] *** molaf__ left
[19:41] <moritz_> pleaes fix it, and also fix fudge

[19:41] <moritz_> in roast

[19:43] *** colomon joined
[19:44] <dalek> niecza: fb731aa | sorear++ | src/STD.pm6:

[19:44] <dalek> niecza: Use given/when in our STD

[19:44] <dalek> niecza: review: https://github.com/sorear/niecza/commit/fb731aa133

[19:45] <sorear> down to 1665 lines of edits

[19:49] <tadzik> moritz_: fix fudge?

[19:49] <tadzik> oh, I see

[19:49] *** dual joined
[19:51] <tadzik> is resembling Test::More preferred?

[19:51] <tadzik> personally, I find ($count, $reason) more natural

[19:51] <tadzik> like with is() and ok() we have $test, $description

[19:53] <moritz_> I had a preference for the order of arguments once, but I forgot it :-)

[19:54] <moritz_> http://irclog.perlgeek.de/perl6/2010-11-30#i_3042879

[19:57] <tadzik> moritz_: they implicitly conform to the ones from Test::{More}, you've saint. Roger that

[19:58] <tadzik> s/saint/said/

[20:01] <tadzik> moritz_: http://wklej.org/id/483929/ -- is that how fudge should look?

[20:03] <dalek> rakudo: 3bbc066 | tadzik++ | Test.pm:

[20:03] <dalek> rakudo: Fix the order of params to skip() in Test.pm, conforming to Perl 5's Test::More

[20:03] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/3bbc066e08

[20:04] <moritz_> tadzik: looks fine

[20:04] <moritz_> now we need to adapt niecza too

[20:04] <tadzik> true

[20:05] <moritz_> hope we don't break niecza directly after the release :(

[20:05] *** coldhead joined
[20:05] <tadzik> :>

[20:05] <tadzik> well, that'd be LTA

[20:08] <dalek> roast: ca5c864 | tadzik++ | fudge:

[20:08] <dalek> roast: Fix fudge according to the changes in Rakudo 3bbc066

[20:08] <dalek> roast: review: https://github.com/perl6/roast/commit/ca5c86413b

[20:09] *** Trashlord left
[20:09] *** colomon left
[20:11] *** Trashlord joined
[20:12] *** y3llow_ joined
[20:12] *** pothos_ joined
[20:12] <sorear> moritz_: niecza doesn't even have a todo sub

[20:12] <sorear> todo is todo ;)

[20:13] *** pothos left
[20:13] *** kensanata joined
[20:13] *** pothos_ is now known as pothos

[20:14] *** y3llow left
[20:14] *** y3llow_ is now known as y3llow

[20:17] *** colomon joined
[20:22] *** envi left
[20:22] *** awoodland joined
[20:37] *** masonkramer left
[20:37] *** masonkramer joined
[20:40] *** masonkramer left
[20:40] *** shortcircuit left
[20:40] <dalek> niecza: f5bbe1d | sorear++ | src/ (2 files):

[20:40] <dalek> niecza: Merge back ?-fix in STD

[20:40] <dalek> niecza: review: https://github.com/sorear/niecza/commit/f5bbe1d5a7

[20:40] <dalek> niecza: c04f67f | sorear++ | src/STD.pm6:

[20:40] <dalek> niecza: Replace EXPR with something much closer to the STD one

[20:40] <dalek> niecza: review: https://github.com/sorear/niecza/commit/c04f67f773

[20:40] *** masonkramer joined
[20:43] *** shortcircuit joined
[21:06] <dalek> nqp/lexical-setting: 17d2709 | jonathan++ | / (3 files):

[21:06] <dalek> nqp/lexical-setting: Parsing/compilation of {YOU_ARE_HERE} and inclusion of it at end of setting.

[21:06] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/17d2709e96

[21:06] <dalek> nqp/lexical-setting: 5a4019f | jonathan++ | build/Makefile.in:

[21:06] <dalek> nqp/lexical-setting: Fix make bootstrap-files for setting.

[21:06] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/5a4019f192

[21:06] <dalek> nqp/lexical-setting: fd70004 | jonathan++ | src/stage0/ (4 files):

[21:06] <dalek> nqp/lexical-setting: Update bootstrap to include some of the bits needed for setting support.

[21:06] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/fd70004f23

[21:06] <dalek> nqp/lexical-setting: 0c6b294 | jonathan++ | build/Makefile.in:

[21:06] <dalek> nqp/lexical-setting: Can use --setting=NULL for compiling setting in stage 1 now.

[21:06] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/0c6b294eda

[21:16] <sorear> jnthn: can nqp compile settings nested in settings nested in settings now?

[21:16] <jnthn> sorear: It can't really do anything with settings just yet...not quite there.

[21:16] <jnthn> sorear: In theory though...I think that may "just work".

[21:17] <jnthn> OTOH, I'm pretty sure it doesn't "just work" yet in nqpclr.

[21:17] <jnthn> But that's more stuff just being hardcoded than any known "real problem".

[21:22] *** masonkramer_ joined
[21:24] *** masonkramer_ left
[21:32] *** Mowah left
[21:41] * sorear starts working to bring certain niecza-changes back into STD

[21:42] <sorear> in particular, several flattiness bug fixes (viv doesn't distinguish %hash from |%hash but they are worlds apart in real Perl 6), and $<foo>={1} instead of {$<foo>=1}

[21:43] <sorear> phenny: tell TimToady What is the purpose of STD line 431?  { $.from = self.pos }

[21:44] <phenny> sorear: I'll pass that on when TimToady is around.

[21:47] *** mtk left
[21:54] *** whiteknight joined
[21:55] *** mtk joined
[22:02] *** gfldex_ joined
[22:05] *** gfldex left
[22:05] *** cotto left
[22:05] *** MayDaniel_ left
[22:05] *** cotto joined
[22:08] <lue> hello world! o/

[22:10] <sorear> hello lue

[22:11] <tadzik> hello lue 

[22:11] <dalek> nqp/lexical-setting: b9e1141 | jonathan++ | src/NQP/ (2 files):

[22:11] <dalek> nqp/lexical-setting: Few fixes to the {YOU_ARE_HERE} compilation.

[22:11] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/b9e114197f

[22:12] *** masonkramer_ joined
[22:13] <tadzik> heh. My new projects has tests for modules running tests. make test on my project runs make test on some test projects. Yo dawg, I herd you like prove...

[22:14] <tadzik> the output is at least confusing

[22:14] <moritz_> tests within tests within tests... how deep are you going? :-)

[22:15] *** mtk left
[22:15] <tadzik> **We need to go deeper**

[22:19] *** masonkramer_ left
[22:19] <tadzik> bleh, prove doesn't like to be recursive

[22:22] *** gfldex_ is now known as gfldex

[22:22] <donri> I have a testing framework that tests itself with itself

[22:33] *** alester joined
[22:52] *** Rotwang left
[22:54] *** Khisanth left
[22:57] *** kaare_ left
[23:00] *** rgrau joined
[23:04] <dalek> nqp/lexical-setting: b158fac | jonathan++ | src/stage0/ (4 files):

[23:04] <dalek> nqp/lexical-setting: Update bootstrap with compilation fixes.

[23:04] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/b158facee6

[23:04] <dalek> nqp/lexical-setting: cafdaf5 | jonathan++ | build/gen_setting.pl:

[23:04] <dalek> nqp/lexical-setting: Work around a weird parsing fail - something that shoulda been treated as a block got parsed as a postcircumfix.

[23:04] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/cafdaf571a

[23:04] <dalek> nqp/lexical-setting: 3a5e136 | jonathan++ | build/Makefile.in:

[23:04] <dalek> nqp/lexical-setting: Need to fix up various things before we can put Mu and the native types into the lexical setting, so don't do that just yet.

[23:04] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/3a5e136b49

[23:04] <dalek> nqp/lexical-setting: 1aa0ec3 | jonathan++ | src/NQP/ (2 files):

[23:04] <dalek> nqp/lexical-setting: First cut of loading NQPCORE.setting by default, overridable at the command line with --setting=NULL or --setting=OTHER. Seems to work, including how it intersects with interactive mode (uses the same outer-setting mechanism...yay). Big missing piece: setting loading not handled in pre-compiled code yet.

[23:04] <dalek> nqp/lexical-setting: review: https://github.com/perl6/nqp/commit/1aa0ec39b6

[23:05] *** sji left
[23:06] <jnthn> Well, some more baby steps in the right direction.

[23:06] * jnthn rests

[23:13] <sorear> jnthn: I did general settings already, if you have questions...

[23:19] *** cognominal joined
[23:20] *** kensanata left
[23:26] *** Khisanth joined
[23:29] *** jjjjj joined
[23:29] <Tene> jnthn: any chance you looked at the 6model cardinal stuff I pasted last time we spoke?

[23:29] <phenny> Tene: 12:05Z <jnthn> tell Tene was mostly offline the last few days. Will be about and have time a lot more this week, on evenings especially. 

[23:29] <phenny> Tene: 12:07Z <jnthn> tell Tene you may well be able to make do with P6opaque for a while or maybe even for good - it all hinges on how attribute access works in Ruby, which I don't know about (yet). :-)

[23:29] <Tene> phenny: thanks

[23:34] *** jjjjj left
[23:42] *** Khisanth left
[23:45] *** jaldhar left
[23:45] *** jaldhar joined
[23:46] *** arlinius left
[23:50] *** masonkramer_ joined
[23:51] *** masonkramer_ left
[23:52] *** stifynsemons left
[23:53] *** rgrau left
[23:57] *** pmurias left
[23:58] <tadzik> will there be anything Rakudo-y on GSoC?

[23:59] <donri> Tene, jnthn: AFAIK Ruby don't have attributes at all, they're 0-arity methods

