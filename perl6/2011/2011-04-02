[00:06] *** Limbic_Region joined
[00:16] *** cdarroch left
[00:32] *** ymasory joined
[00:43] *** demetro left
[00:45] *** khisanth_ joined
[00:46] *** Khisanth left
[00:46] *** khisanth_ is now known as Khisanth

[01:19] *** ajs joined
[01:27] *** woosley joined
[01:34] *** jaldhar joined
[01:42] *** wooden joined
[01:42] *** wooden left
[01:42] *** wooden joined
[01:57] *** kid51 joined
[02:00] *** whiteknight left
[02:16] <kid51> This question was just posed in #parrot:  "can anyone recommend an article or document i can read to get started w/ nqp?"

[02:22] <sorear> perhaps the squaak tutorial; IIRC that was rewritten to use nqp not long ago

[02:23] <sorear> Why can't I define a subregex?

[02:24] <sorear> method versus submethod and $~MAIN versus $~Regex are orthogonal in the implementation, but only three combinations are supported by the syntax

[02:26] <sorear> kid51: ^

[02:26] *** bubaflub joined
[02:30] <sorear> hello bubaflub.

[02:30] <bubaflub> hi sorear 

[02:30] <sorear> weclome to #perl6

[02:30] <bubaflub> sorear: thanks

[02:30] <bubaflub> someone in #parrot was asking for a resource on where to learn npq

[02:30] <bubaflub> i pointed them to moritz++ 's blog

[02:30] <bubaflub> any other suggestions?

[02:30] <MindosCheng> Welcome to perl6!

[02:30] <sorear> squaak

[02:31] <bubaflub> i haven't done too much nqp myself

[02:31] <bubaflub> great

[02:31] <bubaflub> MindosCheng: thanks.

[02:31] *** starcoder left
[02:32] *** ymasory left
[02:32] *** starcoder joined
[02:36] <bubaflub> sorear: anything besides squaak?  or is it perl6-ish enough that general perl6 stuff will do?

[02:36] *** arlinius joined
[02:44] *** kid51 left
[02:48] *** leprevost joined
[02:49] *** ymasory joined
[02:50] *** dayangkun joined
[02:59] *** Limbic_Region left
[03:09] *** wooden left
[03:09] *** icwiener left
[03:09] *** agentzh joined
[03:21] *** dayangkun left
[03:21] *** dayangkun joined
[03:23] *** bubaflub left
[03:27] *** Su-Shee left
[03:28] *** Su-Shee joined
[03:31] *** ymasory left
[03:47] *** aesop joined
[03:51] *** mtk left
[03:53] *** Chillance left
[03:59] *** mtk joined
[04:05] *** ajs left
[04:12] *** bubaflub joined
[04:13] *** leprevost left
[04:13] *** lue left
[04:13] *** leprevost joined
[04:14] *** lue joined
[04:22] *** bubaflub left
[04:25] *** aesop left
[04:27] *** leprevost left
[04:27] *** donri left
[04:35] *** ggoebel joined
[04:44] *** aesop joined
[04:52] *** justatheory left
[04:53] *** aesop left
[05:02] *** kanishka joined
[05:05] *** aesop joined
[05:08] <mberends> hi sorear, I have been following your gtk remarks and also read some documentation. I would with regret ignore gtk3 for now because it is not "ready" in the same way that Perl 6 implementations are not "ready". The Gnome developers decided at their latest conference in March 2011 to postpone the release of stable gtk 3.0 to September 2011 so that the team have time to improve it.

[05:08] <mberends> The Ubuntu developers had already decided not to base their 2011.04 release on gtk3 because of shortcomings in its implementation whose details I do not know. It would not be a wasted effort to target gtk 2.x in the meantime because the changes, though numerous, are evolutionary, not revolutionary. To paraphrase, gtk3 is still gtk.

[05:16] *** aesop left
[05:17] <mberends> To minimize installation dependency hurdles I would recommend burning a LiveCD out of http://www.debian.org/CD/live/ not because lots of people use it, but because what it contains as base libraries is common to the greatest number of derived Linux distributions. It is a quick way to temporarily start up a perfectly clean and standardized reference platform to discover what you need to install to get your own project running on almost everyone else's

[05:17] <mberends>  computer. I just hope that your computer with 384MB ram is happy booting it.

[05:29] *** aesop joined
[05:39] <woldrich> Heh, I'd recommend email :)

[05:39] *** kanishka left
[05:39] *** noganex joined
[05:39] *** mtk left
[05:43] *** noganex_ left
[05:53] <sorear> eh?

[05:53] <sorear> (hi)

[05:53] <sorear> (I'm back)

[06:12] *** Mowah joined
[06:14] <mberends> rakudo: my $d=42; say ++$d++; say $d

[06:14] <p6eval> rakudo 4bf132: OUTPUT¬´43‚ê§44‚ê§¬ª

[06:15] <mberends> sane

[06:16] <mberends> niecza: my $d=42; say ++$d++; say $d

[06:16] <p6eval> niecza v4: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§‚ê§"++" and "++" are not associative at /tmp/foKy_STZ64 line 1:‚ê§------> [32mmy $d=42; say ++$d++[33m‚èè[31m; say $d[0m‚ê§‚ê§Unhandled exception: "++" and "++" are not associative at /tmp/foKy_STZ64 line 1:‚ê§------> [32mmy $d=42; say ++$d++[33m‚èè[31m;

[06:16] <p6eval> ..say‚Ä¶

[06:16] <sorear> stds++

[06:16] <sorear> stds-- std++

[06:17] <mberends> so is ++$d++ a misfeature?

[06:18] <diakopter> pugs: my $d=42; say ++$d++; say $d

[06:18] <p6eval> pugs: OUTPUT¬´*** Can't modify constant item: VInt 43‚ê§    at /tmp/6lHe3DZPjU line 1, column 15-21‚ê§¬ª

[06:21] *** gabiruh joined
[06:22] <sorear> mberends: i'd call rakudo's failure to handle :assoc<non> operators a bug

[06:24] <mberends> yes, it is an unwanted surprise to users accustomed to the C style norms.

[06:27] <mberends> rakudo: say "misfeature".WHAT ~~ "bug".WHAT # with loaded questions you can prove anything ;)

[06:27] <p6eval> rakudo 4bf132: OUTPUT¬´Bool::True‚ê§¬ª

[06:34] *** Exodist joined
[06:35] <Exodist> whats the terminology for a... compund object would you call it? that thing based on quantum something.. Where a variable may be one thing, or it may be the other, depends on what is needed when it is used?

[06:35] <Exodist> I ask here cause I know I read about it somewhere in the perl6 spec...

[06:36] <mberends> junction?

[06:37] <Exodist> thats it, thank you.

[06:38] *** birdwindupbird joined
[06:39] <moritz> good morning

[06:40] <Exodist> got another 20 minutes till it is morning here

[06:40] <mberends> hi moritz

[06:41] <sorear> Exodist: the correct answer is "allomorphic"

[06:41] <sorear> TimToady++ taught me that word

[06:42] <Exodist> Is it just me, or has this channel shrunk significantly since I was last here (couple months I think, wow...)

[06:42] <moritz> /names says 197 nicks... I don't think that's much less than it used to

[06:42] <moritz> I kinda remember it having around 130

[06:42] <diakopter> it was higher, but then a giant netsplit ate a bunch I think

[06:43] <sorear> s/netsplit/channel takeover/

[06:43] <moritz> giant net squid

[06:43] <Exodist> octocat snezed

[06:43] <Exodist> *sneased

[06:43] <sorear> (on the plus side, they made enough noise that we were able to convince #freenode to drop the channel and set new metaops)

[06:44] * Exodist probably needs to go to bed before he spells more words that way...

[06:44] <sorear> sneezed.

[06:44] <Exodist> oh, it was litterally taken over at some point?

[06:45] <sorear> yes, some twerp stole 'audreyt' and /kicked out all the lurkers

[06:46] <Exodist> ... I don't know whats more [blank stare] about that, the fact that the person did it, or the fact that he got audreyt's account....

[06:46] <woldrich> what's wrong with people.

[06:46] <sorear> au|irc doesn't use audreyt anymore

[06:46] <sorear> audreyt was never registered

[06:46] <Exodist> brb, dog needs out

[06:46] <Exodist> then how did th account gain ops?

[06:47] <Exodist> *really brb this time

[06:47] <sorear> "effectively"

[06:47] *** Teedev joined
[06:47] <diakopter> the account 'audreyt' was never registered, to clarify what sorear said

[06:48] <sorear> Exodist: have you been gone long enough to miss the new implementation? :>

[06:51] <Exodist> sorear, most likely, I started a new job bac in december, I think thats when I was last on

[06:51] <Exodist> (back)

[06:51] <sorear> I had already started for a while in December

[06:51] <Exodist> how did the account get ops if it was never registered

[06:52] <sorear> Exodist: you don't need to register an account to give a nickname persistant ops

[06:52] <Exodist> sorear, I think I stopped paying attention though a month or 2 before that as my faux go at it fizzled (back as my new language attemp is ramping up, though its not perl6)

[06:52] <Exodist> sorear, my misunderstanding, I assumed that since it wasn't registered it was never used, and thus should not have had ops.

[06:53] <Exodist> and that the person came in and convinced someone to op them

[06:53] <sorear> niecza: "foobar" ~~ / [ foo | \w+ ] { say "got here: $/.pos" } /

[06:53] <p6eval> niecza v4: OUTPUT¬´got here: Cursor()<instance>.pos‚ê§¬ª

[06:53] <sorear> niecza: "foobar" ~~ / [ foo | \w+ ] { say "got here: $/.pos()" } /

[06:53] <p6eval> niecza v4: OUTPUT¬´got here: 6‚ê§¬ª

[06:53] <sorear> look! LTM!

[06:54] <Exodist> been so long since I looked at perl6 grammars stuff that I am a bit rusty, but I remember LTM being a hickup, so congrats

[06:59] <sorear> "hickup"?

[06:59] *** dayangkun_ joined
[06:59] <Exodist> bad word use on my part, they were difficult.

[06:59] <diakopter> hiccup

[07:00] <Exodist> bas language abuse on my part :-)

[07:00] <Exodist> *bad

[07:00] <Exodist> wow, I really should probably call it a night.

[07:00] *** dayangkun_ left
[07:26] *** Teedev left
[07:51] *** nymacro joined
[07:51] <tadzik> self.awake :)

[07:51] <sorear> hello tadzik

[07:52] <tadzik> hmm, I wouldn't actually mind a longer timeout

[07:52] <tadzik> hello sorear 

[07:52] *** Mowah left
[07:52] *** woosley left
[07:55] *** sftp left
[07:56] *** sftp joined
[07:58] <dalek> niecza: 891ede5 | sorear++ | lib/Kernel.cs:

[07:58] <dalek> niecza: Incremental method table generation for single inheritance

[07:58] <dalek> niecza: review: https://github.com/sorear/niecza/commit/891ede56ed

[07:58] <dalek> niecza: 6128027 | sorear++ | lib/ (2 files):

[07:58] <dalek> niecza: New multiple dispatch model

[07:58] <dalek> niecza: 

[07:58] <dalek> niecza: Proto and dispatch subs are now inferred at MRO construction time,

[07:58] <dalek> niecza: instead of always deferring set calculation to call time.  This

[07:58] <dalek> niecza: opens the door to lexical multis and type-based dispatch.

[07:58] <dalek> niecza: review: https://github.com/sorear/niecza/commit/6128027c29

[07:59] * sorear asleep soon; looks forward to trying to get those things in tomorrow

[08:24] *** Teedev joined
[08:24] *** Teedev left
[08:29] *** birdwindupbird left
[08:36] *** birdwindupbird joined
[08:46] *** frettled joined
[08:51] *** marcio_ferreira joined
[09:05] *** dayangkun left
[09:07] *** dayangkun joined
[09:28] *** masak joined
[09:28] <masak> yo zebrists.

[09:28] <phenny> masak: 01 Apr 23:10Z <Tene> tell masak about http://ethanschoonover.com/solarized

[09:28] <masak> Tene: that page is beautiful, and perfectly captures the kind of color esthetic/awareness I'd like to see in my color picker.

[09:29] <masak> just like CRUD screens are thoughtless and user-unaware, most of today's color pickers are tailored to bits and bytes, not to brains.

[09:30] <Tene> I thought you'd like that.  I'm always glad when I get things like that right.

[09:30] <Tene> :)

[09:30] <masak> :)

[09:30] <masak> I'm pretty good at mentally deciphering a six-digit hex number into an actual color. but on some deeper level, I don't *care*.

[09:30] * moritz finds the text on that page slightly difficult to read, due to lack of contrast

[09:31] <masak> moritz: ssh! it's scientific, so it can't be wrong! :P

[09:32] <masak> but yes, I agree. backgrounds needn't be #fff, but text should be #000, or so near as making no difference.

[09:33] <masak> I thought I'd try making a Yapsi release today. I just need to run a small errand first.

[09:33] <Tene> masak: and your thoughts on the reverse?

[09:33] <masak> Tene: sorry, could you rephrase that question?

[09:33] <Tene> masak: given light text on a dark bg, does the bg need to be #000?  does the text need to be #fff?

[09:34] <masak> hm.

[09:34] <masak> I... don't know. would need to experiment a bit with that.

[09:34] * moritz is not good at design, but good at identifying bad design

[09:35] <masak> Tene: but I generally have that kind of setup in dark environments at night, and then I think colors need not be bright at all. a #777 text would probably be fine.

[09:35] <Tene> 'k

[09:35] <masak> I think I'd definitely prefer the bg to be #000 in that case.

[09:37] <masak> &

[09:40] *** bacek left
[09:41] *** orafu left
[09:45] *** orafu joined
[09:55] *** _twitch joined
[10:08] *** benabik_ joined
[10:08] *** benabik left
[10:08] *** benabik_ is now known as benabik

[10:14] *** agentzh left
[10:21] *** MayDaniel joined
[10:24] *** LarsTorben joined
[10:24] <LarsTorben> !!! DAS neue LINUX www.snowlinux.de THE NEW linux !!!!!

[10:24] *** LarsTorben left
[10:25] *** araujo left
[10:26] <masak> LarsTorben: you might want to consider a PR strategy for your product that doesn't piss people off.

[10:28] <sorear> masak: you need to set your client to ignore things said by people who immediately quit after talking

[10:29] <dalek> niecza: f6aa8d6 | sorear++ | / (3 files):

[10:29] <dalek> niecza: Use new dispatcher API when compiling protoregexes

[10:29] <dalek> niecza: review: https://github.com/sorear/niecza/commit/f6aa8d6e58

[10:29] <dalek> niecza: 58a9396 | sorear++ | lib/Cursor.cs:

[10:29] <dalek> niecza: Remove old protoregex handlers

[10:29] <dalek> niecza: review: https://github.com/sorear/niecza/commit/58a9396ae5

[10:30] *** bacek joined
[10:35] <dalek> niecza: 2eec5c9 | sorear++ | test2.pl:

[10:35] <dalek> niecza: Test multi regex without proto regex

[10:35] <dalek> niecza: review: https://github.com/sorear/niecza/commit/2eec5c953c

[10:36] <masak> sorear: interesting notion. I wonder if my client does that.

[10:51] *** MayDaniel left
[10:54] *** allbery_b is now known as geekosaur

[10:54] *** benabik left
[10:56] *** benabik joined
[11:00] *** benabik left
[11:01] *** benabik joined
[11:10] * moritz finds it hilarious that spammers are too silly to even include a http:// in their URLs

[11:15] *** karupanerura joined
[11:15] *** Chillance joined
[11:19] <masak> moritz: he was in a hurry! no time for protocol. :P

[11:21] *** whiteknight joined
[11:36] *** kanishka joined
[11:37] *** birdwindupbird left
[11:37] *** birdwindupbird joined
[11:38] *** birdwindupbird left
[11:38] *** birdwindupbird joined
[11:39] *** birdwindupbird left
[11:39] *** birdwindupbird joined
[11:42] *** kanishka left
[11:43] *** envi joined
[11:49] *** birdwindupbird left
[11:49] *** birdwindupbird joined
[11:50] *** birdwindupbird left
[11:50] *** birdwindupbird joined
[11:53] *** Patterner left
[11:54] *** lateau joined
[11:55] *** Psyche^ joined
[11:55] *** Psyche^ is now known as Patterner

[11:56] *** lateau left
[11:56] *** lateau joined
[11:58] *** ggoebel left
[12:01] *** kanishka joined
[12:04] *** benabik_ joined
[12:04] *** masak left
[12:05] *** benabik left
[12:05] *** benabik_ is now known as benabik

[12:06] *** kanishka left
[12:19] *** dayangkun left
[12:22] *** Axius joined
[12:22] *** kanishka joined
[12:31] *** ccc joined
[12:39] *** cjk101010 joined
[12:52] <felher> How would one let rakudo run all tests in perl6/roast and get an overview? Is there already something or should one just script something like: >> for i in **/*.t; do rakudo $i 2>&- 1>&- || echo "test $i failed"; done <<

[12:53] <moritz> TEST_JOBS=3 make spectest

[12:53] <moritz> tha's the list of known tests

[12:53] <moritz> erm, tests that are known to pass

[12:53] <moritz> and if you want to run ALL tests, use 'make spectest_full'

[12:55] <felher> moritz: Ah, it clones roast. K, thnx!

[13:00] *** kid51 joined
[13:11] *** sftp left
[13:31] *** Axius left
[13:32] *** sftp joined
[13:34] *** araujo joined
[13:42] *** Mowah joined
[13:45] *** arlinius left
[13:48] <tadzik> brainstorming. Modules go to lib/, execs go to bin/, where do generic things go, like examples? res/, misc/?

[13:51] *** Axius joined
[13:56] *** Axius left
[13:59] *** Axius joined
[14:01] <woldrich> examples/ ?

[14:01] <tadzik> well, something more general I suppose

[14:01] <woldrich> that's where I put mine. And most other people as well, as far as I can tell

[14:02] <tadzik> seen supernovus

[14:02] <aloha> supernovus was last seen in #perl6 74 days 16 hours ago saying "Well, that set of optimizations seems to have helped, went from 1m16.339s with the old page generation method to 0m41.936s with the new one.".

[14:02] <woldrich> doc/ ?

[14:02] *** kid51 left
[14:02] <tadzik> woldrich: where would you expect such things to be after you installed a module? in ~/.perl6/where?

[14:03] <woldrich> I wouldn't expect it to be installed at all ...

[14:03] <tadzik> int eresting;

[14:04] <woldrich> str ange?

[14:04] <tadzik> !at-all

[14:04] <tadzik> I see that supernovus puts those in docs/

[14:04] *** ajs joined
[14:05] <ajs> Hmm... so it an April fools post is published on a blog no one reads, is it still funny? http://essays.ajs.com/2011/04/clamchowder-ne-perl-6-to-offer-shell.html

[14:05] <ajs> ;-)

[14:05] <ajs> *if

[14:05] <woldrich> I'd prefer doc, without the 's' suffix. :p

[14:05] <woldrich> important stuff, this

[14:05] <tadzik> I guess I'll implement it and see who complains

[14:05] <tadzik> yeah, doc/ feels more unixy

[14:06] <tadzik> I wonder how creepy would it be to install /doc.+/

[14:07] <woldrich> I assume you know about the good old File::ShareDir?

[14:08] <tadzik> I don't think so

[14:08] <woldrich> might be worth reading the docs, then

[14:10] *** arlinius joined
[14:13] *** lateau left
[14:30] *** kanishka left
[14:30] *** hudnix left
[14:33] *** risou joined
[14:36] *** Axius left
[14:36] *** jimmy1980 left
[14:41] *** hudnix joined
[14:44] *** czp joined
[14:49] *** czp left
[14:55] *** JimmyZ joined
[14:56] *** ccc left
[15:08] *** marcio_ferreira left
[15:15] *** justatheory joined
[15:21] *** jimmy1980 joined
[15:23] <sorear> good * #perl6

[15:23] <tadzik> hello sorear 

[15:25] *** marcio_ferreira joined
[15:26] <tadzik> loliblogged! http://ttjjss.wordpress.com/2011/04/02/about-meta-info-and-friends/

[15:26] *** Axius joined
[15:36] * sorear reads the TPF GSoC 2011 ideas list

[15:46] <moritz> tadzik: the META.info spec looks fine... with some small nits as always :-)

[15:47] <moritz> tadzik: for one github doesn't like your links to json.org - not sure if that's your fault or github's

[15:48] <moritz> tadzik: the second is that I'd rename s:g/repo/source/ because when we support links to tarballs, "repo" will sound oh so wrong

[15:48] <tadzik> I don't know either

[15:48] <tadzik> right

[15:48] <tadzik> moritz: wanna commit bit?

[15:49] <moritz> sure

[15:50] <tadzik> OTOH, s/repo/source/ will be oh-so-painful to make everyone migrate on it now

[15:50] <tadzik> so repo-* should stay supported, yet deprecated

[15:50] <tadzik> moritz: done

[15:51] <tadzik> (the commit bit)

[15:52] * sorear studies Perl6MultiSub

[15:57] <moritz> tadzik: what do you think of making source-type optional, and use the schema to guess the type?

[15:57] <tadzik> moritz: wfm

[16:00] <TimToady> sorear: you mean rakudo's obsolescent Perl6MultiSub?

[16:00] <PerlJam> what does "optional" mean exactly?  When it can't be guessed, it's required?

[16:00] <sorear> TimToady: how so?

[16:01] <TimToady> the old MD didn't go via proto

[16:01] <TimToady> and there was no way to ref to &foo for the collective list

[16:01] <TimToady> *refer

[16:02] <tadzik> PerlJam: I meant "the module manager may make use of it, may not"

[16:02] <TimToady> that's why we respec'ed it to use 'dispatch' routines several months ago

[16:02] <tadzik> Panda displays it on `panda info`, ignores it in every other case

[16:02] <sorear> well, I'm actually just interested in the dispatch algorithm

[16:02] <sorear> esp. the minutae of candidate list sorting

[16:02] <TimToady> ah, that parts pretty good

[16:02] <TimToady> *'

[16:03] <PerlJam> tadzik: This META.info is *only* for modules or could it be used for installed programs too?

[16:03] <tadzik> PerlJam: oh, it's for everything. Ufo uses it too

[16:03] <TimToady> I don't know how many of the minutae have been carried over to 6model yet...

[16:04] <TimToady> though certainly 6model is better formed at the higher levels

[16:06] *** nymacro left
[16:07] *** marcio_ferreira left
[16:08] * moritz has a git fail

[16:08] <moritz> I can't seem to push my commit

[16:08] <moritz> willt ry something else

[16:09] <moritz> tadzik: pushed

[16:14] *** donri joined
[16:15] *** JimmyZ left
[16:17] *** jimmy1980 left
[16:20] *** justatheory left
[16:21] *** jedai_ joined
[16:22] * TimToady wanders off to tear off more bits of his house...

[16:22] *** jimmy1980 joined
[16:22] *** jimmy1980 left
[16:23] <[Coke]> oooh, destruction. That part is fun.

[16:23] *** jimmy1980 joined
[16:23] *** jimmy1980 left
[16:23] *** jimmy1980 joined
[16:24] *** birdwindupbird left
[16:25] *** risou left
[16:26] *** sbp joined
[16:27] *** ymasory joined
[16:34] <tadzik> moritz: why the new branch?

[16:38] <tadzik> moritz+= want to discuss my GSoC proposal a bit in a while?

[16:48] *** pmurias joined
[16:49] <pmurias> sorear: mildew had multimethods implemented mostly in Perl6

[16:49] <phenny> pmurias: 01 Apr 00:29Z <sorear> tell pmurias AFAICT GSoC doesn't like 'exploratory programming' much.  We don't know if the CL-backend will still have decent performance after you make 1 + "2" work

[16:49] *** Axius left
[16:51] <pmurias> sorear: see https://github.com/perl6/mu/blob/master/v6/Mildew-Setting-SMOP/MildewCORE.setting

[16:59] *** _twitch left
[17:00] *** Rotwang joined
[17:02] *** sbp left
[17:02] *** sbp joined
[17:16] *** tylercurtis joined
[17:18] <felher> Where is defined how sub-routines like print/say work? (Are they even sub-routinges at all?). I noticed that they behave differently than they did in perl5 (e.g. say; doesn't print $_ anymore).

[17:22] *** karupanerura left
[17:23] <tylercurtis> In S32/IO. Perl 6 gets rid of all (I think) of the implicit argument stuff from previous versions of Perl. Instead, there's a general implicit invocant syntax for calling methods on $_ more conveniently.

[17:23] <tylercurtis> So, .say insteadd of say;

[17:25] *** enigma_ymee joined
[17:32] *** icwiener joined
[17:33] *** pmurias left
[17:43] *** lionheart joined
[17:46] *** enigma_ymee left
[17:54] <sorear> tylercurtis \o/

[17:58] <tylercurtis> sorear: Hi.

[18:04] *** lionheart left
[18:08] *** MayDaniel joined
[18:09] <sorear> tylercurtis: how are things for you?  I'm excited, MMD in Niecza is *really* close now

[18:18] *** sbp left
[18:18] *** sbp joined
[18:18] *** sbp left
[18:18] *** sbp joined
[18:20] <felher> tylercurtis: Oh, k, thnx. :)

[18:27] <felher> tylercurtis: btw: seems to be S16/IO.

[18:27] *** envi left
[18:28] <colomon> sorear++

[18:46] *** icwiener left
[18:47] *** icwiener joined
[18:53] <tylercurtis> sorear: Things are good for me. I think this quarter my courses will be significantly less demanding time-wise, so I might actually start working on Perl 6 or Parrot-related things once more.

[18:53] <sorear> yay!

[19:01] *** icwiener left
[19:03] *** GinoMan joined
[19:12] *** cjk101010 left
[19:12] *** pmurias joined
[19:13] <pmurias> sorear: have you decided if you will apply for GSoC this year?

[19:18] *** justatheory joined
[19:18] <sorear> pmurias: I haven't seen anything I really want to apply for

[19:21] *** jevin left
[19:21] <pmurias> sorear: and doing a niecza related project?

[19:23] <sorear> EINSUFFICIENTGOALS

[19:26] * pmurias doesn't really know what to apply for too

[19:33] *** justatheory left
[19:33] *** justatheory joined
[19:39] *** icwiener joined
[19:45] *** VXZ joined
[19:46] <sorear> rakudo: multi sub foo(:bar(:$quux)!) { }; foo(:quux); say "alive"

[19:46] <p6eval> rakudo 4bf132: OUTPUT¬´alive‚ê§¬ª

[19:46] <sorear> rakudo: multi sub foo(:bar(:$quux)!) { }; foo(:bar); say "alive"

[19:46] <p6eval> rakudo 4bf132: OUTPUT¬´No applicable candidates found to dispatch to for 'foo'. Available candidates are:‚ê§:(Any :quux(:bar($quux))!)‚ê§‚ê§  in main program body at line 22:/tmp/g7rVbbaDBi‚ê§¬ª

[19:47] <sorear> I broke rakudo's MMD engine ...

[19:55] * moritz submits a bugreport

[20:00] <sorear> moritz: the bug (which I noticed in the code while trying to read it) is around perl6multisub.pmc line 259

[20:01] <sorear> moritz: if a parameter has 2 or more names, it is not safe to make the assumption that (the whole signature can only match if the first name is present)

[20:01] <sorear> it's a slightly bogus optimization

[20:01] <moritz> agreed

[20:17] *** marcio_ferreira joined
[20:20] *** jevin joined
[20:22] <pmurias> sorear: you have seen mildew's MMD implementation?

[20:22] <sorear> pmurias: yes, but I don't really understand how the mildew bootstrap works

[20:23] <pmurias> some classes are defined in C+DSL

[20:23] <pmurias> other ones that use those are written in Perl 6

[20:23] <pmurias> mildew is written in Perl 5 so it doesn't bootstrap

[20:23] <sorear> also, current versions of mildew are incompatible with current versions of gcc

[20:24] <sorear> even with -O0 gcc 4.4 wants >2GiB to compile the .c file resulting from MildewCORE

[20:25] <pmurias> the performance from the code generated by mildew was horrible so there is not much use trying to get it to work

[20:26] <pmurias> sorear: there is a second backend in mildew that generates much smaller C files (arrays of bytecode, rather than giant switches)

[20:28] <pmurias> sorear: the tricky part in the boostrap of the mildew object system is that the 'use adhoc-signatures' makes the signatures be simpler objects implemented in C rather full signatures (which are a class written in Perl6)

[20:29] <sorear> ahah

[20:29] <sorear> did mildew/smop do gather?

[20:30] <pmurias> don't remember

[20:30] <pmurias> it had everything that was need for that for sure

[20:30] <pmurias> coroutines etc.

[20:31] <sorear> How did coroutines work with 'polymorphic eval'?

[20:33] <pmurias> polymorphic eval is basically 'while 1 {invoke the current couroutine}'

[20:34] <pmurias> * coroutine

[20:34] <pmurias> perl5 interop worked using Coro

[20:34] <dalek> niecza: d9d73c9 | sorear++ | / (2 files):

[20:34] <dalek> niecza: Parse "multi method" correctly, add basic type-MMD tests

[20:34] <dalek> niecza: review: https://github.com/sorear/niecza/commit/d9d73c9af0

[20:34] <dalek> niecza: 39cf462 | sorear++ | lib/Kernel.cs:

[20:34] <dalek> niecza: Implement MMD longname extractor

[20:34] <dalek> niecza: review: https://github.com/sorear/niecza/commit/39cf4627c9

[20:34] <pmurias> continuations would have require adding a .clone method to coroutines

[20:34] <sorear> sounds a lot like the for (;;) { th = th.code(th); } at the heart of niecza

[20:35] <pmurias> yes, seems to be the same thing

[20:35] <pmurias> is .code polymorphic?

[20:37] <sorear> yes

[20:38] <sorear> niecza requires a rigid format for the frames; they aren't general MOP-objects

[20:42] <pmurias> niecza seems to have a lot in common with smop, with more things hardcoded (so faster) and loads more opcodes instead of having things in C

[20:44] <pmurias> the main reason i stoped working on smop/mildew wasn't any big design problems but that writing a compiler+vm by myself didn't seem a fun/sensible thing

[20:45] <pmurias> with niecza using .net you don't have to worry with things such as writing a fast garbage collect 

[20:45] <pmurias> using reference counting was a design problem

[20:45] <pmurias> as it's really a pain to debug

[20:45] <sorear> I was under the impression reference counting was a sacrifice to allow p5interop

[20:48] <pmurias> one of the plans was to integrate p5 and smop really closely (add a ->RI pointer to SV*)

[20:49] <pmurias> sorear: reference counting is not nessary for p5interop but helps

[20:50] <pmurias> sorear: and use p5 types for strings etc.

[20:50] *** justatheory left
[20:51] <pmurias> it might be fun to try that with niecza and a (rewritten) smop at some point

[20:55] *** Patterner left
[20:55] *** cjk101010 joined
[20:56] *** arlinius left
[20:56] *** Psyche^ joined
[20:56] *** Psyche^ is now known as Patterner

[20:56] <pmurias> sorear: the other reason besides p5 integration for using reference counting is that writing a fast gc is a hard thing

[21:02] *** GinoMan left
[21:02] *** sftp left
[21:03] *** arlinius joined
[21:08] *** MayDaniel left
[21:09] *** sftp joined
[21:11] *** starcoder left
[21:11] *** starcoder joined
[21:20] *** jevin left
[21:22] *** jevin joined
[21:37] *** aesop left
[21:44] *** zer0o joined
[21:44] *** bacek left
[21:49] <sorear> moritz: Is it a known bug that Rakudo doesn't implement "constrained multis are called in order and are never ambiguous"?

[21:51] <plobsing> I know that bug. I complained about it previously. That's one of the reasons the multi-ackerman example on rosettacode is broken.

[22:00] *** pmurias left
[22:17] *** aesop joined
[22:18] <Tene> phenny: tell masak to look at http://vimeo.com/channels/stanfordvis#19185801

[22:18] <phenny> Tene: I'll pass that on when masak is around.

[22:20] *** starcoder is now known as starfoo

[22:23] *** aesop left
[22:24] *** Mowah left
[22:24] *** cjk101010 left
[22:34] <sorear> plobsing: okay.

[22:35] * sorear is not quite following how the sorting process is intended to work

[22:35] <sorear> consider the dag A -> B -> C, A -> D

[22:35] <sorear> there are two total orders consistant with this, thus two possible outcomes from "topological sorting"

[22:35] <sorear> 1. A, [B,D], C

[22:36] <sorear> 2. A, B, D, C

[22:36] <sorear> actually I miscounted

[22:36] *** aesop joined
[22:36] <sorear> 3. A, B, [C,D]  4. A, D, B, C  5. A, B, C, D

[22:36] <sorear> Rakudo produces #1, but they're all wrong

[22:38] <sorear> if the capture in question rejects A, then B and D are tied candidates; however, #2, #3, #4, and #5 will erroneously consider one to have won

[22:38] <sorear> if the capture in question rejects both A and B, then C and D are the tied candidates, but #1, #2, #4, and #5 will fail to detect this

[22:39] * sorear pokes TimToady, jnthn, pmichaud

[22:40] *** Rotwang left
[22:40] <cognominal> sorear is back to BASIC?

[22:43] *** starfoo is now known as starcoder

[22:48] <sorear> cognominal: I don't get it

[22:50] <cognominal> http://en.wikipedia.org/wiki/PEEK_and_POKE

[22:51] <cognominal> I probably betray the generation I belong to

[22:53] <cognominal> and my last line is a literal translation from French and sounds wrong in English :(

[23:00] *** spooneybarger joined
[23:03] <sorear> cognominal: other than the tense (should be 'betrayed'), that line is completely fine

[23:04] *** zby_home_ left
[23:04] <dalek> niecza: 2bdc3ff | sorear++ | / (2 files):

[23:04] <dalek> niecza: A few more MMD tests

[23:04] <dalek> niecza: review: https://github.com/sorear/niecza/commit/2bdc3ffc26

[23:07] *** spooneybarger left
[23:29] <cognominal> Indeed, according to the american heritage dictionary, except for the "deceive" denotation, the various meanings are the same as French.

[23:54] *** jasonmay left
