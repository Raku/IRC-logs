[00:01] *** Trashlord left
[00:03] *** TheMartianGeek joined
[00:04] *** jedai left
[00:04] *** jedai joined
[00:07] *** whiteknight joined
[00:10] <pmurias> sorear: in mildew my $x := 1; my $y := $x; $x := 2; say($y) printed 1

[00:10] *** sftp left
[00:10] <pmurias> sorear: the BIND method was not called on the container but on an object representing an lexical scope entry

[00:12] *** sftp joined
[00:17] *** sftp left
[00:18] *** sftp joined
[00:20] *** alester joined
[00:29] *** Eevee left
[00:30] *** Eevee joined
[00:36] *** zer0o left
[00:37] *** pmurias left
[00:42] *** icwiener left
[00:45] *** zer0o joined
[00:52] *** jrockway joined
[00:52] *** orafu left
[00:52] *** orafu joined
[00:52] *** estrabd left
[00:54] *** estrabd joined
[01:07] *** alester left
[01:09] *** kst joined
[01:35] *** alester joined
[01:41] *** whiteknight left
[01:47] *** bacek left
[02:00] *** bacek joined
[02:00] *** crakrjak joined
[02:03] <crakrjak> camelia really?

[02:05] <TimToady> just for you

[02:06] <crakrjak> how long has perl6 been into the making?

[02:06] <sjn> many years \o/

[02:06] <crakrjak> i remember reading about it a long time ago it seems

[02:07] <TimToady> 10 years or so

[02:07] <crakrjak> surprised its not production ready yet

[02:07] <TimToady> we're trying to do something impossible, so it takes a while

[02:08] <crakrjak> does it do all the modern stuff like authentication federation, orm, parallel processing, etc?

[02:08] *** kst left
[02:09] <TimToady> parallel is built-in; orm should be trivial with our repr interfaces

[02:09] <TimToady> dunno about af

[02:09] <crakrjak> neat

[02:10] <crakrjak> i have used perl for many years and recently i have been wondering if i shouldnt start using python more

[02:10] <TimToady> we think a lot about multi-cores

[02:10] <crakrjak> there is a party in my backyard

[02:11] <crakrjak> nice chatting with you

[02:11] <crakrjak> later!

[02:11] <TimToady> likewise

[02:17] *** MOAR-f00li5h joined
[02:19] *** MOAR-f00li5h left
[02:26] <diakopter> !addquote  <TimToady> we're trying to do something impossible, so it takes a while

[02:29] *** am0c joined
[02:33] *** plobsing left
[02:37] *** woosley joined
[02:39] *** kst joined
[02:43] *** alester left
[03:08] *** donri left
[03:11] *** estrabd left
[03:12] *** estrabd joined
[03:18] <[Coke]> I wonder if irc logs should render the NL char in output as an actual newline.

[03:27] *** Su-Shee left
[03:29] *** Su-Shee joined
[03:31] *** ymasory left
[03:33] *** ymasory joined
[03:33] *** krunen left
[03:33] *** woosley1 joined
[03:34] <[Coke]> TimToady: I agree with your

[03:36] <[Coke]> ... whoops. Statement regarding more caffeine.

[03:36] *** woosley left
[03:39] *** Khisanth left
[03:47] *** plobsing joined
[03:51] *** Khisanth joined
[03:52] *** Khisanth is now known as Guest92045

[03:57] *** envi joined
[03:59] *** xinming_ is now known as xinming

[04:02] *** orafu left
[04:02] *** orafu joined
[04:05] *** dayangkun joined
[04:13] <lue> hello world! o/

[04:13] <lue> masak: yeah, that is out-of-date.

[04:16] *** dayangkun left
[04:16] *** dayangkun joined
[04:21] *** risou joined
[04:22] <lue> tadzik: I'll look more why into ambient material won't parse (and when I set \H+ as a possible blocktype, why =begin Text and such won't parse). There should be a @sample[3] though.

[04:23] <lue> [to me, having to comment out a test because it doesn't work seems... ironic?]

[04:23] *** ymasory left
[04:57] *** zer0o left
[04:59] *** MUILTFN joined
[05:05] *** sufrostico left
[05:05] *** sufrosti1o joined
[05:05] *** ymasory joined
[05:08] <tylercurtis> p

[05:09] *** nymacro joined
[05:09] *** dayangkun left
[05:09] * tylercurtis evidently accidentally sent that message.

[05:12] *** dayangkun joined
[05:25] *** jstathm joined
[05:28] *** jimbo joined
[05:29] <jimbo> t

[05:31] *** jimbo left
[05:31] *** jstathm left
[05:43] *** MUILTFN left
[05:47] *** ymasory left
[05:49] *** MUILTFN joined
[06:11] *** TheMartianGeek left
[06:19] *** TheMartianGeek joined
[06:23] *** TheMartianGeek left
[06:42] *** justatheory left
[06:42] *** dayangkun_ joined
[06:45] *** dayangkun left
[06:45] *** MUILTFN left
[06:57] *** Guest92045 is now known as Khisanth

[07:08] *** awoodland joined
[07:23] *** Mowah joined
[07:27] *** jaldhar left
[07:27] *** jaldhar joined
[07:27] *** dayangkun__ joined
[07:30] *** dayangkun_ left
[07:33] *** awoodland left
[07:48] *** lateau joined
[07:49] *** lateau left
[07:49] *** lateau joined
[07:52] <tadzik> wow wow, have you seen new Github issues?

[07:58] *** dayangkun_ joined
[08:00] *** dayangkun__ left
[08:09] *** mj41 joined
[08:19] *** noganex_ left
[08:24] *** jimmy1980 left
[08:29] *** dayangkun__ joined
[08:32] *** dayangkun_ left
[08:36] *** birdwindupbird joined
[08:37] *** risou left
[08:53] *** tty234 joined
[09:03] *** molaf joined
[09:36] *** MayDaniel joined
[09:50] *** araujo left
[09:52] *** dayangkun_ joined
[09:54] *** dayangkun__ left
[09:55] *** dayangkun__ joined
[09:56] *** nymacro left
[09:58] *** dayangkun_ left
[10:02] <TiMBuS> my $who = ($raw<user> || $raw<server>) but role {}; #<- segfaults rakudo, cannot seem to figure out why

[10:03] <TiMBuS> my $who = ($raw<user> || $raw<server>); $who does role {}; is fine

[10:03] <moritz> rakudo: say (my $ || my $).WHAT

[10:03] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Contextual $*GOAL not found␤»

[10:03] * moritz submits rakudobug

[10:04] <moritz> TiMBuS: I suspect it might return some parrot-y thing from the ||

[10:04] <TiMBuS> seems fine with a cut down version in the repl tho

[10:04] <moritz> TiMBuS: and assignment turns it into an Any or so

[10:06] <TiMBuS> hmmm

[10:06] <TiMBuS> rakudo: my $a = (my $ || 3) but role {method foo {say 'bar'}}; say $a.foo;

[10:06] <p6eval> rakudo 4bf132: OUTPUT«bar␤Bool::True␤»

[10:07] <moritz> rakudo: my $b; say (my $ || $b).PARROT

[10:07] <p6eval> rakudo 4bf132: OUTPUT«Perl6Scalar->␤»

[10:07] <TiMBuS> oh.

[10:07] <TiMBuS> thats probably it

[10:07] <moritz> what is $raw<server> in your program?

[10:07] <TiMBuS> Match

[10:08] *** dayangkun_ joined
[10:08] *** MayDaniel left
[10:09] <moritz> hm

[10:09] <moritz> and Match.Bool returns True?

[10:09] <TiMBuS> well $raw is a Match, im not sure if the string its returning is a match or not. I forget how that works

[10:10] *** dayangkun__ left
[10:10] <TiMBuS> $raw.Bool is definitely true if that's what you mean

[10:11] <moritz> just add a   say $raw<server>.perl

[10:11] <TiMBuS> yeah its just a match

[10:12] <moritz> what abotu $raw<server>.Bool ?

[10:12] <TiMBuS> Bool::True

[10:13] <moritz> hm

[10:13] <moritz> then I don't understand it in the least

[10:13] <TiMBuS> :[

[10:16] <jnthn> ->...nothing? Hm.

[10:16] <jnthn> (re the segfault)

[10:16] <jnthn> Something looks odd there.

[10:17] <jnthn> Leaking Parrot type feels like a good guess though.

[10:17] <TiMBuS> Null PMC access in find_method('perl')

[10:17] <TiMBuS> theres a good start

[10:17] <jnthn> Ah

[10:17] <TiMBuS> say $raw<user>.perl; say $raw<server>.perl;

[10:18] <TiMBuS> so i guess $raw<user> is not a Match because it didnt.. match

[10:18] *** Rotwang joined
[10:20] <TiMBuS> got it

[10:20] <TiMBuS> rakudo: my $f = 'fdas' ~~ /$<foo>='a'|$<bar>='b'/; say $f<b>.WHAT

[10:20] <p6eval> rakudo 4bf132: OUTPUT«Proxy()␤»

[10:21] <TiMBuS> welp, that looks hecka complicated and thinking give me wrinkles so

[10:21] * TiMBuS skips off

[10:24] <moritz> TiMBuS: you have no <b> capture in that regex

[10:26] *** nymacro joined
[10:27] <TiMBuS> moritz, yeah i know, but it shouldnt crash rakudo about it

[10:27] <TiMBuS> rakudo: my $f = 'fdas' ~~ /$<foo>='a'|$<bar>='b'/; say $f<b>.perl;

[10:27] <p6eval> rakudo 4bf132: OUTPUT«Null PMC access in find_method('perl')␤  in <anon> at line 1310:CORE.setting␤  in 'Any::join' at line 1␤  in 'Mu::attribs' at line 1311:CORE.setting␤  in 'Mu::perl' at line 1315:CORE.setting␤  in main program body at line 22:/tmp/v156cpgav1␤»

[10:30] <TiMBuS> so i guess.. it boild down to $a = Match.new(); say $a<foo>.perl

[10:31] *** dayangkun__ joined
[10:35] *** dayangkun_ left
[10:36] *** h4nnibal joined
[10:36] <h4nnibal> hi perlies

[10:37] <TiMBuS> alright so im completely wrong now

[10:37] <moritz> hi h4nnibal 

[10:38] <TiMBuS> my $imm = ($raw<user> || $raw<server>); my $who = $imm but role {  };

[10:38] <TiMBuS> still segfaults

[10:38] <TiMBuS> $imm.perl gives a match

[10:38] <TiMBuS> which is $raw<server>

[10:39] <TiMBuS> so. yeah..

[10:43] *** sirmacik joined
[10:43] <sirmacik> Hi there

[10:43] <TiMBuS> rakudo: my $f = 'fdas' ~~ /$<foo>='a'|$<bar>='b'/; say $f<foo>.clone

[10:44] <p6eval> rakudo 4bf132: OUTPUT«(timeout)»

[10:44] <TiMBuS> cool

[10:44] <TiMBuS> rakudo: my $f = 'fdas' ~~ /$<foo>='a'/; say $f<foo>.clone

[10:44] <p6eval> rakudo 4bf132: OUTPUT«(timeout)»

[10:44] <TiMBuS> theeere we have it

[10:45] <sirmacik> Maybe You know why rakudo gives me Segmentation Fault during compillation? http://wklej.org/id/509781/ and this is my modified PKGBUILD: http://wklej.org/id/509782/

[10:47] <TiMBuS> can't say i know anything about that

[10:47] <TiMBuS> what OS?

[10:47] <moritz> perl Configure.pl --parrot-config=/usr/bin/parrot_config --target=pir

[10:47] <sirmacik> Archlinux

[10:47] <moritz> wtf?

[10:47] <moritz> what's that --target doing there?

[10:48] <sirmacik> that's rather one of the lines I've tried

[10:48] <sirmacik> ;x

[10:48] <sirmacik> generally it stops on that error with or without any options

[10:49] <sirmacik> TiMBuS: what else do You want to know?

[10:49] <moritz> sirmacik: uhm, did it even successfully configure with that bogus option?

[10:50] <sirmacik> yes, but I think that this option is not the problem 

[10:50] <moritz> well, it surely indicates a problem

[10:50] <moritz> because Configure.pl is supposed to die on unknown options

[10:51] <moritz> seems it doesn't

[10:51] <moritz> hm

[10:51] *** wallberg joined
[10:51] <moritz> sirmacik: usually such segfaults come from "tainted" parrot environments

[10:51] <moritz> sirmacik: ie if you installed two parrot versions into the same location, and not all files where overridden

[10:51] <TiMBuS> yeah thats all i can think of. have you installed an old old parrot

[10:52] <moritz> sirmacik: or if a previous rakudo installation was there, and hasn't been cleaned out before or so

[10:52] <moritz> I haven't seen a rakudo build segfault in a clean environment for ages

[10:52] <TiMBuS> a libparrot.so floating around somewhere would also be a problem

[10:53] <sirmacik> I've fresh parrot-git 

[10:53] <sirmacik> an there wwasn't any rakudo before. It's quite fresh installation

[10:54] <jnthn> Any chance of getting a backtrace so we can see where it segfaults?

[10:54] <jnthn> It may or may not help...

[10:55] <sirmacik> ok, give me a second 

[10:57] <TiMBuS> this is why i now just use --gen-parrot =/

[10:59] *** am0c left
[11:01] *** SHODAN joined
[11:01] *** whiteknight joined
[11:05] *** icwiener joined
[11:16] <sirmacik> jnthn: this is log from the part with error http://wklej.org/id/509802/

[11:17] <moritz> can enums be monkey-patched?

[11:17] *** h4nnibal left
[11:18] *** wallberg left
[11:20] <jnthn> wtf, Parrot crashes when turning PIR into a bytecode file?!

[11:20] <jnthn> /usr/bin/parrot  -o src/gen/perl6.pbc src/Perl6/Compiler.pir

[11:21] <jnthn> That's...not something that's liable to fail. :/

[11:21] <jnthn> sirmacik: Any chance you can gdb /usr/bin/parrot and then r -o src/gen/perl6.pbc src/Perl6/Compiler.pir, and bt?

[11:21] <jnthn> Or similar with your preferred debugger... :)

[11:22] <sirmacik> gdb tells me that there are no debugging symbols in /usr/bin/parrot

[11:23] <tadzik> did you --debugging=0 parrot?

[11:23] <dalek> errors: 3d91060 | moritz++ | notes.pod:

[11:23] <dalek> errors: some non-conclusive thoughts on error classification

[11:23] <dalek> errors: review: https://github.com/perl6/errors/commit/3d9106077f

[11:23] <jnthn> Oh.

[11:25] <sirmacik> └─> /usr/bin/parrot -t -o src/gen/perl6.pbc src/Perl6/Compiler.pir 

[11:25] <sirmacik> error:imcc:loadlib directive could not find library `perl6_group' in file 'src/Perl6/Compiler.pir' line 10

[11:27] *** Axius joined
[11:29] <tadzik> has anyone tested Rakudo after Parrot's imcc_compreg_pmc merge?

[11:30] * moritz kinda hopes that the parrot folks have, prior to merging

[11:30] <moritz> doing that now...

[11:33] *** gbacon joined
[11:38] *** mtk left
[11:41] *** Su-Shee left
[11:44] <moritz> sirmacik: fwiw I also get some rakudo segfaults on newest parrot, though not in build

[11:44] <moritz> sirmacik: I recommend to use the parrot revision in the build/PARROT_REVISION file, then you should get a fairly stable rakudo

[11:45] <sirmacik> ok, thanks

[11:48] *** Su-Shee joined
[11:49] *** mtk joined
[11:54] *** Patterner left
[11:54] *** pmurias joined
[11:56] *** Psyche^ joined
[11:56] *** Psyche^ is now known as Patterner

[12:06] *** araujo joined
[12:09] <sirmacik>  moritz build with --gen-parrot has also failed with the following error http://wklej.org/id/509847/

[12:10] <moritz> sirmacik: what's the name of your make utility?

[12:10] <moritz> is it 'make' or 'gmake' or what?

[12:10] *** wallberg joined
[12:11] <sirmacik> make

[12:12] <sirmacik> GNU Make 3.81

[12:12] <moritz> hm

[12:16] *** Chillance joined
[12:19] *** risou joined
[12:28] *** MUILTFN joined
[12:34] *** donri joined
[12:46] *** gbacon left
[12:58] *** Tedd1 left
[12:59] <moritz> lolIblug: http://perlgeek.de/blog-en/perl-6/grant-report-errors-1.html

[12:59] <moritz> [Coke]: do you follow planetsix? or should I notify you separately when I blog grant progress reports?

[13:00] <jnthn> moritz++

[13:01] <donri> I read that as lolibug

[13:02] * moritz also bugs people

[13:04] * jnthn -> huskvarna

[13:05] *** Axius left
[13:12] *** Rotwang left
[13:19] *** lateau left
[13:24] *** dayangkun_ joined
[13:27] *** dayangkun__ left
[13:30] *** lateau joined
[13:35] *** birdwindupbird left
[13:42] *** dayangkun_ left
[13:48] *** lateau left
[13:50] *** noganex joined
[14:05] *** Mowah left
[14:09] *** satyavvd joined
[14:18] *** SHODAN left
[14:21] *** SHODAN joined
[14:25] *** JimmyZ joined
[14:26] <miso2217_> Am I missong something about the exemple on the regex backtracking in the Using Perl 6 book? :

[14:26] <miso2217_> perl 6: my regex word { \w+ [ \' \w+]? }; my regex dup { <word=&word> \W+ $<word> }; if 'strand and beach' ~~ m/<&dup>/ { say 'match'; } else { say 'no match'; }

[14:26] <miso2217_> perl6: my regex word { \w+ [ \' \w+]? }; my regex dup { <word=&word> \W+ $<word> }; if 'strand and beach' ~~ m/<&dup>/ { say 'match'; } else { say 'no match'; }

[14:26] <p6eval> rakudo 4bf132, niecza v4-47-gfffa4cd: OUTPUT«match␤»

[14:26] <p6eval> ..pugs: OUTPUT«*** ␤    Unexpected "word"␤    expecting ":" or "("␤    at /tmp/CbZLs64Xp0 line 1, column 10␤»

[14:26] <miso2217_> rakudo: my regex word { \w+ [ \' \w+]? }; my regex dup { <word=&word> \W+ $<word> }; if 'strand and beach' ~~ m/<&dup>/ { say 'match'; } else { say 'no match'; }

[14:26] <p6eval> rakudo 4bf132: OUTPUT«match␤»

[14:27] <miso2217_> rakudo: my regex word { :ratchet \w+ [ \' \w+]? }; my regex dup { <word=&word> \W+ $<word> }; if 'strand and beach' ~~ m/<&dup>/ { say 'match'; } else { say 'no match'; }

[14:27] <p6eval> rakudo 4bf132: OUTPUT«match␤»

[14:27] *** satyavvd left
[14:28] <miso2217_> the book says: "no match, doesn't match the 'and' in 'strand' without backtracking"

[14:28] <moritz> rakudo: my regex word { \w+ [ \' \w+]? }; my regex dup { :ratchet <word=&word> \W+ $<word> }; if 'strand and beach' ~~ &dup { say 'match' } else { say 'no match' }

[14:28] <p6eval> rakudo 4bf132: OUTPUT«match␤»

[14:28] <moritz> hm

[14:29] <miso2217_> rakudo: my token word { \w+ [ \' \w+]? }; my regex dup { <word=&word> \W+ $<word> }; if 'strand and beach' ~~ m/<&dup>/ { say 'match'; } else { say 'no match'; }

[14:29] <p6eval> rakudo 4bf132: OUTPUT«match␤»

[14:31] *** SHODAN left
[14:31] <moritz> rakudo: my regex word { \w+ [ \' \w+]? }; my regex dup { :ratchet <word=&word> \W+ $<word> }; if 'strand and beach' ~~ &dup { say 'match ', $/ } else { say 'no match' }

[14:31] <p6eval> rakudo 4bf132: OUTPUT«match and and␤»

[14:37] *** MayDaniel joined
[14:40] *** takadonet joined
[14:40] <takadonet> morning all

[14:42] <moritz> rakudo: my token word { \w+ [ \' \w+]? }; my regex dup { :ratchet <word=&word> \W+ $<word> }; if 'strand and beach' ~~ &dup { say 'match ', $/ } else { say 'no match' }

[14:42] <p6eval> rakudo 4bf132: OUTPUT«match and and␤»

[14:42] <moritz> rakudo: my token word { \w+ [ \' \w+]? }; my regex token { <word=&word> \W+ $<word> }; if 'strand and beach' ~~ &dup { say 'match ', $/ } else { say 'no match' }

[14:42] <p6eval> rakudo 4bf132: OUTPUT«Could not find sub &dup␤  in main program body at line 22:/tmp/LDgeMYyrW_␤»

[14:42] <moritz> rakudo: my token word { \w+ [ \' \w+]? }; my  token dup { <word=&word> \W+ $<word> }; if 'strand and beach' ~~ &dup { say 'match ', $/ } else { say 'no match' }

[14:43] <p6eval> rakudo 4bf132: OUTPUT«match and and␤»

[14:54] *** TheMartianGeek joined
[14:58] *** [particle]1 is now known as [particle]

[15:04] <miso2217_> moritz: may be the exemple is just bad. I don't know if the :ratchet modifier (and token keyword) should control also releasing charachers from the start of the string. The test from the synopses pases as I would it expet to pass: 

[15:04] <miso2217_> rakudo: if 'bazaar' ~~ /:ratchet a* a/ { say '3.1 match' } else { say '3.2 no match' }

[15:04] <p6eval> rakudo 4bf132: OUTPUT«3.2 no match␤»

[15:06] *** Tedd1 joined
[15:06] *** plobsing_ joined
[15:06] *** JimmyZ left
[15:08] *** plobsing left
[15:09] *** justatheory joined
[15:11] *** kiffin joined
[15:11] *** kiffin left
[15:18] *** Trashlord joined
[15:29] *** woosley1 left
[15:30] *** MayDaniel left
[15:46] *** masak joined
[15:46] <masak> hello zebras. greetings from .pl

[15:46] *** birdwindupbird joined
[15:48] <tadzik> oh, Poland?

[15:48] <masak> that's the one.

[15:48] <tadzik> where are you?

[15:49] <masak> kraków

[15:49] <masak> how about you? :)

[15:49] <tadzik> oh cool. Right now Izabelin, just outside Warsaw

[15:49] <tadzik> and usually it's Warsaw

[15:49] <masak> thought so.

[15:49] <tadzik> business time?

[15:49] <masak> yes. I'm here for a three-day CQRS course.

[15:50] <masak> (CQRS is a silly acronym for a deeply cool concept.)

[15:50] *** nymacro left
[15:51] *** Chillance left
[15:52] <tadzik> quick, a contest for the best match!

[15:53] <tadzik> Cows Quite Rove Sweets. Hrm

[15:53] <masak> Can 'Quit' Really Save?

[15:54] <sirmacik> "CentOS 5.6 nareszcie wydany" ;F

[15:55] <tadzik> ww? :)

[15:55] <sirmacik> oh, wrong channel... sorry ;x

[15:55] <tadzik> (:

[15:55] <masak> phenny: "CentOS 5.6 nareszcie wydany"?

[15:55] <phenny> masak: "CentOS 5.6 finally released" (pl to en, translate.google.com)

[15:55] <masak> 'wydany' == 'out-given'?

[15:55] <sirmacik> rather released

[15:56] <masak> right. I'm thinking of the etymology.

[15:56] <tadzik> close

[15:56] <tadzik> you can be "wydany" as a wife

[15:56] <tadzik> so you become a wife, you're "wydany za mąż"

[15:56] <tadzik> phenny: "wydany za mąż"?

[15:56] <phenny> tadzik: "issued for husband" (pl to en, translate.google.com)

[15:57] <tadzik> notmuch

[15:57] <masak> 'issued' and 'released' are sort of synonyms.

[15:59] <tadzik> sirmacik: how are the packages?

[16:00] <sirmacik> I have succedeed with building rakudo-git with stable parrot package from Arch's Community repository

[16:00] <masak> \o/

[16:00] <sirmacik> it was failing with --gen-parrot and parrot-git ;F

[16:03] <masak> that's odd.

[16:05] *** larsen_ left
[16:06] *** larsen joined
[16:08] *** jrockway left
[16:08] *** sorear left
[16:08] *** xinming left
[16:08] *** felher left
[16:08] *** rblackwe left
[16:08] *** mathw left
[16:08] *** cotto_work2 left
[16:10] *** jrockway joined
[16:10] *** sorear joined
[16:10] *** xinming joined
[16:10] *** felher joined
[16:10] *** rblackwe joined
[16:10] *** mathw joined
[16:10] *** cotto_work2 joined
[16:10] *** sjohnson joined
[16:10] *** phenny joined
[16:10] *** ronoreck joined
[16:10] *** wolverian joined
[16:10] *** jql joined
[16:10] *** mdxi joined
[16:10] *** kolibrie_ joined
[16:10] *** jasonmay joined
[16:13] * masak is thinking of where to go eat

[16:13] <masak> tadzik: got any suggestions?

[16:13] <tadzik> masak: nah, I'm out of ideas

[16:13] <tadzik> oh, about eating

[16:14] <tadzik> hmm, I don't know anything Kraków-specific

[16:14] <masak> ok. :)

[16:14] <tadzik> hmm, I'm wondering

[16:14] <masak> guess I'll just go to the main square and see what's on offer.

[16:15] <tadzik> you can try gastronauci.pl

[16:15] <tadzik> that's a community of people liking to eat and rating restaurants

[16:15] <masak> ooh

[16:15] <masak> I do love these: http://en.wikipedia.org/wiki/Pierogi

[16:15] <tadzik> :)

[16:15] <masak> so if I found such a place, I'd be happy.

[16:15] <tadzik> masak: oh, they're everywhere

[16:15] <tadzik> http://www.gastronauci.pl/restauracje/krakow

[16:16] <masak> \o/

[16:16] <tadzik> you can easily buy those in a supermarket, put on a frying pan and they're actually good

[16:16] <masak> Poland. I could totally live here.

[16:16] <masak> well, I'm in a hotel, so no frying pans nearby.

[16:16] <tadzik> I think you can find "Pierogarnia" quite easily

[16:16] <tadzik> phenny: "pierogarnia"?

[16:16] <phenny> tadzik: Language guessing failed, so try suggesting one!

[16:16] <tadzik> phenny: I thought so

[16:16] <tadzik> masak: a Pierogi-specific restaurant, like a Pizzeria

[16:17] <masak> a "pirogeria" :)

[16:17] <tadzik> masak: you can check a "pierogarnia" combobox on that site I gave you

[16:17] <masak> excellent. I'm glad I asked.

[16:18] <masak> and chance things are open on a Sunday evening?

[16:18] <moritz> miso2217_: point is that every regex, if ratcheting or not, tries every start position until a match is found

[16:18] <tadzik> moritz: http://www.gastronauci.pl/7294-pierogarnia-zapiecek-krakow looks good

[16:18] <tadzik> masak: I'm quite certain most of those are open

[16:18] <moritz> miso2217_: the example doesn't need to backtrack to match

[16:19] *** xinming left
[16:19] <masak> "#perl6: helps you find a place to eat"

[16:19] <masak> thanks, guys.

[16:19] <tadzik> "Poland. You're welcome"

[16:19] <tadzik> phenny: "gościnność"?

[16:19] <phenny> tadzik: "hospitality" (pl to en, translate.google.com)

[16:20] *** xinming joined
[16:20] <tadzik> I think hospitality is known to be a good side of Poland

[16:20] <tadzik> well, they say so :)

[16:20] <masak> except for the people sitting in information desks. :(

[16:21] <masak> both the girl at the airport and the woman at the train station were clearly uninterested in assisting a tourist.

[16:22] <masak> oh well. I found the hotel without much trouble.

[16:22] <tadzik> oh, the white-collar people happen to be annoying sometimes

[16:23] *** eternaleye_ joined
[16:23] <masak> I wondered if it was because I was speaking English. that generally gives mixed results around here.

[16:24] <moritz> try with Swedish next time :-)

[16:24] * masak puts on a chef hat and sprinkles flour all over the place

[16:25] <masak> bork bork bork!

[16:25] * masak --> nommery

[16:26] *** mtk left
[16:26] *** risou_ joined
[16:26] *** eternaleye left
[16:27] *** risou left
[16:27] *** Helios` left
[16:27] *** chitragupt left
[16:27] *** _jaldhar joined
[16:27] *** jaldhar left
[16:27] *** Helios` joined
[16:28] <miso2217_> moritz: strange, this one works: if 'aaaab ab' ~~ / :ratchet (<[ab]>* ab) \W+ $0 /  { say '3.1 match:', $/ } else { say '3.2 no match' }

[16:28] <miso2217_> rakudo: if 'aaaab ab' ~~ / :ratchet (<[ab]>* ab) \W+ $0 /  { say '3.1 match:', $/ } else { say '3.2 no match' }

[16:28] <p6eval> rakudo 4bf132: OUTPUT«3.2 no match␤»

[16:30] <moritz> rakudo: say 'aaab' ~~ /<[ab]>* ab/; # should match

[16:30] *** chitragupt joined
[16:31] <moritz> rakudo: say 'aaab' ~~ /:ratchet <[ab]>* ab/; # shouldn't match

[16:31] <p6eval> rakudo 4bf132: OUTPUT«aaab␤»

[16:31] <p6eval> rakudo 4bf132: OUTPUT«␤»

[16:31] <moritz> rakudo: say so 'aaab' ~~ /:ratchet <[ab]>* ab/; # shouldn't match

[16:31] <p6eval> rakudo 4bf132: OUTPUT«Bool::False␤»

[16:32] <moritz> rakudo: say so 'aaab ab' ~~ /:ratchet (a* b) \s $0/; # matches for the same reason as above

[16:32] <p6eval> rakudo 4bf132: OUTPUT«Bool::True␤»

[16:34] *** MayDaniel joined
[16:34] *** kaare_ joined
[16:37] *** amkrankruleuen left
[16:37] *** amkrankruleuen joined
[16:46] *** am0c joined
[16:57] <takadonet> i got a lazy grammar!

[16:59] <moritz> \o/

[16:59] * moritz was lazy and let takadonet write the lazy grammar :-)

[17:00] <takadonet> had to interface directly with parrot but I got somewhat what I wanted

[17:00] *** mdxi left
[17:02] *** jql left
[17:03] *** mdxi joined
[17:04] *** phenny left
[17:05] *** sorear left
[17:06] *** masak left
[17:10] *** Zapelius_ joined
[17:10] *** __rnddim__ joined
[17:10] *** MayDaniel_ joined
[17:11] *** Zapelius left
[17:11] *** lue left
[17:11] *** szbalint left
[17:12] *** yahooooo joined
[17:13] *** szbalint joined
[17:14] *** MayDaniel left
[17:14] *** sorear joined
[17:15] *** rgrau joined
[17:19] *** p6eval joined
[17:19] *** ChanServ sets mode: +v p6eval

[17:20] *** SHODAN joined
[17:21] <miso2217_> Ok, si is there any difference between the following two?:

[17:21] <miso2217_> rakudo: if 'aaaab ab' ~~ / :ratchet (<[ab]>* ab) \W+ $0 /  { say '3.1 match:', $/ } else { say '3.2 no match' }

[17:21] <p6eval> rakudo 4bf132: OUTPUT«3.2 no match␤»

[17:21] <miso2217_> rakudo: my regex word3 { :ratchet <[ab]>* }; my regex dup3 { :ratchet <word3=&word3> \W+ $<word3> }; if 'aaaab ab' ~~ m/<&dup3>/ { say '4.1 match:', $/; } else { say '4.2 no match'; }

[17:21] <p6eval> rakudo 4bf132: OUTPUT«4.1 match:ab ab␤»

[17:23] <moritz> miso2217_: (<[ab]>* ab) doesn't match under :ratchet

[17:23] <moritz> miso2217_: because the <[ab]>+ uses up the 'aaaab', and nothing left for the 'ab' to match

[17:25] <moritz> it doesn't even get to the \W+

[17:27] <miso2217_> moritz: there is sitll ' ab' left for matching no?

[17:28] *** MayDaniel_ left
[17:28] <miso2217_> moritz: I'm matching against 'aaaab ab' not just 'aaaab'

[17:29] *** masak joined
[17:30] <moritz> miso2217_: yes, but there's nothing in the regex that could match the ' '

[17:30] <masak> mmm, pierogi...

[17:30] <moritz> miso2217_: the <[ab]>* matches 'aaaab'. Then the 'ab' of the regex is matched against the ' ab' of the string

[17:30] <moritz> miso2217_: since it's implicitly anchored, it doesn't match

[17:31] <masak> tadzik: what're you using a lazy grammar for?

[17:32] <tadzik> masak: I'm not

[17:34] <miso2217_> rakudo: if 'aaaab ab' ~~ / :ratchet (<[ab]>*) \W+ $0 /  { say '3.1 match:', $/ } else { say '3.2 no match' }

[17:34] <p6eval> rakudo 4bf132: OUTPUT«3.1 match:ab ab␤»

[17:35] *** birdwindupbird left
[17:35] <masak> tadzik: oops, sorry. mis-tab.

[17:35] <masak> takadonet: what're you using a lazy grammar for? FASTA?

[17:35] <miso2217_> moritz: ok I see, my mistake. So should the previous one match or not under ratchet?

[17:36] <moritz> miso2217_: it should match, but not if it's part of another regex

[17:37] <moritz> miso2217_: there's a fundamental asymmetry between calling a regex directly, and calling it from within another regex

[17:38] <moritz> miso2217_: in the first case there's an always-backtracking .*? implied at the front

[17:38] <miso2217_> moritz: ah ok. So what about the one from the book?

[17:38] <miso2217_> rakudo: my regex word3 { :ratchet <[ab]>* }; my regex dup3 { :ratchet <word3=&word3> \W+ $<word3> }; if 'aaaab ab' ~~ m/<&dup3>/ { say '4.1 match:', $/; } else { say '4.2 no match'; }

[17:39] <p6eval> rakudo 4bf132: OUTPUT«4.1 match:ab ab␤»

[17:41] <moritz> miso2217_: that's probably explained wrongly (or less than awesome) in the book

[17:43] <miso2217_> moritz: hmm... the book says it shouldn't match and it matches, this is clearly less than awesome :-)

[17:47] *** Mowah joined
[17:50] *** molaf left
[17:53] <moritz> agreed

[17:53] *** rgrau left
[17:53] *** araujo left
[17:54] *** risou_ left
[17:57] *** Mowah left
[17:58] <miso2217_> so this is a book issue, the Backtracking chapter requires a working example?

[17:58] <moritz> yes

[17:58] <miso2217_> rakudo: my regex word { \w+ }; my regex dup { <word=&word> \W+ $<word> }; if 'strand and beach' ~~ m/<&dup>/ { say 'match ', $/; } else { say 'no match'; } # the book says: no match, doesn't match the 'and' in 'strand' without backtracking

[17:58] <p6eval> rakudo 4bf132: OUTPUT«match and and␤»

[17:59] <miso2217_> moritz: Ok, thx. for your time.

[17:59] *** Chillance joined
[18:00] *** Chillance left
[18:00] <moritz> miso2217_: thank you for checking the book

[18:02] <pmurias> what's the state of the book?

[18:02] *** Chillance joined
[18:02] *** envi left
[18:02] <miso2217_> pmurias: The best available doc on Perl 6, I would say.

[18:03] <moritz> and LTA

[18:05] * moritz has difficulties finding a real world example of a regex that needs backtracking, even if carefully crafted

[18:07] *** molaf joined
[18:07] <pmurias> is there a kindle edition for the book?

[18:07] <dalek> book: 4507df3 | moritz++ | src/regexes.pod:

[18:07] <dalek> book: [regex] add a note about a wrong example, found by miso2217_++

[18:07] <dalek> book: review: https://github.com/perl6/book/commit/4507df3c77

[18:07] <moritz> pmurias: we currently only have xhtml (though headers are missing) and pdf

[18:08] <miso2217_> pmurias: kindle reeds pdf

[18:08] <sorear> good * #perl6

[18:08] <wolverian> you don't really want to read pdf on a non-dx kindle. the screen is a bit too small.

[18:08] <pmurias> sorear: hi

[18:08] *** uniejo joined
[18:09] * pmurias has a non-dx kindle

[18:09] * moritz has a non-kindle

[18:09] *** molaf left
[18:09] <miso2217_> pmurias: ah, a non dx won't be ok for A4/letter format

[18:09] <masak> greetings sorear

[18:10] <moritz> the build system of the book accepts arbitrary page dimensions

[18:10] <moritz> I just don't know how the output will look like

[18:10] *** xaphod joined
[18:11] <moritz> ok, speaking of the book

[18:11] <moritz> we wanted another chapter on statements (+ maybe expressions)

[18:12] <moritz> what should go into that chapter?

[18:13] *** ymasory joined
[18:13] *** alester joined
[18:15] <masak> moritz: that's feels like a question without sufficient context.

[18:15] <masak> why do we want another chapter on statements and maybe expressions?

[18:15] <masak> what prompted the need?

[18:15] <moritz> masak: I don't. You wanted, as well as others.

[18:16] <masak> huh :)

[18:16] * masak doesn't remember conversations from day to day anymore... :/

[18:17] <moritz> masak: more like 'from year to year'

[18:17] <masak> ah. I feel better now.

[18:20] <moritz> what was #phasers called before?

[18:20] *** icwiener left
[18:21] *** icwiener joined
[18:21] <tadzik> perl6sketch?

[18:21] <tadzik> Not that I remember :)

[18:21] *** _sri joined
[18:21] <moritz> I can't find it in the logs, maybe we discussed it at YAPC::EU

[18:21] <tadzik> aaand, remember about the book-ideas

[18:22] *** ymasory left
[18:23] *** ymasory joined
[18:26] <pmurias> sorear: what sort of analysis would niecza's .net backend most benefit from?

[18:27] <sorear> moritz: #rakudosketch was a used for a while

[18:28] <sorear> IIRC

[18:28] <moritz> sorear: thanks

[18:28] *** _jaldhar left
[18:28] *** _jaldhar joined
[18:29] *** hudnix left
[18:30] <pmurias> sorear: container elimination, type inference, checking if &take is used so we can drop CPS?

[18:31] <sorear> CPS-dropping is unfeasable because it requires global analysis

[18:32] *** phenny joined
[18:33] <sorear> type inference belongs in the middle/front end, because 90% of its value is catching type errors at compile time

[18:33] <sorear> so I guess that leaves container elimination

[18:35] *** mj41 left
[18:39] <pmurias> what are the things that make niecza slower than C#?

[18:39] *** imamelia joined
[18:40] <imamelia> Hey, I need a bit of help with the Perl Package Manager.

[18:40] <masak> imamelia: just keep in mind that this is #perl6, not #perl5.

[18:41] <imamelia> ...Okay.

[18:41] *** TheMartianGeek left
[18:41] *** imamelia is now known as TheMartianGeek

[18:41] <TheMartianGeek> Well, I used it only once before, and I've forgotten how to add new modules.

[18:41] <pmurias> sorear: other than containers, CPS and dynamic typing

[18:41] <TheMartianGeek> (And apparently forgotten to change my nick...)

[18:41] <pmurias> TheMartianGeek: why not ask on #perl?

[18:41] <TheMartianGeek> Oop, I"ll be back in a minute...

[18:52] <sorear> pmurias: boxing, generic calling conventions, ...

[18:58] *** jql joined
[19:00] *** am0c left
[19:02] *** ymasory left
[19:04] *** ymasory joined
[19:05] <pmurias> sorear: what has the biggest impact?

[19:08] *** masak left
[19:08] <sorear> dunno

[19:09] *** masak joined
[19:10] <masak> Niecza has ruined my ability to spell 'Nietzsche'.

[19:13] *** Alias_ joined
[19:15] *** Alias left
[19:19] *** ymasory left
[19:25] *** alester left
[19:30] *** s1n left
[19:30] *** silent_h_ joined
[19:42] *** SHODAN left
[19:45] *** ymasory joined
[19:46] <tadzik> :)

[19:52] *** zer0o joined
[19:54] <dalek> book: e0c859e | moritz++ | src/multi-dispatch.pod:

[19:54] <dalek> book: [mmd] MAIN example

[19:54] <dalek> book: review: https://github.com/perl6/book/commit/e0c859e73b

[19:55] *** __rnddim__ is now known as lue

[19:56] <lue> hello world! o/

[19:56] <tadzik> hello lue

[19:56] <TheMartianGeek> Hi.

[19:56] <sorear> Hello lue.

[19:58] *** proller joined
[19:59] <masak> hellue!

[20:00] <tadzik> masak: how are Pierogis?

[20:00] <masak> they were all that I wished for, and more. :)

[20:00] <colomon> where are there pierogis?

[20:00] <TheMartianGeek> Well, I can't figure this out.

[20:00] <TheMartianGeek> The more programming I do, the more I start to hate Windows...

[20:01] <masak> colomon: in Kraków.

[20:01] <moritz> TheMartianGeek: was the same for me

[20:01] <masak> (for example)

[20:01] <colomon> alas, that's a bit far for me to make it there for dinner.  :(

[20:01] <masak> TheMartianGeek: the more programming I do, the less Windows seems to matter to me.

[20:01] <masak> colomon: but rest assured that I would welcome you with open arms :)

[20:02] <colomon> not if you knew how many pierogis I'd eat.  I love those things.  ;)

[20:02] <masak> I bought mine.

[20:03] <masak> I'd assume that if you ate a lot, you'd pay correspondingly :P

[20:05] <TheMartianGeek> I suppose I couldn't just move Gtk2.pm and the files that go with it into C:\Perl64\site\lib...

[20:05] <pmurias> masak: you are in Kraków?

[20:05] <masak> pmurias: yes! where are you?

[20:05] <pmurias> Wrocław

[20:06] <pmurias> masak: what brought you to Kraków?

[20:06] <masak> pmurias: a three-day course for $work.

[20:07] <masak> pmurias: ah, Wrocław. that's what I thought.

[20:07] * moritz hopes it tastes good

[20:07] <masak> moritz: :P

[20:21] <sorear> moritz: I'm looking at perl6/errors now; did you ever see STD.pm6 around line 5980, where 'Confused' is s|||'d into a bunch of different messages?

[20:22] <moritz> sorear: no, thanks for pointing it out

[20:24] <sorear> I think EX::Matcher can be written like when :message<Foo> & :subsystem<bar> { ... }

[20:24] <masak> it's 'X::', no?

[20:25] <moritz> let's not bikeshed about that :-)

[20:25] *** silent_h_ left
[20:25] <moritz> sorear: the matcher isn't the problem - it can either be a junction or a class with an overriden .ACCEPTS

[20:26] <masak> no, I'm not willing to bikeshed on that. just seem to recall that it was, according to some Apocalypse or other.

[20:26] <moritz> sorear: the big problem is really how to presen the category values

[20:27] <moritz> sorear: for example if I represent the list of phasers as an enum, and soembody adds more phasers, can he augment that enum?

[20:30] <dalek> errors: b3bf1e3 | moritz++ | error-list.txt:

[20:30] <dalek> errors: missing erros messages from STD, sorear++ for pointing them out

[20:30] <dalek> errors: review: https://github.com/perl6/errors/commit/b3bf1e385b

[20:32] *** TheMartianGeek left
[20:35] *** kaare_ left
[20:35] <moritz> phenny: "vydayutsya"_

[20:35] <moritz> phenny: "vydayutsya"?

[20:35] <phenny> moritz: Language guessing failed, so try suggesting one!

[20:35] <moritz> phenny: "vydayutsya" ru?

[20:38] <sorear> phenny: ru:"vydayutsya"?

[20:38] <sorear> phenny: "ru:vydayutsya"?

[20:38] <phenny> sorear: "ru: vydayutsya" (ru to en, translate.google.com)

[20:38] <masak> :)

[20:39] *** takadonet1 joined
[20:39] <jnthn> phenny: видаюця?

[20:39] <jnthn> phenny: "видаюця"?

[20:39] <phenny> jnthn: "vidayutsya" (ru to en, translate.google.com)

[20:39] <jnthn> :)

[20:39] <dalek> errors: 7862889 | moritz++ | error-list.txt:

[20:39] <dalek> errors: [error-list.txt] add quotes to some error messages, more errors, error message modifiers

[20:39] <dalek> errors: review: https://github.com/perl6/errors/commit/786288932c

[20:40] <jnthn> phenny: "выдаюця"?

[20:40] <phenny> jnthn: "vydayutsya" (ru to en, translate.google.com)

[20:40] <jnthn> heh...

[20:40] <jnthn> There's probably a few more permutations. The joy of translit... :)

[20:41] <sorear> is it a proper name?

[20:41] <jnthn> No idea :)

[20:41] *** takadonet left
[20:41] <jnthn> It's not a word I recognize.

[20:41] *** MayDaniel joined
[20:41] <moritz> sorear: somebody in #mojo used it like a verb

[20:42] <sorear> phenny: "en:vydayutsya"?

[20:42] <phenny> sorear: "and: vydayutsya" (nl to en, translate.google.com)

[20:42] <moritz> sorear: but that doesn't mean it means anything :-)

[20:42] <masak> if it's a verb, then it's a reflexive one.

[20:42] <sorear> phenny: "en:ru:vydayutsya"?

[20:42] <phenny> sorear: "en: ru: vydayutsya" (ru to en, translate.google.com)

[20:43] <sorear> sbp: can phenny tanslatate waay from english?

[20:43] *** MayDaniel left
[20:48] *** TheMartianGeek joined
[20:48] <sbp> phenny: en fr "tell sorear that yes, she can!"?

[20:48] <phenny> sbp: "sorear dire que oui, elle peut!" (en to fr, translate.google.com)

[20:49] *** xinming left
[20:49] *** xinming joined
[20:50] <moritz> (the result doesn't sound quite correct, but that's not phenny's fault)

[20:50] <moritz> phenny: "sorear dire que oui, elle peut!"?

[20:50] <phenny> moritz: "sorear say that yes it can!" (fr to en, translate.google.com)

[20:50] <moritz> that's what I thought

[20:51] <masak> phenny: "dit a sorear que oui, elle peut!"?

[20:51] <phenny> masak: "sorear told that yes it can!" (fr to en, translate.google.com)

[20:51] * masak fails French :P

[20:51] <masak> phenny: "dis a sorear que oui, elle peut!"?

[20:51] <phenny> masak: "sorear say that a yes, she can!" (fr to en, translate.google.com)

[20:51] <moritz> it confuses object and subject

[20:51] <sorear> also imperative and indicative

[20:52] <masak> maybe indirect objects are tricky for it.

[20:52] <moritz> indirect object syntax is tricky for me too

[20:52] <masak> :)

[20:52] <moritz> (both in p5 and p6, for that matter)

[20:53] <tadzik> indirect object syntax in 6?

[20:53] <lue> .oO(Je parles un peu français parce que j'ai un classe de français à l'école.)

[20:53] <lue> er, s/parles/parle/

[20:53] <moritz> std: new :Int

[20:53] <p6eval> std 4608239: OUTPUT«ok 00:01 118m␤»

[20:53] <moritz> same as Int.new

[20:53] * moritz hates it

[20:53] <tadzik> . o O ( moi capote ein buton, marchon )

[20:53] <masak> o.O

[20:53] <tadzik> or whatever, I know fonetics :)

[20:53] <sbp> no, object and subject confuses it

[20:53] <tadzik> oh wow

[20:54] <tadzik> rakudo: say sqrt :5

[20:54] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Malformed radix number at line 22, near ""␤»

[20:54] <moritz> wait

[20:54] <masak> no-one said Rakudo implements it :)

[20:54] <moritz> shouldn#t the invocant colon come after it?

[20:54] <masak> btw, I doubt that the colon can really be there.

[20:54] <moritz> std: new Int:

[20:54] <p6eval> std 4608239: OUTPUT«ok 00:01 121m␤»

[20:54] <masak> new Int:

[20:54] <masak> yes.

[20:54] <moritz> std: new

[20:54] <p6eval> std 4608239: OUTPUT«ok 00:01 117m␤»

[20:54] <tadzik> pffff

[20:54] <masak> huh.

[20:54] <moritz> std: foo

[20:54] <p6eval> std 4608239: OUTPUT«[31m===[0mSORRY![31m===[0m␤Undeclared routine:␤ 'foo' used at line 1␤Check failed␤FAILED 00:01 117m␤»

[20:54] <masak> stdbug?

[20:54] <moritz> new is ok, foo not?

[20:55] <moritz> std: foo 5:

[20:55] <p6eval> std 4608239: OUTPUT«ok 00:01 120m␤»

[20:55] <moritz> *that's* indirect object syntax

[20:55] * moritz still hates it

[20:55] <masak> :)

[20:55] <masak> then don't use it.

[20:55] <sorear> niecza: say chars 12:;

[20:55] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Invocant handling is NYI at /tmp/q8GHI45Yz0 line 1:␤------> [32msay chars 12:[33m⏏[31m;[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 388 (CORE die @ 2)␤  at

[20:55] <p6eval> ../home/p6eval/niecza/src/STD.pm6 line 1141 (…

[20:55] <sorear> aww.

[20:55] <tadzik> aciidentally remove it from the spec :)

[20:55] <sorear> I think it used to work...

[20:56] <masak> moritz: it's partly for emulating the 'print STDOUT @stuff' thing.

[20:56] <masak> moritz: that becomes 'print $*OUT: @stuff' in p6.

[20:56] <moritz> masak: I know. I still hate it.

[20:56] <moritz> tadzik: he, I could try to temporarily stop email notifications and dalek, and patch it out :-)

[20:57] *** colomon left
[20:57] <sorear> moritz: hide it in a branch marge, nobody reads those

[20:57] *** imamelia joined
[20:57] <moritz> sorear: :-)

[20:57] <tadzik> :)

[20:57] <masak> go for it.

[20:57] <moritz> it seems nobody here is particularly attached to it, right?

[20:57] *** TheMartianGeek left
[20:57] *** imamelia is now known as TheMartianGeek

[20:58] <tadzik> no worries, we will provide cover fire

[20:58] <tadzik> quick! break rakudo!

[20:58] <masak> I'm not attached to it. but I would perhaps reserve judgement until we have tried it out a little.

[20:58] <moritz> well, let's wait for a veto from TimToady -- if that doesn't come, I'll happily remove it next week

[20:58] <masak> hating something on paper is just as bad as liking something on paper :)

[20:59] <masak> but I'm generally happy about parts of the spec that no-one cares for disappering. :)

[20:59] <moritz> masak: I've seen TimToady use it as input to std here on #perl6

[21:00] <moritz> masak: it always took me quite some time to parse it correctly myself

[21:01] <lue> What is this indirect object syntax for, anyway?

[21:01] <masak> lue: see my explanation above.

[21:01] <masak> lue: it's at least partly for emulating p5 indirect object syntax.

[21:01] <masak> and p5 indirect object syntax is generally not well-liked.

[21:02] <tadzik> to be gentle

[21:02] <moritz> in fact people have gone great length to remove all uses of it from the core docs, except in those spots where the syntax is explained

[21:02] <masak> but p6 removes the reason for not liking it in p5, namely that things get hard to parse (by the parser).

[21:03] <lue> was there ever a reason for it besides another WTDI?

[21:03] <moritz> masak: it was never about the parser, always about humans

[21:03] <moritz> masak: the parsing rules are well defined, even if a bit odd

[21:04] <masak> no, even the parser gets flakey due to things like module load order.

[21:04] <masak> see mst's post about it.

[21:04] <moritz> foo bar $stuff  # parsed as  bar->foo($stuff) if bar is not predeclared as a function

[21:05] *** benabik left
[21:05] <tadzik> bleh

[21:06] <masak> exactly.

[21:06] <tadzik> heh, I remember this indirect method calls examlep

[21:07] <tadzik> my pal fires up `perl` in the shell, of course nothing happens, so he writes `perl` once again, then `prel` once again

[21:07] <tadzik> after my "press ^D" we see "method prel not found for invocant of class perl"

[21:07] <tadzik> or some other way around

[21:07] <masak> :(

[21:07] <masak> we could really use a good REPL there instead of... nothing.

[21:08] <tadzik> I actually fired -MO=Deparse to see wtf

[21:08] *** frooh left
[21:08] *** frooh joined
[21:09] *** mikemol left
[21:09] <moritz> I don't like the case    foo (some lengthy expression):

[21:09] <moritz> where the : in the end changes the meaning of the leading foo

[21:10] <tadzik> yeah, disturbing

[21:11] <masak> there's a similar garden-path problem in the Chinese language.

[21:11] <masak> a single 的 somewhere halfway down a sentence can change the whole reading of the sentence so far.

[21:12] <masak> it's especially clear when you're doing real-time translation while reading text.

[21:12] *** TiMBuS joined
[21:12] <masak> I hope I didn't just give TimToady a linguistic reason to keep the feature :P

[21:16] *** y3llow_ joined
[21:17] *** pothos_ joined
[21:18] *** MUILTFN left
[21:18] *** pothos left
[21:18] *** pothos_ is now known as pothos

[21:19] *** y3llow left
[21:19] *** y3llow_ is now known as y3llow

[21:19] <masak> 'night, #perl6

[21:19] *** masak left
[21:19] <lue> goodnight masak o/

[21:20] *** ggoebel joined
[21:23] *** bacek left
[21:25] *** dual left
[21:29] *** Rotwang joined
[21:35] *** dual joined
[21:36] *** _jaldhar left
[21:36] *** proller left
[21:45] *** PacoLinux left
[21:50] *** bacek joined
[21:52] <lue> moritz: in error-list.txt (in the errors repo), did you mean obsolete on line 30 (instead of obsolescent)?

[21:56] *** tylercurtis left
[21:56] *** sivoais left
[21:56] *** tylercurtis joined
[21:56] *** sivoais joined
[22:05] <miso2217_> phenny: выдаются

[22:05] <miso2217_> phenny: "выдаются"?

[22:05] <phenny> miso2217_: "issued" (ru to en, translate.google.com)

[22:05] *** Rotwang left
[22:07] <miso2217_> moritz: I think you were trying to translate this russian word: "выдаются"

[22:18] *** donri left
[22:43] *** icwiener left
[22:59] *** sufrosti1o left
[22:59] *** sufrostico joined
[23:07] *** donri joined
[23:11] *** dayangkun_ joined
[23:11] *** dayangkun__ joined
[23:14] *** dayangkun joined
[23:15] *** dayangkun_ left
[23:16] *** dayangkun__ left
[23:22] *** risou joined
[23:25] *** pmurias left
[23:30] *** nymacro joined
[23:32] <miso2217_> rakudo: if "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18" ~~ m/^^ [.*? ','] ** 14 P / { say "\t match"; } else { say "\t no match"; }

[23:32] <p6eval> rakudo 4bf132: OUTPUT«(timeout)»

[23:32] <miso2217_> rakudo: if "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18" ~~ m/:ratchet ^^ [.*? ','] ** 14 P / { say "\t match"; } else { say "\t no match"; }

[23:32] <p6eval> rakudo 4bf132: OUTPUT«   no match␤»

[23:33] <sorear> What's "P" for?

[23:34] <miso2217_> moritz: An idea for the Backtracking paragraph of the book, (taken from: http://www.regular-expressions.info/catastrophic.html)

[23:35] <miso2217_> sorear: it's only to demonstrate the Backtracking in the book, the current example is bad.

[23:35] <miso2217_> moritz: if "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18" ~~ m/^^ [.*? ','] ** 14 P / { say "\t match"; } else { say "\t no match"; }

[23:36] *** imamelia joined
[23:36] <miso2217_> moritz: if "1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18" ~~ m/:ratchet ^^ [.*? ','] ** 14 P / { say "\t match"; } else { say "\t no match"; }

[23:36] *** imamelia left
[23:36] *** imamelia joined
[23:37] *** TheMartianGeek left
[23:37] *** imamelia is now known as TheMartianGeek

[23:41] *** risou_ joined
[23:43] *** risou left
[23:44] <sorear> niecza: my $i; "aaaaaaaaa" ~~ / [a || a]* { $i++ } <!>/; say "Tried to match $i ways@

[23:44] <sorear> niecza: my $i; "aaaaaaaaa" ~~ / [a || a]* { $i++ } <!>/; say "Tried to match $i ways"

[23:44] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Any()Unable to parse double quotes at /tmp/xJZmcqFZzU line 1:␤------> [32maaa" ~~ / [a || a]* { $i++ } <!>/; say "[33m⏏[31mTried to match $i ways@[0m␤Couldn't find final '"'; gave up at /tmp/xJZmcqFZzU line 1 (EOF):␤------> [32mi++

[23:44] <p6eval> ..} <!>/; say "…

[23:44] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«Tried to match 2036 ways␤»

[23:44] <sorear> niecza: my $i; "aaaaaaaaaaaa" ~~ / [a || a]* { $i++ } <!>/; say "Tried to match $i ways"

[23:44] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«Tried to match 16369 ways␤»

[23:44] <sorear> niecza: my $i; "aaaaaaaaaaaaaaaaa" ~~ / [a || a]* { $i++ } <!>/; say "Tried to match $i ways"

[23:44] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«Tried to match 524268 ways␤»

[23:45] <sorear> niecza: my $i; "aaaaaaaaaaaaaaaaaaaaa" ~~ / [a || a]* { $i++ } <!>/; say "Tried to match $i ways"

[23:45] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«(timeout)»

[23:45] <sorear> niecza: my $i; "aaaaaaaaaaaaaaaaaaaa" ~~ / [a || a]* { $i++ } <!>/; say "Tried to match $i ways"

[23:45] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«(timeout)»

[23:45] <sorear> niecza: my $i; "aaaaaaaaaaaaaaaaaaa" ~~ / [a || a]* { $i++ } <!>/; say "Tried to match $i ways"

[23:45] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«Tried to match 2097130 ways␤»

[23:45] <sorear> miso2217_: perhaps useful

[23:49] *** hudnix joined
[23:51] *** risou_ left
