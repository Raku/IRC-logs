[00:00] *** colomon left
[00:04] *** whiteknight joined
[00:07] *** jevin joined
[00:16] *** lue joined
[00:20] <sorear> good * #perl6

[00:48] <sorear> how much demand is there for .WHY?

[00:57] <sorear> phenny: tell masak Change the spec of BUILD, then see if anyone rises to defend the old way on p6l.

[00:57] <phenny> sorear: I'll pass that on when masak is around.

[01:04] *** Sarten-X left
[01:04] *** risou left
[01:05] *** risou joined
[01:12] *** jjore joined
[01:12] *** Sarten-X joined
[01:18] *** whiteknight left
[01:24] <TimToady> .oO("Let's you and him fight.")

[01:25] *** Sarten-X left
[01:25] *** benabik joined
[01:26] *** bacek left
[01:34] *** BinGOs left
[01:34] *** BinGOs joined
[01:35] *** edenc joined
[01:54] *** colomon joined
[02:19] *** envi joined
[02:22] *** donri left
[02:35] *** colomon left
[02:37] <sorear> good * #perl6

[02:51] *** aindilis joined
[02:51] *** colomon joined
[02:54] <sorear> too quiet.

[02:55] *** benabik is now known as crickets

[02:55] * crickets chirps

[02:55] <phenny> crickets: 30 Nov 12:46Z <j105rob> tell crickets to stop chirping

[02:55] *** crickets is now known as Benabik

[02:59] <TimToady> wow

[03:01] *** tyatpi_ joined
[03:05] *** jaldhar joined
[03:10] *** s1n joined
[03:21] *** s1n left
[03:36] *** s1n joined
[03:50] *** alester left
[03:53] <sorear> 30 Nov 12:46Z... what year?

[03:59] <plobsing> same year as xmas

[04:02] *** satyavvd joined
[04:10] <sorear> What happens if a proto is called directly?

[04:18] <TimToady> protos are always called directly, it's multis that can't be called

[04:19] <worr> jjhj

[04:19] <worr> 

[04:19] <worr> sorry about that

[04:20] <TimToady> checked your radiation levels?

[04:22] <TimToady> (well, multis can be called if you know their long name, or dispatchers wouldn't work...)

[04:23] *** Su-Shee_ joined
[04:26] *** Su-Shee left
[04:34] <diakopter> .

[04:36] <diakopter> phenny: tell crickets Camelia refrains from eating you... this time.

[04:36] <phenny> diakopter: I'll pass that on when crickets is around.

[04:38] *** Benabik left
[04:43] *** _twitch joined
[04:44] *** noganex joined
[04:45] *** tyatpi_ left
[04:48] *** tyatpi_ joined
[04:49] *** noganex_ left
[04:55] *** sftp left
[05:14] <sorear> TimToady: normally, protos are called through dispatch subs?

[05:18] <TimToady> no, protos *call* dispatch subs

[05:19] <TimToady> S06:94

[05:20] <TimToady> when you say foo() you are always calling either a proto or an only

[05:25] *** tyatpi_ left
[05:38] *** GinoMan joined
[05:41] *** orafu left
[05:41] *** orafu joined
[05:48] <tadzik> sorear: I can't build niecza on Mono 2.8.2: http://nopaste.snit.ch/38032

[05:50] *** Mowah joined
[05:54] *** kaare_ joined
[06:00] <sorear> ...

[06:01] <sorear> that is the dumbest thing I've seen all week.

[06:02] <diakopter> Unknown char: .

[06:02] <diakopter> ROFL

[06:02] <sorear> diakopter: look at the time output

[06:02] <sorear> diakopter: tadzik's .net seems to think the decimal point character is ','

[06:03] <diakopter> right, yeah

[06:03] <sorear> I really, really didn't want to implement floating point parsing myself

[06:03] <sorear> but if the CLR is going to do something idiotic like non-optional locale "support"...

[06:04] <diakopter> you can force your json reader/writer to always use a particular locale

[06:05] *** risou_ joined
[06:05] <tadzik> oh crap

[06:05] <tadzik> so the locale thingy?

[06:06] *** risou left
[06:08] <tadzik> sorear: looks like it passes with `LC_ALL="" make`

[06:11] <diakopter> sorear:

[06:11] <tadzik> but now I have to `LC_ALL="" niecza` too, otherwise it works with `my $a = 2,23` but crashes with `my $a = 2.23`

[06:11] <diakopter> ((CultureInfo)(new CultureInfo("en-US", false)).NumberFormat

[06:12] <diakopter> er, I guess that cast isn't needed

[06:13] <diakopter> Double.Parse(string s, (new CultureInfo("en-US", false)).NumberFormat)

[06:15] <diakopter> sorear: I think it would be best to standardize the formatting of your json storage format as an internal thingie

[06:18] *** justatheory left
[06:18] *** justatheory joined
[06:18] *** alim joined
[06:22] *** justatheory left
[06:33] *** lue left
[06:46] *** satyavvd left
[06:47] *** mtk left
[06:49] *** cjk101010 joined
[06:50] *** wtw joined
[06:56] *** _dev0_ joined
[07:03] *** GinoMan left
[07:05] *** risou_ left
[07:06] <sorear> diakopter: anything that involves instantiating Locale objects based on string keys sounds unusably slow

[07:07] <sorear> diakopter: json formatting is already standardized, in an RFC.  The fact that niecza fails to generate valid JSON in tadzik's locale is a bug, not a "would be best" thing

[07:07] * sorear out

[07:07] *** risou joined
[07:16] *** jaldhar left
[07:17] *** jaldhar joined
[07:33] <diakopter> sorear: um.  utter failure to receive communication.  thanks a lot.

[07:35] *** wr joined
[07:43] *** Su-Shee_ is now known as Su-Shee

[07:49] *** jimmy_ joined
[07:50] *** jimmy__ joined
[07:54] *** jimmy_ left
[07:55] *** shi joined
[07:58] *** jimmy__ left
[07:59] *** donri joined
[08:03] *** alim left
[08:04] *** Rotwang joined
[08:16] *** jimmy_ joined
[08:18] *** wr left
[08:18] *** bacek joined
[08:24] *** jimmy_ left
[08:29] *** baest_ is now known as baest

[08:41] *** jimmy_ joined
[08:43] *** jimmy__ joined
[08:43] *** jimmy_ left
[08:47] *** alim joined
[08:48] *** jimmy__ left
[09:08] *** risou left
[09:09] *** risou joined
[09:10] *** awwaiid left
[09:10] *** awwaiid joined
[09:15] *** JimmyZ joined
[09:16] *** JimmyZ left
[09:42] *** cjk101010 left
[10:16] *** knewt2 left
[10:24] *** shi left
[10:28] *** knewt2 joined
[10:31] *** Rotwang left
[10:31] *** shi joined
[10:34] *** noganex left
[10:36] *** noganex joined
[10:37] *** tzhs joined
[10:43] *** alim left
[11:01] *** jaldhar left
[11:02] *** jaldhar joined
[11:10] *** risou_ joined
[11:12] *** risou left
[11:26] *** hanekomu joined
[11:31] *** alim joined
[11:35] *** jaldhar left
[11:52] *** Chillance joined
[12:02] *** tyatpi_ joined
[12:10] *** risou joined
[12:11] *** woosley joined
[12:14] *** risou_ left
[12:15] *** tyatpi_ left
[12:17] *** tyatpi_ joined
[12:23] *** cognominal joined
[12:40] *** Holy_Cow joined
[12:59] *** cognominal left
[13:09] *** plobsing_ joined
[13:10] *** plobsing left
[13:11] *** risou_ joined
[13:13] *** risou left
[13:14] * moritz_ breaks the silence

[13:14] *** JimmyZ joined
[13:16] *** plobsing_ left
[13:16] *** JimmyZ left
[13:16] *** JimmyZ joined
[13:19] *** JimmyZ left
[13:19] <moritz_> STD.pm6 line 580 "or () to represent Nil"

[13:19] <moritz_> I thought Nil and () are now explicilty distinct?

[13:20] *** JimmyZ joined
[13:20] *** JimmyZ left
[13:22] *** JimmyZ joined
[13:26] *** amkrankruleuen left
[13:27] *** amkrankruleuen joined
[13:29] *** JimmyZ left
[13:32] *** cognominal joined
[13:33] *** bluescreen10 joined
[13:35] *** amkrankruleuen left
[13:36] *** amkrankruleuen joined
[13:37] *** ruoso joined
[13:42] *** mtk joined
[13:48] *** plobsing joined
[14:06] <moritz_> wow, STD.pm has at least 170 distinct error messages, not counting the various .obs and .sorryobs calls

[14:11] *** plainhao joined
[14:11] <sorear> good * #perl6

[14:11] <moritz_> \o|

[14:12] *** risou joined
[14:12] *** coldhead left
[14:13] <moritz_> some error messages use "Cannot", some "Can not", and others "Can't"

[14:13] <moritz_> Can't we agree on one spelling? :-)

[14:13] <tadzik> no, we Cannot :)

[14:13] *** risou_ left
[14:14] <mathw> it would be good to be consistent

[14:14] <mathw> looks better

[14:26] *** plobsing left
[14:35] <flussence_> I'd go with one without an apostrophe, just to make things slightly easier for people writing grep regex

[14:35] <mathw> I'd also tend to think "can't" is a bit too informal for a compiler's error message

[14:38] *** mj41 left
[14:39] <moritz_> so, "Cannot" or "Can not"?

[14:41] <sorear> +1 to Cannot

[14:43] <mathw> I'm not sure which is considered 'correct'

[14:44] <mathw> but I think 'cannot' is better in this kind of thing

[14:44] *** fhelmberger left
[14:44] <tadzik> I'm for "thou shant"

[14:47] *** spq joined
[14:48] *** gbacon left
[14:52] *** gbacon joined
[14:52] <colomon> If can't is out, then cannot, IMO.

[14:53] <moritz_> can't isn't out yet, I'm still collecting opinions

[14:53] <moritz_> and I want a green light from TimToady before I change all instances in STD.pm6

[15:07] *** justatheory joined
[15:07] *** shi left
[15:07] <[Coke]> FGP.

[15:08] <moritz_> hm :-)

[15:08] <slavik1> just go with "NO"

[15:08] <slavik1> so that when compilation fails, you just get a "NO! Your code is stupid. Go away!"

[15:08] <slavik1> :D

[15:10] *** wtw left
[15:13] *** tzhs left
[15:14] <sorear> slavik1: someone in another channel once complained about a Prolog implementation they had to use which had a single message for all syntax errors

[15:15] <slavik1> nice^^

[15:19] *** plobsing joined
[15:21] *** MayDaniel joined
[15:23] *** hudnix left
[15:25] <colomon> "Bad programmer!  No cookie!"

[15:27] *** pecastro-be-righ left
[15:27] <arnsholt> sorear: I usually quite like Prolog, but that sounds kinda nasty

[15:28] <arnsholt> Although truth be told, my Prolog compiler isn't exactly helpful on syntax errors either ^_^

[15:32] <slavik1> I was wondering ... how much extra work would it be to take Perl6 Grammars and bolt on things to get a lexer/parser?

[15:32] *** hudnix joined
[15:32] <slavik1> so that it would tell you what token it is expecting if it was wrong

[15:42] <sorear> slavik1: STD has that capability, but it's quite useless in practice

[15:42] <slavik1> I mean for coming up with my own language or something

[15:43] <PerlJam> slavik1: that's what :dba('foo') is all about

[15:45] *** tyatpi_ left
[15:46] *** icwiener joined
[16:04] *** mtk left
[16:05] *** GinoMan joined
[16:06] *** PZt left
[16:10] *** mtk joined
[16:10] *** _twitch left
[16:17] *** nadim_ left
[16:17] *** nadim_ joined
[16:20] *** hercynium joined
[16:22] *** nadim_ left
[16:28] *** plobsing left
[16:29] *** sftp joined
[16:37] *** GinoMan left
[16:38] *** woosley left
[16:38] *** icwiener left
[16:44] *** Trashlord joined
[16:47] *** ymasory joined
[16:59] *** hanekomu left
[17:10] *** dipthegeezer left
[17:10] *** plobsing joined
[17:11] *** ruoso left
[17:13] *** risou_ joined
[17:14] *** risou left
[17:16] *** alester joined
[17:19] *** spinclad joined
[17:20] *** tigeraniya joined
[17:23] <tigeraniya> hiiii

[17:24] <sorear> Hello tigeraniya.  Welcome!

[17:25] <tigeraniya> thanks , i am coder with good skills in c java and python how can i help this project

[17:25] <tigeraniya> where to pull SRC

[17:25] <tigeraniya> something like git repo

[17:25] <flussence_> https://github.com/rakudo/rakudo

[17:26] <tigeraniya> thnks FLUSSence_

[17:26] <sorear> There isn't a single global repository; there are many independant subprojects

[17:26] <sorear> What flussence_ just linked you to was one of the compilers; it has very little C and no Java nor Python

[17:27] *** alim left
[17:27] <tigeraniya> ohh

[17:27] <sorear> If you want to use Perl 6, the dominant platform currently is Rakudo + Parrot

[17:27] <tigeraniya> ok  sorear

[17:28] <sorear> Parrot has a lot of C components; it's the VM Rakudo uses

[17:28] <tigeraniya> hmm

[17:28] *** envi left
[17:29] <TimToady> sorear has mostly been working on an implementation called 'niecza' that is considerably faster but doesn't implement as much yet, and runs on the CLR

[17:29] <sorear> Rakudo is written in a subset of Perl 6; it parses Perl 6 and prepares it for execution by Parrot

[17:29] <sorear> Rakudo also contains a few C fragments used as native calls of a sort to speed up very important operations (operator overloading etc)

[17:29] <TimToady> niecza has a better parser :)

[17:30] <sorear> it also contains a minimal standard library, which is written in unrestricted Perl 6

[17:30] *** mberends joined
[17:30] * sorear is not much for self-promotion :p

[17:30] <tigeraniya> sorear i am not a professional . but i will have to study this project so that i can contribute ,   what yo guys can do is point me to right direction , so that i won't consume ur ( our community precious coders) precious  time

[17:30] <TimToady> I realize this, which is why I'm doing it :)

[17:31] <TimToady> tigeraniya: there are many ways to contribute

[17:31] <tigeraniya> ok

[17:31] <TimToady> you can write tests, or docs, for instance

[17:31] <tigeraniya> ok where to start

[17:31] <TimToady> you can give feedback on what you find confusing

[17:31] <tigeraniya> ok 

[17:32] <tigeraniya> or somewhere i can find

[17:32] <tigeraniya> give me some work to do

[17:32] <TimToady> first you should probably install rakudo and play with it a bit

[17:32] <tigeraniya> ok am on it 

[17:35] <sorear> If you want to do C coding to help Perl 6, you should look at http://trac.parrot.org/parrot/wiki

[17:37] *** tigeraniya left
[17:37] <TimToady> or you can help mberends++ to target the JVM

[17:38] <TimToady> nobody's targeting Python :)  (though parrot also plans to support other languages including python)

[17:39] <sorear> except for pugs, I think all of the serious attempts to implment Perl 6 have relied heavily on Perl coding

[17:39] <sorear> I blame the fact that Perl 6's grammar is defined in terms of Perl 6 parsing operators

[17:39] *** ymasory left
[17:40] <TimToady> whoops, tigeraniya has left

[17:43] *** MayDaniel left
[17:49] <sorear> things which make me feel stupid: noticing that I have code to use a hash table to cache the result of a function... which does a hash table lookup.

[17:58] *** pyrimidine joined
[18:03] *** masak joined
[18:03] <masak> oh hai, #perl6.

[18:03] <phenny> masak: 17 Mar 23:10Z <TimToady> tell masak a role's submethods do not override a class's, so that problem doesn't arise with submethod BUILD

[18:03] <phenny> masak: 00:57Z <sorear> tell masak Change the spec of BUILD, then see if anyone rises to defend the old way on p6l.

[18:04] *** am0c joined
[18:04] <masak> TimToady: yes, but what about the case where the class has no BUILD submethod?

[18:14] *** risou joined
[18:15] <TimToady> every class has a BUILD that it thinks of as its own, even if it's really Mu::BUILD

[18:16] *** risou_ left
[18:17] *** am0c left
[18:17] *** _dev0_ left
[18:22] <masak> this is news to me. how does that square with submethods not being inherited?

[18:23] <TimToady> historically, Mu's build has been declared as a method rather than a submethod, but that's perhaps an implementation detail that could be wrongish

[18:24] <TimToady> in some sense infrastructure has to be at a lower level, and each class's portion of the current object has to managed by that class

[18:24] <TimToady> if it delegates that responsibility to Mu::BUILD or something else in the REPR, say, then that's kinda up to the class

[18:26] <TimToady> I'm of two minds whether callsame should be used for that particular delegation

[18:26] <masak> we seem to agree on the current state not being ideal.

[18:27] <TimToady> well, the specs are somewhat agnostic on the particular BUILD wrappiness; one shouldn't take rakudo's approach as necessarily canonical

[18:28] <TimToady> but the design needs to balance several conflicting goals

[18:28] *** tyatpi_ joined
[18:28] <TimToady> one really important one is performance, which is why the current semantics try to prevent assignment of defaults only to be overridden

[18:28] <TimToady> that's just wasted work

[18:29] *** am0c joined
[18:29] <TimToady> but within that constraint we also want to preserve flexibility

[18:29] <TimToady> and where exactly the various BUILD components live can certainly be tweaked

[18:30] <TimToady> however, it's certainly the case that role submethods belong to the role, not to the class in which they are composed

[18:30] *** alim joined
[18:30] <TimToady> hafta go pick someone up at the airport now

[18:30] <TimToady> later &

[18:31] <masak> performance is the first good reason I've heard for the overriding of default attribute initialization.

[18:33] <masak> rakudo: role R[::T] { multi method foo(T $x) { say $x } }; class C does R[Str] does R[Int] {}; C.new.foo(5.5)

[18:33] <p6eval> rakudo 25e5bd: OUTPUT«get_attr_str() not implemented in class 'Sub'␤  in main program body at line 7529␤»

[18:33] <masak> rakudo: role R[::T] { multi method foo(T $x) { say $x } }; class C does R[Str] does R[Int] {}; C.new.foo(42)

[18:33] <p6eval> rakudo 25e5bd: OUTPUT«42␤»

[18:33] <masak> rakudo: role R[::T] { multi method foo(T $x) { say $x } }; class C does R[Str] does R[Int] {}; C.new.foo("OH HAI")

[18:33] *** _dev0_ joined
[18:33] <p6eval> rakudo 25e5bd: OUTPUT«get_attr_str() not implemented in class 'Sub'␤  in main program body at line 7529␤»

[18:34] *** stkowski joined
[18:36] * masak closes #83668

[18:44] *** Patterner left
[18:46] *** Psyche^ joined
[18:46] *** Psyche^ is now known as Patterner

[18:49] *** Holy_Cow left
[18:50] *** Holy_Cow joined
[19:05] <moritz_> RT doesn't know any 83668

[19:14] *** risou_ joined
[19:16] *** risou left
[19:18] <masak> oh.

[19:18] <masak> it was the one you replied to recently.

[19:18] <masak> #86338, sorry.

[19:18] *** ajs left
[19:19] *** ajs joined
[19:19] <moritz_> the one with type cpatures?

[19:20] <masak> ::Right.

[19:21] <tadzik> hello pandas

[19:21] <masak> luckily, I had already successfully filed that bug ;)

[19:21] <masak> tadzik: \o

[19:23] <colomon> o/

[19:27] <moritz_> \o

[19:28] *** Mowah left
[19:33] <tadzik> weekends! \o/

[19:34] *** Mowah joined
[19:40] <masak> \o/

[19:40] <moritz_> weekend = enought time to announce the p6cc winner, masak?

[19:40] <masak> oh, I should think so.

[19:41] <moritz_> \o\

[19:41] <masak> been busy with $teaching the last two days. currently returning to caring about other things.

[19:50] *** plainhao left
[19:54] * colomon really likes ?? !! better than ? :

[19:54] *** mj41 joined
[19:56] <sbp> really?? great!!

[19:56] <tadzik> :D

[19:57] <pyrimidine> looks like Parrot Foundation and TPF got into GSoC!

[19:57] <pyrimidine> http://socghop.appspot.com/gsoc/program/accepted_orgs/google/gsoc2011

[20:00] <moritz_> \o/

[20:01] <tadzik> aye :)

[20:02] <sorear> masak: I think that lazy initialization of object attributes on first read or end of BUILD is ETOOMUCHMAGIC

[20:03] <dalek> niecza: c2fbfdf | sorear++ | lib/ (2 files):

[20:03] <dalek> niecza: Refactor <foo> LTM resolution, start stubbing in dispatch methods

[20:03] <dalek> niecza: review: https://github.com/sorear/niecza/commit/c2fbfdf86d

[20:03] <masak> sorear: I'm all for simplicity. and BUILD overriding the default initialization seems to violate Least Surprise for people.

[20:04] <sorear> masak: the spec can't change itself

[20:04] <sorear> (we hope)

[20:07] <masak> sorear: I usually tell people that ;)

[20:07] <masak> sorear: I promise to make the spec change as soon as I'm sufficiently convinced of it.

[20:14] *** shi joined
[20:15] *** risou joined
[20:15] *** shi left
[20:15] *** simcop2387 left
[20:16] *** shi joined
[20:17] *** shi left
[20:18] *** shi joined
[20:18] *** simcop2387 joined
[20:18] *** risou_ left
[20:19] *** shi left
[20:19] *** shi joined
[20:20] *** shi left
[20:21] *** shi joined
[20:21] *** shi left
[20:22] *** shi joined
[20:22] *** shi left
[20:23] *** shi joined
[20:24] *** coldhead joined
[20:24] <sorear> masak: let's drown out shi.

[20:24] *** shi left
[20:25] <sorear> masak: what really bugs me is has $!a = rand; submethod BUILD() { say $!a }

[20:25] *** shi joined
[20:26] *** shi left
[20:27] *** shi joined
[20:27] *** shi left
[20:28] *** shi joined
[20:28] *** ChanServ sets mode: +o sorear

[20:28] *** sorear sets mode: +b *!*kvirc@81.88.230.*

[20:28] <masak> sorear: why does that case particularly bug you?

[20:28] *** sorear sets mode: -o sorear

[20:28] *** shi left
[20:29] <sorear> masak: it requires the reads to be active

[20:29] <sorear> masak: rand isn't done until $!a is accessed

[20:29] <sorear> masak: it requires tie-y functionality

[20:30] <masak> wait, are you talking about current semantics, or proposed?

[20:30] <sorear> current.

[20:30] <masak> by current semantics, that'd print "Any()"...

[20:30] <masak> (since the BUILD overrides the default initialization)

[20:31] <masak> I refer you to TimToady's argument about wastefulness and performance above.

[20:32] <sorear> I think having to keep an extra "this Any has been explicitly assigned" bit is almost certainly worse than the benefit

[20:33] <masak> full ACK.

[20:33] <masak> never liked that bit.

[20:33] *** ymasory joined
[20:33] <Tene> masak: what have you been teaching?

[20:34] <masak> Tene: Android development.

[20:39] <masak> http://www.informator.se/utbildningar/systemutveckling/applikation/java/new-programming-essentials-for-android.aspx

[20:40] *** nymacro left
[20:42] <Tene> Huh.  I hadn't remembered that you also did Java.

[20:43] <masak> it's a living.

[20:48] <perigrin> Android seemed like a slightly less eye-stabby environment to write Java for.

[20:49] <perigrin> but I can only compare it to writing JTable Applets

[20:49] *** pyrimidine left
[20:55] *** ymasory left
[21:00] *** Holy_Cow left
[21:04] *** mtk left
[21:09] *** amkrankruleuen left
[21:09] *** amkrankruleuen joined
[21:12] *** hercynium left
[21:12] *** alim left
[21:15] *** Vlavv left
[21:24] *** Vlavv joined
[21:26] <masak> question: what should 'perl6 -p' do, now that 'perl6' goes into a REPL?

[21:27] <moritz_> die

[21:27] <sorear> +1

[21:27] <moritz_> anything that reads from $*IN interacts badly with REPL

[21:29] <masak> the current (emergent) behavior is... interesting.

[21:29] <masak> but probably not too useful.

[21:36] *** bluescreen10 left
[21:41] *** am0c_ joined
[21:41] *** bluescreen10 joined
[21:41] *** jfried joined
[21:44] *** On96 joined
[21:44] <On96> Hi!

[21:44] <moritz_> hello On96 

[21:46] * On96 got banned by someone on #perl for suggesting a security issue related to Perl being sponatneous when it comes to saving files in either ANSI or UTF-8. Was it such a bad quiestion? If so-I can actualy show that.

[21:46] <On96> [email@hidden.address]  banned me

[21:47] <moritz_> On96: if you want to report a security issue in perl, please try #p5p on irc.perl.org

[21:47] <On96> Thanks

[21:47] <moritz_> or mailto:perlbug@perl.org

[21:47] <BinGOs> I would suggest the latter.

[21:48] <On96> I actualy asked for help- for a simple way to identify the flag in which the file is encoded in, without needing to run complciated tests.

[21:49] <masak> On96: sorry to hear you had a hard time over at #perl.

[21:49] <masak> On96: you're the second this week to come in here and say that.

[21:50] * On96 is 46 years old... and last tiem he got banned on irc must have been 8 years ago.

[21:50] <masak> from what you're saying, it was unwarranted.

[21:51] <tadzik> #perl doetn's have the reputation of a friendliest place on earth, does it

[21:51] <On96> Looks like a good trick to promote Perl6 atleast :-)

[21:51] <On96> Yaakov is not there any more :(

[21:51] *** bluescreen10 left
[21:52] <moritz_> I was about to say that you won't get banned for any Perl 6 security concerns here :-)

[21:52] <masak> :P

[21:52] <tadzik> On96: OTOH, you're on one of the friendliest channels, welcome! )

[21:52] <On96> Thanks! :-) :-) :-)

[21:52] <masak> who's Yaakov?

[21:53] <On96> Yaakov was an ol op there, havent talked to him for years.

[21:54] * masak smiles at the comment '# MUST BE LOWERCASE' in src/Perl6/Compiler.pir

[21:54] <On96> Thanks tadzik; I know I have been here before too :-) Even talked to TimToady once :-)

[21:55] *** mj41 left
[21:55] <moritz_> such things happen here

[21:56] <masak> our notional hierarchy is flat. ish.

[21:56] <On96> True anarchists?

[21:56] <sorear> our notional hierarchy is upside down!

[21:56] <On96> lol

[21:57] <masak> we dance the mambo with our notional hierarchy!

[21:57] <On96> hehehe

[21:57] <moritz_> what do you expect from computer scientist, who draw trees with their root on top

[21:57] <masak> sorear: are you referring to the fact that all of us are the boss of TimToady? :P

[21:58] <On96> How is his health these days? anyoen knows?

[21:58] <masak> maybe ask TimToady. he's at the airport, but he'll be back.

[21:58] <On96> I own him more then half of my life to say it exact.

[21:59] <masak> wow.

[21:59] <On96> Perl gave me a life.

[21:59] <sorear> TimToady hasn't said anything about health recently

[21:59] <sorear> unless jet lag counts

[21:59] <On96> Job, family and something to dream about at the night time.

[21:59] <sorear> hey, I could use one of those

[21:59] <masak> On96: I predict you're going to like it here :)

[22:00] <masak> On96: we dream about Perl most of the time.

[22:00] <tadzik> yeah. I go to sleep counting zebras

[22:00] <tadzik> *cough*

[22:00] <On96> lol

[22:01] <tadzik> sorry, stripped joke

[22:01] <masak> tadzik: you know what I think would be really big? EAN zebras.

[22:01] <On96> Will go back to my UTF-8 issue- 2 more hours before dreaming starts.

[22:01] <tadzik> EAN?

[22:01] <masak> tadzik: barcodes.

[22:01] <On96> Thanks alot to everyone.

[22:01] <masak> On96: good luck!

[22:01] <tadzik> masak: what about them?

[22:01] <tadzik> On96: o/

[22:02] <masak> tadzik: you could scan them once, and then keep track of them somehow.

[22:02] <masak> tadzik: then you wouldn't have to count them every night.

[22:02] <sorear> or just use rfid

[22:02] <tadzik> masak: oh wow

[22:03] <tadzik> and maybe create some lazy list of'em

[22:03] <masak> sorear: obviously, you're thinking about goldfish, not zebras. :)

[22:03] <tadzik> after all, you usually get asleep before you count them all, so there's no use in keeping 'em all in memory

[22:04] <masak> that makes sense.

[22:06] * jnthn home o/

[22:06] <masak> rakudo: .say for "zebra 1", { (True, True, True, False).pick ?? $_++ !! "zzz" } ... "zzz"

[22:06] <p6eval> rakudo 25e5bd: OUTPUT«zebra 1␤zebra 1␤zebra 1␤zebra 1␤zzz␤»

[22:06] <masak> jnthn! \o/

[22:06] <masak> oh, right.

[22:06] <jnthn> o/ masak

[22:06] <masak> rakudo: .say for "zebra 1", { (True, True, True, False).pick ?? ++$_ !! "zzz" } ... "zzz"

[22:06] <p6eval> rakudo 25e5bd: OUTPUT«zebra 1␤zzz␤»

[22:06] <masak> :P

[22:06] <masak> rakudo: .say for "zebra 1", { (True, True, True, False).pick ?? ++$_ !! "zzz" } ... "zzz"

[22:06] <p6eval> rakudo 25e5bd: OUTPUT«zebra 1␤zebra 2␤zebra 3␤zzz␤»

[22:06] <masak> \o/

[22:07] <On96> Got my answer by the way: Test::utf8    so... if anyoen feels like telling the guys in #perl  this is the best way to check a string for sane utf-8 thanks.

[22:09] <BinGOs> which appears to use Encode.

[22:11] <On96> True

[22:13] <On96>  return ok(Encode::is_utf8($string),$name);

[22:13] <On96> I wish there was something like this for files, eg. -B and -T tests

[22:15] *** alim joined
[22:19] *** ajs left
[22:20] <masak> oh btw.

[22:20] <masak> I got another p5 solution from ajs.

[22:21] <masak> (not part of the contest, of course, but still potentially interesting)

[22:21] *** Holy_Cow joined
[22:21] <sorear> On96: Encode::is_utf8 doesn't check a string for sane utf-8

[22:22] *** Holy_Cow left
[22:23] <On96> What does it do then?

[22:23] * On96 is frustrated

[22:23] <sorear> This is probably why you got banned from #perl

[22:23] *** ajs joined
[22:23] <masak> sorear: it just checks a flag?

[22:24] <sorear> They're very touchy about people mis-using deep internals

[22:24] <sorear> masak: yes

[22:24] <On96> hrrm

[22:24] <sorear> masak: Perl 5 automatically coerces between Buf and Str as needed; is_utf8 basically does ~~ Str

[22:24] <masak> aye.

[22:25] <sorear> it's not relevant unless you are debugging Perl itself, or a C-level extension

[22:26] <masak> only because Perl 5 blurs the line between Str and Buf enough for it to be "internals".

[22:26] <On96> Trying to convert an entire CMS to UTF-8 

[22:26] <On96> web-app

[22:27] <masak> On96: have you read perlunitut?

[22:27] <On96> no

[22:28] <masak> you'll probably want to at this point. just to be sure.

[22:28] <On96> I have 15 Perl Oreilly other books though :)

[22:28] *** kfo_ left
[22:28] <On96> Will look for it thanks.

[22:29] <masak> http://perldoc.perl.org/perlunitut.html

[22:30] *** Mowah left
[22:32] <On96> thanks!

[22:33] *** kfo joined
[22:34] *** alim left
[22:35] *** twinshadow left
[22:35] *** twinshadow joined
[22:39] *** plobsing left
[22:43] *** PZt joined
[22:44] *** risou left
[22:44] <On96> So actually it is an administartive issue-unless unless I want to start messing around with Perl internals :-(

[22:45] * On96 is a bad administrator

[22:45] *** bbkr joined
[22:46] *** twinshadow left
[22:51] *** MayDaniel joined
[22:55] <masak> On96: well, no; not if you're trying to solve a problem related to Perl giving output in different encodings.

[22:55] <masak> that sounds like the recipe "1. decode, 2. process, 3. encode" isn't being done right.

[22:55] <moritz_> http://perlgeek.de/en/article/encodings-and-unicode btw

[23:01] <On96> Interesting link moritz. Reading.

[23:01] *** fisted left
[23:01] <On96> This is actually my problem: "Otherwise, you can get confused very fast, and lose track of which strings are byte strings, and which ones are text strings" (quoted from the link..).

[23:02] <masak> right. that's exactly the problem you don't want to have in your application.

[23:02] <masak> the strings inside of the barriers should all be of the same "type".

[23:04] <On96> oy...

[23:05] <masak> was that from picturing the refactorings involved? :P

[23:06] <On96> I tried to enforce utf-8 encoding on all files starting form a certain date, to make it easy for users to upgarde thier CMS... but then again, Perl sometimes refuses to savethe file in utf-8 very strange. I used the encode for that.

[23:13] <sorear> you seem to be very confused about what utf-8 is.

[23:14] <On96> My utf-8 knowledge varies with the results it produces on the html output :-( I must admit...

[23:14] <On96> I know how to encode utf-8 into a non utf-8, and how to do it... once too much and even twice! lol

[23:14] <masak> On96: hang in there. confusion about utf-8 and encodings eventually goes away, and once it does, things get a *lot* simpler.

[23:15] <masak> a bit like Git, actually :)

[23:15] <On96> thanks for the empathy...

[23:15] <On96> feel much better already :-)

[23:16] <masak> "#perl6: you'll feel much better" :)

[23:17] <On96> hehehe

[23:17] <On96> Does Dreamhost have it installed?

[23:17] <masak> Perl 6? I doubt it.

[23:18] <On96> This is a problem-its a CMS, we have many people dependent on it.

[23:19] <On96> not a great CMS, but it makes some people happy. 

[23:21] <masak> sure

[23:21] <Tene> On96: if they provide fedora systems, yes, you can install it from the package manager.

[23:21] <Tene> I don't recall if we ever got packages in ubuntu or not.

[23:24] *** MayDaniel left
[23:27] *** jfried left
[23:29] <On96> will ask them

[23:29] <diakopter> I own the groups/packages/namespaces in ubuntu - they're free for anyone else to join/takeover though...

[23:30] <diakopter> I used to, anyway

[23:32] <On96> I try to convince to take in Perl6 

[23:32] *** tyatpi_ left
[23:33] *** whiteknight joined
[23:36] <sorear> TimToady: hi

[23:37] <sorear> TimToady: if I have proto rule foo { {*} <bar> }, what does $<foo>.keys look like?

[23:37] *** jimmy1980 joined
[23:44] *** plobsing joined
