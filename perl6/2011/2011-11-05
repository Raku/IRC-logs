[00:12] <dalek> 6model: 2518ca6 | diakopter++ | lua/runtime/List.lua:

[00:12] <dalek> 6model: array tests pass

[00:12] <dalek> 6model: review: https://github.com/diakopter/6model/commit/2518ca6d3c

[00:16] <sorear> colomon: You've convinced me not to do anything for now. :)

[00:17] <colomon> drat!

[00:17] <colomon> ;)

[00:17] <colomon> though like I said, it certainly seems "good enough" already.

[00:24] *** _jaldhar joined
[00:33] *** pmurias left
[00:54] *** _jaldhar left
[00:54] *** wolfman2000 joined
[01:00] *** icovnik left
[01:12] <dalek> niecza: 54cf51a | sorear++ | lib/ (2 files):

[01:12] <dalek> niecza: Eliminate now-unused BValue type

[01:12] <dalek> niecza: review: https://github.com/sorear/niecza/commit/54cf51a4d9

[01:12] <dalek> niecza: 750c097 | sorear++ | lib/ (3 files):

[01:12] <dalek> niecza: Encapsulate setting of .v on existing StashEnts

[01:12] <dalek> niecza: review: https://github.com/sorear/niecza/commit/750c097c0c

[01:30] <[Coke]> \o/ # rt.perl.org/rt3 has a browser-friendly cert now.

[01:32] <sorear> sweeet

[01:39] *** saaki left
[01:40] <dalek> rakudo/nom: 9c28800 | (Geoffrey Broadwell)++ | src/core/Str.pm:

[01:40] <dalek> rakudo/nom: Str.Numeric: Support Rats and Nums that start with a period (e.g. '.5')

[01:40] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/9c28800294

[01:40] <sorear> is that japhb?

[01:41] *** japhb_ joined
[01:41] <japhb_> sorear, yes.  :-)

[01:42] <japhb_> decommuting &

[01:42] *** japhb_ left
[01:53] <sorear> niecza: 5 * constant $x = 2;

[01:53] <p6eval> niecza v11-14-g750c097: OUTPUT«Potential difficulties:␤  $x is declared but not used at /tmp/7uUQaWvm87 line 1:␤------> 5 * ⏏constant $x = 2;␤␤␤Unhandled Exception: assigning to readonly value␤  at /tmp/7uUQaWvm87 line 0 (mainline @ 0) ␤  at /home/p6eval/niecza/lib/CO…

[01:54] <dalek> niecza: 1491987 | sorear++ | / (3 files):

[01:54] <dalek> niecza: Decouple constant initialization from the ability to rebind constants

[01:54] <dalek> niecza: review: https://github.com/sorear/niecza/commit/149198748f

[01:54] *** mj41 left
[02:11] *** plobsing left
[02:11] *** IngisKahn left
[02:11] *** IngisKahn joined
[02:13] *** plobsing joined
[02:30] <dalek> niecza: eb2bc3c | sorear++ | lib/ (3 files):

[02:30] <dalek> niecza: Implement a concept of constant common variables (half of #46)

[02:30] <dalek> niecza: review: https://github.com/sorear/niecza/commit/eb2bc3ca02

[02:40] *** lateau_ joined
[02:43] <jlaire> .u 

[02:43] <phenny> U+F8C7 (No name found)

[02:45] *** lateau_ left
[02:52] <diakopter> .u money

[02:52] <phenny> diakopter: Sorry, no results for 'money'.

[02:56] <dalek> niecza: ccb1914 | sorear++ | lib/ (3 files):

[02:56] <dalek> niecza: Remove capability of rebinding lexical constants (fixes #46)

[02:56] <dalek> niecza: review: https://github.com/sorear/niecza/commit/ccb1914eb2

[02:57] *** _jaldhar joined
[02:57] <sorear> niecza: $@ + 5

[02:57] <p6eval> niecza v11-15-g1491987: OUTPUT«===SORRY!===␤␤Unsupported use of $@ variable as eval error; in Perl 6 please use $! at /tmp/UJXlfbXx7T line 1:␤------> $@⏏ + 5␤␤Parse failed␤␤»

[02:57] <sorear> niecza: $@ 

[02:57] <p6eval> niecza v11-15-g1491987: OUTPUT«===SORRY!===␤␤Non-declarative sigil is missing its name at /tmp/ARW1f8iSxQ line 1:␤------> <BOL>⏏$@␤␤Use of uninitialized value in string context␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 773 (warn @ 2) ␤  at …

[03:05] *** mkramer joined
[03:13] *** mkramer left
[03:14] <dalek> niecza: 191508a | sorear++ | src/STD.pm6:

[03:14] <dalek> niecza: Checking for $@ and $^X should use <!before \w> instead of <?before \W> so it works at string end (fixes #63)

[03:14] <dalek> niecza: review: https://github.com/sorear/niecza/commit/191508a418

[03:15] *** drbean left
[03:16] *** kaleem joined
[03:22] *** soh_cah_toa left
[03:26] *** kaleem left
[03:27] *** kaleem joined
[03:29] <sorear> perl6: say "23foo".subst(/\w/, {$/.uc})

[03:29] <p6eval> rakudo 9c2880: OUTPUT«Method 'uc' not found for invocant of class 'Any'␤  in block <anon> at /tmp/MESSOCm_Ey:1␤  in method reify at src/gen/CORE.setting:3989␤  in method reify at src/gen/CORE.setting:3896␤  in method reify at src/gen/CORE.setting:3896␤  in method gimme at src/gen/CORE.s…

[03:29] <p6eval> ..niecza v11-18-g191508a: OUTPUT«23foo␤»

[03:29] <p6eval> ..pugs b927740: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20111008/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HAND…

[03:29] <sorear> perl6: say "+!foo".subst(/\w/, {$/.uc})

[03:30] <p6eval> rakudo 9c2880: OUTPUT«Method 'uc' not found for invocant of class 'Any'␤  in block <anon> at /tmp/PtCAKvnnDj:1␤  in method reify at src/gen/CORE.setting:3989␤  in method reify at src/gen/CORE.setting:3896␤  in method reify at src/gen/CORE.setting:3896␤  in method gimme at src/gen/CORE.s…

[03:30] <p6eval> ..niecza v11-18-g191508a: OUTPUT«+!Foo␤»

[03:30] <p6eval> ..pugs b927740: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20111008/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HAND…

[03:30] <sorear> straw poll: is rakudo doing it wrong?

[03:32] <dalek> niecza: 2c52e86 | sorear++ | / (2 files):

[03:32] <dalek> niecza: Autothunkify left side of xx (fixes #70)

[03:32] <dalek> niecza: review: https://github.com/sorear/niecza/commit/2c52e86ee2

[03:33] *** drbean joined
[03:38] *** drbean left
[03:39] <sorear> diakopter: could you take a look at https://github.com/sorear/niecza/issues/61 and https://github.com/sorear/niecza/issues/59 and tell me if both are still valid?

[03:39] *** drbean joined
[03:42] <diakopter> interestingly, /61 now fails with the same error as /59

[03:43] *** iktome joined
[03:44] *** iktome left
[03:44] <dalek> niecza: b962c2f | sorear++ | t/run_spectests:

[03:44] <dalek> niecza: Auto-checkout/update t/spec during make spectest (fixes #54)

[03:44] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b962c2f94d

[03:44] *** iktome joined
[03:45] <diakopter> sorear: I commented on /61

[03:45] *** iktome left
[03:45] <sorear> aargh

[03:46] <diakopter> arg

[03:46] <diakopter> h

[03:46] <diakopter> I hope it comes back

[03:46] *** kaleem left
[03:48] <dalek> <sorear> Your comment on #61 implies that niecza on Win32 now cannot be loaded _at all_.

[03:50] *** sorear left
[03:51] *** diakopter__ joined
[03:51] *** TimToady left
[03:51] *** diakopter left
[03:51] <diakopter__> sorear: I think that may be the case

[03:52] *** p6eval left
[03:53] <diakopter__> oh noes; host04 went down too

[03:53] *** dalek left
[04:07] *** drbean left
[04:12] *** drbean joined
[04:12] *** diakopter___ joined
[04:14] *** sorear joined
[04:14] <sorear> diakopter___: here?

[04:14] <diakopter___> yes

[04:15] <sorear> I'm going to have a zip for you to test in a few minutes

[04:15] <diakopter___> my niecza/cygwin installation is on another computer (where diakopter__ is logged in)

[04:15] <sorear> replacing the particular .Invoke calls I was using with different ones closer to what MSDN says

[04:17] <sorear> seems that MethodBase::Invoke(object, object[]) cannot be used to *allocate* a new object on .net

[04:17] <sorear> in Mono, constructor.Invoke(null, args) will allocate a new object

[04:18] <sorear> now trying it with constructor.Invoke(args) like the MSDN code samples had

[04:18] <sorear> btw, do you use screen with irssi, diakopter___?

[04:18] <diakopter___> yeah, I did on host02

[04:18] <diakopter___> hopefully host02 comes back in a few hours or less

[04:18] <sorear> I blame screen for the horrible display glitches I've been seeing, thinking I'll use this opportunity to replace it

[04:19] <sorear> tmux or dtach or something

[04:20] <diakopter___> my screen/irssi seems to work okay through PuTTY

[04:20] <diakopter___> if there's ever a glitch, just resizing the window fixes it

[04:20] <diakopter___> ok I got niecza/cygwin set up here too

[04:21] <diakopter___> feel free to email the .zip

[04:23] <diakopter___> RUN_CLR=

[04:23] <diakopter___> CSC=csc

[04:29] *** kaare_ joined
[04:31] *** dalek joined
[04:31] *** ChanServ sets mode: +v dalek

[04:32] <diakopter___> o_O

[04:32] <sorear> I guess host04 is back up

[04:32] <sorear> yep

[04:32] *** sorear left
[04:32] <diakopter___> it didn't reboot?

[04:35] *** p6eval joined
[04:35] *** ChanServ sets mode: +v p6eval

[04:35] *** drbean left
[04:37] *** sorear joined
[04:37] <diakopter___> std: 1

[04:37] <p6eval> std be1f10e: OUTPUT«ok 00:01 118m␤»

[04:37] <sorear> odd that host04 didn't reboot

[04:37] <sorear> rakudo: pir::spawn__is("uptime")

[04:37] <p6eval> rakudo 9c2880: OUTPUT«Use of uninitialized value in string context␤Use of uninitialized value in string context␤===SORRY!===␤error:imcc:syntax error, unexpected IREG, expecting '(' ('$I100')␤ in file '(file unknown)' line 12042681␤␤»

[04:37] <sorear> rakudo: pir::spawn__IS("uptime")

[04:38] <p6eval> rakudo 9c2880: OUTPUT«Use of uninitialized value in string context␤Use of uninitialized value in string context␤===SORRY!===␤error:imcc:syntax error, unexpected IREG, expecting '(' ('$I100')␤ in file '(file unknown)' line 12220154␤␤»

[04:38] <sorear> rakudo: pir::spawn__vS("uptime")

[04:38] <p6eval> rakudo 9c2880: OUTPUT«Use of uninitialized value in string context␤Use of uninitialized value in string context␤===SORRY!===␤error:imcc:syntax error, unexpected SREG, expecting '(' ('$S100')␤ in file '(file unknown)' line 138␤␤»

[04:38] <sorear> rakudo: pir::spawnw__IS("uptime")

[04:38] <p6eval> rakudo 9c2880: OUTPUT« 04:00:43 up 399 days,  9:52,  0 users,  load average: 0.10, 0.04, 0.01␤»

[04:40] <diakopter___> I and another tried all kinds of failed debian upgrades on host02; I hope it reboots successfully.

[04:41] <diakopter___> sorear: you'll email me a .zip?

[04:42] *** drbean joined
[04:44] <sorear> diakopter___: yeah if it works this time

[04:44] <diakopter___> once I get the zip, how would I use it

[04:44] <diakopter___> just unzip it into boot/ in the build dir?

[04:49] <sorear> yes, deleting what's there first

[04:49] <sorear> see if it runs at all (boot/run/Niecza.exe --help)

[04:51] <sorear> sent

[04:54] <diakopter___> gmail probably blocked the email b/c it had a .zip; rename the file to .piz and it should work

[04:55] <japhb> How do you get STD to spit out a parse tree, rather than just ok or FAILED?

[04:55] <diakopter___> ./viv has some options

[04:56] <diakopter___> yaml output is one

[04:56] <sorear> diakopter___: wtf

[04:57] <japhb> diakopter__: thank you

[04:57] <japhb> I was stupidly looking in tools/, since that's where the README seems to point

[04:57] <sorear> diakopter___: both that the email was blocked, and that google isn't using file(1) or equivalent

[04:57] <diakopter___> yeah :)

[04:57] <sorear> tools/ is for supplementary tools

[04:57] <sorear> the real important stuff is in .

[04:58] <sorear> like the README itself

[04:58] <sorear> diakopter___: done

[04:58] <diakopter___> sorear: got the piz

[04:59] <japhb> methinks the README could use some love; I'm not (yet) qualified to do that.

[05:00] <sorear> japhb: your English isn't that bad.

[05:00] <sorear> I actually thought you were native.

[05:00] * japhb laughs

[05:01] <diakopter___> boot/run/Niecza.exe --help  worked

[05:01] <japhb> I am native.  I meant that I was not qualified in the sense of "I don't know the correct use and current state of all of the pieces, so I can't make the README fully correct."

[05:02] * japhb now wonders if sorear, despite his location *isn't* a native speaker, based on some variant of the "He who looks behind the door has stood there before" principle.

[05:06] <sorear> sort of.  English is my native language but I'm 2.5-lingual

[05:07] <diakopter___> what other languages?

[05:07] <sorear> es, jp

[05:07] <sorear> ja

[05:07] <diakopter___> how might I use your piz instead of the one downloaded by the Makefile

[05:08] <sorear> I wonder if putting a file:// URL in FETCH_URL would work

[05:09] <sorear> if not, follow the steps given in the .fetch-stamp: makefile rule

[05:09] <sorear> making sure to touch at the end

[05:09] *** sorear_ joined
[05:09] *** sorear_ left
[05:09] *** sorear_ joined
[05:10] *** sorear left
[05:10] *** sorear_ is now known as sorear

[05:10] *** diakopter joined
[05:10] <sorear> o/ diakopter

[05:11] <diakopter> whew

[05:11] *** diakopter___ left
[05:11] <diakopter> nqplua passes a bunch of tests

[05:11] <sorear> http://mail.google.com/support/bin/answer.py?answer=6590

[05:12] <sorear> "Gmail does not allow you to send or receive files that are corrupted."

[05:12] <diakopter> heh

[05:13] *** orafu left
[05:13] *** orafu joined
[05:14] <sorear> diakopter: any luck w/ niecza?

[05:15] <diakopter> well after the Makefile deleted boot/ a couple of times

[05:19] <diakopter> sorear: odd

[05:22] <diakopter> Strange text after block (missing comma, semicolon, comment marker?) at C:\Users\mwilson\src\niecza\src\CClass.pm6 line 15:

[05:24] <sorear> you need to touch .fetch-stamp if you don't want the makefile to delete boot/

[05:25] *** Chillance left
[05:26] <diakopter> sorear: I got the above error

[05:26] <diakopter> when running cd src && NIECZA_KEEP_IL=1  ../boot/run/Niecza.exe -C CClass

[05:27] <sorear> diakopter: I can repro that here - the parser doesn't like \r\n much

[05:27] <sorear> diakopter: you could try changing *.pm6 *.setting to Unix line endings, or you can wait for me to fix the compiler

[05:29] <sorear> rakudo: say "\r\n" ~~ /\n//

[05:29] <p6eval> rakudo 9c2880: OUTPUT«===SORRY!===␤Confused at line 1, near "say \"\\r\\n\""␤»

[05:29] <sorear> rakudo: say "\r\n" ~~ /\n/

[05:29] <p6eval> rakudo 9c2880: OUTPUT«=> <

[05:29] <sorear> What?

[05:30] <sorear> rakudo: say ("\r\n" ~~ /\n/).gist.perl

[05:30] <diakopter> :O)

[05:30] <p6eval> rakudo 9c2880: OUTPUT«"=> <\r\n>\n"␤»

[05:30] <sorear> rakudo: say ("AB" ~~ /B/).gist.perl

[05:30] <p6eval> rakudo 9c2880: OUTPUT«"=> <B>\n"␤»

[05:30] <sorear> hrm. ok.

[05:31] <sorear> I guess \n in Rakudo can match \cM\cJ

[05:31] <sorear> rakudo: say ("\r\n" ~~ /<[\n]>/).gist.perl

[05:31] <p6eval> rakudo 9c2880: OUTPUT«"#<failed match>"␤»

[05:31] <sorear> I wonder what <[\n]> should do, or if it should be outlawed

[05:32] <sorear> if I'm going to make \n match potentially more than one character

[05:32] <diakopter> what does p5 do

[05:42] <sorear> stefan@stefans:~$ perl -E '"\015\012" =~ /\n/; say length($&), " ", length($`)'

[05:42] <sorear> 1 1

[05:42] <sorear> \n matches \012 only

[05:42] <diakopter> maybe it behaves differently on windows

[05:43] <diakopter> nope; same

[05:43] <sorear> p5, like C, does line ending mangling on I/O

[05:43] <sorear> I wonder if niecza should do the same

[05:45] * sorear checks UTS18

[05:50] <sorear> hrm, http://www.unicode.org/reports/tr18/#Partial_Matches and the succeeding section are problematic for Perl 6 regexes

[05:52] <diakopter> so pie-in-the-sky

[05:53] <sorear> I don't see anything in tr18 about \n

[05:56] <sorear> hmm, seems STD has a deeper assumption on \n separating lines

[05:59] <diakopter> Perl 6 source code exists on Windows too

[05:59] <diakopter> (or does it?)

[06:00] <sorear> phenny: tell TimToady I would like to extract knowledge from you on how Perl 6 should treat \n and text-mode file IO on Windows

[06:00] <phenny> sorear: I'll pass that on when TimToady is around.

[06:00] <sorear> diakopter: apparently it does, or what is CClass.pm6?

[06:00] <sorear> :)

[06:04] <diakopter> alternatively, I could switch my git to not translate line endings

[06:08] <sorear> diakopter: that would be a good idea, since I'm unlikely to get \n sorted with TimToady tonight

[06:10] <Woodi> me wa

[06:10] * Woodi was readin http://www2.parc.com/csl/groups/sda/projects/oi/workshop-94/foil/main.html yesterday

[06:10] <sorear> submitted #78

[06:10] * Woodi need coffe or Mg probably...

[06:11] <Woodi> any aspects of Aspect-oriented programming in Perl6 ?

[06:15] *** daniel-s joined
[06:16] <sorear> Magnesium?

[06:16] * sorear imagines Woodi munching on a NeXT cube

[06:22] <sorear> interesting link, Woodi

[06:22] <sorear> Woodi: &wrap is supposedly like AOP

[06:28] *** [Sec] left
[06:31] <Woodi> realy not dig yet into AOP, just read somewhere mr. G.Kiczales (CLOS, OI) moved to AOP

[06:32] <Woodi> an maybe I started to like grammars in Perl6 as somethink MOP/OI thing :)

[06:46] <sorear> diakopter: without line ending mangling, how far does it get?

[06:51] <diakopter> I'll try it

[06:51] *** [Sec] joined
[06:58] <diakopter> warning CS1668: Invalid search path '/usr/local/lib:/usr/lib:/lib' specified in 'LIB environment variable' -- 'The filename, directory name, or volume label syntax is incorrect. '

[06:59] <diakopter> error CS0006: Metadata file 'Run.Kernel' could not be found

[06:59] <diakopter> make: *** [boot/obj/Run.CompilerBlob.dll] Error 1

[07:02] <moritz> nom: say $*VERSION

[07:03] <p6eval> nom 9c2880: OUTPUT«Failure.new()␤»

[07:03] <moritz> nom: say $*PERL

[07:03] <p6eval> nom 9c2880: OUTPUT«Failure.new()␤»

[07:03] <moritz> nom: say $*VM

[07:03] <p6eval> nom 9c2880: OUTPUT«("name" => "parrot", "config" => {"git_describe" => "RELEASE_3_9_0-222-g305b704", "sha1" => "305b704a6b79f86ce0919bc258be6e9844739218", "a" => ".a", "ar" => "ar", "ar_extra" => "", "ar_out" => "", "archname" => "x86_64-linux-gnu-thread-multi", "arflags" => "cr", "as" …

[07:03] <moritz> b: say $*VM<config><git_describe>

[07:03] <p6eval> b 1b7dd1: OUTPUT«RELEASE_3_6_0␤»

[07:03] <moritz> nom: say $*VM<config><git_describe>

[07:03] <p6eval> nom 9c2880: OUTPUT«RELEASE_3_9_0-222-g305b704␤»

[07:05] <sorear> diakopter: that doesn't sound like a niecza problem to me :)

[07:10] *** fsergot left
[07:10] *** mberends joined
[07:13] <mberends> good *

[07:13] <phenny> mberends: 28 Oct 05:03Z <sorear> tell mberends /serialize is merged

[07:13] <mberends> ooh! sorear!

[07:14] * mberends merges locally

[07:15] <sorear> mberends! how are you!

[07:17] <sorear> mberends?

[07:17] <mberends> hi sorear, I'm mentally rested after about 2 weeks offline. There's no way I'm going to catch up reading IRC backlogs, but it looks like lots has been happening again :)

[07:18] <mberends> I've just been picking away a little more at 6model/C

[07:18] <sorear> heh

[07:18] * sorear is picking at the niecza bug queue

[07:19] <mberends> sorear: it looks like your serialize branch ended well :)

[07:19] <sorear> I'd like to get it building again on Win32 but there's a lot of back and forthing involved

[07:19] <sorear> seems diakopter++ has an environment variable issue now

[07:20] <sorear> yeah, merged serialize, very few spectest regressions

[07:21] <sorear> niecza: BEGIN { say "Hello, world"; }; 1 1

[07:21] <p6eval> niecza v11-20-gb962c2f: OUTPUT«Hello, world␤===SORRY!===␤␤Two terms in a row at /tmp/Evq_iY3Rm4 line 1:␤------> BEGIN { say "Hello, world"; }; 1 ⏏1␤␤Parse failed␤␤»

[07:21] <sorear> look :)

[07:21] <mberends> yes!

[07:21] <mberends> I'll have the use of some Win32 hosts from about Wednesday, for testing if it helps

[07:22] <sorear> couldn't hurt, hopefully by Wed TimToady will be back online

[07:23] *** replore_ joined
[07:24] <sorear> mberends: what is the implementation level of 6model/c?

[07:25] <sorear> mberends: what if I were, hypothetically, to steer 6model/c in a direction where it could be used as a niecza backend?

[07:26] <sorear> I'll need a 6model-aware garbage collector and 6model object implementation for my niecza/c ideas

[07:27] <mberends> sorear: there is too little of it completed so far use it right now, and I'm very slow at progressing it. The thought of it serving as a backend had not occurred to me, but I'll bear it in mind while I work on it.

[07:28] * sorear is also pondering now how roles and ClassHOW will look

[07:28] <sorear> (in niecza/clr)

[07:29] <sorear> mberends: well, welcome back to #perl6, but I need to sleep now

[07:29] <sorear> bye

[07:29] <mberends> good night

[07:33] <Woodi> mberends: what exactly you would like to do with 6model/C ?

[07:34] <mberends> Woodi: I'd like to implement the 6model core in C with no external dependencies.

[07:35] <Woodi> <exclude parrot.h> >

[07:35] <Woodi> ?

[07:35] <Woodi> so PMC implementation probably

[07:36] <mberends> Woodi: yes. one of the main reasons for doing that is to more easily understand how 6model works

[07:36] <Woodi> just was thinking about this too...

[07:37] <Woodi> 'representations' sugests native mapings and 'model' kind of MOP ?

[07:37] <mberends> that's right

[07:38] <Woodi> some other functionality is there maybe ?

[07:38] <mberends> method dispatch

[07:41] <Woodi> any idea how to plug connect eg. Boehem GC ?

[07:41] *** Mowah joined
[07:42] <mberends> Woodi: you would have to make a "plug connect" system yourself. That is non trivial, I think.

[07:44] <Woodi> mberends: I hear some good about jemalloc and realy think how to plug in many other external components :) but for example Bohem GC and jemalloc exclude on each other :)

[07:46] *** mkramer joined
[07:58] *** mkramer left
[08:09] <mberends> Woodi: jemalloc is new to me, I'll find its docs and see how it compares. For 6model/C I would prefer a separate implementation of a recognized algorithm, in order to avoid adding an external dependency. I'm not in favour of Boehm because of its fundamental design, which is for "non-cooperative" environments, because it makes much more sense for new software to be written to cooperate.

[08:11] *** drbean left
[08:18] *** drbean joined
[08:30] <Woodi> mberends: Boehm GC is about portability so I like it. And it have atomic_ops library included which is nice for portability too. But Perl6 probably can wait for C++0x/C 0x memory model implementation :)

[08:35] *** molaf joined
[08:38] <mberends> Woodi: yes, its portability is good, and several VM designs used it before choosing something else for performance reasons. Efficient memory management seems to remain an enduring problem problem or challenge.

[08:40] <mberends> the trick is for each application to find the memory manager with the least drawbacks for a given situation :)

[09:05] *** ethndbst left
[09:08] *** molaf left
[09:12] <moritz> \o mberends 

[09:15] <mberends> o/ moritz :-D

[09:15] <tadzik> hello o/

[09:15] *** ab5tract joined
[09:18] *** zby_home_ joined
[09:29] *** Bucciarati joined
[09:47] *** ethndbst joined
[09:47] *** ethndbst left
[09:47] *** ethndbst joined
[09:53] *** arthur-_ left
[09:54] *** not_gerd joined
[09:55] <not_gerd> hello, #perl6

[09:55] <not_gerd> 	

[09:55] <not_gerd> NQP .gitignore fix for MSYS

[09:55] <not_gerd> ^ https://gist.github.com/1341331

[09:56] <not_gerd> one way to make --gen-parrot --gen-nqp work on MSYS: https://gist.github.com/1340539

[09:57] <Woodi> heh, looks nice and quick :)

[09:57] <moritz> where does that need to go?

[09:58] <not_gerd> Makefile.in

[09:58] <not_gerd> is there a standard way to handle platform-specific code?

[09:58] <not_gerd> didn't really investigate, just threw something together that seems to work...

[09:59] *** ethndbst left
[09:59] <not_gerd> (Makefile.in for both Rakudo and NQP, that is...)

[09:59] <dalek> nqp/bigint: 45d5eed | moritz++ | .gitignore:

[09:59] <dalek> nqp/bigint: fix .gitignore for msys, not_gerd++

[09:59] <dalek> nqp/bigint: review: https://github.com/perl6/nqp/commit/45d5eedfc8

[10:00] <moritz> not_gerd: I'd like to have jnthn++ test that first on msvc before applying that

[10:00] <not_gerd> moritz: should that have gone to /biging?

[10:00] <not_gerd> ^bigint

[10:01] <not_gerd> ls

[10:04] <moritz> not_gerd: not really :/

[10:04] <not_gerd> on non-MSYS Windows, Configure.pl just copies libparrot.dll into the Rakudo and NQP build directories

[10:04] <not_gerd> perhaps I should do that for consistency...

[10:18] *** grondilu joined
[10:19] <grondilu> perl6: sub ∫() {...} # trying to use the unicode Integral character (0x222b) for a sub

[10:19] <p6eval> rakudo 9c2880: OUTPUT«===SORRY!===␤Malformed block at line 1, near "\u222b() {...} "␤»

[10:19] <p6eval> ..niecza v11-20-gb962c2f: OUTPUT«===SORRY!===␤␤Malformed block at /tmp/MaN9zW9by_ line 1:␤------> sub ⏏∫() {...} # trying to use the unicode In␤␤Parse failed␤␤»

[10:19] <p6eval> ..pugs b927740: OUTPUT«decodeUTF8': bad data: '\8747'␤*** ␤    Unexpected "\8747()"␤    expecting "=", subroutine parameters, trait or block␤    at /tmp/akkO5aULpV line 1, column 5␤»

[10:20] <grondilu> shouldn't this be working?!

[10:22] *** ethndbst joined
[10:25] *** Kivutarrr joined
[10:26] <grondilu> nom: sub ∫() {...} # trying to use the unicode Integral character (0x222b) for a sub

[10:26] <p6eval> nom 9c2880: OUTPUT«===SORRY!===␤Malformed block at line 1, near "\u222b() {...} "␤»

[10:27] *** grondilu left
[10:29] *** tokuhirom3 left
[10:32] *** drbean left
[10:38] *** drbean joined
[10:46] <moritz> geekosaur: nope, it's not an alphanumeric character

[10:47] *** not_gerd left
[10:47] *** tokuhirom3 joined
[10:49] <Woodi> will work for prefix op ?

[11:18] *** daniel-s left
[11:29] *** replore_ left
[11:35] *** not_gerd joined
[11:45] *** tokuhiro_ joined
[11:59] <colomon> mberends: ping?

[12:00] <mberends> colomon: pong

[12:01] <colomon> mberends: I'm trying to see if I can use TagLib# from niecza

[12:02] <colomon> but right now I'm getting

[12:02] <colomon> Unhandled Exception: Unable to resolve method Create in class CLR::TagLib::File,taglib-sharp,  Version=2::0::4::0, Culture=neutral, PublicKeyToken=db62eba44689b5b0

[12:02] <colomon> I was hoping you might have some insight as to what I should be doing to track down the problem.  I've been trying to use monop without any success at all.

[12:03] <mberends> colomon: that looks like a complicated way to say "library not found" :(

[12:03] <colomon> Hmmm.... gacutil doesn't seem to list it?

[12:03] <colomon> but it sure looks like it was installed:

[12:04] <colomon> Package exported to: /usr/local/lib/mono/taglib-sharp/taglib-sharp.dll -> ../gac/taglib-sharp/2.0.4.0__db62eba44689b5b0/taglib-sharp.dll

[12:04] <colomon> Installed taglib-sharp.dll into the gac (/usr/local/lib/mono/gac)

[12:04] <colomon> shoot, I've got to go deal with a singing 3-year-old.  but any suggestions you can think of would be very appreciated.

[12:05] <mberends> there may be a confusing way in which mono accesses different GACs at different times, I think diakopter had that for a while on a different platform.

[12:09] *** tokuhiro_ left
[12:11] *** Psyche^ joined
[12:14] *** Patterner left
[12:14] *** Psyche^ is now known as Patterner

[12:15] <colomon> hmmm... taglib-sharp is installed in /usr/local/lib/mono/gac -- and it's the only thing installed here

[12:15] <moritz> so maybe it's not in the search path?

[12:15] * moritz doesn't know anything about mono, just guesses wildly

[12:17] <colomon> looks rightish

[12:17] <colomon> gacutil -l -gacdir /usr/local/

[12:17] <colomon> The following assemblies are installed into the GAC:

[12:17] <colomon> policy.2.0.taglib-sharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=db62eba44689b5b0

[12:17] <colomon> taglib-sharp, Version=2.0.4.0, Culture=neutral, PublicKeyToken=db62eba44689b5b0

[12:17] <colomon> Number of items = 2

[12:20] <mberends> colomon: I'll be afk for a few hours, but will attempt a similar setup later on Debian or Ubuntu

[12:20] <colomon> mberends++

[12:20] <colomon> think I might have it now

[12:21] <colomon> I'm installing it by hand

[12:22] <colomon> and now I get a different error!

[12:22] <mberends> different error == progress

[12:23] <colomon> and that was because my imaginary filename wasn't in a valid tag format.  error gone now that I have real MP3 in place to read.  \o/

[12:23] <moritz> \o/

[12:25] <mberends> excellent!

[12:26] <colomon> sweet!  it works!

[12:26] <colomon> my $file = TagLib-File.Create("Fathers_Jig.mp3");

[12:26] <colomon> say $file.Tag.Title;

[12:26] <colomon> Father's Jig

[12:29] *** GlitchMr joined
[12:31] <mberends> nice one colomon

[12:32] <colomon> now if I can just figure out where the TagLib# documentation lives...

[12:49] *** icovnik joined
[12:56] *** lestrrat left
[12:56] *** lestrrat joined
[13:01] <colomon> hmmm... how to convert a System.String[] to something useful?

[13:07] *** amkrankruleuen joined
[13:07] <colomon> nom: say @ARGS

[13:07] <p6eval> nom 9c2880: OUTPUT«===SORRY!===␤Variable @ARGS is not predeclared at line 1, near ""␤»

[13:08] <colomon> nom: say @*ARGS

[13:08] <p6eval> nom 9c2880: OUTPUT«␤»

[13:14] <Woodi> just read http://en.wikipedia.org/wiki/Perl_6 and some info predates git :) no niecza info and no www.perl6.org link...

[13:17] <huf> it links to perl6.org right there in the little infobox

[13:21] *** ethndbst left
[13:21] *** ethndbst joined
[13:24] <moritz> Woodi: feel free to expand and correct as you see fit

[13:35] <masak> hi from TCPW again, #perl6

[13:35] <szabgab> hi masak 

[13:35] <masak> general poll: will give an '11 years of Perl 6' lightning talk later today -- what should I put the focus on?

[13:36] <szabgab> "of"

[13:36] <masak> I've been asking fivers this question and gotten interesting suggestions. maybe you will have some too.

[13:36] <masak> szabgab: :P

[13:36] <szabgab> oh I just managed to find the backlog

[13:37] <szabgab> but the OP for Padre isn't around

[13:38] <szabgab> IMHO the biggest impact might be the things that got back to Perl 5

[13:39] <szabgab> btw moritz masak do look at the logs of your blogs sometimes? do you check how people find your sites?

[13:40] <moritz> szabgab: planetsix, reddit, other perl blogs, other perl blog aggregators, hacker news, google (roughly in that order)

[13:44] <szabgab> moritz: I mean searches

[13:44] <szabgab> what search terms are people using to find your pages

[13:45] <szabgab> I just noticed people searching for "uniq perl array" or some similar and arriving to my blog entry where I describe the uniq of Perl 6

[13:45] <szabgab> that's not what they are looking for and I guess that just confuses them

[13:45] <moritz> szabgab: I have similar experience with perl-6.de

[13:45] <huf> put a little blurb at the top of the entry that directs them to list::moreutils or summit

[13:46] <moritz> I have a little (German) Perl 6 tutorial with separate pages for if, while, arrays, for etc.

[13:46] <moritz> and people search for "perl if", and find it

[13:46] <szabgab> that's the reason I jumped ahead in my perl 5 tutorial and wrote the unique entry even before discussing the plain array

[13:46] <szabgab> so I can put a link from the perl 6 entry to that new page

[13:47] <moritz> szabgab: the non-perl 6 parts of my site have much higher search volume than the p6 parts

[13:47] <moritz> for the p6 parts, my highest ranking search referral is "perl6 grammar"

[13:50] <szabgab> I am worried only about people who look for perl 5 solution and find by mistake the perl 6 one

[13:51] <szabgab> we could point them to the respective perl 5 tutorials

[13:59] <masak> oh my, we still have &roundrobin in S32! I had completely forgotten about it!

[13:59] <jnthn> huh, you talked about it in le pub last night :P

[14:00] <masak> yeah, I had forgotten about it up until then, I mean :P

[14:00] <jnthn> oh...was gonna say, the beer was that much :P

[14:01] <masak> it was good beer

[14:09] <not_gerd> jnthn: do you know how the command in $config{'win32_libparrot_copy'} set by Rakudo's/NQP's Configure.pl actually gets executed?

[14:10] <not_gerd> (trying to make --gen-parrot --gen-nqp work on MSYS)

[14:10] *** Kivutarrr left
[14:11] *** MayDaniel joined
[14:15] <Woodi> masak: about '11 years': me thinks 'Perl6' concept makes great promises - mantras that all we know - PR was/is realy strong Perl6 side :) Promises: EASY integrating p5 code - just 'use5'! or by grammars or by Perl5-on-Parrot; much better concurency/threading; including other languages via Parro, eg Python; cleaning Perl...

[14:15] <masak> szabgab: I sometimes look at the blog statistics, but I often forget. I should have an alarm to do it at the end of them month, because it clears with each new month.

[14:17] <Woodi> but I think Pugs incident is realy important 'turning point' into functional functionalities... i would call it even 'restarting' or Phase 2 or 3...

[14:17] <masak> Woodi: I'd much rather focus on things that happened than on things that didn't -- but yes, the general expectations/promises are important too. :)

[14:17] <masak> Pugs was an inflection point, yes.

[14:18] <Woodi> masak: the biggest point for me personally was/is concurency...

[14:19] <masak> from ten thousand feet, the things you can see in the 11-year history are: (1) announcement of Perl 6, (2) Pugs, (3) general silver-age activity, maybe Rakudo Star release if you squint

[14:19] <masak> I'm not saying Rakudo or Niecza haven't been influential -- they have been, and are.

[14:19] <masak> but in terms of things that have clearly reached out of the echo chamber, those are the three that come to mind.

[14:21] <Woodi> from ten thousand you see just distinguishing points in non-discret space

[14:21] <Woodi> everyday work matters too

[14:22] <Woodi> from other angle: you can say things that ARE implemented

[14:23] <Woodi> (4) 6model is influent probably

[14:24] * Woodi is afraid to modify wikipedia article for Perl6 :)

[14:26] <tadzik> don't be

[14:26] <tadzik> whatcha wanna change?

[14:27] <Woodi> that Perl6 is developed in SVN repo :)

[14:27] <tadzik> ;)

[14:27] *** gerdr joined
[14:30] *** not_gerd left
[14:30] *** gerdr is now known as not_gerd

[14:32] <Woodi> masak: 'anything that pass official test suite is Perl6' - there is test suite and STD now, probably stable on all normal languages functionalities :) 

[14:33] *** ksi joined
[14:46] <masak> yeah, STD is generally considered "part of spec".

[14:47] <masak> TimToady is slightly ahead of the curve though and sometimes mumbling about STD having "filled its purpose" or something like that.

[14:48] <colomon> Woodi: the test suite isn't quite stable on normal language functionalities, alas.

[14:49] <colomon> for instance, the "munch" problem pointed out last week.

[14:49] <Woodi> colomon: munch ?

[14:49] *** mishin joined
[14:50] <mishin> hi perl 6 what compiler i need to compile racudo under win7?

[14:51] *** kmwallio joined
[14:52] <Woodi> that one http://www.artcyclopedia.com/artists/munch_edvard.html ?

[14:55] <colomon> munch is a list-related method which is used for tests in seven or eight files of the test suite

[14:55] <colomon> it's never been spec'd

[14:56] <colomon> and no one knows if it is going to go away or eventually become part of the spec

[14:56] <colomon> (as that entire section of the spec is scheduled to be rewritten)

[14:57] <masak> hi mishin -- it should just work, I think. jnthn will know more, but he's giving a talk right now.

[14:58] <moritz> mishin: I think msvc should be fine

[14:58] <Woodi> I do not thing such thing is standard functionality. anyway I just wrote Perl6 module with semi-Perl5-features and it works

[14:59] <moritz> mishin: I think msvc should be fine

[15:00] <Woodi> probably Perl5 installation is needed too. and there are binaries for Win 

[15:00] <masak> heh -- I ended up with exactly 100 slides for my "small languages, less accidentally" talk :)

[15:00] <Woodi> animation ?

[15:08] <masak> well, gradual slides, yes.

[15:08] <masak> some of them.

[15:09] <masak> I see 2011 as the year where Rakudo (thanks to jnthn's optimizer branch) starts to clearly do things that Perl 5 doesn't and probably can't.

[15:13] <Woodi> masak: just remember: 'Perl6 is here!' :)

[15:14] <Woodi> what shell or awk functionality missing in Perl6 ?

[15:14] <masak> the spec? that's a kinda vague question.

[15:15] <Woodi> no, here I mean Rakudo and Niecza

[15:15] <Woodi> even Pugs

[15:15] <masak> I don't think Rakudo does <<...>> yet, but I might be wrong.

[15:15] <masak> Pugs does it.

[15:16] <Woodi> excluding speed Perl6 compilers can do real work

[15:16] <masak> and jnthn++ is working on the speed bit. and Niecza already does quite well, I think.

[15:17] <Woodi> what is status NCI in b ?

[15:17] <Woodi> MYSQL was working ?

[15:22] *** kmwallio left
[15:23] <sorear> good * #perl6

[15:28] *** _jaldhar left
[15:28] *** _jaldhar joined
[15:28] <moritz> perl6: sub f($x) { return if $x == 1; state %h = a => 1; say %h.perl }; f 1; f 2;

[15:28] <p6eval> niecza v11-20-gb962c2f: OUTPUT«{"a" => 1}.hash␤»

[15:28] <p6eval> ..pugs b927740: OUTPUT«{("a" => 1),}␤»

[15:28] <p6eval> ..rakudo 9c2880: OUTPUT«().hash␤»

[15:28] <mishin> moritz: tahnks, i try http://www.microsoft.com/visualstudio/en-us/products/2010-editions/visual-cpp-express

[15:28] * moritz thinks it's a rakudobug

[15:31] <moritz> buubot_backup: eval: sub f { return if $_[0]; state $x = 3; $x }; f 1; f

[15:31] <buubot_backup> moritz: ERROR: Can't call method "state" on an undefined value at (eval 20) line 1. 

[15:31] <moritz> buubot_backup: eval: use 5.010; sub f { return if $_[0]; state $x = 3; $x }; f 1; f

[15:31] <buubot_backup> moritz: 3

[15:33] <Woodi> nom: my %cmds = { 'a' => (0,1) }; my $s = %cmds{ 'a' }; say $s

[15:33] <p6eval> nom 9c2880: OUTPUT«0 1␤»

[15:34] <Woodi> $scalar contains @list... Parcel but strange...

[15:35] <Woodi> different then Perl5

[15:35] <moritz> .oO( Woodi but Strange )

[15:37] <Woodi> :) no exact idea what you think but it differs from Perl5

[15:37] <Woodi> found it in module i work on 2 months....

[15:37] <moritz> yes, we figured it makes sense not to lose information just because you put somethin in scalar context

[15:38] <Woodi> work nice

[15:38] <dalek> faq: 645ea3e | moritz++ | answers.md:

[15:38] <dalek> faq: fix markup

[15:38] <dalek> faq: review: https://github.com/perl6/faq/commit/645ea3ed6f

[15:38] <Woodi> so this parcel means ?

[15:38] <moritz> can you pleaes rephrase your question?

[15:39] <moritz> I don't understand it

[15:39] <Woodi> first think: it can have separate sigil.

[15:39] <Woodi> ok. so parcel means: not to lose information just because you put somethin in scalar context

[15:40] <moritz> I don't see how that's related to Parcels

[15:40] <Woodi> nom: my %cmds = { 'a' => (0,1) }; my $s = %cmds{ 'a' }; say $s.WHAT

[15:40] <p6eval> nom 9c2880: OUTPUT«Parcel()␤»

[15:40] <moritz> (0, 1) is a Parcel

[15:41] <moritz> (though maybe it should become a List in item context, the spec is kinda vague on that point)

[15:41] <Woodi> so parcels are kind a pointer ?

[15:41] <moritz> no

[15:41] <Woodi> in Java sense

[15:41] <moritz> nearly everything is a pointer in the java sense in Perl 6

[15:42] *** uv_ joined
[15:42] <moritz> we just lifted the p5 restriction that you can't directly put an array or a hash into a scalar variable

[15:42] <Woodi> moritz: me thinks this is worth separate blogpost :)

[15:42] <moritz> Woodi: http://faq.perl6.org/#ref

[15:45] <Woodi> this is what i mean 'Perl6 is here!' - I write Perl6 module just in semi-Perl5 and have no idea about real Perl6...

[15:45] <dalek> faq: fa74992 | moritz++ | / (2 files):

[15:45] <dalek> faq: report last update time in UTC

[15:45] <dalek> faq: review: https://github.com/perl6/faq/commit/fa74992a88

[16:08] <moritz> perl6: sub f { return eval '$x'; state $x = 3 }; say f

[16:08] <p6eval> niecza v11-20-gb962c2f: OUTPUT«Potential difficulties:␤  $x is declared but not used at /tmp/Zxv8KvQB05 line 1:␤------> sub f { return eval '$x'; state ⏏$x = 3 }; say f␤␤Any()␤»

[16:08] <p6eval> ..rakudo 9c2880: OUTPUT«Any()␤»

[16:08] <p6eval> ..pugs b927740: OUTPUT«␤»

[16:10] <dalek> roast: 633e3c3 | moritz++ | S04-declarations/state.t:

[16:10] <dalek> roast: test state var initialization when the first run of the routine does not reach the initialization

[16:10] <dalek> roast: review: https://github.com/perl6/roast/commit/633e3c374f

[16:12] * moritz submits rakudobug

[16:22] <jnthn> moritz: what's the bug?

[16:24] *** icwiener joined
[16:25] *** diakopter__ left
[16:29] <moritz> perl6: sub f($x) { return if $x; state $a = 5; say $a }; f 1; f 0

[16:29] <p6eval> pugs b927740, niecza v11-20-gb962c2f: OUTPUT«5␤»

[16:29] <p6eval> ..rakudo 9c2880: OUTPUT«Any()␤»

[16:29] <moritz> jnthn: that's the bug

[16:29] <moritz> (not related to the eval thing, I just wanted to check how the different implementations do it)

[16:30] <moritz> submitted as RT #102994

[16:30] <jnthn> Hm. It's behaving as I expect

[16:30] <jnthn> START is not ENTER.

[16:30] <jnthn> Or a one time ENTER

[16:30] <diakopter> sorear: oh

[16:30] <mishin> moritz: well, i run  perl Configure.pl --gen-parrot https://gist.github.com/1341665 but it doesn't help me compile rakudo, i don't know what i should do under windows

[16:31] *** ab5tract left
[16:32] <mishin> i think i need remove previos rakudo installation

[16:33] <moritz> jnthn: S04 says about START: "on first ever execution, once per closure clone"

[16:33] <moritz> jnthn: but rakudo never seems to initialize $a

[16:33] <moritz> mishin: yes, you should

[16:33] <jnthn> moritz: It says it does it inline

[16:34] <jnthn> (the spec)

[16:34] <jnthn> (S04)

[16:34] <jnthn> masak and I are just looking at it

[16:34] <moritz> how does doing it inline comes out as not doing it at all?

[16:36] *** thou joined
[16:38] <jnthn> moritz: When we first enter a block, we flag it as started

[16:38] <jnthn> That flag gets checked when deciding whether to execute STARTs

[16:43] <diakopter> nom: my $a = (sub { my $b; return sub { START { $b++ }; return $b; }; })(); say $a(); say $a();

[16:43] <p6eval> nom 9c2880: OUTPUT«===SORRY!===␤CHECK FAILED:␤Undefined routine '&START' called (line 1)␤»

[16:43] <moritz> ... and?

[16:43] * moritz fails to see the point

[16:43] * diakopter too

[16:44] <moritz> jnthn: when it's implemented like that, all START phasers have to first block enter, even if they aren't reached textually

[16:45] <moritz> just like all other phasers

[16:45] <moritz> nom: exit; BEGIN say 1

[16:45] <p6eval> nom 9c2880: OUTPUT«1␤»

[16:45] <moritz> same here; the control flow never reaches the BEGIN, but the phaser still fires

[16:46] <moritz> nom: sub f { return; ENTER { say "in f" } }; f

[16:46] <p6eval> nom 9c2880: OUTPUT«===SORRY!===␤ENTER phaser not yet implemented at line 1, near " }; f"␤»

[16:46] <dalek> 6model: cd9435d | diakopter++ | lua/runtime/List.lua:

[16:46] <dalek> 6model: minor bugfix

[16:46] <dalek> 6model: review: https://github.com/diakopter/6model/commit/cd9435d6e2

[16:49] *** thou left
[16:49] <moritz> on an unrelated matter, do we plan to do a perl 6 advent calendar this year too?

[16:49] <moritz> s/too/again/

[16:50] <moritz> I'm certainly for it, and would write one or more posts, but I'd like support from all you awesome guys and gals too :-)

[16:50] <dalek> 6model: ed7a683 | diakopter++ | .gitignore:

[16:50] <dalek> 6model: update .gitignore

[16:50] <dalek> 6model: review: https://github.com/diakopter/6model/commit/ed7a683d4d

[16:52] *** huf left
[16:56] *** huf joined
[16:58] <dalek> 6model: d4978a3 | diakopter++ | lua/compiler/Makefile:

[16:58] <dalek> 6model: Makefile doesn't blow away LocalsOptimizer.lua

[16:58] <dalek> 6model: review: https://github.com/diakopter/6model/commit/d4978a31c7

[16:58] *** wk left
[17:01] *** TimToady joined
[17:01] <diakopter> TimToady: wb

[17:01] <TimToady> thanks

[17:01] <phenny> TimToady: 06:00Z <sorear> tell TimToady I would like to extract knowledge from you on how Perl 6 should treat \n and text-mode file IO on Windows

[17:01] *** mishin left
[17:02] <diakopter> re: that, STD doesn't seem to like \r\n

[17:02] <uv_> perl6: my $abc='ABC'; say $abc; $abc.=lc.=ucfirst; say $abc;

[17:02] <p6eval> rakudo 9c2880: OUTPUT«ABC␤Cannot assign to a readonly variable or a value␤  in method dispatch:<.=> at src/gen/CORE.setting:730␤  in block <anon> at /tmp/tI7h0urOWk:1␤  in <anon> at /tmp/tI7h0urOWk:1␤»

[17:02] <p6eval> ..pugs b927740, niecza v11-20-gb962c2f: OUTPUT«ABC␤Abc␤»

[17:03] <TimToady> probably not treating \n as logical newline

[17:03] <TimToady> I'm fine with continuing the fine tradition of turning binary \r\n into \n internally on Windows

[17:03] <TimToady> if anything, P6 has a much larger text vs binary distinction

[17:04] <TimToady> unlike P5, P6 defaults to text

[17:04] <TimToady> including for unicode

[17:04] <TimToady> P5 defaults to both :)

[17:06] <diakopter> phenny: tell sorear see http://irclog.perlgeek.de/perl6/2011-11-05#i_4665299 ff.

[17:06] <phenny> diakopter: I'll pass that on when sorear is around.

[17:08] *** not_gerd left
[17:10] *** wk joined
[17:20] <dalek> 6model: 0ed7989 | diakopter++ | / (2 files):

[17:20] <dalek> 6model: blow away P6Objects.pm; lots more tests pass.

[17:20] <dalek> 6model: review: https://github.com/diakopter/6model/commit/0ed7989a0f

[17:21] *** mishin joined
[17:25] <dalek> mu: a0a224f | moritz++ | misc/perl6advent-2011/ (2 files):

[17:25] <dalek> mu: initial topic brainstomring for the Perl 6 advent calendar 2011

[17:25] <dalek> mu: review: https://github.com/perl6/mu/commit/a0a224f211

[17:25] *** MayDaniel left
[17:26] <colomon> brainstorming already, oh my!

[17:27] *** bluescreen10 joined
[17:31] <moritz> colomon: I've got an email asking if were planning one for 2011

[17:32] <moritz> and since I'll be on vacation for one week in November, it's better to start a bit earlier

[17:38] *** skangas joined
[17:52] *** uv_ left
[17:55] <TimToady> .oO(Is Perl 6 done yet?  Perl 6 is the Future, so of course it's unevenly distributed!)

[17:57] *** MayDaniel joined
[18:01] *** GlitchMr left
[18:02] <moritz> .oO( Perl 6 is the future, and TimToady its prophet )

[18:05] *** thou joined
[18:14] *** MayDaniel left
[18:24] <mishin> moritz: i couldn't compile perl6 for win https://plus.google.com/u/0/116733219688154342581/posts/TsqbKTHKXPX

[18:29] <moritz> mishin: I don't know what to do, since I don't develo on windows :/

[18:29] <moritz> maybe jnthn knows

[18:32] *** LarryB joined
[18:32] *** LarryB left
[18:38] *** mishin left
[18:39] <diakopter> I was just about to tell mishin of my misfortune trying to build parrot on windows

[18:40] <diakopter> it failed on cygwin/perl/gcc, windows/strawberry/gcc, windows/activeperl/msvc, all three with very different errors

[18:41] *** mishin joined
[18:41] <diakopter> mishin: I tried building rakudo/parrot on windows the other day; if failed on cygwin/perl/gcc, windows/strawberry/gcc, windows/activeperl/msvc, all three with very different errors

[18:42] <diakopter> mishin: for the time being, you might try the parrot 3.9.0 installer from sourceforge

[18:42] *** vmspb joined
[18:43] <diakopter> http://sourceforge.net/projects/parrotwin32/files/parrotwin32%20setup/Parrot-3.9.0/setup-parrot-3.9.0.exe/download

[18:43] <mishin> diakopter: thanks for info and for link, may be it help's me

[18:44] <diakopter> mishin: unfortunately I don't know the command line option to rakudo's Configure to tell it to use an installed parrot

[18:45] *** not_gerd joined
[18:46] <moritz> perl Configure --gen-nqp --with-parrot=path/to/parrot.exe

[18:48] <mishin> diakopter:I will try to put a, moritz:thanks

[18:52] *** colomon left
[18:52] *** vmspb left
[18:56] *** vmspb joined
[19:01] *** ethndbst left
[19:02] <dalek> 6model: e35833a | diakopter++ | lua/runtime/Runtime/Ops/P6mapping.lua:

[19:02] <dalek> 6model: implement missing P6mapping Ops

[19:02] <dalek> 6model: review: https://github.com/diakopter/6model/commit/e35833ad8b

[19:06] *** kaare_ left
[19:14] <dalek> 6model: 1affb51 | diakopter++ | lua/runtime/Runtime/ (2 files):

[19:14] <dalek> 6model: moar fixes

[19:14] <dalek> 6model: review: https://github.com/diakopter/6model/commit/1affb510e3

[19:16] <sorear> hello

[19:16] <phenny> sorear: 17:06Z <diakopter> tell sorear see http://irclog.perlgeek.de/perl6/2011-11-05#i_4665299 ff.

[19:17] *** not_gerd left
[19:22] <sorear> TimToady: ping

[19:22] <sorear> TimToady: if \n should match a logical newline, where does that leave <[ \ \t\n ]> ?  obviously(?) a character class should never match more than one grapheme

[19:25] <sorear> TimToady: I'm also interested in knowing your thoughts on http://www.unicode.org/reports/tr18/#Partial_Matches

[19:29] <moritz> sorear: in perl 5, 'SS' =~ /^[ß]$/i

[19:35] <moritz> nom: say (104729, 86653, * % * ... 1).perl

[19:35] <p6eval> nom 9c2880: OUTPUT«(104729, 86653, 18076, 14349, 3727, 3168, 559, 373, 186, 1).list␤»

[19:36] <moritz> nom: say (104729, 86653, * div * ... 0).perl

[19:36] <p6eval> nom 9c2880: OUTPUT«(104729, 86653, 1, 86653, 0).list␤»

[19:36] *** cooper joined
[19:40] <sorear> Should "\n" always be taken to mean "\cJ" ?

[19:40] <sorear> Should there be any wildcarding magic in / "\n" / ?

[19:41] *** colomon joined
[19:42] <sorear> o/ colomon

[19:43] <mishin> moritz: it doesn't help https://gist.github.com/1341885

[19:44] <moritz> :(

[19:46] <colomon> \o

[19:46] <colomon> sorear: 

[19:46] <colomon> If the C# accessor code looks like this:

[19:46] <colomon> public virtual string [] Performers {

[19:46] <colomon> 			get {return new string [] {};}

[19:46] <colomon> 			set {}

[19:46] <colomon> 		}

[19:47] <colomon> How do I get at it from Niecza?

[19:47] <colomon> (Don't know if you saw in the backlog, I'm trying to get TagLib# to work with Niecza.)

[19:47] <sorear> my $string-arr = $obj.Performers;

[19:48] <sorear> $obj.Performers = $string-arr;

[19:48] <sorear> $string-arr will be a CLR::("System.String[]") object; there isn't an unambiguous best way to marshal them, so they're left alone by the interface

[19:49] <colomon> so what can you do with CLR::System::String[]?

[19:49] <colomon> (as it calls itself.)

[19:50] <colomon> (in .WHAT, I mean)

[19:51] <sorear> monop 'System.String[]'

[19:51] <sorear> in particular .Length() and .Get($index)

[19:52] * diakopter cranially dents a brick wall

[19:53] * sorear wonders what would happen if you tried to $string-arr.Address($index) from Perl 6 code

[19:53] * sorear tries it

[19:53] <colomon> sorear: gotcha.  BTW, on second thought, why isn't there an unambiguous best way to marshall?

[19:53] <sorear> Aborted (core dumped)

[19:53] <mishin> moritz: returning to ubuntu;))

[19:53] <sorear> colomon: because CLR arrays are inescapably mutable objects

[19:54] <colomon> sorear: ah, and we'd have to break that connection, so to speak?

[19:54] <sorear>  yes

[19:55] <sorear> it's even more of a problem going the other way - CLR arrays cannot be tied, so there's no fully correct way to pass an Array[Int] as a CLR::System::Int32[]

[19:55] <sorear> coming *from* we could probably fake marshalling with a tie

[19:55] <moritz> I have a lazy list, say @a

[19:56] <moritz> and want to use its element one after the other in the generator of the series operator

[19:56] <moritz> is there a neat way to do it?

[19:56] <colomon> sequence operator?

[19:56] <colomon> @a ... whatever

[19:56] <moritz> something like $a, $b, { $^b + $next-item-from-a * $^a}

[19:56] <colomon> ah

[19:56] <moritz> s/series/sequence/, yes

[19:57] <moritz> I'm currently useing @a.shift, but it's destructive and feels rather cheaty

[19:57] <colomon> seems like that might not be the best candidate for a sequence operator, off the top of my head

[19:57] <moritz> hm

[19:58] <moritz> a zip seems better for interleaving, but then the second-old element from the to-be-generated sequence isn't available

[19:59] <colomon> sorear: so something like (^$a.Length).map({ $a.Get($_) }) converts the string array to a p6 list of Str... errr, probably a list of C# strings.

[19:59] <sorear> this is a classic use case for unfoldr from the Haskell Prelude.

[19:59] <sorear> colomon: C# strings are immutable so they can be transparently mapped to p6 Strs (and they are)

[20:00] * sorear ponders writing a CLRUtilities.pm6 module with facilities for list marshalling, etc

[20:00] <diakopter> +1

[20:00] <colomon> sorear++ # quite right

[20:00] <colomon> afk

[20:00] <sorear> which for?

[20:01] <diakopter> jnthn: ping

[20:04] <diakopter> phenny: ask jnthn my eyes bleed from debugging nqplua; it needs a fresh set of eyes

[20:04] <phenny> diakopter: I'll pass that on when jnthn is around.

[20:05] <colomon> sorear: ++ was for correctly calling (and therefore previously having implemented) the conversion to Str.

[20:05] <colomon> but +1 on CLRUtilities.pm6, too

[20:06] <sorear> fwiw, there's a possibility that the string stuff may have to change with universal NFG in the coming months

[20:06] <colomon> .... universal NFG?

[20:07] <sorear> right now in niecza .chars means .codes

[20:07] <sorear> someday I need to fix that and make it possible for strings to be indexed by grapheme index

[20:08] <sorear> currently niecza's Str wraps a C# String, so converting between the forms is O(1)

[20:08] <colomon> oh.

[20:09] <colomon> gotcha.

[20:10] <colomon> I've got to run work on the leaves in the yard, but I'm happy to boldly stumble where few have gone before and come up with routines that would be great to have in CLRUtilities.pm6.

[20:10] <colomon> afk

[20:17] * sorear prepares a bug report for the Address thing :)

[20:19] *** saaki joined
[20:28] *** ethndbst joined
[20:29] *** Chillance joined
[20:45] *** cooper left
[20:45] *** cooper joined
[20:52] <vmspb> perl6: $_='aAa';  say qf/$_.uc $_.lc/;

[20:52] <p6eval> pugs b927740, niecza v11-20-gb962c2f: OUTPUT«$_.uc $_.lc␤»

[20:52] <p6eval> ..rakudo 9c2880: OUTPUT«===SORRY!===␤Confused at line 1, near "say qf/$_."␤»

[20:54] <vmspb> perl6: $_='aAa';  say qq/$_.uc $_.lc/;

[20:54] <p6eval> pugs b927740, rakudo 9c2880, niecza v11-20-gb962c2f: OUTPUT«aAa.uc aAa.lc␤»

[20:54] <vmspb> perl6: $_='aAa';  say q/$_.uc $_.lc/;

[20:54] <p6eval> pugs b927740, rakudo 9c2880, niecza v11-20-gb962c2f: OUTPUT«$_.uc $_.lc␤»

[20:54] <sorear> perl6: $_='aAa';  say qq/$_.uc() $_.lc()/;

[20:54] <p6eval> pugs b927740, rakudo 9c2880, niecza v11-20-gb962c2f: OUTPUT«AAA aaa␤»

[20:55] <sorear> to reduce the false positive rate, parens are required on all interpolated method calls

[21:04] *** simcop2387 left
[21:06] *** simcop2387 joined
[21:13] *** mishin left
[21:13] *** worr joined
[21:24] <vmspb> sorear: tnx

[21:24] <vmspb> perl6: my $a='aAa'; $_='bBb';  say <<1 $a.=uc().=lc()>>;

[21:24] <p6eval> rakudo 9c2880: OUTPUT«1 $a.=uc().=lc()␤»

[21:24] <p6eval> ..niecza v11-20-gb962c2f: OUTPUT«1 aaa␤»

[21:24] <p6eval> ..pugs b927740: OUTPUT«1aAa.=uc().=lc()␤»

[21:24] <vmspb> perl6: my $a='aAa'; $_='bBb';  say <<2 $a.=uc() .=lc()>>;

[21:24] <p6eval> niecza v11-20-gb962c2f: OUTPUT«2 AAA .=lc()␤»

[21:24] <p6eval> ..pugs b927740: OUTPUT«2aAa.=uc().=lc()␤»

[21:24] <p6eval> ..rakudo 9c2880: OUTPUT«2 $a.=uc() .=lc()␤»

[21:24] <vmspb> perl6: my $a='aAa'; $_='bBb';  say <<3 $a.=uc() $_.=lc()>>;

[21:24] <p6eval> rakudo 9c2880: OUTPUT«3 $a.=uc() $_.=lc()␤»

[21:25] <p6eval> ..pugs b927740: OUTPUT«3aAa.=uc()bBb.=lc()␤»

[21:25] <p6eval> ..niecza v11-20-gb962c2f: OUTPUT«3 AAA bbb␤»

[21:25] <vmspb> I think variant 2 and 3 should be the same

[21:25] <sorear> vmspb: what exactly are you trying to do?

[21:25] *** Reaganomicon joined
[21:25] <flussence> he's doing a good job of digging up bugs :)

[21:26] <sorear> vmspb: no, 2 and 3 should not be the same

[21:29] <vmspb> http://perlcabal.org/syn/S02.html#Implicit_Topical_Method_Calls

[21:30] <sorear> vmspb: that applies to code, not quotes

[21:30] *** mj41 joined
[21:31] <sorear> contrary to popular belief, you can't just put arbitrary Perl 6 code in the middle of a double-quoted string and have it work.

[21:33] <moritz> well, you can, if you put {...} around it

[21:33] <moritz> :-)

[21:34] <dalek> 6model: c42173e | diakopter++ | lua/compiler/try.sh:

[21:34] <dalek> 6model: update try.sh (untested) for nqplua; sorear++ for finding

[21:34] <dalek> 6model: review: https://github.com/diakopter/6model/commit/c42173ea08

[21:50] *** fsergot joined
[21:54] *** cooper left
[22:04] *** MayDaniel joined
[22:04] *** bluescreen10 left
[22:05] *** bluescreen10 joined
[22:11] *** soh_cah_toa joined
[22:13] *** localhost left
[22:15] *** localhost joined
[22:21] *** PacoLinux left
[22:21] *** PacoLinux joined
[22:32] <soh_cah_toa> rakudo: my :($foo, $bar)

[22:32] <p6eval> rakudo 9c2880: OUTPUT«===SORRY!===␤Malformed my at line 1, near ":($foo, $b"␤»

[22:33] <soh_cah_toa> well, even though that failed, what does that ^ kind of declaration do? i've never seen the : used before

[22:33] <sorear> std: my :($foo, $bar)

[22:33] <p6eval> std be1f10e: OUTPUT«===SORRY!===␤Malformed my at /tmp/tzmhRV4Nei line 1:␤------> my ⏏:($foo, $bar)␤    expecting scoped declarator␤Parse failed␤FAILED 00:01 118m␤»

[22:43] <dalek> 6model: 88e7252 | sorear++ | lua/compiler/try.sh:

[22:43] <dalek> 6model: try.sh needs to be marked executable to work on Unix

[22:43] <dalek> 6model: review: https://github.com/diakopter/6model/commit/88e7252f77

[22:52] *** Ingis joined
[22:54] *** IngisKahn left
[23:03] *** vmspb left
[23:03] *** Mowah left
[23:14] *** kst left
[23:22] *** zby_home_ left
[23:24] *** kst joined
[23:26] *** dorlamm joined
[23:26] <dalek> 6model: 8763433 | sorear++ | lua/runtime/Metamodel/KnowHOW/KnowHOWBootstrapper.lua:

[23:26] <dalek> 6model: Fix nil concatenate secondary error on method-not-found

[23:26] <dalek> 6model: review: https://github.com/diakopter/6model/commit/8763433160

[23:28] *** eternaleye left
[23:48] *** am0c joined
[23:59] *** thou left
