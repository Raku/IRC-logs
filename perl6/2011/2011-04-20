[00:02] <tylercurtis> \| as specced would seem to be a problem for avoiding generating Captures, (or for generating Captures, even).

[00:05] *** zer0o joined
[00:07] <tylercurtis> For subs and multi subs, I suppose that it could be optimized away in most cases.

[00:08] <tylercurtis> And for methods, I guess there could be some flag on the method that specifies it, which the generated code for calling would have to look at in a somewhat inelegant manner.

[00:10] <tylercurtis> Somewhat inelegant being because a method call or even an indirected access through the REPR would require the same check.

[00:17] *** cosimo joined
[00:20] *** xinming_ joined
[00:22] *** xinming left
[00:24] <TimToady> might be sufficient to keep a list of method names that are known to need pessimization

[00:24] <TimToady> assuming classes aren't being added on the fly

[00:25] <TimToady> or we can just outlaw \| on methods in the absence of declarative pessimization

[00:25] <sorear> tylercurtis: compile-time unkown named arguments are a bit of a pessimal case regardless, since they require a general map structure of some kind

[00:25] <TimToady> use MONKEY_CAPTURING :)

[00:26] <sorear> my current thinking on the matter is that every call passes a list of variables and a "call signature"; the binder builds a capture if needed, fastpathing the no-named case

[00:27] <TimToady> or somehow the REPR of captures knows how to deal with native arglists

[00:28] <TimToady> but only goes through the REPR for \| and such

[00:28] <TimToady> we might be saying the same thing from opposite ends

[00:32] *** zer0o left
[00:34] <tylercurtis> My initial idea is that a call passes a count of positional and of named arguments, the positional arguments, and the named arguments as a plist.

[00:35] <tylercurtis> Named argument access then requires linear search, though.

[00:38] <tylercurtis> My primary reason for not wanting to generate captures is for simplicity of bootstrapping, so I'd be willing to sacrifice some amount of named performance for ease of implementation.

[00:40] <tylercurtis> And I suspect that linear search for named access would only be a performance problem for multi-dispatch anyway.

[00:41] *** xinming_ left
[00:41] <tylercurtis> So, one could handle multis and methods(or possibly just multimethods) differently.

[00:42] * tylercurtis job &

[00:49] *** justatheory joined
[01:19] *** starcoder left
[01:20] *** starcoder joined
[01:32] *** whiteknight left
[01:49] *** jevin left
[01:57] *** drbean left
[01:58] *** woosley joined
[02:03] <flussence> tadzik: you broke my single-quoted strings :( https://github.com/rakudo/rakudo/blob/master/src/core/Str.pm#L113

[02:03] *** clkao left
[02:03] *** clkao joined
[02:04] *** ymasory joined
[02:05] *** spq left
[02:06] *** spq joined
[02:06] *** uniejo left
[02:07] *** uniejo joined
[02:08] *** __rnddim__ is now known as lue

[02:17] *** drbean joined
[02:26] *** leprevost left
[02:52] *** nymacro joined
[02:55] *** ymasory left
[03:05] *** satyavvd joined
[03:13] *** ymasory joined
[03:14] *** hudnix left
[03:14] *** jevin_ joined
[03:27] *** jcrigby joined
[03:33] *** LaVolta joined
[03:59] *** noganex_ joined
[04:02] *** nym joined
[04:02] *** ggoebel__ joined
[04:03] *** nymacro left
[04:03] *** noganex left
[04:03] *** yegor left
[04:03] *** cggoebel left
[04:03] *** mberends left
[04:10] *** yegor joined
[04:16] *** mberends joined
[04:17] *** orafu left
[04:17] *** orafu joined
[04:30] *** birdwindupbird joined
[04:31] *** ymasory left
[04:33] * mberends clones https://github.com/svatsan/6model

[04:33] <phenny> mberends: 19 Apr 23:03Z <isBEKaml> tell mberends You can have a look at 6model/jvm build changes so far here: https://github.com/svatsan/6model. 

[04:36] *** Minthe joined
[04:39] *** Minthe left
[04:42] *** Minthe joined
[04:42] <mberends> phenny, tell isBEKaml the Debian 6.0 ant is just a teeny bit older - hopefully  you can live with compliance level '1.5': [javac] Compliance level '1.5' is incompatible with source level '1.6'. A compliance level '1.6' or better is required

[04:42] <phenny> mberends: I'll pass that on when isBEKaml is around.

[04:45] <mberends> oh, that means Java 6. Well, hopefully Java 5 is good enough for what 6model needs.

[04:46] *** Minthe left
[04:51] <mberends> phenny, tell isBEKaml changing the 1.6 to 1.5 in 6model/java/runtime/build.xml works, it builds here with no errors and 29 warnings :)

[04:51] <phenny> mberends: I'll pass that on when isBEKaml is around.

[05:01] *** cognominal left
[05:02] *** cognominal joined
[05:02] <tadzik> flussence: oh shit, let me fix this

[05:02] <tadzik> how on earth did it compile?

[05:03] <tadzik> rakudo say 'foo " ~ "bar'

[05:03] <tadzik> rakudo: say 'foo " ~ "bar'

[05:03] <p6eval> rakudo 887bb5: OUTPUT«foo " ~ "bar␤»

[05:03] <tadzik> oh, I see

[05:04] <tadzik> colomon: pong

[05:09] <dalek> rakudo: 374e381 | tadzik++ | src/core/Str.pm:

[05:09] <dalek> rakudo: Fix a typo in Str.pm, flussence++

[05:09] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/374e38177a

[05:10] <colomon> tadzik: apparently I sensed your pong and woke up.  :)

[05:10] <tadzik> that was a *pong* :)

[05:10] <colomon> tadzik: how do we tell what needs to be done to get a panda for a module?

[05:11] <tadzik> colomon: be spec.pod-conformant

[05:11] <tadzik> https://github.com/tadzik/ecosystem/blob/master/spec.pod

[05:12] <tadzik> the script checks the existence of just one of the mandatory fields :)

[05:13] <colomon> how often does te script check?  I mean, if I brought a module up to spec yesterday, when would it change on modules.perl6.org

[05:14] <tadzik> it's done hourly I think

[05:14] <colomon> then I'm stumped, because as far as I know IO::Prompter has been up to spec for about six hours now.

[05:14] <tadzik> hmm

[05:15] <tadzik> for me it should have a panda

[05:15] * tadzik runs the script locally

[05:16] <tadzik> colomon: you broke the script with a broken JSON :)

[05:16] <tadzik> missing comma on line 7

[05:16] <colomon> argh

[05:17] <colomon> how can we test this at home?

[05:17] <tadzik> the script could be more die-hard in suck cases

[05:17] <tadzik> https://github.com/perl6/modules.perl6.org/

[05:17] <tadzik> clone and run PERL_LWP_SSL_VERIFY_HOSTNAME=0 perl build-project-list.pl in web/

[05:20] <dalek> modules.perl6.org: b1c2acd | tadzik++ | README:

[05:20] <dalek> modules.perl6.org: Make README represent the present state

[05:20] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/b1c2acdc09

[05:26] *** simcop2387 left
[05:28] *** mberends left
[05:28] <colomon> tadzik: won't that test every module, not just the one I have?

[05:31] *** simcop2387 joined
[05:34] <tadzik> colomon: it will, unless you copy META.list to META.list.local and make it just have one line

[05:34] <colomon> may I humbly suggest you might find a way to making checking this simpler?

[05:36] <tadzik> :) sure

[05:37] <tadzik> echo https://github.com/colomon/IO-Prompter/raw/master/META.info > META.list.local

[05:38] <tadzik> PERL_LWP_SSL_VERIFY_HOSTNAME=0 perl build-project-list.pl

[05:38] <tadzik> and then enjoy your shiny index.html with a cute panda

[05:41] * colomon bad to bed

[05:51] *** plobsing joined
[05:52] *** kaare__ joined
[05:54] *** wtw joined
[05:59] *** lue left
[06:15] *** f00li5h left
[06:24] *** plobsing_ joined
[06:25] *** plobsing left
[06:37] *** f00li5h joined
[06:37] *** simcop2387 left
[06:41] *** dorlamm joined
[06:50] *** shi joined
[06:53] <dalek> rakudo: f356acb | moritz++ | build/PARROT_REVISION:

[06:53] <dalek> rakudo: bump PARROT_REVISION to release

[06:53] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/f356acb9de

[06:53] <dalek> rakudo: e09cb7e | moritz++ | docs/ChangeLog:

[06:53] <dalek> rakudo: [docs] add two more entries to ChangeLog

[06:53] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/e09cb7e4f2

[06:54] <tadzik> when is the Star release?

[06:57] *** noganex_ is now known as noganex

[07:00] <moritz> ask pmichaud :-)

[07:01] <tadzik> :)

[07:01] <moritz> usually on the weekend after the compiler release

[07:01] <moritz> tadzik: be sure to get panda in early, and test it

[07:01] <moritz> it would be a pity if star shipped without it

[07:02] <tadzik> yeah, I still regret that neutro was removed from Star some time ago

[07:02] <tadzik> just before the shipping :(

[07:03] <tadzik> I wonder if it wouldn't be good to limit the modules in the ecosystem which will be available in Star-panda to those who work

[07:03] <tadzik> or even which

[07:10] *** dorlamm left
[07:11] * tadzik gone

[07:13] *** hudnix joined
[07:26] *** mj41 joined
[07:28] *** justatheory left
[07:56] *** LaVolta left
[08:01] *** cognominal left
[08:02] *** shi left
[08:02] *** cognominal joined
[08:05] *** jedai_ left
[08:05] *** shi joined
[08:17] *** jedai joined
[08:19] *** TiMBuS joined
[08:25] *** SHODAN joined
[08:40] *** Lorn left
[08:41] *** Lorn joined
[08:58] *** Lorn left
[09:02] *** dakkar joined
[09:06] *** cosimo left
[09:19] *** cotto left
[09:33] *** simcop2387 joined
[09:47] *** hudnix left
[09:48] *** miso2217 left
[09:52] *** miso2217 joined
[09:52] *** kjeldahl joined
[09:55] *** cotto joined
[09:57] *** robinsmidsrod left
[09:57] *** robinsmidsrod joined
[10:00] *** [particle] left
[10:01] *** woosley left
[10:04] <miso2217_> 7

[10:04] <moritz> is a prime

[10:09] *** fhelmberger joined
[10:14] <birdwindupbird> is odd

[10:15] <moritz> .oO( 2 is the oddest prime )

[10:22] <SHODAN> no no it's very even

[10:22] <mathw> but it's also odd

[10:22] <birdwindupbird> :)

[10:22] * mathw is feeling slightly giddy

[10:36] *** starcoder is now known as Forever_Winter

[10:36] *** Forever_Winter is now known as starcoder

[10:48] *** MayDaniel joined
[11:05] *** pmurias joined
[11:06] *** xinming joined
[11:09] *** MayDaniel left
[11:11] *** noganex_ joined
[11:14] *** noganex left
[11:16] *** pernatiy left
[11:29] *** kjeldahl left
[11:32] *** woosley joined
[11:55] *** Patterner left
[11:56] *** Psyche^ joined
[11:56] *** Psyche^ is now known as Patterner

[12:01] *** coldhead left
[12:14] *** donri joined
[12:27] *** simcop2387 left
[12:28] *** simcop2387 joined
[12:33] *** smash_ joined
[12:33] *** mtk joined
[12:36] *** [Coke] left
[12:38] *** smash_ is now known as smash

[12:38] *** smash left
[12:38] *** [Coke] joined
[12:39] *** smash joined
[12:39] <smash> hello everyone

[12:40] *** sftp joined
[12:41] *** satyavvd left
[12:42] <moritz> \o/ smash 

[12:43] *** grai left
[12:43] <tadzik> o/

[12:43] <miso2217> o/

[12:45] <takadonet> morning all

[12:46] *** grai joined
[12:47] *** mtk left
[12:48] *** mtk joined
[12:48] *** mtk left
[12:49] *** mtk joined
[12:56] *** hudnix joined
[12:58] *** Holy_Cow joined
[13:15] *** [particle] joined
[13:35] *** ymasory joined
[13:36] *** bluescreen10 joined
[13:40] *** slavik1 joined
[13:42] *** slavik left
[13:49] *** ymasory left
[13:54] *** slavik joined
[13:55] *** slavik1 left
[14:02] *** bbworm joined
[14:05] *** SHODAN left
[14:09] *** dual left
[14:12] *** dual joined
[14:19] *** alester joined
[14:22] *** wtw left
[14:29] <jnthn> afternoon, #perl6

[14:29] <phenny> jnthn: 19 Apr 22:43Z <isBEKaml> tell jnthn if you've got time later - please look into this and let me know. Thanks. http://pastebin.com/zpXKTMGd

[14:29] <phenny> jnthn: 19 Apr 23:02Z <isBEKaml> tell jnthn you can have a look at the changes so far here: https://github.com/svatsan/6model. Let me know what you see in P6Objects issue that I pointed earlier. 

[14:29] <moritz> \o jnthn 

[14:30] <TimToady> jnthn: mornin'

[14:30] <moritz> isBEKaml++ # 6model hacking

[14:30] *** grai left
[14:30] *** mtk left
[14:32] <jnthn> o/ moritz, TimToady 

[14:33] <jnthn> So...no more $dayjob to worry about until Tuesday, and next week looks quiet. :)

[14:35] <moritz> http://jjinux.blogspot.com/2011/04/call-me-crazy-calling-conventions.html nice, but doesn't really go deep into the gory details :-)

[14:35] <jnthn> phenny: tell isBEKaml I think the P6Objects.pm issue is maybe that PAST2JST.pm is missing some sync with PAST2DNST.pm in the clr directory. Eventually the hope was to merge the two... mberends++ probably knows a little more on the status of that, but I suspect that's the issue. You could always not build it for now - it's no use until you get to having classes...which needs more of NQPSetting to build.

[14:35] <phenny> jnthn: I'll pass that on when isBEKaml is around.

[14:37] <lestrrat> is there a way to get the "current class name" within a method, like P5 sub { my ($class, @args) = @_ } ?

[14:38] <moritz> lestrrat: self.WHAT

[14:38] <lestrrat> moritz: .WHAT apparently comes with a trailing () ?

[14:38] <moritz> lestrrat: then add .perl at the end

[14:39] <lestrrat> haven't tried that... thanks!

[14:39] <moritz> more specifically .WHAT returns the type object, which just happens to stringify to name + ()

[14:39] <jnthn> Note that .WHAT is a type obj...what moritz++ said :)

[14:40] <tadzik> rakudo: "foo".WHAT.Str.say

[14:40] <p6eval> rakudo e09cb7: OUTPUT«Str()␤»

[14:40] <jnthn> Also in theory $?CLASS.perl :)

[14:40] *** mtk joined
[14:40] <tadzik> hmm

[14:40] <lestrrat> I see. so thing.WHAT is the type obj, .perl does the stringified dump.

[14:40] <tadzik> rakudo: say ~"foo".WHAT

[14:40] <moritz> jnthn: is'nt $?CLASS the current lexical class?

[14:40] <p6eval> rakudo e09cb7: OUTPUT«Str()␤»

[14:40] <jnthn> moritz: Yes

[14:40] <moritz> jnthn: as opposed to the actual type of the invocant, which could be a subtype

[14:40] <jnthn> moritz: But if you're in a method... :)

[14:41] <jnthn> moritz: Oh, true

[14:41] <tadzik> rakudo: "foo".WHAT.perl.say

[14:41] <p6eval> rakudo e09cb7: OUTPUT«Str␤»

[14:41] <jnthn> Well, the question didn't specify virtualness :)

[14:41] <tadzik> oh there we go

[14:41] <moritz> jnthn: it included "like in perl 5"

[14:41] <jnthn> Ah

[14:41] <jnthn> :)

[14:41] <lestrrat> $?CLASS is __PACKAGE__ ?

[14:42] <moritz> yes

[14:42] <lestrrat> gotcha.

[14:42] <tadzik> yay, 5.14 RC1

[14:43] <jnthn> nqp: class Dog { method x() { say($?CLASS); say(self.WHAT); } }; class Puppy is Dog { }; Dog.new.x(); Puppy.new.x();

[14:43] <p6eval> nqp: OUTPUT«Dog()␤Dog()␤Dog()␤Puppy()␤»

[14:43] <moritz> tadzik: I'm already perlbrewing it :-)

[14:43] <tadzik> oh, top tempting me! :)

[14:43] <tadzik> must resist, must resi... gah!

[14:43] *** hercynium joined
[14:43] <tadzik> how do I use this perlbrew thing? :)

[14:44] <moritz> cpanm perlbrew

[14:44] <moritz> perlbrew install perl-5.14.0-RC1

[14:44] <moritz> wait

[14:44] <moritz> :-)

[14:44] <moritz> oh, you might need 'perlbrew init' as the second step

[14:44] <tadzik> :) will this run the tests to?

[14:44] <moritz> yep

[14:45] <moritz> and it builds with -j arguments to make

[14:45] <moritz> which is why it takes so long

[14:45] <tadzik> did you mean: with no -j args?

[14:45] <moritz> it just does 'make test'

[14:46] <moritz> and not 'make -j3 test'

[14:47] <flussence> no TEST_JOBS like rakudo? pfft. :)

[14:48] <moritz> dunno

[14:54] *** wolverian left
[14:57] *** wolverian joined
[14:59] *** risou joined
[15:02] <lestrrat> how do you load a class by $classname, and instantiate it? i.e. in P5: eval "require $classname"; $classname->new(..)

[15:03] * moritz thinks that there's a nice way, and that rakudo doesn't implement it yet

[15:03] <colomon> $classname.eval.new should work, right?

[15:04] <moritz> you can try  require $classname; my $class = eval $classname; my $object = $class.new

[15:04] <colomon> rakudo: my $s = "Rat"; say $classname.eval.new(2,3)

[15:04] <p6eval> rakudo e09cb7: OUTPUT«===SORRY!===␤Symbol '$classname' not predeclared in <anonymous> (/tmp/BWgV1wX2sL:22)␤»

[15:04] <colomon> rakudo: my $classname = "Rat"; say $classname.eval.new(2,3)

[15:04] <PerlJam> last time I checked that didn't work right

[15:04] <p6eval> rakudo e09cb7: OUTPUT«0.666666666666667␤»

[15:05] <colomon> ah, but that doesn't include the require part.

[15:05] *** JimmyZ joined
[15:05] <lestrrat> will try...

[15:07] <lestrrat> woot. require + eval worked. thanks!

[15:08] *** ymasory joined
[15:09] <tadzik> oh, zby will be happy

[15:09] *** justatheory joined
[15:18] *** wolverian left
[15:18] *** ive joined
[15:20] *** wolverian joined
[15:22] *** Moukeddar joined
[15:22] *** Trashlord left
[15:22] <Moukeddar> hello 

[15:22] <jnthn> o/

[15:23] *** ive left
[15:23] *** Trashlord joined
[15:23] <mathw> o/

[15:24] <Moukeddar> wut?

[15:24] *** sftp left
[15:25] *** sftp joined
[15:25] *** bluescreen10 left
[15:25] <mathw> Hi Moukeddar

[15:25] *** wolverian left
[15:26] <Moukeddar> sounds better :)

[15:27] <jnthn> You're not really meant to try and say "o/" out loud. :)

[15:28] <jnthn> (It's meant to look like a person waving hello. :))

[15:28] *** am0c joined
[15:28] *** wolverian joined
[15:29] <PerlJam> o/~ used mean "musically" or "in a sing-song voice" or something .... now it just means  "i've waving a tissue at you"

[15:29] <Moukeddar> LOl

[15:29] <Moukeddar> the interwebz

[15:31] *** Trashlord left
[15:31] *** ive joined
[15:31] *** slavik1 joined
[15:33] *** slavik left
[15:40] *** bluescreen10 joined
[15:45] *** slavik joined
[15:45] *** risou left
[15:46] *** Moukeddar left
[15:47] *** risou joined
[15:47] *** slavik1 left
[15:52] *** bbworm left
[15:52] *** Su-Shee joined
[15:52] <Su-Shee> hello everyone!

[15:53] <jnthn> Su-Shee! \o/

[15:54] * Su-Shee sings a "hot town summer in the city.." to greet the channel from berlin. ;)

[15:54] *** stkowski joined
[15:58] <jnthn> It's been hotting up here in Sweden too.

[15:59] <jnthn> I'm going to have to stop wearing winter clothes soon, or something.

[15:59] *** Lorn_ joined
[15:59] <Su-Shee> I was in (on?) iceland a couple of weeks ago, that was a nice climate.

[15:59] *** Lorn_ left
[16:00] *** ive left
[16:00] <jnthn> Yes, Iceland seems to have a wonderful colimate.

[16:00] <jnthn> er, climate

[16:00] <Su-Shee> and insanely nice water. amazing.

[16:00] <jnthn> Yeah

[16:00] <tadzik> it's shining in here too (Poland)

[16:00] <jnthn> And you can take a hot shower for as long as you want \o/

[16:00] * moritz colimates a laser to influence the climate on Iceland

[16:00] <jnthn> :P

[16:01] <Su-Shee> jnthn: which is exactly what I did - besides spa-ing :)

[16:01] <Su-Shee> tadzik: living next to siberia isn't what it used to be anymore.. ;) 

[16:03] *** shi left
[16:07] <tadzik> :)

[16:09] *** kaare__ left
[16:12] <pmurias> jnthn: what's good about the Icelandic climate?

[16:13] <jnthn> pmurias: Doesn't get much over 20C. :)

[16:13] <Su-Shee> strange mix of heavy weather and soft and mild :)

[16:13] <Su-Shee> that on top :)

[16:14] <Su-Shee> pmurias: it was around 3°C when we were there and you start to open your window. "what, no it isn't cold..." totally strange.

[16:15] *** mj41 left
[16:19] *** JimmyZ left
[16:22] <pmurias> jnthn: so the climate is perfect for staying in doors and writing code?

[16:23] <jnthn> pmurias: Well, there is that. ;)

[16:23] <jnthn> pmurias: I actually just generally like cold weather though.

[16:23] <jnthn> pmurias: I'd much rather go out walking in 10C-15C than 25C.

[16:24] *** woosley left
[16:26] <Su-Shee> jnthn: so you're more active in winter too?

[16:27] <jnthn> Su-Shee: Well, or in summer I go to places that aren't too hot

[16:27] <jnthn> Su-Shee: When I go to Switzerland for hiking my starting point is to stay over 1km up, which shaves several degrees off the temperature at the base of the mountain range. :)

[16:27] <Su-Shee> one year I realized that literally _everything_ I like to do sucks with heat. :)

[16:29] <Su-Shee> well except heat-from-oven ;)

[16:35] *** cdarroch joined
[16:35] *** cdarroch left
[16:35] *** cdarroch joined
[16:36] *** birdwindupbird left
[16:39] *** Lorn_ joined
[16:45] *** [Coke] left
[16:45] *** cognominal left
[16:46] *** mj41 joined
[16:46] <moritz> what about living? :-)

[16:46] *** [Coke] joined
[16:47] *** cognominal joined
[16:50] <Su-Shee> only moderate heat. never over 18°C. I rather wear two sweaters.

[16:53] *** cognominal left
[16:54] *** Chillance joined
[16:59] *** isBEKaml joined
[17:00] <isBEKaml> good *, #perl6!

[17:00] <phenny> isBEKaml: 04:42Z <mberends> tell isBEKaml the Debian 6.0 ant is just a teeny bit older - hopefully  you can live with compliance level '1.5': [javac] Compliance level '1.5' is incompatible with source level '1.6'. A compliance level '1.6' or better is required

[17:00] <phenny> isBEKaml: 04:51Z <mberends> tell isBEKaml changing the 1.6 to 1.5 in 6model/java/runtime/build.xml works, it builds here with no errors and 29 warnings :)

[17:00] <phenny> isBEKaml: 14:35Z <jnthn> tell isBEKaml I think the P6Objects.pm issue is maybe that PAST2JST.pm is missing some sync with PAST2DNST.pm in the clr directory. Eventually the hope was to merge the two... mberends++ probably knows a little more on the status of that, but I suspect that's the issue. You could always not build it for now - it's no use until you get to having classes...which needs more of NQPSetting to build.

[17:04] *** dakkar left
[17:05] *** [Coke] left
[17:07] *** [Coke] joined
[17:08] <isBEKaml> jnthn: Ah, okay. I have the compiler build targets in place, though. We'll run through the builds when that's about ready. 

[17:10] <isBEKaml> phenny: tell mberends Yes, most production java deployments run on JDK 5 and so that's not an issue. I set the version to 1.5 and ran a build but didn't get any warnings. Since you say you do, "Fix them!" :P

[17:10] <phenny> isBEKaml: I'll pass that on when mberends is around.

[17:10] *** MayDaniel joined
[17:16] *** orphu joined
[17:16] *** Bzek joined
[17:23] *** MayDaniel left
[17:28] *** Rotwang joined
[17:38] <isBEKaml> jnthn: is there any way to tell compile.pir to look at a specific location for compiled java classes? --no-core-libs has too much magic involved for me to see. :|

[17:39] *** mtk left
[17:40] *** orphu left
[17:42] *** mberends joined
[17:42] <jnthn> isBEKaml: compile.pir just generates a bunch of Java code - it doesn't look anything up itself.

[17:43] <jnthn> ooh, mberends++ is here ;)

[17:43] <jnthn> --no-core-libs I think sets a flag that something in Actions.pm pays attention to.

[17:43] <jnthn> And then it just doesn't generate anything to load that library

[17:44] *** mtk joined
[17:44] *** Axius joined
[17:44] <isBEKaml> jnthn: your reference to NQPSetting required to build P6Objects led me to think it might be the case. 

[17:45] <isBEKaml> the thing is, NQPSetting is built before it gets to building P6Objects. It looks like it doesn't happen to know NQPSetting already exists. 

[17:45] <isBEKaml> mberends: Hey! # get the guy out of his shell. :)

[17:45] *** fhelmberger left
[17:46] <isBEKaml> jnthn: that's why I asked if there's a switch to pass into compile.pir to look for NQPSetting. 

[17:47] <jnthn> isBEKaml: For now I'd just drop looking at P6Objects.pm.

[17:47] <jnthn> isBEKaml: So far as I know, it's not built/worked on nqpjvm ever yet.

[17:47] <jnthn> isBEKaml: And probably won't until NQPSetting.pm will compile/load.

[17:48] <jnthn> With most of the stuff from the common one.

[17:48] <isBEKaml> jnthn: Okay. 

[17:48] * isBEKaml drops P6 Objects down the stream. 

[17:48] <jnthn> That may mean always running it with --no-core-libs or just twiddling compile.pir to always set that by default for now.

[17:49] <isBEKaml> I have commented out that particular portion of build config. Let's see how that goes. 

[17:50] * jnthn is breaking everything in nqp/ctmo

[17:58] *** cotto_work2 is now known as cotto_work

[18:02] * moritz is glad we're using version control :-)

[18:03] <jnthn> I'm working in a branch anyway ;)

[18:03] *** cognominal joined
[18:04] <Su-Shee> we switched sucessfully 12 years of cvs into git 10 weeks ago.. how could we ever worked without.. ;)

[18:05] <isBEKaml> Su-Shee! How are you? :)

[18:05] *** karamorf joined
[18:05] <Su-Shee> very fine, just office-business (end of release cycle.. :)

[18:06] <isBEKaml> and vacation time, I presume? (btw, I can't hear you. jnthn++ is breaking stuff in his room) ;)

[18:08] <Su-Shee> isBEKaml: no, I like vacation better in winter :)

[18:08] <Su-Shee> I'll relax with a new project over the next weeks :)

[18:10] <isBEKaml> jnthn: I got the compiler build working too (sans P6O..) \o/

[18:10] * isBEKaml thinks he should shout out to jnthn now.. 

[18:10] <isBEKaml> JNTHN!

[18:10] <isBEKaml> Su-Shee: that's great! :)

[18:11] *** am0c left
[18:12] <Su-Shee> design - hack - improve - hack - polish - deliver - qa - improve more - next feature ... and then you die. ;)

[18:13] <isBEKaml> vicious cycle. :)

[18:13] <jnthn> isBEKaml: Yay!

[18:14] <jnthn> (to compiler build working ;))

[18:15] *** [Coke] left
[18:17] *** [Coke] joined
[18:17] *** masak joined
[18:17] <masak> hi, zebras!

[18:17] <isBEKaml> jnthn: yeah, pushed. :)

[18:18] <isBEKaml> masak: \o/

[18:19] <masak> are you optimizing for fun, people? :)

[18:19] <masak> beware of local maxima! :P

[18:19] <isBEKaml> vacatimes, what do you expect? 

[18:19] *** bluescreen10 left
[18:20] <isBEKaml> local maxima? second order? :)

[18:20] <masak> I'm masak, a second-order local maximum.

[18:21] <isBEKaml> seen and sealed in a timecapsule. :P

[18:21] <aloha> Sorry, I haven't seen and sealed in a timecapsule. :P.

[18:21] <isBEKaml> aloha: go take a break. 

[18:21] <jnthn> aloha: seen the rule about bots not speaking unless spoken to

[18:21] <aloha> jnthn: Sorry, I haven't seen the rule about bots not speaking unless spoken to.

[18:22] *** pernatiy joined
[18:22] <jnthn> :/

[18:22] <masak> seen the book "How to shut up when you're a bot"?

[18:22] <aloha> Sorry, I haven't seen the book "How to shut up when you're a bot".

[18:22] <jnthn> masak: To be fair, Amazon don't seem to have that book...

[18:23] <masak> seen the quine "Sorry, I haven't seen the quine \"$insert-quine-here\""

[18:23] <aloha> Sorry, I haven't seen the quine "Sorry, I haven't seen the quine \"$insert-quine-here\"".

[18:23] <masak> jnthn: :P

[18:24] <jnthn> .oO( oh, hear we go, horsing around with electronic quines... )

[18:24] <jnthn> *here

[18:24] <isBEKaml> masak: looks like you're on ballmer's curve. :D

[18:25] <masak> isBEKaml: no, just hungry and therefor a bit silly :P

[18:28] <isBEKaml> jnthn: I have also modified try.sh not to go building jars unless not already available. I'm not sure how to do that on .bat file. 

[18:28] <jnthn> me either ;)

[18:28] <isBEKaml> masak: Oh, that reminds me. I should probably go make myself a cup of tea... :)

[18:28] <jnthn> oh, I forgot to have dinner too...

[18:28] *** risou left
[18:29] <isBEKaml> jnthn: britto, did you miss an 'n' ? *SCNR*

[18:29] <masak> 'either'/'neither'?

[18:29] <jnthn> :P

[18:29] <isBEKaml> I guess that should be neither if I understood what he meant. 

[18:30] <masak> sure, 'me either' sounds more slangy.

[18:30] <jnthn> Yeah, it's slangy

[18:30] <masak> but I've come to accept it as somehow still grammatical.

[18:30] <jnthn> My English sucks. :)

[18:30] <masak> can't motivate it though.

[18:30] <jnthn> masak: It's far easier to say.

[18:30] <masak> maybe it's short for 'not me either'?

[18:30] <jnthn> Maybe. :)

[18:31] <isBEKaml> that's like some programmers doing  if (1 == foo) { /* do something */ }

[18:31] <masak> as exhibit B, the "full" original sentence would be "I'm not sure how to do that on a .bat file *either*."

[18:31] <masak> isBEKaml: what's wrong with that? :P

[18:32] <masak> isBEKaml: the computer doesn't care, why do you? :)

[18:32] *** bluescreen10 joined
[18:32] <isBEKaml> masak: I find it pretty amusing that "not me either" is easier to say than "me neither"

[18:33] <isBEKaml> masak: Your exhibit doesn't hold water since you didn't include context. 

[18:33] <masak> isBEKaml: huh? the full sentence *is* the context, no?

[18:34] <isBEKaml> masak: along with the first. That's context. :P

[18:34] <isBEKaml> masak: .. do that on a .bat file. .WHAT adds context. :D

[18:35] <masak> oh, the original sentence? sure.

[18:35] <masak> but that's the one jnthn was implicitly replying to/taking as $_

[18:36] <isBEKaml> ah, there was a 'not' in there too. so, that's !either == neither. (This is how we end grammar lessons in here) 

[18:37] <isBEKaml> a very knotty lesson, I know. 

[18:37] <isBEKaml> :P

[18:38] <jnthn> .oO( And after all that, I'm still not sure if I said it wrong... :P )

[18:41] *** ymasory left
[18:41] <masak> me either.

[18:42] <isBEKaml> me !either

[18:43] <isBEKaml> .oO(does that make all of us swimming in circles? English was never my forte, oh well) :P

[18:47] <masak> if anything could be someone's forte, it would be Italian.

[18:47] <isBEKaml> jnthn: when you have time, can you try building those with ant on your machine? I'd like to see how that goes... I'll add another master config file in sometime. 

[18:48] *** karamorf left
[18:49] *** bluescreen10 left
[18:50] *** jdv79 joined
[18:51] <jdv79> 6guts is stagnating.  curious why.  bogged down in design quandries?

[18:53] *** jevin_ left
[18:53] *** jevin joined
[18:53] <jnthn> isBEKaml: I....don't have ant on my machine, I think... I can try to get hold of it.

[18:54] <jnthn> isBEKaml: But debugging $package-refactor at the moment :)

[18:54] <jnthn> jdv79: General tuit shortage over the last while. The few I've had, I've put into making little bits of progress.

[18:54] <jnthn> jdv79: It's not been forgotten. :)

[18:55] <jnthn> When I get through this package refactor, that alone will be worth a post.

[18:55] <isBEKaml> jnthn++

[18:55] <jdv79> thx

[18:55] *** cognominal left
[18:56] <masak> jnthn: yes, more blog posts, pls! :)

[18:56] * masak <-- pot, calling kettle

[18:57] <jnthn> Is the kettle picking up?

[18:57] *** silent_h_ joined
[18:57] <masak> you tell me.

[19:02] *** ymasory joined
[19:05] *** silent_h_ left
[19:05] *** bluescreen10 joined
[19:08] *** nym left
[19:24] *** dorlamm joined
[19:25] *** wooden left
[19:27] *** twinshadow left
[19:35] *** Axius left
[19:45] *** jevin left
[19:47] *** Holy_Cow left
[19:47] *** Holy_Cow joined
[19:48] *** pernatiy left
[19:50] <masak> rakudo: class Cow { method Str { self.WHAT.perl ~ "!" } }; role Holy { method Str { "Holy {callsame}" } }; given Cow.new { $_ does Holy; .say }

[19:50] <p6eval> rakudo e09cb7: OUTPUT«Holy !␤»

[19:50] *** jevin joined
[19:50] <masak> hrm.

[19:53] <jnthn> masak: When you mix in the role if produces an anonymous type.

[19:53] <masak> oh, right!

[19:53] <jnthn> Note it did callsame because the ! is there

[19:54] <masak> aye.

[19:54] <masak> I'm not sure I like it that anonymous types have "" as their names.

[19:54] <masak> I know it's vey anonymous, but it's also sometimes confusing.

[19:54] <masak> had it said "Holy anonymous_subclass_of_Cow!", I'd have known what had happened.

[19:55] <jnthn> I think in the NQP meta-objects I've got :$name = '<anon>'

[19:55] <masak> \o/

[19:55] <jnthn> Which is at least a little better, I guess

[19:55] <masak> Holy <anon>!

[19:55] *** jevin left
[19:55] <jnthn> Yeah

[19:55] <sjohnson> cow

[19:56] <masak> sjohnson: hi there!

[19:56] <jnthn> BEEF.

[19:56] <sjohnson> yo masak

[19:56] <jnthn> er, hi

[19:56] <jnthn> :)

[19:56] <sjohnson> hi

[19:56] <sjohnson> how's the perl6 world doing?  i've been involved in a lot of p5 stuff the last few weeks

[19:56] <tadzik> （　° ー°） --< Yay, sjohnson! )

[19:56] <colomon> \o

[19:57] <sjohnson> haha

[19:58] <masak> tadzik: close enough -- but the mouth looks too straight :)

[20:00] <tadzik> masak: it's an optical illusion: when you're looking at the mouth, you don't see it speaking. When looking at the text, you don't see the mouth. So you never know ;)

[20:03] <masak> :)

[20:03] <sjohnson> on my unicode windows machine, the mouth looks curved

[20:03] <sjohnson> http://members.shaw.ca/smujohnson/img/cute/fatface.png

[20:04] <masak> maybe my font is too small :)

[20:05] <sjohnson> i saw it on a few other consoles and a lot of fonts show a straight line

[20:05] <sjohnson> oh well :)

[20:09] *** dorlamm left
[20:10] *** jevin joined
[20:10] <masak> !addquote <PerlJam> o/~ used mean "musically" or "in a sing-song voice" or something .... now it just means  "i've waving a tissue at you"

[20:12] *** Holy_Cow left
[20:17] *** ymasory left
[20:22] *** birdwindupbird joined
[20:24] *** mtk left
[20:25] * colomon gives tadzik the evil eye for renaming repo-url to source-url...

[20:26] <masak> :)

[20:26] *** bluescreen10 left
[20:27] <colomon> It's a mean thing to do to a person with a lot of modules.

[20:27] <masak> just so you don't get any ideas about what to put in your repo... :P

[20:27] <masak> colomon: you and me, we're going to have to earn our pandas. :)

[20:27] <tadzik> colomon: that's moritz fault!

[20:33] *** mtk joined
[20:41] <colomon> I think I'm done with it.

[20:41] <colomon> of course, they're all untested.  :)

[20:42] *** MayDaniel joined
[20:42] *** dorlamm joined
[20:44] *** MayDaniel left
[20:45] *** pernatiy joined
[20:46] <tadzik> :)

[20:47] <tadzik> didn't forgot a comma/ :)

[20:47] <colomon> They passes?

[20:47] <colomon> *passed

[20:47] <colomon> I think I may have more than doubled the number of modules with pandas.  :)

[20:48] <tadzik> oh so maybe: only the panda-badged modules will be available to install in R* release of Panda

[20:48] * tadzik waits for modules.perl6.org to update

[21:02] <tadzik> so many pandas! \o/

[21:10] *** ymasory joined
[21:13] *** hercynium left
[21:14] *** spq left
[21:27] <masak> 'night, #perl6

[21:27] *** masak left
[21:28] *** ymasory left
[21:41] *** justatheory left
[21:41] *** ymasory joined
[21:48] <slavik> night?! what night?

[21:49] <jnthn> It's this weird thing that happens in Sweden.

[21:49] *** mj41 left
[21:57] *** Rotwang left
[22:18] *** coldhead joined
[22:20] *** [Coke] left
[22:22] *** [Coke] joined
[22:31] *** [Coke] left
[22:33] *** [Coke] joined
[22:35] *** pmurias left
[22:39] *** birdwindupbird left
[22:48] *** cognominal joined
[22:50] *** smash left
[22:55] *** cognominal left
[22:57] *** dorlamm left
[22:58] *** whiteknight joined
[23:04] *** alester left
[23:06] *** justatheory joined
[23:06] <dalek> nqp/ctmo: e199d50 | jonathan++ | src/pmc/stable.pmc:

[23:06] <dalek> nqp/ctmo: Mark WHO.

[23:06] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/e199d50809

[23:06] <dalek> nqp/ctmo: 30a5cbb | jonathan++ | src/metamodel/how/NQPClassHOW.pm:

[23:06] <dalek> nqp/ctmo: Catch adding a null method - it's almost certainly a sign of a problem.

[23:06] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/30a5cbb263

[23:06] <dalek> nqp/ctmo: a89b31b | jonathan++ | src/Regex/P6Regex/Actions.pm:

[23:06] <dalek> nqp/ctmo: Actually declare that $REGEXNAME is our scoped rather than never actually declaring it anywhere in NQP.

[23:06] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/a89b31b2d7

[23:06] <dalek> nqp/ctmo: 592c026 | jonathan++ | src/ (2 files):

[23:06] <dalek> nqp/ctmo: Avoid a double-encoding bug (by us then by the toolkit) that oddly manifested itself during other refactors.

[23:06] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/592c026989

[23:12] <dalek> nqp/ctmo: c45260d | jonathan++ | src/NQP/Actions.pm:

[23:12] <dalek> nqp/ctmo: First bite into the package refactor. This changes our-scoped variable storage and lookups in packages. It's enough to give us working storage and lookup of package-scoped variables in lexical packages though, which has never worked before. Various unsurprising regressions. Also eliminates a bit more Q:PIR.

[23:12] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/c45260d0fd

[23:12] <lestrrat> how do you "cast" from a scalar to the actual type? say, I has a hash with (key => sub (..) { }) where the value *may* be an anon sub, and I'm iterating over it via   %hash.kv -> $key, $value and I want to do  the P5 equivalent of $value->( ... )  ?

[23:13] <jnthn> lestrrat: You don't need to

[23:13] <lestrrat> hmm?

[23:13] <jnthn> rakudo: my %foo = k => sub { say "yay" }; for %hash.kv -> $k, $v { $v() }

[23:14] <p6eval> rakudo e09cb7: OUTPUT«===SORRY!===␤Symbol '%hash' not predeclared in <anonymous> (/tmp/RWoHNMmKrs:22)␤»

[23:14] <jnthn> gah

[23:14] <jnthn> rakudo: my %foo = k => sub { say "yay" }; for %fo.kv -> $k, $v { $v() }

[23:14] <p6eval> rakudo e09cb7: OUTPUT«===SORRY!===␤Symbol '%fo' not predeclared in <anonymous> (/tmp/5LoirnJTdy:22)␤»

[23:14] <jnthn> rakudo: my %foo = k => sub { say "yay" }; for %foo.kv -> $k, $v { $v() }

[23:14] <p6eval> rakudo e09cb7: OUTPUT«yay␤»

[23:14] <jnthn> You don't need a dereferencing operator for that in Perl 6

[23:14] <jnthn> Just do $value(arg1, arg2...) :-)

[23:14] <lestrrat> ah..

[23:14] <lestrrat> righto. Thanks!

[23:16] <dalek> nqp/ctmo: fe98d9f | jonathan++ | src/stage0/ (7 files):

[23:16] <dalek> nqp/ctmo: Rebootstrap with the first set of package changes. No especial need, it's mostly just comforting that it still passes the same tests as pre-rebootstrap. :-)

[23:16] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/fe98d9fbe4

[23:18] *** Lorn_ left
[23:19] *** Lorn joined
[23:19] *** Lorn left
[23:19] *** Lorn joined
[23:26] <jnthn> Time to rest. :) Lots more NQP hacking tomorrow. :)

[23:33] *** Chillance left
[23:51] *** stkowski left
[23:51] *** molaf joined
[23:51] *** Mowah left
[23:51] *** Moukeddar joined
[23:54] *** cosimo joined
[23:55] *** Moukeddar left
[23:56] *** molaf_ joined
