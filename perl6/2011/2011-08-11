[00:25] * flussence decides Pod::To::HTML could use a bit more shiny and gets to breaking it :)

[00:27] *** whiteknight joined
[00:34] *** soh_cah_toa left
[00:35] *** ponbiki left
[00:42] *** ponbiki joined
[00:43] *** tokuhir__ left
[00:46] *** rdesfo left
[00:49] <TimToady> phenny: tell moritz your PM note on nested loops has a $net where you want @nets

[00:49] <phenny> TimToady: I'll pass that on when moritz is around.

[00:52] *** jaldhar left
[00:52] *** jaldhar joined
[01:09] *** Wickedxter joined
[01:09] <Wickedxter> hello

[01:10] <sorear> hi

[01:16] *** Wickedxter left
[01:16] *** bbkr left
[01:16] <sjohnson> hi

[01:16] *** bbkr joined
[01:18] *** wolfman2000 joined
[01:20] * sjohnson uses perl to do more japanese

[01:23] *** envi joined
[01:24] *** Tedd1 left
[01:40] *** mkramer1 left
[01:41] *** rdesfo joined
[01:43] *** mkramer joined
[01:43] *** kanishka left
[01:49] *** woosley joined
[01:54] *** whiteknight left
[01:56] *** mikehh joined
[01:58] *** eternaleye_ is now known as eternaleye

[01:58] *** daniel-s left
[01:59] *** rdesfo left
[02:03] *** daniel-s joined
[02:20] *** agentzh joined
[02:20] *** beekor joined
[02:45] *** Some-body_ joined
[02:52] *** Some-body_ is now known as DarthGandalf

[02:52] *** DarthGandalf left
[02:52] *** DarthGandalf joined
[03:14] *** fbass left
[03:14] *** fbass joined
[03:14] *** odoacre joined
[03:18] *** crked left
[03:23] *** Su-Shee_ joined
[03:27] *** Su-Shee left
[03:30] *** Gothmog_ left
[03:37] *** Gothmog_ joined
[03:49] *** wooden joined
[03:49] *** wooden left
[03:49] *** wooden joined
[03:54] *** agentzh left
[03:55] *** skangas left
[03:59] *** birdwindupbird joined
[04:06] *** skangas joined
[04:20] *** molaf__ joined
[04:20] *** LimitSupremum__ joined
[04:21] <LimitSupremum__> so what happens if you attempt to match a junction with another junction?

[04:22] *** molaf_ left
[04:26] *** araujo left
[04:31] <sorear> LimitSupremum__: right-hand side always controls smartmatch behavior

[04:32] <LimitSupremum__> ah, thank you

[04:35] <LimitSupremum__> are functions automatically applied to the elements individually?

[04:35] <LimitSupremum__> e.g. 3|4|5 + 3 == 6|7|8

[04:38] <sorear> yes

[04:39] <sorear> although you might need parens, and == definitely won't DWIM

[04:39] <LimitSupremum__> ah ~~, my mistake

[04:39] <sorear> this is called "autothreading" in the documentation, no relation to OS threads

[04:39] *** jaldhar left
[04:40] <sorear> ~~ also won't do what you want

[04:40] <sorear> 1|2 ~~ 1|2 means (1|2 ~~ 1) | (1|2 ~~ 2)

[04:40] <LimitSupremum__> hmm

[04:40] <LimitSupremum__> so to test actual equality of teh junctions?

[04:40] <LimitSupremum__> what would one do

[04:40] <sorear> $j1.perl eq $j2.perl is probably the best way

[04:41] <sorear> generally, if you want to compare junctions, and you're not writing code for S03-junctions/ in roast, you're probably doing soemthing wrong

[04:41] <LimitSupremum__> how would that work if the junction is anonymous?

[04:41] <sorear> (1|2).perl

[04:41] <LimitSupremum__> well, that's easy enough

[04:42] *** colomon left
[04:42] *** jaldhar joined
[04:42] *** satyavvd joined
[04:44] *** aloha left
[04:46] *** kaare_ joined
[04:47] *** thou joined
[04:48] *** aloha joined
[04:51] *** woosley left
[04:51] *** woosley joined
[04:58] *** rdesfo joined
[04:59] *** colomon joined
[05:13] *** uvtc joined
[05:13] <uvtc> my @a = <a b c d>; say @a[-1];

[05:13] <uvtc> nom: my @a = <a b c d>; say @a[-1];

[05:13] <p6eval> nom: OUTPUT«Cannot use negative index -1 on Array␤current instr.: 'rethrow' pc 834552 (src/gen/CORE.setting.pir:226541) (src/gen/CORE.setting:5198)␤»

[05:14] <uvtc> nom: my @a = <a b c d>; say @a[*-1];

[05:14] <p6eval> nom: OUTPUT«d␤»

[05:14] <uvtc> What's the rationale for requiring the star in there? Why not access the last element via @a[-1]?

[05:15] *** koban joined
[05:21] <moritz> uvtc: catching accidental indexing with a negative number when using a calculation rather than a literal

[05:21] <phenny> moritz: 00:49Z <TimToady> tell moritz your PM note on nested loops has a $net where you want @nets

[05:22] <moritz> phenny: tell TimToady thanks, fixed

[05:22] <phenny> moritz: I'll pass that on when TimToady is around.

[05:23] *** rdesfo left
[05:24] <uvtc> moritz: Can you tell me how you read "@a[*-1]"?

[05:24] <moritz> read aloud?

[05:24] <moritz> or what's the question?

[05:25] <uvtc> Yes. It seems arbitrary to me, and I thought maybe there's a mnemonic that I'm not getting.

[05:26] <moritz> "@a indexed by whatever minus one"

[05:26] <uvtc> Ah! I see. Maybe the mnemonic is, "whatever it's size, minus 1". :)

[05:27] <uvtc> Thanks, moritz.

[05:28] <moritz> right

[05:34] <sorear> uvtc: note that *-1 is a code reference, and you can use any code reference for indexing

[05:35] <sorear> rakudo: my @a = 'a' .. 'z'; say @a[-> $l { rand * $l }]

[05:35] <p6eval> rakudo 922500: OUTPUT«p␤»

[05:35] <sorear> rakudo: say (*-1)(26)

[05:35] <p6eval> rakudo 922500: OUTPUT«25␤»

[05:35] <moritz> rakudo: say (*-1).WHAT

[05:35] <p6eval> rakudo 922500: OUTPUT«WhateverCode()␤»

[05:35] <pmichaud> in general, the star means "whatever"

[05:35] <pmichaud> my $x = * - 2;   say $x(5)

[05:35] <pmichaud> nom: my $x = * - 2;   say $x(5)

[05:36] <p6eval> nom: OUTPUT«3␤»

[05:36] <pmichaud> nom:  my @a = 5,10,15 ... *;   say @a[5];

[05:36] <p6eval> nom: OUTPUT«30␤»

[05:38] <uvtc> sorear: When you say "code reference", do you mean that `*-1` evaluates to the same sort of thing as `sub { say "hi" }`?

[05:38] <TimToady> yes, that's what he means

[05:38] <phenny> TimToady: 05:22Z <moritz> tell TimToady thanks, fixed

[05:39] <TimToady> though you can leave the 'sub' out in p6

[05:39] <uvtc> TimToady: and does something like `-> $x { rand * $x }` also evaluate to the same sort of thing? A "code reference"?

[05:39] <TimToady> yes

[05:40] <TimToady> we tend to call that form a lambda when we're not careful :)

[05:40] <TimToady> since -> looks a little like a lambda that got run over

[05:41] <uvtc> TimToday: I see how the code ref returned from `sub ...` returns something I could call ... Is a "code reference" always something I could save and later call?

[05:41] <TimToady> like bare {}, the -> form is officially a Block rather than a Routine, so it's transparent to 'return'

[05:41] <TimToady> yes, you can always call anything Callable, as long as you give it appropriate args

[05:41] <pmichaud> nom:  my $code = -> $x { rand * $x };  say $code.WHAT

[05:41] <p6eval> nom: OUTPUT«Block()␤»

[05:42] <uvtc> nom: my $code = -> $x {rand * $x }; say $code(3);

[05:42] <p6eval> nom: OUTPUT«0.459344633144621␤»

[05:42] <TimToady> even methods are just routines that happen to treat their first arg as an invocant

[05:43] <uvtc> nom: my $code = sub ($x) { rand  * $x }; say $code(3);

[05:43] <p6eval> nom: OUTPUT«1.88911139102403␤»

[05:43] <sorear> uvtc: I call them code references because I'm a Perl 5 geezer and think ref($x) eq 'CODE'

[05:43] <moritz> rakudo: say Block ~~ Code

[05:43] <uvtc> sorear: ha :)

[05:43] <TimToady> well, other than there's no 'ref' anymore, and no 'CODE', yes

[05:43] <p6eval> rakudo 922500: OUTPUT«Bool::True␤»

[05:43] <sorear> uvtc: now, it's probably better to call them callable objects, because they ~~ Callabele

[05:43] <moritz> TimToady: but still Code

[05:44] <uvtc> But in what way is `*-1` callable?

[05:44] <sorear> rakudo: say (*-1)(42)

[05:44] <p6eval> rakudo 922500: OUTPUT«41␤»

[05:44] <pmichaud> *-1 is like    -> $x { $x - 1 }

[05:44] <pmichaud> it's syntactically changed to become a lambda

[05:44] <TimToady> the * form is an inside-out way to do currying

[05:44] <uvtc> Let's leave cooking out of it.

[05:44] <uvtc> ;)

[05:45] <TimToady> so *-1 is really kinda like &infix:<->.assuming(Nil,1)

[05:45] <TimToady> hmm I wonder if Nil works for that

[05:45] * pmichaud feels certain he has forgotten to pack something for his trip. :(

[05:45] * TimToady too

[05:46] <TimToady> when are you gettin' there?

[05:46] <pmichaud> approximately ~10h30 on Fri

[05:46] <TimToady> us too

[05:46] <TimToady> are you coming via Helsinki?

[05:46] <pmichaud> no, via CPH.  Turns out I'm on the same flight as jnthn++ and masak++  :)

[05:46] <tadzik> o/

[05:47] <moritz> pmichaud: can I delete the qregex branch in the nqp repo

[05:47] <TimToady> we're getting in at 1040 via finnish air

[05:47] <TimToady> so we should look for each other

[05:47] <pmichaud> indeed.  jnthn says he already has bus tickets to the hotel

[05:47] <TimToady> ooh, how forward looking

[05:48] <pmichaud> maybe we should plan to gather at the airport's meeting point (assuming it has one?)

[05:52] <tadzik> ooh, how did he buy these tickets?

[05:52] <TimToady> pmichaud: not clear from the airport website

[05:52] <pmichaud> TimToady: we could meet at the information office, maybe?  #7 on the map

[05:53] <pmichaud> (1st floor)

[05:55] <TimToady> sounds good, doesn't look like a huge terminal

[05:55] <pmichaud> agreed

[05:55] *** araujo joined
[05:57] <pmichaud> moritz: yes, the qregex branch can go.

[05:57] <uvtc> For documenting REPL sessions, it might be useful if the '>' prompt were prefixed with the name of the implementation.

[05:57] <uvtc> Also might be useful for folks who have multiple implementations in use.

[05:57] <pmichaud> "What other implementations are there?"  ;-)

[05:58] <uvtc> Aside from rakudo, I only know of the one that I can't properly pronounce. :) I think it's "neek-za".

[05:59] <TimToady> perl6: my $decr = &infix:<->.assuming(Nil,1); say $decr(42)

[05:59] <p6eval> niecza v8-51-g785e335: OUTPUT«-41␤»

[05:59] <p6eval> ..rakudo 922500: OUTPUT«No applicable candidates found to dispatch to for 'infix:<->'. Available candidates are:␤:(Any $x = { ... })␤:(Int $a, Int $b)␤:(Num $a, Num $b)␤:(Rat $a, Rat $b)␤:(Rat $a, Int $b)␤:(Int $a, Rat $b)␤:(Complex $a, Complex $b)␤:(Duration $a, Duration $b)␤:(Instant $a…

[05:59] <p6eval> ..pugs: OUTPUT«*** No compatible multi variant found: "$decr"␤    at /tmp/UEIDrS57dP line 1, column 44 - line 2, column 1␤»

[05:59] <TimToady> -41!?!

[05:59] <TimToady> sorear: ^^

[05:59] <pmichaud> the pronunciation and meaning of "niecza" is a FAQ at our monthly p6 meetings :)

[06:00] <pmichaud> it's a FAQ w/o a current answer, too.

[06:00] <TimToady> knee-ey-cha

[06:01] *** beppu left
[06:01] <TimToady> if it's gonna get a new name, sooner is better than later

[06:01] <sorear> monthly p6 meanings?

[06:01] <pmichaud> "ey" as in "ee" or "ay"  ?

[06:02] <TimToady> as in 'they'

[06:02] <uvtc> or eye

[06:02] <pmichaud> oh, I've been saying it pretty close to correctly then.  So, soundex is solved.... now I just need the definition/meaning again :)

[06:02] <TimToady> um...

[06:03] <pmichaud> sorear: there's a group of perl enthusiasts in the north Dallas area that meet once per month to discuss P5 and P6

[06:03] <pmichaud> including a former P5 pumpking :)

[06:03] <TimToady> are you and jnthn allowed to fly on the same flight?

[06:03] <TimToady> I thought that was against company policy...

[06:03] <pmichaud> heh

[06:03] <pmichaud> I still remember the time I was driving the car that held both you and audreyt.  :-)

[06:04] <uvtc> pmichaud: What I meant by documenting REPL sessions ... when writing about Perl 6 (or sending a friend some output in your terminal window),

[06:04] <TimToady> I still remember the first Perl Whirl cruise that the pythonistas shoulda sunk

[06:04] <pmichaud> uvtc: yes, I understand.  I'm undecided as to whether I want to change rakudo's prompt there.

[06:04] <uvtc> pmichaud: having the name of the implementation in the prompt makes it easier to discern from source code.

[06:06] <pmichaud> uvtc: I'll think about it.  Perhaps ask around on the channel and see what others would prefer.

[06:06] *** mj41 joined
[06:07] <moritz> currently the backtraces clearly show which compiler you're running :-)

[06:07] <pmichaud> TimToady: is it better if jnthn and I make sure we sit at opposite ends of the airplane?  ;-)

[06:08] <TimToady> well, that helps the statistics *slightly*, though perhaps not as much as if you both sit in back.

[06:08] *** Su-Shee_ is now known as Su-Shee

[06:08] <TimToady> which also helps only slightly...

[06:08] <pmichaud> well, other than the EU->US adapter plug that I can't locate, I can't think of what else I'm forgetting.  :-|

[06:08] <TimToady> meds, passport, computer

[06:08] <pmichaud> got those

[06:08] <moritz> phone

[06:08] <moritz> cloths

[06:09] <moritz> credit card

[06:09] <pmichaud> that too.... even checked what the international rates are going to be

[06:09] *** wtw joined
[06:09] <Su-Shee> my eu-us adaptor is always in my this-bag-where-you-put-cosmetics-and-toothbrush in. because I never forget that. a second one is left in the luggage. :)

[06:09] <Su-Shee> good morning ;)

[06:09] <tadzik> raincoat?

[06:09] <pmichaud> Su-Shee: that's where my adaptor is usually also... only it's not there this time.  I think I might've left it in Pisa.

[06:10] <tadzik> good morning Su-Shee :)

[06:10] <pmichaud> I live in Texas and therefore do not own a raincoat.  :)

[06:10] <tadzik> :)

[06:10] <pmichaud> I thought about bringing a light jacket... but there's not enough room left in the suitcase and if I wear it to the airport it's going to look really really really odd

[06:11] <tadzik> then take you leather jacket and a cowboy hat ;)

[06:11] <pmichaud> since we're now heading into our 41st consecutive day with 100+ temperatures

[06:12] * pmichaud eagerly looks forward to being in riga where the temperatures will be much saner.

[06:12] <sorear> lovely

[06:12] <pmichaud> and if it rains, that's all the better.  I'm not sure I remember what rain feels like.  :)

[06:12] <pmichaud> (city is going on water restrictions this week due to lack of rain)

[06:14] <tadzik> ooh

[06:16] *** drbean left
[06:16] <moritz> we are on sun restrictions, due to the lack of sun shine in the last weeks

[06:16] <moritz> :-)

[06:16] <mberends> interesting, OpenMP accelerates floating point vector processing by about 30% even on an Atom N270 (integer vectors unaffected).

[06:17] *** thou left
[06:17] *** thou joined
[06:17] *** JimmyZ joined
[06:19] <JimmyZ> good afternoon, #perl6

[06:20] * tadzik flies away

[06:24] <uvtc> TimToady wrote: "like bare {}, the -> form is officially a Block rather than a Routine, so it's transparent to 'return'". What does that mean, "transparent to 'return'"?

[06:27] <sorear> moritz: your city has figured out how to ration sun?

[06:27] <sorear> uvtc: the "return" statement throws an exception, which causes any number of subs to return until the "correct" one is reached

[06:28] <sorear> uvtc: this is useful with visitor pattern and related things - sub foo() { visit(-> $x { return $x if $x > 10 }) }

[06:31] <pmichaud> uvtc: I usually say it by saying that 'return' always returns from a sub, not from a lambda.

[06:31] <pmichaud> so if you use 'return' in a lambda, it's referring to the sub that contains the lambda, not the lambda itself.

[06:32] <pmichaud> okay, well, whatever I've forgotten to pack I'll just have to live without or obtain on the trip.  Time for sleep here -- bbiaw.

[06:32] <uvtc> Ah, I get it. Thanks, guys.

[06:35] *** im2ee joined
[06:37] *** SHODAN joined
[06:43] *** mj41 left
[06:50] *** thou left
[06:58] *** uvtc left
[07:01] *** birdwindupbird left
[07:02] *** birdwindupbird joined
[07:04] *** drbean joined
[07:17] *** nwc10 joined
[07:18] *** birdwindupbird left
[07:22] *** saaki joined
[07:29] <nwc10> mberends: what's an "unexpected vacation in Croatia?" Is it :-) or :-(? I've only had expected vacations in Croatia

[07:31] * moritz finds all vacations ':-)', whether expected or unexpected

[07:36] *** cognominal left
[07:36] *** cognominal joined
[07:37] *** hanekomu joined
[07:37] *** nbrown left
[07:39] *** JimmyZ left
[07:39] <nwc10> I find that there's a distinction between "vacation" and vacation

[07:39] <nwc10> The latter is where I get to do what I want to do

[07:40] <nwc10> the former is where I'm being told that it's a holiday, but I'm not getting any choice about what I'm doing, and it's actually just a different form of work

[07:40] <mberends> nwc10: you have a long backlog range :)  There was an unexpected cancellation of work :-[ that resulted in a last minute trip to Slovenia and Croatia :-]

[07:40] <nwc10> as in "a change is as good as a rest"

[07:41] <nwc10> mberends: I don't specifically have a long backlog. I'm searching the IRC logs

[07:46] *** im2ee left
[07:48] <nwc10> moritz: For some reason http://irclog.perlgeek.de/perl6/2011-08-07 is the last page with a "next day" link. Is that a surprise?

[07:52] <moritz> nwc10: there's a known bug that applies always to yesterday, and I've been unable to track it down

[07:52] <moritz> I fear that bug might get cached

[07:53] <moritz> clearing the cache brought most of the links back

[07:53] <moritz> OH

[07:53] <moritz> of course, the cache is the problem

[07:54] <moritz> the day for the current page doesn't have a link for tomorrow, because that page would be empty

[07:54] <moritz> and when the day switches over, the cached version is used

[07:54] * moritz faceplams

[07:54] <moritz> nwc10++

[07:54] *** worr left
[07:56] *** mj41 joined
[08:01] *** mattp_ left
[08:03] *** wamba joined
[08:05] <szabgab> tadzik: I am in Riga already and you?

[08:05] <nwc10> moritz: glad to be of teddybear service :-)

[08:09] *** mattp_ joined
[08:11] *** birdwindupbird joined
[08:12] <moritz> the fix is very simple (I hope), once you know what the issue is

[08:12] <moritz> just modify the cache key if the requested date equals the current date

[08:29] *** agentzh joined
[08:29] *** agentzh left
[08:29] *** agentzh joined
[08:30] <tadzik> szabgab: I'm just before the takeoff, I'm landing 13:35 or so

[08:31] <tadzik> 13:55 actually

[08:32] *** woosley1 joined
[08:32] *** timbunce joined
[08:32] *** woosley1 left
[08:32] <tadzik> still need to figure out how to get from the airport to the 1st hotel :)

[08:32] *** birdwindupbird left
[08:33] *** birdwindupbird joined
[08:33] *** woosley left
[08:34] *** jonalv joined
[08:35] *** jonalv left
[08:36] *** dakkar joined
[08:39] *** nwc10 left
[08:47] <moritz> just apparate

[08:51] *** miso_soup joined
[08:53] <jnthn> morning, #perl6

[08:53] <sorear> o/

[08:53] <tadzik> hello jnthn 

[08:54] <moritz> \o

[08:54] * tadzik departs

[08:54] <szabgab>    tadzik 13 euro taxi voucher

[08:54] <szabgab> see you later

[08:55] <moritz> fwiw I've pushed the fix for the irclog thingy, we'll see in a few days if it works

[08:55] <jnthn> tadzik: good journey!

[08:55] *** miso_soup left
[08:55] *** ab5tract joined
[08:57] *** koban left
[09:04] <moritz> jnthn: I want to install an outer exception handler for nom programs

[09:04] <moritz> jnthn: how would I do that?

[09:04] <moritz> I tried to put a try { } around the 

[09:04] <moritz> {YOU_ARE_HERE}

[09:04] <jnthn> moritz: Same as in master I guess...there's a HLL hook

[09:05] <moritz> in src/core/you_are_here.pm, but that doesn't work out

[09:05] <jnthn> No, that won't do it.

[09:06] <jnthn> Compiler.pm needs to get a backtrace method, iirc

[09:06] <moritz> I can't use the setting there :(

[09:09] <jnthn> Maybe you can do something like pir::compreg__Ps('perl6').^add_method('backtrace', ...)

[09:09] <jnthn> (Near the end of the setting)

[09:09] <moritz> woah

[09:13] * moritz messed up p5 and p6 in the last irclog commit

[09:13] <moritz> used $str ~= 'string to concat'   :-)

[09:14] <sorear> the other day I tried to use &&= in C++

[09:16] <moritz> ... and within a few minutes I got two emails telling me about server errors

[09:16] * moritz should really check even the simplest changes before deploying them

[09:20] *** donri left
[09:30] <moritz> jnthn: uhm, nqp seems to lack the facilty for backtrace interception

[09:31] <moritz> nqp's HLL::Compiler, that is

[09:31] <moritz> maybe I need to put that back first

[09:32] <jnthn> ah

[09:32] <jnthn> maybe it got lost at some point

[09:40] *** awoodland joined
[09:45] <moritz> in HLL::Compiler, how do I do a can() check?

[09:45] <moritz> self.HOW.can(Type, 'method') ?

[09:45] <moritz> or pir::can?

[09:50] * moritz tries pir::can

[09:53] <moritz> thinking about it, the introspection thingy is probably code smell

[09:53] <moritz> we should just provide a default backtrace method, and call that

[09:54] <moritz> and the user can still subclass and override

[09:59] <jnthn> yeah, if we can get the default PIR backtrace spat out in that default method.

[09:59] <jnthn> Though we need a way to do the --ll-backtrace thing too

[10:00] <moritz> right

[10:00] <jnthn> Maybe factor the actual code that runs stuff into one place then

[10:01] <moritz> %adverbs<ll-backtrace> ?? self.ll-backtrace($e) !! self.backtrace($e)

[10:01] <moritz> and self.backtrace redispatches to ll-backtrace by default

[10:01] <jnthn> if $no_ll_backtace { self.doit } else { try { self.doit; CATCH { self.a_error_is_vomit } } }

[10:02] <jnthn> er, wrong way around :)

[10:02] <jnthn> if $ll_backtrace ...

[10:02] <jnthn> So we just don't catch the exception at all if --ll-backtrace is set

[10:04] <moritz> jnthn: I feel that I don't quite understand the responsibilities of the various methods in HLL::Compiler, so I don't want to refactor too much

[10:05] *** wamba left
[10:10] *** ab5tract left
[10:12] *** xinming left
[10:13] *** xinming joined
[10:23] <moritz> hm, one more thing

[10:24] <moritz> it would make sense to not only control printing of the backtrace, but also of the message itself

[10:24] <moritz> so maybe 'backtrace' isn't the best name

[10:24] <moritz> should I rename that to 'exception'? or 'handle-exception' or so?

[10:26] <moritz> but the general approach seems to work out fine, I have a prototype running locally

[10:28] *** Chillance joined
[10:32] <jnthn> handle-exception maybe

[10:33] *** mj41 left
[10:38] *** lumi_ left
[10:42] *** LimitSupremum__ left
[10:59] *** phenny left
[10:59] *** phenny joined
[11:01] *** nbrown joined
[11:04] *** fbass left
[11:04] *** koban joined
[11:17] *** wamba joined
[11:18] *** mj41 joined
[11:30] *** fbass joined
[11:46] *** MayDaniel joined
[11:47] *** fbass left
[12:02] <moritz> http://www.similarsites.com/site/perl6.org not too bad :-)

[12:06] *** satyavvd left
[12:11] *** pernatiy joined
[12:11] *** Alias joined
[12:12] <takadonet> morning all

[12:13] <moritz> morning takadonet 

[12:13] <Util> morning takadonet 

[12:13] <jnthn> hi takadonet 

[12:14] <takadonet> working on a solution for http://rosettacode.org/wiki/Death_Star and realized that missing a ceiling function :(

[12:15] <moritz> perl6: say 0.5.ceil

[12:15] <p6eval> rakudo 922500: OUTPUT«Method 'ceil' not found for invocant of class 'Rat'␤  in main program body at line 22:/tmp/x2pU29s1Ui␤»

[12:15] <p6eval> ..niecza v8-51-g785e335: OUTPUT«Unhandled exception: Unable to resolve method ceil in class Rat␤  at /tmp/qz_5hnUzVe line 1 (MAIN mainline @ 1) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1996 (CORE C939_ANON @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1997 (CORE module-CORE …

[12:15] <p6eval> ..pugs: OUTPUT«1␤»

[12:15] <moritz> perl6: say 0.5.ceiling

[12:15] <takadonet> perl6: say 0.5.ceiling

[12:15] <p6eval> pugs, rakudo 922500, niecza v8-51-g785e335: OUTPUT«1␤»

[12:16] <takadonet> hmmm never did try niecza on that problem

[12:16] <moritz> nqp: try { die "foo"; CATCH { pir::say($_) } }

[12:16] <p6eval> nqp: OUTPUT«Unable to parse blockoid, couldn't find final '}' at line 1␤current instr.: 'nqp;Regex;Cursor;FAILGOAL' pc 3863 (src/Regex/Cursor.pir:244)␤»

[12:16] <jlaire> perl6: say -(-0.5).floor

[12:16] <p6eval> pugs, rakudo 922500, niecza v8-51-g785e335: OUTPUT«1␤»

[12:16] <takadonet> floor is there

[12:16] <moritz> nom: say 0.5.ceil

[12:16] <p6eval> nom: OUTPUT«Method 'ceil' not found for invocant of class 'Rat'␤current instr.: '_block1002' pc 63 ((file unknown):136) (/tmp/_Jt2TcdBv9:1)␤»

[12:16] <moritz> nom: say 0.5.ceiling

[12:17] <p6eval> nom: OUTPUT«maximum recursion depth exceeded␤current instr.: 'Bridge' pc 783300 (src/gen/CORE.setting.pir:203151) (src/gen/CORE.setting:2031)␤»

[12:17] <moritz> ouch

[12:17] <moritz> nom: say 0.5e0.ceiling

[12:17] <takadonet> yuppers

[12:17] <p6eval> nom: OUTPUT«maximum recursion depth exceeded␤current instr.: 'Bridge' pc 783300 (src/gen/CORE.setting.pir:203151) (src/gen/CORE.setting:2031)␤»

[12:17] <jlaire> nom: say 0.5.floor

[12:17] <p6eval> nom: OUTPUT«0␤»

[12:18] <takadonet> anyway the solution given for C language will be easy to golf down  Lots of array * array operations

[12:18] <moritz> nqp: try { pir::die("foo"); CATCH { say($_) } }

[12:18] <p6eval> nqp: OUTPUT«foo␤»

[12:18] <moritz> nqp: try { pir::die("foo"); CATCH { say($_); say($_.backtrace) } }

[12:18] <p6eval> nqp: OUTPUT«foo␤12␤»

[12:19] *** wild joined
[12:20] *** wild left
[12:26] *** MayDaniel left
[12:31] *** ponbiki left
[12:39] <[Coke]> $ ack ceiling t/spectest.data

[12:39] <[Coke]> # integration/99problems-41-to-50.t # err: Could not find sub &ceiling

[12:42] <moritz> nom: say floor 0.5

[12:42] <p6eval> nom: OUTPUT«0␤»

[12:42] <moritz> [Coke]: will look into it

[12:43] <moritz> in fact I have a patch already, but need to test it

[12:43] <[Coke]> moritz++

[12:43] <moritz> the infinite recursion came from Num.ceiling being misspalled Num.ceil

[12:45] *** donri joined
[12:46] *** ponbiki joined
[12:49] *** drbean left
[12:55] *** JimmyZ joined
[13:04] *** lumi_ joined
[13:08] *** hanekomu left
[13:10] <Util> takadonet: When you are ready to post your Death Star solution on RC, I will be glad to help if you need any guidance on account creation, first post, mylang template, etc.

[13:11] *** tzhs joined
[13:15] <takadonet> Util: sweet thanks . I'm at work right now but probably finish at home ( done work in about 7 hours)

[13:15] <takadonet> hopefully all I have deal with is  ceiling issue

[13:16] <moritz> which ceiling issue? :-)

[13:16] <dalek> rakudo/nom: 5d1f4db | moritz++ | src/core/ (3 files):

[13:16] <dalek> rakudo/nom: fix ceiling, add sub form

[13:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5d1f4db82e

[13:16] <takadonet> !!!

[13:17] * JimmyZ wonders why ceiling instead of ceil ?

[13:19] * moritz fixed ceiling, but broke the backtrace printer he was working on

[13:21] <mikemol> JimmyZ: I'm guessing for the same reason Unicode is supported...it's more clear to the uninitiated.

[13:21] <mikemol> ceil() is obvious to any C programmer, or any frequent user of any langauge designed to be obvious to C programmers.

[13:22] <JimmyZ> well, ceil is shoter than ceiling 

[13:22] <mikemol> P6 seems to want to cast off assumptions driven by 40-year-old technologies.

[13:22] <JimmyZ> s/shoter/shorter/

[13:23] <mberends> shall we discuss the naming of the ceiling of the bikeshed before painting it? ;-)

[13:23] <mikemol> s'ok. Not wearing my glasses, so my astigmatism made 'shoter' look like 'shorter' anyway. :)

[13:23] <daniel-s> hey, are there any successful professional engineer types here?

[13:23] <mikemol> daniel-s: Depends on what you mean by that, I guess.

[13:23] <daniel-s> I know that junior in a job title is usually a less experienced person

[13:24] <daniel-s> ie. a junior structural engineer is one that probably has less experience that a regular engineer

[13:24] <jnthn> nom: subset ProfessionalEngineer of Success

[13:24] <p6eval> nom: OUTPUT«Confused at line 1, near "subset Pro"␤current instr.: 'nqp;HLL;Grammar;panic' pc 23611 (src/stage2/gen/NQPHLL.pir:6348) (src/stage2/gen/NQPHLL.pm:329)␤»

[13:24] <jnthn> aww :)

[13:24] <jnthn> std: subset ProfessionalEngineer of Success

[13:24] <p6eval> std 516268a: OUTPUT«===SORRY!===␤Confused at /tmp/pgHPq4ma3Y line 1:␤------> subset ProfessionalEngineer of ⏏Success␤    expecting typename␤Parse failed␤FAILED 00:01 119m␤»

[13:24] <jnthn> oh!

[13:24] <jnthn> Success is not declared :)

[13:24] * jnthn gets back to his slide writing rather than code punning :)

[13:24] <mikemol> daniel-s: A lot of "professional engineer" pursuites have the word 'professional' tied to some sort of certification or license.

[13:25] <daniel-s> analyst means someone less successful, to "structural analyst" is probably someone who went to a crappy university or something and hasn't been as successful as a proper engineer

[13:25] <mikemol> daniel-s: Hm. I'm liable to take issue with just about every point in that sentence.

[13:25] <mikemol> Which means I should probably put down the keyboard and go take a shower...

[13:26] <mberends> I think successful simply means you haven't failed at it, and professional simply means you make money from it.

[13:26] <mikemol> Today's not a good day to enter into a "but someone is wrong on the internet" mode. :)

[13:26] <daniel-s> well, I'm just trying to figure out a job from its job title

[13:26] <daniel-s> Satellite Controller, Associate

[13:27] <daniel-s> what does associate mean in this case?

[13:27] <mberends> that all looks rather hand-wavey

[13:27] <gfldex> that's a question you should ask the person who wrote the job description

[13:28] <[Coke]> (job by its title) that doesn't work. you need to talk to the person who is hiring.

[13:28] <daniel-s> mikemol: my previous comments are just from brief conversations with a few HR people, it's a very big generalisation, if not completely wrong

[13:28] <[Coke]> or hope the job description is accurate.

[13:29] <[Coke]> In my limited experience, the adjectives you're talking about (in the us market) have no bearing on the actual job. things that require certifications are different, and you can check out what the cert means. (except in the case of IT, when certs are meaningless)

[13:33] <jnthn> From my limited experience of getting hired and then helping with the hiring process in the IT world, the most valuable thing is the interested party and the folks who're hiring having a decent conversation about what the job entails and the expectations of either side. Trying to convey all of that in a couple of word job title is impossible, and a more wordy job description tends to only be so much better.

[13:37] <daniel-s> I'm more excited about this job

[13:37] <daniel-s> http://www.seek.com.au/Job/graduate-network-engineer-satellite-program-design/in/sydney-ryde-macquarie-park/20388387

[13:37] <daniel-s> jnthn: do you have any tips/suggestions for interviews

[13:38] <PerlJam> this is an odd conversation for #perl6  :)

[13:38] <daniel-s> is there anyone who you interviewed that really impressed you?

[13:38] <daniel-s> PerlJam: I think that's my fault, I started it

[13:42] <PerlJam> daniel-s: there's no blame here, just an observation.

[13:42] <moritz> fwiw I got at least one job interview through #perl6

[13:42] <PerlJam> having been on #perl-ish channels for a couple of decades or so, you get used  to the eclectic conversations :)

[13:43] <moritz> (and the company would have hired me, but I declined)

[13:43] <daniel-s> really?

[13:43] <jnthn> daniel-s: Mostly I'd say just be honest about what you do/don't know, and share something about your ambitions and interests too. The only interview I remember doing where somebody left with an "omfg" look on their face was when they tried to BS about how much they knew, and I called them on it. :)

[13:43] <moritz> daniel-s: yes, really

[13:44] <moritz> daniel-s: though it was a p5 programming job

[13:44] <PerlJam> jnthn: I know Perl 6 and have been using it for 12 years!  ;)

[13:44] <jnthn> PerlJam: No, nobody tried that one on me yet :)

[13:45] <moritz> http://search.dilbert.com/comic/Unix%20Experience

[13:45] <jnthn> Closest I had was somebody who "early adopted" a Microsoft technology...the year before the first public beta of it came out. I thought it felt wrong, but didn't say anything in case I'd mis-remembered. But I checked up afterwards and...sure enough. :)

[13:46] * jnthn 's company hired somebody who I initially came to know over #perl6, btw :)

[13:47] <moritz> lemme guess... he lived in .se, was a prolific blogger and bug report?

[13:47] <daniel-s> ...well, if anyone's interested in an aerospace engineer who wants to work in the space industry, PM me :)

[13:47] <jnthn> moritz: Something like that ;-)

[13:48] * [Coke] thought all aero engineers ended up writing code, anyway.

[13:50] <cognominal> masak: seing your gist https://gist.github.com/1139458  if you like pentominoes and obfuscation, you should visit http://paris.mongueurs.net/assombri/opc3/Stephane_Payrard.tar.gz   TPJ is dead, but a copy mentionning the winner of that contest if here http://www.foo.be/docs/tpj/issues/vol3_3/tpj0303-0015.html

[13:51] <cognominal> that was the first time (and hopefully the only one) I was proud to be declared demented.

[13:52] <cognominal> oops, masak is not around

[13:52] <moritz> phenny: tell masak about http://irclog.perlgeek.de/perl6/2011-08-11#i_4262765

[13:52] <phenny> moritz: I'll pass that on when masak is around.

[13:57] <cognominal> thx, moritz. I always forget about phenny.

[14:05] *** tadzik_kindle joined
[14:06] <tadzik_kindle> hello from Riga

[14:06] <tadzik_kindle> szabgab ping

[14:06] <jnthn> o/ tadzik_kindle in Riga!

[14:06] <moritz> ~~

[14:06] <tadzik_kindle> free wifi is nowhere :<

[14:07] <jnthn> :/

[14:07] <tadzik_kindle> seen szabgab

[14:07] <aloha> szabgab was last seen in #perl6 5 hours 13 mins ago saying "see you later".

[14:07] <tadzik_kindle> bah

[14:08] <daniel-s> where's riga?

[14:08] <daniel-s> moritz ping

[14:08] <tadzik_kindle> in Latvia

[14:08] <moritz> daniel-s: pong

[14:09] <daniel-s> seen moritx

[14:09] <aloha> Sorry, I haven't seen moritx.

[14:09] <daniel-s> seen moritz

[14:09] <aloha> moritz was last seen in #perl6 16 seconds ago saying "daniel-s: pong".

[14:09] <tadzik_kindle> Riga looks like a small Warsaw :)

[14:09] <daniel-s> that's what I was looking for

[14:09] <daniel-s> why are you in Latvia?

[14:09] *** jaldhar left
[14:09] <jnthn> Because they have Black Balsam!

[14:10] <moritz> there's YAPC::EU

[14:10] <tadzik_kindle> there'sa big Perl conference in here soon

[14:10] <jnthn> tadzik_kindle: How's the weather there?

[14:10] * jnthn hopes better than here, where it's currently hammering it down

[14:11] <moritz> https://gist.github.com/1138149 # another backtrace iteration

[14:12] <moritz> can't add it to the setting yet, because I need to distinguish parse errors from runtime errors first

[14:13] <flussence> tadzik! \o/

[14:13] <jnthn> moritz: nice :)

[14:13] <pmichaud> good morning, #perl6

[14:13] <moritz> good am, pm

[14:13] <jnthn> moritz: See export trait which looks to see if we're compiling or not.

[14:13] <jnthn> o/ pmichaud 

[14:13] <flussence> I'm doing stuff with this today: https://github.com/flussence/Pod-To-HTML

[14:14] *** tadzik_kindle left
[14:15] <moritz> flussence: is that based on tadzik++'s Pod/To/HTML.pm ?

[14:15] <flussence> yeah

[14:15] <flussence> thought I'd tweak it a bit :)

[14:16] <moritz> rakudo: 1 1

[14:16] <p6eval> rakudo 922500: OUTPUT«===SORRY!===␤Confused at line 22, near "1 1"␤»

[14:18] *** orafu joined
[14:18] <moritz> jnthn: I fear that the detection like in the 'export' won't work in my case

[14:18] * pmichaud grabs latest versions of nom/nqp before boarding.

[14:18] <pmichaud> also mail.

[14:19] <moritz> jnthn: because  the exception handler is probably not in the dynamic scope where %*COMPILING is set

[14:19] *** dual left
[14:19] *** tadzik_kindle joined
[14:19] <moritz> pmichaud: pull nqp again :-)

[14:19] <dalek> nqp: 051792c | moritz++ | src/HLL/Compiler.pm:

[14:19] <dalek> nqp: put back the ability to add a custom backtrace printer

[14:19] <dalek> nqp: 

[14:19] <dalek> nqp: Since it prints the exception too and not only the backtrace,

[14:19] <dalek> nqp: it is now renamed to 'handle-exception', and the command line

[14:19] <dalek> nqp: option for disabling it is called --ll-exception

[14:19] <dalek> nqp: review: https://github.com/perl6/nqp/commit/051792ccfd

[14:20] <pmichaud> pulled.

[14:20] <pmichaud> moritz++

[14:20] <jnthn> pmichaud: Safe flight

[14:20] <jnthn> pmichaud: Internal one I guess, with another change to come?

[14:21] <pmichaud> jnthn: thanks.  yes, internal first to Newark, NJ, then to CPH

[14:21] <jnthn> Ah, that routing. OK :)

[14:21] <pmichaud> so, I get some time in NJ before hopping the pond

[14:21] <PerlJam> pmichaud: in case I don't see you on Saturday  ... Happy Birthday!

[14:21] <PerlJam> :-)

[14:21] <pmichaud> PerlJam: thanks!

[14:21] <moritz> oh, pmichaud++

[14:21] <moritz> er, pmichaud.age++

[14:21] <moritz> :-)

[14:21] <pmichaud> I should be online on Sat, that's the p6 hackathon day

[14:21] <moritz> wait, that's in advance...

[14:21] * moritz should wait a bit

[14:22] <pmichaud> moritz: it's okay, time is virtual for me anyway

[14:22] <pmichaud> especially for the next couple of days :-)

[14:22] <pmichaud> by traveling to riga I guess I get to increment $!age a bit sooner than I would if I was still here in Texas :)

[14:23] <pmichaud> this will likely be the first time that I'll be able to celebrate my birthday in sub-80F weather :-)

[14:24] <jnthn> ooh :)

[14:25] *** koban left
[14:26] *** tadzik_kindle left
[14:26] <flussence> nom: state $a

[14:26] <p6eval> nom:  ( no output )

[14:26] <flussence> nom: state $a; say 'alive'

[14:27] <p6eval> nom:  ( no output )

[14:27] <flussence> segfaults for me :(

[14:27] <jnthn> nom: state $a; say $a;

[14:27] <p6eval> nom:  ( no output )

[14:27] <jnthn> nom: state $a; say $a.WHAT;

[14:27] <p6eval> nom:  ( no output )

[14:27] <jnthn> nom: state $a = 1; say $a.WHAT;

[14:27] <p6eval> nom:  ( no output )

[14:27] <jnthn> huh.

[14:28] * jnthn thought we had passing tests in state.t...

[14:28] <flussence> I get https://gist.github.com/1139781

[14:28] <pmichaud> I get a segfault also.

[14:29] <pmichaud> nom:  { state $a = 1;  say $a.WHAT; }   # possible clue

[14:29] <p6eval> nom: OUTPUT«Int()␤»

[14:30] <jnthn> hmmmm

[14:30] <jnthn> yeah, caught segfault in VS debugger

[14:30] <jnthn> It seems that when we ask the Parrot Sub for its associated Perl 6 sub, we get back NULL

[14:31] <pmichaud> does the mainline get a Perl 6 ub?

[14:31] <pmichaud> *sub

[14:31] <jnthn> It should do.

[14:31] <moritz> nope

[14:31] <jnthn> Well, not a Sub

[14:31] <jnthn> But a Block at least.

[14:31] * moritz shakes his head

[14:31] <jnthn> I'm guessing somehow it's not doing though.

[14:32] <jnthn> moritz: You know why not, ooc?

[14:32] <moritz> jnthn: no, I only know that it shows up as Mu in my backtraces, not as Sub or Code or whatever

[14:32] <jnthn> ah

[14:33] <jnthn> oh, yeah, comp_unit just calls <statementlist>

[14:33] * jnthn is a bit surprised this didn't break more.

[14:34] <pmichaud> maybe can set something up in .unitstart

[14:34] <pmichaud> (STD.pm6 has a .unitstart)

[14:35] <pmichaud> oh, so do we :-)

[14:35] <jnthn> It's easy enough to do in comp_unit

[14:35] <jnthn> Patching.

[14:36] <jnthn> 1 line patch, all being well :)

[14:36] *** wtw left
[14:38] <jnthn> oh, turns out not

[14:38] <jnthn> unitstart it is :P

[14:39] *** bbkr_ joined
[14:40] <pmichaud> I think I'll see if I can catch some air.  bbiaw

[14:43] *** thou joined
[14:48] <moritz> nom: say so %*COMPILING

[14:49] <p6eval> nom:  ( no output )

[14:49] <bbkr_> how can I pack double values ("d" directive in P5), for example 1.5 ->  \x00\x00\x00\x00\x00\x00\xF8\x3F ? Any implemented solution?

[14:49] <tadzik> mcdonalds++

[14:49] <jnthn> tadzik can has cheezburger

[14:50] <moritz> actually the problem is the other way round as anticipated - %*COMPILING is always true in the exception handler

[14:50] <moritz> nom: say "\x00".ord

[14:50] <jnthn> oh.

[14:50] <p6eval> nom: OUTPUT«0␤»

[14:50] <moritz> bbkr_: do you want a Str or a Buf?

[14:50] <tadzik> jnthn: can has tea, and can has internetz :)

[14:50] <bbkr_> Buf

[14:51] <moritz> bbkr_: Buf.new(0, 0, 0, ... 0xF8, 0x3F)

[14:53] <bbkr_> moritz: I need to pack any double value into Buf, this "1.5" was just an example.

[14:54] <tadzik> flussence++

[14:54] <tadzik> flussence: does it still loook like the rest of the synopses?

[14:54] <moritz> bbkr_: no idea, sorry

[14:54] <flussence> for the most part, yes

[14:55] <tadzik> nice

[14:55] <flussence> I've got the =title block filling in the <title> and adding a <h1> at the top of the page now

[14:55] <tadzik> I think that should be =TITLE actualy

[14:55] <bbkr_> pretty much I need equivalent of pack("V", 666) but for double values

[14:55] <flussence> s:i/title/title/ # :)

[14:55] <tadzik> see http://feather.perl6.nl:3000/s26.html#Semantic blocks

[14:55] <flussence> yeah, that's the one

[14:56] <flussence> also it makes a half-baked attempt to put =DESCRIPTION and the like in meta tags

[14:56] <tadzik> niice

[14:57] <flussence> (I'm tempted to go off and write a HTML::Tag class to make the escaping look neater... it's already taking 2.5 minutes per run here though :)

[14:58] <tadzik> only? It was taking me 4 minutes :)

[14:59] *** SHODAN left
[14:59] <tadzik> well, the whole run, of S26 parsing

[14:59] <flussence> it was about 2.0 when I started :)

[14:59] * moritz finds that he doesn't understand the dynamic scopes involved in the exception thingy

[15:00] <tadzik> oh :)

[15:00] <tadzik> doesn't matter, keep up the good work

[15:01] <daniel-s> I just heard there was a shooting in Tallinn

[15:01] <daniel-s> why the hell is everyone shooting everyone!

[15:01] <daniel-s> </rant>

[15:01] <tadzik> oh, we had one in Warsaw yesterday as well

[15:02] <daniel-s> wtf?!#!$!!

[15:02] <tadzik> some gang stuff

[15:05] <moritz> nqp: if %*foo { say 1 } else { say 2 }

[15:05] <p6eval> nqp: OUTPUT«Unable to parse blockoid, couldn't find final '}' at line 1␤current instr.: 'nqp;Regex;Cursor;FAILGOAL' pc 3863 (src/Regex/Cursor.pir:244)␤»

[15:05] <moritz> nom: if %*foo { say 1 } else { say 2 }

[15:05] <p6eval> nom: OUTPUT«2␤»

[15:06] <moritz> nom: say %*foo

[15:06] <p6eval> nom: OUTPUT«Dynamic variable %*foo not found␤current instr.: 'rethrow' pc 835616 (src/gen/CORE.setting.pir:0) (src/gen/CORE.setting:5202)␤»

[15:06] <moritz> nom: if %*foo<a> { say 1 } else { say 2 }

[15:06] <p6eval> nom: OUTPUT«Method 'at_key' not found for invocant of class 'Failure'␤current instr.: 'postcircumfix:<{ }>' pc 769877 (src/gen/CORE.setting.pir:196403) (src/gen/CORE.setting:836)␤»

[15:07] *** daniel-s left
[15:07] <jnthn> nom: say ?Failure.new

[15:07] *** sjn joined
[15:07] <p6eval> nom: OUTPUT«Not enough positional parameters passed; got 1 but expected 2␤current instr.: 'new' pc 835680 (src/gen/CORE.setting.pir:226872) (src/gen/CORE.setting:5218)␤»

[15:07] <jnthn> nom: say ?Failure.new('xxx')

[15:07] <p6eval> nom: OUTPUT«Bool::False␤»

[15:07] <moritz> figured it must be a Failure

[15:08] *** tzhs left
[15:09] <moritz> nom: if %*foo.defined { say 1 } else { say 2 }

[15:09] <p6eval> nom: OUTPUT«2␤»

[15:09] <moritz> nom: my %*foo; if %*foo.defined { say 1 } else { say 2 }

[15:09] <p6eval> nom: OUTPUT«1␤»

[15:09] <moritz> nom: my %*foo; if %*foo { say 1 } else { say 2 }

[15:09] <p6eval> nom: OUTPUT«2␤»

[15:09] <moritz> nom: my %*foo; %*foo<a> = 1;  if %*foo { say 1 } else { say 2 }

[15:09] <p6eval> nom: OUTPUT«1␤»

[15:18] <moritz> nom: if pir::defined(%*foo) { say 1 } else { say 2 }

[15:18] <p6eval> nom: OUTPUT«2␤»

[15:18] *** kst left
[15:18] <moritz> nom: my %*foo; if pir::defined(%*foo) { say 1 } else { say 2 }

[15:18] <p6eval> nom: OUTPUT«1␤»

[15:21] *** kst joined
[15:32] *** dual joined
[15:36] *** agentzh left
[15:43] *** daniel-s joined
[15:52] *** noganex joined
[15:52] *** amkrankr1leuen joined
[15:52] *** amkrankruleuen left
[15:55] *** noganex_ left
[15:56] *** kst left
[15:56] *** kst joined
[15:59] *** mj41 left
[16:00] *** birdwindupbird left
[16:04] <sorear> good * #perl6

[16:21] <mberends> hi sorear

[16:26] <JimmyZ> hello sorear 

[16:27] *** daniel-s left
[16:34] *** Alias left
[16:35] *** ZaphrodZenovka joined
[16:40] *** araujo left
[16:40] *** araujo joined
[16:42] *** Moukeddar joined
[16:43] *** isBEKaml joined
[16:45] *** dakkar left
[16:48] *** awoodland left
[16:51] <tadzik> hello

[16:52] <isBEKaml> tadzik: o/ 

[16:52] *** Moukeddar left
[16:52] * tadzik restauranting with szabgab++

[16:53] <isBEKaml> tadzik: ah, at Riga, I guess? :)

[16:54] <tadzik> aye :)

[16:54] <isBEKaml> meatspace++

[16:55] * tadzik is stealing a wifi from every place possible, for there isn't one in my hotel

[16:55] <tadzik> http://yapceurope.lv/ye2011/photo/t-shirts.html

[16:55] <jnthn> Perhaps literally meatspace if it's a restaurant ;)

[16:55] <tadzik> more like a beerspace for me

[16:56] <jnthn> piwo! \o/

[16:56] * jnthn looks forward to being in Riga tomorrow

[17:00] <tadzik> when are you landing?

[17:01] <jnthn> 10:25ish

[17:04] *** Eevee is now known as eevee

[17:05] *** pernatiy left
[17:05] *** cogno left
[17:05] *** amkrankr1leuen left
[17:05] *** cogno joined
[17:05] *** cognominal_ joined
[17:06] *** amkrankruleuen joined
[17:08] *** cognominal left
[17:11] *** Moukeddar joined
[17:12] <Moukeddar> Hello guys :)

[17:12] <Moukeddar> and Girls

[17:12] <Moukeddar> since i discovered that Girls DO exist on the internet 

[17:14] <Moukeddar> :)

[17:18] <sjohnson> they do?

[17:18] <jnthn> Well, of course...the internet is for everyone. :)

[17:18] <flussence> I noticed that nom has a working Str.bytes but not a Str.encode, can the stuff in one be used for the other?

[17:18] <jnthn> flussence: .bytes tells you how many bytes it'd be if encoded...as....well something.

[17:19] <flussence> utf-8 I think

[17:19] * jnthn wonders whether Str.bytes is bogus in that sense

[17:19] <flussence> nom: '€'.bytes

[17:19] <p6eval> nom:  ( no output )

[17:19] <flussence> nom: '€'.bytes.say

[17:19] <p6eval> nom: OUTPUT«3␤»

[17:19] <jnthn> At least, without specifying an encoding.

[17:19] <jnthn> Yes, probably utf-8 in this case.

[17:19] <flussence> nom: say $?ENC

[17:19] <p6eval> nom: OUTPUT«Symbol '$?ENC' not predeclared in <anonymous> (/tmp/Kl6kpHJ3Gs:1)␤current instr.: 'parrot;PCT;HLLCompiler;panic' pc 154 (compilers/pct/src/PCT/HLLCompiler.pir:111)␤»

[17:19] <flussence> I imagine that'd default to utf-8

[17:20] <flussence> or maybe something from %ENV?

[17:20] * jnthn suspects it'd be $*ENC if it exists

[17:20] <jnthn> (so you can change it in a given dynamic scope)

[17:20] <flussence> that's what the spec tells me, anyway (S32/Str:232)

[17:20] *** mikehh_ joined
[17:23] *** kst left
[17:23] *** kst joined
[17:24] *** Moukeddar left
[17:25] *** envi left
[17:25] *** envi_|2 joined
[17:27] *** beekor left
[17:27] *** mikehh left
[17:27] *** bbkr_ left
[17:27] *** Reaganomicon left
[17:27] *** daemon left
[17:27] *** Reaganomicon joined
[17:27] *** JimmyZ left
[17:27] *** beekor joined
[17:27] *** JimmyZ joined
[17:27] *** george_z0rwell joined
[17:29] *** beek_ joined
[17:30] *** beek_ is now known as Guest71835

[17:33] *** impious joined
[17:34] *** impious left
[17:38] *** george_z0rwell left
[17:38] *** JimmyZ left
[17:38] *** beekor left
[17:38] *** Reaganomicon left
[17:38] *** foomator left
[17:38] *** jamessalty left
[17:38] *** bbkr_ joined
[17:42] *** JimmyZ joined
[17:44] *** jamessalty joined
[17:48] *** daemon joined
[17:50] *** Reaganomicon joined
[17:50] *** foomator joined
[17:53] *** kaare_ left
[17:58] *** birdwindupbird joined
[18:03] *** masak joined
[18:03] <masak> \o/

[18:03] <phenny> masak: 13:52Z <moritz> tell masak about http://irclog.perlgeek.de/perl6/2011-08-11#i_4262765

[18:04] * masak looks

[18:04] *** JimmyZ left
[18:05] <masak> cognominal_: cool! will look it up.

[18:06] <masak> cognominal_: I don't know if you're aware of my dlx-simple project, but... one of the goals is something like the opposite of obfuscation :)

[18:06] * masak eats a late dinner

[18:10] <masak> I'm happy folks are reading my gists sometimes. it's almost like Twitter, but with documents :)

[18:16] *** worr joined
[18:18] *** thou left
[18:21] *** thou joined
[18:21] *** donri left
[18:22] <flussence> here's what I've got pod2html doing at the moment: https://gist.github.com/1140332

[18:22] <flussence> does the pod parser create objects for those <> formatting things? I might do those next

[18:24] <[Coke]> flussence: I would prefer " as an attribute quote.

[18:25] <flussence> I agree... most of those were there when I started, just haven't got around to changing it

[18:25] <[Coke]> (unless ' is cromulent html5)

[18:27] <flussence> " and ' are both approximately the same thing, the only difference being what you need to escape inside them

[18:27] <flussence> (and html lets you use barewords there too, but that's just *wrong*)

[18:28] <masak> probably OK in html4 but definitely disallowed in xhtml.

[18:28] <masak> I'm sometimes amused by those "that's just *wrong*" assessments. people are applying new ideals on old standards. that feels like a waste of heat...

[18:30] <flussence> bareword attribs have so many ways to break that it's easier to just quote everything in the first place :)

[18:32] <masak> same with not matching up <td> tags with </td> tags inside tables. it leads to a briefer, lighter html tag soup, which is something that all sgml-oid formats really need. :)

[18:32] <masak> doesn't carry over to xhtml, of course, but that doesn't make it wrong in html 4.01. at least not by definition.

[18:48] *** [particle] left
[18:48] <[Coke]> masak: (doesn't make it wrong) no, but I for one would tend to write my html4.01 more like xhtml where allowed.

[18:49] <[Coke]> (I tend to use xhtml for any work related stuff anyway, though)

[18:49] *** im2ee joined
[18:51] <masak> yes, me too.

[18:51] <masak> unless there were special circumstances involved.

[18:58] *** pjcj left
[19:04] <masak> TimToady: I pronounce the 'e' in 'niecza' as the 'e' in 'fetch'.

[19:05] <jnthn> We should, like, have a Niecza pronunciation practice session at YAPC::EU :P

[19:14] *** [particle] joined
[19:15] *** kst left
[19:21] *** kst joined
[19:23] *** birdwindupbird left
[19:38] *** donri joined
[19:48] *** buubot_backup left
[19:51] <pmichaud> good afternoon, #perl6

[19:53] <masak> pmichaud! \o/

[19:53] <jnthn> o/ pmichaud 

[19:54] *** tadzik_kindle joined
[19:55] <tadzik_kindle> hello again

[19:55] <tadzik_kindle> anyone still on the ground? :)

[19:56] <pmichaud> I'm on the ground, for about another 90 mins

[19:56] <masak> tadzik_kindle: I'm standing on my couch, so technically not on the ground.

[19:56] <colomon> I'm at my office desk, same as always.  ;)

[19:57] <tadzik_kindle> dont fall!

[19:57] * masak sways dangerously

[19:58] <colomon> ah, heck, it's been years since last my office chair collapsed out from under me.

[19:58] <pmichaud> how do the collapse now?

[19:58] <pmichaud> *they?

[19:58] <pmichaud> grrr... silly lagged 3g network connection

[19:58] <huf> do they collapse at all or have you stopped using chairs now?

[19:59] <colomon> To be precise, I do use chairs, and have not had an office chair break in at least two or three years now.

[20:00] <felher> Does nom support Grammars good enough that i can play with or should i use master instead?

[20:00] <pmichaud> master for now

[20:00] <pmichaud> grammars this weekend

[20:00] <pmichaud> (in nom)

[20:00] <colomon> I did suffer catastrophic chair failure at the Dublin Irish Festival Saturday night, on the other hand.

[20:00] <colomon> \o/

[20:00] <pmichaud> maybe tomorrow, if I get enough power to do a decent amount of work on the plane

[20:00] <pmichaud> or if the plane has power outlets (unlikely)

[20:01] <colomon> \o/ for grammars in nom, I mean

[20:01] <felher> pmichaud++ : Very well :)

[20:01] <pmichaud> if someone wants to upgrade me to business class in a hurry, I can work on them :)

[20:01] <diakopter> har

[20:01] *** krakan joined
[20:02] <PerlJam> pmichaud: Isn't TPF paying?   You should have put in for business class to begin with  :)

[20:02] *** tadzik_kindle left
[20:02] <pmichaud> I try to keep my expenses to a minimum when someone else is footing the bill :)

[20:03] * moritz is pretty close to having Perl 6 level backtraces again in nom

[20:03] <pmichaud> at least, within certain bounds of comfort and safety.  I decided against traveling as cargo, for example.

[20:03] <moritz> it's a bit convoluted, I fear

[20:03] *** jaldhar joined
[20:05] <pmichaud> I have had translatlantic flights with power outlets before... this just isn't likely to be one of them.

[20:06] * pmichaud noms cheezburger

[20:06] *** pjcj joined
[20:07] *** buubot_backup joined
[20:07] *** isBEKaml left
[20:07] <jnthn> pmichaud: Don't remember outlets on any SAS longhaul I've done. :(

[20:07] * jnthn figures it's SAS anyway

[20:08] <pmichaud> yes, it's SAS.  Continental longhauls have often had power.

[20:08] * jnthn quite likes SAS generally

[20:08] <jnthn> I almost have enough frequent flyer miles with them to actually do something.

[20:09] <pmichaud> Continental seems to have discard the miles I accumulated with them.  Guess I wasn't frequent enough.

[20:10] *** im2ee left
[20:11] *** im2ee joined
[20:14] *** timbunce left
[20:16] <pmichaud> time to head through security again... see you all tomorrow-ish

[20:17] <jnthn> safe flight, happy hacking :)

[20:17] <jnthn> See you at CPH :)

[20:17] <[Coke]> great, now the TSA guy saw "hacking", and he's going to have to go through the slow line.

[20:18] <jnthn> That Sucks Awfully.

[20:21] *** timbunce joined
[20:22] *** thou left
[20:24] *** quietfanatic joined
[20:26] <quietfanatic> phenny: tell pmichaud timtoady says he's stuck in chicago because his plane broke down.

[20:26] <phenny> quietfanatic: I'll pass that on when pmichaud is around.

[20:26] <quietfanatic> phenny: tell masak timtoady says he's stuck in chicago because his plane broke down.

[20:26] <phenny> quietfanatic: I'll pass that on when masak is around.

[20:27] <quietfanatic> phenny: tell jnthn timtoady says he's stuck in chicago because his plane broke down.

[20:27] <phenny> quietfanatic: I'll pass that on when jnthn is around.

[20:27] <masak> quietfanatic: aww.

[20:27] <phenny> masak: 20:26Z <quietfanatic> tell masak timtoady says he's stuck in chicago because his plane broke down.

[20:28] <masak> quietfanatic: I hope it turns out OK. safety first.

[20:28] <Tene> Anyone here planning to go to PPW this year?

[20:37] *** nsh left
[20:37] <diakopter> quietfanatic: o hi

[20:38] <colomon> oh noez!  stuck in chicago?

[20:38] <diakopter> I was stuck in DFW for 8 hours on Friday while TWO planes were broken; had to deplane from both. the 2nd one was eventually fixed.

[20:38] *** nsh joined
[20:41] <masak> US planes break often because you use them too much :P

[20:41] <masak> not you personally, diakopter. just people.

[20:42] *** nsh left
[20:42] <diakopter> heh

[20:42] *** nsh- joined
[20:43] *** soh_cah_toa joined
[20:44] <masak> 'night, #perl6

[20:44] *** masak left
[20:49] *** saaki left
[20:54] *** im2ee left
[21:14] *** kanishka joined
[21:44] *** Psyche^ joined
[21:46] <dalek> roast: 0b24db8 | diakopter++ | S0 (17 files):

[21:46] <dalek> roast: fix a lot of smartlinks in S02; some I broke and some bitrotten by various spec edits

[21:46] <dalek> roast: review: https://github.com/perl6/roast/commit/0b24db8b4f

[21:48] *** Patterner left
[21:48] *** Psyche^ is now known as Patterner

[21:53] <dalek> specs: 6e3e973 | diakopter++ | S12-objects.pod:

[21:53] <dalek> specs: typo in S12

[21:53] <dalek> specs: review: https://github.com/perl6/specs/commit/6e3e973eb1

[21:53] <dalek> specs: 940ced0 | diakopter++ | S (5 files):

[21:53] <dalek> specs: Merge branch 'master' of github.com:perl6/specs

[21:53] <dalek> specs: review: https://github.com/perl6/specs/commit/940ced0a1f

[21:59] <diakopter> someday I'll figure out how to avoid that merge branch master using TortoiseGit

[22:01] *** drbean joined
[22:07] *** wamba left
[22:07] *** thou joined
[22:14] *** timbunce left
[22:19] *** kanishka left
[22:22] <flussence> diakopter: try doing a rebase before you commit

[22:23] <diakopter> flussence: yes, I don't know how to do that in TortoiseGit

[22:23] <flussence> oh, might be in a context menu somewhere...

[22:25] <diakopter> I see the rebase option; I guess I do it after I commit but before I pull?

[22:26] <flussence> no, before the commit

[22:27] <diakopter> if I try it before the commit, it warns me my uncommitted changes will be lost

[22:27] <flussence> it usually goes fetch -> rebase -> commit

[22:27] <flussence> the idea is you turn your current changes into patches on top of current HEAD instead of the one you had when you started

[22:28] <sorear> with command-line git, you commit -> fetch -> rebase -> push

[22:28] <sorear> the middle two steps can be combined as pull --rebase

[22:30] *** Chillance left
[22:30] <diakopter> committing first is what I thought

[22:31] <diakopter> that correlates with what TortoiseGit is warning me

[22:31] *** mikehh_ is now known as mikehh

[22:31] <diakopter> I'll try that next time

[22:39] <flussence> oh shit

[22:39] <flussence> whoops, wrong window

[22:40] <flussence> (note to self: stop breaking things)

[22:41] *** nbrown left
[22:41] *** nbrown joined
[22:44] <dalek> roast: 8aaac76 | diakopter++ | S12- (22 files):

[22:44] <dalek> roast: fix a bunch of smartlinks in S12, broken by me and TimToady++

[22:44] <dalek> roast: review: https://github.com/perl6/roast/commit/8aaac760da

[22:44] <dalek> roast: 05c3d8d | diakopter++ | S02-builtin_data_types/ (5 files):

[22:44] <dalek> roast: re-attempt to fix smartlinks in S02 to headings that contain C<>

[22:44] <dalek> roast: review: https://github.com/perl6/roast/commit/05c3d8d33a

[22:48] <diakopter> we'll see if that fixes it just after the top of the hour

[22:49] <diakopter> phenny: ask TimToady may I tackle the Literals section of S02

[22:49] <phenny> diakopter: I'll pass that on when TimToady is around.

[22:58] *** crked joined
[23:05] <dalek> roast: 777ed62 | diakopter++ | S12-enums/basic.t:

[23:05] <dalek> roast: re-fix one more smartlink

[23:05] <dalek> roast: review: https://github.com/perl6/roast/commit/777ed6231b

[23:19] <dalek> roast: cffa7e5 | diakopter++ | S02- (2 files):

[23:19] <dalek> roast: fix a couple more smartlinks for S12

[23:19] <dalek> roast: review: https://github.com/perl6/roast/commit/cffa7e52bf

[23:20] *** molaf_ joined
[23:23] *** molaf__ left
[23:30] *** tokuhirom joined
[23:46] *** Trashlord left
