[00:00] *** bacek joined
[00:01] <Tene> sorear: It very much reminds me of conflicts I've seen between dating and married couples, which is subtly hilarious to me.  "We never talk any more.  I don't feel that you understand my needs anymore.  I'm going to start seeing other people."

[00:01] <Tene> :)

[00:01] <sorear> yeah I laughed at the couples therapy line.

[00:02] <Tene> I don't think it's a bad metaphor for trying to address the issues, either.

[00:05] *** bacek left
[00:05] *** masak left
[00:06] *** masak joined
[00:10] *** TiMBuS left
[00:11] *** TiMBuS joined
[00:11] <[Coke]> made sense to me.

[00:14] *** patspam joined
[00:17] <coldhead> it's sad

[00:20] <pmurias> masak: re ++foo --option ++/foo i used to have --option before that, ++foo ++/foo seems to specify what goes to which subpart more specifically 

[00:20] <pmurias> masak: as for example different backends can have vastly different options

[00:21] <masak> I'm not sure I see that as a direct answer to my question.

[00:21] <masak> it's more of an elucidation of S19, which I don't think I'm less-than-clear on.

[00:25] * shortcircuit sets out to begin translating/rewriting http://rosettacode.org/wiki/RCRPG/Perl to Perl 6.

[00:26] <pmurias> masak: what are the drawbacks of ++foo?

[00:26] * shortcircuit wonders what he should use in place of Term::ANSIColor.

[00:27] <pmurias> masak: implementing that isn't very hard

[00:27] *** patspam left
[00:27] <pmurias> masak: and it seems cleaner

[00:27] *** patspam joined
[00:28] *** lopaway is now known as lopnor

[00:28] <pmurias> masak: the stuff i wanted to pass to mildew's backends ended up very strange

[00:28] <colomon> shortcircuit: I vote you just implement Tem::ANSIColor first.  ;)

[00:29] <pmurias> like options to the underlying c compiler and stuff

[00:29] <shortcircuit> colomon: I guess I could do that. Though I haven't implemented a P5 module in almost a decade, and have even less of an idea how to do it in P6.

[00:29] <pmurias> masak: i could have --backend-cflags but seems inelegant

[00:30] <colomon> shortcircuit: it's always good to learn.  :)

[00:30] <masak> pmurias: [drawbacks of ++foo] as I see them: specific to Perl 6, no rooting in Unix, introduces mental overhead in the user, introduces model overhead in the implementation.

[00:30] <pmurias> why mental overhead to the user?

[00:31] <masak> I assume openers and closers have to match up, and not mis-nest.

[00:31] <masak> there's mental overhead in adhering to those invariants.

[00:31] <masak> just as it is with writing correct XML or whatever.

[00:31] <shortcircuit> Is there a construct where something like "my %values :="... would make sense. As, "look this up in this hash, if it doesn't exist, run this code to generate it, and cache the result"?

[00:31] <masak> there are not as many ways to go wrong with classical command-line options.

[00:32] <pmurias> how have to parse compound names then

[00:32] <shortcircuit> Basically, I've got a scenario where I precalculate a hash's contents based on a transformation of another hash's contents, and I'd prefer to do that lazily.

[00:32] <pmurias> so like using prefixes instead of namespaces

[00:32] <pmurias> like in C

[00:33] <pmurias> i could live with --backend-* and --parser-* etc.

[00:33] <sorear> shortcircuit: %hash{$key} //= calculate()

[00:33] <pmurias> just when i found S19 i was looking exactly for something like that

[00:34] <sorear> it's called a shortcirtcuit assignment operator :)

[00:34] <shortcircuit> Oh god...

[00:34] <colomon> sorear++

[00:34] <pmurias> masak: ghc uses something like that too

[00:35] <colomon> rakudo: my %h; %h<blue> //= sin(10); %h<blue> //= 1/0; say %h.perl

[00:35] <p6eval> rakudo 549d2a: OUTPUT«{"blue" => -0.54402111088937}␤»

[00:35] <masak> pmurias: tell me more.

[00:35] <colomon> rakudo: my %h; %h<blue> //= sin(10); %h<blue> //= (1..*).elems; say %h.perl

[00:35] <masak> (this sounds familiar for some reason)

[00:35] <p6eval> rakudo 549d2a: OUTPUT«{"blue" => -0.54402111088937}␤»

[00:35] <colomon> rakudo++

[00:35] <sorear> haskell_program +RTS -N2 -RTS  # run program on 2 cores

[00:36] <sorear> actually -RTS can be omitted if it would be at the end.

[00:38] <colomon> rakudo: my %h; %h<blue> //= sin(10); %h<blue> //= (1...*).elems; say %h.perl

[00:38] <p6eval> rakudo 549d2a: OUTPUT«(timeout)»

[00:38] <colomon> rakudo--

[00:38] <colomon> shortcircuit: see above.  I don't think //= shortcircuits properly in Rakudo.

[00:38] <colomon> would love to be wrong about that....

[00:41] *** drbean joined
[00:42] <shortcircuit> colomon: That looks like a complicated run, which is a little more than what I'm addressing for the moment. (I don't have an infinite series anywhere here...)

[00:42] *** wallberg left
[00:43] <sorear> perl6: my %h; %h<blue> //= say(1); %h<blue> //= say(2);

[00:43] <p6eval> pugs, niecza v1-203-gbc5d7f7: OUTPUT«1␤»

[00:43] <p6eval> ..rakudo 549d2a: OUTPUT«1␤2␤»

[00:43] <masak> there you go.

[00:43] * masak submits rakudobug, Justin Case

[00:44] <shortcircuit> There wouldn't happen to be a fallback or special hash key, for a 'key not found' scenario? That would be ideal for what I'd like to do.

[00:46] <masak> shortcircuit: KeyHash allows you to set a default.

[00:46] <masak> but it's NYI in Rakudo.

[00:46] * shortcircuit nods.

[00:48] *** kst left
[00:48] * shortcircuit .oO( One could create a ridiculously simple caching proxy using shortcircuit operators, default key values and a filestore backing to Tie to.)

[00:50] <masak> well volunteered!

[00:51] <shortcircuit> Heh. I'm going to stick with my current P5->P6 translation of a terminal-mode game, for now. :)

[00:51] *** kst joined
[00:57] *** cafesofie left
[00:59] <masak> 'night, #perl6

[00:59] *** masak left
[01:03] *** Trashlord left
[01:03] *** pmurias left
[01:06] <sorear> shortcircuit: undefined values are intended to support the "key not found" case

[01:07] <sorear> any time you think you want to distinguish "key not present" from "key is undef", you're probably doing it wrong.

[01:10] *** whiteknight joined
[01:18] <sorear> hello whiteknight

[01:24] <whiteknight> hello

[01:31] *** shi joined
[01:35] *** GinoMan left
[01:35] *** patspam_ joined
[01:38] *** bemjb left
[01:39] *** patspam left
[01:39] *** patspam_ is now known as patspam

[01:44] *** snarkyboojum left
[01:55] *** aindilis joined
[01:59] *** VXZ left
[02:13] *** aesop left
[02:20] *** aesop joined
[02:46] *** snarkyboojum joined
[02:48] *** kst left
[02:49] *** kst joined
[02:59] *** noganex joined
[03:02] *** noganex_ left
[03:10] *** shi left
[03:24] *** flussence_ joined
[03:27] *** flussence left
[03:40] *** whiteknight left
[03:58] *** patspam left
[04:01] *** patspam joined
[04:12] *** JimmyZ joined
[04:12] *** patspam left
[04:26] *** Su-Shee left
[04:28] *** Su-Shee joined
[04:38] <shortcircuit> Hm.

[04:38] <sorear> Yes?

[04:39] <shortcircuit> How do I declare constructor arguments for a class?

[04:39] <shortcircuit> (Actually, I'm using class ClassName { ..... }, so I need to see how to declare the implementation, too.)

[04:39] <sorear> Every attribute is a constructor argument

[04:39] <shortcircuit> Ah. Convenient.

[04:40] <sorear> niecza: class Foo { has $.bar }; say Foo.new(bar => 12).bar

[04:40] <p6eval> niecza v1-203-gbc5d7f7: OUTPUT«12␤»

[04:40] <sorear> If you want to accept arguments differently, just override new in your class

[04:40] <sorear> niecza: class Foo { has $.bar; method new($x) { nextwith(self, bar => $x) } }; say Foo.new(12).bar

[04:41] <p6eval> niecza v1-203-gbc5d7f7: OUTPUT«12␤»

[04:41] *** kst left
[04:42] <shortcircuit> Any advantage to Sweet. Thanks.

[04:44] *** kst joined
[04:44] <shortcircuit> If I have a case where I could take method($var) {...}, and handle $var with an if/else latter, I could just as easily write it using a set of multis and no ladder. Any particular considerations for favoring one approach over the other?

[04:45] <shortcircuit> (Also, can the overridden new() be a multi instead of a method?)

[05:04] <sorear> multis and methods, per se, cannot substitute for each other

[05:04] <sorear> you can however use a proto, which is just an ordinary method

[05:04] <sorear> any place you can use a method, you can use a proto + a set of methods

[05:04] <sorear> set of multis

[05:04] <shortcircuit> I wound up using a couple batches of multis to defer to from within the method body.

[05:04] <sorear> if you don't have the proto, then things get (not understood by me)

[05:05] <sorear> do you know about given/when?  it's designed to replace if/else ladders

[05:05] <shortcircuit> Not familiar with them.

[05:06] <sorear> rakudo: given 12 { when 10 { say "A" }; when 12 { say "B" }; when 14 { say "C" } }

[05:06] <p6eval> rakudo 549d2a: OUTPUT«B␤»

[05:10] <shortcircuit> This is what I've written so far. http://pastebin.com/BS0SMcHT

[05:10] <shortcircuit> (I haven't tested to see that it runs)

[05:10] *** araujo joined
[05:11] *** felliott left
[05:12] <dalek> niecza: ffcfc4a | sorear++ | docs/nam.pod:

[05:12] <dalek> niecza: [nam.pod] Finish documenting low-level format

[05:12] <dalek> niecza: review: https://github.com/sorear/niecza/commit/ffcfc4a79b

[05:13] <sorear> shortcircuit: what you want is ... a hash

[05:14] <shortcircuit> Heh

[05:14] <sorear> shortcircuit: also, I don't recommend assigning (,,,) lists to $variables as this is a rather dark corner of the spec.  [,,,] is much better defined.

[05:15] <shortcircuit> The problem I'm dealing with for the moment is coming up with a nicer way to deal with %directions and %rdirections in http://rosettacode.org/wiki/RCRPG/Perl#Code

[05:16] <shortcircuit> Anyway, I'm overdue for bed. I obviously have some reading to do when I get up. :)

[05:17] *** envi joined
[05:17] <sorear> I'll try my own hand at that task tonight

[05:17] <shortcircuit> Heh; sweet.

[05:19] <shortcircuit> I haven't written the ANSI module yet, but I figure I'll wind up doing it, just for greater familiarity with consoles. (I'd like to see if I can query termcaps for it; just outputting raw codes assuming a 20-plus-year-old spec is being honored on the client end seems optimistic these days.

[05:20] *** felliott joined
[05:23] *** cafesofie joined
[05:27] *** dukeleto left
[05:27] *** dukeleto joined
[05:39] *** kaare_ joined
[05:44] *** chillroses joined
[05:44] <chillroses> good morning

[05:45] <sorear> shortcircuit: querying termcap is dangerous these days; with a proliferation of slightly different terminals, and ssh, it's increasingly unlikely that the correct terminal description will be available

[05:45] <sorear> hello and welcome chillroses 

[05:46] <chillroses> thank you

[05:46] <chillroses> iam a newbee

[05:46] <chillroses> would like to know the differences of 5 and 6

[05:46] <sorear> shortcircuit: I, uh, comaintain a couple of telnet gaming servers and have had no end of trouble with PuTTy in particular

[05:47] <sorear> shortcircuit: PuTTY calls itself "xterm" but defaults to different keypad codes than the ones in xterm-r7's terminfo file

[05:48] <sorear> shortcircuit: postel's prescription is a much safer way to work with terminals, than libtermcap

[06:05] *** satyavvd joined
[06:06] * mberends -> moritz_

[06:06] *** mberends left
[06:15] *** justatheory left
[06:18] *** chillroses left
[06:38] *** lopnor is now known as lopaway

[06:39] *** kst left
[06:44] *** kst joined
[06:45] *** kaare_ left
[06:48] *** satyavvd left
[06:54] *** felliott left
[07:15] *** drbean left
[07:16] <sorear> Who wrote RCRPG/Perl?

[07:16] <sorear> This is ... very unidiomatic code.

[07:35] <TiMBuS> timtaswtdi

[07:58] <sorear> phenny: tell colomon &postfix:<L>

[07:58] <phenny> sorear: I'll pass that on when colomon is around.

[08:03] *** rgrau left
[08:08] *** Trashlord joined
[08:27] *** am0c joined
[08:32] *** Psyche^ joined
[08:33] *** Patterner left
[08:33] *** Psyche^ is now known as Patterner

[08:38] *** kst left
[08:41] *** kst joined
[08:42] <sorear> RCRPG has found two bugs so far in niecza

[08:42] <sorear> but now I must sleep

[08:42] * sorear out

[08:48] *** drbean joined
[08:50] <cxreg> what happened to rakudo.org?

[08:50] <cxreg> other virtualhosts on that server are responding but that one just dies

[08:58] *** Mowah joined
[09:05] *** JimmyZ left
[09:45] <moritz_> good morning

[09:47] *** masak joined
[09:47] <masak> hola, zebras.

[09:51] *** _118 joined
[09:51] *** kjeldahl joined
[09:57] *** kst left
[09:58] *** kst joined
[10:01] <moritz_> http://www.perl-community.de/bat/poard/thread/15903 a proposal for a pythonic frontend for Perl 6 (in German)

[10:02] *** kst left
[10:03] *** kst joined
[10:18] *** _118 left
[10:18] *** shi joined
[10:18] *** _118 joined
[10:20] *** Su-Shee left
[10:22] *** Ooblick joined
[10:24] <masak> I've had a similar idea -- give Perl 6 a mostly Pythonic syntax -- and I'm basically waiting for more advanced parser hooks to try it out.

[10:25] <masak> but... getting rid of the sigils? I don't think that's easily done, and besides I don't think it's a good idea.

[10:25] <tadzik> I don't think the lack of sigils makes stuff more readable

[10:25] <moritz_> masak: indeed, that's what I argued in my reply

[10:26] <masak> oh, haven't read the reply.

[10:26] <moritz_> masak: I should blog about the various aspects of sigils, and why removing them isn't easily done

[10:26] <moritz_> https://github.com/moritz/nqp-cl-parser if you want to look at some funny command line parsing code :-)

[10:27] <masak> moritz_: right, good reply. you brought up more objections than I'd found so far.

[10:27] * masak looks expectantly :)

[10:27] <moritz_> well, I spent a few minutes thinking about it :-)

[10:28] <masak> :)

[10:28] <masak> by the way, http://modules.perl6.org/ has an encoding problem. look at the line with perl6-literate.

[10:28] <masak> I'm pretty sure it's not github that has the encoding problem.

[10:28] <tadzik> masak: btw, there's no META.info for perl6-literate

[10:29] <tadzik> just saying. BTW, >50% of modules use the new infrastructure now

[10:29] <tadzik> now that masak++ has moved his

[10:30] <masak> moritz_: er. variable on https://github.com/moritz/nqp-cl-parser/blob/master/do.pl#L9 , where is it declared?

[10:30] <moritz_> you mean $x?

[10:30] <moritz_> it's a formal parameter

[10:30] <tadzik> I have a plenty of plans to launch some module-related services on feather when my exam session is over

[10:31] *** xinming_ joined
[10:31] <masak> tadzik: huh? I see https://github.com/masak/perl6-literate/commit/736e5e3d422ac6d4627abb23da0c9feb59144386 online, don't you?

[10:32] <masak> moritz_: no, $!stop-after-first-arg

[10:32] <masak> which looks very much like an attr.

[10:32] <tadzik> masak: oh, must've missed it

[10:33] <masak> moritz_: line 9, as I linked to.

[10:33] *** xinming left
[10:33] <moritz_> masak: oh, I can't read

[10:34] <masak> moritz_: how can you use an attribute without declaring it?

[10:34] <moritz_> masak: it's broken, I renamed the attribute to $!b for testing purposes, and accidentally committed

[10:34] <masak> oh :(

[10:35] <moritz_> masak: fix pushed... i wanted to find out more about the WTF on line 165

[10:35] <masak> lines 16 and 17... sometimes I think about how to write that using real, encapsulated Perl 6 OO.

[10:35] <masak> as they are now, I think they leak read-writeness.

[10:37] <moritz_> they do, in nqp-rx

[10:37] <moritz_> they don't in proper Perl 6

[10:38] <masak> are you sure? I think the spec says somewhere that ro-ness only goes down "one level".

[10:38] * moritz_ sees only one level

[10:38] <masak> I'm talking about the general case.

[10:39] <masak> a .deep-clone would be needed to do it right in the general case.

[10:39] <moritz_> well, if you have objects inside the attribute, ... right

[10:39] <masak> objects or no, I wouldn't want to hand out a reference to *anything* that's only meant to be changed from within the object,

[10:40] <dalek> mu: 1288837 | moritz++ | misc/dalek-conf.json:

[10:40] <dalek> mu: [dalek-conf] fix channel for nqp-cl-parser

[10:40] <dalek> mu: review: https://github.com/perl6/mu/commit/1288837d33

[10:41] <masak> Josh Bloch calls it "making defensive copies". it's important both for getters and constructors/setters.

[10:41] <masak> it's basically the OO twist on "user data can't be trusted".

[10:44] * moritz_ nods, although he can't connect the name Josh Bloch to anything

[10:46] <masak> moritz_: "Effective Java", "Java Puzzlers", Java Collections, java.math :)

[10:47] <moritz_> masak: that explains it - I'm not strong in the Java universe

[10:48] <masak> moritz_: [nqp-cl-parser] looks very nice.

[10:48] <moritz_> masak: thanks

[10:58] *** Ooblick left
[11:00] *** am0c left
[11:02] *** flatwhatson_ joined
[11:17] <moritz_> phenny: tell felliott that he has commit access to perl6/specs too, and is welcome to commit obvious fixes himself

[11:17] <phenny> moritz_: I'll pass that on when felliott is around.

[11:20] <dalek> specs: a68bbb1 | (Fitz Elliott)++ | S19-commandline.pod:

[11:20] <dalek> specs: [S19] break up unintentional pod formatting code

[11:20] <dalek> specs: review: https://github.com/perl6/specs/commit/a68bbb14c0

[11:20] <dalek> specs: e144eac | (Fitz Elliott)++ | S32-setting-library/Containers.pod:

[11:20] <dalek> specs: [S32:Containers] fix broken link to Type Declarations, now in S29

[11:20] <dalek> specs: review: https://github.com/perl6/specs/commit/e144eacb29

[11:20] * moritz_ was just about to commit that too

[11:23] *** rgrau joined
[11:25] *** _118 left
[11:36] *** shi left
[11:47] *** whiteknight joined
[11:57] *** kst left
[11:58] *** kst joined
[11:59] <dalek> nqp-rx/nom: 29337fb | moritz++ | src/metamodel/reprs/P6opaque.c:

[11:59] <dalek> nqp-rx/nom: distinguish "P6opaque attributes" error messages (no additional value for the user)

[11:59] <dalek> nqp-rx/nom: review: https://github.com/perl6/nqp-rx/commit/29337fb49b

[12:00] *** shi joined
[12:14] *** xinming joined
[12:17] *** xinming_ left
[12:37] *** cjk101010 left
[12:43] *** cjk101010 joined
[12:48] *** rgrau left
[12:55] *** kjeldahl left
[13:11] * masak misses hugme

[13:19] *** coldhead left
[13:24] *** flatwhatson_ left
[13:42] *** drbean left
[13:51] *** rgrau joined
[13:52] *** am0c joined
[13:52] *** orafu joined
[13:52] *** MayDaniel joined
[13:52] *** kst left
[13:53] *** kst joined
[13:56] *** whiteknight left
[13:58] *** felliott joined
[14:05] *** wamba joined
[14:22] *** f00li5h is now known as _0000

[14:23] *** _0000 is now known as f00li5h

[14:29] <colomon> sorear++

[14:29] <phenny> colomon: 07:58Z <sorear> tell colomon &postfix:<L>

[14:30] <colomon> testing it now.

[14:31] <moritz_> masak: it seems that hugme's auto-rejoin doesn't work well on netsplits

[14:31] *** hugme joined
[14:31] *** ChanServ sets mode: +v hugme

[14:35] <colomon> pushed.

[14:35] <felliott> Thanks, moritz_!

[14:35] <phenny> felliott: 11:17Z <moritz_> tell felliott that he has commit access to perl6/specs too, and is welcome to commit obvious fixes himself

[14:36] *** MayDaniel left
[14:36] <colomon> looks like causality is going backwards on #perl6 this morning.  ;)

[14:36] <felliott> I live backwards in time.

[14:36] <felliott> It's a problem.

[14:37] *** xinming left
[14:39] *** cafesofie left
[14:39] *** xinming joined
[14:40] <shortcircuit> sorear: Yeah, I'm familiar with PuTTY troubles. I use PuTTY everwhere I use Windows, and it's royal PITA to get things set up properly.

[14:41] <shortcircuit> sorear: I wrote RCRPG/Perl. I've been hoping someone would clean it up for ages.

[14:43] *** mikehh joined
[14:43] <shortcircuit> felliott: So it goes.

[15:00] *** mkramer joined
[15:09] *** xinming_ joined
[15:13] *** xinming left
[15:14] *** am0c left
[15:18] *** mkramer1 joined
[15:19] *** mkramer left
[15:35] *** kst left
[15:36] *** kst joined
[15:39] *** felliott left
[15:41] <jnthn> Good afternoon, #perl6

[15:41] <phenny> jnthn: 29 Jan 19:33Z <moritz_> tell jnthn that I get a nasty "P6opaque attributes NYFI" error when I uncomment the hilighted line (165) in https://github.com/moritz/nqp-cl-parser/blob/6832591a1597ecd34c250257f8ae51fd31a3b9de/do.pl#L165 in what seems like a simple scalar attribute access - any idea what's wrong?

[15:42] <colomon> o\

[15:42] <jnthn> moritz_: I commented on the commit but I think it's just that nqp-rx doesn't parse - in attribute names, and the undeclared attribute check at compile time is NYI.

[15:42] <jnthn> Or maybe something like that

[15:42] <jnthn> Maybe not though

[15:42] <jnthn> o/ colomon 

[15:42] * jnthn will take a look

[15:43] *** satyavvd joined
[15:44] * jnthn admires the tea selection in his hotel room

[15:45] *** felliott joined
[15:47] *** cjk101010 left
[15:52] *** envi left
[15:52] *** envi joined
[15:54] <sorear> good * #perl6

[15:58] *** wamba left
[15:58] *** felliott left
[15:58] <moritz_> jnthn: I replied to your comment... change the attribute to $!foo doesn't fix it

[15:59] <jnthn> moritz_: OK, then it's a $weird_bug

[15:59] *** felliott joined
[15:59] <moritz_> jnthn: I've added numbers to the error messages to distinguish the cases... it's the first occurence in the file that throws the error

[16:00] <jnthn> Thanks, that's helpful.

[16:00] <sorear> shortcircuit: https://gist.github.com/802968 # My version of RCRPG/Perl 6.  Contains several workarounds for bugs not present in Rakudo

[16:02] <jnthn> moritz_: Just getting an up to date build on the laptop. :)

[16:02] <jnthn> Didn't hack on this machine for a month. :)

[16:09] <shortcircuit> sorear: Wow; there's a lot of syntax in here I'll need to wrap my head around.

[16:14] <colomon> sorear: postfix:<L> was a lovely suggestion, and I have made it so.

[16:15] <sorear> shortcircuit: I will answer any requests for clarification

[16:19] <[Coke]> rakudo: my @a = 1..4; say @a[1..*].perl

[16:19] <p6eval> rakudo 549d2a: OUTPUT«(timeout)»

[16:19] <moritz_> @a[1..*-1] works

[16:19] <[Coke]> that's new.

[16:20] <[Coke]> ah. not that new. (RT #64566)

[16:20] <sorear> niecza: my %foo; if !%foo<hi>:exists { say "..." } # Is this correct?

[16:20] <p6eval> niecza v1-204-gffcfc4a: OUTPUT«Unhandled exception: Excess arguments to SAFE prefix:<!>, unused named exists␤  at /home/p6eval/niecza/lib/SAFE.setting line 0 (SAFE prefix:<!> @ 0)␤  at /tmp/RTr5rVn9TU line 1 (MAIN mainline @ 2)␤  at /home/p6eval/niecza/lib/SAFE.setting line 1037 (SAFE C432_ANON @

[16:20] <p6eval> ..1)␤  at /home/p…

[16:20] * [Coke] wishes that he could use gmail style keyboard shortcuts in RT. :P

[16:21] <moritz_> sorear: I don't think so

[16:21] <moritz_> saying ... would be the correct answer

[16:23] <shortcircuit> sorear: sub command() is a very strange beast to me, or, at least, the subsequent lines of command [supported args], (string), number, -> $var { block }

[16:24] <sorear> It's just a function with four arguments

[16:25] <sorear> -> sig { block } is just a lambda

[16:29] <jnthn> moritz_: ping

[16:30] <moritz_> jnthn: pong

[16:31] <jnthn> moritz_: How do I reproduce the failure?

[16:31] <jnthn> moritz_: If I take https://github.com/moritz/nqp-cl-parser/raw/master/do.pl and run it, I get all 17 passing.

[16:31] <[Coke]> where would a test for / <[a-z]> /  go? S05-?

[16:31] <moritz_> jnthn: yep, you need to comment out line 165

[16:31] <[Coke]> metachars?

[16:32] <jnthn> moritz_: d'oh :)

[16:33] <moritz_> [Coke]: S05-metasyntax/charset.t probably

[16:33] <[Coke]> moritz_: danke.

[16:33] <moritz_> [Coke]++

[16:34] <jnthn> moritz_: OK, reproduce it.

[16:34] <jnthn> *reproduced

[16:35] <jnthn> moritz_: I'm confused.

[16:35] <jnthn> moritz_: $!stop-after-first-arg is declared as an attribute in CLIParseResult

[16:35] <jnthn> moritz_: But you try to access it in CommandLineParser

[16:35] <moritz_> jnthn: d'oh

[16:36] <moritz_> jnthn: when I move it to CommandLineParser, I get "P6opaque attributes NYFI 4"

[16:36] <moritz_> previously 1

[16:36] <moritz_> oh wait

[16:36] <moritz_> I do the initialization in the wrong class too

[16:36] <jnthn> moritz_: You have an accessor for it in CLIParseResult

[16:37] <moritz_> jnthn: it should all be in the parser class... and works then

[16:37] <jnthn> moritz_: OK

[16:37] <moritz_> so it seems my problem is just with imperfect error reporting

[16:38] <jnthn> moritz_: Yeah, what should happen is that it tells you at compile time, "hang on...that attr doesn't exist"

[16:38] <jnthn> Will add that check soon. :)

[16:39] <moritz_> \o/

[16:40] <jnthn> Anyway, glad I've not got a really super-obscure  bug to find. :)

[16:40] <moritz_> it just needed another pair of eyes :-)

[16:40] <[Coke]> there is no builtin Test sub for checking an exception message, yes? 

[16:41] <[Coke]> (so i have to handroll an eval and check the message?)

[16:41] <moritz_> correct :(

[16:42] <jnthn> No built-in Test sub in...which test module/language/project? :)

[16:42] <shortcircuit> sorear: Any problem with me taking the gist and putting it on RC?

[16:43] <moritz_> jnthn: Perl 6

[16:44] <moritz_> jnthn, [Coke] I plan to have a throws_ok which checks the kind of exception that's thrown

[16:44] <jnthn> I thought we had dies_ok?

[16:44] <[Coke]> moritz_: hurm. / <[a-z]> / seems to not be catchable by try {}

[16:44] <moritz_> [Coke]: it's a compile time bug

[16:44] <moritz_> and try { } is run time

[16:44] <moritz_> so you need eval ''

[16:45] <[Coke]> *facepalm*

[16:45] <[Coke]> danke.

[16:45] <[Coke]> jnthn: *dies_ok just checks to see if $! was set.

[16:48] <[Coke]> is there a better way to reset $! than try { 1 } ?

[16:50] <[Coke]> (is lexically scoping it sufficient?

[16:51] <sorear> you need eval_dies_ok

[16:52] <[Coke]> eval_dies_ok doesn't check the value of $! either, methinks.

[16:52] <sorear> shortcircuit: no, although it seems like for consistency it should be ported to Rakudo

[16:53] *** satyavvd left
[16:54] <[Coke]> is there a doc on writing spec tests? like "here's how to fudge just that one test you rewrote so you can test things reasonably fast." ;)

[16:55] <shortcircuit> sorear: I saw the TODO line at the top, but I'm not familiar enough with Perl6 or rakudo to know the bugs in question (or necessarily where they'd apply in the body of the code.)

[16:56] <shortcircuit> sorear: Which implementation was this tested with?

[16:56] *** envi left
[16:58] *** kst left
[16:59] <sorear> niecza

[17:00] <[Coke]> moritz_: I cannot seem to construct something where /<[a-z]>/ is catchable.

[17:01] <[Coke]> rakudo: eval "/<[a-z]>/"

[17:01] <p6eval> rakudo 549d2a:  ( no output )

[17:01] <[Coke]> ... that is not what it does locally. :P

[17:01] <shortcircuit> sorear: Does Niecza have an project page somewhere describing it? (i.e. what it is, how it differs from other P6 implementations, etc)

[17:02] <[Coke]> bah. behaves differently in REPL.

[17:02] *** kst joined
[17:03] * shortcircuit would like to get a P6 Implementation page properly set-up for Niecza.

[17:04] <shortcircuit> Hm. https://github.com/sorear/niecza Looks like a good reference target.

[17:07] <sorear> docs/announce.initial is probably the best executive summary

[17:09] <moritz_> rakudo: eval '/<[a-z]>/; say "alive, error was $!"

[17:09] <p6eval> rakudo 549d2a: OUTPUT«===SORRY!===␤Confused at line 22, near "eval '/<[a"␤»

[17:10] <moritz_> rakudo: eval '/<[a-z]>/'; say "alive, error was $!"

[17:10] <p6eval> rakudo 549d2a: OUTPUT«alive, error was Unsupported use of - as character range;in Perl 6 please use .. at line 1, near "z]>/"␤»

[17:12] <shortcircuit> sorear: http://rosettacode.org/wiki/Niecza

[17:12] <shortcircuit> Hack that up however needed.

[17:14] <sorear> I should get an account, huh.

[17:14] <dalek> niecza: b0c5160 | sorear++ | src/ (3 files):

[17:14] <dalek> niecza: Mergeback

[17:14] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b0c5160089

[17:14] <dalek> niecza: ae2f23a | sorear++ | src/STD.pm6:

[17:14] <dalek> niecza: Fix crash in "strange text after block" error

[17:14] <dalek> niecza: review: https://github.com/sorear/niecza/commit/ae2f23affd

[17:14] <shortcircuit> sorear: Nothing stops you from editing anonymously, except a bunch more CAPTCHAs. :)

[17:15] <shortcircuit> (The CAPTCHAs continue while logged in for a while, but die off after an internal metric is met.)

[17:15] <masak> s/metric/threshold/

[17:16] <dalek> nqp-cl-parser: 9bdd79d | moritz++ | do.pl:

[17:16] <dalek> nqp-cl-parser: sometimes I am so stupid it hurts. jnthn++

[17:16] <dalek> nqp-cl-parser: review: https://github.com/moritz/nqp-cl-parser/commit/9bdd79de7a

[17:16] <masak> moritz_: I know the feeling... :/

[17:16] <sorear> shortcircuit: Where does the documentation still say "Perl 5"?

[17:18] <sorear> ummm... I can't find the login link

[17:18] <sorear> oh found it

[17:18] *** MayDaniel joined
[17:19] <[Coke]> wow. this is incredibly frustrating. ;)

[17:22] <[Coke]> is there a way to get the harness to spit out "got FOO, expected BAR" ?

[17:23] <[Coke]> ... ah. t/harness --fudge <file> doesn't actually refudge the file.

[17:23] <[Coke]> ... no, it does. I give up. :)

[17:24] *** MayDaniel left
[17:24] *** kaare_ joined
[17:24] *** ab5tract joined
[17:28] <moritz_> rakudo: use Test; is 'a', 'b';

[17:28] <p6eval> rakudo 549d2a: OUTPUT«not ok 1 - ␤#      got: 'a'␤# expected: 'b'␤»

[17:28] <sorear> shortcircuit: actually I suppose it will still be Perl 5 until tomorrow if you stick to released versions...

[17:29] <moritz_> [Coke]: that does give the diagnostic message

[17:33] <sorear> shortcircuit: I meant to say bugs *not* in Rakudo

[17:33] <sorear> shortcircuit: for instance

[17:34] <sorear> rakudo: say ['gold' xx 9].perl # This is the best way to write the line

[17:34] <p6eval> rakudo 549d2a: OUTPUT«["gold", "gold", "gold", "gold", "gold", "gold", "gold", "gold", "gold"]␤»

[17:34] <sorear> niecza: say ['gold' xx 9].perl # Oops

[17:34] <p6eval> niecza v1-206-gae2f23a: OUTPUT«[]␤WRONG ExitRunloop TAKEN:␤  at  line 0 (ExitRunloop @ 0)␤Correct:␤  at /home/p6eval/niecza/lib/SAFE.setting line 533 (SAFE List.perl @ 5)␤  at /tmp/ba2ss6hPQs line 1 (MAIN mainline @ 3)␤  at /home/p6eval/niecza/lib/SAFE.setting line 1037 (SAFE C432_ANON @ 1)␤  at

[17:34] <p6eval> ../home/p6eval/nie…

[17:34] <sorear> pugs: say ['gold' xx 9].perl # just curious

[17:34] <p6eval> pugs: OUTPUT«["gold", "gold", "gold", "gold", "gold", "gold", "gold", "gold", "gold"]␤»

[17:35] <moritz_> where's the bug? in xx or in .perl?

[17:36] *** sji joined
[17:36] <sorear> moritz_: it appears to be in &map

[17:37] *** shi left
[17:39] *** ubunturocks joined
[17:40] *** ubunturocks left
[17:42] *** tadzik left
[17:43] *** tadzik joined
[17:43] *** ubunturocks joined
[17:44] <ubunturocks> :)

[17:44] <ubunturocks> perl6 gonna be mainstream soon?

[17:45] <sorear> That's up to you.

[17:45] *** ab5tract left
[17:45] <masak> ubunturocks: it's good you came. we need your help.

[17:47] <masak> we need people to test-drive Perl 6 before it goes mainstream. shake out some bugs, etc.

[17:47] <masak> we have some people doing this, but it'd be great with one more.

[17:47] <masak> ubunturocks: do you have what it takes? :)

[17:47] *** ubunturocks left
[17:48] *** cafesofie joined
[17:48] <masak> are you willing and able?

[17:48] <sorear> guess not.

[17:48] <jnthn> ...he may, but his connection doesn't.

[17:48] <sorear> oh.

[17:48] * jnthn is hungry

[17:48] <jnthn> bbiab

[17:49] *** ponbiki left
[17:50] *** ponbiki joined
[17:54] *** justatheory joined
[17:57] *** ab5tract joined
[18:00] *** ab5tract left
[18:15] *** kst left
[18:17] *** kst joined
[18:35] <dalek> niecza: 786a885 | sorear++ | lib/Builtins.cs:

[18:35] <dalek> niecza: Fix lazy cases of map and grep

[18:35] <dalek> niecza: review: https://github.com/sorear/niecza/commit/786a885f0c

[18:40] *** cafesofie left
[18:50] *** thundergnat joined
[18:50] <thundergnat> Hello #perl6

[18:51] <thundergnat> masak: BTW,  RT #83002 is a dup of RT #77420

[18:52] <thundergnat> rakudo: my @g; @g[^2]».[^6] »=» 0; @g.perl.say

[18:52] <p6eval> rakudo 549d2a: OUTPUT«[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]␤»

[18:52] <thundergnat> rakudo: my @g; @g[^2]>>.[^6] >>+=>> 0; @g.perl.say;

[18:52] <p6eval> rakudo 549d2a: OUTPUT«[[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]␤»

[18:52] <thundergnat> rakudo: my @g; @g[^2]>>.[^6] >>=>> 0; @g.perl.say;

[18:52] <p6eval> rakudo 549d2a: OUTPUT«===SORRY!===␤Missing << or >> at line 22, near "> 0; @g.pe"␤»

[18:53] <thundergnat> No it isn't :-/

[18:53] <thundergnat> std: my @g; @g[^2]>>.[^6] >>=>> 0; @g.perl.say;

[18:53] <p6eval> std 625303c: OUTPUT«[31m===[0mSORRY![31m===[0m␤Missing << or >> at /tmp/Bc93YUWpWg line 1:␤------> [32mmy @g; @g[^2]>>.[^6] >>=>[33m⏏[31m> 0; @g.perl.say;[0m␤    expecting infix_circumfix_meta_operator␤Parse failed␤FAILED 00:01 121m␤»

[18:54] <thundergnat> Phooey.

[18:55] <thundergnat> Seems kind of crappy that »=» is ok but >>=>> isn't.

[18:59] *** thundergnat left
[19:01] *** Su-Shee joined
[19:02] *** dukeleto left
[19:02] *** dukeleto joined
[19:12] <dalek> nqp-cl-parser: 9c18ca4 | moritz++ | do.pl:

[19:12] <dalek> nqp-cl-parser: test for stop-after-first-arg

[19:12] <dalek> nqp-cl-parser: review: https://github.com/moritz/nqp-cl-parser/commit/9c18ca4719

[19:13] *** cafesofie joined
[19:21] *** dual left
[19:36] *** molaf joined
[19:37] *** dukeleto left
[19:37] *** dukeleto joined
[19:39] *** orafu left
[19:39] *** awwaiid left
[19:40] *** awwaiid joined
[19:41] *** kst left
[19:41] *** orafu joined
[19:41] *** kst joined
[19:45] *** cafesofie left
[19:55] *** envi joined
[20:05] <sorear> moritz_, et al: What kind of attribution should I have when I steal functions from Rakudo's setting one at a time?

[20:07] <masak> Rakudo's LICENSE: "You may Distribute verbatim copies of the Source form of the Standard Version of this Package in any medium without restriction [...] provided that you duplicate all of the original copyright notices and associated disclaimers."

[20:09] <masak> "You are permitted to link Modified and Standard Versions with other works, to embed the Package in a larger work of your own [...] provided the result does not expose a direct interface to the Package."

[20:11] <masak> sorear: since Niecza is also licensed with Artistic 2.0, I see very little problem.

[20:13] <masak> of course, a little attribution is a kind gesture, if nothing else.

[20:18] *** Mowah left
[20:22] *** masak left
[20:24] <jnthn> sorear: Seems like since you're under the same license, then the associated disclaimers are covered; that just leaves the copyright notices.

[20:24] *** Mowah joined
[20:24] *** zby_home left
[20:25] <jnthn> sorear: I very much doubt there'd be any expectation to flag up with routines have which copyright, though.

[20:25] <jnthn> sorear: Just some blanket "Portions copyright ..." or so would (IMHO, IANAL) do.

[20:26] <moritz_> "Part of this file is Copyright (C) 2010, 2011 by The Perl Foundation"

[20:26] <jnthn> *nod*

[20:26] <jnthn> Something like that.

[20:28] *** masak joined
[20:36] *** coldhead joined
[20:48] <sorear> ok.

[20:49] *** zby_home_ joined
[20:51] *** tadzik left
[20:51] *** tadzik joined
[20:52] <tadzik> screen--

[20:52] *** zby_home_ left
[20:52] *** envi left
[20:54] *** kjeldahl joined
[21:23] <sorear> tadzik: try tmux

[21:23] <tadzik> sorear: is it on feather?

[21:24] <sorear> if it's not, I'll install it

[21:24] *** cognominal left
[21:24] <tadzik> it is, I'll check it out in some spare time

[21:25] <sorear> I switched a few months ago (doy++)... it's much better at KISS

[21:26] *** wooden left
[21:29] *** cognominal joined
[21:31] *** wooden joined
[21:34] *** maja_ joined
[21:40] *** Limbic_Region joined
[21:40] *** maja_ left
[21:43] *** kaare_ left
[21:48] <pmichaud> jnthn: ping

[21:50] <pmichaud> jnthn, moritz, others:   draft nqp plan at http://pmichaud.com/sandbox/nqp.txt

[21:50] <pmichaud> comments and revisions welcomed

[21:51] *** Limbic_Region left
[21:52] <jnthn> pmichaud: Great! Will read now. :)

[21:52] <pmichaud> I'll mention on #parrot shortly -- when we're happy with the text I'll post to parrot-dev and perl6-compiler

[21:52] <pmichaud> and maybe also to my blog

[21:53] <jnthn> Your blog lives now? :)

[21:53] <pmichaud> no, but it's a reasonable first-post :)

[21:53] <pmichaud> and I can make it live pretty much whenever I want

[21:53] <pmichaud> (everything is in place, I'm just needing a good post)

[21:53] <pmichaud> I expect I'll be tweaking the blog a fair bit over time

[21:54] <jnthn> pmichaud: "multisub dispatch" in first para - just "multiple dispatch"

[21:54] <jnthn> pmichaud: It handles multi-method dispatch too.

[21:55] <pmichaud> right

[21:55] <pmichaud> fixed

[21:55] <pmichaud> (reload to see changes if/when you want)

[22:03] <jnthn> The new nqp also contains a replacement implementation of multiple

[22:03] <jnthn> dispatch -- it no longer makes use of the Parrot MultiSub PMC type.

[22:04] <jnthn> That's true, but may be worth mentioning that it's to get consistent semantics with Perl 6 so we're a truer subset.

[22:04] *** kst left
[22:06] *** kst joined
[22:09] *** Mowah left
[22:10] *** PacoLinux left
[22:15] *** jedai_ joined
[22:19] *** jedai left
[22:19] *** aindilis left
[22:20] *** aindilis joined
[22:25] *** felliott left
[22:27] * allbery_b observes, apropos of several discussions elseirc, that while people grumble about p6's incompatibilities with p5, they're ignoring the fact that python and ruby are already causing havoc in that way

[22:27] <pmichaud> yes, python has been incompatible with perl 5 for quite a while.  :-P :-P

[22:27] <colomon> Yes, both python and ruby are quite in.... what pmichaud said.  :)

[22:28] <pmichaud> I think we hope to be able to fix that in Perl 6 :-P

[22:29] <jnthn> They're just DSLs in Perl 6, right? ;_)

[22:29] <colomon> pmichaud: just built a new layout for my guy.  Two different elevated sections, the turntable, and Brendham Docks.  ;)

[22:29] <perigrin> pmichaud: you have plans in perl6 to make python more compatible with perl5?

[22:29] <perigrin> *that* I have to see.

[22:29] <colomon> perigrin: we're quite ambitious.  ;)

[22:34] *** sji left
[22:37] <tadzik> hey, that was supposed to be Parrot, right? ;)

[22:37] <tadzik> . o O ( dollar_underscore )

[22:39] *** pmurias_ joined
[22:40] *** pmurias joined
[22:42] *** pmurias_ left
[22:45] <allbery_b> heh

[22:45] <allbery_b> no, ruby isn't compatible with itself between releases, and the problems with pythion 2.x vs python 3 are approaching the status of legend

[22:45] <allbery_b> ...yet it's perl 6 that everyone seems to whine about

[22:46] *** whiteknight joined
[22:47] <pmichaud> perl 6 is often held to a different standard.  That's okay, we hold it to different standards also.  :-)

[22:47] <tadzik> python has problems between 2.6 and 2.7 even. 3 was _supposed_ to be incompatibile

[22:48] <perigrin> perl has (some) problems between 5.10 and 5.12 and 5.13

[22:48] <perigrin> 6 is spposed to be incompatible :)

[22:49] <perigrin> There are moments where I have a horrible suspicion that if someone were to release Perl6 as a brand new langauge without a name that matched qr/^Perl/; 

[22:49] <perigrin> people would love it

[22:49] <allbery_b> I hear that from a lot of people, actually

[22:50] <allbery_b> it isn't perl 6 that annoys them per se, they're annoyed that it's still called perl

[22:50] <perigrin> I'm thinking less about the Perl community

[22:50] <allbery_b> which is pretty much what I was ranting about there :)

[22:50] <perigrin> and more about the people who hate on anything that matches qr/^Perl/

[22:51] <allbery_b> I'm not talking about the perl community either, I'm talking random programmers, sysadmins, etc. who are annoyed that their little pigeonholes are being violated (possibly in several senses, in their opinions)

[22:51] * perigrin nods

[22:52] <perigrin> it's water under the bridge now

[22:52] <perigrin> we have the brandings we have

[22:53] <perigrin> also I don't have a single perl6 talk submitted to YAPC::NA yet

[22:53] <perigrin> is everybody gonna wait till the deadline?

[22:53] <perigrin> *sniff*

[22:53] <colomon> when's the deadline?

[22:53] <colomon> I've been pondering going.

[22:53] <perigrin> the deadline is in March

[22:53] <colomon> actually, when's the conference, for that matter?  :)

[22:53] <perigrin> but we've been doing early acceptances

[22:54] <perigrin> the conference is June 27-29th

[22:54] <pmichaud> I've been considering skipping conferences this year

[22:54] <colomon> the thing is, there's not a lot of point for me to talk if people like pmichaud are around.

[22:54] <perigrin> I would consider that except I'm the freeking organizer

[22:54] <perigrin> they expect me to attend.

[22:54] <perigrin> colomon: um

[22:54] *** shi joined
[22:54] <perigrin> Perl6 has the same problems Perl5 has except larger

[22:55] <perigrin> not enough people talking about the cool stuff that their language allows them to do

[22:55] <pmichaud> colomon: it's *always* worth hearing from people other than the "principals"

[22:55] <perigrin> exactly

[22:55] <pmichaud> colomon: I think a talk describing what you've done with the various math components of Rakudo would be.... very well received

[22:55] <pmichaud> and much more impressive than a talk from me on a topic like that

[22:55] <perigrin> people *expect* pmichaud and jnthn and TimToady to be excited about Perl6 ... they tune it out after a while

[22:56] <perigrin> having new people show new excitment is important

[22:56] <pmichaud> I know that for the places I've been, it's the talks from people other than the principals that get the most buzz

[22:57] <colomon> I've also never given any sort of talk like this before.  :)  Though I am tentatively scheduled to give a talk at Penguicon in late April.

[22:57] <perigrin> colomon: honestly YAPC or a Perl workshop is the easiest place to give your first talk

[22:57] <pmichaud> it's definitely worth making this a first talk then.  yapc audiences tend to be very friendly

[22:58] <perigrin> we have a *far* lower bar than OSCON or some such :)

[22:58] <pmichaud> exactly as perigrin++ says

[22:58] <perigrin> I gave my first talk at a YAPC

[22:58] <perigrin> and I sucked horribly

[22:58] <pmichaud> imo, the friendly nature of yapc audiences makes for more interesting and useful talks

[22:58] <shortcircuit> sorear: Sorry about that; was afk for a few hours.

[22:58] <perigrin> we have a really good crop of talks submitted so far

[22:59] <perigrin> but I've been pushing non-technical talks in the perl5 world

[23:00] <perigrin> colomon: also if you submit *now* 

[23:00] <perigrin> you get a free slurpee

[23:00] <perigrin> cause I promised free slurpees to the next 5 submissions

[23:00] <perigrin> and I've gotten 3 so far

[23:02] <colomon> My wife thinks I should give one too.  (Conversation here now.)  Though it may be she just wants to go to North Carolina.  :)

[23:02] <shortcircuit> sorear: I don't recall where I found that Niecza was written in Perl 5, but I found it in what seemed a cannon source. I'll see if I can find it again; it sounds like that'll need to be corrected.

[23:02] <perigrin> colomon: http://www.yapc2011.us/yn2011 # the picture doesn't lie :)

[23:03] <colomon> "Oh, that's pretty!"

[23:03] <perigrin> that's about 1hr north of Ashville looking back towards it

[23:03] <perigrin> but it's representative of the mountains

[23:04] <colomon> I don't suppose you can guarantee John Doyle will be in town?  ;)

[23:04] <perigrin> uh ... I'd have to know who he is first I suspect

[23:04] <colomon> http://www.johndoylemusic.com/

[23:06] <perigrin> no sadly I can't.

[23:06] <colomon> Didn't figure you could.  I'm pretty sure he lives in Ashville these days, when he's not out touring.

[23:06] <shortcircuit> sorear: Ah. I think it was this bit: http://www.nntp.perl.org/group/perl.perl6.announce/2010/11/msg641.html (followed by your noting https://github.com/sorear/niecza/blob/master/docs/announce.initial )

[23:07] <pmurias> shortcircuit: niecza wa rewritten in Perl 6

[23:07] <shortcircuit> pmurias: So I gather.

[23:07] <perigrin> colomon: I wouldn't be surprised. The area is *packed* with traditional and folk music.

[23:08] <colomon> It's getting harder and harder to say no.... :)

[23:08] <perigrin> which considering the scotch / irish settled the area isn't surprising

[23:15] <colomon> Okay, I'm tentatively planning on going and giving a talk, but I owe Ambercon a slew of game submissions first, so I probably will have have to forego the slurpie.

[23:15] *** hudnix left
[23:15] *** shi left
[23:17] *** hudnix joined
[23:17] *** kst left
[23:22] *** kst joined
[23:30] *** hudnix left
[23:32] *** MayDaniel joined
[23:33] <sorear> pmurias: do you want to write anything about -Bclisp for the v2 mailing?

[23:35] <shortcircuit> pmurias, sorear: Would either of you like to go in, edit and improve http://rosettacode.org/wiki/Niecza ?

[23:35] <shortcircuit> Rosetta Code isn't Wikipedia; I _like_ having people involved who know what they're talking about.

[23:36] <sorear> shortcircuit: you misread a line of mine.  I said the code has workarounds for bugs NOT in Rakudo

[23:37] <sorear> i.e. the code will be simpler if Rakudo is used

[23:37] <shortcircuit> sorear: Yeah, I saw your correction, and corrected the relevant page on RC.

[23:39] <sorear> shortcircuit: I'm not really skilled at this "writing for an unknown audience" thing

[23:39] *** icwiener joined
[23:41] <shortcircuit> sorear: Understood. RC has a built-in audience of programmers, so a perspective as assumed for your original Niecza announcement is reasonable.

[23:43] <shortcircuit> Hm. If you have any concerns about the content of the page, and aren't comfortable making the edit,  mention it here, in #rosettacode, or on the page's talk page. Something will likely come of it.

[23:44] * shortcircuit needs to give thought to the perspective of facing the 'unknown audience'; that might be a major existing non-technical barrier to contributing to the wiki in general.

[23:45] <pmurias> sorear: it's not really at the stage when it's ready to be annonuced

[23:49] *** dju joined
[23:57] *** pmurias left
[23:58] * diakopter seems to arrive at #perl6 often slightly after pmurias' departure

[23:59] *** dorlamm joined
[23:59] <masak> lol; blogged. http://strangelyconsistent.org/blog/the-thing-with-nim

[23:59] *** MayDaniel left
