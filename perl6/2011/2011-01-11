[00:02] *** jaldhar joined
[00:06] *** HarryS joined
[00:11] *** ashleydev joined
[00:15] *** pmurias left
[00:16] *** plobsing joined
[00:29] *** yarp left
[00:30] *** jaldhar left
[00:37] *** cafesofie left
[00:40] *** cafesofie joined
[00:47] *** rgrau left
[00:55] *** ashleydev left
[01:00] *** ashleydev joined
[01:03] *** cdarroch left
[01:05] *** QinGW joined
[01:18] *** ashleydev left
[01:27] *** cafesofie left
[01:30] <kthakore> /w/win 3

[01:30] *** cafesofie joined
[01:31] *** cibs left
[01:32] *** cibs joined
[01:39] *** woosley joined
[01:45] <snarkyboojum> phenny, tell tadzik - what is neutro designed to do if you want to install a module who's name clashes with one of the neutro commands e.g. 'list' or 'install' etc?

[01:45] <phenny> snarkyboojum: I'll pass that on when tadzik is around.

[01:47] *** Su-Shee left
[01:51] *** envi joined
[01:55] *** Su-Shee joined
[01:57] *** arlinius joined
[02:00] *** noganex_ joined
[02:02] *** gbacon joined
[02:04] *** noganex left
[02:07] *** woosley left
[02:21] <shortcircuit> TimToady: Broadly speaking, I tend to see two camps. One thinks Perl 6 is supposed to be a drop-in replacement of Perl 5, and figures that since their distro didn't come with Perl 6 at /usr/bin/perl, then Perl 6 isn't ready. The other might be aware that they're two different languages, but (as you noted) sees it as an all-or-nothing status.

[02:22] <shortcircuit> If you could recruit active maintainers for (at a guess) Debian, Fedora and Red Hat, so that up-to-date Perl 6 had in-band distribution, I bet you'd see use expand more quickly.

[02:24] <shortcircuit> Heck, even an alternate repos would be good; use distro packaging tools tends to be more convenient than manual grab/build/install.

[02:24] <shortcircuit> (And, no, I'm not volunteering anything more than the idea...)

[02:29] <flussence> I keep telling myself I'll go and make a perl6 gentoo repo, but I can never motivate myself enough to start it :(

[02:29] <shortcircuit> flussence: Do you need more people to tell you? :)

[02:30] <flussence> I see a growing number of people in here asking for one... at least 3 or 4

[02:30] <shortcircuit> As for binary distributions, I think Novell runs some kind of auto-builder-and-packager.

[02:44] *** molaf_ joined
[02:45] *** am0c^ joined
[02:46] *** tylerni7 left
[02:48] *** molaf left
[03:00] *** tylerni7 joined
[03:05] *** cafesofie left
[03:09] *** nakashiman joined
[03:12] *** ggoebel joined
[03:23] *** awwaiid left
[03:24] *** Eevee joined
[03:28] *** __sri joined
[03:30] *** cafesofie joined
[03:31] *** stepnem_ joined
[03:34] *** colomon_ joined
[03:34] *** Trashlord left
[03:34] *** takadonet left
[03:34] *** noganex_ left
[03:34] *** stepnem_ is now known as stepnem

[03:34] *** colomon_ is now known as colomon

[03:35] *** typepeter joined
[03:37] *** noganex_ joined
[03:37] *** dsp_ joined
[03:37] *** ruoso joined
[03:37] *** itz joined
[03:37] *** mdxi joined
[03:37] *** vert2_ joined
[03:37] *** kcwu joined
[03:37] *** jpr5 joined
[03:37] *** edenc joined
[03:37] *** BinGOs joined
[03:37] *** krakan_ joined
[03:37] *** perigrin joined
[03:37] *** nothingmuch joined
[03:37] *** snarkyboojum joined
[03:37] *** huf joined
[03:37] *** nrr joined
[03:37] *** jnthn joined
[03:37] *** kthakore joined
[03:37] *** peters_mops joined
[03:37] *** revdiablo joined
[03:37] *** typepeter_ joined
[03:39] *** typepeter left
[03:42] *** _ilbot joined
[03:42] *** IllvilJa joined
[03:42] *** Bucciarati joined
[03:42] *** Trashlord joined
[03:43] <colomon> rakudo: (1...10).first(* > 20).say

[03:43] <p6eval> rakudo ca62f2:  ( no output )

[03:43] <colomon> rakudo: (1...10).first(* > 20).WHAT.say

[03:43] <p6eval> rakudo ca62f2: OUTPUT«Failure()␤»

[03:43] <colomon> rakudo: say (1...10).first(* > 20) // die "Unable to find"

[03:43] <p6eval> rakudo ca62f2: OUTPUT«Unable to find␤  in main program body at line 22:/tmp/jF5PbVw_Nw␤»

[03:43] <colomon> rakudo: say (1...10).first(* > 5) // die "Unable to find"

[03:44] <p6eval> rakudo ca62f2: OUTPUT«6␤»

[03:48] *** jevin_ left
[03:52] *** buubot joined
[03:54] *** ashleydev joined
[03:55] *** VXZ left
[03:57] *** satyavvd joined
[03:59] *** agentzh joined
[04:01] *** jaldhar joined
[04:09] *** jevin joined
[04:12] *** typepeter_ left
[04:17] *** orafu left
[04:18] *** orafu joined
[04:18] *** ashleydev left
[04:23] *** Su-Shee_ joined
[04:25] *** GinoMan left
[04:26] *** Su-Shee left
[04:38] *** kanishka left
[04:38] *** kanishka1 joined
[04:44] *** woosley joined
[05:00] *** icwiener left
[05:06] *** ashleydev joined
[05:10] *** ashleydev left
[05:16] <cotto> jnthn, ping

[05:17] <cotto> jnthn, unping

[05:23] *** takadonet joined
[05:43] *** justatheory left
[05:44] *** justatheory joined
[06:00] <[Coke]> rakudo: 0.025.Rat.perl.say

[06:00] <p6eval> rakudo ca62f2: OUTPUT«1/40␤»

[06:12] <dalek> niecza: 04bce2a | sorear++ | / (7 files):

[06:12] <dalek> niecza: [v6] Translate regex optimizer

[06:12] <dalek> niecza: review: https://github.com/sorear/niecza/commit/04bce2af8e

[06:14] *** crythias left
[06:15] *** crythias joined
[06:17] *** gbacon left
[06:19] <TimToady> rakudo: 0.025.perl.say

[06:19] <p6eval> rakudo ca62f2: OUTPUT«1/40␤»

[06:19] <TimToady> the .Rat is redundant

[06:26] <dukeleto> TimToady: tell that to the Mouse

[06:28] *** cjk101010 joined
[06:37] *** _twitch joined
[06:45] *** kaare_ joined
[06:49] *** Vlavv joined
[06:56] *** wtw joined
[06:57] *** mberends left
[07:06] *** mberends joined
[07:20] *** VXZ joined
[07:27] *** GinoMan joined
[07:31] *** mberends left
[07:38] *** eyeisel joined
[07:38] *** eyeisel left
[07:38] *** eyeisel joined
[07:38] *** eyeisel left
[07:40] *** arlinius left
[07:54] *** justatheory left
[07:59] *** kanishka1 left
[08:01] *** daxim joined
[08:07] *** MayDaniel joined
[08:08] *** satyavvd left
[08:13] *** Su-Shee_ is now known as Su-Shee

[08:14] *** noganex_ is now known as noganex

[08:30] *** HarryS left
[08:30] *** coldhead left
[08:32] *** snearch joined
[08:33] *** MayDaniel left
[08:34] *** coldhead joined
[09:04] *** _twitch left
[09:23] <sorear> perl6: say "hi"

[09:24] <p6eval> pugs, rakudo ca62f2, niecza v1-123-g04bce2a: OUTPUT«hi␤»

[09:29] *** dakkar joined
[09:31] *** kensanata joined
[09:36] *** masak joined
[09:36] <masak> morning, zebras.

[09:36] <moritz_> morning, zebra!

[09:37] *** hugme joined
[09:37] *** ChanServ sets mode: +v hugme

[09:37] * masak really liked http://www.shadowcat.co.uk/blog/matt-s-trout/sherlock-holmes/

[09:37] <masak> it had the taste of HP.MoR

[09:37] <sorear> hello masak

[09:38] <mathw> pah you set off my highlighter again

[09:38] <mathw> Saluton, masak

[09:39] <moritz_> masak: then I have to read it later :-)

[09:39] *** HarryS joined
[09:40] <masak> bonan matenon, mathw. you need a special case for your highlighter, then. :)

[09:41] <mathw> yes I wonder if I can teach it to ignore mst urls

[09:41] * sorear is considering dropping his highlight for niecza

[09:42] <sorear> so many people use perl6: now

[09:42] <masak> "There is no shame in failing to convince a sizable herd of the twitterati to recover from its regularly scheduled six-month swoon of the language du jour or to consider that the hundred line lump of spaghetti Perl 4 they wrote back in 1999 has little to do with good Perl as written then, let alone today." -- chromatic++

[09:42] <masak> :)

[09:42] <masak> ties into what we were talking about yesterday.

[09:44] <masak> I kept thinking about it, and concluded that I do the Twitter-Perl6 thing mostly to please myself. I don't imagine it'll ever have a huge effect, but it puts me in contact with people who have at least shown a moderate interest. and I like that.

[09:47] <masak> and that's why I think alester's message mostly depressed me -- not because I think I'm doing anything *useful* by trying to reform trolls, but because I like it and I feel it sometimes pays off in unexpected ways.

[09:48] <mathw> Do what you like with that, I think

[09:48] <mathw> You're not going around screaming at people for no reason

[09:48] <mathw> So carry on :)

[09:48] <mathw> And sometimes it does work nicely

[09:49] *** tzhs joined
[09:50] <masak> talking to Twitterpeople is a bit like Dan and Laurie taking the Owl in the middle of the night and saving a bunch of people in a burning building. doesn't have anything to do with the bad guys, doesn't move the movie forward, but it feels pretty nice.

[09:52] *** agentzh left
[09:53] <mathw> actually it was hugely important for their character development, ultimately leading them to do what they did later :P

[09:53] <mathw> but it's better in the comic

[09:54] <mathw> So the question is, are you getting good character development out of Twitter engagement :D

[09:55] <masak> I think so. the meetings don't lead to long-lasting friendships, but sometimes to people saying "huh! didn't know that. cool!"

[09:55] <masak> (and yes, the comic is better. I figured more people had seen the movie, though.)

[09:57] *** Trashlord left
[09:58] *** yahooooo left
[09:59] *** Trashlord joined
[10:00] *** QinGW left
[10:01] <dalek> niecza: 5037384 | sorear++ | / (3 files):

[10:01] <dalek> niecza: [v6] Add dotnet backend

[10:01] <dalek> niecza: review: https://github.com/sorear/niecza/commit/50373847b3

[10:01] <sorear> doesn't quite pass testsuite yet though.

[10:06] <mathw> masak: I think it's part of what makes Twitter great, the occasional random person who comments helpfully on one's exclamations

[10:06] <mathw> what makes it less great is a whole load of people who put @maw in their messages but have no connection with me whatsoever

[10:07] <mathw> often on the end of a retweet chain where it's a truncated username

[10:07] <mathw> but recently more people deliberately writing @MAW as if it's a location or something people are expected to recognise

[10:07] <mathw> probably not realising that there might be a Twitter user...

[10:07] <masak> mathw: my nick doesn't have that problem. maybe you should change your nick.

[10:08] <mathw> I can't, all the ones I'd want are taken now

[10:08] <mathw> I wanted to change it to mathw but someone else has that

[10:08] <mathw> various other variants also seem to be taken

[10:08] <mathw> so I decided to just stick with it

[10:08] <mathw> it's only one or two a day usually, I just block them

[10:10] <jnthn> morning, #perl6

[10:11] <mathw> oh hai jnthn

[10:11] <masak> lolitsjnthn!

[10:12] *** ded joined
[10:13] *** ded is now known as Fuad

[10:13] <Fuad> hi all

[10:13] <masak> Fuad! \o/

[10:13] <Fuad> masak !!

[10:14] <Fuad> How are you bro?

[10:14] <masak> :) fine, thanks.

[10:14] <masak> and you... bro?

[10:15] <Fuad> Im great thanks. Glad to mee you bro;)

[10:15] <mathw> Hello

[10:16] <sorear> our friend dd070 is still trolling #moose

[10:20] <snarkyboojum> yay.. niecza builds on HEAD :D thanks sorear++

[10:21] <dalek> niecza: a8e90fd | sorear++ | v6/ (3 files):

[10:21] <dalek> niecza: [v6] Autoconfigure paths from ApplicationBase

[10:21] <dalek> niecza: review: https://github.com/sorear/niecza/commit/a8e90fdb12

[10:22] <sorear> niecza on perl 6 is now fully functional as a compiler... except for the bugs and lack of a build system

[10:22] <masak> cool.

[10:37] <snarkyboojum> sorear: what was the milestone tipping niecza over to a "fully functional" compiler?

[10:39] <masak> snarkyboojum: sorear is talking about 'niecza on perl 6' specifically. he's rewriting parts of niecza in Perl 6.

[10:40] <snarkyboojum> masak: cool - picked up on that over the last few days.. still have my question tho :D

[10:42] <snarkyboojum> guesses it has something to do with the "Add dotnet backend" commit :)

[10:43] <moritz_> previously niecza would compile to C#

[10:43] <moritz_> now it uses a code generation API

[10:43] <moritz_> (iiuc)

[10:45] *** woosley1 joined
[10:45] <sorear> yes, but that's not related

[10:45] <sorear> I was moving the code generation API hooks from the Prl5 to the Perl 6 with that commit

[10:46] <sorear> the milestone tipping was auto-configuration

[10:46] <moritz_> ok

[10:46] <sorear> it's now possible to run Niecza.exe from any current directory

[10:46] *** woosley left
[10:47] <mathw> \o/

[10:48] <sorear> std: q:to/FOO/;␤Hi␤

[10:48] <p6eval> std 625303c: OUTPUT«[31m===[0mSORRY![31m===[0m␤Couldn't find delimiter for heredoc␤ at /tmp/DpBTQTea2e line 2 (EOF):␤------> [32mHi[33m⏏[31m<EOL>[0m␤Parse failed␤FAILED 00:01 118m␤»

[10:48] * sorear out

[10:54] <masak> interesting to read how Google Chrome does releases: https://docs.google.com/present/view?id=dg63dpc6_4d7vkk6ch&pli=1

[10:55] <mathw> perhaps we should have auto-updating Rakudo :P

[10:55] * mathw can already hear the screams

[11:02] <colomon> auto-updating source code ought to be pretty easy to do....  ;)

[11:03] <moritz_> run('git pull')

[11:09] *** cafesofie left
[11:31] *** Fuad left
[11:33] *** gimix joined
[11:36] *** nakashiman left
[11:38] *** nakashiman joined
[11:43] *** TiMBuS joined
[12:03] <arnsholt> Is gather-take over something that is generated from gather-take still a problem?

[12:04] <flussence> ok 6 - nested gather works (two levels)

[12:04] <flussence> ok 7 - nested gather works (three levels)

[12:05] <flussence> works according to t/

[12:05] *** snearch left
[12:06] <arnsholt> Hmm. Then it's something else I've done wrong

[12:06] <arnsholt> Cheers!

[12:09] <masak> golf your code and your expectations. :)

[12:10] <arnsholt> Good quote!

[12:10] <arnsholt> I loled. I really did ^_^

[12:11] <arnsholt> This is another problem with coding for a competition. I can't give the code that blows up

[12:11] <arnsholt> I have to actually reduce the test-case

[12:11] <masak> that's a good thing.

[12:11] <arnsholt> Yeah, it usually means I find the problem on my own =)

[12:12] <masak> yes.

[12:12] <arnsholt> I think you mentioned something similar when you talked about November in Oslo

[12:12] <masak> yes.

[12:12] <masak> half of the time, the problem *goes away* or is reduced to an already reported bug.

[12:13] <masak> in the former case, I just vow to be better and move on. in the latter case, I usually rant a bit here on #perl6 about the bug not being fixed yet.

[12:16] <arnsholt> Sounds like a good plan

[12:16] <arnsholt> Incidentally, my problem turned out to be a forgotten | to flatten an arglist

[12:18] <masak> it's a good thing you have tests to catch such minor issues.

[12:19] <arnsholt> Whatever you say ;)

[12:19] <arnsholt> I'm still a bad TDD practicioner, unfortunately =)

[12:20] <arnsholt> I usually do manual testing until I'm fairly certain the API/protocols are more or less sane and usable

[12:22] <masak> no harm in that.

[12:22] <arnsholt> ATM I'm just trying to make the basic game logic (for p4) work without exploding all the time =)

[12:22] <masak> :)

[12:23] <arnsholt> Still haven't decided how it'll communicate with the UI part of the problem

[12:25] <colomon> :)

[12:25] <tadzik> o/

[12:25] <phenny> tadzik: 01:45Z <snarkyboojum> tell tadzik - what is neutro designed to do if you want to install a module who's name clashes with one of the neutro commands e.g. 'list' or 'install' etc?

[12:26] * colomon is currently overhauling his internal logic and tests for p4.

[12:26] <masak> "doctor, it hurts when I do this."

[12:26] <tadzik> snarkyboojum: it will show the list. Probably shouldn't though

[12:26] *** coldhead left
[12:26] <masak> tadzik: in the presence of a "list" module, how would one use the "list" subcommand?

[12:27] *** masak left
[12:30] <tadzik> phenny: one won't :) That's probably a misfeature atm

[12:31] <moritz_> tadzik talks to bots!

[12:34] *** tzhs left
[12:36] *** avuserow joined
[12:44] *** pmurias joined
[12:47] <takadonet> morning all

[12:48] <colomon> o/

[12:49] *** roen_ joined
[12:52] <dalek> niecza: 3318e17 | pmurias++ | niecza:

[12:52] <dalek> niecza: fix executable name in ./niecza

[12:52] <dalek> niecza: review: https://github.com/sorear/niecza/commit/3318e17660

[13:02] *** holzbit joined
[13:14] <tadzik> :<

[13:14] <tadzik> phenny: tell masak one won't :) That's probably a misfeature atm

[13:14] <phenny> tadzik: I'll pass that on when masak is around.

[13:15] <pmurias> snarkyboojum: i fixed the bug you found

[13:17] *** gbacon joined
[13:23] *** MayDaniel joined
[13:30] *** mberends joined
[13:32] <arnsholt> Time to figure out this protocol thing, I think

[13:34] *** MayDaniel left
[13:40] *** cosimo left
[13:45] *** roen_ left
[13:45] *** roen_ joined
[13:49] *** mberends left
[14:07] <arnsholt> Is there any reason a gather-take would modify my array?

[14:07] <arnsholt> Er, never mind

[14:07] <arnsholt> This is what I get for naming one of my subs take ^_^

[14:13] <arnsholt> I'm sure naming it pick instead won't get me into any trouble later on =D

[14:15] *** plobsing left
[14:16] <VXZ> I there some metaop or something in perl 6 to override the precedence of an operation?  Like a number enclosed in some weird unicode bracket characters next to the operator, to set the precedence level of that operation to the specified number.

[14:17] <flussence> it's probably doable by messing with the parser, but I'd just use ()s

[14:17] *** bbkr joined
[14:18] <moritz_> VXZ: our precedence levels aren't numbered, but relative to each other

[14:18] <moritz_> VXZ: ie you can insert precedence levels

[14:18] <moritz_> so numbers aren't very meaningful

[14:19] *** rhr joined
[14:20] *** cosimo joined
[14:20] <VXZ> moritz_: So, the metaop could just specify the precedence, relative to the current precedence?

[14:21] *** mkramer1 left
[14:21] <arnsholt> I don't really see the use-case here

[14:21] <arnsholt> Why are parens inadequate?

[14:23] <VXZ> I just think it might come in handy in places.  But you're probably right.

[14:23] *** mkramer joined
[14:23] <arnsholt> Unrelated, I <3 the fact that loop control works in the dynamic scope

[14:25] <flussence> rakudo: sub a {  last; ]

[14:25] <p6eval> rakudo ca62f2: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 22␤»

[14:25] <flussence> whoops

[14:25] <flussence> rakudo: sub a {  last; }; for 1..10 { *.say; a }

[14:25] <p6eval> rakudo ca62f2:  ( no output )

[14:25] <flussence> rakudo: sub a {  last; }; for 1..10 { $_.say; a }

[14:25] <p6eval> rakudo ca62f2: OUTPUT«1␤»

[14:27] <flussence> wow, I've found myself wanting to do that in p5 several times... had to make the code look ugly more often than not

[14:27] <arnsholt> Actually, I'm pretty sure that works in p5 as well

[14:27] <arnsholt> At least for some loops

[14:30] <VXZ> Yeah, in p5 a bare block is a loop that only runs once.  So 'last' works.

[14:30] <VXZ> Doesn't work that way on subs, do, or some other stuff, though.

[14:30] *** plobsing joined
[14:31] *** risou joined
[14:32] *** pmurias left
[14:37] *** mkramer left
[14:39] *** tzhs joined
[14:39] <moritz_> block can be left with leave() in Perl 6 (though NYI in rakudo, iirc)

[14:40] *** gbacon left
[14:45] *** sol1tude joined
[14:52] *** kaare_ left
[14:54] *** woosley1 left
[15:03] *** mkramer joined
[15:03] *** cosimo left
[15:05] *** Patterner left
[15:07] *** Psyche^ joined
[15:07] *** Psyche^ is now known as Patterner

[15:13] *** bacek left
[15:14] *** cjk101010 left
[15:18] *** wtw left
[15:19] *** MayDaniel joined
[15:24] *** sol1tude left
[15:26] *** bacek joined
[15:27] *** _twitch joined
[15:27] *** plobsing left
[15:27] *** kaare_ joined
[15:28] *** sol1tude joined
[15:35] *** mtk joined
[15:38] <takadonet> what is p6 version of http://perldoc.perl.org/functions/ord.html

[15:40] <moritz_> rakudo: say ord("A")

[15:40] <p6eval> rakudo ca62f2: OUTPUT«65␤»

[15:40] <moritz_> rakudo: say ords("Abc").perl

[15:40] <p6eval> rakudo ca62f2: OUTPUT«(65, 98, 99)␤»

[15:40] <takadonet> ....

[15:41] <moritz_> !!!

[15:41] <takadonet> sometime i should just try it before asking

[15:41] *** plobsing joined
[15:42] *** araujo left
[15:43] *** araujo joined
[15:46] *** Patterner left
[15:49] *** Psyche^ joined
[15:49] *** Psyche^ is now known as Patterner

[15:52] * moritz_ is amazed at how much you can do wrong in a single, one-page document

[15:52] * moritz_ tries to submit an abstract to a scientific conference

[15:53] <takadonet> which conference?

[15:53] <PerlJam> spelling, grammar, punctuation, spacing, font choice, font size, ... there are lots of knobs to twiddle.  :)

[15:54] <moritz_> takadonet: CLEO Europe

[15:54] <moritz_> PerlJam: and then plots...

[15:54] <moritz_> don't forget content, title and affilitations

[15:57] *** spq1 joined
[15:58] * flussence is sitting at $dayjob wishing p5 had a ql() operator (i.e. $str.indent(*).lines)

[15:59] *** justatheory joined
[15:59] <moritz_> std: ql/ab/

[15:59] <p6eval> std 625303c: OUTPUT«[31m===[0mSORRY![31m===[0m␤Bogus term at /tmp/fLO82RuQEt line 1 (EOF):␤------> [32mql/ab/[33m⏏[31m<EOL>[0m␤Undeclared routines:␤    'ab' used at line 1␤    'ql' used at line 1␤Parse failed␤FAILED 00:01 120m␤»

[16:01] <flussence> (I'd go write that, but right now my .indent(*) test fails with bizarre output)

[16:02] *** jaffa4 joined
[16:02] <jaffa4> hi

[16:02] <jaffa4> I have problem with trying out the latest perl

[16:02] <moritz_> which perl?

[16:03] <PerlJam> jaffa4: If you mean Perl 5.x, then you probably want #perl or #perlhelp or something

[16:03] *** araujo left
[16:03] <jaffa4> no perl6

[16:03] <moritz_> which perl6?

[16:03] <jaffa4> I get Could not load oplib `perl6_ops'

[16:03] *** araujo joined
[16:03] <moritz_> which perl6?

[16:04] <moritz_> rakudo?

[16:04] <jaffa4> yes

[16:04] <jaffa4> december version

[16:04] <moritz_> did you install it, as the README says?

[16:04] <jaffa4> no I used parrot-32 download site

[16:05] <jaffa4> to download compiled parrot.exe and perl6.exe

[16:05] <jaffa4> and merged them in the same directory

[16:05] <jaffa4> Also, I tried to install it using msys using the source distribution but I did not get far

[16:07] <moritz_> sorry, I don't know anything about the windows binaries

[16:07] <PerlJam> jaffa4: what is "parrot-32 download site"?

[16:07] <moritz_> you'd have to contact the one who provided the binaries

[16:07] <jaffa4> you must know about perl6_ops

[16:08] <flussence> sounds like a mis-installed parrot

[16:08] <PerlJam> or  the provided perl6 doesn't know where the installed parrot lives

[16:08] <PerlJam> (i.e. it may need to live in a specific dir, but it was placed in another dir)

[16:09] <jnthn> jaffa4: You need to install those in the default directory.

[16:09] <jnthn> Dunno why the installer offers the option to do different.

[16:10] <jnthn> They aren't relocatable.

[16:10] <jaffa4> what is the default directory?

[16:11] *** nakashiman left
[16:11] <jnthn> jaffa4: The one the installer wants to put it in

[16:11] <jnthn> (I don't know off hand what it is.)

[16:11] <jaffa4> ok

[16:13] <jaffa4> you are right

[16:13] <jaffa4> the reality confirms you.

[16:14] <PerlJam> heh

[16:15] * colomon is somewhat mystified at how moritz_ can have p4 solution that works on everything but 10...

[16:16] *** gbacon joined
[16:18] *** jlaire joined
[16:21] *** GinoMan left
[16:21] <jaffa4> Has anyone tried to convert perl6 into exe?

[16:24] *** GinoMan joined
[16:26] *** tzhs left
[16:27] <jaffa4> I do not understand why there is no one installer for it

[16:27] <jaffa4> parrot+rakudo

[16:35] <takadonet> jaffa4: for which type of system? windows? linux?

[16:35] <jaffa4> windows.

[16:36] <takadonet> that be a jnthn question then...

[16:36] <jaffa4> Is it true that pbc to exe does not convert pbc , just it embeds pbc in an exe file?

[16:36] <PerlJam> jaffa4: something like that

[16:37] <jaffa4> Does it convert pbc into something else?

[16:37] <PerlJam> no

[16:38] <PerlJam> Are you looking to write stand-alone Perl 6 apps ?

[16:38] <jnthn> fwiw, .exe files produced by the .Net CLR do *exactly* the same thing. :)

[16:39] <jaffa4> maybe

[16:39] <jnthn> jaffa4: There's probably no single installer because nobody has the time to produce/maintain it yet.

[16:40] <jnthn> jaffa4: No not maybe I'm telling you that's how it works. :)

[16:40] <jnthn> oh, sorry, maybe that was to PerlJam :)

[16:40] <jaffa4> for now, I could give you an installer

[16:40] <jaffa4> it does not take long to make one...

[16:40] <jnthn> jaffa4: Then please, go ahead. It'd be much appreciated. :)

[16:40] <PerlJam> jaffa4: that would be great!

[16:41] <jaffa4> I know innosetup

[16:41] <tadzik> seen x3nu

[16:41] <aloha> x3nu was last seen in #perl6 61 days 18 hours ago joining the channel.

[16:41] <jaffa4> if that is ok

[16:41] <jnthn> jaffa4: Works for me.

[16:41] <tadzik> iirc he was writing and using the window installers

[16:42] <jaffa4> I use one only for a while, innosetup

[16:42] <jnthn> jaffa4: I did one for the initial Rakudo * but it wasn't scripted or anything like that...built it using Visual Studio. But an inno one is probably easier to set up and maybe even add a Makefile target for.

[16:43] <jnthn> inno works fine for me, anyway :)

[16:43] * jnthn goes to the shop, bbiab

[16:46] *** estrabd joined
[16:54] <jaffa4> ok

[16:54] <jaffa4> I have the installer

[16:54] <jaffa4> Who wants to download it?

[17:00] *** ashleydev joined
[17:05] *** kanishka joined
[17:09] <tadzik> jaffa4: just post the url here or on the perl6-users mailing list

[17:09] <jaffa4> Where can I upload it ?

[17:09] <tadzik> if someone can verify it we can maybe put it into the rakudo download page

[17:10] <tadzik> hmm, do you have a github account?

[17:10] <jaffa4> yes, I think so

[17:12] <tadzik> you can put it there then

[17:14] <shortcircuit> flussence: Simple question...If you're motivated to create the Gentoo ebuild for Rakudo, will you be motivated to maintain it?

[17:16] <takadonet> shortcircuit: how much work is involved to maintain it?

[17:16] <shortcircuit> I really don't know. Never tried myself.

[17:16] <tadzik> that'd also require caring about Parrot

[17:16] *** rgrau joined
[17:16] <shortcircuit> At a minimum, it'd be obvious things like marshaling bug reports upstream.

[17:17] *** Vlavv left
[17:17] <shortcircuit> I read flameeyes' blog, where I hear stories about other headaches that come from maintaining gentoo ebuilds, but most of that seems to stem from uncooperative upstreams.

[17:19] <takadonet> wonder how hard to be added to ubuntu

[17:19] *** envi left
[17:20] <daxim> what's the url for q{Patrick's "Cool Perl 6"} talk mentioned in <https://github.com/schwern/perl5i/issues#issue/144>?

[17:20] <tadzik> my PM pal has an overlay with more-less-recent rakudos in Ubuntu

[17:23] <PerlJam> daxim: http://www.pmichaud.com/2010/pres/yapcna-perl6/slides/start.html

[17:23] <daxim> thanks, PerlJam++

[17:25] <PerlJam> daxim: I assume you're going to update the issue with that URL so that I don't have to?  :)

[17:25] <daxim> yes, I'll do it

[17:30] *** daxim left
[17:30] *** Vlavv_ joined
[17:32] *** holzbit left
[17:41] *** REPLeffect joined
[17:42] <moritz_> colomon: you misunderstood me. 10 is the first number where I know my solution not to work

[17:42] <moritz_> colomon: it's not necesarily the only one

[17:45] *** kanishka left
[17:46] *** dakkar left
[17:47] *** gottreu joined
[17:47] <colomon> moritz_: oh.

[17:50] *** kensanata left
[17:52] <jaffa4> daxim

[17:53] <jaffa4> not as easy as it sounds

[18:00] <tadzik> is it possible for a subroutine to generate a Proper USAGE sub?

[18:01] <tadzik> I'm thinking about something like pod2usage

[18:01] <moritz_> hm

[18:01] <moritz_> it can export one

[18:01] <moritz_> I guess

[18:05] <PerlJam> Doesn't MAIN give usage information?

[18:06] <tadzik> nah, but when you declare MAIN, USAGE gets generated

[18:06] <tadzik> but if you want your own USAGE, you can write your own

[18:07] <PerlJam> ah.

[18:11] *** plobsing left
[18:14] *** GinoMan left
[18:18] *** GinoMan joined
[18:19] <tadzik> hrm, is MAIN known to get lost in case of a big list of args?

[18:19] <tadzik> oh, nvm, my bad

[18:20] <jnthn> #phasers is int...40 mins?

[18:22] <moritz_> jnthn: aye

[18:23] *** risou left
[18:23] <colomon> thanks for the reminder

[18:24] *** MayDaniel left
[18:26] *** risou joined
[18:26] *** roen_ left
[18:33] <tadzik> can't one call USAGE() from MAIN()?

[18:35] *** sol1tude left
[18:44] <sorear> good * #perl6

[18:44] <diakopter> *

[18:47] *** plobsing joined
[18:58] *** kanishka joined
[19:06] *** ashleydev left
[19:08] *** cjk101010 joined
[19:09] *** masak joined
[19:09] <masak> ahoy, #perl6!

[19:09] <phenny> masak: 13:14Z <tadzik> tell masak one won't :) That's probably a misfeature atm

[19:09] <jnthn> masak: #phasers! ;)

[19:09] <masak> ooh!

[19:09] <jnthn> ;)

[19:10] <jaffa4> ok

[19:10] <jaffa4> here it is 

[19:10] <jaffa4> https://github.com/jaffa4/Parrot-and-Perl-6-Win32-Binaries-in-One-Package/blob/master/Parrot-2.11.0-Rakudo-36.exe

[19:10] <jaffa4> get it if you can

[19:11] <tadzik> jaffa4++

[19:11] *** kjeldahl joined
[19:12] <masak> jaffa4: hi! long time no see! :)

[19:13] <dalek> rakudo: ea8c88a | moritz++ | docs/ChangeLog:

[19:13] <dalek> rakudo: update ChangeLog

[19:13] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/ea8c88a0e3

[19:13] <tadzik> masak: stupid options handling in neutro fixed

[19:13] <jaffa4> hi masak!

[19:14] <diakopter> jaffa4: hi from me also

[19:21] *** kanishka left
[19:26] *** risou left
[19:32] *** Chillance joined
[19:32] *** cjk101010 left
[19:34] *** mtk left
[19:38] *** ashleydev joined
[19:38] *** mtk joined
[19:39] *** rindolf joined
[19:39] <rindolf> Hi all.

[19:40] <tadzik> hi

[19:41] <takadonet> rindolf: yo

[19:42] <rindolf> What's up?

[19:42] <moritz_> many servers are up

[19:42] <tadzik> the sky

[19:43] <tadzik> HA! I've been waiting weeks to have an opportunity to say that :)

[19:43] * masak is up

[19:43] <jnthn> ...tmi. :P

[19:44] <mkramer> hey - does anyone remember where the cumulative differ lives?

[19:44] <mkramer> oops, wrong channel

[19:50] *** shi joined
[19:50] <flussence> shortcircuit: hm, I dunno. It's usually very little effort to maintain once it's been written though.

[19:52] <sorear> my $foo = "a\n  b";

[19:52] <sorear> say qq:to/bar/ ;

[19:52] <sorear>   $foo

[19:52] <sorear> bar

[19:52] <sorear> er

[19:52] <sorear>   bar

[19:52] <sorear> what does this print?

[19:53] <PerlJam> you mean, what *should* it print?

[19:53] <masak> sorear: "a\n  b"?

[19:53] <masak> er, "a\n  b\n"

[19:53] <PerlJam> sorear: "a\n  b\n"  I'd think

[19:53] <sorear> PerlJam: well, yes, as nobody handles trimming yet

[19:53] <sorear> except STD-on-viv, and that doesn't really count

[20:02] *** doddo is now known as hasspetter

[20:02] *** hasspetter is now known as doddo

[20:03] *** mtk left
[20:04] <flussence> I should mention that PHP's heredocs discard the trailing \n, which in my experience is missing the point of heredocs.

[20:04] <flussence> it's easier to trim an unwanted \n (which is pretty rare) than concatenate one on the end.

[20:06] <dalek> niecza: 4afcf98 | sorear++ | v6/ (2 files):

[20:06] <dalek> niecza: [v6] Fix heredoc parsing

[20:06] <dalek> niecza: review: https://github.com/sorear/niecza/commit/4afcf9800f

[20:08] *** masak left
[20:12] *** WonTu joined
[20:12] *** WonTu left
[20:16] *** _twitch left
[20:19] *** mtk joined
[20:20] *** Exodist left
[20:22] *** exodist joined
[20:25] *** molaf_ left
[20:25] *** masak joined
[20:30] *** hercynium joined
[20:39] *** dju_ joined
[20:39] *** jlaire left
[20:39] *** araujo left
[20:39] *** spq1 left
[20:39] *** bacek left
[20:39] *** bbkr left
[20:39] *** pothos left
[20:39] *** Chillance left
[20:40] *** Chillance joined
[20:40] *** eternaleye joined
[20:40] *** pothos joined
[20:42] *** jlaire joined
[20:42] *** araujo joined
[20:42] *** spq1 joined
[20:42] *** bacek joined
[20:42] *** bbkr joined
[20:42] *** flatwhatson_ joined
[20:42] *** s1n joined
[20:42] *** sftp joined
[20:42] *** lamstyle joined
[20:42] *** kent\n joined
[20:42] *** rbuels joined
[20:42] *** simcop2387 joined
[20:42] *** Grimnir_ joined
[20:42] *** Raynes joined
[20:42] *** Woody4286 joined
[20:42] *** rblackwe joined
[20:42] *** gabiruh joined
[20:42] *** breinbaas joined
[20:42] *** nsh- joined
[20:42] *** krunen_ joined
[20:45] *** ashleydev left
[20:58] *** yahooooo joined
[21:03] *** plobsing left
[21:06] *** ashleydev joined
[21:06] *** c9s joined
[21:07] *** mtk left
[21:08] *** [hercynium] joined
[21:08] <masak> rakudo: sub y2i($adjective) { $adjective.substr($adjective.chars - 1) eq "y" ?? $adjective.substr(0, $adjective.chars - 1) ~ "i" !! $adjective }; sub compare($adjective) { say ", ".join: $adjective, $adjective.&y2i ~ "er", $adjective.&y2i ~ "est" }; say compare("funny")

[21:08] <p6eval> rakudo ea8c88: OUTPUT«No applicable candidates found to dispatch to for 'join'. Available candidates are:␤:(Mu : Any $separator = { ... };; *%_)␤␤  in 'compare' at line 22:/tmp/13m9KS9KqS␤  in main program body at line 22:/tmp/13m9KS9KqS␤»

[21:09] <masak> ouch. Python-think. :)

[21:09] <masak> rakudo: sub y2i($adjective) { $adjective.substr($adjective.chars - 1) eq "y" ?? $adjective.substr(0, $adjective.chars - 1) ~ "i" !! $adjective }; sub compare($adjective) { say join(", ", $adjective, $adjective.&y2i ~ "er", $adjective.&y2i ~ "est") }; say compare("funny")

[21:09] <p6eval> rakudo ea8c88: OUTPUT«funny, funnier, funniest␤Bool::True␤»

[21:10] <masak> rakudo: sub y2i($adjective) { $adjective.substr($adjective.chars - 1) eq "y" ?? $adjective.substr(0, $adjective.chars - 1) ~ "i" !! $adjective }; sub compare($adjective) { join(", ", $adjective, $adjective.&y2i ~ "er", $adjective.&y2i ~ "est") }; say compare("funny")

[21:10] <p6eval> rakudo ea8c88: OUTPUT«funny, funnier, funniest␤»

[21:10] <masak> \o/

[21:10] *** hercynium left
[21:11] <tadzik> oh wow

[21:11] *** hercynium joined
[21:11] *** hercynium left
[21:11] *** hercynium joined
[21:12] <masak> I'm sure it can be written nicelier.

[21:12] *** [hercynium] left
[21:13] *** mtk joined
[21:18] <masak> rakudo: sub y2i($adjective is copy) { s/y$/i/ given $adjective }; sub compare($adjective) { join(", ", $adjective, $adjective.&y2i ~ "er", $adjective.&y2i ~ "est") }; say compare("funny")

[21:18] <p6eval> rakudo ea8c88: OUTPUT«funny, funnier, funniest␤»

[21:18] <masak> much better :)

[21:19] *** MayDaniel joined
[21:19] <masak> rakudo: sub y2i($adjective is copy) { s/y$/i/ given $adjective }; sub compare($adjective) { [$_, .&y2i ~ "er", .&y2i ~ "est"].fmt("%s", ", ") given $adjective }; say compare("funny")

[21:19] <p6eval> rakudo ea8c88: OUTPUT«funny, funnier, funniest␤»

[21:19] <tadzik> s/y$/i/ given $adjective – nice one

[21:20] <jnthn> Now write me one for Russian. :P

[21:20] <tadzik> but why not just $adjective ~~ s/y$/i/?

[21:20] <masak> rakudo: sub y2i($adjective is copy) { $adjective ~~ s/y$/i/ }; sub compare($adjective) { join(", ", $adjective, $adjective.&y2i ~ "er", $adjective.&y2i ~ "est") }; say compare("funny")

[21:20] <p6eval> rakudo ea8c88: OUTPUT«funny, Bool::Trueer, Bool::Trueest␤»

[21:20] <masak> o.O

[21:20] <jnthn> lol

[21:20] * masak submits rakudobug

[21:20] <jnthn> masak: Is it bug?

[21:21] <tadzik> :DD

[21:21] <masak> jnthn: I declare it a bug.

[21:21] <jnthn> rakudo: my $x = "lol"; say $x ~~ s/o/0/;

[21:21] <p6eval> rakudo ea8c88: OUTPUT«Bool::True␤»

[21:21] <masak> based on tadzik's expectations, and the lack of spec.

[21:21] <jnthn> That's...curious. :)

[21:21] <tadzik> it certainly isn't DWIM

[21:21] <jnthn> No

[21:21] <jnthn> wtf. :/

[21:21] <jnthn> rakudo: my $x = "lol"; say ($x ~~ s/o/0/).WHAT;

[21:21] <p6eval> rakudo ea8c88: OUTPUT«Bool()␤»

[21:22] <jnthn> Wow

[21:22] <jnthn> I thought it was doing something with a match object that it was getting back somehow

[21:22] <jnthn> But...not even that.

[21:22] *** plobsing joined
[21:22] <masak> definitely something for RT.

[21:22] <jnthn> aye

[21:22] <jnthn> Not sure what the spec is, but the above outcome is awfulest.

[21:22] <masak> see, kids? and I didn't even *plan* to discover a rakudobug this time!

[21:23] *** pmurias joined
[21:23] <moritz_> p5 people want to write   if $x ~~ s/foo/bar/ { ... }

[21:23] *** ashleydev left
[21:23] <moritz_> anyway, 'night

[21:23] <diakopter> 'nite

[21:24] <jnthn> night, masak

[21:24] * masak isn't going to bed yet :)

[21:24] <tadzik> rakudo: my $a = "foo"; if $a ~~ s/foo/bar/ { say "yas" }

[21:24] <p6eval> rakudo ea8c88: OUTPUT«yas␤»

[21:24] <jnthn> oh 

[21:24] <jnthn> tab fail :)

[21:25] <tadzik> night moritz_ 

[21:25] <masak> I understand moritz_' explanation, but I don't like it.

[21:25] <tadzik> anyways, won't Match object evaluate to true anyway?

[21:25] <tadzik> and if the match fails, there will be no object, no?

[21:25] <jnthn> Yes

[21:25] * colomon has just been hit with the sudden strong belief he's seen the pattern of numbers coming up in p4 somewhere before....  

[21:26] <jnthn> tadzik: a false match object

[21:26] <tadzik> . o O (4 8 15 16 23 42)

[21:26] <tadzik> jnthn: good too

[21:29] <masak> tadzik: I don't want it to return the match object. I'd like it to return the resulting Str.

[21:29] *** rindolf left
[21:29] <masak> tadzik: if it returned the match object in my case above, it'd stringify to 'y'

[21:30] <jnthn> masak: I'm sure you know the counter case though. $x = 'x'; if $x ~~ s/x// { ... }

[21:30] <masak> right.

[21:30] <jnthn> It successfully substituted, but the resulting string is empty and thus false.

[21:30] <masak> I see that.

[21:31] <jnthn> Maybe we just gotta choose our wart.

[21:31] <masak> and an obvious patch to that would be to do 'but True' on the Str...

[21:31] <masak> ...but I am reluctant to propose that.

[21:31] <jnthn> I was gonna suggest that but then didn't because I worry about it propagating, or confusion over "the return value of it is now true but $x isn't...wtf" :)

[21:32] <masak> right.

[21:32] <jnthn> And because I don't really want to create a mixed-in string for every substitution.

[21:32] <jnthn> Given that but is a clone.

[21:32] <masak> nodnod

[21:32] <jnthn> (yes, it'd re-use the string buffer, but still...)

[21:32] <masak> honestly, I could live with the Str sometimes boolifying to false.

[21:32] <masak> that might even come in handy once in a while.

[21:33] <jnthn> True

[21:33] <masak> while s/(.)$// { ... }

[21:33] <jnthn> I can imagine use cases where that's actually nice.

[21:34] <jnthn> Hmm. So maybe I don't really object to it returning the resulting string at all :)

[21:34] *** mberends joined
[21:35] <masak> mberends! \o/

[21:36] *** pmurias left
[21:38] <tadzik> mberends: o/

[21:38] <tadzik> mberends: that may interest you: https://github.com/tadzik/Bailador/blob/master/app.pl

[21:40] *** bacek left
[21:49] <szabgab> mberends: ping

[21:52] *** mtk left
[21:53] *** bacek joined
[21:59] *** molaf joined
[22:00] <mberends> szabgab: pong

[22:02] <mberends> tadzik++: ooh! excitement!

[22:02] <tadzik> mberends: even #dancers got a bit interested

[22:02] <mberends> :-)

[22:03] <tadzik> @franck | tadzik: I'm starting to write some code for http::server::simple

[22:03] <tadzik> so mission complete :)

[22:03] <mberends> hooray! there will be lots of LHF after the initial breakthrough.

[22:04] <tadzik> I think so

[22:04] <tadzik> IF it moves forward

[22:04] <tadzik> I'd start from porting Dancer::Test

[22:04] <mberends> yes, good plan (sorry for the pun)

[22:05] <tadzik> oh, punny! So let's get it done()

[22:05] <mberends> lol

[22:05] <mberends> ok(1)

[22:05] <tadzik> :D

[22:08] *** ashleydev joined
[22:08] <masak> "let's get it done()" clearly has a better ring to it than "let's get it done_testing()"

[22:08] <tadzik> :)

[22:08] *** jaffa4 left
[22:12] *** MayDaniel left
[22:12] *** fuad joined
[22:26] <tadzik> 'night

[22:27] <diakopter> nite

[22:28] <mberends> o/

[22:29] <fuad> mberends, hello bro!

[22:29] <mberends> hi fuad, welcome back

[22:29] *** spq1 left
[22:31] *** fuad left
[22:32] *** kaare_ left
[22:33] *** coldhead joined
[22:36] *** simcop2387 is now known as simcop[hireme]

[22:36] *** coldhead left
[22:37] *** coldhead joined
[22:37] *** cafesofie joined
[22:41] *** masak left
[22:45] *** fhelmberger joined
[22:46] *** gbacon left
[22:54] *** plobsing left
[22:55] <snarkyboojum> phenny: tell tadzik, so in that case it might be worth moving your commands to --<command> switches? a la cpanm etc

[22:55] <phenny> snarkyboojum: I'll pass that on when tadzik is around.

[22:55] *** carlos joined
[23:02] <szabgab> mberends: FOSDEM?  Perl 6 talk?

[23:06] <szabgab> mberends: I would like to finish the schedule of the Perl dev room at FOSDEM and I'd like to have at least one Perl 6 talk

[23:07] <szabgab> I also would like to go to sleep now so I leave you with the URL: https://www.socialtext.net/perl5/index.cgi?events_2011_fosdem

[23:12] *** hercynium left
[23:12] <mberends> szabgab: if $work and $travel permits I'll be there, and am willing to talk. I think such a prominent event deserves some fresh presentation material, I could do with some input for that.

[23:12] <dalek> nqp-rx/nom: fac4f86 | jonathan++ | src/ (2 files):

[23:12] <dalek> nqp-rx/nom: Pass name along to meta-object so classes know how they're called.

[23:12] <dalek> nqp-rx/nom: review: https://github.com/perl6/nqp-rx/commit/fac4f86680

[23:12] <dalek> nqp-rx/nom: cbd0747 | jonathan++ | src/stage0/ (3 files):

[23:12] <dalek> nqp-rx/nom: Update bootstrap with recent changes.

[23:12] <dalek> nqp-rx/nom: review: https://github.com/perl6/nqp-rx/commit/cbd07472dc

[23:12] <dalek> nqp-rx/nom: ab3a2a5 | jonathan++ | / (3 files):

[23:12] <dalek> nqp-rx/nom: Add a barebones NQPMu and make it the default base class for anything declared with NQPClassHOW.

[23:12] <dalek> nqp-rx/nom: review: https://github.com/perl6/nqp-rx/commit/ab3a2a53be

[23:16] *** fhelmberger left
[23:17] *** woosley joined
[23:20] <dalek> nqp-rx/nom: 5821a4c | jonathan++ | t/nqp/28-subclass.t:

[23:20] <dalek> nqp-rx/nom: Correct a test (also previously corrected in 6model repo copy of the test suite).

[23:20] <dalek> nqp-rx/nom: review: https://github.com/perl6/nqp-rx/commit/5821a4cbe5

[23:20] <dalek> nqp-rx/nom: 67bb846 | jonathan++ | src/NQP/ (2 files):

[23:20] <dalek> nqp-rx/nom: Switch the class package declarator to use 6model. There are a couple of regressions out of this. One is of multis, which I don't care about since they're getting re-done Real Soon Now. The other is the :vtable trait handling, which I'll fix at some point, but is low priority. At this point, just grammars are left using P6metaclass.

[23:20] <dalek> nqp-rx/nom: review: https://github.com/perl6/nqp-rx/commit/67bb846358

[23:20] *** plobsing joined
[23:37] *** cafesofie left
[23:37] *** cafesofi_ joined
[23:37] *** cafesofi_ is now known as cafesofie

[23:38] <dalek> nqp-rx/nom: d357201 | jonathan++ | src/stage0/ (3 files):

[23:38] <dalek> nqp-rx/nom: Update bootstrap with class declarator using 6model, so class_6m elimination can start.

[23:38] <dalek> nqp-rx/nom: review: https://github.com/perl6/nqp-rx/commit/d357201486

[23:38] <dalek> nqp-rx/nom: 09ed288 | jonathan++ | src/ (7 files):

[23:38] <dalek> nqp-rx/nom: Remove usage of class_6m.

[23:38] <dalek> nqp-rx/nom: review: https://github.com/perl6/nqp-rx/commit/09ed2886fe

[23:40] *** woosley left
[23:52] <dalek> niecza: 507d055 | sorear++ | lib/CLRBackend.cs:

[23:52] <dalek> niecza: Fix codegen bug on .NET with diakopter++ help

[23:52] <dalek> niecza: review: https://github.com/sorear/niecza/commit/507d055b8f

[23:52] <dalek> niecza: b891411 | sorear++ | v6/ (3 files):

[23:52] <dalek> niecza: [v6] Error on missing modules, add build scripts

[23:52] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b891411853

[23:52] <dalek> nqp-rx/nom: f0b00d8 | jonathan++ | src/NQP/ (2 files):

[23:52] <dalek> nqp-rx/nom: Remove last remains of class_6m from the grammar/actions.

[23:52] <dalek> nqp-rx/nom: review: https://github.com/perl6/nqp-rx/commit/f0b00d807f

[23:52] <dalek> nqp-rx/nom: 013ebe2 | jonathan++ | src/metamodel/how/NQPClassHOW.pm:

[23:52] <dalek> nqp-rx/nom: Publish type cache (pretty much directly taken from 6model/common).

[23:52] <dalek> nqp-rx/nom: review: https://github.com/perl6/nqp-rx/commit/013ebe2308

[23:52] <dalek> nqp-rx/nom: 80c8322 | jonathan++ | src/metamodel/how/NQPMu.pm:

[23:52] <dalek> nqp-rx/nom: A cheating NQPMu.ACCEPTS. Need multi-dispatch done to do the non-cheating version that we have in nqpclr. It's enough to reclaim a regressed test file, for now.

[23:52] <dalek> nqp-rx/nom: review: https://github.com/perl6/nqp-rx/commit/80c8322b2b

[23:52] <diakopter> wow

[23:54] <sorear> me?

[23:54] <diakopter> just the combined sudden rush

[23:56] *** plobsing left
[23:57] *** icwiener joined
