[00:02] *** impious left
[00:07] *** xinming_ left
[00:08] *** cosimo joined
[00:16] *** noganex_ left
[00:16] *** cosimo left
[00:17] *** cosimo joined
[00:17] *** cosimo left
[00:18] *** cosimo joined
[00:23] *** whiteknight left
[00:24] *** ab5tract left
[00:28] *** shabble joined
[00:28] *** shabble left
[00:28] *** shabble joined
[00:30] *** noganex joined
[00:46] *** szbalint left
[00:46] *** szbalint joined
[00:49] *** drbean left
[00:51] *** bph left
[00:52] *** drbean joined
[00:53] *** rdesfo left
[00:53] *** stkowski left
[00:55] *** s1n left
[00:58] *** mtk left
[01:02] *** Sarten-X left
[01:06] *** justatheory joined
[01:08] *** mtk joined
[01:08] *** amkrankruleuen left
[01:08] *** woosley joined
[01:09] *** amkrankruleuen joined
[01:15] *** Chillance left
[01:23] *** Sarten-X joined
[01:33] *** hercynium joined
[01:33] *** hercynium left
[01:33] *** hercynium joined
[01:42] *** orafu left
[01:47] *** GinoMan joined
[01:48] *** [particle]1 joined
[01:48] *** pothos left
[01:48] *** [particle] left
[01:48] *** pothos joined
[01:54] *** adriano86 joined
[01:54] <adriano86> hi

[01:54] <adriano86> I need help with some perl code

[02:01] <donri> 6? :)

[02:02] *** silent_h_ joined
[02:02] <adriano86> no

[02:02] <adriano86> 7

[02:02] <adriano86> whataafuck you think

[02:02] <adriano86> you troll

[02:05] <donri> 'perl' usually refers to 5, not trolling

[02:05] <adriano86> so you saying that i am?

[02:05] *** silent_h_ left
[02:06] <donri> anyway, it's best to just ask/state your problem and see if anyone bites

[02:06] <donri> nope, was just making sure. don't take it personally.

[02:09] <adriano86> ok so what are you saying

[02:09] <adriano86> let me hear it

[02:09] <adriano86> spit it out

[02:10] <flussence_> hugme: hug adriano86 

[02:10] * hugme hugs adriano86

[02:10] *** cdarroch left
[02:10] <adriano86> go away!

[02:10] <adriano86> i dont need a god damn hug

[02:10] <adriano86> I got a problem that i need solved

[02:11] <Eevee> maybe spend less time fighting over nothing and more time telling us what the problem is

[02:11] <flussence_> if you actually have a problem, start showing code.

[02:11] <donri> adriano86: You're not really acting in such a way as to inspire people to help you with your perl problem.

[02:11] <flussence_> if not, you want #perl.

[02:12] <adriano86> donri im tryin but its damn hard when im surrounded by idiots

[02:12] <adriano86> ok fine

[02:12] <donri> You're either trolling or you have seriously misinterpreted the situation.

[02:12] <adriano86> think ill go for the later

[02:12] <adriano86> TODO: {

[02:12] <adriano86>     local $TODO = "Test not yet implemented";

[02:12] <adriano86>     fail "Missing a test for X";

[02:13] <adriano86> whats wrong with this snippet

[02:13] <flussence_> std: TODO: { local $TODO = "Test not yet implemented"; fail "Missing a test for X"; }

[02:13] <p6eval> std 4608239: OUTPUT¬´[31m===[0mSORRY![31m===[0m‚ê§Variable $TODO is not predeclared at /tmp/SiUgmnwuon line 1:‚ê§------> [32mTODO: { local $TODO[33m‚èè[31m = "Test not yet implemented"; fail "Mis[0m‚ê§Undeclared routine:‚ê§    'local' used at line 1‚ê§Check failed‚ê§FAILED 00:01 121m‚ê§¬ª

[02:13] <flussence_> there you go; "local" isn't valid perl6.

[02:14] <adriano86> ooh

[02:14] <adriano86> now i get it

[02:14] <adriano86> i knew was gonna happen

[02:14] <Eevee> haha

[02:14] <adriano86> dont tell me your questioning my perl6 knowledgeability!??

[02:14] <flussence_> did you by any chance get kicked out of the perl 5 channel before coming here?

[02:15] <adriano86> ye how u know

[02:15] <flussence_> just a hunch.

[02:15] <adriano86> good one

[02:15] <adriano86> u know my plan was..

[02:15] <adriano86> to step it up one level, so i came to perl6

[02:15] <donri> You should now leave and go to #perl7

[02:15] <adriano86> guess the people in the chan 7 waiting for me uh?

[02:15] <adriano86> got a feelin i be meeting em real soon for some reason

[02:15] <flussence_> now if you don't have any actual problem, I'll be putting you on ignore until you calm down.

[02:16] <adriano86> nah its ok

[02:16] <adriano86> ill just talk to myself in perl7

[02:16] <adriano86> nobody talks bk there

[02:16] <adriano86> they all nice and polite since they is consisting of the only non-llama on this planet

[02:16] <adriano86> which is me myself

[02:17] <adriano86> but i guess yall already knew that one, as it equals the mindpower of a 1+1 calculation

[02:20] *** mikehh left
[02:23] *** GinoMan left
[02:43] *** fisted left
[02:46] *** adriano86 left
[02:52] *** petdance joined
[03:02] *** justatheory left
[03:15] *** TiMBuS|Away joined
[03:15] *** justatheory joined
[03:15] *** TiMBuS|Away is now known as TiMBuS

[03:24] *** fhelmberger joined
[03:49] *** coldhead left
[03:50] *** coldhead joined
[03:57] *** mberends left
[04:03] *** nymacro joined
[04:06] *** GinoMan joined
[04:07] *** hercynium left
[04:09] *** arlinius left
[04:17] *** mberends joined
[04:21] *** petdance left
[04:26] <mberends> .oO( a #perl7 channel would be the perfect place for all the adrianos )

[04:29] <mberends> .oO( well, #perl666. we may want #perl7 for something else one day )

[04:38] <donri> I wonder what will turn out to warrant a major version bump from Perl 6

[04:40] <mberends> Perl 7 it is specced philosphically in S01 ;)

[04:40] <mberends> s/it//

[04:45] <donri> "Perl 6 should be malleable enough that it can evolve into the imaginary perfect language, Perl 7"  heh

[04:46] * sorear drops by #perl6 for a little bit.

[04:46] <donri> I don't think there can be one perfect language, there are different and incompatible paradigms that are useful for different situations

[04:46] <mberends> nice to see ya, sorear

[04:47] <sorear> fwiw, theorems are very very important in my kind of programming language work

[04:47] <sorear> although I usually don't bother to write them down

[04:47] <sorear> my mind likes to prove stuff in 3+ dimensions, serializing it into prose is a real pain

[04:47] <mberends> donri: sure, S01 is not serious about perfection

[04:48] <donri> Didn't think it was, read that quote as tongue-in-cheek

[04:50] <mberends> sorear: +1, theory provides the guidelines within which we do sensible work.

[04:52] <mberends> kind of like "you can't get there from here" type statements, or "you shouldn't go there from here"

[04:53] <sorear> the backlog I just went through has you deriding a book for calling itself "Practical" and containing "axioms, lemmas, and theorems"

[04:54] <mberends> yes. perhaps to my tunnel vision, I could not get anything practical out of that text.

[04:54] <mberends> I would not mind if the book included the application of the theory.

[04:55] * justatheory backs away slowly

[04:55] * mberends backs away too, Justin Case

[04:55] <sorear> I can't comment too much, I haven't read the book you're discussing

[04:57] * sorear doesn't like the fact that "academic" is a term of derision these days

[04:58] *** xinming joined
[04:58] <mberends> sorear: that divide has existed for a very long time afaik, and there is no smoke like that without fire. "ivory towers" and so on.

[05:00] <sorear> btw

[05:00] <sorear> current niecza weekly commits - 1 mberends, 2 moritz_, 3 sorear

[05:00] <mberends> educators always seem to have struggled to provide sufficient "real world" content in their materials. I know, I'm one of them.

[05:00] <sorear> if one of you want to claim the top spot, this is the week to do it :)

[05:01] * mberends feels motivated

[05:01] <sorear> (weeks begin and end at 1900 UTC Tuesday)

[05:02] <mberends> I owe you one little rename-refactor anyway, now for some LHF...

[05:08] *** sufrostico joined
[05:10] *** xinming left
[05:10] <sorear> mberends: what directions are you interested in persuing?

[05:10] *** xinming joined
[05:13] <mberends> sorear: directions are limited by my limited skills, but spectest coverage in general, masak's coding contest examples, any changes that get more existing P6 code running on Niecza.

[05:14] <mberends> essentially trying to indirectly pull up the bus number

[05:21] *** sufrostico left
[05:39] *** donri left
[05:39] *** xinming left
[05:40] <jnthn> o/ from Taipei

[05:41] * jnthn is very jetlagged; don't expect any sense out of me today :)

[05:42] <mberends>  /o jnthn, good to see you online from Taipei anyway

[05:46] *** Psyche^ joined
[05:46] *** Psyche^ is now known as Patterner

[05:46] * jnthn is glad to have made it here safely

[05:47] * sorear drops back out, most likely for multiple days

[05:48] <jnthn> It seems like a pretty cool place, from this morning's wandering around. By now though I'm mostly at the point of feeling too tired to walk around and see stuff.

[05:53] *** justatheory left
[05:53] <tadzik> morning zebras

[05:55] <mberends> hi tadzik

[05:59] <jnthn> o/ tadzik 

[06:14] *** sftp left
[06:32] *** mberends left
[06:34] *** kaare_ joined
[06:46] *** tyatpi_ left
[06:47] *** tyatpi_ joined
[06:52] *** deskmsn joined
[06:52] <deskmsn> hi guys

[06:54] *** deskmsn left
[06:57] *** wtw joined
[06:59] <moritz_> good morning

[07:00] *** flatwhatson_ left
[07:03] *** nymacro left
[07:11] *** ruslan joined
[07:18] *** GinoMan left
[07:20] *** ruslan left
[07:22] *** Mowah joined
[07:25] *** cosimo left
[07:26] *** simcop2387 left
[07:28] *** noganex_ joined
[07:31] *** noganex left
[07:37] * snarkyboojum burps

[07:44] *** simcop2387 joined
[08:09] *** snarkyboojum left
[08:09] *** snarkyboojum joined
[08:09] *** snarkyboojum left
[08:10] *** mj41 joined
[08:17] *** simcop2387 left
[08:20] *** simcop2387 joined
[08:21] *** mberends joined
[08:24] *** simcop2387 left
[08:35] *** Mowah left
[08:35] *** simcop2387 joined
[08:35] *** dju_ left
[08:37] *** Rotwang joined
[08:46] *** mtk left
[08:54] *** mtk joined
[09:16] *** unredbl3251 joined
[09:18] *** VXZ left
[09:18] *** alim joined
[09:30] *** unredbl3251 left
[09:31] *** tzhs joined
[09:36] *** dan___ joined
[09:38] <dan___> helo, I have big file with entries in this format:   CX      Christmas Island        --   Which is 2 characters followed variable number of spaces then country name followed by spaces and --, I need to extract the country names only.. can someone show me how can that be done in perl6?

[09:41] <moritz_> rakudo: my $line = 'CX  Christmas Island        --   '; $line ~~ s/^\w\w\S+//; $line ~~ s/<[\s\-]>*$//; say $line

[09:41] <p6eval> rakudo 841b2c: OUTPUT¬´CX  Christmas Island        --   ‚ê§¬ª

[09:41] <moritz_> rakudo: my $line = 'CX  Christmas Island        --   '; $line ~~ s/^\w\w\s+//; $line ~~ s/<[\s\-]>*$//; say $line

[09:41] <p6eval> rakudo 841b2c: OUTPUT¬´Christmas Island        --   ‚ê§¬ª

[09:42] <moritz_> rakudo: my $line = 'CX  Christmas Island        --   '; $line ~~ s/^\w\w\s+//; $line ~~ s/[\s|\-]+$//; say $line

[09:42] <p6eval> rakudo 841b2c: OUTPUT¬´Christmas Island‚ê§¬ª

[09:42] *** nadim_ left
[09:42] <moritz_> right, rakudo doesn't like backslashed sequences in char classes :(

[09:43] <dan___> moritz_: is that considered a todo or something we will need to adopt to?

[09:43] <moritz_> dan___: it's a todo

[09:43] <moritz_> rakudo: my $line = 'CX  Christmas Island        --   '; $line ~~ s/^\w\w\s+//; $line ~~ s/<+space+[-]>+$//; say $line

[09:43] <p6eval> rakudo 841b2c: OUTPUT¬´===SORRY!===‚ê§Unsupported use of - as character range; in Perl 6 please use .. at line 22, near "]>+$//; sa"‚ê§¬ª

[09:43] <moritz_> rakudo: my $line = 'CX  Christmas Island        --   '; $line ~~ s/^\w\w\s+//; $line ~~ s/<+space+[\-]>+$//; say $line

[09:43] <p6eval> rakudo 841b2c: OUTPUT¬´Christmas Island‚ê§¬ª

[09:44] <moritz_> dan___: other compilers do it better

[09:44] <moritz_> niecza: my $line = 'CX  Christmas Island        --   '; $line ~~ s/^\w\w\s+//; $line ~~ s/<+space+[\-]>+$//; say $line

[09:44] <p6eval> niecza v3-80-g3cc93a7: OUTPUT¬´Unhandled exception: Unable to resolve method space in class Cursor‚ê§  at /tmp/bxy51HabRU line 1 (MAIN C3_ANON @ 4)‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 1038 (CORE Regex.ACCEPTS @ 4)‚ê§  at /home/p6eval/niecza/lib/CORE.setting line 1044 (CORE _substitute @ 3)‚ê§ 

[09:44] <p6eval> ..at /tmp/bxy51‚Ä¶

[09:44] <dan___> mmm

[09:44] <moritz_> niecza: my $line = 'CX  Christmas Island        --   '; $line ~~ s/^\w\w\s+//; $line ~~ s/<[-]>+$//; say $line

[09:44] <p6eval> niecza v3-80-g3cc93a7: OUTPUT¬´Christmas Island        --   ‚ê§¬ª

[09:44] <moritz_> niecza: my $line = 'CX  Christmas Island        --   '; $line ~~ s/^\w\w\s+//; $line ~~ s/<[\s\-]>+$//; say $line

[09:44] <p6eval> niecza v3-80-g3cc93a7: OUTPUT¬´Christmas Island‚ê§¬ª

[09:44] <moritz_> niecza does the \s in the char class just fine

[09:44] <moritz_> sorear++

[09:45] *** dakkar joined
[09:47] <dan___> moritz_: Since niecza is better in that area, do you recommend removing rakudo and getting niecza?

[09:48] <moritz_> dan___: don't remove rakudo, install both :-)

[09:48] <moritz_> dan___: niecza is less feature complete in other areas (multi dispatch and builtins, for example)

[09:49] <dan___> moritz_: I should kinda split my scripts into (more niecza compatable) and (more rakudo compatable) I think.. works for me..

[09:50] <moritz_> dan___: if you have some scripts that work on both compilers, but produce different results, please tell us. Such information is very valuable for adding stuff to the test suite

[09:50] <dan___> moritz_: where should bug reports be sent?

[09:50] <dan___> moritz_: do you have a ready tool for it?

[09:52] <moritz_> dan___: niecza bugs go to https://github.com/sorear/niecza/issues and rakudo bugs to mailto:rakudobug@perl.org

[09:52] <moritz_> dan___: if you don't know which one is correct, just ask us here

[09:53] <dan___> moritz_: not a git user so I will use the email

[09:54] <moritz_> dan___: you don't need any git knowledge for the bug tracker, it's just a web interface like any other

[09:54] *** awoodland joined
[09:55] <dan___> moritz_: ah, okey..

[09:56] <moritz_> niecza: $_ = 'foo'; say /f/

[09:56] <p6eval> niecza v3-80-g3cc93a7: OUTPUT¬´Regex()<instance>‚ê§¬ª

[09:57] *** dan___ left
[10:01] *** satyavvd joined
[10:02] *** satyavvd left
[10:02] *** satyavvd joined
[10:17] *** woosley left
[10:30] *** satyavvd left
[10:37] *** Rotwang left
[10:42] <colomon> rakudo: my $line = 'CX  Christmas Island        --  '; $line ~~ m/^\w\w \s+ (\S.*\S) \s+ \-\-/; say $0;

[10:42] <p6eval> rakudo 841b2c: OUTPUT¬´Christmas Island‚ê§¬ª

[10:42] <colomon> rakudo: my $line = 'CX  Christmas Island        --  '; $line ~~ m/^\w\w \s+ (\S.*\S) \s+ \-\-$/; say $0;

[10:42] <p6eval> rakudo 841b2c: OUTPUT¬´‚ê§¬ª

[10:43] <colomon> rakudo: my $line = 'CX  Christmas Island        --  '; $line ~~ m/^\w\w \s+ (\S.*\S) \s+ \-\-/; say $0;

[10:43] <p6eval> rakudo 841b2c: OUTPUT¬´Christmas Island‚ê§¬ª

[10:43] <moritz_> that (\S.*\S) is a neat trick

[10:43] <moritz_> '--' also works instead of \-\-

[10:43] *** awoodland left
[10:44] <colomon> I still haven't gotten used to things like '--' working -- my solution was very p5.  :)

[10:45] <moritz_> rakudo: $_ = 'CX  Christmas Island        --  '; ms/\w\w (\S.*\S)/ && say $0

[10:45] <p6eval> rakudo 841b2c: OUTPUT¬´Christmas Island        --‚ê§¬ª

[10:46] <moritz_> rakudo: $_ = 'CX  Christmas Island        --  '; ms/\w\w (\w.*\w)/ && say $0

[10:46] <p6eval> rakudo 841b2c: OUTPUT¬´Christmas Island‚ê§¬ª

[10:46] <moritz_> those many \s+ just *had* to go away with an implied :s

[10:47] * moritz_ doesn't think he actually used ms// after implementing it

[10:48] *** wtw_ joined
[11:00] *** tzhs left
[11:08] *** whiteknight joined
[11:16] *** whiteknight left
[11:16] *** whiteknight joined
[11:23] *** ab5tract joined
[11:27] *** renormalist joined
[11:33] *** plainhao left
[11:35] *** orafu joined
[11:40] *** coldhead left
[11:59] *** tzhs joined
[11:59] *** shi joined
[12:08] *** tyatpi_ left
[12:08] *** tyatpi_ joined
[12:09] *** takadonet joined
[12:10] <takadonet> morning all

[12:18] *** leprevost joined
[12:19] * [Coke] drowns in output.

[12:24] *** bluescreen10 joined
[12:25] <tadzik> 'afternoon

[12:34] *** _twitch joined
[12:35] *** Mowah joined
[12:37] *** mj41 left
[12:46] <colomon> 'morning

[12:50] *** meraxes joined
[12:52] *** mj41 joined
[12:55] *** mtk left
[12:55] *** mtk joined
[13:01] *** mjk joined
[13:01] *** mjk left
[13:04] *** hiex joined
[13:04] *** hiex left
[13:08] *** woosley joined
[13:27] *** sftp joined
[13:28] *** sftp left
[13:29] *** sftp joined
[13:32] *** Mowah left
[14:01] *** masak joined
[14:02] <masak> oh hai from GoOpen in Oslo.

[14:02] <moritz_> oh hai

[14:03] <masak> oh, we had a troll visiting tonight.

[14:03] <masak> quite an obvious/flagrant one, it seems.

[14:04] <moritz_> which makes me notice that I haven't backlogged yet

[14:05] <masak> somewhat oddly perhaps, even though I'll talk a lot about community tomorrow, I haven't managed to weave troll hugging into it all.

[14:07] <[Coke]> I appreciate that we have troll huggers (thugs!) here, but I find it so exhausting. Easier by far to ban them.

[14:07] <[Coke]> so, thanks for doing that, becaus3e I wouldn't. ;)

[14:08] <masak> ;)

[14:09] <masak> the troll from tonight came wanting help (with Perl 5), but was hostile and distracted, and meaningful communication wasn't really established.

[14:13] *** [particle]1 is now known as [particle]

[14:18] *** shi left
[14:19] <masak> mberends: I'm at a talk named "Art and Hacking in Syria". Arduino plays a vital role. \o/

[14:19] *** domidumont left
[14:21] *** saaki joined
[14:21] * [Coke] finds http://learnyouahaskell.com , which is the best introduction I've found so far.

[14:22] <masak> I started following that, but got derailed. maybe I should give it another shot.

[14:22] * moritz_ still has "Real World Haskell" on his bookshelf, and has read only the first few chapters

[14:23] <moritz_> mostly due to distraction too

[14:25] <tadzik> you can read it to Ronja before she gets asleep :)

[14:25] <masak> youngest Haskell code evar.

[14:25] <masak> coder*

[14:26] <masak> I wonder if structuring my free time more would entail a net good. making time plans and schedules seems to work for my working life; maybe it'd work for my free tuits as well?

[14:26] <moritz_> http://xkcd.com/874/

[14:26] <tadzik> so appropriate

[14:27] <moritz_> masak: structuring free time breaks down as soon as you have a baby :-)

[14:27] <masak> thanks; I'll keep that in mind. :P

[14:28] *** domidumont joined
[14:28] <masak> moritz_: the xkcd comic reminds me of an image someone tweeted where a child had written a TODO list in scrawly letters on a piece of paper.

[14:28] <masak> * EAT ICE CREAM

[14:28] <masak> * PLAY

[14:28] <masak> that was it.

[14:29] <masak> as I remember it, the twitterer was slightly envious of the simplicity of it all.

[14:29] <moritz_> :-)

[14:29] *** mtk left
[14:34] <slavik1> there was an argument about what makes a language good on ubuntu forums ...

[14:34] <PerlJam> slavik1: how sad.

[14:34] <slavik1> I just started listing some perl6 features/niceties

[14:34] <slavik1> :)

[14:35] *** mtk joined
[14:35] <moritz_> that's not what makes a language good

[14:35] <tadzik> slavik1: link?

[14:35] <moritz_> you know it's good when you get your job done, have low maintenance and low learning costs

[14:35] <slavik1> moritz_: hence perl6 :P

[14:36] <PerlJam> someone should do one of those "levels of a programmer" for Perl 6.

[14:36] <masak> +1

[14:36] <colomon> I think I've read the first three or so chapters of books on about four functional programming languages.

[14:36] <slavik1> PerlJam: levels of a programmer?

[14:36] <masak> PerlJam: url?

[14:37] <colomon> It always feels to me like they start off showing how beautiful it is, and then suddenly it gets horribly ugly when they actually try to do something real with it.

[14:37] <slavik1> colomon: yeah, I have noticed that

[14:37] <slavik1> colomon: I think it has to do more with programming in a functional manner than the languages themselves

[14:38] <masak> colomon: sounds like the quote "Lisp is beautiful, but I've never seen a beautiful Lisp program"

[14:38] <colomon> slavik1: I think it's a bit of both.

[14:38] <PerlJam> slavik1: they come in different flavors but usually it's something like hello world from a first year student, then from someone with a degreee, then someone who's been on the job for 2 months, then on the job for 2 years, then 5 years, then as an "expert" and so forth

[14:38] <colomon> ML was the worst offender, if I recall correctly.

[14:38] <slavik1> PerlJam: url to some existing stuff?

[14:38] <masak> PerlJam: oh! that wasn't the one I was thinking of :)

[14:39] <mathw> PerlJam: there's a Haskell one that gets ridiculously elaborate, based around 'factorial' I believe

[14:39] <PerlJam> Here's another variant: http://www.codinghorror.com/blog/2009/04/the-eight-levels-of-programmers.html

[14:39] <colomon> They started off with these beautiful recursive functions, but then explained that for basic efficiency reasons, you really should use these ugly hacks instead of those beautiful functions.

[14:39] <mathw> somewhere in the middle is an extraordinarily long and convoluted implementation that uses comonads in a horribly gratuitious manner

[14:39] <PerlJam> masak: were you thinking of this? http://www.indiangeek.net/wp-content/uploads/Programmer%20competency%20matrix.htm

[14:40] <PerlJam> "comonads"?

[14:40] <PerlJam> colomonads?  :-)

[14:40] * moritz_ thought of the "levels of perl programmers" to which he currently can't find a link

[14:40] <PerlJam> (sorry colomon :)

[14:40] <moritz_> level 1: often gets syntax errors he doesn't know how to resolve

[14:40] *** domidumont left
[14:41] <moritz_> level 2: gets the code running, but does things like: my @lines = <FILE>; for (@lines) { ... }

[14:41] <mathw> PerlJam: yes, comonads

[14:41] <moritz_> level 3: understands contexts and basic regexes

[14:41] <PerlJam> mathw: that's a new term for me.

[14:41] <moritz_> and so on

[14:41] <masak> PerlJam: no. still looking.

[14:41] <masak> PerlJam: ah. this. http://replay.waybackmachine.org/20070929221511/http://prometheus.frii.com/~gnat/yapc/2000-stages/

[14:42] <masak> I remember liking that one.

[14:42] *** plainhao joined
[14:43] <moritz_> masak: that might be the one I had in the back of my mind too

[14:43] <mathw> PerlJam: I suggest not worrying about them, they make my head hurt

[14:44] <PerlJam> Well, there should be a "Stages of a programmer"  for any lanuage.  Stage 1:  Is happy when he gets his code to compile.  Stage 2: Happy when he gets his code to execute properly.  Stage 3:  Can read and understand code he wrote yesterday  Stage 4: Can read and understand code he wrote 6 months ago  Stage 5: Knows the code he wrote 6 months ago is crap now.  etc.

[14:44] *** kaare_ left
[14:45] <moritz_> Stage 6: Knows the code he will write in 6 months is crap

[14:45] <slavik1> PerlJam: I def reached stage 6

[14:45] <slavik1> moritz_: that's stage 8

[14:45] <PerlJam> moritz_: The older I get, the more I think I used to be smarter than I am now.  :)

[14:46] <slavik1> stage 7: knows the code he wrote will look like crap 6 months into the future

[14:46] <slavik1> undergrad students think they know everything

[14:46] *** mj41 left
[14:46] <slavik1> grad students know they know nothing

[14:46] <slavik1> phd's know that nobody knows anything

[14:47] <moritz_> PerlJam: well, physiological research shows that brain volume peaks at age ~14, iirc

[14:47] <PerlJam> Maturity is getting comfortable with knowing that there are lots of things you don't know and moreover, there are lots of things you will never know.

[14:49] <PerlJam> BTW, perhaps I'm just overly sensitive to this, but I've noticed more Perl 6 ideas leaking into Perl 5 thinking.  For instance, yesterday someone on #p5p wanted people to review his patch to make a [+]-alike in Perl 5

[14:49] <PerlJam> (well, a reduce-a-like, not just addition)

[14:50] *** domidumont joined
[14:50] <PerlJam> And I saw some mention of gather/take on #perl

[14:50] <moritz_> PerlJam: p5p has become more open-minded and fast paced in the last year or so

[14:54] *** plobsing left
[14:55] *** pkkm joined
[14:58] *** pothos left
[14:58] *** pothos_ joined
[14:59] *** pothos_ is now known as pothos

[15:07] <masak> rakudo: say "..\n..".lines>>.comb.perl

[15:07] <p6eval> rakudo 841b2c: OUTPUT¬´((".", "."), (".", "."))‚ê§¬ª

[15:07] <masak> what if I want ([".", "."], [".", "."]) ?

[15:08] <masak> rakudo: say "..\n..".lines>>.comb>>.Array.perl

[15:08] <p6eval> rakudo 841b2c: OUTPUT¬´Method 'Array' not found for invocant of class 'Str'‚ê§  in main program body at line 22:/tmp/SQuy3sUGg2‚ê§¬ª

[15:08] <moritz_> rakudo: say "..\n..".lines>>.comb.item.perl

[15:08] <p6eval> rakudo 841b2c: OUTPUT¬´(".", ".", ".", ".")‚ê§¬ª

[15:08] <moritz_> I think that's wrong

[15:08] <masak> why?

[15:08] <masak> looks right to me.

[15:09] <masak> but sometimes I want a list of arrays and not a list of lists.

[15:09] <moritz_> because item context shouldn't flatten, by the version of spec I happen to remember :-)

[15:09] <masak> :)

[15:09] <moritz_> rakudo: say "..\n..".lines>>.comb>>.item.perl

[15:09] <p6eval> rakudo 841b2c: OUTPUT¬´(".", ".", ".", ".")‚ê§¬ª

[15:09] <masak> having a way to do that would make things a bit nicer for the kata in a few hours...

[15:09] *** Bucciarati joined
[15:10] <moritz_> rakudo: say ([.comb] for "..\n..".lines)

[15:10] <p6eval> rakudo 841b2c: OUTPUT¬´. .. .‚ê§¬ª

[15:10] <moritz_> rakudo: say ([.comb] for "..\n..".lines).perl

[15:10] <p6eval> rakudo 841b2c: OUTPUT¬´([".", "."], [".", "."])‚ê§¬ª

[15:10] <masak> rakudo: say (1,2,3).Array

[15:10] <p6eval> rakudo 841b2c: OUTPUT¬´Method 'Array' not found for invocant of class 'Parcel'‚ê§  in main program body at line 22:/tmp/N6BS8b4jDj‚ê§¬ª

[15:10] <masak> any reason that casting method shouldn't exist?

[15:11] <moritz_> simply NYI I think

[15:11] <masak> moritz_: right, '[.comb] for' works, and I could use that. but it would be nice with just a chain of methods.

[15:11] * masak submits rakudobug

[15:11] <moritz_> or maybe .slice aka .lol should do it

[15:12] *** mj41 joined
[15:12] <masak> TimToady: what do you think?

[15:13] *** plobsing joined
[15:14] *** Psyche^ joined
[15:14] *** wtw_ left
[15:15] *** Patterner left
[15:15] *** Psyche^ is now known as Patterner

[15:16] *** icwiener joined
[15:18] *** _twitch left
[15:19] *** wtw left
[15:20] *** hatseflats joined
[15:21] *** kaare_ joined
[15:24] *** flatwhatson_ joined
[15:25] *** pkkm_ joined
[15:25] <colomon> [.comb] works? Rakudo++

[15:25] <moritz_> why shouldn't it? :-)

[15:26] *** pkkm left
[15:26] <colomon> I can't recall ever seeing [ ] used with a method.

[15:26] <moritz_> colomon: it's just an array constructor

[15:26] <masak> you seem to overestimate the magicality of [ ]

[15:26] *** flatwhatson__ joined
[15:26] *** flatwhatson_ left
[15:26] <moritz_> [ $_.comb ]

[15:26] <colomon> ah.

[15:26] <colomon> Rakudo--, then.  :p

[15:26] <masak> I'm more happy that a statement-terminator 'for' cam be used as a list comprehension. \o/

[15:27] <mathw> list comprehensions are awesome

[15:32] <masak> I just showed a fellow GoOpen-er how I was using tote for my kata. he told me about ':help autocmd' in vim.

[15:34] <moritz_> nice one

[15:34] <masak> aye. wonder if Emacs has similar hooks.

[15:34] <moritz_> so you can run stuff after every :w

[15:34] <masak> right.

[15:34] <moritz_> or you could just read from an inotify daemon :-)

[15:35] <masak> aye, and be limited to Linux.

[15:36] <moritz_> well, you can chose between being limited to an OS or an editor :-)

[15:36] <masak> I think I'd like for the eventual long-term tote to use inotify, but fall back on a platform-independent solution.

[15:39] <flussence_> rakudo: #`<!-- playing around with that code above, I ended up writing this nonsense: --> say lines[.comb] for $*IN.get

[15:39] <p6eval> rakudo 841b2c: OUTPUT¬´Land der √Ñcker, Land der Dome,Land der √Ñcker, Land der Dome,Land der √Ñcker, Land der Dome,Land der √Ñcker, Land der Dome,Land der √Ñcker, Land der Dome,Land der √Ñcker, Land der Dome,Land der √Ñcker, Land der Dome,Land der √Ñcker, Land der Dome,Land der √Ñcker, Land der Dome,Land

[15:39] <p6eval> ..der √Ñck‚Ä¶

[15:42] <masak> https://gist.github.com/881437 # this is the code I tend to end up writing for the minesweeper kata

[15:42] *** bph joined
[15:42] <masak> last time the &neighbors sub was outside, but this time it ended up inside &sweep, losing a bunch of initialization.

[15:43] <masak> ...and I get to showcase nested subs! \o/

[15:50] *** ymasory joined
[15:59] <arnsholt> masak: How long are you in Oslo?

[16:01] <masak> arnsholt: only until tomorrow afternoon.

[16:02] * masak decides to time himself with the kata one last time

[16:03] *** woosley left
[16:03] <moritz_> seems that waiting for a file to be written with inotify is as easy as

[16:03] <moritz_> inotifywait $filename -e close_write

[16:06] *** pkkm_ left
[16:09] *** sufrostico joined
[16:09] *** sufrostico left
[16:19] <masak> 15 minutes. wow, this kata stuff really works. ;)

[16:21] *** pkkm joined
[16:22] <masak> see you after the public demo of Perl 6 ;)

[16:22] *** mberends left
[16:22] *** masak left
[16:27] *** tzhs left
[16:28] *** hercynium joined
[16:33] *** mtk left
[16:35] *** risou joined
[16:40] *** bluescreen10 left
[16:42] *** mtk joined
[16:45] *** alim left
[16:45] *** Mowah joined
[16:47] *** donri joined
[17:05] *** estrabd joined
[17:09] *** GinoMan joined
[17:18] *** bluescreen10 joined
[17:22] *** mj41 left
[17:34] *** ab5tract left
[17:35] *** MayDaniel joined
[17:39] *** mberends joined
[17:49] *** MayDaniel left
[17:49] *** alim joined
[17:52] *** alim left
[17:52] *** dsp_ left
[17:52] *** alim joined
[17:53] *** dsp_ joined
[17:54] *** PacoLinux_ joined
[17:57] *** takadonet left
[17:58] *** dakkar left
[18:02] *** alim left
[18:06] *** jfried joined
[18:07] *** shabble left
[18:10] *** flatwhatson__ left
[18:12] *** stkowski joined
[18:14] *** takadonet joined
[18:21] *** dsp_ left
[18:31] *** dsp_ joined
[18:41] *** mj41 joined
[18:50] *** Chillance joined
[18:51] *** shabble joined
[18:51] *** shabble left
[18:51] *** shabble joined
[18:52] *** GinoMan left
[18:53] <mberends> phew, marathon phone and skype calls. now JIT for #phasers :)

[18:54] *** masak joined
[18:54] <masak> I just showed ~50 people how to implement Minesweeper in Perl 6 \o/

[18:54] <mberends> \o/ \o/

[18:54] <mberends> (applause)

[18:55] <masak> I had time for everything, including some of the crazier refactors. ;)

[18:55] <mberends> masak++

[18:55] <masak> I don't think I cured anyone of the myth of Perl as a family of obfuscated languages...

[18:55] <masak> ...but I might have inspired a few to have a closer look.

[18:56] <masak> have to get back to the event. see you o/

[18:56] <mberends> o/

[18:59] <Util> masak++

[19:03] *** stkowski_ joined
[19:04] *** noganex_ is now known as noganex

[19:05] *** stkowski left
[19:05] *** stkowski_ is now known as stkowski

[19:06] *** bluescreen10 left
[19:12] *** impious joined
[19:19] *** MayDaniel joined
[19:21] <Util> tadzik++   # For excellent blogging and socializing

[19:21] <Util> mberends++ # For all the Jasmin to come...

[19:24] *** fhelmberger left
[19:24] *** stkowski left
[19:25] *** stkowski joined
[19:26] *** mj41 left
[19:34] *** plobsing left
[19:40] *** plobsing joined
[19:42] *** risou left
[19:50] *** plainhao left
[19:55] *** PacoLinux_ left
[19:57] *** alim joined
[20:03] *** alim left
[20:13] *** girafe joined
[20:14] <[Coke]> Util++

[20:14] *** leprevost left
[20:18] <donri> donri--  # for messing with his own karma

[20:19] *** alim joined
[20:23] <colomon> masak++

[20:24] *** GinoMan joined
[20:27] *** ashleydev left
[20:28] *** mj41 joined
[20:28] <dalek> roast: 3977901 | (Patrick Abi Salloum)++ | S02-builtin_data_types/parcel.t:

[20:28] <dalek> roast: Added tests for RT86764 Array method on parcel

[20:28] <dalek> roast: review: https://github.com/perl6/roast/commit/3977901182

[20:30] *** ashleydev joined
[20:32] <dalek> rakudo: b556bc7 | patrickas++ | src/core/Parcel.pm:

[20:32] <dalek> rakudo: Add Array method to Parcel RT86764

[20:32] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/b556bc7e3d

[20:36] *** ashleydev left
[20:38] *** ashleydev joined
[20:40] <donri> rakudo: say "foo".encode.perl

[20:41] <p6eval> rakudo 841b2c: OUTPUT¬´.new(contents => [102, 111, 111])‚ê§¬ª

[20:41] <donri> Not very useful eh?

[20:48] <dalek> rakudo: 9739a91 | (Martin Berends)++ | tools/test_summary.pl:

[20:48] <dalek> rakudo: [tools/test_summary.pl] make the git log command also work with git 1.5.x

[20:48] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/9739a912f5

[20:48] <dalek> rakudo: 4ab84a1 | (Martin Berends)++ | src/core/Parcel.pm:

[20:48] <dalek> rakudo: Merge branch 'master' of [email@hidden.address]
[20:48] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/4ab84a132d

[20:48] <flussence_> .new? That looks wrong.

[20:49] <moritz_> should be Buf.new

[20:50] <donri> rakudo: say Buf.new(contents => [102, 111, 111]).decode.perl

[20:50] <p6eval> rakudo 841b2c: OUTPUT¬´""‚ê§¬ª

[20:50] <donri> rakudo: say Buf.new(contents => [102, 111, 111]).perl

[20:50] <p6eval> rakudo 841b2c: OUTPUT¬´.new(contents => [])‚ê§¬ª

[20:50] <flussence_> er...

[20:50] <donri> =)

[20:52] <moritz_> rakudo: say Buf.new(102, 111, 111).perl

[20:52] <p6eval> rakudo 841b2c: OUTPUT¬´.new(contents => [102, 111, 111])‚ê§¬ª

[20:52] <moritz_> rakudo: say Buf.perl

[20:52] <p6eval> rakudo 841b2c: OUTPUT¬´Buf‚ê§¬ª

[20:52] <flussence_> rakudo: say unpack('H*', 0x0102030405).perl # does this work in p6?

[20:52] <p6eval> rakudo 841b2c: OUTPUT¬´Could not find sub &unpack‚ê§  in main program body at line 22:/tmp/DD4lMHhsg2‚ê§¬ª

[20:52] <flussence_> aww

[20:52] <donri> rakudo: say Buf.new(102, 111, 111).decode.perl

[20:53] <p6eval> rakudo 841b2c: OUTPUT¬´"foo"‚ê§¬ª

[20:53] <donri> So the .perl is not only wrong, but also wrong?

[20:53] *** PacoLinux left
[20:55] <flussence_> (I'll suggest that for a GSoC project if it's still open for ideas... make the binary stuff work!)

[20:58] <moritz_> rakudo: class A { has $.foo = 3 }; say A.new.perl

[20:58] <p6eval> rakudo 841b2c: OUTPUT¬´A.new(foo => 3)‚ê§¬ª

[21:01] *** mj41 left
[21:03] *** pkkm left
[21:04] <dalek> rakudo: d5ccf9f | moritz++ | src/core/Buf.pm:

[21:04] <dalek> rakudo: fix Buf.new

[21:04] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/d5ccf9fa05

[21:04] *** bluescreen10 joined
[21:04] <flussence_> \o/

[21:07] <masak> moritz_++

[21:08] <masak> <donri> donri--  # for messing with his own karma

[21:08] <masak> donri: and with causality, it seems! :)

[21:09] <masak> boy, I wish I had a time-turner sometimes. I'm going to force myself to do some slides manicure for an hour, and then go to bed.

[21:10] *** hudnix joined
[21:10] <masak> I just came back from a "Grand Panel", much like the one last year at GoOpen. TimToady was on it last year. allison was on it this year.

[21:11] <moritz_> masak: https://gist.github.com/882070 my minesweeper solution

[21:11] <masak> Perl actually got a small snide comment from one of the panelists (I forget who), but was defended *on Twitter* by someone in the audience.

[21:11] * masak looks

[21:12] <moritz_> way too many interuptions while writing though :(

[21:12] <masak> the tweet said something like "I actually find Perl kinda interesting". in my vanity, I tell myself that that person had just seen my kata demo. :P

[21:12] <moritz_> :-)

[21:13] <masak> moritz_: nice with the min and the max. I didn't think of that.

[21:13] <masak> I still think minmax is a solution without a problem, by the way.

[21:14] *** nymacro joined
[21:15] <masak> one thing that I toyed with was turning empties into 0s and bombs into 1s, and then just [+]-ing over eight .rotated versions of that field of bits.

[21:15] <masak> I noticed with happiness that .rotate already does nested arrays per the spec.

[21:16] <masak> ...but then I realized that what I needed wasn't a 'rotate' operation so much as a 'shift and if things go over the edge, throw them away' operation

[21:16] <masak> 'shift' as in bitops, not as in Perl.

[21:17] <moritz_> masak: I also thought about padding everything with 1 row/col of 0s at each side

[21:17] <moritz_> and then increment in the 8 neighboring cells

[21:17] *** PacoLinux joined
[21:17] <moritz_> and the slice out the board

[21:20] *** coldhead joined
[21:20] *** cjk101010 joined
[21:21] *** masak left
[21:21] *** flatwhatson_ joined
[21:23] <flatwhatson_> "The path of the righteous programmer is beset on all sides by the inequities of the clueless and the tyranny of evil project managers. Blessed is he, who in the name of achievement and solid technology, shepherds the users through the valley of ineptitude, for he is truly his customer's keeper and the finder of lost solutions. And I will strike down upon thee with great vengeance and furious anger those who would attempt to d

[21:23] <flatwhatson_> eploy without testing. And you will know my name is zedshaw when I lay my software upon thee."

[21:24] <tadzik> niice

[21:25] *** bluescreen10 left
[21:26] *** masak joined
[21:27] <masak> ...hotel wifi decided I had had one full day of wifi and needed to re-apply...

[21:27] *** Rotwang joined
[21:27] *** ymasory left
[21:28] <masak> moritz_: if I could get the padding without the coordinates changing (maybe with @array{} indexing), I wouldn't feel a need for a cousin to .rotate that shifted instead of rotating :)

[21:30] *** girafe left
[21:33] <masak> hey, look what I found: http://twitter.com/denisb/statuses/50249722878885888

[21:33] <masak> it was a bit unfortunate... I went right after the Ruby guy, and he didn't finish.

[21:34] <masak> but that was because he was tidy enough to spend time setting up BDD tests.

[21:41] <masak> it was definitely a growing experience doing a kata in public, as part of a group of people with different language backgrounds solving the same problem. I'd like to do it again sometime.

[21:42] *** nymacro left
[21:43] <PerlJam> masak: How much practice did you have before you did it in public?

[21:47] <masak> I can quantify that pretty accurately. I practiced three times. once yesterday and twice today.

[21:47] <masak> first time I took ~30 minutes to solve the whole thing. third time I took ~15 minutes. I was surprised.

[21:50] <PerlJam> masak: I did it once yesterday the stupid way (using no Per6isms at all) in about 40 minutes with my kids constantly interrupting me.  After solving it once I figured I could half that time without much difficulty.

[21:50] <masak> right.

[21:50] <masak> in the first time, I found myself pausing a lot thinking about choices.

[21:50] <masak> second and third time, less and less so.

[21:52] <PerlJam> It seems like it would be interesting to use these katas as a learning tool.   Put your code up on a big screen as you type and have the audience ask questions about what you're doing.

[21:52] <masak> that's basically what happened here.

[21:53] <PerlJam> okay, but for learning it would have to happen slower :)

[21:53] *** alester left
[21:53] <masak> troo

[21:54] <masak> the audience was clearly following what I was doing. the two times I got a bit stuck, someone shouted out what I was missing. ;)

[21:54] <PerlJam> simple katas like this also are amenable to solutions in multiple styles.  Mine would look roughly the same in Perl 5 as Perl 6, mortiz's would showcase more Perl 6 

[21:54] <PerlJam> etc.

[21:55] <masak> absolutely.

[21:55] <masak> just doing five independently evolved Perl 6 solutions would be interesting in itself.

[21:55] <masak> someone should do a contest along those lines.

[21:57] <PerlJam> masak++   :-)

[21:58] *** Sarten-X left
[22:02] *** plobsing left
[22:03] *** cjk101010 left
[22:03] *** Helios- left
[22:05] *** Helios- joined
[22:05] <masak> I could like this channel just for the free karma. :P

[22:05] <broquaint> Is Web in a usable state ATM and if not are there alternatives?

[22:05] <masak> no, and yes.

[22:05] <masak> Web.pm is in a state where there are interesting things to be pulled out of it.

[22:05] <masak> the most interesting things are already projects on their own that just happen to be in that repo.

[22:06] <masak> (and not especially related to the Web namespace)

[22:06] *** Helios- left
[22:06] *** Sarten-X joined
[22:07] *** Helios- joined
[22:07] <broquaint> Thanks, masak :)

[22:07] <broquaint> If I wanted to write a web app where's the best place to start?

[22:07] <masak> tell us more about your constraints/requirements.

[22:07] <masak> do you need it to be more than static pages?

[22:08] <masak> do you need it to be faster than reeeeeeallly slow?

[22:08] <masak> because right now, those two are more or less in opposition.

[22:09] <broquaint> Dynamic pages and speed would be good :)

[22:09] <masak> with November, we managed to get a GET request down to ~3 seconds. but that was without a framework -- we did our own makeshift CGI.pm clone.

[22:10] <broquaint> Hrm, interesting.

[22:10] <masak> that was on alpha, which was faster than current Rakudo.

[22:10] <masak> please don't say "interesting" about the makeshift CGI.pm clone. :P

[22:10] <masak> I don't want an empire of Perl 6 webapps to be built on that.

[22:10] <masak> really not.

[22:11] <broquaint> Fair enough.

[22:11] <broquaint> What I really want are Perl6's grammars.

[22:11] *** MayDaniel left
[22:12] <broquaint> What's the 5->6 interop like ATM?

[22:13] <masak> c.f. blizkost.

[22:14] <broquaint> Thanks again, masak++ :)

[22:14] <masak> the status of which jnthn and, hm, sorear?, can probably tell you more about.

[22:15] <tadzik> broquaint: my Dancer port was quite fast, but quite primitive too

[22:15] <tadzik> that's probably related :)

[22:15] <masak> tadzik: can you quantify "quite fast"?

[22:15] *** kaare_ left
[22:16] <tadzik> masak: It didn't seem "awfully slow" to me

[22:16] <tadzik> which is "quite fast" for Rakudo

[22:16] <masak> :)

[22:16] *** sftp left
[22:17] <tadzik> and speaking of grammars and frameworks... where is this

[22:17] <tadzik> .g grammar-based dispatch

[22:17] <phenny> tadzik: http://www.training-classes.com/providers/00/90/9061_scope.php

[22:17] *** Helios- left
[22:17] <tadzik> .g grammar-based dispatch ttjjss

[22:17] <phenny> tadzik: http://ttjjss.wordpress.com/2010/08/09/so-you-want-to-write-a-perl-6-module/

[22:17] <tadzik> no!

[22:17] <masak> bad google!

[22:17] <tadzik> broquaint: see http://ttjjss.wordpress.com/2010/11/27/grammar-dispatching-%E2%80%93-a-step-further/

[22:18] <tadzik> well, duckduckgo is doing only a little bit better

[22:18] <broquaint> Thanks, tadzik, will look into it tomorrow :)

[22:18] <masak> duckduckgo++ # silly name, nice search engine

[22:18] <tadzik> also, there is supernovus' ww6 framework

[22:18] <tadzik> https://github.com/supernovus/ww6/

[22:19] *** Helios- joined
[22:19] <masak> does anyone have a source for the "community's rewrite of the community" quote?

[22:20] <jnthn> It used to be quoted on dev.perl.org/perl6/ iirc

[22:20] <jnthn> maybe still is

[22:20] <sbp> masak: http://strangelyconsistent.org/blog/the-wish-the-tuning-fork-and-the-one-true-heir

[22:20] <sbp> right there on your own blog

[22:20] <sbp> it's the source of everything!

[22:21] <sbp> earliest I've found so far is http://slashdot.org/story/00/07/19/203221/Larry-Wall-Announces-Perl-6

[22:21] <sbp> so it's pre 19 Jul 2000 at least...

[22:23] <sbp> ugh, the link to http://conferences.oreillynet.com/perl4/ from http://use.perl.org/articles/00/07/19/161217.shtml is broken

[22:23] <masak> so it's bound to have been on that cruise, right.

[22:23] <masak> day after the cup was thrown.

[22:23] <masak> mug.

[22:24] <masak> whatever.

[22:27] <sbp> there is a Proceedings of the Perl Conference 4.0 book, by O'Reilly I think

[22:27] <sbp> perhaps somebody here has it?

[22:28] <sbp> nevermind, it's on Google Books snippet view

[22:28] <sbp> .title http://books.google.co.uk/books?ei=ZSKJTc_JDojAhAet76m6Dg

[22:28] <phenny> sbp: Google Books

[22:28] <sbp> and there's only one result for "rewrite of" in the book, on p.134

[22:28] <sbp> which isn't related

[22:29] *** plobsing joined
[22:29] *** alfieANDfred joined
[22:30] *** masak` joined
[22:30] *** alfieANDfred left
[22:30] *** masak`` joined
[22:31] <sbp> the context on http://www.foo.be/docs/tpj/issues/vol5_3/tpj0503-0001.html suggests 18 Jul 2000 for the utterance

[22:32] <sbp> which is actually the mug throwing day

[22:32] *** masak` left
[22:32] *** masak`` left
[22:32] *** masak` joined
[22:32] <masak`> hm, the 4th State of the Onion just says "Perl 6 is going to be designed by the community."

[22:33] *** masak left
[22:34] *** masak` is now known as masak

[22:34] *** Mowah left
[22:37] <sbp> masak: 

[22:37] <sbp> The community stopped and shrugged

[22:37] <sbp> That day that Orwant threw his mugs,

[22:37] <sbp> And Le Mur Grande cast it all to hugs

[22:38] *** mtk left
[22:38] <masak> aww ;)

[22:39] <sbp> lost two lines because of flooding

[22:39] <sbp> let's try again, stupid freenode

[22:39] <sbp> ‚Äî

[22:39] <sbp> The community stopped and shrugged

[22:39] <sbp> That day that Orwant threw his mugs,

[22:39] <sbp> And Le Mur Grande cast it all to hugs

[22:39] <sbp> So that the world would soon see pugs:

[22:39] <sbp> May all our Perl6 lack of bugs!

[22:39] <sbp> ‚Äî

[22:39] <masak> sbp++

[22:40] <sbp> they added some new throttling code to irc-seven, it's really very annoying

[22:40] <sbp> especially because it says your lines have been "throttled"

[22:40] <sbp> meaning, actually, to death: the lines are not sent to the recipient

[22:41] *** Helios- left
[22:42] *** Helios- joined
[22:43] <donri> Incompatible versions of `core_ops' oplib. Found 3.2.0 but loaded 3.1.0  # :(

[22:44] <donri> for my own HLL after new parrot build

[22:46] <masak> maybe recompile the HLL?

[22:46] <Tene> donri: you've got old stuff deployed or used or something that needs rebuilt

[22:46] <Tene> donri: use strace to find out what it is, if it's not otherwise clear

[22:46] <donri> i did setup.pir build

[22:47] <donri> oh wait setup.pir clean build

[22:47] <donri> now works :D

[22:47] <donri> didn't see clean documented anywhere but took a guess

[22:49] *** plobsing left
[22:57] <masak> Tene++

[23:03] *** aindilis left
[23:03] *** GinoMan2440 joined
[23:03] *** aindilis joined
[23:04] *** plobsing joined
[23:05] *** kfo_ joined
[23:05] *** GinoMan left
[23:08] <masak> 'night, #perl6

[23:08] <tadzik> o/

[23:08] <jnthn> o/

[23:09] *** kfo left
[23:12] *** masak left
[23:14] <jnthn> Ah, breakfast time, bbl. :)

[23:14] <Tene> morning jnthn

[23:14] <jnthn> morning, Tene 

[23:20] *** hercynium left
[23:20] *** jfried left
[23:21] *** Rotwang left
[23:38] *** cosimo joined
[23:44] *** impious left
[23:53] *** plobsing left
[23:56] *** Trashlord left
[23:57] *** plobsing joined
