[00:00] *** risou_awy is now known as risou

[00:02] *** Chillance left
[00:03] <diakopter> colomon: teehee sexpexted

[00:07] *** risou is now known as risou_awy

[00:09] *** ispeak joined
[00:11] *** replore joined
[00:21] <Radvendii> nom: my @a=1,2,3; for @a {$_++}

[00:21] <p6eval> nom 1eadbb:  ( no output )

[00:21] <Radvendii> b: my @a=1,2,3; for @a {$_++}

[00:22] <p6eval> b 1b7dd1:  ( no output )

[00:22] * araujo wonders what it is the status of the current available perl6 implementations

[00:22] <Radvendii> b: my @a=1,2,3; for @a {say ++$_}

[00:22] <p6eval> b 1b7dd1: OUTPUT«2␤3␤4␤»

[00:22] <Radvendii> nom: my @a=1,2,3; for @a {say ++$_}

[00:22] <p6eval> nom 1eadbb: OUTPUT«2␤3␤4␤»

[00:23] <Radvendii> nom: my @a=rand(),rand(),rand(); for @a {say ++$_}

[00:23] <p6eval> nom 1eadbb: OUTPUT«1.26594015590763␤1.88294592625195␤1.3494678012013␤»

[00:23] <diakopter> nom: my @a=1,2,3; for @a {++$_}; say @a;

[00:23] <p6eval> nom 1eadbb: OUTPUT«2 3 4␤»

[00:24] <diakopter> wheh

[00:24] <diakopter> I must have a profound misassumption about how for @a works

[00:25] <diakopter> $_ points to the slot?!

[00:25] <Radvendii> $_ points to the element of the array

[00:25] <Radvendii> what is the speed of perl compared to C?

[00:26] <Radvendii> does mutable arrays slow it down significantly?

[00:27] <diakopter> $_ pointing to the slot is ... very strange.

[00:27] <diakopter> how have I missed this up until now

[00:27] <Radvendii> why?

[00:29] <diakopter> nom: my @a=1,2,3; for @a {$_ = "a"}; say @a;

[00:29] <p6eval> nom 1eadbb: OUTPUT«a a a␤»

[00:29] <diakopter> that is very unexpected to me.  I'm sorry.

[00:29] * geekosaur thought that was expected

[00:29] <Radvendii> uh... yeah

[00:30] <Radvendii> what did you expect?

[00:30] <geekosaur> (and it is certainly very Perl)

[00:30] <diakopter> I thought $_ pointed to the object, the array element, not the container that holds the object.

[00:30] <Radvendii> what?

[00:30] <diakopter> what what?

[00:31] <diakopter> like I said, I'm sorry for expecting the wrong thing.

[00:32] <Radvendii> no no, it's fine, i just dont understand what you *were* expecting

[00:33] <diakopter> I was expecting it to behave like every other iterator in every other language I've used.

[00:34] <geekosaur> this is longstanding perl behavior, back to at least sometime in the 3.x series; iterators actually allow you to mutate the thing iterated over

[00:36] *** ispeak left
[00:37] <diakopter> somehow I have missed this.

[00:40] *** dorlamm joined
[00:50] *** snearch left
[00:53] <Juerd> What's mono doing on feather, besides causing high loads?

[00:53] <colomon> running niecza?

[00:53] *** xaka joined
[00:54] <Radvendii> is perl6 slower than perl5?

[00:54] <Juerd> [Coke]: Could you nice(1) the mono processes, please, and perhaps figure out something to moderate their memory usage?

[00:54] <Radvendii> in general?

[00:54] <Juerd> Radvendii: Perl 6 is a language, not a program, so that question can't really be answered.

[00:55] <diakopter> yes, in general the implementations are much slower.

[00:55] <Juerd> Currently, implementations of Perl 6 are typically slower than Perl 5, but this is expected to change.

[00:55] <Radvendii> oh i see, it's a matter of the implementations, rather than the specifications

[00:55] <Radvendii> that makes sense

[00:55] <diakopter> who expects the implementations to improve dramatically? I don't know of anyone.

[00:56] <Juerd> diakopter: You don't know me? :(

[00:56] <Juerd> Radvendii: Of course, if you meant to refer to the languages, then I'd say Perl 6 is much faster because it has so many useful features built-in that Perl 5 doesn't, many of which will save the programmer a lot of time.

[00:57] <Radvendii> i'm not talking about programmer time, i meant compile/run time

[00:57] <diakopter> obviously :)

[00:57] <Juerd> diakopter: I seriously expect nothing less than dramatic performance improvements from several implementations.

[00:58] <Juerd> Perhaps not this year, but in 2012 and subsequent years, I'm convinced it'll be sped up by staggering ratios.

[00:58] <diakopter> afaik, sorear doesn't expect dramatic improvements from niecza unless it's ported/rewritten in another environment, and same for jnthn/pmichaud.

[01:00] <Juerd> It'll happen, one way or another, and not just because computers themselves are getting faster :)

[01:00] *** slavik2 left
[01:01] <diakopter> unless I was working on it myself, I wouldn't have such an expectation.

[01:01] <diakopter> unless of course someone actually said it.

[01:01] <diakopter> 18:32 < Radvendii> no no, it's fine, i just dont understand what you *were* expecting

[01:01] <diakopter> ack mispaste

[01:01] <Juerd> I don't know exactly how and when, but I know why: it's necessary to have something fast, or a lot of work will have been a huge waste of energy...

[01:02] <diakopter> of course that's the desire, but there is a vast dearth of resources available to work on it.

[01:03] <diakopter> and apparently always will be

[01:04] <Juerd> Just means that the work will either take longer, or die off prematurely.

[01:05] <Radvendii> is larry involved in the coding much?

[01:05] <diakopter> intentionally not, except for the standard grammar

[01:06] <Juerd> I'm off to bed. Good night :)

[01:06] *** raiph joined
[01:06] <Radvendii> good night

[01:06] <raiph> \o radvendii

[01:06] <Radvendii> \o?

[01:06] <diakopter> raiph is waving goodbye to you

[01:07] <diakopter> not understanding that you were talking to Juerd

[01:07] <raiph> diakopter: i believe jnthn expects rakudo to get way faster

[01:07] <Radvendii> oh

[01:07] <raiph> oops, goodnight juerd, hello radvendii

[01:08] <Radvendii> haha

[01:08] *** donri left
[01:08] <Radvendii> what was C written in?

[01:08] <raiph> c

[01:09] <diakopter> <eye roll>

[01:09] *** franek joined
[01:09] <Radvendii> seriously though...

[01:09] <flussence> B

[01:10] <flussence> http://en.wikipedia.org/wiki/BCPL

[01:10] <Radvendii> oh... thats right! didn't B never actually come out because C came out first?

[01:13] *** lestrrat left
[01:13] *** dorlamm left
[01:14] <raiph> diakopter: sorry. wikipedia says "assembly language". 

[01:14] <diakopter> http://cm.bell-labs.com/who/dmr/chist.html

[01:14] *** lestrrat joined
[01:14] *** Radvendii is now known as Radvendii_BRB

[01:15] <raiph> wikipedia claims b did come out. i know bcpl did, because i spent 3 years writing in it.

[01:15] *** packetknife joined
[01:16] <raiph> 1985-87. no types, and only assembly level debugger. shudder.

[01:16] *** colomon left
[01:17] <geekosaur> ...and now you also know the early history of C.  and why in K&R C types were largely optional (defaulting to int)

[01:18] *** fieldsa joined
[01:22] <fieldsa> I seek run() shell cmd in bg w/o wait, is a way from qx// directly?  I attempt run("$cmd &"), but it waits on child.

[01:23] <fieldsa> I do not need to capture or send input via socketpair.  I also notice there is no fork?

[01:24] *** MindosCheng left
[01:24] *** Radvendii_BRB left
[01:26] <sorear> Juerd: was niecza causing a problem?

[01:26] *** colomon joined
[01:26] <diakopter> Juerd went to bed

[01:27] *** xjiujiu joined
[01:27] <diakopter> colomon: I was giggling at your sexpexted

[01:27] <sorear> o/ colomon

[01:27] <colomon> o/

[01:27] <sorear> diakopter: that was mine

[01:27] <colomon> diakopter: it was sorear's actually

[01:28] <diakopter> what's a sexpex

[01:28] <colomon> I was giggling at it too, actually.  :)

[01:28] <sorear> stringified_expected

[01:28] <diakopter> oh, you typoed x for c then :P

[01:28] <sorear> really is() should be using eqv

[01:28] <colomon> that typo might have been me

[01:30] <colomon> sorear: I take it you're working on getting things like \c[ARABIC NUMBER SIGN] working?

[01:30] <sorear> colomon: yes

[01:31] * colomon is drooling at the prospect of getting all those S05-mass tests running

[01:31] * sorear fetches a towel

[01:32] *** xjiujiu left
[01:33] *** xjiujiu joined
[01:35] <fieldsa> pugs apparently has &fork(), but rakudo doesn't?

[01:36] <fieldsa> I don't want to rush them along, but I would consider fork() fairly good feature to have, perhaps it is in the pipeline, so to speak?

[01:36] <sorear> eh.  rakudo is rather chained by portability

[01:36] <sorear> also, we don't say "them" here

[01:37] *** shinobicl_ joined
[01:37] <sorear> I'm suprised run("$cmd &") doesn't work for you.  that's what I would have tried

[01:39] *** envi_ joined
[01:39] *** franek left
[01:41] <dalek> roast: 9fa9559 | (Solomon Foster)++ | S02-names-vars/names.t:

[01:41] <dalek> roast: Fudge for niecza.

[01:41] <dalek> roast: review: https://github.com/perl6/roast/commit/9fa95592e4

[01:42] <sorear> rakudo: say "\c[NO SUCH CHARACTER]"

[01:42] <p6eval> rakudo 1eadbb: OUTPUT«===SORRY!===␤Unrecognized character name NO SUCH CHARACTER at line 1, near "]\""␤»

[01:44] *** xjiujiu left
[01:45] <fieldsa> sorear: running strace, seems there is a wait4() - perhaps has to do w/ my config

[01:45] <dalek> niecza: d9f1c7b | sorear++ | lib/ (2 files):

[01:45] <dalek> niecza: Add name->character inverse mapping support

[01:45] <dalek> niecza: review: https://github.com/sorear/niecza/commit/d9f1c7b561

[01:53] *** alvis left
[01:54] <dalek> niecza: 8c76823 | (Solomon Foster)++ | t/spectest.data:

[01:54] <dalek> niecza: Turn on S02-names-vars/names.t.

[01:54] <dalek> niecza: review: https://github.com/sorear/niecza/commit/8c768239a1

[01:55] *** alvis joined
[01:57] <sorear> I guess Phase 2 can be started now. :>

[01:57] <colomon> btw, I find it interesting how many times niecza and rakudo are both fudging the same tests

[01:57] *** alc joined
[01:58] <fieldsa> run("$cmd &") gets stopped on waitpid(-1,) even though the child is already fork(), certainly I'll investigate further

[01:58] *** raiph left
[01:58] <colomon> sorear: "Action method charname not yet implemented"?

[01:59] <sorear> colomon: that's part of phase 2

[01:59] <colomon> ah

[01:59] <sorear> so far I've been working at the Niecza::UCD level

[02:00] <sorear> now I need to 1. add unidata to the repository/build system 2. link stuff into the compiler

[02:02] * sorear wonders how best to note the origins of the 400kb binary file ey is about to check in

[02:07] *** s1n joined
[02:07] *** xjiujiu joined
[02:09] *** xjiujiu left
[02:17] <dalek> niecza: e0d294d | sorear++ | / (3 files):

[02:17] <dalek> niecza: Embed unidata into Kernel.dll, check in a working quasi-finalized version

[02:17] <dalek> niecza: review: https://github.com/sorear/niecza/commit/e0d294d7f9

[02:17] <sorear> now, it will be possible to "use Niecza::UCD" out of the box

[02:18] <sorear> rakudo: say "SS" ~~ /:i ß/

[02:18] <p6eval> rakudo 1eadbb: OUTPUT«#<failed match>␤»

[02:19] <sorear> rakudo: say "ß" ~~ /:i SS/

[02:19] <p6eval> rakudo 1eadbb: OUTPUT«#<failed match>␤»

[02:19] <sorear> rakudo: say "SSß" ~~ /:i ßSS/

[02:19] <p6eval> rakudo 1eadbb: OUTPUT«#<failed match>␤»

[02:19] <sorear> b: say "SSß" ~~ /:i ßSS/

[02:19] <p6eval> b 1b7dd1: OUTPUT«␤»

[02:19] <sorear> b: say $( "SSß" ~~ /:i ßSS/ )

[02:19] <p6eval> b 1b7dd1: OUTPUT«␤»

[02:19] <sorear> b: say ?( "SSß" ~~ /:i ßSS/ )

[02:19] <p6eval> b 1b7dd1: OUTPUT«Bool::False␤»

[02:19] *** xaka left
[02:23] *** shinobicl_ left
[02:44] *** oZ] joined
[02:44] *** fieldsa left
[02:44] *** oZ] left
[02:46] *** Radvendii joined
[02:46] *** xaka joined
[02:52] <sorear> o/ Radvendii

[02:56] <Radvendii> hey

[02:56] <Radvendii> whats up?

[02:57] *** Radvendii left
[02:57] *** Radvendi1 joined
[02:58] *** Radvendi1 left
[02:58] *** Radvendii joined
[02:59] *** xjiujiu joined
[02:59] *** Radvendii left
[02:59] *** Radvendii joined
[02:59] <sorear> Radvendii: was trying to greet you, although you seem to be having connection troubles

[03:00] <Radvendii> no... i'm trying to figure out how to remove automatic connections from irssi

[03:00] <Radvendii> :P

[03:00] <Radvendii> hey

[03:00] <sorear> I usually do that by /quitting and deleting stuff from .irssi/config

[03:00] <sorear> there's probably a more elegant way :D

[03:01] <Radvendii> yeah, you're not supposed to mess with that file

[03:01] <Radvendii> i think i will anyways though...

[03:01] <Radvendii> yay tabbed terminals!

[03:01] <Radvendii> (i dont even have to /quit

[03:01] <Radvendii> anwyays, how is life going for you?

[03:03] <Radvendii> brb

[03:03] *** Radvendii left
[03:03] *** Radvendi1 joined
[03:03] <Radvendi1> it works :D

[03:05] <Radvendi1> does panda work with niecza?

[03:05] <sorear> very doubtful

[03:06] <sorear> (my life) classes are over for the year; I'm madly hacking in an attempt to drown out the existential angst

[03:07] <Radvendi1> sweet

[03:07] <Radvendi1> :P

[03:07] <Radvendi1> can i help?

[03:07] <sorear> with what?

[03:07] <Radvendi1> "madly hacking"

[03:07] <Radvendi1> namely, niecza?

[03:07] <sorear> yes, niecza.

[03:08] <Radvendi1> (does it work on mac, by the way)?

[03:08] <sorear> niecza: use Niecza::UCD

[03:08] <p6eval> niecza v12-82-g8c76823: OUTPUT«Rebuild in progress␤»

[03:08] <sorear> Radvendi1: yes it does

[03:08] <Radvendi1> sweet

[03:11] <sorear> I'm sure you can help

[03:13] <Radvendi1> damnit. irssi got my username wrong again!

[03:15] <Radvendi1> what is *wrong* with it

[03:16] <sorear> at the instant you logged in, Radvendii was taken

[03:16] <sorear> try: /nick Radvendii

[03:16] <Radvendi1> it says "Nick Radvendii already in use"

[03:16] <Radvendi1> im going to restart irssi...

[03:16] <Radvendi1> brb

[03:16] *** Radvendi1 left
[03:17] *** Radvendi1 joined
[03:17] <Radvendi1> there we go

[03:17] <sorear> Radvendi1: it's not irssi's fault that it can't use Radvendii

[03:17] <Radvendi1> no

[03:17] <Radvendi1> wtf??

[03:17] <sorear> Radvendi1: STOP

[03:17] <sorear> Radvendi1: you have two irc clients open

[03:17] <Radvendi1> i do?

[03:17] <sorear> yes

[03:17] <sorear> /whois Radvendi1

[03:17] <sorear> it's a current connection from your computer.

[03:18] <sorear> /whois Radvendii

[03:18] <sorear> and Radvendii even responds to pings, so it's not a ghost conn

[03:19] *** Radvendii joined
[03:19] *** Radvendi1 left
[03:19] <Radvendii> yay

[03:19] <sorear> Radvendii: could you nopaste your .irssi/config?

[03:20] <Radvendii> nopaste?

[03:20] <sorear> we need a better verb

[03:20] <sorear> put it on a pastebin somewhere so I can point out the mistake

[03:22] <Radvendii> gah! i used to be able to do it in github. now that i have an account, i cant figure out how!

[03:23] <Radvendii> i think i may have solved it...

[03:23] <Radvendii> let me try again

[03:23] *** Radvendii left
[03:23] *** Radvendi1 joined
[03:23] <colomon> 'night, all.  

[03:23] <Radvendi1> nope

[03:24] <Radvendi1> good night

[03:24] <Radvendi1> but now it's happening to all of my channels...

[03:24] <sorear> Radvendi1: install App::Nopaste and run nopaste -x ~/.irssi/config

[03:24] <sorear> cpanm -Si App::Nopaste

[03:26] <sorear> hey, Radvendi1, how good are you with written Hebrew?

[03:26] <Radvendi1> uh...

[03:26] <Radvendi1> i'm better reading than writing

[03:27] <Radvendi1> i'm better understanding spoken though...

[03:27] <Radvendi1> why?

[03:27] <sorear> perl 6 i18n support; I want to know who I can direct questions to

[03:28] <Radvendi1> i dont see how that has to do with hebrew...

[03:28] <sorear> it's a language with a peculiar orthography

[03:29] <sorear> like if I have questions about ß, I go to moritz

[03:29] <Radvendi1> oh

[03:29] <Radvendi1> i could probably help on that...

[03:30] <Radvendi1> i could ask other members of my family if i didnt know, too

[03:30] <Radvendi1> is nopaste a bash command or run from perl?

[03:32] <Radvendi1> brb

[03:32] *** Radvendi1 left
[03:32] *** Radvendii joined
[03:33] <Radvendii> win :D

[03:33] <Radvendii> it worked

[03:33] <sorear> \o/

[03:33] <sorear> nopaste is a shell command, yes

[03:33] <Radvendii> then how do i install it with cpan? doesn't that do perl modules?

[03:33] <sorear> it's a Perl module that comes with a shell command

[03:33] <Radvendii> GAH! So many dependencies!

[03:34] <sorear> 1. use cpanm

[03:34] <sorear> 2. you need those depenedencies anyway

[03:34] <Radvendii> and now it's telling me i dont have YAML installed! i specifically installed it to get rid of those errors

[03:34] <Radvendii> or warnings, as they may be

[03:37] <Radvendii> is there no ./config(ure)(.PL) for niecza?

[03:39] <sorear> correct

[03:39] <Radvendii> make is giving me an error

[03:39] *** Patterner left
[03:39] <sorear> what kind of error

[03:40] * sorear guesses: mono: command not found

[03:40] <Radvendii> wget --no-check-certificate -Oboot/niecza.zip $(cat FETCH_URL)

[03:40] <Radvendii> wget: unrecognized option '--no-check-certificate'

[03:40] <Radvendii> Usage: wget [OPTION]... [URL]...

[03:40] <Radvendii> Try `wget --help' for more options.

[03:40] <Radvendii> gnumake: *** [.fetch-stamp] Error 2

[03:40] <Radvendii> nope

[03:40] <sorear> wow

[03:40] <sorear> what version of wget do you have?

[03:40] <sorear> try removing the offending option

[03:40] <Radvendii> 1.13

[03:41] <sorear> wget -V | grep https ?

[03:41] <Radvendii> why is vim making a ding noise every time i quit out!! grr....

[03:41] *** Psyche^ joined
[03:41] *** Psyche^ is now known as Patterner

[03:42] <Radvendii> why the capital v? just to be not standard?

[03:42] <Radvendii> +digest -https +ipv6 -iri +large-file -nls -ntlm +opie -ssl 

[03:42] <Radvendii> do i have to recompile wget?!

[03:42] <sorear> nah, that *is* standard

[03:42] <Radvendii> i've always seen lowercase

[03:43] <sorear> -V is short for --version

[03:43] <Radvendii> i know

[03:43] <sorear> -v is short for --verbose

[03:43] <Radvendii> oh

[03:43] <Radvendii> right

[03:43] <Radvendii> i did know that

[03:43] <Radvendii> back to the point, i dont have https compiled in, do i have to recompile it?

[03:45] <sorear> no, you should be able to work around it somehow.

[03:45] <sorear> some ideas:

[03:45] <Radvendii> is it better(easier) to just recompile it? :P

[03:45] <sorear> - removing the s from FETCH_URL might work

[03:45] <sorear> I've never tried to recompile wget on Mac OS X

[03:46] <sorear> - or download manually and then fake the Makefile directions

[03:46] <Radvendii> i think i had to do it a while ago...

[03:46] <Radvendii> why dont they compile with these things by default?

[03:46] <Radvendii> ugh

[03:46] <sorear> You're the first person I've heard to have this problem.

[03:47] <Radvendii> great.

[03:47] <sorear> You're not the first OSX user I've had.

[03:47] <sorear> You have an exceptionally old/new/weird OSX, I'm afraid

[03:48] <Radvendii> ugh.

[03:48] *** alc left
[03:48] <Radvendii> can i wget wget?

[03:48] <Radvendii> :P

[03:49] <Radvendii> yeah, i definetily had to install wget

[03:49] <Radvendii> my mac didnt come with it

[03:49] <benabik> OS X comes with curl instead of wget

[03:49] <Radvendii> ah

[03:50] <sorear> Niecza OSX folks!  What did y'all do to make the wget call work?

[03:50] <Radvendii> you know... inevitably this install of nopaste is going to end in some minor error

[03:50] <benabik> I recommend homebrew

[03:50] <Radvendii> and then i'm going to cry

[03:50] <Radvendii> homebrew?

[03:50] <sorear> Radvendii: I supposed your Perl install is so virgin it doesn't even have Moose yet?

[03:51] <benabik> http://mxcl.github.com/homebrew/

[03:51] <Radvendii> sorear: i have no idea. i just install things on a need basis. but *so* often it just doesnt work. like with SDL.

[03:51] <Radvendii> i dont remember if i got SDL working in the end

[03:51] *** xjiujiu left
[03:51] <benabik> It's a way to install utilities.

[03:52] <Radvendii> benabik: are you kidding me? another macports?

[03:52] <benabik> Radvendii: I've been through macports and fink, and homebrew has been the least painful option.

[03:52] <Radvendii> does it let you add options to the install?

[03:54] <benabik> It does allow formula to define options.

[03:54] <Radvendii> :O nopaste... it just... worked...

[03:54] <Radvendii> im blown away

[03:55] <Radvendii> now to see if i can actually use it...

[03:55] <Radvendii> what did you say to use? cpanm?

[03:55] <dalek> niecza: 8533895 | sorear++ | / (4 files):

[03:55] <dalek> niecza: Add <:Foo>, <:gc(/L/)> syntax.

[03:55] <dalek> niecza: review: https://github.com/sorear/niecza/commit/853389549d

[03:55] <sorear> I wanted you to use cpanm to *install* nopaste

[03:56] <sorear> it's a smaller faster and less breakable version of the 'cpan' instlaler

[03:56] <sorear> now: nopaste ~/.irssi/config

[03:56] <Radvendii> what?

[03:56] <Radvendii> so i shouldnt be using cpan period?

[03:57] *** s1n left
[03:57] <sorear> I don't think you should.

[03:57] <Radvendii> sweet, so nopaste worked (i already solved the problem though

[03:57] <Radvendii> i dont have cpanm...

[03:58] <Radvendii> should i cpan cpanm?

[03:58] <Radvendii> or maybe macports?

[03:58] <Radvendii> or homebrew?

[03:58] <Radvendii> or wget

[03:58] <Radvendii> gah!!!

[03:58] <Radvendii> :P

[03:58] <benabik> cpanm is a CPAN module, I think.  :-D

[03:58] <sorear> cpan -i App::cpanminus or http://cpanmin.us/

[03:58] <Radvendii> speaking of which, homebrew is not installing

[03:59] *** envi_ left
[03:59] *** xjiujiu joined
[03:59] <Radvendii> share/man/: Cannot extract through symlink share

[03:59] <Radvendii> share/man/man1/: Cannot extract through symlink share

[03:59] <Radvendii> share/man/man1/brew.1: Cannot extract through symlink share

[03:59] <Radvendii> tar: Error exit delayed from previous errors.

[03:59] <Radvendii> Failed during: /bin/bash -o pipefail -c '/usr/bin/curl -skSfL https://github.com/mxcl/homebrew/tarball/master | /usr/bin/tar xz -m --strip 1'

[03:59] <benabik> Radvendii: If you already have macports, I probably wouldn't bother with homebrew unless you want to switch.

[04:00] *** s1n joined
[04:00] *** s1n left
[04:00] *** xjiujiu left
[04:00] <Radvendii> well, it's always another thing to try if there isn't a macport available

[04:00] <Radvendii> ...

[04:02] *** xjiujiu joined
[04:03] <Radvendii> except that it's not working...

[04:04] <Radvendii> GAH

[04:04] <Radvendii> now port selfupdate isn't working!!

[04:04] <Radvendii> no, i think i got it by adding sudo :P

[04:04] <Radvendii> good old sudo :-D

[04:11] <Radvendii> wow. i just freed about 48 gb of my hard drive space from emptying my trash

[04:14] <sorear> perl6: say "foo2bar" ~~ /<:gc(/N/)>/

[04:14] <p6eval> rakudo 1eadbb: OUTPUT«===SORRY!===␤regex assertion not terminated by angle bracket at line 1, near "(/N/)>/"␤»

[04:14] <p6eval> ..pugs b927740: OUTPUT«*** ␤    Unexpected "N"␤    expecting term postfix, operator, ":" or ","␤    at /tmp/i3SpiaXKvp line 1, column 25␤»

[04:14] <p6eval> ..niecza v12-84-g8533895: OUTPUT«#<match from(3) to(4) text(2) pos([].list) named({}.hash)>␤»

[04:14] <sorear> er?  I thought rakudo added that already

[04:17] *** jaldhar joined
[04:31] <sorear> niecza: say (2**256)- + ~(2**256)

[04:31] <p6eval> niecza v12-84-g8533895: OUTPUT«0␤»

[04:31] <sorear> niecza: say (3**256)- + ~(3**256)

[04:31] <p6eval> niecza v12-84-g8533895: OUTPUT«0␤»

[04:32] <sorear> niecza: say ~(3**64)

[04:32] <p6eval> niecza v12-84-g8533895: OUTPUT«3433683820292512484657849089281␤»

[04:32] <sorear> niecza: say +~(3**64)

[04:32] <p6eval> niecza v12-84-g8533895: OUTPUT«3.43368382029251E+30␤»

[04:35] *** sivoais left
[04:35] <sorear> niecza: say ~(3**64+1)

[04:35] <p6eval> niecza v12-84-g8533895: OUTPUT«3433683820292512484657849089282␤»

[04:36] <sorear> at least one direction is lossless

[04:39] *** replore left
[04:39] *** replore joined
[04:41] *** sivoais joined
[04:43] *** araujo left
[04:54] *** jaldhar left
[04:58] *** molaf joined
[05:01] *** jaldhar joined
[05:07] *** alvis left
[05:09] *** alvis joined
[05:12] *** xjiujiu left
[05:12] *** xjiujiu joined
[05:17] *** sftp left
[05:21] *** orafu left
[05:27] *** molaf left
[05:42] *** kaleem joined
[05:44] *** baest joined
[05:47] *** baest left
[06:00] <dalek> niecza: 0030424 | sorear++ | test.pl:

[06:00] <dalek> niecza: Fix some tests that didn't like the is change

[06:00] <dalek> niecza: review: https://github.com/sorear/niecza/commit/0030424905

[06:00] <dalek> niecza: 0a6396e | sorear++ | / (3 files):

[06:00] <dalek> niecza: Refactor number handling in the parser and add \c

[06:00] <dalek> niecza: review: https://github.com/sorear/niecza/commit/0a6396e5d3

[06:00] <sorear> perl6: say "foo2bar" ~~ /<:gc(/N/)>/

[06:00] <p6eval> rakudo 1eadbb: OUTPUT«===SORRY!===␤regex assertion not terminated by angle bracket at line 1, near "(/N/)>/"␤»

[06:00] <p6eval> ..niecza v12-84-g8533895: OUTPUT«#<match from(3) to(4) text(2) pos([].list) named({}.hash)>␤»

[06:00] <p6eval> ..pugs b927740: OUTPUT«*** ␤    Unexpected "N"␤    expecting term postfix, operator, ":" or ","␤    at /tmp/QaEgCdW6zi line 1, column 25␤»

[06:01] <sorear> niecza: use Unicode::UCD; say value("na", "\x3BB")

[06:01] <p6eval> niecza v12-84-g8533895: OUTPUT«Unhandled exception: Unable to locate module Unicode::UCD in @path␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 880 (die @ 2) ␤  at /home/p6eval/niecza/src/NieczaPathSearch.pm6 line 23 (NieczaPathSearch.load_module @ 11) ␤  at /home/p6eval/niecza/sr…

[06:01] <sorear> niecza: use Niecza::UCD; say value("na", "\x3BB")

[06:01] <p6eval> niecza v12-84-g8533895: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Q:CgOp not allowed in safe mode at /home/p6eval/niecza/lib/Niecza/UCD.pm6 line 4:␤------> [32m { (ucd_get_ranges {$table} {$matcher}) [33m⏏[31m}[0m␤␤Q:CgOp not allowed in safe mode at /home/p6eval/niecza/lib/Niecza/UCD.p…

[06:05] <sorear> moritz: Helmut W. returned my mail

[06:16] *** overrosy_ left
[06:17] <moritz> sorear: "returned" as in "delivery failed"?

[06:17] <phenny> moritz: 19 Dec 21:48Z <diakopter> tell moritz typo in your last spec commit

[06:17] * moritz tries to sleep again

[06:18] <sorear> moritz: no, a human replied.

[06:18] *** overrosy joined
[06:18] * sorear will probably have to memorize what the W. stands for eventually

[06:41] <dalek> niecza: 78dbb2f | sorear++ | src/ (2 files):

[06:41] <dalek> niecza: Remove unneeded [0]s

[06:41] <dalek> niecza: review: https://github.com/sorear/niecza/commit/78dbb2fa88

[06:50] *** Trashlord left
[06:51] *** Radvendii left
[07:00] *** koban joined
[07:10] <dalek> niecza: 746a6bc | sorear++ | src/ (3 files):

[07:10] <dalek> niecza: Mergeback

[07:10] <dalek> niecza: review: https://github.com/sorear/niecza/commit/746a6bcb60

[07:14] *** wtw joined
[07:23] *** fridim_ joined
[07:31] <sorear> hmm, niecza's parser has gotten a lot slower and it's not clear why

[07:31] <sorear> just took 1:50 to compile STD.pm6 instead of the usual 0:50

[07:31] <sorear> I need to investigate later

[07:32] *** jrockway left
[07:33] *** araujo joined
[07:37] * sorear -> sleep

[07:38] *** koban left
[07:40] *** zby_home_ joined
[07:43] *** fridim_ left
[07:51] *** xaka left
[07:51] *** am0c left
[07:56] *** krunen joined
[08:00] *** baest joined
[08:03] *** am0c joined
[08:04] *** krunen_ joined
[08:05] *** mkramer joined
[08:06] *** zby_home_ left
[08:07] *** mkramer left
[08:27] *** agentzh joined
[08:27] *** am0c left
[08:31] *** jlaire left
[08:33] *** jlaire joined
[08:44] *** mj41 joined
[08:58] *** krunen_ left
[08:59] *** am0c^ joined
[09:00] *** mj41 left
[09:01] *** am0c^ left
[09:06] *** mkramer joined
[09:14] *** mj41 joined
[09:38] *** dakkar joined
[09:41] *** cooper left
[09:43] *** mkramer left
[09:46] *** replore left
[09:48] *** mj41 left
[09:54] *** jerome_ left
[10:01] *** jrockway joined
[10:08] *** jerome_ joined
[10:14] *** domidumont left
[10:18] *** mj41 joined
[10:20] *** domidumont joined
[10:25] *** xjiujiu left
[10:31] *** X99 joined
[10:32] *** daxim joined
[10:37] *** snearch joined
[10:46] *** underline_ joined
[10:47] *** snearch left
[10:48] *** underline_ left
[10:56] *** envi_ joined
[11:09] *** mkramer1 joined
[11:09] *** mkramer1 left
[11:19] *** lichtkind_ joined
[11:20] *** lichtkind left
[11:20] *** lichtkind_ is now known as lichtkind

[11:28] *** jerome_ left
[11:38] *** jerome_ joined
[11:46] *** cedric joined
[11:47] <cedric> Hello #perl6

[11:51] <cedric> Is there someone that could help me on regex modifiers?

[12:04] <cedric> phenny, tell moritz S05:623 explains how to apply the :pos modifier to m//-like calls, how can one do the same with a call to a subrule within a grammar?

[12:04] <phenny> cedric: I'll pass that on when moritz is around.

[12:05] <cedric> std: rx:pos(3) /hello/

[12:05] <p6eval> std dc62e1d: OUTPUT«ok 00:01 121m␤»

[12:06] <cedric> phenny, tell moritz viv and std don't complain when a "call-modifier" (like :pos) is applied to a definition.  This is unexpected according to S05:657.

[12:06] <phenny> cedric: I'll pass that on when moritz is around.

[12:09] <lumi___> phenny: tell sorear I'm a native Hebrew speaker and reader, ask me anything

[12:09] <phenny> lumi___: I'll pass that on when sorear is around.

[12:16] *** Alias joined
[12:22] <dalek> mu: 1e13cf9 | util++ | misc/perl6advent-2011/schedule:

[12:22] <dalek> mu: [advent] Claim 23rd.

[12:22] <dalek> mu: review: https://github.com/perl6/mu/commit/1e13cf972e

[12:35] *** cedric left
[12:38] <colomon> phenny: tell sorear My wget appears to come from macports

[12:38] <phenny> colomon: I'll pass that on when sorear is around.

[12:42] *** X99 left
[12:45] *** ispeak joined
[12:47] *** Trashlord joined
[13:18] *** overrosy left
[13:19] *** overrosy joined
[13:29] *** kaleem left
[13:32] <[Coke]> Juerd: I typically do run things under "nice". I'll try to be more careful in the future. (and I'll see about the memory limiting also.)

[13:32] <[Coke]> Juerd: sorry about that.

[13:33] *** bluescreen10 left
[13:33] <Juerd> [Coke]: Shit happens and is allowed to happen on a dev box :)

[13:33] *** bluescreen10 joined
[13:33] <Juerd> Just not repeatedly :P

[13:36] *** X99 joined
[13:40] *** wolfman2000 joined
[13:41] *** mkramer joined
[13:42] *** X99 left
[13:43] *** wolfman__ joined
[13:43] *** wolfman2_ left
[13:46] *** drbean joined
[13:46] *** wolfman2000 left
[13:49] <[Coke]> yah, my normal "spectest run" is under nice -20 for rakudo & niecza.

[13:49] <[Coke]> (if i run "make spectest" by itself, that's not.)

[13:49] <[Coke]> I should just nice my entire shell, honestly. ;)

[13:50] <Juerd> The memory usage is a somewhat greater issue

[13:50] <Juerd> I took away a lot of RAM from feather1 because it wasn't needed anymore, and we needed some elsewhere

[13:51] <[Coke]> ok. and that I don't normally do anything with. I can fix that.

[13:51] <Juerd> It only has 1200 MB left

[13:51] <Juerd> So if a process starts to use 1500 MB, it'll start swapping.

[13:51] <Juerd> Well, way before that of course

[13:52] <[Coke]> I personally don't mind if I'm swapping, but can see where it would impact others. ;)

[13:54] *** kaleem joined
[13:56] *** sftp joined
[13:57] *** GlitchMr joined
[14:03] <[Coke]> Juerd: ok, I made my default run of niecza be niced, time limited, and memory limited.

[14:04] <Juerd> That's great; thank you

[14:04] <[Coke]> (my ./perl6 alias). so everything I run there should be a little less greedy going forward.

[14:04] <[Coke]> ping me if you see a problem, though.

[14:04] <[Coke]> I will also try to stick with a smaller number of TEST_JOBS.

[14:07] <[Coke]> running a typical spec test run for niecza now.

[14:08] <[Coke]> (it's building first, test harness starts shortly.)

[14:08] *** risou_awy is now known as risou

[14:09] <[Coke]> Juerd: oh, and I know there was one case when I nearly blew feather away, because I mistyped a TEST_JOBS parameter as 100 (!), but that was a onetime thing. ;)

[14:10] <[Coke]> I would posit that if niecza has skipped a roast due to "nonsensical test" perhaps we should think about killing that test. ;)

[14:13] *** REPLeffect left
[14:13] *** REPLeffect joined
[14:21] <moritz> it's just that people don't always agree abotu whether such a test is nonesensical

[14:21] <phenny> moritz: 12:04Z <cedric> tell moritz S05:623 explains how to apply the :pos modifier to m//-like calls, how can one do the same with a call to a subrule within a grammar?

[14:21] <phenny> moritz: 12:06Z <cedric> tell moritz viv and std don't complain when a "call-modifier" (like :pos) is applied to a definition.  This is unexpected according to S05:657.

[14:23] *** drbean left
[14:24] <[Coke]> moritz: mmm. eventually I will open a ticket on specs or roast for clarification.

[14:26] <[Coke]> yay, niecza got another 350 passing tests since yesterday.

[14:26] <moritz> [Coke]: in general I'm happy to review dubious tests; but today i'm rather ill, so it's a bad time

[14:27] <colomon> [Coke]: ;)

[14:27] <moritz> lichtkind: any objections to publishing your advent post now?

[14:28] <lichtkind> moritz: no :)

[14:28] <lichtkind> i was going to ask you too :)

[14:28] <lichtkind> i made some final touches in the night

[14:28] <lichtkind> to make it spund more coherent after the deletions

[14:28] <lichtkind> its a bit pitty that the last slamdunk doesnt work out but well

[14:29] <lichtkind> s/spund/sound/

[14:29] <benabik> moritz: Hope you feel better soon.

[14:29] <lichtkind> is he ill?

[14:29] *** drbean joined
[14:29] <jnthn> lichtkind: Read like 10 lines ago ;)

[14:29] <jnthn> moritz: Get well soon! 

[14:31] <colomon> #    Failed test

[14:31] <colomon> #           got: WTF

[14:31] <colomon> #      expected: אאא

[14:31] *** agentzh left
[14:31] <colomon> sorear++

[14:31] <lichtkind> jnthn: i think i came in after it

[14:32] <moritz> thanks for the good wishes

[14:32] *** s1n joined
[14:33] <lichtkind> yes get well

[14:34] * moritz tries

[14:34] <[Coke]> moritz: get well soon.

[14:34] <[Coke]> moritz: NOW! ;)

[14:35] <lichtkind> i ask god and arrange something :)

[14:36] *** cedric joined
[14:40] <cedric> Hello #perl6

[14:40] <colomon> \o

[14:40] <cedric> o/ colomon 

[14:40] <cedric> [Coke] regarding http://irclog.perlgeek.de/perl6/2011-12-20#i_4856073, were you talking about the questions on "call-modifiers"?

[14:40] *** Alias_ joined
[14:41] *** [particle]1 joined
[14:41] <lichtkind> there are broken html entities at the end

[14:41] <dalek> roast: 06087cb | (Solomon Foster)++ | S03-operators/autoincrement-range.t:

[14:41] <dalek> roast: Fudge for niecza.

[14:41] <dalek> roast: review: https://github.com/perl6/roast/commit/06087cb9a4

[14:41] <lichtkind> did you fixed that or should i?

[14:42] <lichtkind> moritz: ?

[14:42] *** Timbus|Away joined
[14:42] *** c1sung_ joined
[14:43] *** lestaway joined
[14:43] *** kcwu_ joined
[14:44] *** hillu_ joined
[14:45] <moritz> lichtkind: please do

[14:45] *** zamolxes_ joined
[14:45] <lichtkind> moritz: done

[14:45] <[Coke]> cedric: I actually don't know what test it was. I just saw it in a list of skip reasons.

[14:48] <[Coke]> nom: say abs(2000).WHAT

[14:48] <p6eval> nom 1eadbb: OUTPUT«Parameter '' requires an instance, but a type object was passed␤  in method Bridge at src/gen/CORE.setting:2441␤  in sub infix:<<> at src/gen/CORE.setting:2371␤  in sub prefix:<abs> at src/gen/CORE.setting:2387␤  in block <anon> at /tmp/rA1FRy_aQ6:1␤  in <anon> at /tm…

[14:48] <[Coke]> nom: say (abs(2000)).WHAT

[14:48] <p6eval> nom 1eadbb: OUTPUT«Int()␤»

[14:49] *** simcop2387 left
[14:50] *** Alias left
[14:50] *** lestrrat left
[14:50] *** PacoLinux left
[14:50] *** kcwu left
[14:50] *** [particle] left
[14:50] *** c1sung left
[14:50] *** zamolxes left
[14:50] *** hillu left
[14:50] *** kfo left
[14:50] *** TiMBuS left
[14:50] *** Patterner left
[14:50] *** jnthn left
[14:50] *** mikemol left
[14:50] *** Helios left
[14:50] *** kranius left
[14:50] *** DarthGandalf left
[14:50] *** chra left
[14:50] *** Tene left
[14:50] *** jasonmay left
[14:50] *** lestaway is now known as lestrrat

[14:50] *** Patterner joined
[14:50] *** jnthn joined
[14:50] *** mikemol joined
[14:50] *** kranius joined
[14:50] *** Helios joined
[14:50] *** DarthGandalf joined
[14:50] *** chra joined
[14:50] *** Tene joined
[14:50] *** jasonmay joined
[14:51] *** Timbus|Away is now known as Timbus

[14:52] *** simcop2387 joined
[14:53] <moritz> oh, that's the weird "abs is a prefix, not a listop"

[14:53] <moritz> pugs: say abs(2000).WHAT

[14:53] <p6eval> pugs b927740: OUTPUT«Int␤»

[14:53] *** GlitchMr left
[14:54] <dalek> niecza: 39ccdd6 | (Solomon Foster)++ | t/spectest.data:

[14:54] <dalek> niecza: Turn on S03-operators/autoincrement-range.t.

[14:54] <dalek> niecza: review: https://github.com/sorear/niecza/commit/39ccdd60db

[14:54] <[Coke]> moritz: yah, just saw a spectest skip with that.

[14:55] <[Coke]> https://gist.github.com/1476841 - colomon, good job, we're almost at 58%. ;)

[14:55] <[Coke]> with moritz sick, I bet you can make up even more ground! hurry!

[14:55] *** PacoLinux joined
[14:56] <[Coke]> ... I'm going to have to switch the order of those dates soon.

[14:57] *** Trashlord left
[14:58] <colomon> [Coke]: When sorear++ finishes the stuff he's been working on, we're probably going to pull in about 2000 passing tests overnight, I think.

[15:01] *** kfo joined
[15:03] <[Coke]> colomon: sweet.

[15:13] <daxim> I found today's advent door, practical work on data structures, really useful.  more of that stuff, please

[15:13] <lichtkind> moritz: needed some reformat too, due different line breaks and more, but fixed all that immediately

[15:15] *** renormalist joined
[15:15] <[Coke]> daxim: good to hear.

[15:20] *** raiph joined
[15:21] *** PNR joined
[15:22] <daxim> http://www.phoronix.com/scan.php?page=news_item&px=MTAzMDk   for you compiler people

[15:23] *** PNR left
[15:26] <raiph> lichtkind: nice post. i like that P5 is merely ugly whereas P6 is "hideous"!

[15:26] <lichtkind> raiph: thank you :)

[15:30] <sorear> good * #perl6

[15:30] <phenny> sorear: 12:09Z <lumi___> tell sorear I'm a native Hebrew speaker and reader, ask me anything

[15:30] <phenny> sorear: 12:38Z <colomon> tell sorear My wget appears to come from macports

[15:30] <flussence> this is probably wildly inaccurate, but I've just got it up to date: https://github.com/flussence/specgraphs/raw/master/impls.png

[15:31] <colomon> o/, sorear 

[15:32] <colomon> sorear: just tried to implement srand and earned myself a Invalid IL code in Run.CORE:C806srand error.  :(

[15:33] *** Trashlord joined
[15:33] *** wtw left
[15:33] <sorear> colomon: wow, nice

[15:34] <sorear> colomon: btw, I finished \c and <:foo>

[15:34] <sorear> dunno if that's what you meant

[15:34] <sorear> o/ cedric

[15:34] <cedric> o/ sorear

[15:35] <colomon>     public static void srand_time() { lock (rng) { rng = new Random(); }  }   // correct or insane?

[15:35] <cedric> sorear, I tried to had support for Cursor.at() to Niecza without success, it seems I don't speak NAM fluently :)

[15:35] *** tokuhirom joined
[15:36] <sorear> colomon: I vote for insane

[15:36] <moritz> .oO( insanely correct )

[15:37] <colomon> sorear: can't change rng when you have a lock on it?

[15:38] <sorear> colomon: one of the more insane things about the CLR is that every object contains a mutex

[15:38] <sorear> colomon: you're replacing the mutex at the same time that you change rng, which almost certainly will mess up locking

[15:38] <kthakore> sorear: I got SDL working at some point

[15:38] <kthakore> can update the repo again if you are still interested

[15:39] <kthakore> http://github.com/PerlGameDev/SDL6

[15:39] <sorear> kthakore: ENOCONTEXT

[15:39] <kthakore> I believe

[15:39] <kthakore> you in my last log 

[15:39] <kthakore> < Radvendii> sorear: i have no idea. i just install things on a need  basis. but *so* often it just doesnt work. like with SDL.

[15:39] <kthakore> 03:51 < Radvendii> i dont remember if i got SDL working in the end

[15:39] <colomon> sorear: does that mean we need another variable to have a lock on, to indicate when it is okay to change rng?

[15:40] <sorear> colomon: yes

[15:40] <sorear> colomon: rather, the new variable has to be used everywhere lock (rng) currently is

[15:40] <colomon> right, that's what I'm trying now

[15:41] <sorear> cedric: ehh... Probably my fault.  What did you try?

[15:42] <raiph> flussence: surprises me that # of spectests (22k ish) is roughly unchanged for 6 months

[15:42] <colomon> sorear: suggested type for the new lock?

[15:42] <sorear> object

[15:42] *** pkkm_ joined
[15:43] <kthakore> ok sorry

[15:43] * kthakore goes back to lurking

[15:44] <colomon> sorear: done, and I still get the error.  and I just realized it's because I'm not waving the "no return value" dead chicken at my CgOp call

[15:44] <colomon> rnull?

[15:46] <cedric> sorear, IIRC it was: "method at($pos) { Q:CgOp { (rxsetpos (cast int (obj_getnum {$pos}))) }}".  Mono stopped due to an illegal IL opcode.

[15:46] <cedric> *illegal IL opcode

[15:46] <moritz> nom: class A { method a() { } }; role B { method a() { ... } }; class C is A does B { };

[15:47] <p6eval> nom 1eadbb:  ( no output )

[15:49] <dalek> roast: 47189d0 | moritz++ | S14-roles/stubs.t:

[15:49] <dalek> roast: test inheritance + stubbed method from a role

[15:49] <dalek> roast: review: https://github.com/perl6/roast/commit/47189d06aa

[15:50] *** tokuhirom left
[15:52] *** MindosCheng joined
[15:53] *** kaleem left
[15:57] <dalek> roast: 74f5151 | (Solomon Foster)++ | S32-num/rand.t:

[15:57] <dalek> roast: Fudge for niecza.

[15:57] <dalek> roast: review: https://github.com/perl6/roast/commit/74f51513a1

[15:58] <sorear> cedric: hmm... your immediate problem is the '"no return value" dead chicken', your less-immediate problem is that rxsetpos only works in regexes

[15:59] <sorear> cedric: also, S05:1724 suggests that Cursor.at should normally be a zero-width assertion, not a movement command

[16:03] <cedric> sorear, my attempt to do some cargo-cult programming in Niecza is definitively a failure :) Also I tried to implement the <at()> form (S05:4420), not the <?at()> one.

[16:03] <dalek> niecza: 4f23627 | (Solomon Foster)++ | lib/ (2 files):

[16:03] <dalek> niecza: Implement srand.

[16:03] <dalek> niecza: review: https://github.com/sorear/niecza/commit/4f236274b6

[16:03] <dalek> niecza: 64301c7 | (Solomon Foster)++ | t/spectest.data:

[16:03] <dalek> niecza: Turn on rand.t.

[16:03] <dalek> niecza: review: https://github.com/sorear/niecza/commit/64301c750c

[16:06] <colomon> perl6: say "abc\x[a]def" ~~ m/\c[LINE FEED (LF)]/

[16:06] <p6eval> niecza v12-89-g39ccdd6: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Unrecognized character name LINE FEED (LF) at /tmp/sITQRGU4p_ line 1:␤------> [32msay "abc\x[a]def" ~~ m/\c[LINE FEED (LF)[33m⏏[31m]/[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting …

[16:06] <p6eval> ..rakudo 1eadbb: OUTPUT«=> <␤>␤␤»

[16:06] <p6eval> ..pugs b927740: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20111008/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HAND…

[16:07] <colomon> perl6: say "abc\x[a]def" ~~ m/\c[LINE FEED]/

[16:07] <p6eval> niecza v12-89-g39ccdd6: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Unrecognized character name LINE FEED at /tmp/hFlxrComoU line 1:␤------> [32msay "abc\x[a]def" ~~ m/\c[LINE FEED[33m⏏[31m]/[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 880 (…

[16:07] <p6eval> ..rakudo 1eadbb: OUTPUT«===SORRY!===␤Unrecognized character name LINE FEED at line 1, near "]/"␤»

[16:07] <p6eval> ..pugs b927740: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.20111008/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HAND…

[16:07] *** mj41 left
[16:07] <colomon> perl6: say "\c[LINE FEED]"

[16:07] <p6eval> pugs b927740: OUTPUT«␤␤»

[16:07] <p6eval> ..rakudo 1eadbb: OUTPUT«===SORRY!===␤Unrecognized character name LINE FEED at line 1, near "]\""␤»

[16:07] <p6eval> ..niecza v12-89-g39ccdd6: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Unrecognized character name LINE FEED at /tmp/ttOUpdUQvA line 1:␤------> [32msay "\c[LINE FEED[33m⏏[31m]"[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 880 (die @ 2) ␤  at /ho…

[16:08] <colomon> perl6: say "\c[LINE FEED (LF)]"

[16:08] <p6eval> niecza v12-89-g39ccdd6: OUTPUT«Rebuild in progress␤»

[16:08] <p6eval> ..pugs b927740, rakudo 1eadbb: OUTPUT«␤␤»

[16:08] <sorear> ehehee... I was hoping nobody would notice that case for a while

[16:08] <colomon> sorear: it pops right out in S05-mass/named-chars.t

[16:12] *** envi_ left
[16:12] *** envi_ joined
[16:13] *** mj41 joined
[16:14] <flussence> I'm writing perl5 code at $dayjob and really wish pack("n/($arbitrary_stuff)") worked right now...

[16:16] <flussence> I have to glue together a network thing which goes: [length of actual data, actual data with variable length last field, null padding]... I've ended up using three nested pack() calls :(

[16:16] <colomon> perl6: say "\c[ARMENIAN SMALL LETTER ECH]"

[16:16] <p6eval> pugs b927740: OUTPUT«Õ¥␤»

[16:16] <p6eval> ..rakudo 1eadbb, niecza v12-91-g64301c7: OUTPUT«ե␤»

[16:17] <colomon> sorear: what are the boundaries of that case you were hoping to sneak by?

[16:17] *** molaf joined
[16:17] *** drbean left
[16:17] <sorear> colomon: <[\x00..\x1F]>

[16:18] <sorear> the characters aren't officially named by Unicode

[16:18] <sorear> unrelated: I'm trying to get the bootstrap working again.  "Compilation unit cannot be anonymous" at CORE.setting line... 2 :|

[16:19] <colomon> sorear: gotcha

[16:19] <arnsholt> On the bright side, you won't have to scroll far to find the spot where your compiler stopped O:)

[16:19] <dalek> niecza: 6ff0fee | sorear++ | / (2 files):

[16:19] <dalek> niecza: Small fixes to restore self-compilation

[16:19] <dalek> niecza: review: https://github.com/sorear/niecza/commit/6ff0feef10

[16:20] <sorear> those were some little changes from last night

[16:20] <sorear> which incidentally fix \cJ and \cM

[16:21] <sorear> ahahaha

[16:22] <sorear> it's obvious what broke :>

[16:23] *** drbean joined
[16:31] <colomon> sorear: ack, named-chars.t starts off with like 100 tests of LF, CR, NEL, and FF.

[16:33] <dalek> niecza: 282244a | sorear++ | src/STD.pm6:

[16:33] <dalek> niecza: Remove some stray [0] from STD

[16:33] <dalek> niecza: review: https://github.com/sorear/niecza/commit/282244af45

[16:34] <sorear> colomon: ack

[16:34] <colomon> sorear: the fudging is epic and ugly

[16:35] <sorear> don't bother just yet

[16:36] <colomon> actually, I just fudged it enough that it runs all the way through the test

[16:36] <colomon> but it's got 168 failures

[16:36] <colomon> and 116 skipped tests

[16:37] *** drbean left
[16:37] *** awoodland joined
[16:39] *** MayDaniel joined
[16:39] *** am0c joined
[16:40] *** slavik1 joined
[16:41] <colomon> sorear: it looks like the failures are most negative character class tests

[16:41] <dalek> niecza: 1b83260 | sorear++ | lib/UCD.cs:

[16:41] <dalek> niecza: Add name recognition via na1 for control chars

[16:41] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1b83260fd9

[16:41] <sorear> stefan@stefans:~/rel/niecza$ mono-sgen run/Niecza.exe -e 'say ord "\c[LINE FEED 

[16:41] <sorear> (LF)]"'

[16:41] <sorear> 10

[16:42] *** drbean joined
[16:44] <cedric> Does someone know how to set the match position when calling a subrule in a grammar? I mean something similar to "m:pos(3)//" but applied to a subrule call. I guess it is "<at($pos)>" but I'm not sure.

[16:47] <colomon> sorear: looks like \c[LF] still fails?

[16:48] <colomon> rakudo skips all those tests, for what it is worth...

[16:50] <colomon> okay, current stats: 43 skipped tests, 196 failed, 180 okay

[16:50] <colomon> failures look to all be negative character class tests

[16:51] <colomon> though not all negative tests fail

[16:51] <colomon> example:

[16:51] <colomon> ok(!( "\x[c]" ~~ m/^ \C[FORM FEED (FF)]/ )

[16:52] *** baest left
[16:57] <[Coke]> cedric: just so you know not everyone is ignoring you, no I have absolutely no idea how to do that, and am wondering why you wouldn't just adjust your grammar so you didn't have to manually muck with the position matched so far.

[16:57] <dalek> roast: 957b9f9 | (Solomon Foster)++ | S05-mass/named-chars.t:

[16:57] <dalek> roast: Fudge enough that niecza can run the file without a fatal error.

[16:57] <dalek> roast: review: https://github.com/perl6/roast/commit/957b9f98f9

[16:58] <moritz> cedric: probably  YourGrammar.parse('yourrule', :pos(12))

[16:59] <moritz> cedric: note that in a grammar, <foo>-style subrule calls are *always* ancored to the current position, it doesn't make much sense to start off somewhere different inside a normal rule call

[16:59] *** kaare_ joined
[17:05] <colomon> sorear: "Letter does not exist as a UCD table"?

[17:11] <cedric> [Coke], moritz: I'm writting a grammar to parse ELF files.  I managed to get Niecza parsing the header correctly (32 or 64-bit) and now I want the parser to "jump" directly to the program/section header tables.  The location for these tables are described by the header as an offset in the file, hence my will to continue the parsing somewhere else.

[17:13] <moritz> cedric: then you should do that by some outside, controlling code

[17:14] <moritz> cedric: ie you have a routine that parses the header, extractions the location of the tables, and does another call to parse that with a different grammar

[17:14] <moritz> that'll be much easier than doing everything in a grammar

[17:14] *** carlin joined
[17:17] *** wolfman__ left
[17:23] <cedric> moritz: much easier but less impressive :) I would like to demonstrate to my co-workmates how the Perl6 Grammar is powerful.  Seriously, only one "controlling" statement was needed so far (to detect 32/64-bit class), everything else is declarative.  I'm pretty sure it could be possible to get the whole ELF format described as Perl6 Rules (thanks to something like <at()> or :pos for subrule).

[17:24] <moritz> in theory you can write .*?<at($location)>

[17:25] <moritz> not sure if that works in niecza

[17:25] <moritz> niecza: say 'abc' ~~/<at(1)>.*/

[17:25] <p6eval> niecza v12-94-g1b83260: OUTPUT«Unhandled exception: Unable to resolve method at in class Cursor␤  at /tmp/x4WXX8J8dx line 1 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1688 (Regex.ACCEPTS @ 3) ␤  at /tmp/x4WXX8J8dx line 1 (mainline @ 1) ␤  at /home/p6eval/niecza/lib/CORE.…

[17:27] <cedric> It could work with the ELF format, but some formats require to jump backward (most .mov files for instance, the header is actually a footer ;)

[17:33] *** daxim left
[17:34] <cedric> Since the Unicode level "bytes" isn't supported yet, the binary file is first converted to ASCII with the command ``hexdump -v -e '/1 "%02x"' /path/to/binary/file``, then I use: "token byte { .. }"

[17:39] *** MayDaniel left
[17:41] <cedric> moritz: I guess I misread you, did you mean "<at()>" should allow to move anywhere?

[17:42] *** mj41 left
[17:42] <moritz> cedric: no, <at> doesn't move anywhere, it's just an assertion

[17:48] *** Timbus left
[17:48] *** Timbus joined
[17:50] <cedric> moritz: thanks for the clarification.  Then, what's the difference between <at()> and <?at()>?

[17:50] <moritz> cedric: nothing, afaict

[17:51] <moritz> cedric: you can call every rule <foo> as <?foo> to make it zero-width, but <at> already is zero-width

[17:56] <cedric> moritz: it makes sense to me now, thanks!

[18:02] <moritz> note that <?foo> does not capture either

[18:03] *** dakkar left
[18:05] *** MayDaniel joined
[18:07] *** rindolf joined
[18:07] <rindolf> Hi all.

[18:08] <moritz> hi rindolf 

[18:09] <rindolf> moritz: what's up?

[18:10] <moritz> not much

[18:10] * moritz is sick, and not much use for hacking it seems

[18:11] <dalek> nqp: bceccc5 | moritz++ | src/QRegex/Cursor.nqp:

[18:11] <dalek> nqp: implement <at($pos)>

[18:11] <dalek> nqp: review: https://github.com/perl6/nqp/commit/bceccc500b

[18:11] <dalek> nqp: 3ae3f57 | moritz++ | t/qregex/rx_subrules:

[18:11] <dalek> nqp: regex tests for <at>

[18:11] <dalek> nqp: review: https://github.com/perl6/nqp/commit/3ae3f57972

[18:13] <rindolf> moritz: oh, I hope you get well soon.

[18:13] <rindolf> moritz: yet you're still hacking.

[18:14] <moritz> occasionally. When I can sit :-)

[18:14] *** ispeak left
[18:14] <rindolf> moritz: ah.

[18:14] <rindolf> moritz: what's preventing you from sitting?

[18:15] *** ispeak_ joined
[18:15] <rindolf> BTW, I liked this year's Perl 6 Advent Calendar less than last year's.

[18:15] <moritz> rindolf: why?

[18:15] <dalek> rakudo/nom: 106783c | moritz++ | t/spectest.data:

[18:15] <dalek> rakudo/nom: run roles + stubs test file

[18:15] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/106783cf09

[18:15] <dalek> rakudo/nom: dcfd439 | moritz++ | lib/Test.pm:

[18:15] <dalek> rakudo/nom: give eval_lives_ok some diagnostics in the case of test failure

[18:15] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/dcfd4391b7

[18:15] <dalek> rakudo/nom: 89f54dc | moritz++ | tools/build/NQP_REVISION:

[18:15] <dalek> rakudo/nom: bump to a NQP_REVISION that supports <at> in regexes

[18:15] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/89f54dc71b

[18:15] <rindolf> moritz: don't know.

[18:15] *** ispeak_ left
[18:15] <moritz> choice of topics? linguistic?

[18:15] <rindolf> moritz: I guess they were less eye-popping features covered.

[18:16] <benabik> Last year's seemed more tutorial, this one seems more technical.

[18:16] <rindolf> moritz: things that make me go "Wow! That's Cool"

[18:16] <sorear> colomon: er... niecza must be treating :Letter as :Letter<Y> and looking for a boolean property of that name

[18:17] <sorear> hello rindolf

[18:17] <rindolf> sorear: hi.

[18:17] <rindolf> sorear: what's up?

[18:17] <sorear> rindolf: well, all the "Wow! Cool!" topic were already covered last year

[18:18] <rindolf> sorear: hmmm...

[18:20] <moritz> last two years, actually

[18:21] <moritz> I guess next year will cover much more modules

[18:23] *** drbean left
[18:24] <cedric> How can I respectfully ask to language designers to think about a writable $/.pos? (since it could be useful to some parsers and also for the sake of consistency regarding the :pos modifier)

[18:24] <cedric> std: say 'abc' ~~ /{ $/.pos = 2 }./

[18:24] <p6eval> std dc62e1d: OUTPUT«ok 00:01 124m␤»

[18:25] <cedric> perl6: say 'abc' ~~ /{ $/.pos = 2 }./

[18:25] <p6eval> niecza v12-94-g1b83260: OUTPUT«Unhandled exception: assigning to readonly value␤  at /tmp/X5cKMxcIZw line 1 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1688 (Regex.ACCEPTS @ 3) ␤  at /tmp/X5cKMxcIZw line 1 (mainline @ 1) ␤  at /home/p6eval/niecza/lib/CORE.setting line 228…

[18:25] <p6eval> ..rakudo 1eadbb: OUTPUT«Method 'pos' not found for invocant of class 'Any'␤  in block <anon> at /tmp/y9h6VvgJtT:1␤  in regex <anon> at /tmp/y9h6VvgJtT:1␤  in method ACCEPTS at src/gen/CORE.setting:7174␤  in block <anon> at /tmp/y9h6VvgJtT:1␤  in <anon> at /tmp/y9h6VvgJtT:1␤»

[18:25] <p6eval> ..pugs b927740: OUTPUT«*** ␤    Unexpected "}./"␤    expecting operator, "," or ":"␤    at /tmp/Oygmil1_Pv line 1, column 28␤»

[18:26] <moritz> perl6: say 'abc' ~~ /{ $/.pos == 2 }./

[18:27] <p6eval> rakudo 1eadbb: OUTPUT«Method 'pos' not found for invocant of class 'Any'␤  in block <anon> at /tmp/nrHCrA328e:1␤  in regex <anon> at /tmp/nrHCrA328e:1␤  in method ACCEPTS at src/gen/CORE.setting:7174␤  in block <anon> at /tmp/nrHCrA328e:1␤  in <anon> at /tmp/nrHCrA328e:1␤»

[18:27] <p6eval> ..niecza v12-94-g1b83260: OUTPUT«#<match from(0) to(1) text(a) pos([].list) named({}.hash)>␤»

[18:27] <p6eval> ..pugs b927740: OUTPUT«*** ␤    Unexpected "}./"␤    expecting operator, ":" or ","␤    at /tmp/kmZHyTscXK line 1, column 29␤»

[18:27] <moritz> evalbot rebuild nom

[18:27] <p6eval> NOT OK (maybe a rebuild is already in progress?)

[18:28] *** brno0 joined
[18:28] <sorear> niecza: say 'abcdef' ~~ / <.cursor_at(4)> . /

[18:28] <p6eval> niecza v12-94-g1b83260: OUTPUT«Unhandled exception: Unable to resolve method cursor_at in class Cursor␤  at /tmp/dAD7fIMwuo line 1 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1688 (Regex.ACCEPTS @ 3) ␤  at /tmp/dAD7fIMwuo line 1 (mainline @ 1) ␤  at /home/p6eval/niecza/li…

[18:28] <sorear> niecza: say 'abcdef' ~~ / <.cursor(4)> . /

[18:29] <p6eval> niecza v12-94-g1b83260: OUTPUT«#<match from(0) to(5) text(abcde) pos([].list) named({}.hash)>␤»

[18:29] *** drbean joined
[18:29] <sorear> cedric: undocumented feature

[18:30] <sorear> cedric: if you want an Official Way, I'm afraid the only way I've ever seen work is to stay on and pester TimToady over several weeks

[18:30] *** mkramer left
[18:30] <cedric> :D

[18:30] *** mkramer joined
[18:31] <moritz> what's wrong with <at> as the official way?

[18:31] *** localhost left
[18:31] <moritz> or do you mean the overlapping matches problem?

[18:31] <sorear> moritz: <at> is zero-width, as you mentioned earlier

[18:32] <cedric> moritz: I don't known how to use <at> to "jump" backward

[18:32] *** localhost joined
[18:32] <moritz> you might be able to use the . ** -$large_number .. $large_number

[18:33] <sorear> 1. nobody has implemented that

[18:33] <sorear> 2. I think that syntax is insane

[18:33] * moritz thinks that too

[18:33] <sorear> 3. jumping around in the input should not be O(n)

[18:35] <cedric> sorear: about 3. it isn't if a StrPos is used or if the input ~~ Buf

[18:35] <moritz> niecza: say 'abcdefg' ~~ /. <.cussor(4)> ./

[18:35] <p6eval> niecza v12-94-g1b83260: OUTPUT«Unhandled exception: Unable to resolve method cussor in class Cursor␤  at /tmp/5tfONBnUmh line 1 (ANON @ 3) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1688 (Regex.ACCEPTS @ 3) ␤  at /tmp/5tfONBnUmh line 1 (mainline @ 1) ␤  at /home/p6eval/niecza/lib/C…

[18:35] <sorear> cedric: .*? <at($n)> has to do an O(n) amount of backtracking

[18:35] <moritz> niecza: say 'abcdefg' ~~ /. <.cursor(4)> ./

[18:35] <p6eval> niecza v12-94-g1b83260: OUTPUT«#<match from(0) to(5) text(abcde) pos([].list) named({}.hash)>␤»

[18:35] <sorear> no matter _how_ you specify $n

[18:36] <benabik> Jumping around in input really isn't what regexen were designed for.

[18:37] <sorear> true, but they do it admirably

[18:37] <cedric> sorear: you're right, I was thinking about a <set_pos()>-like feature (note: I didn't understand how to use <cursor()> yet)

[18:37] *** mkramer left
[18:37] <sorear> niecza: say 'abcdef' ~~ / ... <.cursor(0)> / # I wonder what this will do

[18:37] <p6eval> niecza v12-94-g1b83260: OUTPUT«#<match from(0) to(0) text() pos([].list) named({}.hash)>␤»

[18:38] <sorear> niecza: say 'abcdef' ~~ / def <.cursor(0)> / # I wonder what this will do

[18:38] <p6eval> niecza v12-94-g1b83260: OUTPUT«Unhandled exception: System.ArgumentOutOfRangeException: Cannot be negative.␤Parameter name: length␤  at System.String.Substring (Int32 startIndex, Int32 length) [0x00000] in <filename unknown>:0 ␤  at Niecza.CtxMatchStr.Get (Niecza.Variable obj) [0x00000]…

[18:38] <sorear> niecza: say ('abcdef' ~~ / def <.cursor(0)> /).chars

[18:38] <p6eval> niecza v12-94-g1b83260: OUTPUT«-3␤»

[18:39] *** forestial joined
[18:40] <cedric> benabik: :pos is already there for Match calls, my point is to provide the same feature to subrule calls

[18:45] <cedric> niecza: say 'abc' ~~ /<.cursor(2)>(.)<.cursor(0)>(.)/

[18:45] <p6eval> niecza v12-94-g1b83260: OUTPUT«#<match from(0) to(1) text(a) pos([#<match from(2) to(3) text(c) pos([].list) named({}.hash)>, #<match from(0) to(1) text(a) pos([].list) named({}.hash)>].list) named({}.hash)>␤»

[18:51] *** MayDaniel left
[18:56] <cedric> sorear++ # for <cursor()>

[18:57] *** mkramer joined
[18:58] <masak> <sorear> 2. I think that syntax is insane

[18:58] <masak> oh good, so it's not just me.

[18:58] <sorear> o/ masak

[18:58] <masak> evening, #perl6

[18:58] <sorear> masak: 10:33  * moritz thinks that too

[18:58] <masak> oh good, so it's not just moritz and me ;)

[18:58] *** molaf left
[18:59] * masak starts a massive backlogging venture

[18:59] <moritz> masak and me often seem to think the same thing, to the point where it gets almost scary

[18:59] *** raiph left
[18:59] <masak> I pondered writing something similar :P

[18:59] <moritz> :-)

[19:00] * sorear is now trying to figure out why the bootstrap doesn't like <+>

[19:03] <masak> ugh, my jetbrain is all lagged.

[19:05] <masak> I meant to say, my jet is all lagbrained.

[19:05] *** REPLeffect left
[19:15] *** fridim_ joined
[19:17] *** daxim joined
[19:18] *** REPLeffect joined
[19:22] <dalek> niecza: 2c78cd7 | sorear++ | src/NieczaActions.pm6:

[19:22] <dalek> niecza: Fix compilation of "+" in bootstrap

[19:22] <dalek> niecza: review: https://github.com/sorear/niecza/commit/2c78cd7c03

[19:22] <sorear> now it gets to about line 26

[19:24] *** fridim_ left
[19:25] *** awoodland left
[19:33] *** wk joined
[19:39] *** fieldsa joined
[19:41] *** cedric left
[19:43] *** ispeak_ joined
[19:46] *** awoodland joined
[19:46] *** carlin left
[19:53] *** mkramer left
[19:54] *** am0c left
[19:55] <moritz> why does bootsrapping compilation regress?

[19:55] <moritz> I mean, is it a much different code path from normal compilation?

[19:56] <masak> what prompted your question? I'm not sure I understand it.

[19:57] <masak> without knowing the context, it seems to me that bootstrapping compilation is extra sensitive simply because it feeds into itself, so errors tend to propagate.

[19:57] <moritz> masak: around release time, sorear++ often mentions that bootsrapping niecza fails

[19:57] <sorear> moritz: sometimes I accidentally write the compiler to rely on niecza bugs

[19:58] <moritz> sorear: ok

[19:58] <sorear> moritz: other times the compiler depends on stuff that is inadequately spectested

[20:01] <sorear> it happens a lot more often than I'd like :/

[20:06] <masak> sorear++ # exposing weak points in roast

[20:07] <moritz> masak++ also learned the hard way that roast and applications often cover quit different areas of the language

[20:08] * masak .oO( cheese )

[20:09] <sorear> right now a lot of what I'm dealing with is niecza assuming that $/.ast means $/.ast // ~$/

[20:11] *** forestial left
[20:11] <masak> it doesn't?

[20:12] <jnthn> No.

[20:13] <jnthn> If you don't make, you have no .ast

[20:13] <jnthn> make $ast; # not war

[20:14] *** drbean left
[20:18] <sorear> o/ jnthn

[20:19] <jnthn> hi sorear 

[20:19] *** Chillance joined
[20:19] *** drbean joined
[20:20] <dalek> niecza: 586fbaa | sorear++ | src/ (3 files):

[20:20] <dalek> niecza: More misc bootstrap fixes, mostly undef ast stuff

[20:20] <dalek> niecza: review: https://github.com/sorear/niecza/commit/586fbaa34a

[20:20] <sorear> yay, it gets a whole minute into building the setting before failing this time

[20:21] <colomon> \o/

[20:22] <masak> 'night, #perl6

[20:23] <sorear> bye

[20:23] <sorear> hope to see you again

[20:23] <jnthn> fwiw, my onlineness is gonna be very sketchy over the next week.

[20:24] <[Coke]> jnthn: like, you'll be connecting from the wrong side of town?

[20:24] <jnthn> [Coke]: Nah, going to be with family who have...well actually I've no idea what sort of net connectivity they have.

[20:25] <jnthn> Either way I'll probably be distracted doing family stuff. :)

[20:28] <sorear> 'course, this is Europe, "sketchy" connectivity means something compeletely different than it does to coke and I :D

[20:29] <benabik> A year or two ago I bought one of my in-laws a wifi router just so I wouldn't have to suffer over the holidays.  :-D

[20:30] <colomon> benabik: I did the same at my parents' house years ago.

[20:31] <colomon> In November, I was at my wife's grandfather's house.  No internet at all there.  :(

[20:31] <benabik> The horror!

[20:32] <jnthn> sorear: I feel like I'm missing a USism ;)

[20:32] <sorear> jnthn: I live in a moderately big city and 10Mbps is considered fast

[20:33] <sorear> also, I think we still have ~no non-tunnel IPv6 support

[20:35] <jnthn> sorear: Whoa. When I was in Blava they had salesfolk wondering aroud the city trying to sell random folks 100Mbps fibre to home. :)

[20:35] <jnthn> *wandering

[20:35] <jnthn> *around

[20:35] <benabik> :-(

[20:35] <jnthn> Well, :-( for me too 'cus I moved away from Slovakia shortly after that.

[20:36] <jnthn> I've actually no idea how fast my connection here is. Mostly, "fast enough that I never think about how fast it is" :)

[20:36] <sorear> and by "moderately big city" I mean "the population of Estonia"

[20:37] <benabik> Wow.  I'm actually getting 13/1 at the moment.  That'll change when other people are home though.

[20:37] * jnthn lives in a relatively major city in Sweden, which measn 80,000 people :P

[20:37] <jnthn> *means

[20:38] <jnthn> I'm 10 mins by train from the 3rd biggest city...which has a massive population of just under 300,000 :)

[20:38] *** rindolf left
[20:53] <fieldsa> jnthn: hello from Canada, lots of space here

[20:53] <sorear> benabik: Rochester?

[20:53] <benabik> sorear: yupyup

[20:54] *** daxim left
[20:55] <sorear> jnthn: how is life in sweden these days?  the US news media wants me to think that you've experienced the Apocalypse due to the greek situation

[20:55] <jnthn> sorear: Well, for one Sweden isn't actually in the Eurozone. EU, but not the single currency.

[20:56] <jnthn> sorear: That said, the Eurozone is a major trading partner, so it is having an impact.

[20:56] <jnthn> (e.g. interest rates cut today)

[20:56] *** drbean left
[20:57] <jnthn> Most unusual thing that's happened this month is that all of my trains have run on time, but I'm not sure that's a sign of the Appocalypse. ;)

[20:57] *** brno0 left
[20:57] <jnthn> fieldsa: Plenty here too - if you go to the north of Sweden. ;-)

[20:58] <jnthn> fieldsa: I'd love to visit Canada though. Please host a YAPC::NA. ;-)

[20:59] <fieldsa> jnthn: Ottawa.pm meets this evening, I can propose it to them.

[21:00] <jnthn> fieldsa: Are there any Perl workshops in Canada? :)

[21:01] * colomon is now dreaming about having YAPC::NA in St. John's....

[21:02] <sorear> sweet, CORE built without _error_

[21:03] *** drbean joined
[21:04] *** cooper joined
[21:04] <fieldsa> jnthn: I would suggest they are, but I don't think they get publication, probably in Vancouver,BC.  YAPC::NA was held in Ottawa 2004 and in Toronto 2005, where atrj presented on pugs

[21:04] *** ksi joined
[21:05] <jnthn> fieldsa: Yeah, I'm aware it's happened...it's before I was really involved with Perl things though.

[21:06] <fieldsa> I personally think the work in rakudo is great, I want to see community involvement

[21:07] * colomon is very fond of Toronto too, mind you.

[21:07] * sorear needs to get out more :|

[21:08] <jnthn> sorear: Careful, I went out with $dayjob last night and $friend tonight and got no hacking done at all ;)

[21:08] * jnthn realizes he really should get on with packing stuff, given he has a flight tomorrow morning.

[21:09] <sorear> family back in the UK?

[21:09] <jnthn> sorear: Yeah.

[21:09] <colomon> sorear: Toronto's the closest awesome city to us, and so I've spent a good bit of time there over the years, starting with train trips when I was little.

[21:14] <mikemol> colomon: Hm. Toronto is 'close' in some sense? Where are you?

[21:15] <mikemol> Toronto is only twice as far from me as Detroit is.

[21:16] <colomon> Michigan.

[21:16] <sorear> closest awesome city to me is SF, which is still a 10 hour drive, and I'm only ever there to meet family :|

[21:18] <colomon> Google says it's 5.5 hours to Toronto from here, and this is the furtherest I've ever lived from the big TO.

[21:23] *** bluescreen10 left
[21:25] <dalek> niecza: 9d8f021 | sorear++ | src/NieczaActions.pm6:

[21:25] <dalek> niecza: More random fixes, now can compile CORE without warning or error

[21:25] <dalek> niecza: review: https://github.com/sorear/niecza/commit/9d8f0217f0

[21:29] *** pkkm_ left
[21:33] <mikemol> colomon: Seriously? I'm over in Grand Rapids.

[21:33] <colomon> mikemol: Midland

[21:33] <mikemol> Heh. Neat.

[21:35] <mikemol> You should do a presentation in front of the Ann Arbor Perl Mongers group. :)

[21:35] *** bluescreen10 joined
[21:43] <dalek> niecza: b353fb6 | sorear++ | src/NieczaFrontendSTD.pm6:

[21:43] <dalek> niecza: One more small bootstrap fix

[21:43] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b353fb6829

[21:43] *** mj41 joined
[21:48] <colomon> mikemol: the only contact I ever had with them was going to one of Damian's presentations on Perl 6 back in 2004 or so.  It was what got me interested in p6.

[21:50] <mikemol> colomon: Just about the only contact I've had with them was when I presented on Rosetta code. LiquidWeb wanted to show off their new datacenter and that they were a Perl shop, and I heard the AAPM meeting in Lansing via the Grand Rapids Linux Users Group.

[21:51] <mikemol> Though I'm still on their mailing list. They're wanting for topics for regular meetings. Same as anyone these days, I guess; GRLUG shifted to an informal structure a couple years ago, and it looks like AAPL is moving in the same direction.

[21:54] *** kaare_ left
[21:55] <colomon> I'm not really sure why I never got more involved with AA.PM, as I lived there from 2001-2010 and had been using Perl since well before that.

[21:56] <mikemol> s/AAPL/AA.PM/

[21:56] <mikemol> I could have sworn I made that correction once already.

[21:56] *** zby_home joined
[21:56] <benabik> One of the last messages on the Rochester.PM list is "Perl 5.8.0 has been released!"

[21:57] <colomon> mikemol: you were using them both, I just grabbed one.  ;)

[22:01] * sorear was at SanDiego.pm on Thursday

[22:17] <sorear> :| current niecza can compile itself.  the new version, however, is unusably slow

[22:17] <sorear> 10 minutes to get a few % into NieczaActions.pm6

[22:21] <lue> What is meant by "lexical imports" in topics-brainstorming for the 2011 advent calendar?

[22:21] *** snearch joined
[22:24] *** drbean left
[22:31] *** drbean joined
[22:33] <sorear> { use Module; exports available here; } but not here;

[22:34] *** zby_home left
[22:36] <sorear> hey, it seems they made the mono profiler suck less since the last time I tried it.

[22:37] <lue> Ah.

[22:41] *** dch joined
[22:59] *** thou left
[23:02] *** mj41 left
[23:05] *** ksi left
[23:07] *** snearch left
[23:13] <tadzik> phenny: ask jnthn if I understand it correcly, at this moment two precompiled modules with different source files are _never_ binary compatibile?

[23:13] <phenny> tadzik: I'll pass that on when jnthn is around.

[23:18] *** awoodland left
[23:24] *** packetkn_ joined
[23:25] *** Chillance left
[23:25] *** aindilis left
[23:26] *** cotto joined
[23:26] *** packetknife left
[23:26] *** aindilis joined
[23:32] *** awoodland joined
[23:32] <jnthn> tadzik: What do you mean by "different source files"?

[23:32] <phenny> jnthn: 23:13Z <tadzik> ask jnthn if I understand it correcly, at this moment two precompiled modules with different source files are _never_ binary compatibile?

[23:32] <jnthn> tadzik: If you mean different content, then your statement is correct.

[23:33] <tadzik> well, let's optimize JSON::Tiny a bit, w/o changing functionality

[23:33] <jnthn> I've pretty much concluded Rakudo itself is going to have to maintain the precompilation cache.

[23:34] <tadzik> *relief* :)

[23:34] <jnthn> It's becoming less effort for me to implement that than it is to deal with people being constanly surprised by the thing working as I designed it to... :)

[23:34] <tadzik> I figured that in the current state, Panda would have to be very careful not to break itself during updates

[23:34] <tadzik> :D

[23:35] <tadzik> I'm sorry for constantly nagging you about that :)

[23:35] <jnthn> tadzik: Well, in theory the module loader is best placed to know the dependencies and do the Right Thing.

[23:36] <jnthn> tadzik: And I woulda somewhat preferred pre-compilation "magic" not to be in the Rakudo core.

[23:36] <jnthn> Either way, we'll get problems, people unhappy with the way its working, etc.

[23:36] <tadzik> possibly

[23:37] <tadzik> well, I'm probably the only unhappy user right now, so maybe nevermind :P

[23:37] * jnthn already busted one production system today because it had if-you're-lucky-enough-to-make-just-little-changes-binary-compat

[23:38] *** awoodland left
[23:38] <jnthn> (My change was just a little too un-little, it turned out :))

[23:38] <tadzik> :D

[23:38] <jnthn> Anyway, I'll see what I can do.

[23:39] <sorear> ow! LTM shot up from <10% of runtime to 75%

[23:39] <sorear> profiling++

[23:40] <jnthn> eek!

[23:46] *** Timbus left
[23:46] *** kfo left
[23:51] *** Timbus joined
[23:51] *** kfo joined
[23:52] *** awoodland joined
[23:54] *** awoodland_ joined
[23:57] *** awoodland left
[23:57] *** awoodland_ left
[23:59] *** risou is now known as risou_awy

