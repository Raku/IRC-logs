[00:00] *** stepnem joined
[00:13] *** daniel-s left
[00:14] <dalek> niecza: 836a89a | sorear++ | lib/ (2 files):

[00:14] <dalek> niecza: Implement WhateverCode substr arguments

[00:14] <dalek> niecza: review: https://github.com/sorear/niecza/commit/836a89a9c0

[00:14] *** daniel-s joined
[00:31] <dalek> niecza: b6dc939 | sorear++ | lib/Builtins.cs:

[00:31] <dalek> niecza: substr should return undef if start outside string

[00:31] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b6dc939aff

[00:31] <dalek> niecza: 237820b | sorear++ | t/spectest.data:

[00:31] <dalek> niecza: We now pass S32-str/substr

[00:31] <dalek> niecza: review: https://github.com/sorear/niecza/commit/237820ba3c

[00:31] <dalek> roast: b132f85 | sorear++ | S32-str/substr.t:

[00:31] <dalek> roast: [S32-str/substr] Remove meaningless StrLen/*-1 tests, and fudge broken p() tests for Niecza

[00:31] <dalek> roast: review: https://github.com/perl6/roast/commit/b132f859c4

[00:31] <sorear> niecza now passes every substr.t test except the StrPos ones

[00:38] *** ananamoose joined
[00:41] *** daniel-s_ joined
[00:50] <thou> wow :-) !

[00:51] <thou> i'm not sure how long it's been like this, but it feels like development on both niecza and rakudo is really going fast

[00:51] *** thou left
[00:54] <TimToady> moritz: new idea, after talking about the no-longer-done mailing list summaries, we thought it would be cool if someone, while reading the ir clogs, could just flag important things as a pseudo-summary

[00:57] *** thou joined
[00:58] <pmichaud> TimToady: what's the best model/code for me to look at to implement full ltm-semantics?

[00:58] <pmichaud> would that be viv and Cursor.pm, or ... ?

[00:59] <TimToady> well, my stuff did real LTM but not with a real dfa-ish engine, while it's my understanding that niecza does it in a theoretically purer fashion

[01:00] <pmichaud> okay.

[01:00] <TimToady> but it is based on the revision that sorear++ did of viv, so there may be something intermediate

[01:00] <TimToady> you'd have to ask sorear

[01:00] <pmichaud> I got pointers to his code already -- just wanted to see what you're using these days :)

[01:01] <TimToady> sorear++ did heavy revision to the Cursor stuff before starting on niecza, so that's probably instructive

[01:01] <TimToady> I don't know whether niecza keeps any of the "fate" processing that Cursor did

[01:02] <TimToady> my impression is that it redecides things at each level, but I could be misremembering

[01:02] <pmichaud> that's all good to know

[01:02] <lichtkind> TimToady: any decision for a kind of getc for $*IN ?

[01:03] *** colomon left
[01:03] <TimToady> that's very context dependent

[01:03] <sorear> AFAIR discarding fates is the main break niecza makes from Cursor

[01:04] *** thou_ joined
[01:04] <sorear> well not so much "discarding" as "I haven't implemented them yet, and with DFAs being <10% of parse time I see no pressing need"

[01:04] *** thou_ left
[01:04] *** benabik left
[01:04] <TimToady> well, the meeting is breaking up in favor of dinner, so I'd better break up too...

[01:05] <TimToady> afk &

[01:06] <pmichaud> enjoy dinner!

[01:07] <sorear> pmichaud: the basic principle of the LTM handling (in niecza and Cursor) is that | is a || that intelligently reorders clauses

[01:07] *** cotto left
[01:08] <pmichaud> sorear: makes excellent sense.  where can I find the bulk of the dfa stuff, since that's the piece I've not done yet in any of my implementations

[01:09] <sorear> Cursor.cs

[01:09] <pmichaud> perfect

[01:09] *** colomon joined
[01:09] <sorear> pmichaud: start from LTMPushAlts

[01:09] <pmichaud> I'm printing that out now so I can figure it all out :)

[01:19] *** xinming left
[01:28] *** lichtkind left
[01:29] *** ananamoose left
[01:37] *** xinming joined
[01:40] *** thundergnat1 joined
[01:45] *** whiteknight left
[01:50] *** thundergnat1 left
[01:51] *** thundergnat1 joined
[01:52] *** thundergnat1 left
[01:52] *** thundergnat1 joined
[01:52] *** donri left
[01:53] *** thundergnat1 left
[02:00] *** tokuhirom left
[02:06] *** cdarroch left
[02:27] *** buubot_backup left
[02:36] <daniel-s_> this book is pretty old:

[02:36] <daniel-s_> http://www.bookdepository.com/Perl-6-Parrot-Essentials-Allison-Randal/9780596007379

[02:36] <daniel-s_> does anyone here think it's worth getting?

[02:37] <sorear> doubt it

[02:49] *** buubot_backup joined
[02:51] *** tokuhirom joined
[02:57] *** ingy is now known as \patch

[02:58] *** \patch is now known as ingy

[03:13] *** npatch is now known as \patch

[03:20] *** bluescreen10 left
[03:24] *** Su-Shee_ joined
[03:24] *** Su-Shee left
[03:31] *** envi joined
[03:48] *** cotto joined
[03:51] *** colomon left
[03:51] *** colomon joined
[03:52] <colomon> daniel-s: flat out no.  it's wildly out-of-date

[03:59] *** benabik joined
[04:07] *** satyavvd joined
[04:08] *** dukeleto left
[04:08] *** dukeleto joined
[04:08] *** dukeleto left
[04:09] *** dukeleto joined
[04:09] *** dukeleto left
[04:10] *** dukeleto joined
[04:10] *** dukeleto left
[04:10] *** dukeleto joined
[04:10] *** dukeleto left
[04:11] *** dukeleto joined
[04:11] *** dukeleto left
[04:12] *** dukeleto joined
[04:12] *** dukeleto left
[04:13] *** dukeleto joined
[04:13] *** dukeleto left
[04:13] *** dukeleto joined
[04:13] *** dukeleto left
[04:14] *** dukeleto joined
[04:14] *** dukeleto left
[04:14] *** dukeleto joined
[04:14] *** dukeleto left
[04:15] *** kanishka left
[04:15] *** dukeleto joined
[04:16] *** dukeleto left
[04:17] *** dukeleto joined
[04:17] *** dukeleto left
[04:18] *** dukeleto joined
[04:19] *** dukeleto left
[04:19] *** JESK is now known as jesk

[04:20] *** dukeleto joined
[04:20] *** dukeleto left
[04:20] *** molaf joined
[04:20] *** dukeleto joined
[04:21] *** dukeleto left
[04:21] <TimToady> phenny: tell masak you say {} is used for hash subscripts and then show only <>

[04:21] <phenny> TimToady: I'll pass that on when masak is around.

[04:21] *** dukeleto joined
[04:21] *** dukeleto left
[04:22] *** dukeleto joined
[04:22] *** dukeleto left
[04:22] *** dukeleto joined
[04:22] *** dukeleto left
[04:23] *** dukeleto joined
[04:23] *** ingy is now known as \o

[04:23] *** dukeleto left
[04:24] *** aindilis left
[04:24] *** dukeleto joined
[04:24] *** dukeleto left
[04:25] *** dukeleto joined
[04:26] *** xinming left
[04:27] *** xinming joined
[04:28] <\o> o/

[04:29] *** \o is now known as ingy

[04:30] *** kanishka joined
[04:43] <daniel-s_> I think dukeleto is a broken bot or script or something

[04:45] *** tokuhirom left
[04:49] <dukeleto> daniel-s_: huh?

[04:53] <sorear> dukeleto: you're being kicked off the network every few seconds for excessive flooding

[04:55] *** noganex_ joined
[04:58] *** noganex left
[05:02] <tadzik> dukeleto, colomon: that's a bit messy. projects.list is for backwards-compatibility only, and should be buried probably. Now module-starter was added to the ecosystem long ago, but it was moritz's module. My version wasn'

[05:02] <tadzik> t

[05:03] *** [particle]1 left
[05:03] *** [particle] joined
[05:05] *** wolverian left
[05:07] *** wolverian joined
[05:08] *** koban joined
[05:08] <dukeleto> tadzik: i gave module-starter some love today

[05:08] <dukeleto> sorear: i hate irc clients. 

[05:09] *** geekosaur left
[05:09] *** silug_ left
[05:09] *** silug_ joined
[05:10] *** geekosaur joined
[05:13] *** _jaldhar_ left
[05:13] *** _jaldhar_ joined
[05:16] <tadzik> very nice :)

[05:21] *** molaf left
[05:23] *** dukeleto left
[05:23] *** dukeleto joined
[05:23] *** dukeleto left
[05:24] *** dukeleto joined
[05:24] *** dukeleto left
[05:24] *** dukeleto joined
[05:31] *** birdwindupbird joined
[05:37] *** benabik left
[05:44] *** benabik joined
[05:55] *** benabik left
[05:56] *** wtw joined
[05:57] *** woosley joined
[05:58] *** benabik joined
[06:03] *** benabik left
[06:07] *** cotto left
[06:11] *** Su-Shee_ is now known as Su-Shee

[06:14] *** zby_home_ left
[06:14] *** am0c joined
[06:16] *** benabik joined
[06:31] *** perlhack joined
[06:33] *** perlhack left
[06:34] *** am0c left
[06:34] *** tangperlcrack joined
[06:34] <tangperlcrack> hi all

[06:35] <tangperlcrack> nice to meet you

[06:36] <tangperlcrack> I am Chinese people.

[06:36] <tangperlcrack> Are you?

[06:36] *** noganex_ is now known as noganex

[06:37] <TiMBuS> ni hao, tangperlcrack 

[06:37] <tangperlcrack> hi you can speak Chinese？？

[06:38] <TiMBuS> haha no, i just know a few people who do

[06:38] <tangperlcrack> Hey Hey welcome to Chinese Peking !

[06:40] <tangperlcrack> Oh you can read what my bad English

[06:41] <TiMBuS> it's not that bad

[06:41] <TiMBuS> i can read it :)

[06:41] <tangperlcrack> Oh my culture is very low ah

[06:42] <TiMBuS> so what brings you to #perl6

[06:44] <tangperlcrack> To bring my passion

[06:44] <tangperlcrack> I graduated from junior high school second grade

[06:46] <TiMBuS> you learn perl there?

[06:47] <tangperlcrack> No  I have not talked to foreigners and to talk to you about

[06:47] *** am0c joined
[06:47] <tangperlcrack> welcome

[06:52] <tangperlcrack> How do you to speak ?

[06:53] <tangperlcrack> 你们每天很忙么

[06:53] <tangperlcrack> 哈哈，你们好

[06:55] <sorear> Unfortunately JimmyZ is not here

[06:55] <sorear> au neither

[06:55] <thou> tangperlcrack: hi, welcome to #perl6!

[06:55] <sorear> welcome to #perl6, tangperlcrack

[06:56] <frettled> masak likes to use the two characters 哈哈, IIRC, but that doesn't help much

[06:56] <frettled> tangperlcrack: welcome!

[06:56] <Eevee> I know a handful of kanji from japanese but that doesn't help much either

[06:56] <tangperlcrack> 3q == thank you! We use the Chinese people 

[06:56] *** benabik left
[06:56] <sorear> yeah, I'm the same way, I know like 200-300

[06:57] <frettled> Google translate may help a little bit.

[06:57] <tangperlcrack> Mee to !Goole English 哈哈  我还是熟悉中文

[06:58] <sorear> Learning Chinese seems like fun

[06:58] <Eevee> I figure if I learn Japanese, I get Chinese for free  B)

[06:59] <sorear> Eevee: not really

[06:59] <Eevee> (I know I know)

[06:59] <Eevee> I've run across some surprisingly readable chinese text though

[07:00] <tangperlcrack> very Good!

[07:00] <tangperlcrack> Eevee你狠强啊哈哈

[07:00] <tangperlcrack> 我这里的Goole网站挂了不能翻译了 惨啊

[07:01] <thou> rakudo: sub greet ($name, $greeting = '你好') { "$greeting, $name!".say }; greet <tangperlcrack>;

[07:01] <p6eval> rakudo 1fcb14: OUTPUT«你好, tangperlcrack!␤»

[07:01] <tangperlcrack> 你狠强

[07:03] <tangperlcrack> I kown a few English.

[07:04] <sorear> What do you want to do?

[07:04] <moritz> tangperlcrack: and how is your Perl 6?

[07:04] <sorear> o/ moritz

[07:04] <moritz> \o sorear 

[07:05] <tadzik> o/ #perl6

[07:05] <tangperlcrack> I only seen perl intro book

[07:06] <moritz> https://github.com/perl6/book/downloads

[07:07] <tangperlcrack> You have like Chinese can look for me

[07:08] <sorear> Could not parse

[07:08] <sorear> Please retry

[07:08] <tangperlcrack> ah！

[07:08] <thou> tangperlcrack: https://github.com/perl6/mu/tree/master/docs/zh-cn/syn

[07:09] <tangperlcrack> Thou  you is let me see ？

[07:11] <tangperlcrack> study hard and make progress every day

[07:11] <thou> tangperlcrack: we are here to help, if you have questions

[07:12] <tangperlcrack> I just came to learn English

[07:13] <tangperlcrack> Perl is in China into a depression

[07:13] <thou> that is OK, too

[07:13] <thou> perl6 is not depressed

[07:13] <thou> :-)

[07:14] <tangperlcrack> 哈哈 I hope it is

[07:15] <tangperlcrack> You know TangFeng ?

[07:15] <sorear> We have lots of people here who've learned or are learning English

[07:15] <sorear> moritz and thou are from Germany, tadzik is in Poland

[07:15] <sorear> is TangFeng another name for "Audrey Tang"?

[07:16] <tangperlcrack> yes!!!!!

[07:16] <tangperlcrack> Audrey Tang

[07:16] <thou> sorear: actually i am from the usa

[07:16] <sorear> She doesn't show up here quite as often anymore

[07:16] <sorear> but yeah I know her

[07:16] <tangperlcrack> His degree and I almost

[07:17] <sorear> Try again

[07:18] <thou> tangperlcrack: you said "I graduated from junior high school second grade". how many years of school have you had?

[07:19] <tangperlcrack> 2 years

[07:19] <sorear> How many total since birth?

[07:20] *** Tanktalus left
[07:20] <tangperlcrack> 20

[07:20] <tangperlcrack> I am 20 years old

[07:20] <thou> tangperlcrack: i am 36

[07:21] <sorear> I am also 20 years old

[07:21] <tangperlcrack> Have time to Beijing for me to play with

[07:21] <sorear> in the USA, "junior high school second grade" usually means you are 12 or 13 years old

[07:22] <tangperlcrack> I was 16, not to study

[07:22] * tadzik is 20 too

[07:22] <tangperlcrack> 20 years old is a thought age

[07:23] <tadzik> and 14 years of school total after me

[07:23] <sorear> tadzik: ow

[07:23] <tadzik> including the elementary and stuff

[07:23] <sorear> oh

[07:23] <sorear> I thought you were saying you'd be in school till 34

[07:23] <thou> tadzik: "14 years of school behind me"

[07:24] <sorear> time metaphors are funny

[07:24] <tangperlcrack> oh !!!

[07:24] <tadzik> 6 years of elementary, 3 years of... this doesn't have the equivalent I believe, but the "full of BS waste of time" is about right, then 3 years of high school and 2 years of studying now

[07:24] <tadzik> thou: oh, sure

[07:24] <sorear> it took me forever to get 午後 and 午前 straight

[07:24] *** ab5tract joined
[07:24] <thou> tadzik: 3 years of BS == "junior high school" or "middle school" in USA

[07:25] <tangperlcrack> Your English too deep ahhh

[07:25] *** agentzh joined
[07:25] <thou> roughly

[07:25] <sorear> yes

[07:25] <sorear> I have a problem

[07:26] <tadzik> thou: sounds about right, yeah

[07:26] <sorear> I use subjunctives and conditionals and the like way too much

[07:26] <sorear> I can't express myself simply

[07:27] <sorear> rakudo: my $i; do { $i++; last; $i-- }; say $I

[07:27] <sorear> rakudo: my $i; do { $i++; last; $i-- }; say $i

[07:27] <p6eval> rakudo 1fcb14: OUTPUT«===SORRY!===␤Symbol '$I' not predeclared in <anonymous> (/tmp/VMkbvvivlw:22)␤»

[07:27] <p6eval> rakudo 1fcb14: OUTPUT«  in <anon> at line 22:/tmp/tJqmVq4mru␤0␤»

[07:27] <thou> tangperlcrack: do you study computers? do you like to program computers?

[07:28] <tangperlcrack> I like  computer programming I taught herself               thou....

[07:29] <thou> very good

[07:29] <tangperlcrack> Your English can let me know

[07:29] <thou> what computer languages do you like?

[07:29] <thou> ruby? java? c?

[07:30] <tangperlcrack> I very like C and Perl .

[07:30] *** mj41 joined
[07:30] <sorear> "I like computer programming I taught myself, thou"

[07:30] <sorear> "I very much like C and Perl"

[07:30] <tangperlcrack> JAVA in China is like to eat

[07:30] <sorear> shall I continue?

[07:30] <thou> please do

[07:30] <thou> ;-)

[07:31] <tangperlcrack> 3q are you understand??

[07:31] <thou> tangperlcrack: 80%

[07:31] <sorear> tangperlcrack: What is 3q?

[07:32] <tangperlcrack> thank you Equal to 3q

[07:32] <tangperlcrack> The usage of the Chinese people

[07:32] <sorear> Where does it come from?

[07:33] <sorear> Is it related to hanzi typing?

[07:33] <tangperlcrack> Chinese people don't know English but can transliteration

[07:34] <thou> "three q" sounds like "thank you" ?

[07:34] <tangperlcrack> yes!

[07:34] <thou> OK

[07:34] <thou> :-)

[07:34] <tangperlcrack> we very much like "3" not a "three“

[07:35] <sorear> interesting

[07:35] <tadzik> we use "ty"

[07:35] <sorear> in Japanese transliteration, "thank you" becomes "sankyuu"

[07:36] <thou> ich ni san!

[07:36] <sorear> 3 is 三 is sān in Mandarin too

[07:36] <sorear> I think this is it

[07:36] <thou> makes sense :-)

[07:36] <tangperlcrack> 三 it is chinese input method

[07:36] <sorear> IIUC "th" is very unusual

[07:37] <sorear> not even German has it these days

[07:37] <sorear> mostly just English and a few of the Nordic languages

[07:37] <sorear> but they write þ

[07:37] *** bakedb joined
[07:37] <moritz> German had th, but afaict not pronounced the way the English do

[07:38] <tangperlcrack> Oh my god.

[07:38] <thou> tangperlcrack: don't give up

[07:38] <dalek> niecza: a672705 | sorear++ | src/niecza:

[07:38] <dalek> niecza: Change do to be a run-once loop

[07:38] <dalek> niecza: review: https://github.com/sorear/niecza/commit/a67270533d

[07:38] <thou> :-)

[07:39] <tangperlcrack> 3q  I didn't give up 

[07:39] <thou> moritz: s/had/has/

[07:39] <tangperlcrack> thou  You're very humor

[07:40] <moritz> thou: yes, but it has strongly decreased

[07:40] <thou> oh

[07:40] <sorear> Neandert(h)al lost the h recentlyish

[07:40] <moritz> "seit" (since) used to be "seith" etc.

[07:40] <tangperlcrack> In Beijing, but they have a lot of foreigners Chinese is very good

[07:41] <moritz> just read a text by Goethe or Schiller in original spelling

[07:41] <thou> ah, got it

[07:41] <sorear> tangperlcrack: We're just the amateurs, wait until Larry wakes up :D

[07:42] <tangperlcrack> I see you "got it" equal to "understand"

[07:42] <sorear> Yes

[07:43] <sorear> It seems Chinese has a very interesting case structure

[07:43] <moritz> ... then you'll meet a *real* amateur :-)

[07:46] *** agentzh left
[07:46] *** tangperlcrack left
[07:47] *** agentzh joined
[07:47] <thou> well, that was fun

[07:47] <sorear> ey'll be back

[07:47] <sorear> was only a Ping timeout

[07:48] <sorear> I hope

[07:53] <thou> so, under rakudo *, if I have Q:PIR { ...  $P1 = loadlib 'foobar' ... }, where does it look for foobar?

[07:53] <sorear> agentzh: ping

[07:53] <sorear> thou: strace -efile

[07:53] <thou> yeah, good idea

[07:54] <moritz> thou: install location(s), current directory, dirs given to parrot on the command line via -L (iirc)

[07:55] <thou> does it spew errors anywhere if foobar doesn't exist? seems to not do that.

[07:55] <agentzh> sorear: pong

[07:55] <thou> (i can change 'foobar' to 'nonexistentmodule' and not get an error)

[07:56] <thou> i'm gonna be lost for a while, i think, until i get more familiar w/ parrot

[07:56] <sorear> agentzh: "zh"?  when we get Chinese speakers showing up, should I ping you?

[07:57] <agentzh> ping me for what? ;)

[07:57] <sorear> agentzh: solving their problem

[07:57] <agentzh> sorear: what problems?

[07:57] <agentzh> sorear: sorry, i don't know the context...

[07:58] <agentzh> sorear: you're talking about some opensource events?

[07:58] <thou> agentzh: we just had someone from Beijing join #perl6, and communication was challenging

[07:59] <thou> agentzh: in this case, his main goal was to learn english better, so things were OK.

[07:59] <agentzh> thou: oh, because he or she was using "chinglish"? *grin*

[07:59] <agentzh> thou: got it :)

[07:59] <thou> 3q yes 哈哈

[08:00] <thou> !

[08:00] <agentzh> sorear: it's okay to ping me for that :)

[08:01] <agentzh> btw, it's great to have jonathan in bejing this weekend :D

[08:01] *** dolmen joined
[08:01] <agentzh> i'll give a perl related talk here as well.

[08:02] <agentzh> i was thinking about let rakudo or other perl compilers emit lua when i was having my lunch today.

[08:02] <agentzh> i'm not sure if it's easier to do it with NQP or just kindaperl6 :)

[08:03] <sorear> agentzh: it was fun to figure out the derivation of "3q" though :)

[08:04] <agentzh> sorear: indeed

[08:04] <agentzh> sorear: 3 == than *grin*

[08:04] <sorear> agentzh: knowing Japanese helped some.  SANKYUU!

[08:05] <sorear> and of course 3 is on'yomi san

[08:05] <agentzh> sorear: heh

[08:05] * agentzh is crazy about running perl 6 in the nginx core via ngx_lua.

[08:06] <thou> ah

[08:06] <thou> i wondered what your motivation for using lua might be

[08:06] <sorear> agentzh: going to try and compile Perl6 to Lua?

[08:06] <agentzh> thou: speed and memory footprint and the ability to interrupt and resume the vm.

[08:06] *** tangperlcrack joined
[08:07] <sorear> tangperlcrack: welcome back

[08:07] <agentzh> thou: we're doing synchronous non-blocking I/O in ngx_lua already.

[08:07] <tangperlcrack> sorry all

[08:07] <tangperlcrack> sorry -> thou

[08:07] <agentzh> sorear: aye, and enable luajit too :)

[08:07] <dalek> niecza: 4f237ff | sorear++ | / (4 files):

[08:07] <dalek> niecza: Fix return values in given/when

[08:07] <dalek> niecza: review: https://github.com/sorear/niecza/commit/4f237ff021

[08:07] <tangperlcrack> My computer was broken

[08:07] <agentzh> sorear: even a small subset will make me happy enough.

[08:08] <dalek> roast: 01cf81b | sorear++ | S04-statements/do.t:

[08:08] <dalek> roast: [S04-statements/do.t] Add tests for do with loop labels, and fudge for Niecza

[08:08] <dalek> roast: review: https://github.com/perl6/roast/commit/01cf81b6b2

[08:08] <tangperlcrack> My computer was broken ->thou

[08:08] <agentzh> sorear: emitting fast-enough lua code for a complete perl 6 implementation sounds VERY TRICKY for me :)

[08:08] <sorear> tangperlcrack: Do you think you'll come back often?

[08:08] <sorear> You're welcome to.

[08:08] <agentzh> tangperlcrack: greetings.

[08:09] <tangperlcrack> I use the browser connection, so old problems

[08:09] <tangperlcrack> 3q all.

[08:09] *** JimmyZ joined
[08:09] <agentzh> tangperlcrack: oh, so you're the chinese guy sorear was referring to :)

[08:10] <sorear> JimmyZ: Hi!

[08:10] <JimmyZ> 你好

[08:10] <agentzh> ...

[08:10] <tangperlcrack> May I use the client connection with what address

[08:10] <tangperlcrack> 您好

[08:10] <tangperlcrack> 很高兴见到您哦

[08:10] <agentzh> it seems that there's so many chinese guys around here :)

[08:10] <sorear> not nearly enough

[08:10] <JimmyZ> 很高兴能看到jnthn 安全到达北京

[08:11] <agentzh> JimmyZ: oh, he's arrived! :D

[08:11] <tangperlcrack> 您在北京么 

[08:11] <JimmyZ> 我在深圳

[08:11] <tangperlcrack> 可以找我哦

[08:11] <tangperlcrack> oh very palace.

[08:11] * agentzh hides.

[08:11] <tangperlcrack> 您好 我想用客户端连接IRC

[08:11] <JimmyZ> 今天晚上老Xu 可能会请jnthn 吃饭

[08:12] <tangperlcrack> 可是我不知道地址您知道么

[08:12] <agentzh> tangperlcrack: irc.freenode.net:6667

[08:12] <tangperlcrack> very 3q

[08:12] * agentzh feels lucky for he does know "3q".

[08:12] <JimmyZ> 在北京的可以去找老Xu，和jnthn 一起吃饭

[08:13] <JimmyZ> there are about 4 chinese people here 

[08:13] *** benabik joined
[08:13] <tangperlcrack> 他在什么地方

[08:13] <tangperlcrack> 我怕我说话 他们听不懂

[08:14] <JimmyZ> 北京

[08:14] <sorear> JimmyZ: with you now, or in #perl6?

[08:14] <JimmyZ> now

[08:14] * sorear is trying to follow along :D

[08:14] <agentzh> sorear: he's with them now.

[08:14] <tangperlcrack> 他们用QQ么 ？

[08:14] <sorear> I can at least read 北京 without any trouble.

[08:15] * agentzh grins.

[08:15] <agentzh> tangperlcrack: i doubt it.

[08:15] *** daniel-s_ left
[08:15] * agentzh goes to prepare his slides.

[08:15] <sorear> agentzh: are you a native user?

[08:16] <agentzh> sorear: yeah

[08:16] <thou> tangperlcrack: welcome back :-)

[08:16] <tangperlcrack> yes!!!!

[08:16] <tangperlcrack> thou I am very want you!

[08:17] <JimmyZ> want he what?

[08:17] * agentzh has problems reading this sentence as well.

[08:17] <JimmyZ> or miss he ?

[08:17] <tangperlcrack> Thou I miss you so much

[08:18] <tangperlcrack> miss  equal to want 哈哈 我的蹩脚英语

[08:18] <thou> tangperlcrack: yes, i am looking at some code

[08:18] <tangperlcrack> oh !

[08:18] <thou> tangperlcrack: it is confusing me; i do not understand it.

[08:19] <thou> tangperlcrack: also, i need to go to bed. :-)

[08:19] <tangperlcrack> You want to sleep??????

[08:19] *** envi left
[08:20] <tangperlcrack> China is still the day

[08:20] <thou> tangperlcrack: my mind wants to read code. my body wants to sleep. :-)

[08:21] <tangperlcrack> Ha ha free hope I can go to the United States but I was very poor

[08:22] <thou> tangperlcrack: this is where i live: http://bit.ly/iZSdtg

[08:23] <tangperlcrack> I see

[08:24] <tangperlcrack> Thou      Ha ha your place is I saw is also don't know what place

[08:25] <thou> i don't live in the city. my town has only 800 people in it.

[08:25] <thou> it is a small town.

[08:26] <tangperlcrack> Oh well we China is see foreign friends very happy to talk with you

[08:27] <tangperlcrack> it is a small!

[08:27] *** wamba joined
[08:27] <thou> tangperlcrack: yes, very nice to meet you.

[08:27] <sorear> How do I parse "we China is see foreign friends"?

[08:27] <jlaire> "we Chinese see foreigners as friends", perhaps?

[08:28] <tangperlcrack> 我们中国人经常看见外国友人

[08:28] <thou> we in china are very happy to make friends with foreigners

[08:28] <thou> ?

[08:28] <tangperlcrack> yes! thou

[08:28] *** dakkar joined
[08:28] <tangperlcrack> yes

[08:28] *** cooper left
[08:29] <tangperlcrack> We poor English so can't and you chat

[08:29] <thou> tangperlcrack: you should see me try to speak chinese

[08:30] <thou> ni hao

[08:30] <thou> ni hao, ma?

[08:30] <tangperlcrack> 你好 

[08:30] <thou> wa hun hao

[08:30] <tangperlcrack> 你好吗

[08:30] <thou> wa bu dzher dao

[08:30] <thou> hao, pu hao?

[08:30] <tangperlcrack> 你打错了

[08:30] <tangperlcrack> 我很好

[08:30] <tangperlcrack> 不是 wo hun hao

[08:30] <tangperlcrack> 哈哈

[08:31] <thou> ^ that is 100% of the chinese i know

[08:31] <tangperlcrack> 我很好

[08:31] <tangperlcrack> yes!

[08:31] <thou> so, you have very good english

[08:31] <thou> we can have this long and interesting conversation

[08:32] <tangperlcrack> Ha ha I just on the early 2

[08:32] * sorear reads about Chinese grammar.

[08:32] <thou> tangperlcrack: right, probably "very good" was inaccurate. :-)

[08:33] <thou> but good enough!

[08:33] <thou> good enough to make friends. :-)

[08:33] <tangperlcrack> 3q 

[08:33] <thou> yw

[08:34] <tangperlcrack> what is "yw"

[08:34] <thou> you're welcome

[08:34] <thou> :-)

[08:35] <tangperlcrack> I think your very hommer

[08:35] <thou> oh, i forgot one that i know!

[08:35] <thou> sye-sye ni

[08:36] <tangperlcrack> what is "sys-sys ni"

[08:36] <thou> um

[08:36] <tangperlcrack> sye

[08:36] *** kanishka left
[08:36] <thou> one moment

[08:36] *** daxim joined
[08:36] <tangperlcrack> Oh you good or bad oh ha ha a joke

[08:36] <thou> xie xie

[08:37] <thou> 谢谢

[08:37] <tangperlcrack> 谢谢 equal to your"xiexie "

[08:37] <thou> (谢谢 Google)

[08:37] <tangperlcrack> It doesn't matter, you still want to learn other Chinese

[08:38] * moritz wants to learn Perl 6

[08:39] <tangperlcrack> I can teach you Google can't find Chinese 

[08:39] <tangperlcrack> thou 

[08:41] <thou> tangperlcrack: i believe you

[08:41] <thou> tangperlcrack: but, right now, my brain is full. so i'm going to bed.

[08:42] *** Mowah joined
[08:42] <tangperlcrack> Good future chat

[08:42] <tangperlcrack> thou Good bye

[08:42] <thou> yes, take care until next time.

[08:43] <tangperlcrack> Ok !

[08:44] <moritz> nom: say (1/4).WHAT

[08:44] <p6eval> nom: OUTPUT«Num()␤»

[08:44] <moritz> nom: say Rat.new(1, 4).WHAT

[08:44] <p6eval> nom: OUTPUT«Rat()␤»

[08:44] <tangperlcrack> And other people chat yao

[08:45] <tangperlcrack> 有外国人在北京么

[08:45] <tangperlcrack> 我可以教你们中文

[08:45] <tangperlcrack> 山东话

[08:46] <tangperlcrack> Foreign friends have in Beijing ？

[08:47] <tangperlcrack> I can teach you Chinese

[08:49] <sorear> Is 么 being used to mark a question?

[08:49] <tangperlcrack> 么 Is a modal particle

[08:51] <tangperlcrack> modal particle

[08:52] *** kanishka joined
[08:52] <tangperlcrack> You have friends in Beijing   ??

[08:52] *** mberends joined
[08:53] <JimmyZ> well, most people here want to learn Perl 6, not chinese

[08:53] <tangperlcrack> kanishka  Where are you

[08:54] <tangperlcrack> The Chinese people are not studying perl 6

[08:54] <sorear> ip2location.com/117.199.248.82

[08:54] <sorear> Bangalore

[08:54] <sorear> I want to learn Chinese.  But I'm not in Beijing.

[08:55] <tangperlcrack> You can add my QQ

[08:55] <tangperlcrack> sorear

[08:55] <sorear> What is QQ?

[08:55] <tangperlcrack> Do you know the QQ

[08:56] <tangperlcrack> China oicq

[08:56] <tangperlcrack> msn .do you know ?????

[08:57] *** wamba left
[08:57] *** wamba joined
[08:58] <sorear> Never before heard of QQ.

[08:58] <tangperlcrack> sorear you are doing ?

[08:59] <sorear> Try again

[08:59] <tangperlcrack> QQ is China's most fire chatting tools

[09:00] <tangperlcrack> Do you follow me ?

[09:01] <sorear> I looked up QQ on Wikipedia

[09:01] <sorear> I do not use anything like QQ or MSN

[09:01] <tangperlcrack> oh!

[09:02] <tangperlcrack> www.qq.com 

[09:02] <tangperlcrack> this is the qq web site in china

[09:04] <dalek> niecza: dadaada | sorear++ | / (2 files):

[09:04] <dalek> niecza: Make hash(foo=>2) work

[09:04] <dalek> niecza: review: https://github.com/sorear/niecza/commit/dadaada73c

[09:04] <sorear> cute commit hash

[09:05] <tangperlcrack> oh!

[09:05] <moritz> aye :-)

[09:05] <sorear> tangperlcrack: sorry.  it is 0200.  I am very tired.  I hope to talk again.

[09:05] * sorear out

[09:06] <tangperlcrack> Ok  I forget the time you take a rest

[09:09] *** kst left
[09:10] *** masak joined
[09:11] <masak> hey! what are you doing having this much fun with Chinese while I'm at work! :P

[09:11] <phenny> masak: 04:21Z <TimToady> tell masak you say {} is used for hash subscripts and then show only <>

[09:11] <tangperlcrack> hi masak

[09:11] <masak> ni hao tangperlcrack 

[09:11] <tangperlcrack> 您好

[09:12] <masak> TimToady: I actually do mention it at http://strangelyconsistent.org/blog/june-17-2011-hashes , but it's probably one of those things that bear repeating... thanks for the feedback.

[09:12] <tangperlcrack> I am leaning English.

[09:12] <masak> 您好 tangperlcrack 

[09:12] <masak> tangperlcrack: are you a friend of jnthn's?

[09:12] <masak> tangperlcrack: I know Tang Feng as well. but she doesn't come here a lot nowadays.

[09:12] <tangperlcrack> No The first time I came to IRC

[09:13] <masak> tangperlcrack: oh, I thought you came here because jnthn is in Beijing right now.

[09:13] *** wamba left
[09:13] <masak> apparently not.

[09:13] <tangperlcrack> jnthn in beijing ?

[09:13] <masak> tangperlcrack: if you stay here, you will learn both English and Perl 6 :)

[09:13] <masak> tangperlcrack: yes, he landed this morning/afternoon.

[09:14] <tangperlcrack> I can teach his Chinese

[09:14] <tangperlcrack> yes

[09:14] <masak> :)

[09:14] <masak> he's already learning the characters. he practiced them on the plane.

[09:15] *** kst joined
[09:15] <tangperlcrack> I believe that my practiced better!

[09:16] <masak> your English is simple but understandable :)

[09:16] <tangperlcrack> So i am a Chinese people.

[09:16] <masak> "a Chinese person", yes :)

[09:16] <moritz> https://gist.github.com/1053498 any idea why Rat isn't visible, even though I add it to BOOTSTRAP.pm?

[09:16] <masak> "Chinese people" refers to everyone in China.

[09:16] <tangperlcrack> yes  chinese person

[09:17] <tangperlcrack> 中国人

[09:17] <masak> 对

[09:17] <tangperlcrack> 你也会中文？

[09:17] <JimmyZ> \o

[09:18] <moritz> ah, I might need to add a stash

[09:18] <masak> tangperlcrack: 会,一点

[09:19] <masak> moritz: BOOTSTRAP.pm looks interesting. what is it?

[09:19] <tangperlcrack> stash   what mean ?

[09:19] <masak> tangperlcrack: a stash is the thing in a package that holds values.

[09:19] <masak> I think :)

[09:19] <masak> so a module has a stash, and a class has a stash, and so on.

[09:19] <moritz> masak: it makes classes (and roles) available in the setting before they were "properly" defined

[09:19] <tangperlcrack> I see!

[09:19] <masak> moritz: ah, makes sense.

[09:20] <masak> moritz: like a list of predeclarations.

[09:20] <moritz> masak: aye. Stubs.

[09:21] <tangperlcrack> "predeclaration "Dictionary not check

[09:21] <mberends> tangperlcrack: stash is another English word for storage, where you can save information

[09:22] <tangperlcrack> oh!Oh!!!!!I've learned a bit of your English

[09:22] <tangperlcrack> mberends

[09:23] <tangperlcrack> You have a passion

[09:23] <mberends> #perl6: the Friendliest IRC channel on the planet :)

[09:23] <tangperlcrack> You there at the time

[09:24] <masak> tangperlcrack: "pre-" means "before". so "predeclaration" means "declaring something before".

[09:24] <mberends> I'm in the Netherlands, the time here is 11:24 am

[09:24] <masak> tangperlcrack: it's mostly a Perl concept, as far as I know.

[09:24] <Eevee> perl 6 is probably not a good way to learn english  :)  maybe a good way to learn a lot of affixes

[09:25] <tangperlcrack> +Haha you more severe than the dictionary.

[09:25] <moritz> masak: it's used in C and C++ too

[09:26] <tangperlcrack> Ha ha I watched it perl book

[09:26] <tangperlcrack> one book!

[09:26] <tangperlcrack> only one booke

[09:26] *** xinming left
[09:26] <tangperlcrack> only one book

[09:27] <masak> moritz: ah, ok.

[09:27] <mberends> tangperlcrack: yes, Perl 6 is too young to have more books. In future, there will be more Perl 6 books :)

[09:27] <masak> tangperlcrack: not "watched", "saw" :)

[09:27] <tangperlcrack> But I think as tang

[09:27] <tangperlcrack> TangFeng

[09:27] <tangperlcrack> 3q  masak

[09:28] <tangperlcrack> saw

[09:28] *** xinming joined
[09:29] *** JimmyZ left
[09:29] <tangperlcrack> In watching TV. Said

[09:29] <masak> tangperlcrack: yes, "watch TV", "see something", "read a book".

[09:29] <tangperlcrack> watched TV   saw the book

[09:30] <tangperlcrack> read a book

[09:30] <masak> all those are 看 in Mandarin.

[09:30] <tangperlcrack> your english very good

[09:30] <tangperlcrack> mandarin very good

[09:31] <tangperlcrack> China's "read" usage many in addition to use in watching TV

[09:31] <masak> :)

[09:32] *** Tanktalus joined
[09:32] <tangperlcrack> Do you like TangFeng yao you think of him

[09:33] <masak> au/TangFeng is a large part of what got me involved in the Perl 6 community in the first place.

[09:34] <masak> she demonstrated that the sky's the limit, in a way.

[09:35] <tangperlcrack> Your English is very helpful to me

[09:35] <moritz> ah, now I get the TangFeng reference :-)

[09:35] <masak> of course, I'm not as brilliant as au is, but I try to make up for it by being productive. :)

[09:35] <masak> right now I'm kinda failing at that too, though :/

[09:37] * mberends wishes he could fix it all by giving masak a round tuit

[09:37] <tangperlcrack> 哈哈 i only understard your english

[09:37] <tangperlcrack> a bit 

[09:37] <masak> moritz: 唐鳳 (TANG2 FENG4) is just the Chinese rendering of "Audrey Tang" :)

[09:38] <masak> tangperlcrack: the English can be hard to understand because we're using non-obvious expressions.

[09:38] <masak> tangperlcrack: for example "round tuit" would require some explanation before being understandable.

[09:38] <tangperlcrack> rendering equal to translation

[09:38] <masak> I have to go now.

[09:38] <masak> tangperlcrack: it was nice to talk to you.

[09:38] <masak> tangperlcrack: hope you stick around/come back :)

[09:39] *** masak left
[09:39] <tangperlcrack> Ok you need to take a rest

[09:45] <tangperlcrack> I have to go now .3q everyone !!!!

[09:45] * mberends waves to tangperlcrack: see you again soon!

[09:46] *** thou left
[09:46] <tangperlcrack> oh  I wants to talk you too!

[09:46] <tangperlcrack> mee too

[09:46] <tangperlcrack> me too

[09:46] <mberends> :-)

[09:46] *** tangperlcrack left
[09:47] *** wolverian left
[09:48] *** wolverian joined
[10:02] *** dolmen left
[10:03] <jnthn> very jetlagged hi from Beijing :)

[10:05] <moritz> \o

[10:05] <mberends> o/

[10:05] <moritz> $ ./perl6 -e 'say (1/2).WHAT'

[10:05] <moritz> Rat()

[10:05] <moritz> (in nom)

[10:05] <moritz> locally

[10:06] *** daxim left
[10:06] <jnthn> nice :)

[10:06] * moritz tries make test

[10:07] * jnthn really should not hack on nom until after he's slept :)

[10:07] *** daxim joined
[10:09] *** tzhs joined
[10:15] *** woosley left
[10:15] <dalek> rakudo/nom: cf7f01f | moritz++ | src/ (3 files):

[10:16] <dalek> rakudo/nom: make Int/Int a Rat.

[10:16] <dalek> rakudo/nom: 

[10:16] <dalek> rakudo/nom: Also moves some of the Rat definition into BOOTSTRAP.pm

[10:16] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cf7f01f4a9

[10:17] <jnthn> moritz: Why'd we need it in BOOTSTRAP?

[10:17] <moritz> jnthn: probably because I was too dumb to the infix:</> from Int.pm to Rat.pm

[10:17] * moritz facepalms

[10:19] <mberends> Rats!

[10:20] <moritz> nom: class myRat { has int $!a }

[10:20] <p6eval> nom:  ( no output )

[10:22] *** kanishka left
[10:27] *** donri joined
[10:27] *** donri left
[10:27] *** donri joined
[10:35] *** MayDaniel joined
[10:37] *** SHODAN joined
[10:37] *** SHODAN left
[10:39] <dalek> rakudo/nom: a04dd6f | moritz++ | t/spectest.data:

[10:39] <dalek> rakudo/nom: 5 more passing spectest files

[10:39] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a04dd6f3de

[10:39] <dalek> rakudo/nom: 4db1c8a | moritz++ | src/ (3 files):

[10:39] <dalek> rakudo/nom: No need to move Rat to BOOTSTRAP

[10:39] <dalek> rakudo/nom: 

[10:39] <dalek> rakudo/nom: This mostly reverts cf7f01f4a9d05d53d5cbc8a8530d52ae45eed8e7

[10:39] <dalek> rakudo/nom: jnthn++ for pointing out that the BOOTSTRAP thing isn't necessary.

[10:39] <dalek> rakudo/nom: It turns out the correct infix:</> was already in Rat.pm, just

[10:39] <dalek> rakudo/nom: commented out. No idea why.

[10:39] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4db1c8ab66

[10:39] *** SHODAN joined
[10:40] *** Moukeddar joined
[10:46] *** MayDaniel left
[10:47] *** dolmen joined
[10:52] *** am0c left
[11:03] *** am0c joined
[11:06] *** Tangperlcrack joined
[11:06] <Tangperlcrack> hi 

[11:07] <Tangperlcrack> i again come

[11:07] <Moukeddar> oh poets!

[11:07] <Tangperlcrack> you too

[11:08] <Tangperlcrack> I will a little english.

[11:09] <Tangperlcrack> I will only a little a english .

[11:10] <Moukeddar> this guy is a poet

[11:11] <Tangperlcrack> you is a poet too.

[11:12] <Tangperlcrack> What time is it there?

[11:16] <Tangperlcrack> Everyone is good.i am tangperlcrack i now renamed "perlhack"

[11:16] *** Tangperlcrack is now known as perlhack

[11:18] <perlhack> Everybody should get up.

[11:18] *** envi joined
[11:18] <perlhack> envi:hi 

[11:19] <perlhack> Are you doing?

[11:19] <perlhack> 大家都不理我啊

[11:20] *** ab5tract left
[11:22] <perlhack> Every should get up.

[11:23] *** kanishka joined
[11:24] <perlhack> kanishka hi

[11:27] <perlhack> it seem that we are not in it.

[11:30] *** sjn left
[11:30] *** dukeleto left
[11:30] *** sjn joined
[11:31] *** dukeleto joined
[11:31] <perlhack> hi all .who on line？

[11:32] <moritz> rakudo: say 1.WHO

[11:32] <p6eval> rakudo 1fcb14: OUTPUT«Int␤»

[11:33] <perlhack> speak me?

[11:34] *** dukeleto left
[11:34] <colomon> moritz: at least you figured out what I was going to tell you before I could tell you!  ;)

[11:34] <moritz> colomon: well, jnthn did :-)

[11:34] *** dukeleto joined
[11:35] <perlhack> you look how do ?

[11:35] <perlhack> I wants to learning

[11:36] <moritz> perlhack: what do you want to learn?

[11:37] <perlhack> you send picturs of expressions

[11:38] <perlhack> pictures of expressions.

[11:38] <perlhack> moritz

[11:38] <moritz> no, I just typed some characters.

[11:38] <moritz> it's all text in here.

[11:38] <perlhack> I am Tangperlcrack I now renamed perlhack.

[11:39] <perlhack> how to use?

[11:39] <moritz> how to use what?

[11:40] <perlhack> yes!

[11:40] <moritz> if you answer "yes" to a "what" question, I don't understand anything

[11:40] <perlhack> how to use what !

[11:40] *** cotto joined
[11:41] <perlhack> my qusetion is how to use pictures of expressions.

[11:42] <moritz> I don't understand what you mean by that

[11:42] <moritz> I haven't used any pictures in here

[11:42] <perlhack> well ,jnthn did 

[11:43] <perlhack> what's behind

[11:43] *** JimmyZ joined
[11:44] <perlhack> hi all .what are you doing？

[11:44] <perlhack> you go to work in ?

[11:45] <JimmyZ> hi, don't ask them, they are busy

[11:45] <perlhack> oh!i am a chinese person.

[11:45] <JimmyZ> 我知道

[11:45] <perlhack> 你也是中国人

[11:46] *** JimmyZ left
[11:48] *** satyavvd left
[11:48] <moritz> colomon: will you take care of the trig tests (removing the trigbase thingies)?

[11:48] <moritz> colomon: or should I have a go at it?

[11:49] <colomon> moritz: I'll have a go at it, but it will probably be latter today or tomorrow.

[11:49] <colomon> I'm busy updating my talk atm

[11:49] <moritz> colomon: I'm in no hurry, just don't want it to be forgotten

[11:49] <moritz> colomon: oh, what will you talk about?

[11:49] <colomon> numerics in perl 6

[11:49] <colomon> :)

[11:49] <moritz> :-)

[11:49] <perlhack> this 

[11:49] *** JimmyZ joined
[11:49] <perlhack> i wants to leanings

[11:50] <perlhack> teach me!

[11:50] <perlhack> colomon

[11:50] <moritz> colomon: want to show a preview of the slides? :-)

[11:50] <moritz> perlhack: did you alread download and read the book I gave you a link to?

[11:50] <colomon> moritz: I will as soon as I'm finished with this round of edits

[11:50] <moritz> perlhack: that would be a good first step at learning

[11:50] <colomon> then you can help fix my slides and I can make changes over lunch.  ;)

[11:50] <perlhack> slides

[11:50] <perlhack> yes

[11:50] <perlhack> i wants to learning

[11:51] <JimmyZ> perlhack:  想学什么，自己可以到google 里面搜索

[11:51] <perlhack> 我想学他发的笑脸

[11:51] *** cognominal_ left
[11:51] <moritz> perlhack: also perl6.org has lots of good resources

[11:51] <JimmyZ> perlhack: google irc help

[11:52] <perlhack> 3q JimmyZ

[11:52] <perlhack> i agree with your statement.

[11:52] <JimmyZ> perlhack: if you want a free teacher, google does the work.

[11:52] <perlhack> yes

[11:52] <JimmyZ> don't ask before you google it

[11:52] *** cognominal joined
[11:53] *** ab5tract joined
[11:53] <perlhack>  I haven't read any of you English sense like

[11:54] <perlhack> link

[11:54] <moritz> well, most documentation about Perl 6 is in English

[11:54] <perlhack> jimmyZ  where are you?

[11:54] <moritz> so you can read it and learn both English and Perl 6

[11:54] <JimmyZ> 深圳

[11:54] <moritz> we can also only answer your questions in English

[11:55] <perlhack> 你有朋友在北京么 外国友人

[11:55] <perlhack> moritz I will try to learn.

[11:57] *** JimmyZ_ joined
[12:01] *** JimmyZ left
[12:01] *** JimmyZ joined
[12:02] *** kanishka left
[12:02] <perlhack> JimmyZ what nationality?

[12:03] <JimmyZ> 中国

[12:03] <perlhack> 我说你说话咋这么豪爽呢！

[12:03] <perlhack> 我在这里学习英语

[12:03] <JimmyZ> 这里不是学习英语的地方

[12:04] <perlhack> I think this is .

[12:04] *** JimmyZ_ left
[12:06] *** koban left
[12:11] <JimmyZ> :)

[12:11] *** orafu left
[12:11] <perlhack> 又弄表情

[12:15] *** orafu joined
[12:15] <JimmyZ> perlhack: if you want to learn Perl 6, http://perl6.org will be a good start

[12:16] *** mathw joined
[12:16] *** literal joined
[12:17] <perlhack> thank for JimmyZ

[12:17] *** nine joined
[12:18] *** _sri joined
[12:18] *** broquaint left
[12:18] *** broquaint joined
[12:19] <colomon> moritz: actually, what side of the master spectest freeze to do the trig test changes on is a good question....

[12:19] <moritz> colomon: we can still chose a freezing location in retrospect

[12:19] <moritz> colomon: so I'd say "don't worry"

[12:20] <moritz> (or even "freeze" to a branch of the spectests, where we can cherry-pick the interesting commits into)

[12:20] <colomon> actually, now that I think about it, master should still pass all the changed tests, so it's a non-issue

[12:22] <moritz> ah, because you only remove tests for features that will be gone

[12:22] <moritz> ss/will be/are/

[12:27] <perlhack> ss/will be/are/ equal to perl5 s/// ?

[12:27] <JimmyZ> yes, since most people here are perl guys

[12:27] <moritz> perlhack: not quite, but similar (whitespaces are handled differently)

[12:28] *** benabik left
[12:28] <moritz> rakudo: $_ = 'a    b'; ss/a b/c d/; .print

[12:28] <p6eval> rakudo 1fcb14: OUTPUT«c    d»

[12:28] <moritz> that wouldn't work with p5's s/// that easily

[12:28] <mberends> colomon, moritz: a branch that is no longer being developed can get by with far fewer tests, because regressions are unlikely. We are just interested in verifying that the download and build are fully functional. Therefore regarding trig tests, if the build can get sines out of a library, you have to check cosines, tangents etc only summarily.

[12:29] <moritz> mberends: agreed

[12:29] <mberends> also, a test that has _never_ failed is probably a waste of time, we may have lots of those.

[12:30] * moritz disagrees

[12:30] *** ananamoose joined
[12:30] <moritz> it might be worthless as a regression test

[12:30] <moritz> but might still be valuable to test compliance with a specification

[12:30] *** pernatiy joined
[12:32] <mberends> true

[12:34] <moritz> also in many areas we have so many "weird" tests because compilers failed in very unexpected ways

[12:35] <moritz> for example rakudo once had a bug where constructing a pair as :$!attrib to a certain kind of routine caused problems

[12:35] <moritz> even when :$!attrib itself worked fine, and that routine itself worked fine too

[12:36] *** bbkr_ left
[12:36] *** perlhack left
[12:39] *** perlhack joined
[12:39] <perlhack> i again come

[12:39] <mberends> welcome back

[12:40] <perlhack> 3q I still like web IRC.

[12:40] <flussence> argh, I'm getting build failures on master and nom: https://gist.github.com/1053747

[12:40] <perlhack> not like client IRC

[12:40] <JimmyZ> perlhack: try chatzilla !

[12:41] <mberends> I prefer XChat, but the firewall at $work forces me to use http:

[12:41] <moritz> flussence: that's... nasty

[12:41] <perlhack> there are copying function ?

[12:41] *** bbkr_ joined
[12:41] <moritz> flussence: is that with parrot master? or the recommended revision?

[12:41] *** bluescreen10 joined
[12:42] <flussence> I'm doing --gen-parrot

[12:43] <moritz> flussence: since the PARROT_REVISION for master hasn't changed since the release, it might be a change on your end... did you touch any libpcre packages?

[12:43] *** dukeleto left
[12:44] <perlhack> moritz       what mean is "libpcre"

[12:44] <perlhack> it is a function lib ?

[12:44] <flussence> moritz: nope, my OS says libpcre was last updated months ago...

[12:44] <moritz> flussence: same for -dev?

[12:45] <moritz> perlhack: it's a C library that implements regular expression matching

[12:45] *** dukeleto joined
[12:45] <flussence> moritz: it's gentoo, so the same package for both :)

[12:45] <moritz> oh :-)

[12:45] <moritz> perlhack: see http://www.pcre.org/

[12:45] <perlhack> 3q for moritz

[12:45] <perlhack> i see

[12:45] *** dukeleto left
[12:45] <moritz> perlhack: if you say '3q', I kinda think it means "three questions"

[12:46] <moritz> flussence: can you capture the output of parrot's Configure.pl?

[12:46] <flussence> will do.

[12:46] <perlhack> no !that is "thank you"

[12:47] <daxim> no.

[12:47] <moritz> perlhack: if you men "thank you", why don't you say "thank you"?

[12:47] <perlhack> Chinese abbreviations

[12:48] <perlhack> abbreviations

[12:48] <flussence> moritz: https://gist.github.com/1053756

[12:48] <moritz> perlhack: using abbreviations in a context where they are not recognized is a bad idea

[12:49] <perlhack> As "yw" equal to you are welcome.

[12:49] <perlhack> oh !sorry

[12:49] <moritz> flussence: looks quite normal to me

[12:50] <flussence> hm, seems fine on my other system

[12:51] <perlhack> What system?

[12:51] <moritz> flussence: I've just asked in #parrot, maybe somebody knows there

[12:51] <flussence> both ~amd64

[12:51] <flussence> (and I just noticed smolder.parrot.org is back up, yay)

[12:53] <perlhack> yay!

[12:54] <moritz> flussence: http://trac.parrot.org/parrot/ticket/2107

[12:54] <moritz> flussence: seems like "known and not fixed yet"

[12:54] <flussence> hm

[12:54] <moritz> iirc colomon++ ran into similar troubles

[12:54] <perlhack> what mean "hm"

[12:55] *** Moukeddar left
[12:55] <flussence> that's not an abbreviation

[12:55] <mberends> yes, it is, it's short for hmmmmmmm

[12:55] <flussence> :)

[12:56] <moritz> it's a sound you make while thinking about a problem

[12:56] <perlhack> what is that "hmmmmmmmmmmmmm"

[12:56] <daxim> »兮«

[12:57] <perlhack> thanks for moritz

[12:57] <perlhack> hmmmmmmm

[12:58] <perlhack> moritz's English very good

[12:59] <flussence> oh, if I run that last command in the build under strace, it seems to be trying to parse /usr/lib/libpcre.so manually, then ignoring it because it's an ld script instead of ELF.

[13:00] <flussence> then it goes off and looks in a bunch of other dirs then gives up

[13:01] <moritz> that's... some weird behavior

[13:01] <perlhack> a bunch of other dirs

[13:02] <perlhack> weird behavior

[13:02] <perlhack> 怪异的行为

[13:04] <perlhack> I want to know  Audrey Tang   how to learn english?

[13:04] <perlhack> Isn't the same as me ?

[13:05] <cotto> flussence, It sounds like part of the problem is that libpcre is actually an ld script.  Is that the case?

[13:06] <cotto> nm.  it is for you

[13:06] <cotto> morning brain

[13:06] <mberends> perlhack: I think she learned English before learning computers, and then used English to read many books

[13:07] <flussence> I'm dingging through the parrot code, and getting the impression it's trying to be too clever for its own good. Haven't found the part that actually loads the file yet

[13:07] <flussence> s:1st/n//

[13:07] <perlhack> I also learned computers

[13:07] <perlhack> mberends thanks

[13:08] <perlhack> what mean "nm" 

[13:08] <perlhack> "nm" the same as "hm"

[13:09] <perlhack> abbreviations?

[13:09] <mberends> perlhack: nm == "Never Mind" == do not worry

[13:09] *** Holy_Cow joined
[13:09] <perlhack> nm == don't metter               yes?

[13:09] <perlhack> meberends

[13:09] *** JimmyZ_ joined
[13:10] <mberends> yes, correct

[13:10] <cotto> nm == 'never mind'

[13:10] <perlhack> never mind 

[13:10] <perlhack> never mind all 

[13:11] <perlhack> haha I learn your english .

[13:11] <perlhack> i am very happy.

[13:11] *** JimmyZ left
[13:11] <perlhack> very very happy

[13:11] *** JimmyZ_ is now known as JimmyZ

[13:12] *** agentzh left
[13:12] <perlhack> i am very thank for mberends.

[13:12] <mberends> perlhack: did you know you can read all our IRC logs on this server?  For example http://irclog.perlgeek.de/perl6/2011-06-29#i_4022624

[13:12] <perlhack> thanks 

[13:13] <perlhack> i will see

[13:13] <mberends> yes, you can have hours of fun with the search functions :)

[13:15] <perlhack> tanks for mberends

[13:15] <mberends> yw ( you're welcome :)

[13:16] <perlhack> i see

[13:16] <perlhack> hm == hmmmmmmmmmmmmm

[13:16] <perlhack> nm equal to "never mind" equal to "do not worry" too.

[13:16] <mberends> yes

[13:17] <perlhack> i have a lot of fun.

[13:17] <perlhack> you are my English teacher

[13:19] <perlhack> now i can read IRC log  yay

[13:19] <perlhack> tanks for mberends...

[13:19] <perlhack> thanks 

[13:19] <mberends> it's nice to chat like this, but we must also remember to be polite for the other users. First of all, if there are Perl 6 discussions happening, they take priority. Secondly, some people like to read about Perl 6 in the IRC logs, and we must not flood them with "off topic" conversations.

[13:21] <perlhack> you have be polite.

[13:21] <colomon> moritz: http://www.harmonyware.com/perl/p6numerics/ (second draft) 

[13:21] <colomon> moritz: any suggestions appreciated.  

[13:22] <colomon> moritz: and I plan to add some more example code if I get the chance this morning

[13:22] <colomon> afk # breakfast

[13:22] *** Kivutarrr joined
[13:22] <perlhack> first of all .You are very enthusiastic

[13:23] <perlhack> mberends is very enthusiastic.

[13:24] <mberends> much of the very positive spirit in this channel is thanks to Audrey Tang :-)

[13:24] *** JimmyZ_ joined
[13:25] <perlhack> your spirit very good .too

[13:25] <moritz> colomon: in slide 6 I'd do ss/Perl 6 methods/coercion methods and tests/ or so

[13:26] <perlhack> i only konow "positive" of the dictionary.

[13:26] *** JimmyZ left
[13:26] *** JimmyZ_ is now known as JimmyZ

[13:27] <mberends> 在这通道是非常积极的精神非常感谢奥黛丽唐:-) # testing http://translate.google.com

[13:27] <perlhack> thanks for mberends

[13:27] *** flussence left
[13:27] <perlhack> what nationablity

[13:27] <mberends> Netherlands

[13:28] <perlhack> Nether lands is very good

[13:28] <perlhack> i like ti

[13:28] <mberends> and moritz is German and masak is Swedish

[13:28] <perlhack> i like it

[13:29] *** flussence joined
[13:30] <perlhack> The Dutch beauty is very beautiful .

[13:31] <moritz> colomon: slide 26 needs a .perl on $.cents/100 for robustness

[13:31] *** bakedb left
[13:31] <perlhack> slide equal to "PPT" ?

[13:32] *** bakedb joined
[13:32] <moritz> colomon: slide 29: you shouldn't divide by 100 here - otherwise you create serious deflation :-)

[13:32] <moritz> perlhack: no

[13:32] <perlhack> what mean ?

[13:32] * [Coke] is in reviewing, wondering why everyone is speaking so archaicly, and then I notice <thou> after about 10 pages of scroll. whoops.

[13:32] *** lanny joined
[13:32] <perlhack> my distionary that think it is

[13:33] <mberends> perlhack: moritz and colomon are discussion his slide show that you can see at http://www.harmonyware.com/perl/p6numerics/

[13:34] *** cotto left
[13:34] *** Trashlord left
[13:35] <perlhack> sliding

[13:35] <perlhack> slide equal to chinese "幻灯片"

[13:36] <perlhack> soga!

[13:36] <perlhack> you Enlish has fixed format ????????????

[13:37] <perlhack> help

[13:37] <perlhack> help

[13:38] <perlhack> everyone is my English teacher .

[13:39] <moritz> perlhack: we are foremost a channel for discussing Perl 6. Teaching English is low on our priority list. Please respect that.

[13:40] <perlhack> i see

[13:40] *** [Coke] left
[13:41] <perlhack> respect all 

[13:42] <perlhack> perl 6 is very formost for discussing. 

[13:42] *** [Coke] joined
[13:43] *** Moukeddar joined
[13:45] *** Moukeddar_ joined
[13:45] <colomon> moritz: good catch!

[13:45] *** cotto joined
[13:46] <perlhack> you din't discuss perl5 ???

[13:46] *** benabik joined
[13:46] *** pernatiy left
[13:47] <mberends> perlhack: no there are several other IRC channels for Perl 5.

[13:48] *** Moukeddar left
[13:48] <perlhack> oh .i see

[13:49] <perlhack> when will the perl6 coming out?

[13:49] <PerlJam> perlhack: what do you mean?

[13:49] <PerlJam> it is out.  Why do you think we talk about it.

[13:49] <PerlJam> ?

[13:50] <PerlJam> (good * everybody)

[13:50] <perlhack> official version about perl 6

[13:50] <mberends> perlhack: we cannot make an accurate prediction, but the versions now under construction are already quite usable.

[13:52] <perlhack> accurate prediction ?

[13:52] <perlhack> pugs is what?

[13:52] <PerlJam> perlhack: We have several implementations.  What would make one of them "official" to you? 

[13:53] <PerlJam> perlhack: old?

[13:53] <PerlJam> perlhack: written in haskell?

[13:53] <PerlJam> perlhack: a 4 letter word?

[13:53] <perlhack> yes haskell

[13:54] <perlhack> i understand the wrong.

[13:55] <perlhack> sorry all

[13:55] <perlhack> you asked accurate!

[13:56] *** colomon left
[13:57] <perlhack> i fixed my head!

[13:59] *** colomon joined
[14:00] *** wtw left
[14:00] *** benabik left
[14:01] *** benabik joined
[14:01] <perlhack> Everyone doing?

[14:02] *** _jaldhar_ left
[14:04] *** Moukeddar_ left
[14:12] <perlhack> Audrey Tang original also learn English in IRC.

[14:13] <TimToady> "learned"   <-- past tense

[14:13] <TimToady> "originally"  <-- adverb

[14:13] <TimToady> and 你好

[14:13] <perlhack> 你好

[14:14] <TimToady> and no, I only know the characters, I don't speak Mandarin (yet)

[14:14] <perlhack> thanks 

[14:14] <perlhack> past tense

[14:14] <perlhack> i see

[14:14] <moritz> pmichaud: fwiw 'perl Configure --gen-parrot=master' built an old-ish parrot for me

[14:15] <perlhack> Mandarin  haha i can speak .

[14:15] <perlhack> originally adverb

[14:15] <perlhack> oh!thanks 

[14:15] <moritz> pmichaud: reason: the previous --gen-parrot detached the HEAD of the parrot repo. The configure script then calls 'git fetch' + 'git checkout master', which gives me the master from before detaching the head

[14:15] <TimToady> we use -ly to turn an adjective into an adverb

[14:16] *** envi left
[14:16] <TimToady> "original painting"  <-- adjective

[14:16] <TimToady> "it was painted originally"  <-- adverb

[14:16] <moritz> pmichaud: so technically it did build a "parrot master" for me, but since it didn't merge any upstream changes, the result was rather disappointing

[14:16] <TimToady> Perl 6 has adverbs too

[14:17] <perlhack> Perl 6 is adverbs ?????????????????

[14:17] <perlhack> why ?

[14:17] <PerlJam> moritz++ useful observation

[14:17] <TimToady> perlhack: you can tell an operator to work differently

[14:17] <moritz> pmichaud: maybe we should advertise --gen-parrot=origin/master, or automagically pull/merge, or thoroughly document the status quo

[14:18] <PerlJam> Are adverbial modifiers not used in some (common) languages?

[14:18] <perlhack> oh! i don't know english 

[14:18] <perlhack> i know a few english.

[14:18] *** pernatiy joined
[14:18] <moritz> rakudo: say 'foo'.comb[0].WHAT

[14:18] <p6eval> rakudo 1fcb14: OUTPUT«Str()␤»

[14:18] <moritz> rakudo: say 'foo'.comb(:match)[0].WHAT

[14:19] <p6eval> rakudo 1fcb14: OUTPUT«Str()␤»

[14:19] <moritz> hm

[14:19] <TimToady> perlhack: you are young, so you will learn fast

[14:19] <perlhack> i learn english today

[14:19] <perlhack> thanks for TimToady

[14:19] *** Trashlord joined
[14:20] <TimToady> you're welcome; I read your conversation in the backlog

[14:20] <mberends> perlhack: sorry, there is not enough space and time in this IRC channel to answer your last question. Read the Perl 6 book first, and read the IRC logs for a few months, and then you will begin to understand.

[14:20] <TimToady> so I was learning too

[14:20] <TimToady> 3q

[14:20] <perlhack> 3q 

[14:20] <perlhack> 哈哈 

[14:20] <perlhack> 谢谢啊

[14:20] <perlhack> 我听了很温暖

[14:21] <daxim> :-|

[14:21] <PerlJam> colomon: the last bullet point on slide 34 says "This can sometimes be cause unexpected results".   Should s/be //

[14:21] <colomon> PerlJam++

[14:21] <PerlJam> colomon++ nice slides

[14:21] <colomon> thanks.  # blushing

[14:22] <perlhack> nice

[14:22] <perlhack> Every day I and you chat 

[14:22] *** Chillance left
[14:22] <perlhack> learn knowleage

[14:23] <perlhack> To learn the knowledage

[14:23] <PerlJam> colomon: that point about the Bridge not specifying the type was a revelation to me.  I hadn't thought much about it before.

[14:24] <perlhack> what mean "backlog"  ？　TimeToady

[14:24] <TimToady> http://irclog.perlgeek.de/perl6/2011-06-29

[14:24] <PerlJam> perlhack: this channel is logged so if you aren't around, you can look backwards in time to see what others said while you weren't paying attention

[14:25] <perlhack> Ｉ　ｗｉｌｌ　ｓｅｅ

[14:25] *** envi joined
[14:25] <moritz> .u  ｅ

[14:25] <phenny> U+0020 SPACE ( )

[14:25] <phenny> U+FF45 FULLWIDTH LATIN SMALL LETTER E (ｅ)

[14:26] <perlhack> ａｔｔｅｎｔｉｏｎ　ｍｙｓｅｌｆ．

[14:27] <TimToady> 後紀錄  backlog means something like this

[14:27] <PerlJam> perlhack: you don't want to draw too much of the wrong kind of attention to yourself however  :)

[14:28] <colomon> Util, TimToady: any suggestions for good, short Rat-based algorithms on RossettaCode?

[14:28] <TimToady> perlhack: he means "do not be a pest 害虫"

[14:29] <TimToady> perlhack: we also want to 工

[14:29] <perlhack> 工　　ｉｔ　ｉｓ　ｃｈｉｎｅｓｅ　？

[14:29] <TimToady> it is a chinese radical

[14:30] <TimToady> it is better if you do not use FULLWIDTH LATIN SMALL LETTER

[14:30] *** lichtkind joined
[14:30] <perlhack> ｃｈｉｎｅｓｅ　ｒａｄｉｃａｌ　？

[14:31] <TimToady> .u work

[14:31] <phenny> U+2F2F KANGXI RADICAL WORK (⼯)

[14:31] <perlhack> Just a Chinese characters

[14:32] <perlhack> he is a lot of meaning

[14:32] <daxim> TimToady, the verb is 工作

[14:32] <perlhack> ｙｅｓ！

[14:32] <perlhack> ｗｏｒｋ　＝＝　工作

[14:34] <TimToady> 我明白了

[14:34] <perlhack> Work is also nouns

[14:34] * TimToady doesn't really know Chinese...

[14:34] <perlhack> 工作　ｉｓ　ａｌｓｏ　ｎｏｕｎｓ．

[14:35] <perlhack> ｎｅｖｅｒ　ｍｉｎｄ

[14:35] <perlhack> ｎｍ

[14:35] <perlhack> ｎｍ

[14:35] * PerlJam needs a filter for perlhack

[14:35] <PerlJam>  /ignore is a little too heavy handed yet :)

[14:35] *** bluescreen10 left
[14:36] <perlhack> ｆｉｌｔｅｒ　？？？？？

[14:36] <perlhack> ｗｈａｔ　ｍｅａｎ　？

[14:36] *** bluescreen10 joined
[14:36] <moritz> TimToady: re http://irclog.perlgeek.de/perl6/2011-06-29#i_4021067 it can certainly be done, though I'm not yet sure if it should include authentication, or just a global (not perl nick) flag per line

[14:36] <TimToady> he means you talk too much :)

[14:36] <perlhack> Ｄｅｓｔｏｒｙ　ｍｅ　？

[14:36] <perlhack> 哈哈

[14:36] <PerlJam> perlhack: your extra-wide characters are a splinter in my brain.

[14:37] <TimToady> it means he can't 工作

[14:37] <perlhack> ｓｏｒｒｙ

[14:37] <mberends> perlhack: you have switched to typing in a strange font. Please reset your IRC client, or browser, or whatever is doing that.

[14:37] <TimToady> can you go back to "sorry" instead of "ｓｏｒｒｙ"?

[14:38] *** tokuhirom joined
[14:38] <perlhack> ｓｏｒｒｙ

[14:38] <benabik> It's probably an input method issue.  When I was trying to use Japanese in OS X, I got stuck in that mode.

[14:38] <TimToady> yes, it might be involuntary...

[14:38] <PerlJam> thus ... a filter   :)

[14:39] <mberends> perlhack: and was can see from the reactions of other users now that it is time to be a bit quieter, to give Perl 6 priority.

[14:39] <perlhack> ｉ　ａｍ　ｓｏｒｒｙ　ｐｅｒｌＪａｍ

[14:40] <perlhack> ｏｋ　哈哈

[14:44] <lichtkind> TimToady: excuse me , did i miss your answer?

[14:44] <TimToady> it is very dependent on your OS

[14:45] <TimToady> for example, on Unix you have to put your terminal into raw mode

[14:45] <TimToady> with something like 'stty raw'

[14:45] <TimToady> or the equivalent system calls

[14:46] <TimToady> there are many windowing systems that can handle keyboard events, but they are all different

[14:47] <TimToady> we could add such a function, but it would be far from portable

[14:47] <TimToady> that's what I meant by "context dependent"

[14:47] <PerlJam> TimToady: spec it to be so and the platform must comply!  ;)

[14:47] <lichtkind> TimToady: so you say getc there is hard to implement?

[14:48] <TimToady> getc has nothing at all to do with this

[14:48] <PerlJam> lichtkind: easy to implement for a specific system,  tediious to make portable across systems.

[14:48] <PerlJam> s/ii/i/

[14:49] *** icwiener joined
[14:49] <moritz> getc is even implemented in rakudo

[14:49] <moritz> but it reads a single byte from a buffer

[14:49] <moritz> but that byte doesn't get into the buffer unless you hit the return key

[14:49] <lichtkind> moritz: yes i know but thats not what i asked for :)

[14:50] <PerlJam> lichtkind: why did you ask anyway?  IS there something specific you had in mind?

[14:50] <PerlJam> lichtkind: or is this just a source of consternation for you and you wanted it fixed?

[14:51] <TimToady> getc is the Wrong Name for what you want

[14:51] <lichtkind> PerlJam: i just currently writing documentation and i wish that there would be such a function

[14:51] <TimToady> getc is a stdio function

[14:51] <TimToady> all it does is read a char from the buffer

[14:51] <TimToady> it doesn't control what goes into the buffer

[14:51] <lichtkind> TimToady: i suggrsted to thou that if , than it would get a different name

[14:51] *** dakkar left
[14:52] <lichtkind> sugested

[14:53] <TimToady> it is VERY VERY VERY VERY VERY VERY difficult

[14:53] <TimToady> and not on anyone's priority list at the moment

[14:53] * lichtkind transletes to almost no :)

[14:53] *** cotto left
[14:53] <TimToady> look at it this way

[14:53] <TimToady> how old is Perl 5?

[14:53] <lichtkind> except on maskas :)

[14:53] <TimToady> it does not yet have such a function

[14:54] <TimToady> there are modules that attempt to do this

[14:54] <TimToady> but they are not entirely portable

[14:55] <TimToady> there is little standardization on how you turn a line-oriented input into char-oriented

[14:55] <lichtkind> i can survive that, it would just be nice if ...

[14:56] <PerlJam> lichtkind: you had a pont?

[14:56] <TimToady> and in many cases you don't even start with line-oriented, you start with some raw events from a windowing system

[14:56] <PerlJam> er, pony

[14:56] *** [5EE3555D4318402 joined
[14:57] <mberends> lichtkind: no. no. no. no. no. well, maybe muuuuch later ;)

[14:57] <lichtkind> PerlJam: it seems so :)

[14:57] <lichtkind> referred to perl 7 :)

[14:58] <TimToady> rakudo: $_ = 'a    b'; ss/a b/c d/; .print

[14:58] <p6eval> rakudo 1fcb14: OUTPUT«c    d»

[14:58] <TimToady> this is incorrect

[14:58] <TimToady> s:ss is not the same as s:s

[14:59] <moritz> so 'ss' just implies :sigspace, not :samespace?

[15:01] *** mberends left
[15:01] <TimToady> the compounds of s,m,q, etc are just that letter plus the switch

[15:01] <tadzik> exams are over!

[15:01] <TimToady> so qqx is qq:x

[15:02] <TimToady> so ss turns into s:s and sss would turn into s:ss

[15:02] <TimToady> that's the theory, anyway

[15:02] *** [5EE3555D4318402 left
[15:02] <TimToady> std: sss/foo/bar/

[15:02] <p6eval> std 37a0cdd: OUTPUT«[31m===[0mSORRY![31m===[0m␤Bogus term at /tmp/YqcfPs7Dil line 1 (EOF):␤------> [32msss/foo/bar/[33m⏏[31m<EOL>[0m␤Undeclared routines:␤      'bar' used at line 1␤   'foo' used at line 1␤   'sss' used at line 1␤Parse failed␤FAILED 00:01 119m␤»

[15:02] <moritz> TimToady: S05 has:  ss/match some words/replace those words/    # same as s:samespace

[15:02] <moritz> TimToady: so that's where I got my idea from

[15:03] <moritz> and the line before:

[15:03] <TimToady> hmm, well, that would be inconsistent

[15:03] <moritz> ms/match some words/                        # same as m:sigspace

[15:03] <moritz> so it looks like somebody[tm] actively introduced the inconsistency

[15:03] <TimToady> otoh, if we slurp up a bunch of keywords starting with s, people will hat us

[15:04] <TimToady> I probably did it in a fit of non-hobgoblinery

[15:04] <TimToady> but I don't remember noticing

[15:04] <moritz> well, if you fix the spec, I can fix rakudo

[15:04] <moritz> or sg/fix/change/ if you prefer :-)

[15:05] <TimToady> and we proably shouldn't make s:foo -> sfoo a productive mechanism anyway

[15:05] *** perlhack left
[15:05] <moritz> maybe limit such productions to single character adverbs?

[15:05] <PerlJam> +1 to that

[15:06] <PerlJam> sss/// was bothering me

[15:06] <moritz> (that's a fast shot, I haven't thought that through)

[15:06] <TimToady> or get rid of them entirely

[15:06] <TimToady> make people use the : always

[15:07] <PerlJam> that'll work too

[15:07] <TimToady> well, the current def of ss is rather useful though

[15:07] <moritz> I kinda liked ss/// and ms//

[15:07] <benabik> +1 to that from the peanut gallery

[15:07] *** dukeleto joined
[15:07] <PerlJam> moritz: me too, but if there's a slipperly slope, I'd like to avoid it.

[15:08] * TimToady doesn't buy slippery slope arguments very much

[15:09] <PerlJam> TimToady: then let's just say that optional colons confuse and require them  :)

[15:09] <frettled> TimToady: if you had, you'd be heading down a slippery slope.

[15:09] <TimToady> frettled: :)

[15:09] *** dukeleto left
[15:10] <moritz> I'm not sufficiently attached to ss/// and friends to start an argument over it. Let the ring bearer decide!

[15:10] <frettled> moritz: as a token of your appreciation?

[15:10] * TimToady feels the chain dragging him down...

[15:10] * frettled is horribly punny today, sorry, sorry.

[15:10] <PerlJam> I think the next "logical" thing would be, if the colon can be elided for "built-in" adverbs, how do I enable that for my custom adverbs?

[15:10] <TimToady> there is a hypothetical 'quote' declarator

[15:11] <TimToady> so we could just arbitrary declare some common ones, like qqx

[15:11] <moritz> PerlJam: you can augment the slang in which the check for valid adverbs is done *handwave*

[15:12] *** lanny left
[15:12] <PerlJam> feels like a can o'worms to me.

[15:12] *** dakkar joined
[15:12] <frettled> This bothers me: s:ss = sss and s:s = ss

[15:13] <TimToady> the productive rule is a lot safer with q than with s, is all

[15:13] <PerlJam> but maybe that's sufficient pressure to cause "ordinary people" to not do it and that's enough.

[15:13] <frettled> PerlJam: yup

[15:14] <pmichaud> good morning, #perl6

[15:14] <frettled> good moaning

[15:14] <colomon> \o

[15:14] <PerlJam> TimToady: so ... all we need is Q-form for s///, tr///, and m// and all is well!  :)

[15:14] <lichtkind> ladies and gentleman the one and only pm has entered the stage :)

[15:15] * tadzik screams

[15:15] <lichtkind> hahaha

[15:16] <frettled> tadzik: there, there, relax, breathe deeply, remember that exams are over and that you are happy, citizen.

[15:16] *** tzhs left
[15:16] <lichtkind> TimToady: i thought there was a Q form of s already there

[15:16] <frettled> Ah, the washing machine has finished its cycle, time to go biking.  :)

[15:18] <tadzik> frettled: yeah, I barely know what to do with myself

[15:18] <tadzik> I'll probably just get to sleep :)

[15:19] * pmichaud backscrolls

[15:22] *** kaare_ joined
[15:23] *** SHODAN left
[15:40] *** colomon left
[15:41] *** cotto joined
[15:44] *** bluescreen100 joined
[15:45] *** colomon joined
[15:46] *** bluescreen10 left
[15:47] *** benabik left
[15:52] *** mtk left
[15:53] *** cotto left
[15:55] *** araujo left
[15:55] *** daniel-s left
[15:56] *** araujo joined
[16:01] *** am0c left
[16:05] <colomon> TimToady: I've updated the talk with the changes to the mandel sub you suggested and additional comments :)

[16:09] <daxim> http://www.dotnetperls.com/

[16:11] *** JimmyZ left
[16:17] * [Coke] tests something.

[16:22] *** thou joined
[16:24] *** mberends joined
[16:25] *** zby_home_ joined
[16:34] <jlaire> S05 has a few instances of C<s//>, I changed them all to C<s///>: http://laire.fi/t/S05.patch

[16:36] *** mj41 left
[16:40] *** donri left
[16:40] *** alester joined
[16:41] *** jferrero joined
[16:41] *** donri joined
[16:44] *** pernatiy left
[16:45] *** donri left
[16:49] *** benabik joined
[16:49] *** Rotwang left
[16:51] *** Rotwang joined
[16:55] *** benabik left
[16:56] *** benabik joined
[16:59] *** lanny joined
[16:59] *** colomon left
[17:00] *** lanny left
[17:08] *** icwiener left
[17:08] *** dakkar left
[17:13] *** benabik left
[17:17] *** benabik joined
[17:18] *** benabik left
[17:18] *** benabik_ joined
[17:21] *** Moukeddar joined
[17:22] *** Transformer joined
[17:22] *** cdarroch joined
[17:22] *** cdarroch left
[17:22] *** cdarroch joined
[17:22] *** Transformer left
[17:22] *** impious joined
[17:23] *** donri joined
[17:27] *** Moukeddar left
[17:30] *** wamba joined
[17:34] *** bakedb left
[17:40] *** Kivutarrr left
[17:40] *** Kivutarrr joined
[17:43] *** dolmen left
[17:49] *** Holy_Cow left
[18:02] <Util> colomon: Sorry, I just saw your message.

[18:02] <Util> I think Rat is only *used* in this draft task: http://rosettacode.org/wiki/Convert_decimal_number

[18:02] <Util> It is also the place that I mentioned in your talk, where I might have used (and still might use) .Rat with tolerance.

[18:02] <Util> Rationals greatly enhance the awesomeness of http://rosettacode.org/wiki/Reduced_row_echelon_form#Perl_6

[18:02] <Util> We get *exact* output; compare to Ruby, Groovy, and Javascript.

[18:02] *** Pathin left
[18:02] <Util> P.S. I am working on a RosettaCode lightning talk.

[18:03] <mikemol> Send me a copy. :)

[18:03] * mikemol mutes his speakers

[18:05] <Util> mikemol: I will. If I can finish in the next hour, and get a speaking slot, I will also send you a warning on #rosettacode for possible slashdotting.

[18:07] <sorear> good * #perl6

[18:07] <mberends> hi sorear

[18:07] <TimToady> Util: http://rosettacode.org/wiki/Matrix_multiplication#Perl_6 also shows off rats

[18:08] <TimToady> oh wait, that's input

[18:08] <TimToady> nm

[18:08] *** daxim left
[18:09] *** birdwindupbird left
[18:09] *** masak joined
[18:09] <masak> go'kväll, #perl6.

[18:10] <mberends> o/

[18:11] *** mj41 joined
[18:14] <sorear> o/ masak

[18:14] <Util> rakudo: say [lcm] 2..20

[18:14] <p6eval> rakudo 1fcb14: OUTPUT«232792560␤»

[18:14] <tadzik> välkomna masak

[18:15] <Util> nm

[18:15] <masak> tadzik: :) it's "välkommen" for singular entities. but thanks. :)

[18:16] <tadzik> :)

[18:18] <sorear> that's actually the only Norwegian word I know.

[18:18] <tadzik> ...I thought that's Swedish :(

[18:19] <masak> they are close enough for it to be a moot point whether it's one or the other.

[18:19] <masak> Norwegians on the channel might correct me on that, though. :)

[18:19] <masak> I'll bet it's "velkommen" or something in Norwegian.

[18:20] *** hercynium joined
[18:21] <masak> by the way, there ought to be a term for people like perlhack: not technically a troll, because there is no intent to disrupt. instead, a genuinely happy person with a willingness to participate in the channel discourse, but an inability to hold onto the (admittedly hard-to-pin-down) topic.

[18:22] <masak> maybe "joll" -- they're akin to trolls, but jolly. :)

[18:22] *** benabik_ left
[18:22] <tadzik> :)

[18:23] *** Chillance joined
[18:23] <TimToady> Util: it was http://rosettacode.org/wiki/Van_der_Corput_sequence#Perl_6 I was thinking of

[18:23] <TimToady> shows off the Rats

[18:23] <masak> sorear: if you haven't decided to go with IronPerl6, please consider Samurai Perl 6.

[18:24] <masak> sorear: it sneaks in under the radar, it's lethally efficient, and it's fast.

[18:24] <TimToady> hayakudo

[18:24] *** cotto joined
[18:24] <masak> oh the confusion

[18:25] <TimToady> hayaku would be good, if not taken

[18:25] <tadzik> Perljutsu

[18:26] *** Vlavv_ joined
[18:26] *** colomon joined
[18:27] <TimToady> rokudo

[18:27] <TimToady> the way of six

[18:27] <tadzik> t/spec/S02-builtin_data_types/sigils-and-types.rakudo .......... Dubious, test returned 1 (wstat 256, 0x100)t/spec/S02-builtin_data_types/sigils-and-types.rakudo .......... Dubious, test returned 1 (wstat 256, 0x100)

[18:27] <PerlJam> I like that  :)

[18:27] <tadzik> whoopsie

[18:27] <TimToady> you're testing our patience :)

[18:27] <tadzik> proto and dispatch auto-generation for multis not yet implemented at line 64, near "ok &mul.do"

[18:28] <mberends> against IronPerl6, it might cause people to think it's specific to the CLR platform

[18:28] <Su-Shee> masak: you didn't even suggest Ninjaperl?!

[18:29] *** cotto left
[18:29] <TimToady> tetsudo

[18:29] <Su-Shee> good evening ;)

[18:29] *** cottoo joined
[18:29] <TimToady> the way of iron

[18:29] <TimToady> o/

[18:30] <mberends> guten evening Su-Shee (sounds better than good abend)

[18:31] <Su-Shee> mberends: guden avend. ;) 

[18:31] <mberends> :)

[18:32] <Su-Shee> hm, in the spirit of mu and all sorear could consider "there is no perl perl" ;)

[18:36] <masak> Su-Shee: I considered "Ninja Perl 6", if that helps. but "Samurai" sounded nobler somehow.

[18:37] *** am0c joined
[18:37] <masak> TimToady: I added a paragraph about <...> to http://strangelyconsistent.org/blog/june-21-2011-nested-data-structures based on your feedback.

[18:37] <TimToady> +1

[18:38] <TimToady> er, masak++

[18:40] <tadzik> Samurai Perl – The one who serves

[18:40] <TimToady> sorear: 合急道

[18:41] <TimToady> the main problem with 鉄道 is that it already means "railroad"

[18:42] <TimToady> ooh, wait

[18:42] <Util> mikemol: update: No speaking slots are left, so I will try to mention RosettaCode in a 30-second PSA inbetween the real 5-minute talks.

[18:42] <TimToady> aikyuu: love haste

[18:44] <sorear> btw, niecza is now passing over 3000 spectests

[18:44] <mberends> wow, that happened very suddenly!

[18:45] <TimToady> sorear: given your proclivities, you should definitely come up with something 日本語ish

[18:45] *** mattp_ left
[18:45] <sorear> mberends: 'twas only a jump of 300-400 in a day

[18:45] <TimToady> and aikyuu is also a pun on IQ

[18:46] <TimToady> 愛急 is what I was thinking, but there are other Qs

[18:49] <masak> phenny: tell colomon re http://justrakudoit.wordpress.com/2011/06/23/euler-5/ , did anyone suggest C< $a %% any 2..$b > yet? that seems to me to be a nice, readable way to write it.

[18:49] <phenny> masak: I'll pass that on when colomon is around.

[18:49] <TimToady> otoh 合急道 is a pun on aikido and the way of IQ

[18:49] <colomon> o/

[18:49] <phenny> colomon: 18:49Z <masak> tell colomon re http://justrakudoit.wordpress.com/2011/06/23/euler-5/ , did anyone suggest C< $a %% any 2..$b > yet? that seems to me to be a nice, readable way to write it.

[18:51] <colomon> it would have to be all, wouldn't it?

[18:51] <masak> ah, yes.

[18:52] <masak> indeed.

[18:53] *** impious left
[18:57] <colomon> masak: you've seen the [lcm] 2..20 solution?

[19:02] <masak> ah; in the comments. :)

[19:02] <masak> yes, that's obviously the winner.

[19:02] <masak> sorear++

[19:03] <colomon> I put it in my talk today.  :)

[19:03] <masak> how went the talk?

[19:03] <colomon> pretty well, I guess.

[19:04] <colomon> technical glitches early on

[19:04] <colomon> followed by one of the other rooms overriding our sound system

[19:04] <masak> huh!

[19:06] <colomon> very funny

[19:07] <colomon> got a good number of questions from the audience, and lots of helpful input from TimToady++

[19:09] *** cottoo left
[19:10] <TimToady> outweighed by the unhelpful input from TimToady...

[19:10] *** colomon left
[19:10] <masak> :P

[19:10] *** hercynium left
[19:11] *** Mowah left
[19:13] *** colomon joined
[19:14] *** colomon left
[19:14] *** colomon joined
[19:14] <mberends> colomon: I thought you would have got a good question of numbers from the audience

[19:15] <colomon> mberends: there were a few of those as well...

[19:17] * sorear wonders how best to handle <->

[19:17] <sorear> rakudo: my $x; (<-> $y { $y++ }).($x); say $x

[19:17] <p6eval> rakudo 1fcb14: OUTPUT«===SORRY!===␤Confused at line 22, near "(<-> $y { "␤»

[19:18] <masak> ng never had <->

[19:18] <masak> it regressed after alpha.

[19:19] <sorear> alpha: my $x; (<-> $y { $y++ }).($x); say $x

[19:19] <p6eval> alpha : OUTPUT«1␤»

[19:19] <sorear> alpha: my $x; (-> $y { $y++ }).($x); say $x

[19:19] <p6eval> alpha : OUTPUT«Use of uninitialized value␤␤»

[19:19] <sorear> ...uninitialized value?  seriously?

[19:20] *** pernatiy joined
[19:23] <masak> alpha: my $x; $x++; say "alive"

[19:23] <p6eval> alpha : OUTPUT«alive␤»

[19:23] <masak> sadly, I no longer submit alphabugs :)

[19:24] <dalek> niecza: 0767fc1 | sorear++ | src/niecza:

[19:24] <dalek> niecza: Implement <-> auto-rwification

[19:24] <dalek> niecza: review: https://github.com/sorear/niecza/commit/0767fc12b4

[19:29] <masak> 8 minutes, from "wonders how to" to a pushed commit? scary. :)

[19:29] <sorear> it turned out to be very easy

[19:29] <masak> sorear++

[19:29] <sorear> 2 line change if you don't count the augment game

[19:30] <masak> I don't count the augment game :)

[19:33] *** colomon left
[19:34] *** benabik joined
[19:38] *** colomon joined
[19:41] <colomon> sorear: btw, I kept on getting this message this morning:

[19:41] <colomon> niecza> my @fib := 1, 1, *+* ... *; say @fib[200];

[19:41] <colomon> 453973694165307953197296969697410619233826

[19:41] <colomon> Object reference not set to an instance of an object

[19:41] <colomon> Is it something I'm doing wrong, or a bug with my build?  (which is surely out of date, I haven't done git pull since monday!)

[19:42] <dalek> specs: e8bea71 | larry++ | S05-regex.pod:

[19:42] <dalek> specs: s// -> s/// from jlaire++

[19:42] <dalek> specs: review: https://github.com/perl6/specs/commit/e8bea71b6d

[19:44] *** hercynium joined
[19:45] <sorear> colomon: probably your build

[19:46] <sorear> colomon: no, it's a real problem

[19:46] *** bluescreen100 left
[19:48] <sorear> argggh

[19:48] <sorear> looks like the $_ bug is back

[19:49] * masak mumbles something about tests

[19:50] <sorear> masak: being able to test the REPL would be _so awesome_

[19:51] <masak> oh, that's where it is. more understandable, then.

[19:51] *** mj41 left
[19:51] <masak> Rakudo's REPL has also had its episodes. so you're in good company. :)

[19:51] *** birdwindupbird joined
[19:53] <moritz> there's always t/spec/packages/Test/Util.pm

[19:56] <masak> I am using a similar technique at $work right now. run script, do &is on output.

[19:56] <mberends> does the I/O make testing a REPL difficult? a custom shell such as the one that tests sockets should be able to handle the I/O.

[19:57] <sorear> mberends: the standard way to test a Perl 6 implementation is prove -e IMP test.pl

[19:59] <mberends> sorear: thanks, I'll read up on that -e option

[20:00] <masak> it's sufficiently new that sometimes people's Test::Harness doesn't have it.

[20:00] *** zby_home_ left
[20:00] <masak> 3.16 or something like that.

[20:01] <TimToady> sorear: or hayaki, "fast spirit"  :)

[20:02] <masak> "because Rakudo was too simple for people to remember" :P

[20:02] <TimToady> or ha-yaki "laugh cooking" :)

[20:02] <[Coke]> is there a perl6 shortcut for the perl5: "$foo = $foo ? 'a' : 'b'" ?

[20:03] <masak> [Coke]: is there a Perl 5 shortcut for that?

[20:03] *** jdhore left
[20:03] <masak> [Coke]: ($foo &&= 'a') ||= 'b'

[20:04] <[Coke]> no.

[20:04] <masak> hardly shorter, just different.

[20:04] <[Coke]> ROODE was pondering how nice it would be if he had $foo ?= 'a' : 'b' in 5.

[20:04] <sorear> $foo ?? 'a' !!= 'b' would work, but is specifically forbidden

[20:05] *** envi left
[20:05] <masak> it is?

[20:05] <sorear> ask TimToady why

[20:05] <masak> I mean, I knew it wasn't valid, but "specifically" forbidden?

[20:05] <gfldex> it's such a nice obfuscation

[20:05] <sorear> yeah, it's the :iffy check in STD

[20:05] <sorear> hmm

[20:05] <masak> ah.

[20:05] <sorear> rakudo: say ~Array

[20:05] <masak> there will be modules :)

[20:05] <p6eval> rakudo 1fcb14: OUTPUT«Array()␤»

[20:05] <sorear> rakudo: say Array.Str

[20:06] <p6eval> rakudo 1fcb14: OUTPUT«␤»

[20:06] <sorear> rakudo: say Array.Stringy

[20:06] <p6eval> rakudo 1fcb14: OUTPUT«Method 'Stringy' not found for invocant of class ''␤  in main program body at line 22:/tmp/XE8eKA7iYE␤»

[20:06] <moritz> rakudoÖ say ~Array

[20:06] <sorear> what>

[20:06] <moritz> rakudo: say ~Array

[20:06] <p6eval> rakudo 1fcb14: OUTPUT«Array()␤»

[20:06] <sorear> masak: that's what I did first

[20:06] *** Vlavv_ left
[20:06] <masak> you meant moritz.

[20:07] <sorear> I am wondering how it works

[20:07] <masak> easy: 'ma'+Tab for masak, 'mo'+Tab for moritz :P

[20:08] *** Tedd1 left
[20:08] *** Tedd1 joined
[20:09] *** mkramer joined
[20:09] *** mkramer left
[20:10] <moritz> sorear: in master? through the get_string vtable

[20:10] <sorear> moritz: I thought that delegated to Str

[20:11] *** jdhore1 joined
[20:15] <moritz> sorear: and it does, unless when it doesn't

[20:15] <moritz> sorear: it's a huge mess in master

[20:19] *** Vlavv_ joined
[20:19] <moritz> sorear: for example stringification of numbers goes through the vtable, but OTOH the vtable calls .Str

[20:20] <moritz> so the circularity chain must be applied at exactly the "right" place, but there's no real right place for it

[20:21] <moritz> it's much clearer in nom, because the int/num -> str conversion happens on unboxed numbers only

[20:21] * colomon just removed about 500 sin tests...

[20:21] <moritz> colomon++

[20:21] *** ab5tract left
[20:22] <moritz> that's #perl6 - you get karma when you add them, you get karma when you remove them

[20:23] *** Vlavv_ left
[20:23] <mberends> karma ratcheting / karma bootstrapping

[20:23] <aloha> ratcheting / karma bootstrapping has karma of 0.

[20:23] <colomon> there's a couple stubborn ones I'm having issues with

[20:26] *** birdwindupbird left
[20:27] <sorear> colomon: trigbases?

[20:28] <colomon> sorear: yes, what I'm doing is changing the automatic trig test generator to get rid of the trigbase tests

[20:32] *** bakedb joined
[20:33] * sorear discovers [email@hidden.address]
[20:34] *** [Coke] left
[20:35] *** [Coke] joined
[20:35] *** y3llow_ joined
[20:35] *** pothos_ joined
[20:35] *** Kivutarrr left
[20:36] *** Kivutarrr joined
[20:37] *** y3llow left
[20:37] *** pothos left
[20:37] *** pothos_ is now known as pothos

[20:37] *** y3llow_ is now known as y3llow

[20:41] *** mattp_ joined
[20:41] *** cotto joined
[20:42] <dalek> niecza: dbad4c4 | sorear++ | / (2 files):

[20:42] <dalek> niecza: Add Any.kv et al, we now pass for.t

[20:42] <dalek> niecza: review: https://github.com/sorear/niecza/commit/dbad4c4d5c

[20:44] <colomon> niecza: sub foo($x) { say $x }; foo("test"); foo(:x("test2"));

[20:44] <p6eval> niecza v7-9-g0767fc1: OUTPUT«test␤test2␤»

[20:44] <colomon> sorear++

[20:44] <sorear> why?

[20:44] <sorear> it's not even correct

[20:45] <sorear> that part of the spec was removed like 30 minutes after I implemented it in niecza

[20:45] <colomon> really?

[20:45] <colomon> oh, right

[20:45] <pmichaud> I'm hoping we go back in some form, fwiw.

[20:45] <TimToady> well, it could come back if all the implementors agree :)

[20:46] <TimToady> it certainly makes it easier to write some .assumings

[20:46] <colomon> I'll leave it in the trig tests for the moment, then.

[20:46] *** newbee joined
[20:46] <pmichaud> I don't agree with jnthn/masak's proposal (or some of the details of the resulting specpatch)

[20:46] <pmichaud> I especially don't like the 1=>  stuff.

[20:46] <sorear> I really don't like the 1=> stuff.

[20:47] <colomon> +1

[20:47] <TimToady> well, it's unneeded if we keep :x

[20:47] <sorear> the only change I would have made personally is to make :x opt-in

[20:47] <pmichaud> I think it's unneeded even if we don't keep :x  :-)

[20:47] <tadzik> +1 :)

[20:47] <pmichaud> right, I think we should make it opt-in

[20:47] <sorear> did anyone else get my p6l mailing?

[20:47] <tadzik> yes

[20:47] <sorear> I just got it bounced by one Phillipe Beauchamp's virus filter

[20:48] <masak> pmichaud: fwiw, I agree with jnthn/masak's proposal, but I also didn't like the resulting specpatch.

[20:48] <sorear> action: replaced reason: signed, file filter

[20:48] <masak> feels like one of those second-to-last solutions.

[20:50] <TimToady> well, would it help to say that the :x form uses the names in the proto, but the actual multis can use different names on the same positions?

[20:50] * masak ponders

[20:50] <TimToady> since the name mapping is presumably done by the proto anyway

[20:50] <masak> how does that square with protos being auto-generated half of the time?

[20:51] *** sivoais left
[20:51] <TimToady> it would presumably just use the first sig it saw, or some such

[20:52] <TimToady> note that the proto approach allows you to say ($,$) and disallow named forms entirely

[20:52] <newbee> hello: i want to group even and odds from a string of digits in two separate arrays... i'm not sure if i should use 'gather' or is a better (or more elegant) way?

[20:52] <masak> also, I think we have to be careful in not putting behavior in the proto that would too much surprise those who are blissfully unaware that protos exist. :)

[20:52] <masak> newbee: have you seen .classify?

[20:52] <masak> rakudo: .say for "25623049563".comb.classify(* % 2)

[20:52] <p6eval> rakudo 1fcb14: OUTPUT«0 2 6 2 0 4 6␤1   5 3 9 5 3␤»

[20:52] <flussence> rakudo: &sprintf.wrap({ say 'hai'; callsame }); sprintf('%d', 2);

[20:53] <p6eval> rakudo 1fcb14: OUTPUT«get_attr_str() not implemented in class 'Perl6MultiSub'␤  in main program body at line 1:src/metamodel/RoleToInstanceApplier.nqp␤»

[20:53] <flussence> rakudo: &sprintf:($,*@).wrap({ say 'hai'; callsame }); sprintf('%d', 2);

[20:53] <p6eval> rakudo 1fcb14: OUTPUT«Could not find sub &sprintf:($,*@)␤  in main program body at line 22:/tmp/1cWKxbHjLq␤»

[20:53] * flussence confuzzled

[20:53] <dalek> roast: 079975f | (Solomon Foster)++ | S32-trig/ (14 files):

[20:53] <dalek> roast: Remove the trigbase tests from the trig spectests.

[20:53] <dalek> roast: review: https://github.com/perl6/roast/commit/079975f9ee

[20:53] <dalek> roast: daed359 | (Solomon Foster)++ | S (10 files):

[20:53] <dalek> roast: Merge branch 'master' of github.com:perl6/roast

[20:53] <dalek> roast: review: https://github.com/perl6/roast/commit/daed3592bc

[20:53] <newbee> masak: nope , i just googled it :)

[20:53] <newbee> hehe, cool.

[20:53] <masak> newbee: see my example above.

[20:54] <TimToady> rakudo: .say for "25623049563".comb.classify(* % 2).perl

[20:54] <p6eval> rakudo 1fcb14: OUTPUT«("0" => ["2", "6", "2", "0", "4", "6"], "1" => ["5", "3", "9", "5", "3"])␤»

[20:54] <colomon> aigh, out of practice at this stuff!  can't believe I merged branch too....

[20:54] <masak> ah, TimToady++

[20:54] <masak> I was wondering where the initial 0 came from :)

[20:54] <sorear> *grumble* S04-statements/goto.t mostly doesn't test goto.

[20:54] <masak> rakudo: .say for "25623049563".comb.classify(* % 2).values

[20:54] <p6eval> rakudo 1fcb14: OUTPUT«0 2 6 2 0 4 6␤1   5 3 9 5 3␤»

[20:55] <masak> hrm.

[20:55] <masak> right, it's not a hash.

[20:55] <masak> rakudo: .say for "25623049563".comb.classify(* % 2).hash.values

[20:55] <p6eval> rakudo 1fcb14: OUTPUT«2 6 2 0 4 6␤5 3 9 5 3␤»

[20:55] <masak> sorear: which of the three possible flavors of goto are you planning to support?

[20:56] <sorear> masak: niecza only supports goto LABEL and goto "LABEL", what's the third?

[20:56] <sorear> goto.t mostly tests nextsame

[20:57] <masak> I'm thinking of "simple", "into a scope that has been incarnated", "into a scope that is still static".

[20:57] <masak> or something like that. :) I remember telling mberends that there are three types... but it was a few months ago.

[20:57] <sorear> niecza can't goto-into-blocks, if that's what you mean

[20:58] <masak> ok.

[20:58] <flussence> niecza: &sprintf:($,*@).wrap({ say 'hai'; callsame }); sprintf('%d', 2);

[20:58] <p6eval> niecza v7-9-g0767fc1: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Action method fakesignature not yet implemented at /tmp/LvaXGpobJx line 1:␤------> [32m&sprintf:($,*@[33m⏏[31m).wrap({ say 'hai'; callsame }); sprintf[0m␤␤Action method sigterm not yet implemented at /tmp/LvaXGpobJx line 1…

[20:58] <masak> sorear: the Perl 6 spec can, as long as there are no block parameters in the way.

[20:58] *** bakedb left
[20:58] <sorear> flussence: don't bother, niecza doesn't have sprintf

[20:58] <TimToady> you'd have to pessimize inlining on finding a label

[20:59] <flussence> aww :(

[20:59] <TimToady> well, maybe not

[20:59] <masak> flussence: might be the problem in Rakudo is that sprintf is a PIR routine.

[20:59] <masak> maybe.

[20:59] <flussence> it was in Cool-str.pm ...

[20:59] <sorear> S04-statements/given.t line 117: wrong?

[21:00] <masak> flussence: oh? then it should work.

[21:00] <masak> sorear: looking.

[21:00] <flussence> I think I'm missing something painfully obvious again

[21:01] <masak> sorear: it looks suspiciously like trying to assign to something constant, yes.

[21:01] <sorear> masak: fails on both Rakudo and Niecza

[21:01] <jnthn> morning, #perl6

[21:01] <masak> jnthn! \o/

[21:02] <sorear> o/ jnthn

[21:02] <tadzik> 'night, jnthn 

[21:02] <sorear> jnthn: what do you think of the 1=>$arg specpatch?

[21:02] <masak> pugs: given 1 { $_ = 2; say $_ }

[21:02] <p6eval> pugs: OUTPUT«*** Can't modify constant item: VInt 1␤    at /tmp/CKi9v_rNI9 line 1, column 11-17␤»

[21:02] <jnthn> sorear: I'm still in "ignre it and hope it goes away" mode :)

[21:02] <masak> sorear: Pugs too.

[21:02] <sorear> jnthn: me too

[21:02] <jnthn> *ignore

[21:02] <pmichaud> I think given.t:117 is wrong, yes.

[21:03] *** hercynium left
[21:03] <TimToady> unless it defaults to <-> $_

[21:03] <TimToady> which can't work

[21:03] <masak> no?

[21:03] <dalek> niecza: 9ba8284 | sorear++ | / (3 files):

[21:03] <dalek> niecza: Implement term:<proceed>, Any.{isa,can,does}, we now pass given.t

[21:03] <dalek> niecza: review: https://github.com/sorear/niecza/commit/9ba8284234

[21:03] <TimToady> so yeah

[21:03] <TimToady> 1 can't be a rw arg

[21:03] <jnthn> is copy mebbe

[21:04] <jnthn> (no coffee yet... ;))

[21:04] <TimToady> that's possible

[21:04] <masak> yes, but why?

[21:04] <dalek> roast: 4e5c79c | sorear++ | S04-statements/for.t:

[21:04] <dalek> roast: Fudge S04-statements/for.t for niecza

[21:04] <dalek> roast: review: https://github.com/perl6/roast/commit/4e5c79c75e

[21:04] <dalek> roast: 61d88f5 | sorear++ | S04-statements/given.t:

[21:04] <dalek> roast: Fudge given.t for niecza

[21:04] <dalek> roast: review: https://github.com/perl6/roast/commit/61d88f5f47

[21:04] <masak> people can supply their own signature if they want that.

[21:04] <jnthn> True :)

[21:04] <TimToady> rakudo: given 1 -> $_ is copy { $_ = 2 }

[21:04] <masak> I don't think I'd want 'is copy' as the default.

[21:04] <p6eval> rakudo 1fcb14:  ( no output )

[21:04] <TimToady> rakudo: given 1 -> $_ is copy { $_ = 2 }; say 'alive'

[21:04] <p6eval> rakudo 1fcb14: OUTPUT«alive␤»

[21:05] <TimToady> good enuf

[21:05] <masak> nous sommes d'accord.

[21:05] *** dual joined
[21:05] <sorear> I predict that by the time of the July release, Rakudo will be the faster one, but Niecza will have the more features

[21:06] <masak> ok... that settles it. I should really start a functionality grid for Pugs/Rakudo/Niecza.

[21:06] <thou> :-)

[21:06] *** Kivutarrr left
[21:07] <sorear> masak: don't forget alpha

[21:07] <sorear> :)

[21:07] <colomon> masak: forget alpha  ;)

[21:07] <masak> oh, true.

[21:07] <masak> alpha was fast, and perfect... just like Perl 4 :/

[21:07] <sorear> it won't really be much of a grid though

[21:08] <sorear> since Perl 6 has way more than 3 features

[21:08] <masak> a very high grid is still a grid.

[21:08] <TimToady> you have something against long grids?  :)

[21:08] <TimToady> or just put in 3 features :)

[21:08] <TimToady> or make up some fantasy implementations :)

[21:09] <sorear> yeah, I grew up around cats and screen doors, I'm biased to think that a grid strip 50 long and 4 wide is trash

[21:09] <masak> "Hufflepuff Perl 6", "Illuminati Perl 6", "Chewbaka Perl 6"

[21:11] <tadzik> Perl 6 and the Methods of Rationality

[21:11] <flussence> (and the Methods of Rats?)

[21:11] <newbee> how can i know whan methods an array supports?

[21:11] <masak> rakudo: say Array.^methods(:local).perl

[21:11] <p6eval> rakudo 1fcb14: OUTPUT«[{ ... }, { ... }, { ... }, { ... }, { ... }]␤»

[21:11] <masak> rakudo: say Array.^methods(:local)>>.name.perl

[21:11] <p6eval> rakudo 1fcb14: OUTPUT«("new", "at_pos", "perl", "splice", "delete")␤»

[21:11] <masak> rakudo: say Array.^methods>>.name.perl

[21:12] <p6eval> rakudo 1fcb14: OUTPUT«("new", "at_pos", "perl", "splice", "delete", "new", "Capture", "eager", "elems", "flat", "iterator", "list", "munch", "Bool", "Num", "Str", "exists", "fmt", "map", "perl", "reverse", "rotate", "sort", "pop", "push", "shift", "unshift", "ACCEPTS", "at_pos", "hash",…

[21:12] <sorear> I think I've sucked all the LHF out of roast's S04

[21:12] <newbee> why the ">>"?

[21:12] <masak> rakudo: say Array.^methods(:tree)>>.name.perl

[21:12] <p6eval> rakudo 1fcb14: OUTPUT«Method 'name' not found for invocant of class 'Array'␤  in main program body at line 22:/tmp/PZc8GShzZL␤»

[21:12] *** Vlavv_ joined
[21:12] <sorear> newbee: because methods returns a list

[21:12] <sorear> newbee: >>.method applies to each elemenr

[21:12] <masak> newbee: see S12.

[21:13] <newbee> rakudo: say Array.^methods.perl;

[21:13] <p6eval> rakudo 1fcb14: OUTPUT«[{ ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { .…

[21:13] <masak> rakudo: say Array.^methods(:tree).perl

[21:13] <p6eval> rakudo 1fcb14: OUTPUT«[{ ... }, { ... }, { ... }, { ... }, { ... }, [{ ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { …

[21:15] <TimToady> still would like to see S12:2268 happen

[21:16] <TimToady> esp the 'default' part

[21:17] *** newbee left
[21:17] <masak> sounds like LHF.

[21:23] *** buubot_backup left
[21:25] *** newbee joined
[21:27] *** kaare_ left
[21:29] *** molaf joined
[21:29] <sorear> TimToady: what should the return value of :tree look like?

[21:30] <jnthn> sorear: There's a spectest for that, iirc

[21:30] *** benabik left
[21:30] <jnthn> Which should be fairly accurate in its expectations.

[21:32] *** benabik joined
[21:32] <sorear> colomon: I'll be gone for a week starting tomorrow

[21:34] <colomon> ooo, a stable platform to hack on for a week.  ;)

[21:36] * colomon actually imagines he'll have very few tuits after the hack-a-thon tomorrow.

[21:36] <sorear> colomon: wanna commitbit?

[21:38] <colomon> sorear: hmmm.... I was just figuring on branching locally.  I guess if you're comfortable with it...

[21:39] <colomon> I can certainly accomplish whatever I accomplish without one.

[21:40] *** colomon left
[21:41] *** buubot_backup joined
[21:45] *** Patterner left
[21:46] *** colomon joined
[21:47] *** benabik left
[21:47] *** Psyche^ joined
[21:47] *** Psyche^ is now known as Patterner

[21:48] <colomon> afk # finding noms with the parrot crew

[21:49] *** benabik joined
[21:56] <masak> blog post! http://strangelyconsistent.org/blog/june-22-format-strings

[21:57] *** colomon left
[21:58] <jnthn> masak++

[22:06] <sjohnson> perl6

[22:08] <tadzik> yes :)

[22:12] *** cotto left
[22:13] <diakopter> is coffee

[22:13] *** whiteknight joined
[22:14] <newbee> rakudo; my (@a, @b); my $data = "abcd"; for $data.split('') -> $one, $two { push @a, $one; push @b, $two }; say @a.perl; say @b.perl;

[22:14] <newbee> rakudo: my (@a, @b); my $data = "abcd"; for $data.split('') -> $one, $two { push @a, $one; push @b, $two }; say @a.perl; say @b.perl;

[22:14] <p6eval> rakudo 1fcb14: OUTPUT«["a", "c"]␤["b", "d"]␤»

[22:14] <newbee> rakudo: my (@a, @b); my $data = "abcde"; for $data.split('') -> $one, $two { push @a, $one; push @b, $two }; say @a.perl; say @b.perl;

[22:14] <p6eval> rakudo 1fcb14: OUTPUT«Not enough positional parameters passed; got 1 but expected 2␤  in <anon> at line 2:/tmp/gmaxDK_I91␤  in main program body at line 1:src/metamodel/RoleToInstanceApplier.nqp␤»

[22:15] <jnthn> Try $one, $two?

[22:15] <newbee> rakudo: my (@a, @b); my $data = "abcd"; for $data.split('') -> $one, $two? { push @a, $one; push @b, $two }; say @a.perl; say @b.perl;

[22:15] <p6eval> rakudo 1fcb14: OUTPUT«["a", "c"]␤["b", "d"]␤»

[22:15] <newbee> rakudo: my (@a, @b); my $data = "abcde"; for $data.split('') -> $one, $two? { push @a, $one; push @b, $two }; say @a.perl; say @b.perl;

[22:15] <p6eval> rakudo 1fcb14: OUTPUT«["a", "c", "e"]␤["b", "d", Mu]␤»

[22:19] <masak> 'night, #perl6

[22:20] *** masak left
[22:31] *** newbee left
[22:31] *** pernatiy left
[22:36] *** cotto joined
[22:43] *** cooper joined
[22:43] *** perlhack joined
[22:45] <perlhack> Good morning.

[22:46] *** cotto left
[22:47] <perlhack> I again come to here!

[22:47] <perlhack> I want to know where you at the time is it ?

[22:48] <perlhack> my time is 6:48 AM

[22:48] <jnthn> perlhack: Same here! I'm waiting for breakfast restaurant to open at my hotel :)

[22:50] <pmichaud> it's 17h49 here :)

[22:50] <pmichaud> how does the future look from where you two are?  ;-)

[22:50] <perlhack> oh! i see

[22:50] <perlhack> jnthn .you are in China??

[22:50] <jnthn> perlhack: Yes, in Beijing. Arrived yesterday

[22:50] <perlhack> thanks for pminchaud

[22:50] <jnthn> perlhack: To go to http://conference.perlchina.org/bjpw2011/

[22:51] <perlhack> I in Beijing moo.

[22:51] <perlhack> too.

[22:51] <perlhack> oh!my god

[22:51] <perlhack> We would meet

[22:52] <jnthn> :)

[22:52] <perlhack> Yestoday You and to eat with XunLun ???

[22:52] <perlhack> jnthn

[22:52] <jnthn> No, yesterday I arrived and was too tired from the journey.

[22:52] <jnthn> So I had sleep. :)

[22:53] <jnthn> Hopefully today :)

[22:53] <perlhack> Oh!!!! he was bluffing......

[22:54] <perlhack> I also went to Perl conference.

[22:55] <jnthn> Nice :)

[22:56] <sorear> hello perlhack

[22:56] <perlhack> I only know a little english .

[22:56] <perlhack> hi sorear.

[22:57] <perlhack> Didn't expect so important to learn English well. To meet Daniel-> JNTHN technology

[22:57] <thou> hello, perlhack. o/

[22:57] <perlhack> hi thou.

[22:57] <perlhack> What time is it there?

[22:58] <sorear> perlhack: who is Daniel?

[22:58] <thou> perlhack: 16:58

[22:58] <perlhack> oh i see.

[22:58] <sorear> perlhack: use "/ctcp NAME time" to learn somebody's time

[22:59] <perlhack> Daniel .I had the wrong number.

[22:59] <perlhack> oh!thanks !thanks!Next time i pay attention to 

[23:01] <perlhack> my time is AM seven o'colck 

[23:02] <perlhack> Minutes + past +o'ocolck.

[23:02] <perlhack> jnthn what are doing ?

[23:03] *** wamba left
[23:03] <jnthn> perlhack: Hacking on Rakudo. :-) But it's breakfast time now :)

[23:03] <dalek> rakudo/nom: 53b20a8 | jonathan++ | src/ (2 files):

[23:03] <dalek> rakudo/nom: Add a way to flag blocks that need fresh magicals, rather than looking to steal them from outer.

[23:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/53b20a8264

[23:03] <dalek> rakudo/nom: ad94941 | jonathan++ | src/ (2 files):

[23:03] <dalek> rakudo/nom: Get enough in place to have on-demand creation of $_, $! and $/ in routines. Stub in outer finding of them for other blocks, but that's NYI.

[23:03] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ad9494127a

[23:04] <perlhack> Seven o'colck past A.M

[23:04] <jnthn> perlhack: Just "7am" is fine :)

[23:05] <perlhack> A  you're American  should have the babit of the United States.

[23:05] <perlhack> jnthn.

[23:06] <perlhack> 你是美国人，应该有美国人吃饭的时间哦

[23:06] <jnthn> perlhack: No, I'm British. :P

[23:06] <jnthn> Yinggou ren :P

[23:06] <perlhack> U  K

[23:07] <perlhack> Good Man.

[23:07] <perlhack> British  .....Good Man

[23:08] <jnthn> I go for breakfast. :) Back later.

[23:09] <perlhack> Ok ...sorry ...I am learning English 哈哈 

[23:09] <jnthn> It's better than my Chinese :)

[23:10] <perlhack> I can teach you!

[23:10] <perlhack> my Chinese very good.

[23:11] <perlhack> you are luckey to able to travel abroad

[23:11] <perlhack> Me too.

[23:11] <sorear> jnthn travels a lot

[23:11] <perlhack> Oh!my god    ......

[23:12] <sorear> he's British but he's lived in Slovakia, Sweden, a few others

[23:12] <perlhack> I admire ah.

[23:12] <sorear> "Oh my god" in English usage is a very strong suprise... something you might say once a year

[23:13] <jnthn> breakfast - back later :)

[23:13] <perlhack> strong suprise

[23:13] <perlhack> OK Ok Ok  jnthn.

[23:14] <sorear> perlhack, what is 吃饭 ?

[23:15] <perlhack> I go to work in China Unicom .I get off work to eat.

[23:15] <perlhack> you are Chinese very good.really.....

[23:16] *** Moukeddar joined
[23:17] <perlhack> Sorear is a genius.....

[23:17] <sorear> Why do you say that?

[23:18] <perlhack> your Chinese grmmar should not wrong.

[23:18] <perlhack> grammar

[23:18] <perlhack> hm.....

[23:18] <sorear> I spent yesterday reading about Chinese grammar

[23:19] <sorear> and I've studied Japanese for years

[23:19] <sorear> and I'm using an Internet dictionary

[23:19] <perlhack> oh!!!!!!!!!!  i see

[23:20] <perlhack> how old are you ?

[23:20] <sorear> 20

[23:20] <perlhack> me too

[23:20] <sorear> we said yesterday

[23:21] <perlhack> !!!!!you are really cute.....

[23:22] <perlhack> sorear what nationalbity?

[23:22] <sorear> American

[23:22] <sorear> Why do you say cute?

[23:22] <perlhack> I very like it

[23:22] <perlhack> 可爱。。。

[23:23] <sjohnson> hahaha

[23:23] <sjohnson> cuz you're cute sorear, why else?

[23:23] *** aloha left
[23:24] *** aloha joined
[23:24] <perlhack> Because I have not real and americans ever talk to .

[23:25] <perlhack> Because he is 20.

[23:25] <sorear> I don't like Americans

[23:25] <perlhack> years old.

[23:25] <sorear> they're all so quiet

[23:25] <perlhack> unlike ???

[23:26] <sorear> I have not been in other places

[23:26] <sorear> I cannot make comparisons

[23:26] <perlhack> they are all so clear.

[23:27] <perlhack> you can come to China 

[23:29] <perlhack> I cannot make comparisons with you .I am very poor.

[23:29] <sorear> you can write English

[23:30] <perlhack> Oh! i thaught helpself

[23:30] <perlhack> taught helpself

[23:30] <perlhack> myself....

[23:31] <perlhack> Do you want to speak Chinese.I can teach you in the network

[23:32] <sorear> yes, but I don't have much time now

[23:33] <perlhack> Oh!American are computer genius...

[23:33] <perlhack> Americans

[23:34] <sjohnson> sorear: what are you from?

[23:34] <sorear> perlhack: heh, do not generalize

[23:34] <sorear> sjohnson: 'what' am I from?

[23:34] <sjohnson> oops

[23:34] <sjohnson> where*

[23:36] <sorear> sjohnson: san diego

[23:36] *** cotto joined
[23:36] <perlhack> generalize    equal to Chinese "推广"

[23:36] * sjohnson is from the Canadas

[23:36] <sorear> sjohnson: I am currently sitting about 50m from where I was born

[23:36] <perlhack>  I want to go Canadas

[23:37] <sorear> perlhack: yes, that looks appropriate

[23:38] <sjohnson> sorear: :)

[23:38] <perlhack> what mean "san diego"

[23:38] <sjohnson> it's a city in the state of California

[23:39] <sorear> it's at the south west corner of the US

[23:39] *** thou left
[23:39] <perlhack> oh! thanks///////

[23:39] <sorear> next to water on one side, Mexico on another

[23:40] <perlhack> Which country more than beauty?

[23:40] *** bluescreen10 joined
[23:43] <diakopter> so, I go to fill out my address on a web form, and Google Chrome drops down a list of 50 people I've never heard of and their addresses. I click the Options link at the bottom of the dropdown and it shows their names and full mailing addresses.  What should I do?

[23:44] <sorear> diakopter: private PC?

[23:44] <diakopter> yup

[23:44] <sorear> perlhack: try again

[23:44] <diakopter> the addresses seem to be randomly dispersed across the US

[23:45] <perlhack> why my could "try again"

[23:45] <sorear> 16:40 < perlhack> Which country more than beauty?

[23:45] <sorear> I did not understand

[23:45] <sorear> can you try again?

[23:45] <diakopter> Any Googlers here?

[23:46] <perlhack> pretty girl 

[23:46] <perlhack> i said the pretty girl

[23:46] <perlhack> sorear.....

[23:46] <perlhack> you understand ??????????

[23:47] <sorear> no.

[23:47] <perlhack> Which country more than the pretty girl...

[23:48] <perlhack> As a man should know more

[23:48] <perlhack> Hey hey

[23:48] <sorear> I do not understand what you mean by "than"

[23:49] <perlhack> more than  equal to "very much "

[23:49] <sorear> we say it like

[23:50] <sorear> The USA is bigger than Cuba

[23:50] <sorear> "than" needs an adjective

[23:50] <sorear> "Which country more than beauty" has no adjective

[23:50] <sorear> so it makes no sense

[23:51] <perlhack> make no sence  

[23:51] <perlhack> ....

[23:51] *** molaf left
[23:52] <perlhack> Chinese internet dictionary teach wront we

[23:53] <sorear> what are you trying for in Chinese?

[23:53] <perlhack> yes!

[23:53] <perlhack> 我想用中文啊

[23:53] <perlhack> 哈哈我最熟悉不过了

[23:54] *** lithos joined
[23:55] <lithos> hi perl6!

[23:55] *** cdarroch left
[23:56] <sorear> Hello lithos

[23:56] * lithos wonders if something like this makes sense: http://lith-ology.blogspot.com/2011/06/perl6-2011-06-29.html

[23:56] <perlhack> yw   lithos

[23:59] <perlhack> what are you doing ?=>                lithous

[23:59] <lithos> i would be happy to find a way to do summaries again with my limited tuits

[23:59] <lithos> not sure if the format is useful

