[00:00] *** cosimo joined
[00:00] *** dayangkun_ joined
[00:03] *** dayangkun__ left
[00:06] *** [Coke] left
[00:13] *** [Coke] joined
[00:17] *** Chillance left
[00:36] *** kfo_ joined
[00:39] *** kfo left
[00:47] *** [Coke] left
[00:51] *** [Coke] joined
[00:54] *** dayangkun__ joined
[00:56] *** dayangkun_ left
[01:18] *** ymasory joined
[01:26] *** ymasory left
[01:29] *** whiteknight left
[01:35] *** Eevee left
[01:37] *** am0c joined
[01:39] *** ymasory joined
[01:56] *** dayangkun_ joined
[01:59] *** dayangkun__ left
[02:12] *** dman_d_ joined
[02:23] *** dman_d_ left
[02:27] *** silent_h_ left
[02:42] *** woosley joined
[02:59] *** hudnix left
[03:28] *** molaf joined
[03:33] *** redelk joined
[03:39] *** redelk left
[03:43] *** dayangkun_ left
[03:43] *** dayangkun_ joined
[03:47] *** molaf left
[03:56] *** orafu left
[03:56] *** orafu joined
[04:12] *** satyavvd joined
[04:15] *** orafu left
[04:27] *** colomon left
[04:50] *** alester left
[05:05] *** dayangkun_ left
[05:06] *** dayangkun_ joined
[05:08] *** kaare_ joined
[05:10] *** birdwindupbird joined
[05:17] *** donri joined
[05:17] *** stepnem joined
[05:19] *** sftp_ left
[05:21] *** ymasory left
[05:22] *** agentzh joined
[05:34] *** mberends left
[05:36] *** zby_home_ left
[05:36] *** Eevee joined
[05:47] *** justatheory joined
[05:49] *** takesako__ left
[05:49] *** takesako__ joined
[05:51] *** colomon joined
[05:53] *** wtw joined
[06:00] *** meswami joined
[06:04] *** dayangkun__ joined
[06:06] *** guidj0s joined
[06:07] *** dayangkun_ left
[06:11] *** meswami left
[06:13] *** DrZoidberg joined
[06:27] *** dayangkun_ joined
[06:31] *** dayangkun__ left
[06:35] *** coldhead joined
[06:38] *** Layla_91 joined
[06:38] <Layla_91> helo o/

[06:40] <Layla_91> mmm.. like ghost city O_o

[06:41] *** dayangkun__ joined
[06:42] *** dayangkun_ left
[06:46] <moritz> you mean ghosts sneaking up from behind and saying "Boo" from time to time? :-)

[06:47] <Layla_91> hehe :D

[06:47] *** birdwindupbird left
[06:47] <Layla_91> Booooooo! :P

[06:48] *** birdwindupbird joined
[06:48] *** DrZoidberg left
[06:49] <Layla_91> people come and leave.. like what happens in life.... :-/

[06:50] <moritz> see Detroit :/

[06:51] <Layla_91> Detriot? what's with it?

[06:51] *** guidj0s left
[06:51] <moritz> it's rather empty

[06:52] <TiMBuS> its not a city, its a house farm. you just gotta harvest them

[06:52] <Layla_91> mmm... spooky O_O

[06:57] <Layla_91> time for my morning cookie :P see you ghosts! :-O

[07:07] <Layla_91> guys, i want something :P I have a directory with files and directories inside it, I need to replace all occurences of that start with <? followed by anything that is not php or xml with <?php in all files and directories in that folder.. can you give me a one liner ? :)

[07:08] *** dayangkun_ joined
[07:09] *** dayangkun__ left
[07:10] *** GinoMan joined
[07:13] <sorear> Layla_91: find dir -type f | xargs perl -i -pe 's/PATTERN/REPLACEMENT/'

[07:13] <sorear> s///g

[07:18] *** wallberg joined
[07:21] <Layla_91> thanks sorear :)

[07:22] <Layla_91> by the way, if it is early morning there where you are, listen to this I liked it^_^  http://www.youtube.com/watch?v=N6O2ncUKvlg&feature=player_embedded#at=43

[07:22] <sorear> heheh "early" morning

[07:22] <sorear> 0023

[07:23] <Layla_91> sorear: oh too late go to sleep :P Still listen to the song I am hearing it all morning ^_^

[07:26] *** cosimo left
[07:28] <jnthn> morning o/

[07:28] <Layla_91> jnthn: \o/!

[07:28] <jnthn> Layla_91: \o/!

[07:28] <Layla_91> you too listen to the song I posted :P it is old but made my morning :D

[07:29] <Layla_91> jnthn: i have bad news :S but will tell you later, (do not want to ruin my mood :S) 

[07:35] *** dayangkun__ joined
[07:35] <jnthn> Layla_91: on noes 

[07:35] * jnthn can guess what it will be :'(

[07:37] <tadzik> Layla_91: \o/

[07:37] <Layla_91> jnthn: i was going crazy :( forget it :(

[07:37] <Layla_91> tadzik: heeey! :D

[07:37] <tadzik> and good morning pandas

[07:37] <Layla_91> tadzik: No more zebras? :P

[07:37] <jnthn> And the animal of the month is... :)

[07:39] *** dayangkun_ left
[07:39] <moritz> zeda! panbra!

[07:39] <Layla_91> mmm.. i love Squirrels :P

[07:40] <Layla_91> they are cute ^_^

[07:40] <jnthn> Until they attack

[07:40] <jnthn> :)

[07:40] <tadzik> I can't sleep anymore! /o\

[07:40] <Layla_91> noooo.. they are not like humans :P

[07:41] <Layla_91> tadzik: what is the time there?

[07:41] <moritz> .oO( "an army of squirrels is still an army" )

[07:41] <jnthn> heh :)

[07:41] <Layla_91> moritz: squirrels are friendly :(

[07:41] <moritz> Layla_91: I've seen squirrels (verbally) quarrel about food on our balcony :-)

[07:42] <Layla_91> moritz: they need food just like us :)

[07:43] *** fhelmberger joined
[07:43] <moritz> in fact is was quite cute how they argued :-)

[07:44] <tadzik> Layla_91: 09:43, but it's because of the squirrels, jnthn made me scared :)

[07:44] <Layla_91> tadzik: they ARE FRIENDLY! :D

[07:44] <Layla_91> i love them ^_^

[07:58] *** Layla_91 left
[07:59] <jnthn> .oO( phew, I managed to resist posting the link to the news story about a pack of squirrels nomming a dog... )

[08:00] <tadzik> .g squirrels ate dog

[08:00] <phenny> tadzik: http://www.bbc.co.uk/1/hi/4489792.stm

[08:01] <tadzik> Russian squirrels! And you told me they're cute Layla!

[08:02] *** coldhead is now known as coldhead-1

[08:06] *** daxim joined
[08:12] * moritz thinks about the error messages again

[08:13] <moritz> suppose we do carry the main information about exception classification in types

[08:13] <moritz> then there will be a bunch of roles like X::IO and X::Syntax etc. that can be composed into error classes

[08:13] <moritz> and then there will be the actual error classes

[08:14] <moritz> would it make sense to pack them into separate namespaces? a la  EX::IO::CloseFailed does X::IO { ... }  

[08:16] <moritz> or maybe not, if we want to keep them all as roles, and pun them for instantiation. Then all of them would be easily reusable for new error objects

[08:21] *** dakkar joined
[08:26] <jnthn> Having some kind of namespace hierarchy doesn't strike me as a bad thing.

[08:26] <jnthn> Was X vs EX deliberate there?

[08:27] <moritz> that's what my question was about

[08:28] *** f00li5h left
[08:28] <moritz> if it makes sense to have (say) X:: for more general roles that are mixed into directly used error types in the EX:: namespace

[08:28] <moritz> but I guess it's not really a good idea to separate them

[08:30] <jnthn> Oh, I see

[08:30] <jnthn> No, I think I'd rather not have things spread over two top-level namespaces.

[08:33] *** dayangkun joined
[08:35] *** dayangkun__ left
[08:35] * moritz discards the idea

[08:48] *** daxim left
[08:48] *** daxim joined
[08:49] *** dayangkun left
[08:49] *** coldhead-1 is now known as coldhead

[08:50] *** dayangkun joined
[08:55] <moritz> I still wonder if we should have some uniq IDs except the type, to ease i18n

[08:57] *** Mowah left
[08:59] *** daxim left
[08:59] *** daxim joined
[08:59] <daxim> yes please.  "RAKUDO-123 You forgot to mogrify the frobnitzer."  "RAKUDO-123 Sie haben versäumt, den Frobnitzer zu mogrifizieren."

[09:00] * moritz is not sure if the error ID should be shown by default

[09:00] <moritz> and if yes, if at the end maybe

[09:01] *** nymacro joined
[09:08] *** f00li5h joined
[09:28] *** JimmyZ joined
[09:36] *** JimmyZ left
[09:44] *** pmurias joined
[09:48] *** Axius joined
[09:52] *** daxim left
[09:56] *** woosley left
[09:56] *** bacek left
[09:56] *** ph joined
[09:58] <moritz> rakudo: role A { has $.x }; role B { has $.x }; class N does A does B { }; say N.new(x => 2).x

[09:58] <p6eval> rakudo 5ac05e: OUTPUT«===SORRY!===␤Attribute '$!x' conflicts in role composition␤»

[09:59] <moritz> :(

[10:03] *** daxim joined
[10:05] <jnthn> That's...correct, no?

[10:05] <jnthn> And if the attribute didn't conflict, the accessor methods surely would.

[10:07] <moritz> right, but not what I want right now :-)

[10:07] <moritz> I know that it's sane behavior, and that I can't have it both ways :-)

[10:13] <moritz> what I'm currently considering is: many errors include the error message from the operating system

[10:13] <moritz> for example: "Can't open '$<file>' for writing: $!"

[10:13] <moritz> so I probably want and $.os-error attribute somewhere

[10:13] <moritz> s/and/an/

[10:14] <moritz> and first I wanted to stick it into X::IO, but then I realized that it's not just IO

[10:14] *** pernatiy left
[10:14] <moritz> for example memory allocation can also fail with an OS error

[10:14] <moritz> so, separate role? or just resolve the few conflicts manually?

[10:34] <flussence> I kinda like the idea of using roles like a tagging system for exceptions, so +1 to that

[10:37] *** wallberg left
[10:58] <jnthn> moritz: A role isn't supposed to conflict with itself

[10:58] <jnthn> moritz: So separate role could work

[10:58] <jnthn> does OSErrorContainage

[11:00] *** agentzh left
[11:26] *** bacek joined
[11:31] *** jfried joined
[11:36] *** kjeldahl joined
[11:40] *** hudnix joined
[11:55] *** Patterner left
[11:56] *** Psyche^ joined
[11:56] *** Psyche^ is now known as Patterner

[11:57] *** wtw left
[11:58] *** birdwindupbird left
[12:01] *** birdwindupbird joined
[12:02] *** pernatiy joined
[12:11] *** shi joined
[12:17] *** Tedd1 left
[12:19] *** dayangkun left
[12:24] *** Axius left
[12:29] *** Tedd1 joined
[12:30] *** [Coke] left
[12:34] *** [Coke] joined
[12:36] *** satyavvd left
[12:37] <birdwindupbird> 1

[12:39] *** coldhead left
[12:45] <takadonet> 2

[12:46] <moritz> perl6: print 1 + 2

[12:46] <p6eval> pugs, rakudo 5ac05e, niecza v4-66-g11b04b4: OUTPUT«3»

[12:52] *** Mowah joined
[12:52] *** Mowah left
[12:54] *** [Coke] left
[12:55] *** [Coke] joined
[12:56] *** Mowah joined
[13:08] *** Holy_Cow joined
[13:10] *** hanekomu joined
[13:12] *** MayDaniel joined
[13:17] *** Mowah left
[13:17] *** Mowah joined
[13:28] *** pmurias left
[13:28] *** MayDaniel left
[13:39] *** ymasory joined
[13:39] *** Holy_Cow left
[13:40] *** [particle]1 is now known as [particle]

[13:42] *** kaare__ joined
[13:53] *** sftp joined
[14:00] <bbkr_> std: "a" ~~ / * ** 1/

[14:00] <p6eval> std 4608239: OUTPUT«ok 00:01 123m␤»

[14:00] <bbkr_> rakudo: "a" ~~ / * ** 1/

[14:00] <p6eval> rakudo 5ac05e: OUTPUT«===SORRY!===␤Quantifier follows nothing at line 22, near " ** 1/"␤»

[14:01] <jnthn> Hmm...what does STD parse that * as?

[14:01] * moritz believes rakudo in this case

[14:01] <bbkr_> which one is correct? STD is missing detection of this case or Rakudo should process it?

[14:01] <moritz> std: /* ** 1/

[14:01] <p6eval> std 4608239: OUTPUT«[31m===[0mSORRY![31m===[0m␤Quantifier quantifies nothing at /tmp/oaE_lVbzF0 line 1:␤------> [32m/*[33m⏏[31m ** 1/[0m␤Check failed␤FAILED 00:01 120m␤»

[14:02] <bbkr_> o!

[14:02] <jnthn> er...

[14:02] <moritz> if I read the parse tree correctly, it quantifies the whitespace

[14:02] <jnthn> oh...

[14:02] <jnthn> Hm

[14:03] *** [Coke] left
[14:03] <jnthn> Unless :s is on, that's almost certainly wrong. I'm skeptical it's a good idea even then...

[14:03] <moritz> even with :s it's wrong, IMHO

[14:03] <flussence> looks wrong to me too

[14:03] <bbkr_> where should I report?

[14:03] <jnthn> Yeah, quantifying <.ws> is generally wrong.

[14:03] * jnthn thinks Rakudo calls this one right

[14:04] <jnthn> niecza: say  "a" ~~ / * ** 1/

[14:04] <p6eval> niecza v4-66-g11b04b4: OUTPUT«␤Unhandled Exception: OutOfMemoryException␤»

[14:04] <moritz> http://nopaste.snit.ch/40771

[14:04] <jnthn> Wow :)

[14:04] <moritz> the hopefully relevant part of the parse tree

[14:04] *** [Coke] joined
[14:06] <jnthn> *nod*

[14:06] * jnthn agrees with moritz++ analysis

[14:07] <dalek> evalbot: 55fbc65 | moritz++ | build-scripts/rebuild-std.sh:

[14:07] <dalek> evalbot: [rebuild-std.sh] fix permission

[14:07] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/55fbc6521d

[14:07] <moritz> bbkr_++ # finding bugs

[14:09] <dalek> evalbot: 7160e0c | moritz++ | build-scripts/rebuild-std.sh:

[14:09] <dalek> evalbot: update paths

[14:09] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/7160e0ccdc

[14:16] *** [Coke] left
[14:17] *** alester joined
[14:20] <moritz> std: / * ** 1/ # update should work now

[14:20] <p6eval> std 3468e14: OUTPUT«ok 00:01 121m␤»

[14:26] <moritz> TimToady: ^^

[14:26] *** mkramer1 left
[14:29] *** molaf joined
[14:30] *** [Coke] joined
[14:33] *** am0c left
[14:41] <tadzik> do we have anything fancy for NEWS this month?

[14:42] <tadzik> I didn't do any commits this month :\

[14:42] *** jaffa4 joined
[14:43] *** kjeldahl left
[14:45] <moritz> we have a new IO::Socket::INET implementation

[14:47] <tadzik> hmm, I was planning to bite the Socket PMC a bit

[14:50] <sorear> good * #perl6

[14:50] *** ph left
[14:50] <moritz> oh hai sorear 

[14:52] <dalek> rakudo: 5ee8c3c | moritz++ | build/PARROT_REVISION:

[14:52] <dalek> rakudo: bump PARROT_REVISION for testing

[14:52] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/5ee8c3c18a

[14:52] <dalek> rakudo: 5809a86 | moritz++ | src/ (5 files):

[14:52] <dalek> rakudo: tracked rename of some parrot functions

[14:52] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/5809a86b2d

[14:53] <jnthn> moritz++

[14:53] <flussence> anyone wanna add that Str.indent thing I did?

[14:54] <moritz> flussence: is it spec? where is it?

[14:54] <flussence> bottom of S32/Str, and lemme find the code...

[14:55] <flussence> https://github.com/flussence/p6-misc/blob/master/Str-indent.pm

[14:56] * moritz will look into copying it over

[15:04] *** [Coke] left
[15:05] *** [Coke] joined
[15:09] <jnthn> meeting &

[15:15] *** jaffa4 left
[15:16] <moritz> flussence: I've copied your code into src/core/Str.pm, and added an 'our $?TABSTOP = 8' on the top...

[15:16] <moritz> flussence: it compiles, but then at startup bails out with 'Could not find sub &substr'

[15:17] *** colomon left
[15:17] <moritz> flussence: I'm interested in integrating it, but can't spend much time debugging that issuse right now

[15:21] <tadzik> I can look into it (free karma!)

[15:22] <moritz> it comes at the cost of time you need to invest

[15:22] <moritz> ++tadzik

[15:23] <flussence> maybe that needs to be a method on the string...

[15:23] * flussence doesn't have much idea how the internal bits work

[15:24] <moritz> calling setting functions from within the setting is a bit brittle

[15:24] <moritz> but I haven't seen any substr() in your patch

[15:26] <flussence> huh, well now I'm lost.

[15:28] <moritz> might be related to 'our $?TABSTOP' or so either

[15:35] <sorear> our $?TABSTOP is almost certainly not valid Perl6

[15:35] <moritz> I know :/

[15:37] *** GinoMan left
[15:38] *** Holy_Cow joined
[15:40] <tadzik> Confused at line 5003, near "}\n# From s"

[15:40] <tadzik> ...sweet

[15:50] *** jaffa4 joined
[15:53] *** bacek left
[15:54] <tadzik> yayitcompiled

[15:54] <tadzik> any spectests to run for that?

[15:56] *** daxim left
[15:58] <tadzik> flussence: # Looks like you failed 8 tests of 51

[15:59] <tadzik> http://nopaste.snit.ch/40774

[16:02] * TimToady is wondering whether try {...} defaults not to handling an exception but rather to 'unthrowing' it, that is, turning it back into an unthrown exception, more like fail returns

[16:03] *** Axius joined
[16:03] <tadzik> flussence: want me to branchpush it, so you can check it out?

[16:04] <TimToady> also, $! isn't so much the "current exception" as it is the current exception state, which happens to know how to report the current exception if stringified, for instance

[16:05] <TimToady> but could easily be told to dump the entire exception state to a file, for instance, where the current state could be as detailed as you like, including "cockpit recordings" and the like

[16:06] *** shi left
[16:06] <PerlJam> TimToady: you have some lofty ambitions for Perl 6  ;)

[16:06] <PerlJam> TimToady++

[16:07] *** hanekomu left
[16:08] <TimToady> right now the most sought-after cockpit recordings in the world are far from lofty

[16:09] *** mj41 joined
[16:10] <PerlJam> They were lofty at the time of recording.

[16:11] *** mtk joined
[16:11] <TimToady> but now their loftiness is abysmal...

[16:12] <flussence> tadzik: go ahead

[16:12] *** risou joined
[16:13] <tadzik> flussence: hand on, compiling once again

[16:16] <flussence> (I think those test fails are caused by $?TABSTOP being odd, I'll get around to trying in a minute...)

[16:19] <tadzik> is github down

[16:20] <tadzik> ?

[16:20] <flussence> up for me

[16:21] <tadzik> nvm, I fail at git

[16:21] <tadzik> lolipushed

[16:22] <tadzik> flussence: https://github.com/rakudo/rakudo/compare/str-indent

[16:23] <flussence> ok, compiling rakudo with it now

[16:24] <PerlJam> TimToady: what's a link to your "natural language concepts" paper?

[16:24] *** GinoMan joined
[16:24] *** pernatiy left
[16:25] <PerlJam> google is being obstinate for me right now.

[16:27] <PerlJam> never mind .... I found something that's close enough to what I was looking for.

[16:27] <tadzik> mind sharing?

[16:32] *** birdwindupbird left
[16:40] *** MayDaniel joined
[16:41] <flussence> tadzik: I took the indent.p6 in my repo, commented out the "use Str-indent", changed its local $?TABSTOP to 8 and all the tests pass.

[16:41] <flussence> guess it'll do until rakudo gets proper constants...

[16:44] *** risou_ joined
[16:46] <flussence> problem is, $?TABSTOP *has* to be defined and I can't just do $tab=$?TABSTOP//8; ...

[16:46] <tadzik> oh, I didn't change this local tabstop

[16:46] <flussence> yeah it's defined twice, that'll probably slip you up :)

[16:46] <tadzik> aye, now it works

[16:46] <tadzik> but it doesn't if I comment it out. Intentional?

[16:47] <flussence> if you didn't set it, it *should* default to 8... I don't know a good way to do that in rakudo though.

[16:47] *** risou left
[16:47] <tadzik> hrm

[16:48] <tadzik> what's the ? twigil anyway?

[16:48] <flussence> constant

[16:48] <flussence> AIUI these should be globals anyway

[16:49] <flussence> which is probably what sorear was saying before about it not being valid perl6

[16:49] <flussence> my/our should be "constant"

[16:49] <tadzik> hmmm

[16:50] <tadzik> what if we make it a contextual, and warn the users "don't change it, it's a bug you can"?

[16:50] <flussence> that'd be better than nothing...

[16:51] <tadzik> I'll see if it works then

[16:51] *** krunen left
[16:51] *** krunen joined
[16:52] <tadzik> waitwaitwait. What is $?TABSTOP speced to be?

[16:52] <flussence> afaik, nothing

[16:52] <flussence> .indent says "$?TABSTOP or 8"

[16:52] <tadzik> but the spectests use it, the $?TABSTOP?

[16:53] *** itz_ joined
[16:53] <sorear> it's supposed to be caller.hints('$?TABSTOP') // 8

[16:53] <sorear> but only one implementation supposed CallFrame.hints yet :P

[16:53] <tadzik> no TABSTOP in spectests.

[16:54] <tadzik> flussence: no spectest for indent in roast, are those your?

[16:54] <tadzik> * yours?

[16:54] <flussence> those were mine, yes

[16:54] *** cdarroch joined
[16:54] *** cdarroch left
[16:54] *** cdarroch joined
[16:55] <tadzik> ok. So it's not much of a problem that $?TABSTOP is not visible in Rakudo programs, yep?

[16:55] <flussence> more of a "I don't know what I'm doing" problem :)

[16:55] <flussence> but yeah

[16:55] <tadzik> do you have a roast commit bit?

[16:56] <flussence> I think I do actually...

[16:56] <flussence> yep

[16:57] *** mj41 left
[16:57] *** Vlavv left
[16:57] *** itz left
[16:57] *** barika left
[16:58] *** Vlavv joined
[16:59] <tadzik> can you commit the tests you wrote? I'll merge the branch then, we'll test it in the field

[16:59] *** mberends joined
[16:59] <flussence> will do

[17:00] *** jaffa4 left
[17:01] *** dual joined
[17:02] *** dakkar left
[17:03] *** barika joined
[17:08] *** GinoMan left
[17:09] *** MayDaniel left
[17:14] *** hanekomu joined
[17:16] <dalek> roast: 7309150 | (Anthony Parsons)++ | S32-str/indent.t:

[17:16] <dalek> roast: Add tests for Str.indent

[17:16] <dalek> roast: review: https://github.com/perl6/roast/commit/7309150536

[17:17] <flussence> /o\

[17:18] <tadzik> where did your karma go?

[17:18] <tadzik> flussence++

[17:19] <flussence> .oO( I wish rebuilding core.pir was a bit faster... )

[17:19] *** hanekomu left
[17:20] <tadzik> aye

[17:21] <tadzik> flussence: rakudo in str-indent branch now runs the indent spectests. When I get back home, I'll see if everything passes and merge it if so

[17:21] <flussence> yay

[17:22] *** Vlavv left
[17:23] *** Vlavv joined
[17:24] *** fhelmberger left
[17:25] <tadzik> and I'll make sure you're listed as one of the contributors in an upcoming release :)

[17:35] *** Tedd1 left
[17:37] *** rgrau joined
[17:39] *** uniejo joined
[17:41] *** uniejo left
[17:42] *** Axius left
[17:43] *** Mowah left
[17:51] *** Tedd1 joined
[17:53] *** PZt left
[17:53] *** kjeldahl joined
[17:53] *** PZt joined
[17:54] *** cschimm1 joined
[17:55] *** uniejo joined
[17:56] *** nymacro left
[18:01] *** chromis joined
[18:03] *** icwiener joined
[18:03] *** GinoMan joined
[18:04] *** GinoMan left
[18:04] *** GinoMan joined
[18:13] *** chromis left
[18:16] *** saaki left
[18:21] *** Chillance joined
[18:29] *** jaldhar_ joined
[18:30] *** _jaldhar left
[18:36] *** Rotwang joined
[18:40] *** Moukeddar joined
[18:40] <Moukeddar> hello

[18:41] <tadzik> hello

[18:42] <Moukeddar> what's up ?

[18:42] <tadzik> we're close to having Str.indent in Rakudo, thanks to flussence 

[18:43] <Moukeddar> is there an IDE for perl ?

[18:44] <sorear> padre

[18:44] <sorear> never used it personally, but the main dev is a regular here

[18:45] <tadzik> seen szabgab

[18:45] <aloha> szabgab was last seen in #perl6 20 days 15 hours ago joining the channel.

[18:46] <Moukeddar> http://www.activestate.com/perl-dev-kit

[18:46] <Moukeddar> ??

[18:46] <mberends> yes, Padre is very good. http://padre.perlide.org/ and also a standard package in Debian and Ubuntu.

[18:46] <tadzik> never heard of it

[18:46] <tadzik> it's even in Gentoo

[18:46] <tadzik> (padre)

[18:47] <tadzik> even up-to-date

[18:47] <Moukeddar> how about Komodo IDE ?

[18:50] <sorear> why are you asking about IDEs we've never heard of?

[18:50] <mberends> it's probably ok, but we are mostly too cheapskate here to pay for software ;)

[18:50] <tadzik> :)

[18:50] <Moukeddar> pay what ?

[18:50] <sorear> you asked for an IDE, mberends gave you one

[18:51] <mberends> http://www.activestate.com/komodo-ide : from $295

[18:51] <Moukeddar> thank you guys :)

[18:51] <Moukeddar> who said i was going to pay

[18:51] <Moukeddar> trial is good

[18:51] <mberends> :)

[18:54] <Moukeddar> is there a starter tutorial for Perl6 ?

[18:54] <tadzik> lotsa them

[18:55] <tadzik> check out perl6.org

[18:56] <mberends> Moukeddar: if you know a bit of Perl 5, then http://www.perlgeek.de/en/article/5-to-6

[18:56] *** risou_ left
[18:56] <Moukeddar> idk anything about perl5 or 6

[18:57] <Moukeddar> so i'm a complete Noob

[18:59] <tadzik> try the book

[18:59] <Moukeddar> yes

[18:59] <Moukeddar> i got it

[19:00] <Moukeddar> love the preface :)

[19:00] <mberends> Moukeddar: tutorials for complete Noobs have not been written yet. But here's an idea: you try to write one (as a complete Noob) and ask us for help from time to time. Chronicle your path to enlightenment on a blog site of your choice.

[19:01] <Moukeddar> mberends, folks on other channel said it's not good to write while learning

[19:02] <mberends> I disagree. That would be similar to not being allowed to talk or ask questions.

[19:02] <Moukeddar> and i'm not a complete noob

[19:02] <Moukeddar> i code in C# pretty good :)

[19:02] <Moukeddar> i guess they're just too cocky

[19:03] *** mikemol left
[19:03] <mberends> cool! several Perl 6 devs are writing implementations in C#.

[19:03] <frettled> uncool! uncool!

[19:04] *** kjeldahl left
[19:04] *** mikemol joined
[19:04] <Moukeddar> mberends, i like the idea of writing while learning

[19:04] <Moukeddar> it helps improve the learning experience right ?

[19:05] <frettled> There's a good chance for that!

[19:05] <mberends> yes, and also gives other people the opportunity to give you useful suggestions.

[19:05] <Moukeddar> sweet

[19:05] <sorear> Moukeddar: that other channel sounds awful

[19:05] <Moukeddar> i'll finish my exams and get started

[19:05] <Moukeddar> sorear, they're aweful

[19:05] <Moukeddar> well some of them

[19:06] <sorear> why do you go there?

[19:06] <Moukeddar> it's C# channel

[19:06] <tadzik> then consider staying on the Most Friendly Channel Ever!

[19:06] <tadzik> .u copyleft

[19:06] <phenny> tadzik: Sorry, no results for 'copyleft'.

[19:06] <tadzik> uncool

[19:06] <mberends> :(

[19:06] <tadzik> Stallman is not amused

[19:07] <Moukeddar> i miss this channel :)

[19:08] <mberends> Moukeddar: There is life after exams. And in that afterlife, there is #perl6.

[19:09] <Moukeddar> i thought after life was worms and underground

[19:09] <Moukeddar> but #perl6 is a better choice :)

[19:09] <tadzik> yeah, there it's just Pandas and Zebras :)

[19:10] <tadzik> mberends: have you seen the new badges on modules.perl6.org? :)

[19:11] <Moukeddar> Worms : Reloaded :)

[19:13] *** uvtc joined
[19:13] <mberends> tadzik: the cute panda! yes!

[19:13] <Moukeddar> no

[19:13] <Moukeddar> the evil pandas

[19:13] <uvtc> tadzik: Love the pandas. :)

[19:13] <Moukeddar> you never want them near you

[19:14] *** GinoMan2440 joined
[19:15] <mberends> tadzik: and what do you have to achieve to win a zebra?

[19:15] <Moukeddar> achievement unlocked

[19:16] <tadzik> mberends: conform to the latest specs. Seen the p6u email?

[19:16] <tadzik> I should add it to the fame-and-profit

[19:16] *** GinoMan left
[19:16] <tadzik> Moukeddar: are they so evil?

[19:17] <tadzik> squirrels are evil, that's fo sure

[19:17] <uvtc> tadzik: I think mberends was suggesting that zebras are one level higher than pandas. :)

[19:17] <Moukeddar> all animals are evil

[19:17] <Moukeddar> except humans

[19:17] <Moukeddar> they're kinda cute

[19:17] <mberends> tadzik: :-) I don't have time to subscribe to p6* emails

[19:17] *** nadim left
[19:18] <tadzik> oh, that one is truly low-traffic. Seems that I should have blug about that too

[19:18] *** noganex_ joined
[19:18] <mberends> instead I leech off the #perl6 community to read the mails on my behalf.

[19:19] <tadzik> mberends: http://www.nntp.perl.org/group/perl.perl6.users/2011/04/msg1503.html

[19:19] <Moukeddar> lol mberends 

[19:19] <Moukeddar> see mberends is  nice dude

[19:19] <tadzik> from this funny-named guy "SoÅnierz"

[19:19] <mberends> tadzik++

[19:22] *** noganex left
[19:23] *** Axius joined
[19:23] *** lichtkind joined
[19:24] <lichtkind> cheers

[19:25] <mberends> hi lichtkind!

[19:25] <lichtkind> mberends: hello humble guy :)

[19:26] *** birdwindupbird joined
[19:26] <tadzik> loliblug! http://ttjjss.wordpress.com/2011/04/18/news-from-the-modules-world/

[19:27] <mberends> lol! lol!

[19:28] <tadzik> All tests successful. Mergeparty!

[19:28] <tadzik> or is someone opposing?

[19:28] <tadzik> no one, thanks

[19:29] <lichtkind> what tests did you merge?

[19:30] <tadzik> tests were already pushed, I merged the str-indent branch

[19:30] <tadzik> flussence++

[19:30] *** pmurias joined
[19:30] <flussence> :D

[19:32] *** nadim joined
[19:33] <dalek> rakudo: 44e42da | tadzik++ | src/core/Str.pm:

[19:33] <dalek> rakudo: Imported Str::indent, flussence++

[19:33] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/44e42da066

[19:33] <dalek> rakudo: 27ab7de | tadzik++ | t/spectest.data:

[19:33] <dalek> rakudo: Run spectests for indent

[19:33] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/27ab7de075

[19:33] <dalek> rakudo: 887bb5b | tadzik++ | docs/ChangeLog:

[19:33] <dalek> rakudo: Noted indent in the Changelog

[19:33] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/887bb5b695

[19:35] *** uvtc left
[19:44] *** kjeldahl joined
[19:50] *** pernatiy joined
[19:55] *** icwiener left
[19:56] *** Moukeddar left
[19:56] *** icwiener joined
[20:02] <mberends> yay! more spectests!

[20:03] *** mikemol is now known as johngalt

[20:03] *** johngalt is now known as shortcircuit

[20:04] *** shortcircuit is now known as mikemol

[20:07] *** Axius left
[20:09] *** molaf left
[20:10] *** kaare__ left
[20:11] *** gente joined
[20:11] <gente> so do we still do haskell here

[20:14] <mberends> we're short of haskell skillz to maintain Pugs

[20:14] <gente> heh

[20:14] <gente> are we open to a discussion

[20:14] <gente> cause i had a doubt

[20:15] *** araujo left
[20:16] *** araujo joined
[20:18] <PerlJam> who is "we"?

[20:23] <TimToady> we'll be glad to say all sorts of things about haskell that might or might not be true :)

[20:24] <TimToady> you might want to talk to pmurias, who seems to be our current hacker of things haskellian

[20:25] <moritz> http://blog.urth.org/2011/04/what-perl-6-and-5-have-done-right.html somebody might (or might not) want to feed the troll in the comment

[20:25] *** bacek joined
[20:27] <gente> well haskell has mutables

[20:27] <gente> that doesnt make it purely fucntional does it?

[20:28] <TimToady> well, depends on which glasses you're looking at haskell through

[20:29] <PerlJam> things are getting "more and more silent around Perl 6"?

[20:29] <gente> TimToady: well having variables doesnt make it purely fucntional

[20:29] <gente> variables == mutable state; functional is all about not having mutable state.

[20:30] <TimToady> what makes you think haskell has variables?  it has names associated with definitions, but that doesn't make them variables...

[20:30] <lichtkind> yes since they are not variable :)

[20:30] <gente> well one of the haskell guys was saying it does

[20:30] <lichtkind> the name there readonly memory  location variables

[20:31] <TimToady> unless you cheat, haskell hides all mutables inside of monads

[20:31] <gente> so if haskell doesnt have variables

[20:31] <gente> then it's not real or practical to use is it

[20:31] <sorear> have you been banned from #haskell?

[20:32] <gente> sorear: listen the topic used to sa haskell was allowed here, and no im not

[20:32] <moritz> gente: I can highly recommend "Real World Haskell". You'll learn both about Haskell and how usable it is.

[20:32] <gente> without variables how is haskell of any use though

[20:32] <TimToady> sounds like you just want to quibble over the definition of "variable" mostly

[20:32] <sorear> gente: every topic is allowed here, but we have a strict troll-hugging policy

[20:32] <PerlJam> gente: Where is it written that variables a necessary for "real or practical use"?

[20:32] * sorear hugs gente

[20:33] <PerlJam> s/a/are/

[20:33] <gente> PerlJam: state exists

[20:34] <TimToady> but haskell represents state as the application of functions

[20:34] <gente> rather deal with it and not go prancing around it if you ask me

[20:34] <sorear> gente: what are you trying to accomplish by coming on #perl6 and complaining about Haskell?

[20:34] <TimToady> well, nobody here is going to force you to program in haskell here...

[20:35] <sorear> You're confusing me

[20:35] <gente> TimToady: not that im being forced

[20:35] <TimToady> we're being forced to listen to you rant about it though... :)

[20:35] <gente> but i was wondering a language withouta mutable state is just ..

[20:35] <PerlJam> gente: it *sounds* like you're used to dealing with things a certain way and expect haskell to do things that way too.   Haskell has its own view of the universe.  If you grok it, you'll be able to use haskell effectively.

[20:36] <PerlJam> TimToady: we're not forced;  it's just because we're so polite.  :)

[20:38] <sorear> gente: of all the places on the Internet where you could describe a language as impractical... why #perl6?

[20:38] *** mj41 joined
[20:39] <moritz> reddit would be a good place for that :-)

[20:39] <gente> im not saying it's impractical

[20:39] <gente> but why wouldn't a language have variables?

[20:39] <gente> just to keep it purely functional?

[20:40] *** justatheory left
[20:40] <sorear> gente: you're in the wrong channel.  this isn't #history-of-programming-languages

[20:40] <gente> sorear: what are you on about

[20:40] <gente> this place used to allow haskell discussions

[20:40] <gente> which is why i joined

[20:41] <gente> if you scroll up you'll see i asked first before i even posted my doubt

[20:41] <gente> so wtf is up with you now?

[20:41] <PerlJam> gente: sure ... but usually the haskell discussion revolves around implementing something for Perl 6

[20:41] <gente> im in both haske-in-depth and here

[20:41] <gente> so stop giving me stupid attitude

[20:41] <PerlJam> gente: or some feature Perl 6 steals from haskell

[20:41] <PerlJam> or something

[20:41] <gente> when im just trying to have a discussion

[20:41] <gente> PerlJam: ok

[20:42] <sorear> gente: saying a language is impractical in public = either you don't know English or you're acting like a troll

[20:42] <gente> well im not saying it's impractical

[20:43] *** icwiener left
[20:43] <sorear> in English, "then it's not real or practical to use is it?" means "It's not real or practical to use."

[20:43] <cognominal> gente, cursing is probaby not the best way to get intresting feedback. At least not here

[20:43] <sorear> they're called rhetorical questions

[20:43] <sorear> you need to learn to stop using them by accident

[20:44] <gente> and practical use i meant as in

[20:44] <gente> "Functional programming languages, especially purely functional ones, have largely been emphasized in academia rather than in commercial software development"

[20:44] <gente> that

[20:44] <gente> that happens for a reason

[20:44] *** dorlamm joined
[20:45] <sorear> gente: what part of "Avoid success at all costs" don't you understand?

[20:45] <gente> so i was thinking solving problems using variables is usually easier i thought 

[20:45] <PerlJam> gente: it's an abstraction that people are used to if they've taken algebra

[20:45] <PerlJam> gente: however, it's not the only useful abstraction

[20:46] <gente> PerlJam: well sure but solving problems using variables is kinda easier isnt it

[20:46] <gente> or this all depends?

[20:46] <PerlJam> easier than what?

[20:47] <PerlJam> and what problems?

[20:47] <PerlJam> gente: one of the main lessons of perl is that "context is important"  :)

[20:48] <flussence> I guess commercial software companies don't like Haskell because it's harder to outsource ;)

[20:49] <PerlJam> gente: For instance, some problems lend themselves naturally to recursion.  But until you understand recursion, you might think that looping is easier.

[20:49] <gente> PerlJam: fucntional = niche

[20:50] <gente> PerlJam: recursion can be done with imperative languages too

[20:51] <gente> it is just that recursion isn't always the best or most efficient way of solving a problem

[20:51] <gente> and with parallelism thread stack size can be a limiting factor.

[20:51] <PerlJam> *zing*

[20:51] *** masak joined
[20:51] <masak> hi, zebras.

[20:51] <flussence> moo.

[20:51] <PerlJam> masak: o/

[20:52] <gente> PerlJam: no?

[20:52] *** coldhead joined
[20:52] <PerlJam> gente: you miss the point entirely.

[20:52] <gente> ok what did you mean though?

[20:54] <PerlJam> gente: one way of looking at the universe may not always be the best way for a given problem.  Until you understand the "essence" of the problem, you won't know how to look at it and won't have a good way to solve it.  You may have *a* way, but you might have to jump through hoops because of your limited understanding.

[20:54] <PerlJam> gente: Haskell is really for those problems that lend themselves to haskellian solutions.

[20:54] *** justatheory joined
[20:54] <PerlJam> gente: the real problem is classifying which problems are in that set.

[20:55] <PerlJam> anyway, I've got stuff to do.

[20:55] * PerlJam &

[20:55] *** dju__ left
[20:56] <masak> gente: wow, what ever did you say to make PerlJam give you that explanation...?

[20:56] * masak backlogs

[20:57] <masak> oh. :/

[20:58] <gente> PerlJam: I am aware of recursion; I am aware of looping; I use both techniques I do not limit myself to one.

[20:58] <gente> ok

[21:01] *** Holy_Cow left
[21:01] <gente> and a collection of variables can be used to represent the state of some system

[21:01] *** cognominal left
[21:01] <gente> sorry wrong window

[21:02] * masak .oO( a variable can be used to represent the right window... )

[21:02] *** cognominal joined
[21:03] *** justatheory left
[21:03] <flussence> .oO( maybe a constant would be more appropriate here :)

[21:04] <gente> it wasn't for you guys! posted it in the wrong window

[21:04] <gente> :P

[21:04] <masak> gente: sorry, our attention span is variable :P

[21:04] <gente> heh

[21:04] <masak> you have to constantly amuse us. :)

[21:05] <masak> or we'll automatically garbage-collect.

[21:06] <frettled> and that's not -Ofun

[21:08] <masak> frettled! \o/

[21:09] <masak> frettled: how are you this fine evening?

[21:10] *** birdwindupbird left
[21:11] <frettled> masak: relaxed!  And you?

[21:11] <masak> frettled: tired. but happy. :)

[21:11] <frettled> masak: did you get a good run?

[21:13] <masak> wasn't running tonight. just having a beer with our company :)

[21:13] <jnthn> Our company. It buys us beer. \o/

[21:13] <masak> jnthn: I think I feel a cold coming on. I should do the sensible thing and sleep it off.

[21:14] <masak> must... stop... coding...

[21:14] <jnthn> masak: ugh

[21:14] <jnthn> yes, that's a good plan

[21:14] <jnthn> getting a cold would suck.

[21:14] <diakopter> sleep off the colding

[21:14] <mberends> give the cold to the beer, problem solved!

[21:14] <diakopter> lol.

[21:15] <frettled> masak: a cognac is one of the best things to drink that does not cure a cold :)

[21:15] <masak> mberends: I think you just violated some law of thermodynamics or other. but nice idea :P

[21:15] <jnthn> masak: Vindaloo? ;)

[21:15] <masak> jnthn: bit late in the evening for that :P

[21:15] <masak> thank you all for your kind suggestions. :)

[21:16] <cognominal> is there any project to implement Perl 6 as a modified v8 + nodejs?

[21:17] <masak> there was at least one project targetting v8...

[21:17] <masak> was it diakopter's?

[21:17] <cognominal> coffeescript is nice, perl6 would be greater

[21:17] <masak> coffeescript is a much thinner layer on javascript, though.

[21:17] <cognominal> yes

[21:18] <pmurias> masak: mildew was also targetting v8

[21:18] <cognominal> it is a very simple translation. It just leave the crap out and add nice things like interpolation in strings

[21:19] <masak> pmurias: oh, right.

[21:19] <pmurias> perlito can target js i think too

[21:20] <masak> is there a way to have a slurpy parameter that doesn't flatten?

[21:20] *** justatheory joined
[21:20] *** bacek left
[21:22] <masak> or, um. let me rephrase.

[21:22] <moritz> something like |$thing or \|$thing parameter?

[21:22] <masak> is there any way to store a Range in a datastructure, and then pass it to a sub, without it flattening on the way?

[21:23] *** GinoMan2440 left
[21:24] <moritz> sure, use a scalar parameter

[21:24] * moritz -> sleep

[21:24] <pmurias> masak: diakopter was targeting v8 at some point too

[21:24] <masak> but... I'm passing in a list of things, one of which might be a Range... :/

[21:26] <jnthn> masak: You could store it in an array? :)

[21:26] <jnthn> Or \ it maybe :)

[21:26] <masak> I haven't gotten anything to work yet.

[21:27] <masak> rakudo: my @a = 1..4; say @a.perl

[21:27] <p6eval> rakudo 887bb5: OUTPUT«[1, 2, 3, 4]␤»

[21:27] <masak> rakudo: say (\(1..4)).perl

[21:27] <p6eval> rakudo 887bb5: OUTPUT«\(1, 2, 3, 4)␤»

[21:27] <masak> rakudo: $_ = class { method postcircumfix:<[ ]>($x) { say $x.perl } }; .[1..4]

[21:27] <diakopter> niecza: say (\(1..4)).perl

[21:28] <p6eval> rakudo 887bb5: OUTPUT«1..4␤»

[21:28] <p6eval> niecza v4-66-g11b04b4: OUTPUT«\(|[1, 2, 3, 4], |{})␤»

[21:28] <masak> that works.

[21:28] <masak> but then when I return it, it flattens :/

[21:28] <masak> rakudo: $_ = class { method postcircumfix:<[ ]>($x) { $x } }; say .[1..4].perl

[21:28] <p6eval> rakudo 887bb5: OUTPUT«1..4␤»

[21:28] <masak> or not. whee! :)

[21:28] <diakopter> niecza: say eval (\(1..4)).perl

[21:28] <p6eval> niecza v4-66-g11b04b4: OUTPUT«Any()␤»

[21:29] <pmurias> sorear: did the haskell people actually attempt to do anything to actively avoid success in the past?

[21:29] <pmurias> sorear: or was the slogan just a joke?

[21:31] <masak> pmurias: I always read it as tongue-in-cheek, in that "academic" languages tend to burn out if they go for fame rather than other qualities.

[21:34] <masak> I ended up with several multis for the same method, each of them with one more argument. it works, but I feel dirty now.

[21:35] <mberends> That is so, so, sordid. Disgusting!

[21:36] * mberends passes masak++ a little bar of soap to wash his mouth out.

[21:37] * masak mumbles "just like Java..." through the soapy bubbles

[21:37] <jnthn> .oO( Java often tastes like SOAP... )

[21:37] * frettled passes masak a stiff drink to aid the recovery process.

[21:37] <frettled> jnthn: *ding*

[21:39] *** stkowski joined
[21:48] <masak> g'ah, now I'm having trouble unpacking the thing :P

[21:48] <masak> anyway, that's a problem for another day.

[21:48] <masak> 'night, pandas.

[21:49] *** masak left
[21:49] <frettled> masak: dream of bamboo shoots

[21:52] *** kjeldahl left
[21:53] *** kjeldahl joined
[21:55] *** mj41 left
[21:56] *** lichtkind left
[21:59] *** dorlamm left
[22:00] <diakopter> TimToady: boom

[22:02] *** alester left
[22:16] *** thp joined
[22:29] *** gente left
[22:40] *** dalek left
[22:41] *** Chillance left
[22:41] *** silug left
[22:41] *** silug joined
[22:41] *** dalek joined
[22:41] *** ChanServ sets mode: +v dalek

[22:41] *** ncow left
[22:42] *** kjeldahl left
[22:42] *** kjeldahl joined
[22:42] *** simcop2387 left
[22:42] *** pmurias left
[22:44] *** jerome joined
[22:44] *** simcop2387 joined
[22:52] *** dayangkun joined
[22:53] *** Rotwang left
[22:55] <TimToady> diakopter: was in the car, so missed it

[22:56] <TimToady> I hope it's not a foreshock, 'cuz my house has little shear strength at the moment

[23:01] <diakopter> heard/felt a hard knock, then felt a bigger jolt and then looked up to see the hanging lights swaying

[23:08] *** rgrau left
[23:13] *** saaki joined
[23:20] *** whiteknight joined
[23:21] <starcoder> TimToady: where do you live? o.O

[23:23] *** donri left
[23:26] *** orafu joined
[23:42] *** kjeldahl left
[23:45] *** Moukeddar joined
[23:58] *** dayangkun left
[23:59] *** dayangkun joined
