[00:01] *** [particle]1 joined
[00:03] *** [particle]1 is now known as [particle]

[00:10] *** ruoso joined
[00:26] *** dwhipp joined
[00:39] *** leprevost joined
[00:51] <sorear> good * #perl6

[00:53] *** dwhipp left
[00:56] <colomon> \o

[00:59] *** bhwu joined
[01:01] <sorear> ruoso: hi!

[01:03] *** athomason joined
[01:10] *** GinoMan2440 left
[01:15] *** qiyong joined
[01:20] *** qiyong left
[01:21] *** GinoMan joined
[01:21] <sorear> colomon: hi

[01:24] *** arlinius joined
[01:25] <colomon> sorear: I've just managed to update a bunch of stuff on my MBP, wonder if I'll be able to get an up-to-date Mono as well?  :)

[01:26] *** ymasory joined
[02:00] *** noganex_ joined
[02:04] *** s1n joined
[02:09] *** sftp joined
[02:20] *** sftp left
[02:22] *** sftp joined
[02:24] *** whiteknight left
[02:50] *** Chillance left
[03:01] *** smrf joined
[03:34] *** woosley joined
[03:42] *** smrf left
[03:53] *** am0c joined
[04:08] *** satyavvd joined
[04:13] *** jevin joined
[04:25] *** Solarion joined
[04:25] *** satyavvd left
[04:27] *** justatheory joined
[04:37] *** sftp left
[04:45] *** comwt joined
[04:46] *** comwt left
[04:46] *** ComWT joined
[04:47] *** ComWT left
[04:54] *** satyavvd joined
[04:58] *** nymacro joined
[05:11] *** plobsing joined
[05:25] *** simcop2387 left
[05:25] *** simcop2387 joined
[05:27] *** _twitch joined
[05:27] *** nymacro left
[05:41] *** ruoso left
[05:44] *** __sri joined
[05:44] *** awwaiid_ joined
[05:45] *** [Coke]_ joined
[05:45] *** _sri left
[05:45] *** awwaiid left
[05:45] *** wolverian left
[05:45] *** kcwu left
[05:45] *** kcwu_ joined
[05:45] *** lue joined
[05:46] *** wolverian joined
[05:48] *** IRSeekBot joined
[05:50] *** literal joined
[05:50] *** tty234 joined
[06:14] *** mtk left
[06:19] *** cjk101010 joined
[06:22] *** mtk joined
[06:29] * Tene prods jnthn

[06:30] <sorear> colomon: I'm running an up-to-date Mono on a MBP which is between 5 and 10 years old (it's hard to accurately date frankenputers...)

[06:34] *** fhelmberger joined
[06:46] *** kaare_ joined
[06:49] *** ppant joined
[07:02] <moritz_> good morning

[07:02] <moritz_> sorear++ # nicza v3

[07:08] *** Sarten-X joined
[07:10] *** justatheory left
[07:11] *** justatheory joined
[07:15] *** mj41_ joined
[07:15] *** woosley left
[07:15] *** justatheory left
[07:17] *** woosley joined
[07:18] *** mj41 left
[07:18] *** mj41_ is now known as mj41

[07:19] *** og01 joined
[07:22] *** _twitch left
[07:34] *** justatheory joined
[07:48] *** Rotwang joined
[07:48] *** _jaldhar joined
[07:48] *** og01 left
[07:49] *** og01 joined
[08:00] *** Rotwang left
[08:08] *** _twitch joined
[08:19] *** kfo joined
[08:19] *** justatheory left
[08:26] *** Mowah joined
[08:50] *** donri joined
[09:13] <moritz_> niecza: sub f($x) { say $x}; f :x<foo>

[09:13] <p6eval> niecza v3-28-ge477540: OUTPUT«Unhandled exception: No value for parameter $x in MAIN f␤  at /tmp/k2on_rHLrm line 0 (MAIN f @ 0)␤  at /tmp/k2on_rHLrm line 1 (MAIN mainline @ 1)␤  at /home/p6eval/niecza/lib/SAFE.setting line 1185 (SAFE C489_ANON @ 2)␤  at /home/p6eval/niecza/lib/SAFE.setting line

[09:13] <p6eval> ..1186 (SAFE modul…

[09:14] *** kfo left
[09:15] *** kfo joined
[09:18] *** Bzek joined
[09:25] *** ab5tract joined
[09:33] *** ab5tract left
[09:33] *** orafu joined
[09:34] *** woosley left
[09:35] *** dakkar joined
[09:35] <donri> Can you use HLLCompiler via Rakudo?

[09:35] <donri> rather than nqp

[09:35] <dalek> roast: 324876d | moritz++ | S (7 files):

[09:35] <dalek> roast: fudge and simplify some test files for Niecza

[09:35] <dalek> roast: review: https://github.com/perl6/roast/commit/324876d4ba

[09:35] <dalek> niecza: 8b59a93 | moritz++ | t/spectest.data:

[09:35] <dalek> niecza: 7 more passing spectest files

[09:35] <dalek> niecza: review: https://github.com/sorear/niecza/commit/8b59a93820

[09:44] *** amkrankruleuen joined
[09:56] *** cpk joined
[09:56] <cpk> sorear: hi ! i have downloaded th v3 of niecza buit the executable fails when i try to run it

[09:57] <cpk> sorear: my system is win7 x64 with .net 4 extended installed

[09:57] <moritz_> cpk: it's likely that I can't help you, but you should state at least *how* it fails

[09:58] <cpk> the error message is Unhandled exception: System.BadImageFormatException: Could not load file or assembly 'Kernel, Version = 0.0.0.0, Culture = neutral, PublicKeyToken = null' or one of its dependencies. This asse mblys was built by a runtime newer than the currently loaded runtime and can not be loaded. Filename: 'Kernel, Version = 0.0.0.0, Culture = neutral, PublicKeyToken = null'     to MAIN.Main (String [])

[09:58] <dalek> roast: c95cb9a | moritz++ | S (4 files):

[09:58] <dalek> roast: more fudgign for niecza

[09:58] <dalek> roast: review: https://github.com/perl6/roast/commit/c95cb9af61

[09:59] <dalek> niecza: 8f168dd | moritz++ | t/spectest.data:

[09:59] <dalek> niecza: three more passing test files

[09:59] <dalek> niecza: review: https://github.com/sorear/niecza/commit/8f168dd98c

[09:59] *** zby_home joined
[10:00] <cpk> moritz_: i think it is related to my version of .net but i'm not really sure

[10:00] <moritz_> cpk: same here. I also had to install a newer version of mono to get niecza running again

[10:01] <cpk> moritz_: what about windows .net ?

[10:01] <cpk> moritz_: do you think there is a newer version ?

[10:01] <moritz_> http://irclog.perlgeek.de/perl6/2011-02-28#i_3342984

[10:02] <moritz_> I'd expect .net 4 to implement the NET_4_0 profile, but since I don't use it, that's just speculation

[10:05] *** am0c left
[10:06] *** daxim joined
[10:06] <cpk> moritz_: i have .net 4.0 full and client installed ( version info => C:\Windows\Microsoft.NET\Framework64\v4.0.30319 )

[10:07] *** _jaldhar left
[10:08] *** _jaldhar joined
[10:09] *** kaare_ left
[10:10] <cpk> moritz_: i just wanted to get a try with niecza, so this issue is not very important for me but I thought I could share it there

[10:10] <moritz_> cpk: I'm sure sorear will appreciate it (I do, but I can't help you :/)

[10:11] <moritz_> it's just not his usual uptime at the moment (different timezone)

[10:11] <dalek> rakudo: e0bfb29 | moritz++ | / (4 files):

[10:11] <dalek> rakudo: [build] git_describe is enough, no need for a separate version specification.

[10:11] <dalek> rakudo: 

[10:11] <dalek> rakudo: Also made some error messages nicer

[10:11] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/e0bfb29b41

[10:11] <dalek> rakudo: 4138622 | moritz++ | Configure.pl:

[10:11] <dalek> rakudo: explicitly chose generational GC

[10:11] <dalek> rakudo: 

[10:11] <dalek> rakudo: Parrot folks say that it will probably not be the default for the next

[10:11] <dalek> rakudo: release, so there is no harm in selecting it explicitly.

[10:11] <dalek> rakudo: tadzik++ for the idea

[10:11] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/4138622c83

[10:11] <moritz_> cpk: meanwhile you can try niecza via the bots here:

[10:11] <moritz_> niecza: say 'abc'.uc x 2

[10:11] <p6eval> niecza v3-28-ge477540: OUTPUT«ABCABC␤»

[10:12] <cpk> moritz_: awesome !

[10:14] <cpk> moritz_: but it will be a mess if I make lots of tests here

[10:15] <cpk> moritz_: thx for your answers, bye

[10:15] <moritz_> cpk: you can /msg the bot too

[10:15] <moritz_> cpk: have the appropriate amount of fun :-)

[10:16] *** pjcj joined
[10:17] *** cognominal joined
[10:18] *** vert2 joined
[10:31] *** rhr joined
[10:33] <dalek> tpfwiki: (Bill Klobas)++ | http://www.perlfoundation.org/perl6/index.cgi?first_post_in_test_weblog

[10:39] *** leprevost left
[10:40] <moritz_> seems that the tpf wiki is being spammed increasingly (I haven't checked if this particular change was spam, but some certainly were)

[10:44] *** am0c^ joined
[10:55] *** JimmyZ joined
[10:55] *** am0c^ left
[11:08] *** kaare_ joined
[11:10] <flussence_> if there's an easy way to undo spam on the wiki without clogging up the revision history further, I wouldn't mind doing it

[11:22] *** ppant left
[11:25] *** Chillance joined
[11:29] <daxim> revert to a revision does not increase the revision counter, is that what you mean?

[11:43] *** satyavvd left
[11:43] *** Mowah left
[11:44] *** tzhs joined
[11:49] <flussence_> yeah, just so the log isn't full of (spam, undo) xx 1000

[11:55] *** Alias_ joined
[12:14] *** JimmyZ left
[12:16] *** JimmyZ joined
[12:22] <colomon> wow, my p6 code to generate graphs for the benchmarks is excruciatingly slow when fed all 120 timings.  :(

[12:26] *** bbkr_ joined
[12:26] *** Mowah joined
[12:28] *** leprevost joined
[12:29] *** mberends left
[12:37] <moritz_> colomon: you can do a meta-benchmark: benchmarking how long the benchmark graphing takes :-)

[12:37] <colomon> huh.  the graph script is apparently still running, but it doesn't seem to have written out any new SVG graphs in the last 27 minutes.  So it got six done in the first minute, and now it's just sitting there.  :\

[12:40] <moritz_> disk full? RAM full?

[12:40] *** zby_home left
[12:40] <colomon> for sure not disk full.

[12:41] <colomon> and the machine seems to be working well enough otherwise, so I doubt RAM full.

[12:41] <colomon> I've just added some "say"s and restarted

[12:42] <colomon> looks like it's hanging in SVG::Plot...

[12:42] <colomon> and woof, using up 97% of my CPU

[12:43] <moritz_> colomon: if you push all that data + code into a repo, I can investigate tonight (ie in about 6 hours)

[12:44] <colomon> https://github.com/colomon/Benchmark-Plot

[12:45] <colomon> that's without my debugging "say"s.  results.txt is the full benchmark results file to be fed to bin/graph-bench.pl

[12:48] <moritz_> so $ perl6 bin/graph-bench.pl < results.txt ?

[12:48] <colomon> that's exactly it

[12:49] <colomon> or even just $ perl6 bin/graph-bench.pl results.txt

[12:49] <moritz_> it seems to leak memory at an astonishingly low pace :-)

[12:49] <moritz_> maybe it doesn't even leak, but simply uses it

[12:53] <colomon> what's @ARGV in p6?

[12:53] <moritz_> @*ARGS

[12:53] <colomon> figured it out myself on the third try.  :)  moritz_++

[12:53] <moritz_> but before you use it, ask yourself if MAIN isn't better suited

[12:53] <colomon> it's a three-line script, I think it will do.

[12:54] <colomon> (and the third line is just a closing brace)

[12:54] <moritz_> :-)

[12:54] <colomon> ah, frak, I hosed inkscape during the great macports upgrade yesterday.

[12:56] <moritz_> I just did a  say @data.perl before the call to .plot

[12:56] <moritz_> there's no visible difference in the data, compared to the previous calls

[12:56] <moritz_> 8 pairs, with the same keys as before

[12:57] <colomon> moritz_++ # I just assumed that was so, looking at the results.txt file. 

[12:58] <colomon> duh.  I should try grepping just that data and see if it still fails.

[12:58] <colomon> (now running.....)

[12:58] <colomon> still running...

[13:00] *** takadonet joined
[13:00] <takadonet> morning all

[13:00] <colomon> \o

[13:00] <colomon> still running...

[13:01] <moritz_> I'm almost certain that we'll discover a rakudobug in the process :/

[13:01] <colomon> oooo, that's good!  :)

[13:02] <colomon> yeah, it's that one specific set of data that's doing it.

[13:02] * colomon considers that odds are pretty good it's his own rakudobug.  :|

[13:02] <moritz_> the code in which it hangs contains for-loops, gather/take and fun... but not while-loops or other things that would usually hang

[13:03] <moritz_> oh wait, I've missed two method calls

[13:06] <colomon> afk # might as well go feed A's cats and take a walk while inkscape is re-installing.

[13:13] <moritz_> colomon: found the error... 

[13:13] <moritz_> colomon: SVG::Plot uses min and max, and then calculates max - min

[13:13] <moritz_> colomon: and assumes that the result is >= 0

[13:13] <moritz_> colomon: which it is, but not if the pass in "105" instead of 105

[13:14] <moritz_> so it uses lexicographic ordering

[13:14] <moritz_> and produces a negative difference

[13:14] <moritz_> the step width for the y axis is then calculated as $difference.log10.floor => NaN

[13:16] <moritz_> now we can discuss if it's a bug to pass in numbers as strings, or if SVG::Plot should be more paranoid

[13:19] <JimmyZ> So CPU is so stupid

[13:20] <moritz_> hm?

[13:20] <moritz_> colomon: :values([@data>>.value>>.Rat])  fixes things

[13:22] <colomon> what about :values([@data>>.value>>.Numeric])   ?

[13:22] <moritz_> should work too

[13:22] <colomon> (cat-feeding temp. delayed due to a dirty diaper.)

[13:22] <moritz_> though SVG::Plot often works better with Rats

[13:23] <moritz_> in particular if you feed it Nums, it sometimes anchors the y scale at 1.2e-107 instead of 0, or so :-)

[13:23] <colomon> if it's a decimal number, it should be a Rat anyway.  :)

[13:23] <colomon> rakudo: say "74.2868108".Numeric.WHAT

[13:23] <p6eval> rakudo 413862: OUTPUT«Num()␤»

[13:24] <colomon> doh!

[13:24] <moritz_> still the old bug

[13:24] <colomon> sigh.

[13:24] <moritz_> (which was marked in RT as "LHF", btw :-)

[13:24] <colomon> okay, .Rat it is.

[13:25] *** tzhs left
[13:28] *** ruoso joined
[13:30] *** lamstyle_ left
[13:30] <colomon> still reinstalling inkscape...

[13:30] <moritz_> with this change, the script completes

[13:30] * colomon wishes wordpress would let him directly upload SVG files

[13:31] <colomon> moritz_++

[13:34] <moritz_> ... in less than 2 minutes. Not fast, but not crawling either

[13:35] *** lamstyle joined
[13:40] *** PZt joined
[13:47] *** ruoso left
[13:52] *** lamstyle left
[13:57] *** drbean joined
[13:59] *** lamstyle joined
[14:00] *** mtk left
[14:01] *** cono joined
[14:01] *** cono left
[14:02] <moritz_> rakudo: say pir::null()

[14:02] <p6eval> rakudo 413862: OUTPUT«error:imcc:syntax error, unexpected '\n'␤ in file 'EVAL_11' line 50532630␤===SORRY!===␤syntax error ... somewhere␤»

[14:02] <moritz_> rakudo: say pir::null__p()

[14:02] <p6eval> rakudo 413862: OUTPUT«Null PMC access in type()␤  in main program body at line 22:/tmp/I_jhBd9h9G␤»

[14:05] *** cpk left
[14:06] *** masak joined
[14:06] <masak> greetings, zebras

[14:06] <phenny> masak: 03 Mar 22:41Z <colomon> tell masak My timings runs using your data-generation script are showing very significant differences from one test run to another.  For 80, for instance, I've gotten average (N, Y) runs of (10.8, 14.2), (9.4, 10.8), and (9.6, 11.4).  Maybe difference has to do with different random strings?

[14:06] <masak> maybe.

[14:07] <masak> statistics is no simple matter.

[14:07] *** cono joined
[14:07] *** cono left
[14:07] <masak> let's let this simmer until it looks consistent/satisfactory.

[14:07] *** cono joined
[14:07] <cono> karma cono

[14:07] <aloha> cono has karma of 0.

[14:07] *** cono left
[14:08] <masak> drive-by karma?

[14:09] *** mtk joined
[14:09] *** leprevost left
[14:10] <moritz_> isn't it obvious? run the benchmark 100 times, and then plot mean and standard deviation :-)

[14:10] * moritz_ should really add error bars to SVG::Plot

[14:11] <masak> yes, I think I should do something very much like that.

[14:12] <masak> I think I'll need to do a blog post, though, to allay the worries of my (nonexistent) reader base.

[14:12] *** plobsing left
[14:12] <moritz_> nonexistent? that would be a real surprise

[14:12] <masak> moritz_: I could probably do a quick hack on SVG::Plot to add error bars.

[14:13] <moritz_> ... or use whatever you used to generate the last plot with error bars :-)

[14:15] *** ruoso joined
[14:18] *** JimmyZ left
[14:20] *** ymasory left
[14:23] *** Mowah left
[14:23] <tadzik> howdy

[14:24] <masak> tadzik: \o

[14:24] <masak> moritz_: I... I need to remind myself what that was :)

[14:25] <tadzik> the weather question? You looked confused :)

[14:25] <tadzik> oh nvm :)

[14:27] <moritz_> masak: I just pushed a hacky, untested and undocumented support for error bars in SVG::Plot

[14:27] <masak> \o/

[14:27] <masak> the program was Gnumeric, btw. I just checked.

[14:27] <moritz_> if it actually works, you can really impressed :-)

[14:33] <masak> :)

[14:34] *** kcwu_ is now known as kcwu

[14:35] *** plobsing joined
[14:38] *** frettled left
[14:39] *** frettled joined
[14:43] *** tzhs joined
[14:52] *** lamstyle left
[14:56] *** ymasory joined
[14:56] *** masak left
[14:56] *** masak joined
[15:06] *** Chillance left
[15:06] *** masak left
[15:06] *** bbkr_ left
[15:06] *** Alias_ left
[15:06] *** orafu left
[15:06] *** kfo left
[15:06] *** mj41 left
[15:06] *** cjk101010 left
[15:06] *** hugme left
[15:06] *** LoRe left
[15:06] *** Solarion left
[15:06] *** c1sung left
[15:06] *** felipe left
[15:06] *** ruoso left
[15:06] *** mtk left
[15:06] *** _jaldhar left
[15:07] *** __sri left
[15:07] *** jevin left
[15:07] *** GinoMan left
[15:07] *** aindilis left
[15:07] *** rhr left
[15:07] *** _twitch left
[15:07] *** simcop2387 left
[15:07] *** bhwu left
[15:07] *** frettled left
[15:07] *** donri left
[15:07] *** saaki left
[15:07] *** dual left
[15:07] *** pmichaud left
[15:07] *** sjn left
[15:07] *** [Coke]_ left
[15:07] *** s1n left
[15:07] *** pyrimidine left
[15:07] *** cookys left
[15:07] *** jnthn left
[15:07] *** daxim left
[15:07] *** fhelmberger left
[15:07] *** wolverian left
[15:07] *** tadzik left
[15:07] *** hillu left
[15:07] *** JohnGalt2600 left
[15:07] *** rbuels left
[15:07] *** nothingmuch_ left
[15:07] *** jql left
[15:07] *** apejens left
[15:07] *** VXZ left
[15:07] *** allbery_b left
[15:07] *** mathw left
[15:07] *** betterwo1ld left
[15:07] *** kaare_ left
[15:07] *** pjcj left
[15:07] *** Bzek left
[15:07] *** kcwu left
[15:07] *** TiMBuS left
[15:07] *** robinsmidsrod left
[15:07] *** drbean left
[15:07] *** cognominal left
[15:07] *** arlinius left
[15:07] *** jasonmay left
[15:07] *** krunen left
[15:07] *** clkao left
[15:07] *** perigrin left
[15:07] *** fith left
[15:07] *** starcoder2 left
[15:07] *** zb left
[15:07] *** gabiruh left
[15:07] *** Maddingue left
[15:07] *** uniejo left
[15:07] *** ascent_ left
[15:07] *** krakan_ left
[15:07] *** revdiablo left
[15:07] *** plobsing left
[15:07] *** vert2 left
[15:07] *** IRSeekBot left
[15:07] *** awwaiid_ left
[15:07] *** [particle] left
[15:07] *** jjore_ left
[15:07] *** Kovensky left
[15:07] *** frodwith left
[15:07] *** avuserow left
[15:07] *** Raynes left
[15:07] *** sjohnson left
[15:07] *** mdxi left
[15:07] *** tzhs left
[15:07] *** noganex_ left
[15:07] *** hatseflats left
[15:07] *** patch left
[15:07] *** sbp left
[15:07] *** Sarten-X left
[15:07] *** cotto_work left
[15:07] *** kst left
[15:07] *** cls_bsd left
[15:07] *** jrockway left
[15:07] *** bartolin left
[15:07] *** DarthGandalf left
[15:07] *** PZt left
[15:07] *** amkrankruleuen left
[15:07] *** dakkar left
[15:07] *** sunnavy left
[15:07] *** snarkyboojum left
[15:07] *** huf left
[15:07] *** llabthgie left
[15:07] *** Grrrr left
[15:07] *** Bucciarati left
[15:07] *** frooh left
[15:07] *** og01 left
[15:07] *** tty234 left
[15:07] *** literal left
[15:07] *** athomason left
[15:27] *** ilogger2 joined
[15:27] *** ChanServ sets mode: +v ilogger2

[15:27] *** cschimm1_ joined
[15:30] *** sftp joined
[15:32] *** _dev0_ joined
[15:32] *** hercynium joined
[15:34] <sorear> good * #perl6

[15:34] *** mkramer joined
[15:35] <moritz_> hello sorear 

[15:35] <masak> sorear: \o

[15:36] *** alester joined
[15:37] <sorear> hrm, cpk is already out.

[15:38] <moritz_> is there a solution, besides upgrading .NET? or would you expect it to work with 4.0?

[15:40] * masak --> airport

[15:41] *** [particle]1 joined
[15:41] *** [particle]1 is now known as [particle]

[15:46] *** dsp_ joined
[15:49] *** cjk101010 joined
[15:49] *** risou joined
[15:51] *** woosley joined
[16:00] <sorear> moritz_: I think the solution is to use Mono 2.6.7 to prepare the releases, rather than a Feb11 master build

[16:01] *** woosley left
[16:04] * jnthn -> airport

[16:05] *** mkramer left
[16:08] *** justatheory joined
[16:10] *** ymasory joined
[16:11] *** daxim_ joined
[16:12] *** ddima_ joined
[16:12] *** Mowah_ joined
[16:12] *** edenc_ joined
[16:12] *** apejens_ joined
[16:12] *** hillu_ joined
[16:13] *** szbalint_ joined
[16:13] *** cxreg2 joined
[16:13] *** nothingmuch joined
[16:15] * sorear tries to find his Novell bugzilla credentials

[16:16] *** mux joined
[16:16] *** charsbar_ joined
[16:17] *** risou left
[16:17] *** s1n1 joined
[16:17] *** rbuels left
[16:17] *** nothingmuch_ left
[16:17] *** apejens left
[16:17] *** apejens_ is now known as apejens

[16:17] *** dukeleto joined
[16:17] *** og01_ joined
[16:17] *** ab5tract joined
[16:17] *** VXZ joined
[16:17] *** allbery_b joined
[16:17] *** mathw joined
[16:17] *** betterwo1ld joined
[16:17] *** szabgab joined
[16:17] *** cotto joined
[16:17] *** Helios` joined
[16:17] *** PerlJam joined
[16:17] *** zamolxes_ joined
[16:17] *** flatwhatson_ joined
[16:17] *** barika joined
[16:18] *** risou joined
[16:18] *** plobsing joined
[16:19] *** rblackwe_ joined
[16:19] *** AphelionZ1 joined
[16:20] *** spq joined
[16:20] *** d4l3k_ joined
[16:21] *** JimmyZ joined
[16:21] *** GinoMan2440 joined
[16:21] *** cookys_ joined
[16:22] *** jdhore1 joined
[16:22] *** jdhore1 left
[16:22] *** jdhore1 joined
[16:22] *** bouyssie joined
[16:23] *** [Coke] joined
[16:23] *** d4l3k_ is now known as dalek

[16:23] *** ChanServ sets mode: +v dalek

[16:24] *** takadonet joined
[16:24] *** AphelionZ1 left
[16:24] *** dukeleto left
[16:24] *** og01_ left
[16:24] *** ab5tract left
[16:24] *** VXZ left
[16:24] *** allbery_b left
[16:24] *** mathw left
[16:24] *** betterwo1ld left
[16:24] *** szabgab left
[16:24] *** cotto left
[16:24] *** Helios` left
[16:24] *** PerlJam left
[16:24] *** zamolxes_ left
[16:24] *** flatwhatson_ left
[16:24] *** barika left
[16:24] *** awoodland joined
[16:25] *** Vlavv_ joined
[16:25] *** tadzik joined
[16:25] *** ruoso joined
[16:26] *** risou_ joined
[16:26] *** risou left
[16:26] *** flussence joined
[16:28] <donri> can't seem to find a list of rules included with pge

[16:28] <donri> e.g. what is <ww>

[16:29] <plobsing> wrong window?

[16:29] *** diakopter joined
[16:29] *** wolverian joined
[16:29] *** _sri joined
[16:29] *** AphelionZ1 joined
[16:29] *** dukeleto joined
[16:29] *** og01_ joined
[16:29] *** ab5tract joined
[16:29] *** VXZ joined
[16:29] *** allbery_b joined
[16:29] *** mathw joined
[16:29] *** betterwo1ld joined
[16:29] *** szabgab joined
[16:29] *** cotto joined
[16:29] *** Helios` joined
[16:29] *** PerlJam joined
[16:29] *** zamolxes_ joined
[16:29] *** flatwhatson_ joined
[16:29] *** barika joined
[16:30] *** _dev0_ left
[16:30] *** jnthn left
[16:30] *** jnthn_ joined
[16:32] *** phenny joined
[16:34] *** JimmyZ left
[16:35] *** jdhore1 left
[16:35] *** justatheory left
[16:37] *** am0c joined
[16:37] <moritz_> "within word"

[16:38] *** jevin_ joined
[16:38] *** _dev0_ joined
[16:38] <moritz_> a zero-width assertion that's true if left and right character are both word characters

[16:42] <donri> moritz_: is there a list?

[16:42] *** jdhore1 joined
[16:42] *** jdhore1 left
[16:42] *** jdhore1 joined
[16:43] <moritz_> donri: in the source :-)

[16:43] <moritz_> donri: S05 has a list, but it's probably not identical to what PGE/NQP-rx implement

[16:45] *** mkramer joined
[16:46] *** tadzik left
[16:46] *** eternaleye_ joined
[16:46] *** nothingmuch left
[16:48] *** donri joined
[16:48] *** nothingmuch joined
[16:49] *** pmurias joined
[16:49] *** nadim joined
[16:49] *** tewk joined
[16:50] *** p3n_ joined
[16:50] <pmurias> sorear: hillu_ 

[16:50] <pmurias> sorear: hi

[16:50] *** Trashlord joined
[16:51] *** justatheory joined
[16:51] <sorear> pmurias: Hi

[16:51] *** chitragupt joined
[16:51] *** JodaZ joined
[16:52] *** arnsholt joined
[16:53] <pmurias> sorear: re problem with the pseudo-inliner is that the SAFE module name is only used with -CSAFE

[16:53] *** frettled joined
[16:53] *** pmichaud joined
[16:53] *** dual joined
[16:53] *** kolibrie joined
[16:54] <pmurias> sorear: is there a way we can avoid the hardcoding of the unit name in the inliner?

[16:55] <sorear> Why are you renaming it?

[16:57] <sorear> The reliance on having a module named SAFE goes *much* deeper than just the inliner

[16:57] <pmurias> i'm not renaming it

[16:57] <sorear> For instance, the only class that is allowed to have no parents is SAFE::Mu

[16:57] <pmurias> just running it with mono Niecza.exe -Bclisp SAFE.setting

[16:58] *** nrr joined
[16:58] <pmurias> the xrefs get a MAIN unit in that case

[16:58] *** baest joined
[16:58] <pmurias> sorear: and what happens when the user defines a SAFE module?

[16:58] *** jpr5 joined
[17:01] *** nadim left
[17:01] *** tadzik joined
[17:01] *** lamstyle joined
[17:02] <moritz_> pmurias: then you can tell him "all-uppercase names are reserved for internal use, smartass"

[17:02] <moritz_> ok, you can leave out that last word :-)

[17:02] *** snearch joined
[17:04] *** AphelionZ1 left
[17:05] <pmurias> moritz_: hardcoding stuff based on names seems very inelegant to me

[17:06] <moritz_> it is, but that's a different matter

[17:08] *** ymasory left
[17:08] <pmurias> not fully

[17:08] <pmurias> reserving stuff for internal use is part of the inelegantness

[17:08] <pmurias> if the user wanted to have an alternative setting it would conflict with all the name based harcoding

[17:11] <sorear> it's easy to have an alternative setting

[17:11] *** mkramer left
[17:11] <sorear> you don't get to make it the root setting - it has to be based on SAFE

[17:11] <sorear> but I don't see how this is fundamentally worse than the fact that you can't have user-defined classes with no parents

[17:12] *** ab5tract left
[17:12] <sorear> (I just figured out a better way to handle --safe that doesn't leak over quite so much of the core; SAFE.setting will probably not exist tomorrow)

[17:13] *** literal joined
[17:16] <sorear> moritz_: btw - https://bugzilla.novell.com/show_bug.cgi?id=677057

[17:16] *** awoodland left
[17:18] <sorear> pmurias: what are you trying to accomplish by using mono Niecza.exe -Bclisp SAFE.setting?

[17:19] *** mkramer joined
[17:20] <sorear> niecza has two basic modes of operation when parsing code from a file - either it's compiling a complete program, or it's precompiling a module

[17:20] *** jql joined
[17:21] <sorear> -C is needed to select the second mode, because there doesn't seem to be a good way to autodetect it

[17:21] <sorear> main programs are allowed to start with class Foo;

[17:21] *** sjn joined
[17:22] <sorear> (theoretically, niecza could look at the end, see {YOU_ARE_HERE}, and know it's dealing with a module.  But 1. this doesn't work for arbitrary modules and 2. it violates the prohibition against N>1-pass parsing)

[17:23] <moritz_> sorear: sometimes when I run niecza I get the "[precompiling setting]" message... couldn't that be done as part of the build process?

[17:23] <moritz_> I kinda feel that would be "righter"

[17:23] <sorear> moritz_: it's done once as part of the build process, but it has to be redone if niecza thinks the setting has changed

[17:24] <sorear> the current check for "changed" is "different full path or different modification time"

[17:24] <pmurias> sorear: i'm trying to make sure SAFE runs and then i'll work on making other code run it

[17:25] <pmurias> sorear: we could expose the way to make a parent-less class

[17:27] *** ruoso left
[17:28] *** ruoso joined
[17:28] *** ruoso left
[17:34] *** ruoso joined
[17:36] *** MayDaniel joined
[17:37] <sorear> I guess it would be better to make the psuedo-inliner, etc use a cheat more like Rakudo's SETTING_MODE

[17:38] <sorear> except because niecza allows non-root settings, it would be more of a ROOT_MODE thing

[17:39] <pmurias> what does the SETTING_MODE do?

[17:45] *** ymasory joined
[17:46] *** bouyssie left
[17:47] *** bouyssie joined
[17:49] *** pmurias left
[17:51] *** rbuels joined
[17:53] *** PacoLinux_ joined
[17:53] <flussence> rakudo: say ('abc' ~~ /(a)(b)/).perl

[17:53] <p6eval> rakudo 413862: OUTPUT«Match.new(␤ from => 0,␤ orig => "abc",␤ to   => 2,␤ positional => [␤   Match.new(␤    from => 0,␤    orig => "abc",␤    to   => 1,␤   ),␤   Match.new(␤    from => 1,␤    orig => "abc",␤    to   => 2,␤   ),␤  ],␤)␤»

[17:53] <flussence> rakudo: say ('abc' ~~ /(a)(b)/)[0].perl

[17:53] <p6eval> rakudo 413862: OUTPUT«Match.new(␤ from => 0,␤ orig => "abc",␤ to   => 1,␤)␤»

[17:56] <moritz_> rakudo: say ('abc' ~~ /(a)(b)/).pretty

[17:56] <p6eval> rakudo 413862: OUTPUT«=> <ab>␤ 0 => <a>␤ 1 => <b>␤␤»

[17:57] <moritz_> not so pretty with \n -> ␤ translation on, but IMHO better than .perl

[17:59] *** starcoder joined
[17:59] *** rgrau joined
[17:59] <flussence> that's the *second* time I've forgot about that in a week!

[18:00] *** szbalint_ is now known as szbalint

[18:03] *** PacoLinux_ left
[18:03] *** ruoso_ joined
[18:03] *** ruoso left
[18:04] *** cdarroch joined
[18:04] *** cdarroch left
[18:04] *** cdarroch joined
[18:07] * TimToady is home finally, but disk drive on the laptop went haywire again, so talking from an ancient suse partition that came on the laptop originally...bleah...

[18:07] <phenny> TimToady: 02 Mar 16:57Z <sorear> tell TimToady pmurias and I disagree on what sub infix:<=>($,$a) { say $a }; constant foo = 5; # should do

[18:07] *** am0c left
[18:08] <sorear> welcome home TimToady

[18:08] <TimToady> without looking at the discussion, I'll say that assignment to a declarator is only pseudo-assignment; the declarator is allowed to turn it into any operation it likes

[18:10] *** MayDaniel left
[18:13] <TimToady> note for instance that assignment to a 'has' doesn't even have a valid invocant when "executed"

[18:14] <TimToady> so I doubt assignment to a constant looks at infix:<=> at all

[18:15] *** Holy_Cow joined
[18:17] *** dual left
[18:17] * colomon cannot believe that Inkscape is still installing on his MBP.  I saw full builds of Python 2.7 (I think) and GCC 4.4 scroll by already....

[18:18] *** dual joined
[18:19] <PerlJam> TimToady: that makes assignment sort of thunky when it's used in an initialization context.

[18:21] *** rgrau left
[18:21] <TimToady> it makes the assignment pseudo :)

[18:22] <PerlJam> the whole "= is assignment, except when it's not" idea makes me want some sort of marker to let me know that something special is going on.

[18:22] <TimToady> yeah, except it also wants to be huffmanly short

[18:23] <PerlJam> indeed

[18:23] <TimToady> so I think it's a pain point we have to live with, until we get Unicode keyboards

[18:23] <sorear> sometimes even when it is, it's not

[18:23] <flussence> colomon: Inkscape uses Boost heavily, and from what I understand 9/10 of that is C++ templates that have to be recompiled for each downstream using it...

[18:24] <moritz_> Boost is known to cause horrible compile times

[18:24] <sorear> ($foo) = (1, 2) and $foo = (1, 2) do different stuff for '='

[18:24] <colomon> flussence: yup, boost went by there too....

[18:24] <moritz_> sorear: yes, but both are assignment

[18:24] <TimToady> maybe real assignment is named infix:<← >

[18:25] <sorear> TimToady has talked about = being a context-sensitive macro, but I haven't fully grokked how »=« works in that model

[18:26] <PerlJam> TimToady: I now think you can read minds since I was thinking of something very similar   (ascii version <-)

[18:26] <TimToady> and list assignment is infix:<↞>

[18:26] <TimToady> or ⇇

[18:27] <TimToady> but I shouldn't design when I'm jetlagged...

[18:28] <PerlJam> S, S-plus, R, and I'm sure lots of other languages use <- for assignment

[18:28] <flussence> intercal

[18:28] <sorear> fortran?

[18:28] <TimToady> well, Algol orginally

[18:29] <sorear> given that = has so many different contextual meanings, I wonder if &infix:<=> is meaningful

[18:30] <sorear> and =-derived metaoperators ([=], »=«, ...)

[18:30] <PerlJam> sorear: it is when you want simple assignment  :)

[18:34] *** saaki joined
[18:36] *** bouyssie left
[18:36] *** jql left
[18:36] *** pmichaud left
[18:36] *** diakopter left
[18:36] *** wolverian left
[18:36] *** _sri left
[18:36] *** dukeleto left
[18:36] *** og01_ left
[18:36] *** VXZ left
[18:36] *** allbery_b left
[18:36] *** mathw left
[18:36] *** betterwo1ld left
[18:36] *** szabgab left
[18:36] *** cotto left
[18:36] *** Helios` left
[18:36] *** PerlJam left
[18:36] *** zamolxes_ left
[18:36] *** flatwhatson_ left
[18:36] *** barika left
[18:37] <TimToady> and I shouldn't backlag when jetlogged either...

[18:38] *** bouyssie joined
[18:38] *** jql joined
[18:38] *** pmichaud joined
[18:38] *** diakopter joined
[18:38] *** wolverian joined
[18:38] *** _sri joined
[18:38] *** dukeleto joined
[18:38] *** og01_ joined
[18:38] *** VXZ joined
[18:38] *** allbery_b joined
[18:38] *** mathw joined
[18:38] *** betterwo1ld joined
[18:38] *** szabgab joined
[18:38] *** cotto joined
[18:38] *** Helios` joined
[18:38] *** PerlJam joined
[18:38] *** zamolxes_ joined
[18:38] *** flatwhatson_ joined
[18:38] *** barika joined
[18:38] *** donri left
[18:38] *** donri joined
[18:39] *** silug_ joined
[18:39] *** Psyche^ joined
[18:40] *** Psyche^ is now known as Patterner

[18:40] *** saaki left
[18:45] *** fisted joined
[18:45] *** daxim_ left
[18:45] *** Lorn joined
[18:51] *** literal left
[18:51] *** literal joined
[18:51] *** literal left
[18:51] *** literal joined
[18:53] *** pmurias joined
[18:59] *** snearch left
[19:04] <Tene> phenny: ask jnthn if he's had time to look at https://gist.github.com/838498 yet

[19:04] <phenny> Tene: I'll pass that on when jnthn is around.

[19:31] *** ilogger2 joined
[19:31] *** ChanServ sets mode: +v ilogger2

[19:34] *** hatsefla1s joined
[19:35] *** pochi_ joined
[19:36] *** [Coke]_ joined
[19:37] *** pyrimidine joined
[19:39] *** ingyfoo joined
[19:43] *** p3n__ joined
[19:45] *** p3n__ is now known as p3n

[19:52] <TimToady> sorear: it might be possible to require functions with rw args to be predeclared, and only allow postdeclaration on non-mutators, if we have to do that for optimizations

[19:53] <rdesfo> does any know how to fix this issue

[19:53] <rdesfo> perl6: error while loading shared libraries: libparrot.so.3.0.0:

[19:53] <p6eval> rakudo 413862: OUTPUT«===SORRY!===␤Confused at line 22, near "error whil"␤»

[19:53] <p6eval> ..pugs: OUTPUT«*** ␤    Unexpected "3"␤    expecting ".", "\187", ">>", "=", "^", operator name, qualified identifier, variable name, "...", "--", "++", "i", array subscript, hash subscript or code subscript␤    at /tmp/L5DfSpvtpr line 1, column 52␤»

[19:53] <p6eval> ..niecza v3-32-g79b33ad: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Unsupported form of term:name at /tmp/qygqgDOYnL line 1:␤------> [32merror while loading shared libraries[33m⏏[31m: libparrot.so.3.0.0:[0m␤␤Invocant handling is NYI at /tmp/qygqgDOYnL line 1:␤------> [32me loading shared

[19:53] <p6eval> ..libraries: libparrot.so…

[19:54] <sorear> rdesfo: install parrot correctly?

[19:56] <rdesfo> I believe so.  I'm running arch linux so Parrot was installed by running 'pacman -S parrot'

[19:57] <diakopter> TimToady: that'd be great - where would the purity detector go .. in STD?

[19:58] <sorear> rdesfo: what was the next line of the error?

[19:58] <sorear> rdesfo: how did you build Rakudo?

[19:58] *** ingy left
[19:58] *** patch left
[19:58] * diakopter would love a definition of pseudo-assignment

[19:58] <diakopter> bah; too many netsplits.

[19:59] <sorear> rdesfo: did you try to move the perl6 executable after the build?

[19:59] *** [hercynium] joined
[20:02] *** [hercynium] is now known as hercynium

[20:02] <rdesfo> I moved it to /usr/local/perl6

[20:03] <rdesfo> sorear:  sorry I moved it to /usr/local/rakudo

[20:04] <sorear> that's your problem.

[20:05] <sorear> when you build Rakudo with --gen-parrot, it contains a hard-coded path to ../parrot_install/lib/libparrot.so.3.0.0

[20:05] <sorear> even if you hadn't, it would still contain the path to ../dynext/perl6_ops.so

[20:06] <rdesfo> sorear: I didn't move parrot though

[20:06] <sorear> how did you build Rakudo?

[20:07] <rdesfo> downloaded tar.gz then ran perl  'Configure.pl --gen-parrot' ,   'make',   'make install'

[20:07] <sorear> rdesfo: when you use --gen-parrot, Rakudo doesn't use the system parrot

[20:08] <sorear> it uses a parrot which is now in /usr/local/rakudo/parrot_install/

[20:08] <sorear> and was somewhere else

[20:08] <rdesfo> I'll try to reinstall and see where it gets me

[20:09] <rdesfo> sorear: thanks for the help

[20:09] *** [hercynium] joined
[20:09] *** [hercynium] left
[20:09] *** [hercynium] joined
[20:09] *** starcoder joined
[20:11] *** Vlavv_ joined
[20:11] *** hercynium left
[20:11] *** [hercynium] is now known as hercynium

[20:16] *** lue joined
[20:16] *** sjn joined
[20:16] *** baest joined
[20:16] *** _ilbot joined
[20:16] *** araujo joined
[20:16] *** rokoteko joined
[20:16] *** patch joined
[20:20] *** [Coke]_ is now known as [Coke]

[20:23] *** stkowski joined
[20:29] *** hudnix joined
[20:35] *** s1n joined
[20:39] <dalek> niecza: dafccd8 | sorear++ | / (9 files):

[20:39] <dalek> niecza: Kill SAFE/CORE division; use is unsafe to implement safe mode

[20:39] <dalek> niecza: review: https://github.com/sorear/niecza/commit/dafccd82df

[20:39] *** dual joined
[20:40] *** Holy_Cow joined
[20:45] *** ymasory joined
[20:45] <TimToady> sorear: re YOU_ARE_HERE detection, that's why I was using a .setting extension to prevent mixups between modules and settings

[20:45] <TimToady> in fact, the .syml names were set up to make it impossible to use a setting's .syml as a module

[21:32] <dalek> star: 18d84c8 | Util++ | README:

[21:32] <dalek> star: Fix wiki URL in README

[21:32] <dalek> star: review: https://github.com/rakudo/star/commit/18d84c892a

[21:43] *** [Coke] left
[21:45] *** [Coke] joined
[21:59] <donri> are the names of some PGE rules significant to PCT?

[21:59] <donri> e.g. I don't see <ws> used much in grammars but it seems to have an effect anyway?

[22:00] *** Holy_Cow left
[22:04] *** bhwu joined
[22:06] <moritz_> donri: read up on :sigspace and the difference between token and rule

[22:06] <moritz_> donri: it will answer your question

[22:07] *** saaki joined
[22:07] <donri> ah thanks

[22:07] <donri> is that a synops?

[22:07] <moritz_> it's in S05

[22:19] *** patrickas joined
[22:20] <patrickas> and we're back

[22:20] <phenny> patrickas: 23 Feb 10:22Z <moritz_> tell patrickas about http://rt.perl.org/rt3/Ticket/Display.html?id=71366 -- want to hack on MAIN again? :-)

[22:21] <moritz_> \o/

[22:21] <patrickas> o/

[22:21] <patrickas> moritz_: I actually had a patch for it somewhere, but I have been unable to test anythign with rakudo lately

[22:22] <patrickas> I am having the same problem as JimmyZ : "Unicode rindex not implemented"

[22:22] <moritz_> patrickas: :( have you tried installing icu?

[22:23] <patrickas> I did a quick trial but did not go very far...

[22:23] <patrickas> oh oh oh btw congracts ...

[22:23] *** hercynium left
[22:23] <moritz_> thank you

[22:24] <patrickas> I have been gone for a while!

[22:24] <moritz_> speaking of which, I need to change the small one's diaper... bbl

[22:24] <patrickas> hehehe ... ah the joys of parenthood!

[22:30] * moritz_ back

[22:30] <patrickas> wb

[22:31] <sorear> hello patrickas

[22:32] <patrickas> hello sorear! great progress with niecza!

[22:32] <moritz_> sorear: I think quite many spectests could be won if you implemented Parcel string- and numification

[22:32] <sorear> moritz_: How should Parcel numify?

[22:32] <sorear> rakudo: say +(12)

[22:33] <p6eval> rakudo 413862: OUTPUT«12␤»

[22:33] <sorear> rakudo: say +(12,)

[22:33] <p6eval> rakudo 413862: OUTPUT«1␤»

[22:33] <sorear> ah, +(.list)

[22:33] <moritz_> like that, yes :-)

[22:33] * sorear still thinks (12,) and (12) should be equivalent

[22:33] <moritz_> and it stringifies like an array

[22:34] <sorear> Rakudo: say ?()

[22:34] <sorear> rakudo: say ?()

[22:34] <p6eval> rakudo 413862: OUTPUT«Bool::False␤»

[22:34] <sorear> rakudo: say ?(0)

[22:34] <sorear> rakudo: say ?(0,)

[22:34] <p6eval> rakudo 413862: OUTPUT«Bool::False␤»

[22:34] <p6eval> rakudo 413862: OUTPUT«Bool::True␤»

[22:35] <moritz_> rakudo: say (12).WHAT

[22:35] <p6eval> rakudo 413862: OUTPUT«Int()␤»

[22:35] <moritz_> I guess the answer is that rakudo just doesn't consider (12) to be a Parcel

[22:35] <moritz_> and it always num- and boolifies a Parcel like a List

[22:35] <moritz_> rakudo: say (0,).WHAT

[22:35] <p6eval> rakudo 413862: OUTPUT«Parcel()␤»

[22:36] <moritz_> might be syntactic

[22:36] <sorear> (12) isn't a Parcel; see S08:160

[22:37] * moritz_ doesn't really trust S06

[22:37] <moritz_> erm, S08 I mean

[22:38] <sorear> I don't either really :)

[22:38] <flussence> that S08, always disguising itself as other specs so they get the blame!

[22:38] <sorear> it just bugs me that a trailing comma is meaningless unless the list has exactly one item

[22:39] <sorear> () always making a parcel would work too, but then handling 4*(2+3) would get confusing

[22:39] <moritz_> anyway, even if you don't get single-item edge case correct (whatever it is that's correct), you'd win lots of tests

[22:40] <moritz_> sorear: at some point single-item parcels were specced to behave exactly as their item

[22:40] <patrickas> ok so i downloaded ICU ... how do I compile rakudo with ICU ?

[22:41] <moritz_> patrickas: when it is installed (including development files), reconfiguring parrot and then rebuilding rakudo should pick it up

[22:42] <dalek> niecza: 32795f3 | sorear++ | lib/CORE.setting:

[22:42] <dalek> niecza: Add Parcel Bool, Str, Numeric

[22:42] <dalek> niecza: review: https://github.com/sorear/niecza/commit/32795f339f

[22:42] <sorear> (moritz++)

[22:43] <patrickas> Thx I'll do that

[22:44] <patrickas> moritz_: while waiting for new chapters of HP:MoR you can take a look at the Wastelands of Time (not quite the same league but almost as interesting)

[22:44] <patrickas> I've read and enjoyed both without having read or seen any of the official Harry Potter stuff :-)

[22:44] *** ymasory left
[22:45] <moritz_> patrickas: I'm currently reading "The Wise Man's Fear" by Patrick Rothfuss (sequel to "The Name of the Wind"). Very good stuff too, if you like fantasy

[22:45] *** plobsing joined
[22:46] *** fisted joined
[22:46] <moritz_> oh, and I'm working on a website where you can collect semantic relations between books, e.g. that one book is a sequel of another

[22:46] <moritz_> (but in Perl 5 for now)

[22:47] <patrickas> I could give it a try, but I read HPMor because of Eliezer's other non fiction writing, then I saw somewhere he mentioned the wastelands ... I was not really into that before :-)

[22:49] <moritz_> http://www.perlmonks.org/?node_id=891508 is there a nice Perl 6 solution for that?

[22:49] <moritz_> (swapping array items with even/odd indexes, so 1, 2, 3, 4 becomes 2, 1, 4, 3)

[22:50] <moritz_> oh, of course

[22:50] <moritz_> perl6: say (1..8).map(-> $a, $b { $b, $a }).perl

[22:50] <p6eval> rakudo 413862: OUTPUT«((2, 1), (4, 3), (6, 5), (8, 7))␤»

[22:50] <p6eval> ..niecza v3-33-gdafccd8: OUTPUT«[2, 1, 4, 3, 6, 5, 8, 7]␤»

[22:50] <p6eval> ..pugs: OUTPUT«(\2, \1, \4, \3, \6, \5, \8, \7)␤»

[22:51] <patrickas> rakudo: say (1..8).map({ $^b, $^a }).perl

[22:51] <moritz_> perl6: say (1..8).map({ $^b, $^a }).perl

[22:51] <p6eval> rakudo 413862: OUTPUT«((2, 1), (4, 3), (6, 5), (8, 7))␤»

[22:51] <p6eval> ..niecza v3-33-gdafccd8: OUTPUT«[2, 1, 4, 3, 6, 5, 8, 7]␤»

[22:51] <p6eval> ..pugs: OUTPUT«(\2, \1, \4, \3, \6, \5, \8, \7)␤»

[22:51] <p6eval> rakudo 413862: OUTPUT«((2, 1), (4, 3), (6, 5), (8, 7))␤»

[22:54] <patrickas> sorear++ niecza has come quite far along

[22:55] *** risou joined
[22:55] <moritz_> good night

[22:56] <patrickas> 'night

[22:57] <sorear> 'night

[22:58] * sorear could use more ideas of Things To Do

[22:59] <flussence> niecza: say 1; #`[...] say 2;

[22:59] <p6eval> niecza v3-33-gdafccd8: OUTPUT«1␤2␤»

[22:59] <flussence> oh, I think rakudo had more problems with those...

[23:00] <flussence> or at least the #= syntax...

[23:01] <sorear> rakudo implements #= correctly according to an old spec

[23:01] <flussence> ah

[23:01] <sorear> iirc

[23:01] <flussence> perl6: my $a; #= something

[23:01] <p6eval> pugs:  ( no output )

[23:01] <p6eval> ..niecza v3-33-gdafccd8: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Action method comment:sym<#=> not yet implemented at /tmp/hDCqor0W7Y line 1 (EOF):␤------> [32mmy $a; #= something[33m⏏[31m<EOL>[0m␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/SAFE.setting line 389 (SAFE

[23:01] <p6eval> ..die @ 2)␤  at /h…

[23:01] <p6eval> ..rakudo 413862: OUTPUT«===SORRY!===␤Whitespace character is not allowed as a delimiter at line 22, near " something"␤»

[23:01] *** whiteknight joined
[23:01] <sorear> rakudo: my $a; #=[ something ]

[23:01] <p6eval> rakudo 413862:  ( no output )

[23:02] * sorear wonders how weak references should be exposed to perl6

[23:09] *** __rnddim__ joined
[23:12] *** lue left
[23:18] <patrickas> 'night all

[23:18] *** patrickas left
[23:19] *** colomon joined
[23:24] *** jferrero joined
[23:24] *** _jaldhar joined
[23:27] <pmurias> sorear: are weak references important in a language with proper garbadge collection?

[23:28] *** orafu joined
[23:29] *** Guest87704 joined
[23:32] <plobsing> pmurias: yes. for example, a subscription-style event system works a lot more smoothly if the service holds weak references to the subscribers

[23:33] <plobsing> which is why both .Net and JVM provide weak references despite being GCed

[23:34] <diakopter> also, see "When to use Weak Reference"  at http://www.shafqatahmed.com/2008/01/weakreference-b.html

[23:34] <diakopter> (supports plobsing

[23:35] <diakopter> 's point)

[23:35] *** risou left
[23:36] <sorear> hey, plobsing even guessed my use case

[23:36] <sorear> specifically, niecza uses weak references so that subclass method caches can be invalidated when the superclass is augmented

[23:45] *** araujo_ joined
[23:46] *** araujo left
[23:46] *** patch left
[23:55] *** fisted_ joined
[23:57] *** fisted left
[23:58] *** araujo_ left
