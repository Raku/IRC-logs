[00:02] *** frettled joined
[00:05] *** Sarten-X joined
[00:07] *** whiteknight joined
[00:09] *** jql joined
[00:16] *** Sarten-X left
[00:19] <dalek> rakudo/nom: cfff0c8 | jnthn++ | src/ (297 files):

[00:19] <dalek> rakudo/nom: Make it clearer what's going away and just left in the repo for reference and, in cases where it's good, copying into new places.

[00:19] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cfff0c802d

[00:21] *** f00li5h[HireMe] is now known as f00li5h

[00:24] *** lumi left
[00:25] *** Sarten-X joined
[00:25] *** lumi joined
[00:33] *** kid51 joined
[00:43] *** ethan left
[00:45] <dalek> rakudo/nom: 709fd6c | jnthn++ | src/old/builtins/ (6 files):

[00:45] <dalek> rakudo/nom: Toss some stuff from old that contains nothing interesting to review.

[00:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/709fd6c6f2

[00:45] <dalek> rakudo/nom: 31dde87 | jnthn++ | NOMMAP.markdown:

[00:45] <dalek> rakudo/nom: Couple of nommap updates.

[00:45] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/31dde870be

[00:52] *** ymasory joined
[00:52] *** yinyin joined
[00:57] <jnthn> pmichaud: When I do perl Configure.pl --parrot-config=... I get:

[00:57] <jnthn> ===SORRY!===

[00:57] <jnthn> I'm missing some needed files in the install directory: C:/Consulting/rakudo/parrot_install/bin/parrot

[00:57] *** lumi left
[00:57] <jnthn> It's the right directory but it seems to have missed the executable extension.

[00:57] <jnthn> Sleep time...can look tomorrow if you don't get chance before I wake up. :)

[00:57] <jnthn> 'night #perl6

[00:58] *** lumi joined
[01:00] *** joshua__ joined
[01:00] <joshua__> hello, which Moose modules should I download to try to get some Perl6 object flavor into my Perl5?

[01:01] <joshua__> is there a difference between Moose and MooseX? 

[01:02] <joshua__> is there something better than Moose (that comes even closer to the Perl6 model?)

[01:03] <dalek> nqp: ef23ef5 | pmichaud++ | / (2 files):

[01:03] <dalek> nqp: Merge branch 'master' of github.com:perl6/nqp

[01:03] <dalek> nqp: review: https://github.com/perl6/nqp/commit/ef23ef5833

[01:03] <dalek> nqp: f152ca1 | pmichaud++ | Configure.pl:

[01:03] <dalek> nqp: Fix .exe bug in verify_install (jnthn++).

[01:03] <dalek> nqp: review: https://github.com/perl6/nqp/commit/f152ca1a2c

[01:04] *** noganex_ left
[01:05] <pmichaud> jnthn: fixed .exe bug

[01:05] *** noganex joined
[01:07] *** buubot_backup left
[01:12] <joshua__> i found some more Moose info online.... getting Moose now... l8r

[01:15] <cotto> Which nqp branch do I need to play with the Rakudo nom branch?

[01:16] *** isBEKaml left
[01:24] <pmichaud> nqp master

[01:24] <pmichaud> cotto: nqp master

[01:24] <cotto> pmichaud, ok.  that segfaults during the build

[01:24] <pmichaud> with which parrot?

[01:25] <cotto> master

[01:25] <pmichaud> checking.

[01:26] <pmichaud> today/tomorrow I plan to be reworking the build system of rakudo nom... it's a bit suboptimal at the moment

[01:26] <cotto> also, nqp master's Configure.pl doesn't find my parrot_config, even though it's in my path

[01:27] <pmichaud> nqp only looks at specific directories -- doesn't normally check the PATH

[01:27] <pmichaud> I suppose it could.

[01:27] <cotto> ok

[01:27] <pmichaud> that wouldn't seem to be too hard to add.

[01:27] <cotto> works fine if I tell it with --parrot-config

[01:28] <pmichaud> still with the segfault?

[01:28] <cotto> yes

[01:28] <cotto> rebuilt/reinstalled parrot too

[01:28] <pmichaud> I just built Parrot master, I'm trying nqp with it now

[01:29] *** lumi left
[01:29] <cotto> retrying with ccache cleared.  I might have some wonky ram.

[01:29] <pmichaud> nqp seems to have built okay for me with parrot master

[01:29] <pmichaud> pmichaud@kiwi:~/nqp$ ./nqp --version

[01:29] <pmichaud> This is nqp version build-2011.05-15-gf152ca1 built on parrot 3.4.0 revision RELEASE_3_4_0-138-g00bdcb5

[01:30] *** lumi joined
[01:30] *** Sarten-X left
[01:30] <cotto> bus error

[01:30] <pmichaud> 32 bit or 64?

[01:30] <cotto> awesome

[01:30] <cotto> 64

[01:30] <pmichaud> same here

[01:30] <pmichaud> does it work for you with 3.4.0, ooc?

[01:31] <cotto> let's find out

[01:31] *** buubot_backup joined
[01:37] <cotto> yes

[01:37] <pmichaud> so, something changed between 3.4.0 and master then

[01:37] <pmichaud> okay, we can see about tracking it down

[01:38] *** Moukeddar joined
[01:38] <Moukeddar> hey guys ,

[01:38] <Moukeddar> this : http://www.lynda.com/Perl-5-tutorials/essential-training/61025-2.html

[01:38] <Moukeddar> or

[01:38] <Moukeddar> this : http://www.vtc.com/products/Perl-Fundamentals-tutorials.htm

[01:38] <Moukeddar> ?

[01:39] <dalek> nqp: c6c3fdd | pmichaud++ | tools/lib/NQP/Config.pm:

[01:39] <dalek> nqp: Allow using parrot_config found in search path.  cotto++

[01:39] <dalek> nqp: review: https://github.com/perl6/nqp/commit/c6c3fdd4d4

[01:42] <cotto> Now I get "Cannot open output file Perl6/ModuleLoader.pbc"

[01:42] <cotto> during the Rakudo build

[01:42] <cotto> (Rakudo master)

[01:42] <cotto> er, nom

[01:43] <cotto> looks like a bit of build wackiness.  It should be writing to src/Perl6/ModuleLoader.pbc

[01:49] *** Sarten-X joined
[01:54] *** phenny joined
[01:54] <cotto> be back later this evening

[01:54] *** phenny left
[01:54] *** phenny joined
[01:56] <sorear> joshua__: join #moose on irc.perl.org

[01:56] <Util> Moukeddar: You are certainly welcome to be here, but your Perl 5 questions may get more answers on #perl-help on irc.perl.org.

[01:56] <sorear> joshua__: ask them to explain what the difference between Moose and MooseX is

[01:57] <Util> eXtreme!!! :)

[02:02] *** lumi left
[02:02] *** nsh joined
[02:02] *** sbp joined
[02:02] *** lumi joined
[02:03] *** jfried left
[02:03] *** woosley joined
[02:04] *** whiteknight left
[02:07] *** silug joined
[02:08] *** Sarten-X left
[02:15] *** Sarten-X joined
[02:16] <Moukeddar> uhm, right , right

[02:16] <Moukeddar> anycase , what do you think ?

[02:19] *** envi_laptop joined
[02:20] *** Sarten-X left
[02:25] *** lumi left
[02:26] *** lumi joined
[02:27] *** Sarten-X joined
[02:41] *** Sarten-X left
[02:43] *** kid51 left
[02:44] *** kid51 joined
[02:44] *** Moukeddar left
[02:48] *** kid51 left
[02:50] *** Sarten-X joined
[02:50] *** tty234 left
[02:55] *** lumi left
[02:56] *** lumi joined
[02:59] *** _jaldhar joined
[03:00] *** dayangkun_ joined
[03:01] *** tewk left
[03:01] *** tewk joined
[03:02] *** REPLeffect left
[03:04] *** dayangkun left
[03:05] *** tewk left
[03:05] *** Sarten-X left
[03:06] *** silug left
[03:06] *** tewk joined
[03:12] *** mtk left
[03:15] *** Sarten-X joined
[03:15] *** REPLeffect joined
[03:19] *** Sarten-X left
[03:20] *** mtk joined
[03:25] *** Sarten-X joined
[03:30] *** satyavvd joined
[03:34] *** benabik left
[03:35] *** lumi left
[03:36] *** lumi joined
[03:36] *** nymacro joined
[03:42] *** benabik joined
[03:46] <dalek> nqp: a4f80df | pmichaud++ | Configure.pl:

[03:46] <dalek> nqp: Add a --make-install option to Configure.pl, to automatically build

[03:46] <dalek> nqp: and install NQP after configuration is complete.  (This will normally

[03:46] <dalek> nqp: be used only by other systems wanting to do --gen-nqp.)

[03:46] <dalek> nqp: review: https://github.com/perl6/nqp/commit/a4f80dfc2a

[03:54] <joshua__> sorear, thanks for the moose pointers

[04:09] *** Sarten-X left
[04:12] *** JimmyZ joined
[04:14] *** JimmyZ left
[04:15] *** JimmyZ joined
[04:15] *** envi_laptop left
[04:18] *** Sarten-X joined
[04:19] *** lumi left
[04:20] *** lumi joined
[04:20] <sorear> stefan@stefans:~/rel/niecza$ mono-sgen run/Niecza.exe -e 'my $x = 2; say eval q[$x + 1]'

[04:20] <sorear> 3

[04:20] <sorear> \o/

[04:21] <JimmyZ> pmichaud : NQP can not build on windows 7 with strawberry perl 5.10.1 :  https://gist.github.com/1001777 , JFYI.

[04:21] <dalek> niecza: 1de763c | sorear++ | / (10 files):

[04:21] <dalek> niecza: Implement variable reference in evals, evals returning values

[04:21] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1de763ca1b

[04:21] <JimmyZ> \o sorear 

[04:22] <sorear> hi JimmyZ

[04:23] *** JimmyZ_ joined
[04:26] *** JimmyZ left
[04:26] *** JimmyZ_ is now known as JimmyZ

[04:27] *** JimmyZ_ joined
[04:29] *** hudnix left
[04:29] *** JimmyZ__ joined
[04:30] *** JimmyZ left
[04:30] *** JimmyZ__ is now known as JimmyZ

[04:31] *** JimmyZ left
[04:31] *** lumi left
[04:32] *** lumi joined
[04:33] *** JimmyZ_ left
[04:35] *** wamba joined
[04:38] *** Sarten-X left
[04:46] *** Sarten-X joined
[04:51] <cotto> back

[04:53] <sorear> hi cotto

[04:54] <cotto> is anyone else seeing oddness on the Rakudo nom branch?

[04:54] <sorear> you mean like it not working basically at all?

[04:54] <cotto> the build is broken

[04:55] <sorear> oh

[04:55] <dalek> niecza: 1767fe8 | sorear++ | lib/CLRBackend.cs:

[04:55] <dalek> niecza: Fix depended module autocompilation

[04:55] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1767fe8e82

[04:56] <dalek> roast: c318940 | sorear++ | S32-num/pi.t:

[04:56] <dalek> roast: [S32-num/pi] The specs no longer require use Num :constants

[04:56] <dalek> roast: review: https://github.com/perl6/roast/commit/c3189409a0

[04:59] *** lumi left
[05:00] *** lumi joined
[05:02] <cotto> I'm not sure how it could work given what the Makefile looks like, but it could be a local issue of some kind.

[05:02] *** molaf joined
[05:06] *** birdwindupbird joined
[05:07] *** orphu joined
[05:08] *** Sarten-X left
[05:10] *** wamba left
[05:12] *** birdwindupbird left
[05:13] <sorear> Who wrote fudge?  I can't understand it.

[05:17] *** Sarten-X joined
[05:21] *** silug joined
[05:21] * TimToady wrote it, and hence probably doesn't understand it either :)

[05:25] <jdhore1> <obligatory-"perl-is-a-write-only-language"-schtick>

[05:26] <sorear> uhm

[05:27] <sorear> S06-advanced-subroutine-features/caller.t contains "is call_line(), 22, ..."

[05:27] <sorear> ... but fudge changes the line numbers

[05:27] <sorear> FAIL

[05:28] <TimToady> I seem to recall that I wrote it not to change line numbers, but someone could have broken that

[05:28] *** birdwindupbird joined
[05:29] <dalek> roast: 78711fd | sorear++ | S06-advanced_subroutine_features/caller.t:

[05:29] <dalek> roast: Fudge S06-advanced_subroutine_features/caller.t for Niecza (only one test passes, but it is at least one Pugs failed)

[05:29] <dalek> roast: review: https://github.com/perl6/roast/commit/78711fd57e

[05:29] <dalek> niecza: f5a1f34 | sorear++ | / (4 files):

[05:29] <dalek> niecza: A couple more CallFrame/Sub introspectors and two new test files

[05:29] <dalek> niecza: review: https://github.com/sorear/niecza/commit/f5a1f340a4

[05:31] *** Tedd1^ left
[05:33] *** dayangkun_ left
[05:33] *** lumi left
[05:34] *** Tedd1 joined
[05:34] *** lumi joined
[05:38] *** REPLeffect left
[05:43] *** koban` joined
[05:47] *** Sarten-X left
[05:49] <cotto> dukeleto, ping

[05:49] <cotto> ww

[05:52] *** REPLeffect joined
[05:54] *** Sarten-X joined
[05:58] <moritz> perl6: say 1

[05:58] <p6eval> pugs, rakudo 048573, niecza v6-8-g1767fe8: OUTPUT«1␤»

[05:59] <sorear> interesting... my terminal font can render  Ⅻ in plain but not bold

[06:01] *** kst left
[06:05] *** Sarten-X left
[06:07] <dukeleto> cotto: pong

[06:09] *** lumi left
[06:09] *** kst joined
[06:10] *** cooper left
[06:10] *** lumi joined
[06:12] <cotto> dukeleto, resolved

[06:13] *** Sarten-X joined
[06:16] *** envi_laptop joined
[06:21] *** wtw joined
[06:25] *** silug left
[06:35] <sorear> perl6: my Str $x; say $x.succ.perl

[06:35] <p6eval> niecza v6-9-gf5a1f34: OUTPUT«1␤»

[06:35] <p6eval> ..pugs: OUTPUT«*** No such method in class Str: "&succ"␤    at /tmp/lT_iKUTHb0 line 1, column 16 - line 2, column 1␤»

[06:35] <p6eval> ..rakudo 048573: OUTPUT«"Sts()"␤»

[06:35] <sorear> perl6: my Str $x; $x++; say $x.perl

[06:35] <p6eval> pugs: OUTPUT«\1␤»

[06:35] <p6eval> ..rakudo 048573: OUTPUT«Type check failed for assignment␤    Container type: Str␤               Got: Int␤  in '&infix:<=>' at line 1␤  in main program body at line 7674:CORE.setting␤»

[06:35] <p6eval> ..niecza v6-9-gf5a1f34: OUTPUT«Unhandled exception: Nominal type check failed for scalar store; got Int, needed Str or subtype␤  at /tmp/Op0xCkFnfx line 0 (MAIN mainline @ 0) ␤  at /home/p6eval/niecza/lib/CORE.setting line 1475 (CORE C653_ANON @ 2) ␤  at /home/p6eval/niecza/lib/CORE.setting line

[06:35] <p6eval> ..1476 (CORE modul…

[06:35] <sorear> TimToady: help

[06:35] <sorear> TimToady: what is the correct result

[06:36] <sorear> Sts() is especially funny

[06:36] <moritz> that's clearly a hilarious bug :-)

[06:40] <szabgab> moritz: thanks for posting the installer

[06:41] <szabgab> I have two files a readme on how to build it and the .iss of that builds the installer, I guess they should go into the rakudo rep

[06:41] <szabgab> o

[06:42] *** Mowah joined
[06:42] <moritz> szabgab: sadly the upload was not successful :(

[06:42] <moritz> szabgab: I've just contacted the github support over it

[06:44] <szabgab> oh crap

[06:44] <sorear> moritz: have you tried again post-http://twitter.com/github/status/75708855895605248

[06:44] <szabgab> and I blogged about it already

[06:44] <szabgab> what do you mean it was not successful btw, it seems to be there?

[06:45] <moritz> szabgab: it told me the upload was unsuccessfull, and didn't show me the file

[06:45] <moritz> "Something went wrong that shouldn't have. Please try again or contact support if the problem persists."

[06:45] <szabgab> I'll try to fetch it from github and compare to the one I have

[06:46] *** lumi left
[06:46] <moritz> now I see it too

[06:46] *** lumi joined
[06:47] *** Su-Shee joined
[06:48] <Su-Shee> good morning.

[06:51] *** REPLeffect left
[06:52] *** REPLeffect joined
[06:53] <sorear> rakudo: say "*".succ

[06:53] <p6eval> rakudo 048573: OUTPUT«*␤»

[06:55] <szabgab> I can't wget from github

[06:56] *** tzhs joined
[06:57] <szabgab> I downloaded it using a browser and installed it on the windows machine

[06:57] <szabgab> so it seesm to be ok

[06:58] <sorear> szabgab: certificate issue?

[06:58] <szabgab> with wget, yes

[06:58] <szabgab> but I don't need it any more

[06:59] <sorear> that problem has been around since the very first time I tried to wget from github

[06:59] <sorear> niecza's Makefile has --no-check-certificate

[07:02] <sorear> rakudo: say "00001".pred

[07:02] <p6eval> rakudo 048573: OUTPUT«00000␤»

[07:06] *** REPLeffect left
[07:06] *** mj41 joined
[07:07] *** lumi left
[07:08] *** lumi joined
[07:09] <sorear> rakudo: say "az99".succ

[07:09] <p6eval> rakudo 048573: OUTPUT«ba00␤»

[07:09] <sorear> rakudo: say "z99".succ

[07:09] <p6eval> rakudo 048573: OUTPUT«aa00␤»

[07:09] <sorear> rakudo: say "99".succ

[07:09] <p6eval> rakudo 048573: OUTPUT«100␤»

[07:12] *** envi_laptop left
[07:18] *** baest_ is now known as baest

[07:19] *** jfried joined
[07:20] *** REPLeffect joined
[07:21] *** BaggioKwok joined
[07:21] *** Sarten-X left
[07:22] * moritz is a bit surprised by 'z99'.succ

[07:23] <sorear> it's special cased at src/builtins/Str.pir:203

[07:23] <sorear> and metntioned in the spec

[07:23] <sorear> S03:468

[07:24] *** lumi left
[07:26] *** lumi joined
[07:27] <moritz> ah well

[07:30] *** Sarten-X joined
[07:39] *** REPLeffect left
[07:40] <dalek> niecza: 6caf918 | sorear++ | / (4 files):

[07:40] <dalek> niecza: Add Str.succ, Str.pred, cheaty polymorphic comparison, let "a".."z" work

[07:40] <dalek> niecza: review: https://github.com/sorear/niecza/commit/6caf918bd7

[07:41] *** woosley left
[07:45] *** lumi left
[07:45] * sorear -> sleep

[07:45] *** lumi joined
[07:47] <moritz> prove -e "mono" obj/MAIN.exe

[07:47] <moritz> obj/MAIN.exe .. Failed 3/891 subtests

[07:47] <moritz> not ok 733 - Tail exclusion works

[07:48] <moritz> #           got: 1 2 3 4 5

[07:48] <moritz> #      expected: 1 2 3 4

[07:48] <moritz> and the next three tests fail with similar errors

[07:49] <moritz> sorear: and lots of spectests fails

[07:50] <moritz> http://stackoverflow.com/questions/6162484/why-does-modern-perl-avoid-utf-8-by-default/  # "I played around with rakudo and UTF-8 was just there as I needed. I did have no problems, it just worked. Maybe there are some limitation somewhere deeper, but at start, all I tested worked as I expected."

[07:50] * moritz hopes that cheers up pmichaud++ a bit

[07:52] <mathw> From what I gathered from all that, the reason Unicode in Perl 5 is such a pain is because it wasn't built to be Unicode

[07:52] <mathw> so the builtin comparisons don't do Unicode things

[07:52] <mathw> and so forth

[07:52] <mathw> and also the usual things which make unicode a pain, and require people to learn stuff

[07:53] <moritz> the real reason is that Perl 5 doesn't expose types to the user

[07:53] <moritz> so buffers and strings can't have separate types

[07:53] <mathw> (on a vaguely-related tangent, I've found Firefox misidentifying page encodings a lot lately. Irritatingly, including some pages which declare they're utf-8 but it insists it should decode as ISO-whatever-useless-crap)

[07:53] <moritz> and that makes it impossible to polymorphically treat strings and buffers sanely

[07:54] <moritz> and very easy to mix the two up, and get mojibake

[07:54] *** REPLeffect joined
[07:55] *** molaf left
[07:58] <mathw> yes, that's a good point

[07:59] <mathw> there's a distinct difference in the modern world between bytes lined up in a row and a string of characters

[07:59] <moritz> at least that's what caused the most trouble for me, and prevented me (and other) from writing modules that make UTF-8 magically work in perl 5

[08:00] <mathw> Personally having read that I would not choose Perl 5 for a project that needed solid Unicode support

[08:00] <mathw> unless it was something very straightforward indeed

[08:00] <moritz> fwiw I'm having no troubles with Perl 5 and Unicode in my current web project

[08:00] <mathw> I think this is one clear advantage Perl 6 will have when we're in a production state

[08:00] <mathw> it does depend what you need to do with it though

[08:00] <moritz> but I'm well aware of the gotchas, and what I need to do

[08:00] *** MayDaniel joined
[08:01] <moritz> http://faui2k3.org:3333/title/80963 that fancy ż comes from an automated import of worldcat data - no trouble whatsoever :-)

[08:01] <mathw> :)

[08:02] <mathw> excellent

[08:04] *** REPLeffect left
[08:08] <sorear> can't sleep

[08:08] *** BaggioKwok left
[08:08] <moritz> :/

[08:10] <mathw> can't sleep? fix bugs!

[08:10] <mathw> but then you might end up asleep with your face on the keyboard

[08:10] <mathw> and that's never good

[08:11] <dalek> niecza: 8e5c9f5 | sorear++ | / (2 files):

[08:11] <dalek> niecza: Oops, was ignoring $!exclude_max by mistake in the new RangeIter (moritz++)

[08:11] <dalek> niecza: review: https://github.com/sorear/niecza/commit/8e5c9f51e6

[08:11] <sorear> that wasn't too hard

[08:11] <moritz> nqp: say(pir::stat('foo'))

[08:11] <p6eval> nqp: OUTPUT«error:imcc:syntax error, unexpected PREG, expecting '(' ('$P16')␤   in file '(file unknown)' line 24␤error:imcc:syntax error ... somewhere␤ in file '(file unknown)' line 118␤syntax error ... somewhere␤»

[08:11] <moritz> nqp: say(pir::stat__ps('foo'))

[08:11] <p6eval> nqp: OUTPUT«error:imcc:syntax error, unexpected PREG, expecting '(' ('$P16')␤   in file '(file unknown)' line 22␤error:imcc:syntax error ... somewhere␤ in file '(file unknown)' line 116␤syntax error ... somewhere␤»

[08:13] <moritz> nqp: say(pir::stat__isi('foo', 0))

[08:13] <p6eval> nqp: OUTPUT«error:imcc:syntax error, unexpected IREG, expecting '(' ('$I16')␤   in file '(file unknown)' line 22␤error:imcc:syntax error ... somewhere␤ in file '(file unknown)' line 116␤syntax error ... somewhere␤»

[08:13] *** daxim joined
[08:13] <moritz> nqp: say(pir::stat__psi('foo', 0))

[08:13] <p6eval> nqp: OUTPUT«error:imcc:syntax error, unexpected PREG, expecting '(' ('$P16')␤   in file '(file unknown)' line 22␤error:imcc:syntax error ... somewhere␤ in file '(file unknown)' line 116␤syntax error ... somewhere␤»

[08:13] *** lumi left
[08:14] *** lumi joined
[08:16] <pmichaud> moritz/szabgab:  I deleted and reuploaded the file to github a bit earlier -- maybe that's what fixed it.

[08:16] <pmichaud> but after reuploading, I also had difficulties in getting it to download (perhaps cache issue)

[08:18] *** REPLeffect joined
[08:19] <moritz> nqp: say(pir::stat__isi('foo', 0))

[08:19] <p6eval> nqp: OUTPUT«error:imcc:syntax error, unexpected IREG, expecting '(' ('$I16')␤   in file '(file unknown)' line 22␤error:imcc:syntax error ... somewhere␤ in file '(file unknown)' line 116␤syntax error ... somewhere␤»

[08:19] <pmichaud> (pir::stat in nqp)   I'm thinking the needed dynoplib isn't loaded.

[08:19] <moritz> meh

[08:20] <pmichaud> looks like it's in io.ops

[08:20] <pmichaud> I can add it to nqp if you'd like.

[08:20] <moritz> and if I want it at nqp compile time, I have to add it to Actions.pm and rebootstrap, right?

[08:21] <pmichaud> yeah

[08:21] <pmichaud> you mean, you need it for building nqp itself?

[08:21] <pmichaud> s/need/want/  # as appropriate

[08:21] <moritz> pmichaud: I want to check the existence of files for module loading

[08:22] *** dakkar joined
[08:22] <moritz> pmichaud: my plan (for now) is a list of hardcoded prefixes of where to look for mofdules

[08:22] <moritz> so we can have blib/Perl6/Foo.pm instead of Perl6/Foo.pm

[08:22] <pmichaud> ultimately I want a -L option and/or an environment variable for that

[08:22] <pmichaud> ...but instead of using stat, why not just check for failed open?

[08:23] <pmichaud> (I'm still reeling from my earlier discovery that 'pow' is a dynop in Parrot.  WTF?)

[08:25] *** Shozan joined
[08:25] <moritz> pmichaud: isn't open() a bit wasteful, just for checking existence?

[08:26] <pmichaud> it's not as efficient, no, but it'd be guaranteed to work.

[08:26] <dalek> nqp: 395da2f | pmichaud++ | src/NQP/Actions.pm:

[08:26] <dalek> nqp: Add io_ops to list of automatically loaded dynoplibs, so we can get

[08:26] <dalek> nqp: <stat> and <printerr> (among many others).

[08:26] <dalek> nqp: review: https://github.com/perl6/nqp/commit/395da2f5cb

[08:26] <pmichaud> I didn't rebootstrap -- feel free to do that.

[08:26] <moritz> pmichaud: the code currently uses load_bytecode. I could wrap that in a try { } block, but then I'd have some trouble printing the correct diagnostics on failure

[08:27] * moritz has an identical commit locally

[08:27] <pmichaud> the other thing to remember is that every opcode we use in NQP is something that we'll have to cross-vm support someday.

[08:28] <pmichaud> I'm not sure where <stat> will fit in that.

[08:29] <moritz> nqp: say ?pir::open('foobar')

[08:29] <p6eval> nqp: OUTPUT«Confused at line 1, near "say ?pir::"␤current instr.: 'nqp;HLL;Grammar;panic' pc 26397 (src/stage2/gen/NQPHLL.pir:7037)␤»

[08:29] <moritz> nqp: say ?pir::open__ps('foobar')

[08:29] <p6eval> nqp: OUTPUT«Confused at line 1, near "say ?pir::"␤current instr.: 'nqp;HLL;Grammar;panic' pc 26397 (src/stage2/gen/NQPHLL.pir:7037)␤»

[08:29] <pmichaud> nqp:  say(?pir::open('foobar'))

[08:29] <p6eval> nqp: OUTPUT«error:imcc:syntax error, unexpected PREG, expecting '(' ('$P16')␤   in file '(file unknown)' line 24␤error:imcc:syntax error, unexpected '\n'␤      in file '(file unknown)' line 25␤error:imcc:syntax error ... somewhere␤ in file '(file unknown)' line 119␤syntax error ... somewhere␤»

[08:29] <moritz> nqp: say(?pir::open('foobar'))

[08:29] <p6eval> nqp: OUTPUT«error:imcc:syntax error, unexpected PREG, expecting '(' ('$P16')␤   in file '(file unknown)' line 24␤error:imcc:syntax error, unexpected '\n'␤      in file '(file unknown)' line 25␤error:imcc:syntax error ... somewhere␤ in file '(file unknown)' line 119␤syntax error ... somewhere␤»

[08:29] <pmichaud> <open> is also a dynop

[08:29] <moritz> aye, just figured

[08:30] <pmichaud> I guess that makes it definite that we want the dynoplib

[08:30] <pmichaud> either that or we go ahead and make our own IO pmc

[08:31] <moritz> $ ./nqp -e 'say(? try{ pir::open__ps("foobar") } )'

[08:31] <moritz> Unable to open filehandle from path 'foobar'

[08:31] <moritz> + backtrace

[08:31] <pmichaud> use stat.  :-)

[08:34] <pmichaud> there's also the open() call in the setting.

[08:36] <moritz> somehow my patch doesn't work :/

[08:37] <moritz> it doesn't search blib/, althought I thought it should

[08:41] *** Sarten-X left
[08:42] *** lumi left
[08:43] <dalek> niecza: d350ec8 | sorear++ | / (5 files):

[08:43] <dalek> niecza: Refactor REPL code a bit

[08:43] <dalek> niecza: review: https://github.com/sorear/niecza/commit/d350ec818b

[08:43] <dalek> niecza: e2ed743 | sorear++ | / (3 files):

[08:43] <dalek> niecza: Suppress autoprint if explicit print used in REPL

[08:43] <dalek> niecza: review: https://github.com/sorear/niecza/commit/e2ed7436fe

[08:43] *** lumi joined
[08:45] *** silug joined
[08:48] *** daniel-s joined
[08:48] *** joshua__ left
[08:50] *** Sarten-X joined
[08:51] <dalek> niecza: 5f36c0e | sorear++ | src/niecza:

[08:51] <dalek> niecza: Allow REPL to recover from exceptions

[08:51] <dalek> niecza: review: https://github.com/sorear/niecza/commit/5f36c0e5c9

[08:59] <dalek> niecza: 774d996 | sorear++ | src/ (2 files):

[08:59] <dalek> niecza: Allow using lexicals across lines in REPL

[08:59] <dalek> niecza: review: https://github.com/sorear/niecza/commit/774d996840

[09:00] <pmichaud> ModuleLoader.pbc feels wrongly factored to me.

[09:01] <dalek> niecza: af39682 | sorear++ | src/niecza:

[09:01] <dalek> niecza: Arrange for CORE to be run at least once so $*OUT is usable in REPL

[09:01] <dalek> niecza: review: https://github.com/sorear/niecza/commit/af39682bc9

[09:01] <sorear> now I'm going to try this "sleep" thing again

[09:02] <pmichaud> sorear: yeah, "sleep" didn't work for me

[09:02] <pmichaud> which is why I'm up at 4am

[09:02] <sorear> (hopefully Niecza REPL is a skosh more usable now)

[09:02] <pmichaud> sorear++ # niecza repl.... that took rakudo forever to get usable

[09:05] <moritz> now I know why my nqp changes didn't affect rakudo/nom... installed to the wrong location :/

[09:05] *** Sarten-X left
[09:05] <pmichaud> nqp needs far more tests.

[09:06] <moritz> agreed.

[09:07] <moritz> fwiw the nqp harness for the regex tests is somewhat ugly and incomplete

[09:07] *** Sarten-X joined
[09:08] <pmichaud> well, I'm thinking we need tests for the other components that have been added; e.g., moduleloader

[09:08] <moritz> \o/ seems to work-ish

[09:09] <jnthn> morning o/

[09:09] <pmichaud> jnthn: morning /o

[09:09] <pmichaud> o/

[09:09] <pmichaud> (my arms don't work right at 4am)

[09:10] <jnthn>  /o = scratching head thinking about something? :)

[09:10] <pmichaud> more like "pulling my hair out because I can't get to sleep"

[09:10] <jnthn> aww :-(

[09:11] * jnthn wonders if any commits landed while he slept

[09:11] <pmichaud> I added io_ops to the list of default loaded dynos

[09:11] <pmichaud> *dynops

[09:11] <pmichaud> so we get open/stat/printerr/etc.

[09:11] <moritz> jnthn: I have local changes to nqp and nom to make the former look for modules in blib/

[09:11] *** REPLeffect left
[09:11] <jnthn> OK, great.

[09:12] <jnthn> pmichaud: ah, you fixed the win32 issue in nqp too...or at least, I see the patch.

[09:12] <pmichaud> I think I fixed it -- don't really have a way to test.

[09:12] <jnthn> sure, I'll do that Real Soon Now :)

[09:12] <pmichaud> what does 'set_mainline_module' actually do, ooc?

[09:13] *** REPLeffect joined
[09:14] *** lumi left
[09:15] *** lumi joined
[09:16] <jnthn> pmichaud: Handles the case where you try to "use" the module that is also the program mainline

[09:16] <pmichaud> does that happen?

[09:16] <jnthn> pmichaud: masak++ ran into it when he wanted to play with language extensions, and wrote an NQP program that did use NQP;

[09:16] <moritz> use Foo; in Foo.pm ?

[09:16] <moritz> ah

[09:16] <moritz> masak. Of Course.

[09:16] <pmichaud> I don't understand.

[09:16] <jnthn> moritz: Well, it's more of an issue for folks doing compiler stuff who want to derive from NQP.

[09:17] <pmichaud> ...but if you're deriving from NQP, then you're not the mainline, right?

[09:17] <pmichaud> I mean, then NQP isn't the mainline

[09:18] <jnthn> pmichaud: If you do nqp foo.nqp and foo.nqp does "use NQP" you hit the issue where it's the mainline and you're using it.

[09:18] <pmichaud> shouldn't that be handled by NQP, not the mainline code?

[09:19] <pmichaud> deriving that fact from the executable name feels Very Wrong.

[09:19] <jnthn> pmichaud: Yes, I don't especially like the current solution.

[09:19] <jnthn> pmichaud: That's kinda why I factored things differently in rakudo

[09:19] <pmichaud> in nom?

[09:19] <jnthn> pmichaud: That is, a very small loader program that does a use statement.

[09:19] <jnthn> Yes, in nom

[09:20] <pmichaud> is there an NQP.pbc ?

[09:20] <pmichaud> i.e., something that would be loaded by "use NQP;" ?

[09:20] <jnthn> Yes.

[09:21] <pmichaud> that's the thing that gets built by combining the NQP::* files?

[09:21] <jnthn> pmichaud: The problem is twofold. First, Parrot doesn't recognize it's re-loading the same thing. But even if that was fixed we're not out of the woods, because we need the UNIT in order to do e.g. global merging and importing.

[09:21] <jnthn> pmichaud: yes.

[09:21] <pmichaud> I don't expect Parrot to detect it, no.

[09:22] <jnthn> No, I didn't really consider it a bug.

[09:22] <pmichaud> but there probably should be a src/NQP/NQP.pm that registers the fact that "NQP" has already been loaded.

[09:22] <pmichaud> rather than asking every mainline to do it.

[09:22] <jnthn> Well, I tried to solve the general problem rather than "just for NQP".

[09:22] <pmichaud> describe the general problem, then :-)

[09:23] <pmichaud> how often are we going to have     Something.pm   that also contains   "use Something;"   ?

[09:23] <jnthn> A program a language is running wants to load its compiler, is doing separate compilation and the compiler is also the current program.

[09:23] <sorear> pmichaud: well, it helps that I remember how I got the rakudo repl working :)

[09:23] <pmichaud> I mean, does that ever happen in Perl 5?

[09:24] *** silug left
[09:24] <jnthn> pmichaud: Probably not, but I'm not sure Perl 5 does separate compilation, nor is Perl 5 written in Perl 5. :)

[09:24] <sorear> sleep still does not agree with me.

[09:24] *** silug joined
[09:24] <jnthn> pmichaud: It is, admittedly, solving an obscure problem in a non-ideal way.

[09:25] <pmichaud> ...and introducing bugs in the process :-(

[09:25] *** lumi left
[09:25] <jnthn> Well, the original problem was also a bug.

[09:25] *** daniel-s left
[09:26] <pmichaud> I think it might be far more useful at this point to say that having a specific <language>.pm that marks it's been loaded

[09:26] <pmichaud> is part of the pattern of creating any compiler-like program

[09:26] *** lumi joined
[09:26] <pmichaud> or, perhaps it's something that should be added to HLL::Compiler

[09:27] <moritz> fwiw I've got rakudo to build with stuff in blib/Perl6/ instead of Perl6/

[09:27] <jnthn> moritz++! :)

[09:27] <pmichaud> moritz++

[09:27] <jnthn> pmichaud: I could live with that approach too.

[09:27] <moritz> but at runtime it still looks into Perl6/ to find the module loader :(

[09:27] <moritz> what loads the module loader?

[09:27] <pmichaud> the current module loader factorization feels very wrong to me

[09:28] <jnthn> pmichaud: The locating modules bit almost certainly is.

[09:28] <pmichaud> it's another thing that feels like it wants to be a part of HLL::*  (that can be subclassed/overridden by individual compilers)

[09:29] <pmichaud> i.e., it really ought to be  HLL::ModuleLoader

[09:29] <jnthn> pmichaud: But if it's in HLL, how does HLL load its dependencies?

[09:29] <jnthn> pmichaud: It's really early in the build cycle because of that.

[09:29] <moritz> ah, load_bytecode 'Perl6/ModuleLoader.pbc' is hard coded

[09:29] <jnthn> moritz: Ah, yes.

[09:30] <jnthn> moritz: The module loader can't use the module loader...a "fun" issue. 

[09:30] <pmichaud> I don't understand the "how does HLL load its dependencies" part

[09:30] *** yinyin left
[09:30] <pmichaud> at least in nqp-rx,  any compiler expected to do the equivalent of 'load_bytecode HLL.pbc'  which got the base HLL type and all of its dependencies.

[09:30] <moritz> seems I've got it working

[09:31] <moritz> now I just need to remove the debug output and try again

[09:31] *** pochi joined
[09:32] <pmichaud> put another way... I'm not sure that HLL::* has any dependencies

[09:32] <pmichaud> it's pretty basic

[09:33] <jnthn> At the of e.g. src/stage2/gen/HLL.pm, there's use NQPRegex;

[09:33] <pmichaud> that appears to be the only one

[09:33] <jnthn> *the top of

[09:33] <pmichaud> so, HLL::Grammar has a dependency

[09:34] <pmichaud> but if ModuleLoader is part of HLL, that might not be much of an issue.

[09:34] <sorear> perl6: say +[ [1,3,2].sort ]

[09:34] <p6eval> pugs, rakudo 048573, niecza v6-16-gaf39682: OUTPUT«3␤»

[09:35] <pmichaud> I agree it's a bit of a bootstrap issue... but HLL:: is where some of those bootstrap issues might want resolving

[09:35] <jnthn> pmichaud: <uncomfortable look>

[09:35] <jnthn> pmichaud: It may be possible but it won't be easy.

[09:35] <jnthn> pmichaud: It'll be at least *easier* when we have PAST in NQP

[09:35] <jnthn> And can shove all of that in HLL too.

[09:36] <jnthn> Because that's what NQPRegex really cares about.

[09:36] <jnthn> At the moment though, I think it'll be hard to do a refactor of that.

[09:36] *** yinyin joined
[09:37] <pmichaud> well, we've changed the basic premises that underlay the previous structure

[09:37] <jnthn> For sure.

[09:37] <jnthn> load_bytecode 'HLL.pbc' is no longer good enough for loading a module.

[09:37] <pmichaud> it never was

[09:37] <pmichaud> well, it partially was

[09:38] <jnthn> Well, it "worked" before. Now it doesn't.

[09:38] <jnthn> (Since we're using Parrot namespaces, so stuff ain't just magically reachable, etc)

[09:38] <jnthn> gah, we're *not* using...

[09:39] <dalek> niecza: 892ece4 | sorear++ | / (2 files):

[09:39] <dalek> niecza: Implement automatic Schwartzian transform for arity 1 callbacks

[09:39] <dalek> niecza: review: https://github.com/sorear/niecza/commit/892ece41a2

[09:39] <pmichaud> that's not the issue I'm seeing/thinking of, though.

[09:39] <pmichaud> Regex.pbc was a separate library before because one could write nqp-rx programs that would need regexes but that weren't necessarily compilers

[09:39] <jnthn> *nod*

[09:41] <jnthn> That pulled in HLL and so forth to compile the regexes though, I guess?

[09:41] <pmichaud> I don't think it pulled in HLL

[09:41] *** woosley joined
[09:41] <pmichaud> nqp-rx (the compiler) would already have the regex compilation code available

[09:42] <pmichaud> but you still needed the regex engine at runtime, when nqp-rx compiler was perhaps long gone

[09:42] <pmichaud> (i.e., you needed the Match and Cursor types)

[09:42] <jnthn> pmichaud: Yeah, I remember loading something by default to make that work.

[09:43] <jnthn> pmichaud: Otherwise the regex tests in t/nqp/ would all fail.

[09:43] <jnthn> pmichaud: BTW, nqp fix for Win32 works :)

[09:43] <pmichaud> excellent

[09:43] <pmichaud> okay, I'll think about all of this a bit more

[09:43] <pmichaud> I agree that ModuleLoader doesn't belong in HLL::

[09:44] <jnthn> pmichaud: Anyway, I agree overall that we can refactor the NQP module loading bits. *but* it was really hard work getting the bootstrap and separate compilation straight.

[09:44] <pmichaud> I'm not sure where it fits

[09:44] <jnthn> Well, I wasn't sure it fitted anywhere, so it ended up on its own. :)

[09:45] <pmichaud> on its own may be correct

[09:45] <jnthn> I kinda wonder if we should provide a ModuleLoader in HLL that we expect HLLs to subclass

[09:45] <jnthn> BUT it's not the one NQP tends to use for its own lower level bits.

[09:45] <pmichaud> I'm wondering to what degree it's really NQP/ModuleLoader

[09:45] <pmichaud> (that is loaded by every nqp program)

[09:46] <dalek> niecza: b84eb2d | sorear++ | lib/Kernel.cs:

[09:46] <dalek> niecza: Allow %hash1 = { a => 1 } to work

[09:46] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b84eb2d9a6

[09:46] <pmichaud> perhaps it's really in the same category as   the basic Object classes and types

[09:46] <jnthn> Well, those sit in the setting.

[09:46] <jnthn> And something's gotta load the setting too :)

[09:46] <dalek> roast: c8bbc95 | sorear++ | S04-statement-modifiers/until.t:

[09:46] <dalek> roast: Fudge S04-statement-modifiers/until.t for niecza

[09:46] <dalek> roast: review: https://github.com/perl6/roast/commit/c8bbc956d7

[09:46] <dalek> roast: 22c8549 | sorear++ | S02-literals/hash-interpolation.t:

[09:46] <dalek> roast: Fudge hash-interpolation for niecza

[09:46] <dalek> roast: review: https://github.com/perl6/roast/commit/22c85491ff

[09:47] <pmichaud> I'm a little concerned by "_the_ setting"

[09:48] <jnthn> Well, I really meant "the default setting" :)

[09:48] <pmichaud> "core setting", normally.  :-)

[09:48] <jnthn> --setting=SettingNowWithAddedPonies :)

[09:48] <jnthn> Yes, the default is NQPCORE

[09:49] <jnthn> But --setting=NULL means don't load one

[09:49] <jnthn> And --setting=...namehere... means use that one.

[09:51] <dalek> nqp: 03db0cb | jonathan++ | src/6model/sixmodelobject.h:

[09:51] <dalek> nqp: Add a pointer to the STable where a REPR can optionally hang any type-specific data, so we can refactor away from 'REPR instances'.

[09:51] <dalek> nqp: review: https://github.com/perl6/nqp/commit/03db0cb234

[09:52] <jnthn> pmichaud: btw, already added --setting= flag to nom too :)

[09:52] *** Sarten-X left
[09:53] *** lumi left
[09:53] <pmichaud> looks like Perl 6 uses --language=  and -L for that

[09:53] <pmichaud> instead of --setting

[09:54] *** lumi joined
[09:55] <jnthn> ah, ok

[09:55] <jnthn> renaming is easy :)

[09:57] <pmichaud> I don't quite understand the terms in merge_globals, either

[09:57] <pmichaud> let me re-review my CORE:: concepts

[09:58] *** woosley left
[09:58] <pmichaud> what does "GLOBAL merger" mean (ModuleLoader.pm:50)

[09:58] <pmichaud> ?

[09:59] <jnthn> In separate compilation, every module starts out with a fresh view of GLOBAL.

[09:59] <jnthn> If we load that module, then its view of GLOBAL needs to be unified with the loader's view.

[10:00] <jnthn> And any conflicts complained about.

[10:01] <jnthn> e.g. if you use Foo and use Bar and both have a class Llama { } installed in their GLOBAL (the default module you start out in), then it's an error.

[10:01] <pmichaud> huh?

[10:01] <jnthn> er, if you use them both.

[10:01] <pmichaud> wouldn't that end up being  Foo::Llama and Bar::Llama, though?

[10:02] <pmichaud> I didn't think there was a "global" GLOBAL

[10:02] <jnthn> There's not per se. There's only "the current thing I'm running/compiling's view of GLOBAL"

[10:03] <pmichaud> which is UNIT::GLOBAL

[10:03] <jnthn> Yes.

[10:03] <jnthn> Well

[10:03] <pmichaud> I don't understand where the "merger" comes into play.

[10:04] <jnthn> If you use two modules they'll both have their own view of what is global.

[10:04] * jnthn tries to find the bit of irclog where TimToady++ talked about this

[10:04] <pmichaud> right, no problem

[10:05] <jnthn> pmichaud: http://irclog.perlgeek.de/perl6/2011-03-12#i_3385886

[10:06] <sorear> jnthn: how sophisticated is your merger?

[10:06] *** amkrankruleuen left
[10:06] <sorear> where is it?

[10:06] *** wamba joined
[10:06] <jnthn> sorear: It's...dumb. :)

[10:07] <jnthn> sorear: NQP, src/ModuleLoader.pm

[10:07] <dalek> niecza: a844392 | sorear++ | / (2 files):

[10:07] <dalek> niecza: Hack - direct references to &eval disable block inlining

[10:07] <dalek> niecza: review: https://github.com/sorear/niecza/commit/a84439204e

[10:07] <dalek> niecza: b80f0d0 | sorear++ | lib/CORE.setting:

[10:07] <dalek> niecza: Fix Rop

[10:07] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b80f0d0b42

[10:07] <sorear> thanks

[10:08] <jnthn> sorear: I think it even mentions your one as the place to look to. :)

[10:09] <pmichaud> jnthn: okay, it makes a bit more sense to me now.

[10:09] <jnthn> pmichaud: also http://irclog.perlgeek.de/perl6/2011-04-16#i_3519815

[10:09] <sorear> How easy is it to have nqpnom running alongside nqprx, with the same Parrot install

[10:10] <pmichaud> should be no problem.

[10:10] *** donri joined
[10:10] <donri> http://paddy3118.blogspot.com/2011/06/what-httpperl6org-gets-right.html

[10:10] <pmichaud> or, when we're done, shouldn't be any real problem.

[10:10] <donri> haah

[10:10] <donri> he managed to make it sound sexist

[10:10] <jnthn> sorear: Works.

[10:10] *** amkrankruleuen joined
[10:11] <jnthn> sorear: Has to, since Parrot itself uses nqp-rx in its build :)

[10:11] <dalek> roast: 7ad8b9d | sorear++ | S0 (2 files):

[10:11] <dalek> roast: [S03-metaops/hyper] remove a lot of niecza fudges; rearrange the >>+++<< test so niecza will accept it

[10:11] <dalek> roast: review: https://github.com/perl6/roast/commit/7ad8b9d16e

[10:12] *** Sarten-X joined
[10:12] <pmichaud> jnthn: ...unless we overwrite any of the .pbc's that nqp-rx expects.

[10:12] *** wamba left
[10:13] <pmichaud> then nqp-rx would stop functioning.

[10:14] <jnthn> pmichaud: Yes, I mean that we very carefully don't do that. :)

[10:14] <pmichaud> okay.

[10:14] <pmichaud> (global merge)  I guess I never understood that any sort of a unification/merge needed to take place.  still don't.

[10:14] <jnthn> moritz++ and I hunted down those name conflicts earlier and made sure they were avoided.

[10:15] *** lumi left
[10:16] <dalek> nqp: f5c61a4 | moritz++ | src/stage0/ (6 files):

[10:16] <dalek> nqp: rebootstrap with io_ops loaded

[10:16] <dalek> nqp: review: https://github.com/perl6/nqp/commit/f5c61a42f2

[10:16] <dalek> nqp: b94c439 | moritz++ | src/ModuleLoader.pm:

[10:16] <dalek> nqp: search in blib/ for modules unless a module path was specified

[10:16] *** Sarten-X left
[10:16] <dalek> nqp: review: https://github.com/perl6/nqp/commit/b94c439b78

[10:16] *** lumi joined
[10:17] <dalek> rakudo/nom: cf09768 | moritz++ | / (4 files):

[10:17] <dalek> rakudo/nom: [build] move Perl6/ to blib/Perl6

[10:17] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cf09768ef0

[10:17] <moritz> do I need to bump NQP_REVISION or so? :-)

[10:17] <pmichaud> yes, likely.

[10:17] <jnthn> Does nom's build pay attention to NQP_REVISION yet?

[10:17] <pmichaud> no

[10:17] <jnthn> OK

[10:18] <pmichaud> at least, I haven't done that part yet.

[10:18] * moritz doesn't even see such a file

[10:18] <pmichaud> started on it and decided some small refactors were in order first.

[10:18] <pmichaud> nom doesn't currently have a NQP_REVISION yet.

[10:20] <pmichaud> I've forgotten... what does "knowhow" mean again?

[10:21] <jnthn> pmichaud: It's a really, really simple type of object.

[10:21] <jnthn> pmichaud: Just has methods and attributes

[10:21] <jnthn> pmichaud: It's the only meta-object that 6model "natively" provides.

[10:22] <jnthn> It's also self-describing.

[10:22] <jnthn> e.g. KnowHOW.HOW.HOW.HOW.HOW.... :)

[10:22] <pmichaud> so, basically, the most primitive object system

[10:22] <jnthn> Yes

[10:22] <pmichaud> on which the other object systems get built

[10:22] <jnthn> Yes.

[10:22] <jnthn> NQP builds its one directly on top of it.

[10:23] <jnthn> Rakudo builds its on top of NQP, so we can factor the Perl 6 metamodel in terms of roles.

[10:23] <pmichaud> so, with   "knowhow ModuleLoader {" .... what do we get, exactly?

[10:23] <pmichaud> a type object?

[10:23] <jnthn> Yes.

[10:23] <pmichaud> no instances, BUILD, etc.?

[10:23] <jnthn> No

[10:23] <jnthn> If you want an instance you can get one.

[10:23] *** Sarten-X joined
[10:24] <jnthn> Using the repr_instance_of op

[10:24] <jnthn> But it's really a blank slate

[10:24] <jnthn> NQPClassHOW uses knowhow, and builds an implementatin of classes.

[10:24] <dalek> niecza: 864810b | sorear++ | lib/CORE.setting:

[10:24] <dalek> niecza: <cmp> nicer about different Numeric types

[10:24] <dalek> niecza: review: https://github.com/sorear/niecza/commit/864810b2fd

[10:25] <jnthn> For the ModuleLoader case we never actually make an instance though

[10:25] <jnthn> It's a singleton, essentially.

[10:25] <jnthn> For NQPClassHOW we do make instances.

[10:27] * jnthn cleans us REPR handling a bit to resolve an issue that's long bothered him

[10:28] <pmichaud> the 6model stuff is.... shiny.

[10:28] *** Sarten-X left
[10:29] <pmichaud> I mean, really *sweet*

[10:30] <jnthn> .oO( phew! )

[10:30] <jnthn> :)

[10:31] *** amkrankruleuen left
[10:31] * jnthn is pretty happy with it so far

[10:31] <jnthn> Well, apart from the rough edges that I'm not so happy with... :)

[10:32] *** amkrankruleuen joined
[10:33] *** silug left
[10:33] *** silug joined
[10:34] *** envi_laptop joined
[10:35] <pmichaud> I think I really want to have a   src/NQP/NQP.pm  that   declares   module NQP { ... }   and has _something_ about it that registers that nqp.pbc is already loaded.

[10:38] <pmichaud> _or_

[10:38] <pmichaud> I think that %modules_loaded should strip any extensions

[10:38] *** lumi left
[10:39] <pmichaud> (any extensions that are the common "this is a module" extensions)

[10:39] *** lumi joined
[10:39] *** Sarten-X joined
[10:41] <jnthn> Either of those would probably be cleaner.

[10:41] <pmichaud> also, I'm thinking ModuleLoader might want the equivalent of an @*INC attribute

[10:41] <moritz> +1

[10:42] <pmichaud> since moritz++ put in the blib/ patch, none of these are urgent-this-day types of things

[10:42] <pmichaud> well, maybe stripping the extension, so that we don't get the mainline bit

[10:47] <pmichaud> 5:45am here.  probably not worth trying to sleep.

[10:47] *** hanekomu joined
[10:49] <jnthn> Ugh.

[10:50] <pmichaud> I'll at least go rest for a bit... bbl

[10:50] <pmichaud> thanks for the excellent answers to my nom/6model questions :

[10:50] <pmichaud> :)

[10:52] <jnthn> Sorry some of them were a bit precaffienated :)

[10:56] *** MayDaniel left
[10:57] <jnthn> pmichaud: oh noes...there is some nqp makefile breakage still, it seems

[10:57] <jnthn> instead of \

[10:58] *** mtk left
[11:01] *** Sarten-X left
[11:02] *** phenny left
[11:04] *** JimmyZ joined
[11:05] *** phenny joined
[11:06] *** phenny left
[11:06] *** lumi left
[11:06] *** mtk joined
[11:07] *** lumi joined
[11:09] *** Sarten-X joined
[11:09] *** amkrankruleuen left
[11:10] *** amkrankruleuen joined
[11:11] *** phenny joined
[11:17] *** amkrankruleuen left
[11:17] *** masak joined
[11:18] <masak> lol! I just submitted my first Actbug! :)

[11:18] *** yinyin left
[11:18] *** amkrankruleuen joined
[11:19] <jnthn> masak: Do you have to break *everything*?! :P

[11:19] <masak> that's a trick question, right? :)

[11:19] <masak> of course I do. :)

[11:19] <jnthn> :)

[11:20] <Grrrr> The Act of Bug

[11:22] <masak> it should be possible to formulate a theory of development in terms of these artifacts: feature requests, unit tests, bug reports, and... a fourth, unnamed artifact having to do with debugging.

[11:25] <moritz> if you're after theory, you don't need to distinguis bug reports and feature requests

[11:26] *** Sarten-X left
[11:27] *** mikehh left
[11:30] *** amkrankruleuen left
[11:31] *** amkrankruleuen joined
[11:31] *** JimmyZ left
[11:32] <masak> moritz: troo, in a sense.

[11:32] *** JimmyZ_ joined
[11:32] *** JimmyZ_ is now known as JimmyZ

[11:32] <masak> "Go is not the best game. It is the only game." -- this reminded me of Perl 6 :)

[11:32] <masak> gtg, bit of $workday left.

[11:32] *** masak left
[11:34] *** Sarten-X joined
[11:36] *** JimmyZ_ joined
[11:37] *** amkrankruleuen left
[11:37] *** JimmyZ left
[11:37] *** JimmyZ_ is now known as JimmyZ

[11:38] *** amkrankruleuen joined
[11:42] <dalek> nqp: d12b30c | jonathan++ | Configure.pl:

[11:42] <dalek> nqp: Make sure we get path seps right on Win32.

[11:42] <dalek> nqp: review: https://github.com/perl6/nqp/commit/d12b30cb20

[11:42] <dalek> nqp: 044691c | jonathan++ | src/ (6 files):

[11:42] <dalek> nqp: REPR refactor. Avoid the memory-wasting concept of REPR instances as used by P6opaque and instead just give them a place in the STable to hang any data they're interested in keeping around. This in turn guts the REPR PMC and pretty much eliminates the need for it.

[11:42] <dalek> nqp: review: https://github.com/perl6/nqp/commit/044691ce7a

[11:42] <dalek> nqp: 4adf446 | jonathan++ | src/ (11 files):

[11:42] <dalek> nqp: Simplify the REPR API, thanks to not having REPR instances any more. Means we pass an argument less for loads of really common operations.

[11:42] <dalek> nqp: review: https://github.com/perl6/nqp/commit/4adf44692b

[11:42] *** satyavvd left
[11:43] *** proller joined
[11:43] *** proller_ joined
[11:46] <dalek> rakudo/nom: cdc2295 | jnthn++ | / (2 files):

[11:46] <dalek> rakudo/nom: Not going to need/use perl6str PMC any more.

[11:46] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/cdc2295ed3

[11:46] <dalek> rakudo/nom: a11fd9f | jnthn++ | src/binder/sixmodelobject.h:

[11:46] <dalek> rakudo/nom: Chase 6model API changes.

[11:46] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/a11fd9ff2b

[11:50] *** ggoebel joined
[11:55] *** lumi left
[11:55] *** kid51 joined
[11:56] *** lumi joined
[12:09] *** _jaldhar left
[12:13] <tadzik> we're now using native strings instead of String pmc?

[12:14] <pmichaud> don't know, yet.

[12:14] *** wknight8111 joined
[12:14] <pmichaud> should be native when we're done, yes.

[12:15] <pmichaud> but Perl6Str is something we haven't really used in a long time

[12:15] <pmichaud> jnthn: ah yes, I forgot to put back in the MSWin32 stuff.  thanks for adding it   jnthn++

[12:16] *** pernatiy joined
[12:16] <jnthn> pmichaud: np. It was amusing to see how the failure manifested itself.

[12:17] <jnthn> pmichaud: It turns out any command starting C:/ is totally ignored....

[12:17] <tadzik> so our native string is reimplementing what perl6str.pmc is doing, like string resizing or stuff like this?

[12:17] <jnthn> So it didn't even fail to build. It just...built nothing.

[12:17] <pmichaud> tadzik: no, we weren't even using perl6str.pmc

[12:17] *** proller_ left
[12:17] *** proller left
[12:17] <tadzik> oh, I see

[12:17] <pmichaud> most of our strings have been String PMCs

[12:20] <tadzik> yeah, I forgot about that one

[12:20] <jnthn> pmichaud: Did a refactor in 6model core this morning...mostly cleanup. Going to turn my attention to containers now.

[12:20] <tadzik> oh, btw. I raised the issue of non-relocatable Rakudo on #parrotsketch yesterday. Cotto advised me to open a trac ticket, could you do that pmichaud? You have more expertise in the field

[12:23] *** kid51 left
[12:23] *** bluescreen10 joined
[12:28] *** Holy_Cow joined
[12:30] *** Holy_Cow left
[12:36] *** hudnix joined
[12:44] <pmichaud> tadzik: actually, I don't have a windows machine so I can't really report the error well (more)

[12:45] <pmichaud> tadzik: my suggestion is to download + build the latest release of Parrot, do a "make install-dev", move the directory to a different location, and then report whatever error results when you try to run Parrot programs.

[12:46] <pmichaud> if you send me that information, I can make a ticket out of it.

[12:46] <pmichaud> or, you can make a ticket, and I'll follow-up with whatever additional information I have.

[12:46] *** sirelander joined
[12:46] *** sirelander left
[12:48] *** Sarten-X left
[12:49] *** lkundrak joined
[12:49] <lkundrak> hi

[12:50] *** lumi left
[12:51] *** lumi joined
[12:51] <JimmyZ> aloha

[12:57] *** Sarten-X joined
[13:01] *** Sarten-X left
[13:03] *** OldCamelsHump2 joined
[13:04] *** icwiener joined
[13:04] <lkundrak> is this a good channel to ask a parrot question? what's the purpose of .declarations files?

[13:05] <JimmyZ> lkundrak: irc://irc.parrot.org/#parrot

[13:16] *** sbp left
[13:16] *** Sarten-X joined
[13:17] *** sbp joined
[13:20] <lkundrak> JimmyZ: thanks

[13:27] *** Trashlord left
[13:35] *** runeni joined
[13:37] *** isBEKaml joined
[13:44] *** ggoebel left
[13:46] *** JimmyZ left
[13:49] *** ggoebel joined
[13:50] *** daniel-s joined
[13:53] *** ggoebel left
[13:54] *** lumi left
[13:54] *** lumi joined
[13:54] *** nymacro left
[13:55] *** nymacro joined
[13:59] *** ggoebel joined
[14:05] *** TiMBuS left
[14:06] *** sivoais left
[14:07] *** TiMBuS joined
[14:08] *** sivoais joined
[14:08] *** Shozan left
[14:12] *** dukeleto left
[14:13] *** dukeleto joined
[14:13] *** OldCamelsHump2 left
[14:16] *** Sarten-X left
[14:19] *** hercynium joined
[14:24] *** nsh_ joined
[14:24] *** [sbp] joined
[14:24] *** Sarten-X joined
[14:24] *** TiMBuS left
[14:26] *** tadam joined
[14:26] *** TiMBuS joined
[14:27] *** tadam left
[14:29] *** tadam joined
[14:29] *** tadam left
[14:30] *** sbp is now known as sbp`

[14:30] *** [sbp] is now known as sbp

[14:32] *** phenny left
[14:33] <dalek> roast: ef1d26d | sorear++ | S (7 files):

[14:33] <dalek> roast: Miscellaneous niecza unfudges

[14:33] <dalek> roast: review: https://github.com/perl6/roast/commit/ef1d26dc63

[14:33] *** phenny joined
[14:33] *** lkundrak left
[14:37] *** Sarten-X left
[14:38] *** lumi left
[14:39] *** koban` left
[14:39] *** lumi joined
[14:41] *** ymasory left
[14:41] *** wtw left
[14:45] *** sivoais left
[14:46] *** sivoais joined
[14:48] *** alester joined
[14:56] *** Sarten-X joined
[15:00] *** silug left
[15:01] *** silug joined
[15:01] *** tzhs left
[15:01] *** phenny left
[15:01] *** phenny joined
[15:02] *** runeni left
[15:03] *** kaare__ joined
[15:07] *** daniel-s left
[15:09] *** dukeleto left
[15:10] *** Sarten-X left
[15:10] *** dukeleto joined
[15:10] *** dukeleto left
[15:11] *** dukeleto joined
[15:11] *** dukeleto left
[15:12] *** dukeleto joined
[15:12] *** dukeleto left
[15:12] *** silug left
[15:13] *** dukeleto joined
[15:13] *** dukeleto left
[15:14] *** dukeleto joined
[15:14] *** dukeleto left
[15:14] *** dukeleto joined
[15:14] *** dukeleto left
[15:15] *** dukeleto joined
[15:17] *** Sarten-X joined
[15:17] *** kaare__ left
[15:18] *** lumi left
[15:18] *** JimmyZ joined
[15:19] *** lumi joined
[15:19] *** kaare_ joined
[15:21] *** bluescreen10 left
[15:24] *** spq joined
[15:24] *** Sarten-X left
[15:26] *** Sarten-X joined
[15:29] *** hanekomu left
[15:34] *** kaare_ left
[15:34] *** kaare__ joined
[15:36] *** bluescreen10 joined
[15:41] *** kaare__ left
[15:42] *** daxim left
[15:44] *** kaare__ joined
[15:46] *** nsh left
[15:46] *** sbp` left
[15:46] <colomon> rakudo: say 10.im

[15:46] <p6eval> rakudo 048573: OUTPUT«Method 'im' not found for invocant of class 'Int'␤  in main program body at line 22:/tmp/esBAPWVR2t␤»

[15:52] *** Sarten-X left
[15:53] *** nymacro left
[15:55] <isBEKaml> rakudo: +"10".say

[15:55] <p6eval> rakudo 048573: OUTPUT«10␤»

[15:56] *** kaare__ left
[15:56] <TimToady> um...

[15:56] <TimToady> rakudo: +"phooey".say

[15:56] <p6eval> rakudo 048573: OUTPUT«phooey␤»

[15:56] *** MayDaniel joined
[15:56] <isBEKaml> that's odd. I was thinking + should numify checking the types. 

[15:56] <TimToady> precedence

[15:57] <isBEKaml> but the Sts() was hilarious :)

[15:57] <TimToady> you're numifying the result of .say

[15:57] <isBEKaml> rakudo: say +"foo"

[15:57] <p6eval> rakudo 048573: OUTPUT«0␤»

[15:57] <isBEKaml> expected? or should throw an error?

[15:58] <TimToady> I believe it's currently specced to issue a warning

[15:59] <TimToady> buubot_backup: use warnings; +"foo"

[15:59] <buubot_backup> TimToady: Couldn't match input.

[15:59] <TimToady> buubot_backup: eval: use warnings; +"foo"

[15:59] <buubot_backup> TimToady: foo

[15:59] <TimToady> duh

[15:59] <TimToady> buubot_backup: eval: use warnings; 0+"foo"

[15:59] <buubot_backup> TimToady: Argument "foo" isn't numeric in addition (+) at (eval 28) line 1. 0

[16:00] <isBEKaml> yes, choice now lies between warning or an error. 

[16:00] <TimToady> well, there's two kind of error too

[16:00] *** Sarten-X joined
[16:01] <isBEKaml> I'd much rather the compiler throw back an error on something the programmer must have unwittingly done than believe he "does" the right thing. (Note, not DWIM)

[16:01] <TimToady> *kinds

[16:01] <TimToady> I'd much prefer that Perl 6 never throw where it could merely fail

[16:01] *** lumi left
[16:02] *** lumi joined
[16:03] <isBEKaml> hmm, one thing I could think of is (web scenario) -- we are passing currencies/numeric data over http, basically strings and I'm trying to parse them taking the numerics, what if, at one position, it suddenly turns out that it is not actually a number? 

[16:04] *** ymasory joined
[16:06] <isBEKaml> TimToady: should just fail or throw back an error?

[16:06] <TimToady> depends on whether you're steering a rocket or estimating the national debt

[16:07] <TimToady> but if you throw, you prevent the caller from just saying $result // 0

[16:08] <TimToady> a failure gives that option, and will still throw if you later misuse the value

[16:09] <TimToady> and the message should still indicate where the original failure occurred

[16:09] <TimToady> "lazy throw" as it were

[16:09] <isBEKaml> do we currently have a way of locating pos in error stack traces? 

[16:09] <TimToady> don't understand "locating pos"

[16:09] *** thou joined
[16:10] <isBEKaml> line numbers, details from code as to where exactly it failed than the error message programmed in. 

[16:10] <isBEKaml> IOW, more than $!

[16:11] <TimToady> supposed to, but I think the API is part of what moritz++ is cleaning up

[16:12] <TimToady> though in my mind the "position" of an error is more like an offset by characters, not a line number, or even a range of characters

[16:12] <isBEKaml> I see that "fail and throw if more failure" is better than "just throw". It allows for propagation of error messages along the call trace.

[16:12] <TimToady> well, that can be done by rethrowing too, but it's more cumbersome

[16:13] *** Sarten-X left
[16:13] <isBEKaml> I believe, by position, the offset/line number is provided by the host platform/VM that perl6 runs on. In the case of rakudo, parrot. 

[16:14] <moritz> isBEKaml: the idea is that you can access $!.backtrace.line and .file

[16:15] <isBEKaml> moritz++  I dimly recall he was working on Exception API

[16:15] <isBEKaml> moritz: ah, is that already in?

[16:15] <moritz> isBEKaml: in the spec, yes

[16:15] <isBEKaml> :-)

[16:17] * TimToady would like to point out once again that lines numbers should be derived from file positions

[16:18] <TimToady> because how you count lines will depend on your Unicode culture

[16:18] <moritz> TimToady: it may be derived from file positions

[16:18] <moritz> TimToady: but so far most tools support line numbers better than character or byte offsets into files

[16:19] *** mj41 left
[16:19] <TimToady> sure, I just don't want to lose information any sooner than we need to

[16:19] <isBEKaml> TimToady: different editors have funky support for line numbers -- each sees them differently depending on the encoding. 

[16:20] *** Sarten-X joined
[16:20] <TimToady> sure, S02:60 already mentions this

[16:22] <TimToady> but for some reason, it's really hard to root out the old-fashioned thinking in this particular area

[16:24] <isBEKaml> yeah, sorry. I never had to deal with unicode until now. Now that I'm seeing all these, I now feel like using my native language more. :)

[16:25] <TimToady> Unicode is trying to do something impossible, and largely succeeding, except where it's largely failing :)

[16:25] <TimToady> sounds like Perl 6 :)

[16:26] <isBEKaml> one of the things unicode is failing at is, uniformly treating indic languages. :) (that's where we are at)

[16:27] <dalek> nqp: 0cac59c | jonathan++ | src/ (3 files):

[16:27] <dalek> nqp: Give a struct a more generic name so we can re-use it in another case.

[16:27] <dalek> nqp: review: https://github.com/perl6/nqp/commit/0cac59c3ad

[16:27] <dalek> nqp: 1f9da88 | jonathan++ | src/6model/sixmodelobject.h:

[16:27] <dalek> nqp: Add container spec slot of the s-table. Also a little movement to get vaguely related s-table elements in chunks to try and get better cache line hits.

[16:27] <dalek> nqp: review: https://github.com/perl6/nqp/commit/1f9da88fc5

[16:27] <dalek> nqp: 5f29114 | jonathan++ | src/ops/nqp.ops:

[16:27] <dalek> nqp: Add is_container and nqp_decontainerize ops.

[16:27] <dalek> nqp: review: https://github.com/perl6/nqp/commit/5f291147df

[16:27] <moritz> http://drdobbs.com/tools/229700183 # I'm glad that we decided right from the start that Using Perl 6 shouldn't fall into either of those traps

[16:27] <dalek> nqp: 1d75ccd | jonathan++ | src/ops/nqp.ops:

[16:27] <dalek> nqp: set_container_spec op.

[16:27] <dalek> nqp: review: https://github.com/perl6/nqp/commit/1d75ccd71a

[16:27] <dalek> nqp: 88f386d | jonathan++ | src/ops/nqp.ops:

[16:27] <dalek> nqp: Oops, fix thinko.

[16:27] <dalek> nqp: review: https://github.com/perl6/nqp/commit/88f386db60

[16:28] *** cdarroch joined
[16:28] *** cdarroch left
[16:28] *** cdarroch joined
[16:30] *** birdwindupbird left
[16:31] <isBEKaml> This explains issues better: http://en.wikipedia.org/wiki/Unicode#Indic_scripts

[16:31] <jnthn> time for a little break &

[16:32] *** JimmyZ left
[16:33] *** Sarten-X left
[16:33] <dalek> rakudo/nom: 4a7ca65 | jnthn++ | src/binder/sixmodelobject.h:

[16:33] <dalek> rakudo/nom: Chase 6model API changes/extensions.

[16:33] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/4a7ca651c5

[16:34] *** Sarten-X joined
[16:35] <isBEKaml> moritz: ah, thanks for the link. I have the Odersky and K&R books with me. My google-fu must have failed in searching for Jolt award book reviews. :)

[16:38] *** lumi left
[16:39] *** cooper joined
[16:39] *** lumi joined
[16:42] *** masak joined
[16:42] <masak> Guten Abend, Zebras.

[16:43] <isBEKaml> masak: \o

[16:43] <isBEKaml> masak: a new language a day? :)

[16:45] <masak> heh :)

[16:45] <masak> sounds like a nice general principle ;)

[16:45] <isBEKaml> yeah, but hey, we can all learn! :)

[16:46] <colomon> o/

[16:49] *** mj41 joined
[16:49] *** jedai joined
[16:52] *** jedai_ left
[16:55] *** Tedd1 left
[16:55] <pmichaud> good mor...afternoon, #perl6

[16:55] <masak> good pm, pm.

[16:56] <masak> today I learned that two of the original seven Bridges of Königsberg have been removed, actually making it possible to make a Eulerian path across the remaining bridges. if I'm ever in Kaliningrad, I must remember to do that. :)

[16:57] *** Tedd1 joined
[16:58] <isBEKaml> masak: you actually used two nouns that are old and new forms of the same thing. :)

[16:58] <isBEKaml> masak: I was thinking, "what is Kalinin..." and had to look it up. :)

[16:59] <masak> isBEKaml: oh, sorry. I thought that was common knowledge... :P

[16:59] <masak> maybe it's just me and my fascination with exclaves in general.

[17:00] <pmichaud> Maybe it's just you in general.  :-)

[17:00] <masak> :P

[17:00] <isBEKaml> that's what masak++ said. ;)

[17:02] <isBEKaml> why is it so difficult to find a way to input characters in my native language? 

[17:02] <masak> what's your native language?

[17:02] <isBEKaml> even unicode.org lists it as one of the major issues apart from other indic languages. :(

[17:02] <isBEKaml> tamil

[17:03] <isBEKaml> I could just use online tools for it. e.g., quillpad.in

[17:03] <masak> isBEKaml: I'm using Emacs for all my input method needs. Emacs LEIM lists tamil-inscript and tamil-itrans.

[17:03] *** dakkar left
[17:03] <isBEKaml> masak: but I wanted a way of using them like SCIM. 

[17:04] <isBEKaml> masak: I have never used emacs (huge packages scare me)

[17:05] <masak> isBEKaml: the image on the Wikipedia article for SCIM lists Tamil.

[17:05] <masak> Emacs isn't that big by current standards.

[17:05] *** pernatiy left
[17:06] *** dukeleto left
[17:07] *** dukeleto joined
[17:08] <isBEKaml> masak: I can see only chinese and japanese here. Maybe, what I have here is a default install. Will have to check more (Oddly enough, I did use SCIM before ~~ long enough for me to not even remember it)

[17:10] <masak> I've never used SCIM, so I can't help, I'm afraid.

[17:10] <masak> Google Translate doesn't do Tamil, it seems.

[17:11] *** silug joined
[17:12] <isBEKaml> http://quillpad.in/tamil

[17:13] <isBEKaml> this is what I use, as an inplace editor. 

[17:13] *** orphu left
[17:14] <masak> wow, Tamil is so pretty. :>

[17:14] <isBEKaml> but darn difficult to encode/type in. :( (3 bytes for each character, actually)

[17:16] <isBEKaml> I'm learning to use it electronically(for eg., I could contribute to more WP articles) regardless of the difficulty. :)

[17:20] <isBEKaml> masak: learned that two of the original seven Bridges of Königsberg have been removed, actually making  it possible to make a Eulerian path across

[17:21] <isBEKaml> geez...

[17:21] <masak> what? :)

[17:21] <isBEKaml> masak: http://i.imgur.com/xddqS.png 

[17:21] <isBEKaml> masak: that says "Thank you, masak!"

[17:21] <isBEKaml> :)

[17:21] <masak> thanks for what? :)

[17:22] <isBEKaml> simply

[17:23] <isBEKaml> *shrugs*

[17:23] <masak> heh

[17:24] *** kfo joined
[17:24] <isBEKaml> masak: I see bemusement. ;)

[17:25] * isBEKaml finds SCIM documentation wanting and lacking details

[17:26] *** lumi left
[17:27] *** lumi joined
[17:27] *** kfo_ left
[17:28] *** Sarten-X left
[17:29] *** Sarten-X joined
[17:35] *** lumi left
[17:36] *** _twitch joined
[17:42] *** Sarten-X left
[17:46] *** fhelmberger left
[17:49] *** dukeleto left
[17:49] *** Chillance joined
[17:49] *** dukeleto joined
[17:49] *** dukeleto left
[17:51] *** Sarten-X joined
[17:51] *** dukeleto joined
[17:51] *** dukeleto left
[17:52] *** dukeleto joined
[17:52] *** dukeleto left
[17:54] *** dukeleto joined
[17:56] *** colomon left
[17:56] *** Sarten-X left
[18:03] *** Sarten-X joined
[18:25] *** colomon joined
[18:28] *** impious joined
[18:30] *** bluescreen10 left
[18:30] <masak> rakudo: sub is-balanced($_ is copy) { s/'[]'// while /'[]'/; !.chars }; for "[[][]]", "[[]]]", "", "][" { say .&is-balanced }

[18:30] <p6eval> rakudo 048573: OUTPUT«Bool::True␤Bool::False␤Bool::True␤Bool::False␤»

[18:30] <masak> \o/

[18:35] <cotto_work> Even with --gen-parrot --gen-nqp, I can't get the nom branch of Rakudo to build.

[18:35] <colomon> cotto_work: what error do you get?

[18:36] <cotto_work> colomon: http://nopaste.snit.ch/49221

[18:38] <colomon> cotto_work: ah.  Not one I've run into, alas.

[18:43] <masak> me either.

[18:43] *** mj41 left
[18:43] <jnthn> looking

[18:44] <jnthn> cotto_work: Do you have a leftover Perl6 directory in your build tree? Try nuking that...

[18:44] *** mtk left
[18:45] *** mtk joined
[18:48] <cotto_work> jnthn: that seems to be working

[18:48] <jnthn> :)

[18:48] <cotto_work> thanks

[18:50] *** Tedd1 left
[18:51] *** envi_laptop left
[18:52] *** dukeleto left
[18:52] *** dukeleto joined
[18:55] * moritz now gets a segfault building nom

[18:55] * moritz cleans out and tries again

[18:56] *** ggoebel left
[18:57] *** Lorn is now known as Lorn_

[18:57] <jnthn> moritz: Need new nqp also

[18:57] *** Lorn_ is now known as Lorn

[18:58] *** Sarten-X left
[19:02] *** mkramer joined
[19:02] *** _twitch left
[19:05] *** Sarten-X joined
[19:05] <moritz> jnthn: still segfaults (with --gen-parrot --gen-nqp)

[19:06] <moritz> jnthn: https://gist.github.com/1003037

[19:07] *** dukeleto left
[19:08] *** dukeleto joined
[19:08] *** dukeleto left
[19:08] <szabgab> apparently the rakudo installation is missing a file called  libgcc_s_sjlj-1.dll

[19:08] <szabgab> this can be found in c:\strawberry  but not in the rakudo build directory

[19:08] *** dukeleto joined
[19:08] *** dukeleto left
[19:09] *** dukeleto joined
[19:09] *** dukeleto left
[19:09] *** isBEKaml left
[19:09] *** dukeleto joined
[19:09] *** dukeleto left
[19:10] *** dukeleto joined
[19:10] *** dukeleto left
[19:11] <jnthn> moritz: ouch. That's...a weird one. :(

[19:11] *** dukeleto joined
[19:11] *** dukeleto left
[19:11] *** ymasory left
[19:12] *** dukeleto joined
[19:12] *** dukeleto left
[19:12] *** dukeleto joined
[19:12] *** dukeleto left
[19:13] *** dukeleto joined
[19:13] *** dukeleto left
[19:13] *** dukeleto joined
[19:13] *** dukeleto left
[19:14] *** dukeleto joined
[19:14] *** dukeleto left
[19:15] *** molaf joined
[19:15] *** molaf left
[19:16] *** dukeleto joined
[19:16] *** dukeleto left
[19:17] *** dukeleto joined
[19:17] *** dukeleto left
[19:17] *** impious left
[19:18] *** dukeleto joined
[19:18] *** dukeleto left
[19:19] *** dukeleto joined
[19:19] *** dukeleto left
[19:19] *** dukeleto joined
[19:19] *** dukeleto left
[19:20] *** dukeleto joined
[19:20] *** dukeleto left
[19:20] *** dukeleto joined
[19:21] *** dukeleto left
[19:22] *** dukeleto joined
[19:22] *** dukeleto left
[19:22] *** dukeleto joined
[19:22] *** dukeleto left
[19:23] *** dukeleto joined
[19:23] *** dukeleto left
[19:23] *** mj41 joined
[19:23] *** dukeleto joined
[19:23] *** tadam joined
[19:23] *** hercynium left
[19:25] *** slavik1 left
[19:28] <moritz> not the usual gc-burns-our-objects segfault

[19:28] <szabgab> moritz: I am uploading a new .exe file 

[19:29] <szabgab> could you please add it to the download directory (and  remove the other file)

[19:29] <moritz> szabgab: please give it a new name (not just replace the old one9

[19:29] <szabgab> sure 

[19:29] <szabgab> it will have a different name

[19:29] <moritz> szabgab: don't you have commit access already?

[19:29] *** frettled left
[19:29] <szabgab> let me see

[19:32] *** orphu joined
[19:32] <szabgab> I don't think I have commit bit

[19:33] <szabgab> on guthub I can only see http and read-only access

[19:33] <moritz> ok, I'll upload it for you

[19:34] *** Sarten-X left
[19:34] <szabgab> this is the file http://perlide.org/download/rakudo-star-2011.04.v2.exe

[19:35] <szabgab> and if I can get commit bit then later I'll do it myself and can also add the config file and the howto file

[19:36] <szabgab> anyway, now sleep &

[19:36] *** Sarten-X joined
[19:36] *** frettled joined
[19:38] *** dukeleto left
[19:39] <jnthn> moritz: No, and I can't reproduce it here :(

[19:39] *** dukeleto joined
[19:39] *** dukeleto left
[19:39] <jnthn> moritz: You certainly got a clean build of latest nqp and nom?

[19:39] <jnthn> And no Perl6 directory left over?

[19:39] *** dukeleto joined
[19:39] *** dukeleto left
[19:40] *** dukeleto joined
[19:40] *** dukeleto left
[19:41] <moritz> no Perl6 dir left over

[19:42] *** dukeleto joined
[19:42] *** dukeleto left
[19:42] *** dukeleto joined
[19:42] *** dukeleto left
[19:42] *** Schwern joined
[19:43] *** dukeleto joined
[19:43] *** dukeleto left
[19:43] * moritz does a really real clean

[19:43] *** Schwern left
[19:43] * jnthn crosses his fingers

[19:44] *** Sarten-X left
[19:44] *** dukeleto joined
[19:44] *** dukeleto left
[19:45] *** dukeleto joined
[19:45] *** dukeleto left
[19:45] *** mkramer left
[19:46] *** dukeleto joined
[19:46] *** dukeleto left
[19:49] *** dukeleto joined
[19:49] *** dukeleto left
[19:50] *** dukeleto joined
[19:50] *** dukeleto left
[19:51] *** dukeleto joined
[19:51] *** dukeleto left
[19:51] *** Sarten-X joined
[19:51] *** dukeleto joined
[19:51] *** dukeleto left
[19:52] *** dukeleto joined
[19:52] *** dukeleto left
[19:54] *** dukeleto joined
[19:54] *** dukeleto left
[19:54] <sorear> good * #perl6

[19:54] <sorear> sleep is *not* being good to me today...

[19:55] <moritz> still segfaulting :(

[19:55] <jnthn> moritz: :(

[19:55] <jnthn> moritz: trying on another box.

[19:55] *** dukeleto joined
[19:55] *** dukeleto left
[19:55] <moritz> I git-clean'ed rakudo, nqp and parrot and ran perl Configure.pl --gen-parrot --gen-nqp && make

[19:55] *** Sarten-X left
[19:57] *** dukeleto joined
[19:57] *** dukeleto left
[19:57] *** dukeleto joined
[19:57] *** dukeleto left
[19:57] *** Sarten-X joined
[19:58] *** dukeleto joined
[19:58] *** dukeleto left
[19:58] *** dukeleto joined
[19:58] *** dukeleto left
[19:59] *** dukeleto joined
[19:59] *** dukeleto left
[19:59] *** dukeleto joined
[19:59] *** dukeleto left
[20:00] *** dukeleto joined
[20:00] *** dukeleto left
[20:00] *** Eevee left
[20:00] *** dukeleto joined
[20:07] *** Eevee joined
[20:16] *** tadam left
[20:18] *** mkramer1 joined
[20:19] <dalek> niecza: f9e93e4 | (Solomon Foster)++ | / (3 files):

[20:19] <dalek> niecza: Add bif_abs, bif_complex_re, and bif_complex_im, typing them to prefix:<abs>, Complex.re, and Complex.im respectively. Error conditions for big_complex_re and bif_complex_im applied to non-complex objects are wrong, but I'm not sure if that can ever come into play in practice.

[20:19] <dalek> niecza: 

[20:19] <dalek> niecza: Also added abs_test.pl with quick tests of these methods.

[20:19] <dalek> niecza: review: https://github.com/sorear/niecza/commit/f9e93e48f7

[20:19] <dalek> niecza: 3f05979 | sorear++ | lib/Builtins.cs:

[20:19] <dalek> niecza: Simplify complex_re and complex_im, add [fat]?rat_[nu|de] for good measure.

[20:19] <dalek> niecza: review: https://github.com/sorear/niecza/commit/3f059797a3

[20:19] <dalek> niecza: 99f6bc3 | sorear++ | / (2 files):

[20:19] <dalek> niecza: Move abs tests into test2.pl where they belong.

[20:19] <dalek> niecza: review: https://github.com/sorear/niecza/commit/99f6bc3903

[20:24] *** wknight8111 left
[20:26] <sorear> masak: o/

[20:27] <masak> sorear: \o

[20:29] *** MayDaniel left
[20:32] *** kanishka joined
[20:32] <dalek> niecza: e2a35a1 | sorear++ | / (2 files):

[20:32] <dalek> niecza: FatRat.new, FatRat abs tests, bind numerator/denominator to Perl

[20:32] <dalek> niecza: review: https://github.com/sorear/niecza/commit/e2a35a1403

[20:34] *** mj41 left
[20:34] *** Sarten-X left
[20:36] *** Sarten-X joined
[20:37] *** hudnix left
[20:43] *** kanishka left
[20:52] *** [hercynium] joined
[20:53] *** [hercynium] left
[20:59] *** hanekomu joined
[21:02] *** MayDaniel joined
[21:02] <sorear> rakudo: (sub () { ... }).defined.say

[21:02] <p6eval> rakudo 048573: OUTPUT«Bool::True␤»

[21:02] <sorear> rakudobug? S32/Callable:50

[21:03] <sorear> moritz: what's the syntax for linking to S32xxx?

[21:06] *** bluescreen10 joined
[21:16] <masak> lol! I blogged! http://strangelyconsistent.org/blog/june-1-2011-input-and-output

[21:17] <jnthn> Great! I can learn to program! \o/

[21:17] <jnthn> ;)

[21:18] <masak> sorear: huh, wow. I don't think I've read that part of S32 before. :)

[21:18] <jnthn> masak++ # explains stuff simply

[21:18] <masak> I had assumed up until now that Routines were always defined.

[21:18] <jnthn> Me too

[21:19] <jnthn> I thought .yada was the way you asked if something was ...'d.

[21:19] <masak> ooh :)

[21:19] <tadzik> hello zebras

[21:19] <jnthn> I'd probably prefer it to be that way.

[21:19] <jnthn> o/ tadzik 

[21:19] <masak> tadzik: hello little panda :)

[21:19] <tadzik> what a ridiculous day

[21:20] <masak> jnthn: yeah, me too.

[21:20] <masak> tadzik: ISP trouble?

[21:20] <jnthn> tadzik: Another beer ticket?

[21:20] <tadzik> yes, no

[21:21] <tadzik> net was down for a day or something, and I've been learning Information Theory the whole day

[21:21] <masak> how appropriate.

[21:21] <jnthn> hun, your ISP didn't work, and you didn't use the day to drink beer? :)

[21:21] <jnthn> *huh

[21:22] <masak> thought "hun" does express the right kind of concern here :P

[21:22] <jnthn> :P

[21:22] <tadzik> it may be the most interesting subject I had so far, yet it's so badly lectured I didn't pay attention to it at all. It's about encoding data, related to telecommunication and teletransmission I think. Shannon, Hamming, Huffman, those sort of guys

[21:22] <jnthn> "the keys are right next to each other!"

[21:22] <masak> jnthn: you can hun, but you can't hide :)

[21:23] <tadzik> it's sad that the system spoiled the subject with ridiculous labolatories and LTA classes. I really enjoyed learning it today

[21:23] <jnthn> :P

[21:24] <tadzik> aw, whatever :)

[21:24] <tadzik> how is nom doing?

[21:24] <jnthn> tadzik: Mostly design progress today

[21:25] * tadzik pulls

[21:26] <tadzik> also, ISP was down so badly that when I called them, the connection didn't make it due to overload on the line :)

[21:28] *** bluescreen10 left
[21:28] <jnthn> tadzik: Clear up Perl6 directory and get latest nqp build also :)

[21:28] <jnthn> moritz is seeing a SEGV at the end of the build :(

[21:28] <masak> ooh: Shannon's maxim: "The enemy knows the system" -- I *like* that :)

[21:28] <jnthn> Didn't reproduce here yet.

[21:29] * masak decides to learn some more about Rakudo :)

[21:30] <sorear> hello masak

[21:31] * sorear checks the blogs

[21:31] <tadzik> Cannot fetch object from non-existant serialization context 1306782074.42145

[21:31] <tadzik> make realclean left it or something?

[21:31] <tadzik> oh, some leftover pbcs

[21:31] <jnthn> tadzik: that'll do it

[21:31] <jnthn> tadzik: I'll awesomize that error when I get around to it.

[21:32] <sorear> masak: IME edublogs *really* *really* *really* need a way for users to ask questions

[21:32] <tadzik> no worries

[21:32] <jnthn> it should be like "Yo dawg, you gave me an out of date copy of Foo.pm!"

[21:32] <sorear> masak: so I suggest at least adding a disqus link oslt

[21:33] <masak> disqus?

[21:33] <sorear> it's a web service that hosts comments for static-HTML blogs

[21:33] <masak> ooh

[21:35] <tadzik> ./perl6 -e 'say "Hello world!"'  0,25s user 0,03s system 99% cpu 0,281 total

[21:35] <tadzik> I know it's notmuch, but it looks nice :)

[21:35] <Tene> sorear: what sort of questions?

[21:35] <tadzik> compared to like 1.5 on master

[21:36] <sorear> masak: example: http://whiteknight.github.com/2011/02/08/gc_for_newbies_marksweep.html

[21:36] <jnthn> tadzik: Is that nom?

[21:36] <sorear> I haven't actually done any research beyond reading whiteknight's blog; it might be a pay service, in which case nevermind

[21:37] <jnthn> tadzik: As in, you got a working build of it?

[21:37] <sorear> Tene: things masak thinks are obvious and it never occurred to em to write, but the readership disagrees

[21:37] <sorear> Tene: was it you who pointed me to EY's qm edublogging?  that's what I'm thinking of

[21:37] <tadzik> jnthn: yes, yes

[21:38] <jnthn> tadzik: OK...I wonder what makes mortiz's environment special...

[21:38] <tadzik> segfault, yep?

[21:38] <jnthn> yeah.

[21:38] <Tene> sorear: I don't understand "edublogging" actually

[21:38] <tadzik> strange

[21:38] <Tene> I thoguht it was a typo for "debuglog" at first

[21:38] <masak> sorear: I think you're right, and I'll think of something to do about it. don't know what just yet.

[21:38] <sorear> Tene: portmanteau, education, blogging

[21:39] <sorear> Tene: http://strangelyconsistent.org/blog/a-month-of-blogging-about-programming-fundamentals

[21:41] <jnthn> tadzik: 32 or 64?

[21:41] <jnthn> oh, I think I reproduced.

[21:41] <masak> TMI

[21:42] <jnthn> http://xkcd.com/583/ :P

[21:42] <tadzik> jnthn: 64

[21:42] <masak> 'night, #perl6

[21:42] <jnthn> tadzik: ah, ok

[21:42] <jnthn> o/ masak

[21:42] *** masak left
[21:43] <jnthn> tadzik: I've got it on 32 so...hmm.

[21:43] <jnthn> But only on one of my machines.

[21:44] <tadzik> planet python impressed with Perl 6: http://twitter.com/#!/planetpython/status/75873718483689473 :)

[21:44] <tadzik> jnthn: I'm pretty far from my 32 machine

[21:44] <tadzik> unfortunately. It has a kickass monitor :)

[21:45] <jnthn> tadzik: no wories

[21:45] <jnthn> oh, hang on...the failure I have isn't a segfault

[21:46] *** Psyche^ joined
[21:50] *** Patterner left
[21:50] *** Psyche^ is now known as Patterner

[21:53] *** aindilis left
[21:54] *** aindilis joined
[21:55] *** Sarten-X left
[21:55] *** hanekomu left
[21:58] *** Mowah_ left
[22:01] *** Sarten-X joined
[22:03] *** alester left
[22:11] *** Mowah left
[22:16] *** huf left
[22:22] *** stepnem left
[22:23] *** Sarten-X left
[22:31] *** huf joined
[22:32] *** stepnem joined
[22:38] <dalek> niecza: 212ba4d | sorear++ | / (8 files):

[22:38] <dalek> niecza: Sub is now a hierarchy of speccish classes

[22:38] <dalek> niecza: review: https://github.com/sorear/niecza/commit/212ba4de29

[22:41] <colomon> niecza: say (1 / (2 ** 200)).WHAT

[22:41] <p6eval> niecza v6-25-ge2a35a1: OUTPUT«Num()␤»

[22:41] <colomon> niecza: say (1 / (2 ** 6)).WHAT

[22:41] <p6eval> niecza v6-25-ge2a35a1: OUTPUT«Rat()␤»

[22:41] <colomon> niecza++

[22:44] *** icwiener left
[22:49] *** donri left
[22:51] <sorear> hello colomon.

[22:51] <colomon> o/

[22:51] * sorear wonders whether to reinstate $?ORIG

[22:52] <sorear> it fell off - I think during the metamodle work around v2 - it wouldn't be hard to readd - but it would significantly hurt executable sizes

[22:53] *** orphu left
[22:53] <sorear> since it requires adding a copy of 200kb of source code, STD.dll would go from 1.5M to 1.7M

[22:53] <colomon> When I drove to the doctor's office this afternoon, I was pondering how to merge your system for handling numbers with the Numeric and Real roles.

[22:54] <colomon> would the additional size slow things down?

[22:54] <sorear> downloads, probably

[22:54] <sorear> well, yes, it would

[22:54] <sorear> but that's fixable

[22:55] <sorear> for silly mutability control reasons the CLR forces me to memcpy() the entire serialization blob into a fresh buffer before using it, which breaks demand paging

[22:56] <sorear> but I could have a private blob for this

[22:56] *** jfried left
[22:56] <sorear> -

[22:57] <sorear> so, Numeric and Real?

[22:57] <colomon> the roles, yeah.

[22:57] <sorear> I got as far as I did on numbers only by punting "I can think about extensibility later"

[22:57] <sorear> I'd be interested in hearing your thoughts on this

[22:59] <colomon> I think it comes down to figuring out how to allow the native types to instantiate the roles in a graceful fashion.

[22:59] <sorear> Native types?

[22:59] <colomon> I'm presuming that there are nice performance benefits to figuring out what math type we have in the C# code instead of in p6?

[22:59] <sorear> yes

[23:00] <colomon> native types, I mean like what you're doing with BigInteger there.

[23:00] <sorear> what I've already thought is that (for concreteness) Builtins.bif_plus is tantamount to a multi dispatcher

[23:01] <sorear> so it would make some sense to say

[23:01] <sorear> proto infix:<+>($a,$b) is specialized('bif_plus') { }

[23:01] <sorear> mutli infix:<+>(Int $a, Int $b) { $a + $b }

[23:01] <sorear> ...

[23:02] <sorear> now, if the user defines any new <+> multi, bif_plus is not used directly; instead the multi dispatcher picks the type case

[23:02] <sorear> this relies on the aritmetic operations being lexical though

[23:03] <colomon> interesting

[23:03] <sorear> it's only a half-baked idea

[23:04] <colomon> I was imagining something like a Native role which the bif_plus types did, and then...

[23:04] <sorear> (also, there is a LOT of room for optimization in the MMD system.  Starting with caching the sorted dispatch list.)

[23:04] <colomon> multi infix:<+>(Native $a, Native $b) { call bif_plus }

[23:04] <colomon> multi infix:<+>(Numeric $a, Numeric $b) { slower generic method }

[23:05] <colomon> but that's a half-baked idea too.  :)

[23:05] <sorear> colomon: that seems even better, but I'm not sure how it would interact with the spec.  It seems like the nature of multi dispatch and tie-checking makes candidate lists part of the API.

[23:05] <sorear> colomon: what would you put in the Numeric,Numeric case?

[23:06] <colomon> actually, probably nothing in Numeric, Numeric, now that I think about it.

[23:07] <colomon> Real, Real would be the classic example; in Rakudo, it's { $a.Bridge + $b.Bridge }

[23:07] <colomon> which is a workable solution for types we don't know about.

[23:08] <sorear> .Bridge coerces to the best "core" numeric type?

[23:08] <colomon> "It seems like the nature of multi dispatch and tie-checking makes candidate lists part of the API."  I'm not 100% sure what you mean by that, but it sounds suspiciously like something that might be worth getting the spec to relax if it gives  big win in performance?

[23:09] <colomon> .Bridge coerces to the "best" "core" type, yes.  Num in Rakudo.

[23:09] <colomon> I thought it might make sense to make it FatRat if that was available, but obviously that will be slower.

[23:10] <colomon> it's an interesting question whether "best" should be "most accurate" or "fastest".

[23:10] <colomon> and it might make sense to leave that to the compiler developer, too.

[23:11] <colomon> I've got to run for a bit, time to put the little guy to bed.  (His mom is quizzing him on Scottish folk song lyrics at the moment.)

[23:11] <dalek> rakudo/nom: 5a8d894 | jnthn++ | / (3 files):

[23:11] <dalek> rakudo/nom: Stub in ContainerDescriptor and Scalar.

[23:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/5a8d894612

[23:11] <dalek> rakudo/nom: ca2d5a2 | jnthn++ | / (3 files):

[23:11] <dalek> rakudo/nom: Start to sketch out some container primitives/fast-path for Scalar.

[23:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/ca2d5a2de7

[23:11] <dalek> rakudo/nom: af85c29 | jnthn++ | src/ (2 files):

[23:11] <dalek> rakudo/nom: Communicate the built-in Scalar type to things that need to know it.

[23:11] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/af85c295fd

[23:20] *** hudnix joined
[23:30] <sorear> pugs: say $?POSITION

[23:30] <p6eval> pugs: OUTPUT«/tmp/ptP2YDPn24 line 1, column 5 - line 2, column 1␤»

[23:36] *** ymasory joined
[23:43] *** MayDaniel left
[23:47] *** tty234 joined
[23:47] *** _jaldhar joined
[23:47] *** _jaldhar left
[23:49] *** cdarroch left
[23:52] *** _jaldhar joined
[23:52] *** _jaldhar left
[23:53] <jnthn> sleep &

[23:57] *** _jaldhar joined
[23:57] *** _jaldhar left
