[00:01] *** thou left
[00:02] *** gbacon joined
[00:03] *** awwaiid left
[00:08] <sorear> quietfanatic: perlesque cheats though :)  it has only 'int', not Int

[00:11] *** sftp left
[00:14] *** Helios left
[00:18] *** Helios joined
[00:22] *** awwaiid joined
[00:23] *** ascent_ left
[00:23] *** ascent_ joined
[00:28] *** ruz left
[00:28] *** clkao left
[00:47] *** gbacon left
[00:55] *** _jaldhar joined
[01:00] *** stephanepayrard_ joined
[01:01] *** cognominal_ left
[01:07] <dalek> niecza: a219796 | sorear++ | lib/ (2 files):

[01:07] <dalek> niecza: Make numeric operations overloading faster with a precalculated type classification

[01:07] <dalek> niecza: review: https://github.com/sorear/niecza/commit/a219796744

[01:07] <sorear> '$x = $x + 1 until $x == BIG' is now about 3x faster

[01:08] <sorear> which means that + and == (which were improved) are at LEAST 3x improved

[01:14] *** silug left
[01:43] *** obra joined
[01:48] *** jdv79 left
[01:53] *** dukeleto left
[01:53] *** dukeleto joined
[01:53] *** jdv79 joined
[01:54] *** whiteknight left
[02:02] *** gbacon joined
[02:04] *** _jaldhar left
[02:15] *** am0c joined
[02:18] *** clkao joined
[02:20] *** lumi_ left
[02:21] *** lumi_ joined
[02:23] *** benabik left
[02:24] *** benabik joined
[02:24] *** arnsholt_ left
[02:25] *** woosley joined
[02:25] *** arnsholt joined
[02:28] *** bluescreen10 joined
[02:31] *** bluescreen10 left
[02:37] *** GinoMan left
[02:44] *** GinoMan joined
[02:51] *** nymacro joined
[02:55] *** GinoMan is now known as GinoMan[A]

[03:02] *** zorgnax joined
[03:03] *** gbacon left
[03:06] *** molaf joined
[03:10] *** awwaiid left
[03:15] *** JimmyZ joined
[03:16] *** awwaiid joined
[03:19] *** mberends left
[03:30] *** _jaldhar joined
[03:32] *** agentzh joined
[03:42] <dalek> niecza: 0a829c2 | sorear++ | src/niecza:

[03:42] <dalek> niecza: Parse (and ignore for now) is rw on subs, methods, attributes

[03:42] <dalek> niecza: review: https://github.com/sorear/niecza/commit/0a829c24f9

[03:43] <zorgnax> How do I introspect the methods on a grammar?

[03:44] <zorgnax> grammar Foo {rule TOP {a}}

[03:44] <zorgnax> Foo.HOW.methods(Foo) doesnt work like Str.HOW.methods(Str)

[03:45] <sorear> rakudo: grammar Foo { rule TOP { a } }; Foo.^methods.say

[03:45] <p6eval> rakudo 369665: OUTPUT«Method 'methods' not found for invocant of class 'P6metaclass'␤  in main program body at line 22:/tmp/63WEsNOah1␤»

[03:46] <sorear> this will be fixed by rakudo nom I guess

[03:46] <sorear> since P6metaclass won't be used anymore for anything

[03:46] <zorgnax> rakudo: Str.^methods.say

[03:46] <p6eval> rakudo 369665:

[03:46] <p6eval> ..OUTPUT«ACCEPTSperlpredsuccWHICHBoolStrencodeindentNumericRealIntRatNumabsconjugateexploglog10sqrtrootsto-radiansfrom-radiansfloorceilingroundtruncatesigncisunpolarchrchrsrandsincostanseccoseccotansinhcoshtanhsechcosechcotanhasinacosatanatan2asecacosecacotanasinhacoshatanhasechacosechacota…

[03:46] <zorgnax> ok

[03:47] <zorgnax> is there a way to print a full declaration for those method names?

[03:47] <sorear> no

[03:47] <sorear> rakudo: grammar Foo { rule TOP { a } }; say Foo.^get_parrotclass

[03:47] <zorgnax> should there be?

[03:47] <p6eval> rakudo 369665: OUTPUT«Foo␤»

[03:47] <sorear> probably not?

[03:47] <sorear> what do you want to see?

[03:48] <sorear> rakudo: grammar Foo { rule TOP { a } }; say Foo.^get_parrotclass.methods

[03:48] <zorgnax> why not? you can get their names, why not the signature too?

[03:48] <p6eval> rakudo 369665: OUTPUT«Hash[0x2dc6840]␤»

[03:49] <sorear> rakudo: grammar Foo { rule TOP { a } }; say CREATE_HASH_FROM_LOW_LEVEL(Foo.^get_parrotclass.methods)

[03:49] <p6eval> rakudo 369665: OUTPUT«!PREFIX__TOP      !PREFIX__TOPTOP TOP␤»

[03:49] <sorear> rakudo: grammar Foo { rule TOP { a } }; say CREATE_HASH_FROM_LOW_LEVEL(Foo.^get_parrotclass.methods).keys.sort.join(', ')

[03:49] <p6eval> rakudo 369665: OUTPUT«!PREFIX__TOP, TOP␤»

[03:50] <sorear> signatures might be doable

[03:50] <zorgnax> it would be a nice feature of the language

[03:50] *** mberends joined
[03:50] <sorear> rakudo: sub foo($x,$y,$z) { }; say &foo.signature

[03:50] <p6eval> rakudo 369665: OUTPUT«Signature()<0x2996158>␤»

[03:50] <zorgnax> javascript can show the whole text of the method

[03:50] <sorear> rakudo: sub foo($x,$y,$z) { }; say &foo.signature.perl

[03:50] <p6eval> rakudo 369665: OUTPUT«:(Any $x, Any $y, Any $z)␤»

[03:51] <zorgnax> ah cool

[03:51] *** molaf left
[03:51] <sorear> rakudo: for Str.^methods -> $m { say $m.name; say $m.signature.perl }

[03:51] <p6eval> rakudo 369665: OUTPUT«ACCEPTS␤get_attr_str() not implemented in class 'Sub'␤  in <anon> at line 1␤  in main program body at line 1␤»

[03:51] <sorear> rakudo: for Str.^methods -> $m { next if $m !~~ Code; say $m.name; say $m.signature.perl }

[03:51] <p6eval> rakudo 369665: OUTPUT«ACCEPTS␤get_attr_str() not implemented in class 'Sub'␤  in <anon> at line 1␤  in main program body at line 1␤»

[03:52] <sorear> rakudo: for Str.^methods -> $m { next unless $m ~~ Method; say $m.name; say $m.signature.perl }

[03:52] <p6eval> rakudo 369665: OUTPUT«Str␤:(Mu ;; *%_)␤Numeric␤:(Mu ;; *%_)␤Real␤:(Mu ;; *%_)␤Int␤:(Mu ;; *%_)␤Rat␤:(Mu : Any ::Real $epsilon = { ... };; *%_)␤Num␤:(Mu ;; *%_)␤abs␤:(Mu $x;; *%_)␤conjugate␤:(Mu $x;; *%_)␤exp␤:(Mu $x: Any $base = { ... };; *%_)␤log␤:(Mu $x: Any $base = { ... };; *%_)␤log10␤:(Mu $x;;

[03:52] <p6eval> ..*%_)…

[03:59] *** kst` joined
[04:00] *** kst left
[04:01] *** JimmyZ left
[04:05] *** revdiablo left
[04:08] *** jesk left
[04:08] *** sirmacik left
[04:09] *** revdiablo joined
[04:09] *** revdiablo left
[04:09] *** revdiablo joined
[04:09] *** sirmacik joined
[04:09] *** sirmacik left
[04:09] *** sirmacik joined
[04:10] *** jesk joined
[04:10] *** jdv79_ joined
[04:14] *** benabik left
[04:14] *** jdv79 left
[04:14] *** noganex left
[04:14] *** jedai_ left
[04:14] *** [particle] left
[04:14] *** daxim_ left
[04:14] *** kcwu left
[04:14] *** ruoso left
[04:14] *** daemon left
[04:14] *** tewk left
[04:14] *** cschimm1_ left
[04:14] *** apejens left
[04:14] *** cotto_work left
[04:14] *** robinsmidsrod left
[04:20] *** silug joined
[04:28] *** kfo left
[04:38] *** birdwindupbird joined
[04:39] *** kfo joined
[04:40] *** geekosaur left
[04:40] *** kfo left
[04:40] *** silug left
[04:40] *** geekosaur joined
[04:44] <birdwindupbird> \q

[04:44] *** kfo joined
[04:44] *** birdwindupbird left
[04:44] *** obra left
[04:45] *** benabik joined
[04:45] *** noganex joined
[04:45] *** jedai_ joined
[04:45] *** [particle] joined
[04:45] *** daxim_ joined
[04:45] *** kcwu joined
[04:45] *** ruoso joined
[04:45] *** daemon joined
[04:45] *** tewk joined
[04:45] *** cschimm1_ joined
[04:45] *** apejens joined
[04:45] *** cotto_work joined
[04:45] *** robinsmidsrod joined
[04:45] *** kjeldahl left
[04:45] *** kjeldahl joined
[04:46] *** satyavvd joined
[04:47] *** GinoMan[A] left
[04:50] *** kuku joined
[04:50] *** kuku is now known as birdwindupbird

[05:22] *** wamba joined
[05:34] *** mtk left
[05:38] *** mberends left
[05:42] *** mtk joined
[05:43] *** Mowah joined
[05:45] <dalek> niecza: 98debd4 | sorear++ | src/ (7 files):

[05:45] <dalek> niecza: Mergeback, start of @!foo-ish stuff

[05:45] <dalek> niecza: review: https://github.com/sorear/niecza/commit/98debd44a0

[05:45] <dalek> niecza: 44f9c45 | sorear++ | test (2 files):

[05:45] <dalek> niecza: Merge tests

[05:45] <dalek> niecza: review: https://github.com/sorear/niecza/commit/44f9c453c2

[05:45] <dalek> niecza: dd9d259 | sorear++ | / (6 files):

[05:45] <dalek> niecza: Implement @.foo and %.foo attributes

[05:45] <dalek> niecza: review: https://github.com/sorear/niecza/commit/dd9d25945f

[05:46] *** wtw joined
[05:59] *** kjeldahl left
[06:01] *** starcoder left
[06:03] *** starcoder joined
[06:03] *** yinyin joined
[06:04] *** yinyin_ joined
[06:04] *** yinyin left
[06:05] * sorear out.

[06:05] <dalek> niecza: ca9fc3e | sorear++ | / (3 files):

[06:05] <dalek> niecza: Implement multi-variable for

[06:05] <dalek> niecza: review: https://github.com/sorear/niecza/commit/ca9fc3e526

[06:07] *** wamba left
[06:13] *** koban` joined
[06:23] *** starcoder left
[06:23] *** am0c left
[06:24] *** starcoder joined
[06:25] *** yinyin_ left
[06:25] *** kst` is now known as kst

[06:28] *** quietfanatic left
[06:30] *** fhelmberger joined
[06:33] *** araujo left
[06:34] *** yinyin_ joined
[06:38] *** am0c joined
[06:55] *** soapyj left
[07:00] *** silug joined
[07:03] *** yinyin_ left
[07:13] *** yinyin_ joined
[07:16] *** wamba joined
[07:25] *** aindilis left
[07:25] *** aindilis` joined
[07:27] *** noganex_ joined
[07:31] *** noganex left
[07:37] *** mj41 joined
[07:44] *** MayDaniel joined
[07:46] *** MayDaniel left
[07:53] *** donri joined
[07:54] *** silug left
[07:57] *** mj41 left
[08:04] *** guestNaN joined
[08:13] *** tzhs joined
[08:14] *** wamba left
[08:16] *** am0c left
[08:16] *** Chillance joined
[08:48] *** icwiener joined
[08:50] *** Mowah_ joined
[08:55] *** wamba joined
[08:56] <jnthn> morning

[08:57] *** dakkar joined
[09:15] *** noganex_ left
[09:17] *** noganex joined
[09:25] *** awoodland joined
[09:43] *** amkrankruleuen left
[09:44] *** wamba left
[09:45] *** amkrankruleuen joined
[09:54] *** wamba joined
[09:59] *** woosley left
[10:00] *** daniel-s joined
[10:01] *** cosimo left
[10:02] <daniel-s> perl6: say localtime(time());

[10:02] <p6eval> niecza v5-84-gca9fc3e: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared routines:␤     'localtime' used at line 1␤     'time' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 413 (CORE die @ 2)␤  at /home/p6eval/niecza/src/STD.pm6 line 1143

[10:02] <p6eval> ..(STD P6.comp_unit @ 77)␤…

[10:02] <p6eval> ..rakudo 369665: OUTPUT«Could not find sub &time␤  in main program body at line 22:/tmp/_WMN20G_Uh␤»

[10:02] <p6eval> ..pugs: OUTPUT«<obj:Time::Local>␤»

[10:02] <daniel-s> perl6: say localtime(time);

[10:03] <p6eval> niecza v5-84-gca9fc3e: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared routine:␤      'localtime' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 413 (CORE die @ 2)␤  at /home/p6eval/niecza/src/STD.pm6 line 1143 (STD P6.comp_unit @ 77)␤  at

[10:03] <p6eval> ../home/p6eval/niecza…

[10:03] <p6eval> ..pugs: OUTPUT«<obj:Time::Local>␤»

[10:03] <p6eval> ..rakudo 369665: OUTPUT«Could not find sub &localtime␤  in main program body at line 22:/tmp/w1H_zuvLaW␤»

[10:05] <daniel-s> perl6: say DateTime.new(now);

[10:05] <p6eval> pugs: OUTPUT«*** No such subroutine: "&DateTime"␤    at /tmp/lpwrE166yZ line 1, column 5-22␤»

[10:05] <p6eval> ..niecza v5-84-gca9fc3e: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Undeclared name:␤ 'DateTime' used at line 1␤␤Unhandled exception: Check failed␤␤  at /home/p6eval/niecza/boot/lib/CORE.setting line 413 (CORE die @ 2)␤  at /home/p6eval/niecza/src/STD.pm6 line 1143 (STD P6.comp_unit @ 77)␤  at

[10:05] <p6eval> ../home/p6eval/niecza/src…

[10:05] <p6eval> ..rakudo 369665: OUTPUT«2011-05-26T10:05:22Z␤»

[10:07] *** cosimo joined
[10:11] *** amkrankruleuen left
[10:14] <daniel-s> how do I found out what version of rakudo I have?

[10:14] <daniel-s> is it possible within perl?

[10:15] <flussence> rakudo: say $*PERL

[10:15] <p6eval> rakudo 369665: OUTPUT«name      rakudo␤version  2011.05-5-g3696656␤␤»

[10:22] *** amkrankruleuen joined
[10:26] *** silug joined
[10:26] <daniel-s> what does the * twigil on a variable mean?

[10:27] <jnthn> Dynamically scoped

[10:30] *** amkrankruleuen left
[10:44] *** amkrankruleuen joined
[11:03] *** tokuhirom left
[11:04] <daniel-s> I have a function, the first one works, but the second version doesn't

[11:04] <daniel-s> http://pastebin.ca/2069373

[11:04] <daniel-s> (that is, it's not two functions in my script, I just changed the first one

[11:04] *** Patterner left
[11:06] <moritz> in Perl 6, round (stuff),  round (stuff)  is not the same as round(stuff), round(stuff)

[11:06] <moritz> the former is the saem as  round((stuff), round((stuff)))

[11:06] <moritz> not what you want

[11:07] <moritz> the second is the same as (round(stuff)), (round(stuff))

[11:07] <daniel-s> perfect, works

[11:07] *** silug left
[11:08] *** Psyche^ joined
[11:08] *** Psyche^ is now known as Patterner

[11:13] <birdwindupbird> \q

[11:13] *** birdwindupbird left
[11:15] *** birdwindupbird joined
[11:23] *** wtw left
[11:30] *** amkrankruleuen left
[11:31] *** amkrankruleuen joined
[11:33] *** ismaild joined
[11:36] *** ismaild left
[11:38] <pmichaud> good morning, #perl6

[11:40] *** icwiener left
[11:42] *** amkrankruleuen left
[11:42] *** amkrankruleuen joined
[11:43] <tadzik> good morning pmichaud 

[11:44] <jnthn> o/ pmichaud 

[11:44] *** pernatiy left
[11:49] *** agentzh left
[11:54] <takadonet> pmichaud: morning

[12:06] *** wknight8111 joined
[12:28] *** Lorn left
[12:30] *** satyavvd left
[12:32] *** wamba left
[12:37] *** jrockway left
[12:41] *** ab5tract joined
[12:41] *** molaf joined
[12:41] *** molaf left
[12:42] *** pernatiy joined
[12:59] *** Holy_Cow joined
[13:01] *** Holy_Cow left
[13:07] *** pmurias joined
[13:10] *** leprevost joined
[13:16] <daniel-s> "I don't make the rules... I just think them up and write them down"

[13:18] *** ilyuhan joined
[13:29] *** awoodland left
[13:38] *** GinoMan[A] joined
[13:42] *** bluescreen10 joined
[13:44] *** kensanata joined
[13:44] *** kensanata left
[13:44] *** kensanata joined
[13:56] *** silug joined
[13:59] *** jrockway joined
[14:01] *** MayDaniel joined
[14:05] *** sftp joined
[14:08] *** satyavvd joined
[14:12] *** awoodland joined
[14:18] *** yinyin_ left
[14:20] *** awoodland left
[14:30] *** hercynium joined
[14:34] *** daniel-s left
[14:34] *** tom_tsuruhara joined
[14:34] *** tom_tsuruhara left
[14:34] *** tom_tsuruhara joined
[14:34] <colomon> \o

[14:37] *** koban` left
[14:37] *** hanekomu joined
[14:43] *** leprevost left
[14:47] <moritz> o/

[14:47] *** kensanata left
[14:51] *** GinoMan[A] left
[14:51] *** awoodland joined
[14:55] <pmichaud> -o-

[15:00] *** kaare_ joined
[15:01] <pmichaud> what/where are the instructions for building nom?

[15:05] <PerlJam> hopefully it's "checkout the nom branch; build as usual"

[15:05] <PerlJam> :-)

[15:06] <pmichaud> with --gen-parrot?

[15:06] <pmichaud> that seems... unlikely.

[15:06] *** nymacro left
[15:06] <colomon> pmichaud: rakudo nom or nqp nom?

[15:07] <colomon> for rakudo nom, you need --gen-nqp as well

[15:07] <colomon> (or at least, I did for my setup)

[15:07] <pmichaud> colomon: rakudo nom.  (There shouldn't be a nqp-nom)

[15:07] *** baest_ joined
[15:07] <colomon> Then unless you have that nqp built, definitely --gen-parrot --gen-nqp

[15:07] <pmichaud> so, both --gen-nqp and --gen-parrot ?

[15:07] <colomon> yes

[15:08] <pmichaud> okay

[15:08] <pmichaud> we should eliminate the --gen-parrot option

[15:08] <colomon> (I also needed the --without-pcre option for --gen-parrot)

[15:08] <pmichaud> I think jnthn++ and I had discussed that eventually we should just build from nqp, and let nqp handle the parrot revision

[15:09] <pmichaud> I'll start moving things in that direction.

[15:09] *** baest_ left
[15:10] *** tzhs left
[15:12] *** ilyuhan left
[15:12] <pmichaud> nqp seems to be tied to Parrot 3.3.0.... should we bump that?

[15:13] <moritz> +1

[15:13] <pmichaud> especially since 3.4.0 is quite a bit faster than 3.3.0

[15:14] <pmichaud> oh, and nom appears to be using parrot with the GMS gc

[15:14] <pmichaud> so that makes it EVEN SLOWER

[15:14] <pmichaud> s/nom/nqp/

[15:14] <pmichaud> wait, rephrase

[15:15] <pmichaud> nqp appears to be using parrot with the ms2 gc

[15:15] <pmichaud> with the bad tuning... so it's about 60% slower than it ought to be (based on Rakudo benchmarks)

[15:17] <pmichaud> does Rakudo-nom still need any of its own pmcs or ops?

[15:19] *** guestNaN left
[15:24] <dalek> nqp: c46d7b0 | pmichaud++ | build/PARROT_REVISION:

[15:24] <dalek> nqp: Bump PARROT_REVISION to 3.4.0.  The old PARROT_REVISION (3.3.0) was

[15:24] <dalek> nqp: defaulting to --gc=ms2, which since February 2011 has been about 60%

[15:24] <dalek> nqp: slower than it was in January 2011.  Moving to Parrot 3.4.0 uses the

[15:24] <dalek> nqp: GMS gc, which gives a huge overall performance speedup and an even

[15:24] <dalek> nqp: bigger speedup for regexes and parsing.

[15:24] <dalek> nqp: review: https://github.com/perl6/nqp/commit/c46d7b096b

[15:30] <dalek> rakudo/nom: b79ea53 | pmichaud++ | build/PARROT_REVISION:

[15:30] <dalek> rakudo/nom: Bump PARROT_REVISION to 3.4.0.

[15:30] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/b79ea5332b

[15:30] *** silug left
[15:31] *** silug joined
[15:36] *** hanekomu left
[15:36] <sorear> good * #perl6

[15:39] <TimToady> */

[15:39] <moritz> \*

[15:40] <colomon> -*-

[15:44] <tadzik> hello

[15:44] <frettled> /* no comment */

[15:45] *** wamba joined
[15:46] *** domidumont left
[15:52] <sorear> yapsi has some ... interesting grammar layout conventions

[15:57] *** plexx joined
[16:00] *** MayDaniel left
[16:02] <colomon> is "make test" supposed to fail for nom?

[16:04] * colomon went ahead and pushed anyway, on the theory his change was probably right... his first nom push!

[16:05] <tadzik> colomon: yes

[16:05] <benabik> colomon: I think nom is at "yay it builds!", not "yay, it passes tests!"

[16:05] <tadzik> it's "yay it builds" not "yay it runs" :)

[16:05] <colomon> benabik: not spectest, basic sanity tests.  I thought those might work, at least a little.

[16:06] *** plexx left
[16:06] <dalek> rakudo/nom: 0ab409e | colomon++ | / (2 files):

[16:06] <dalek> rakudo/nom: Switch Test.pir rule from using perl6.pbc to $(PERL6_PBC).

[16:06] <dalek> rakudo/nom: review: https://github.com/rakudo/rakudo/commit/0ab409e5cb

[16:11] *** tom_tsuruhara left
[16:12] *** kjeldahl joined
[16:14] *** mberends joined
[16:15] *** kaare_ left
[16:16] *** ymasory joined
[16:22] *** pernatiy left
[16:24] <sorear> \o/ got yapsi to compile under niecza

[16:24] <tadzik> nice!

[16:25] <tadzik> now let's get Rakudo run niecza :)

[16:26] <mberends> sorear++

[16:31] *** mj41 joined
[16:31] *** dalek left
[16:32] *** p6eval left
[16:35] *** diakopter left
[16:35] *** TimToady left
[16:35] *** sorear left
[16:37] *** dalek joined
[16:37] *** ChanServ sets mode: +v dalek

[16:40] *** TimToady joined
[16:41] *** sorear joined
[16:41] *** diakopter joined
[16:41] *** birdwindupbird left
[16:46] <colomon> sorear++

[16:47] *** Yappoko__ left
[16:47] *** Vlavv_ joined
[16:48] *** mj41 left
[16:48] *** Vlavv` left
[16:50] *** Yappoko__ joined
[16:57] *** p6eval joined
[16:57] *** ChanServ sets mode: +v p6eval

[17:01] *** Lorn joined
[17:04] *** dakkar left
[17:04] <pmichaud> please speak up soon if you feel that rakudo should be based on a parrot revision instead of an nqp revision.

[17:04] *** ab5tract left
[17:05] <pmichaud> my plan is to eliminate PARROT_REVISION from nom, and simply have NQP_REVISION

[17:05] <pmichaud> the version of NQP will then decide what parrot is wanted/required

[17:05] <mberends> +1

[17:05] *** cdarroch joined
[17:05] *** cdarroch left
[17:05] *** cdarroch joined
[17:05] <benabik> If rakudo will still have custom ops and/or pmcs, then keeping a PARROT_REVISION might be wise.

[17:05] <pmichaud> I'm expecting those to go away.

[17:06] <pmichaud> (I might be wrong there... but that's my expectation.)

[17:06] <benabik> Well then +1 to making them go away and +1 to NQP_REVISION  :-D

[17:07] <pmichaud> even if they don't go away, I think it'll be easy-ish to bump parrot revision in nqp

[17:08] <benabik> Commits in NQP saying "bump PARROT_REVISION so Rakudo can ___

[17:08] <benabik> " seems odd to me, but I'll admit I'm the peanut gallery here.

[17:09] <pmichaud> I think parrot downloading and revision management should be in one place, not two.

[17:09] <benabik> Bad idea:  Have Rakudo's Configure.pl overwrite NQP's PARROT_REVISION if needed.

[17:10] <pmichaud> not going there.  :)

[17:10] *** zorgnax left
[17:10] <pmichaud> in general, I think that NQP should be our "interface layer" between Rakudo and Parrot, rather than having Rakudo target Parrot directly

[17:11] <pmichaud> especially since we want Rakudo to become less parrot-centric.

[17:11] <pmichaud> that's obviously something we'll violate when performance demands

[17:11] <pmichaud> but the number of violations ought to be small enough that Rakudo isn't driving the PARROT_REVISION bus

[17:12] <benabik> pmichaud: Sounds sound.

[17:13] *** thou joined
[17:14] *** GinoMan[A] joined
[17:15] *** Vlavv_ left
[17:22] *** zorgnax joined
[17:24] *** sorear left
[17:24] *** silug left
[17:24] *** pjcj left
[17:24] *** Tedd1 left
[17:24] *** huf left
[17:24] *** PZt left
[17:24] *** meteorjay left
[17:24] *** skangas left
[17:24] *** sivoais left
[17:24] *** renormalist left
[17:24] *** broquaint left
[17:24] *** miso2217_ left
[17:24] *** frodwith left
[17:24] *** zb left
[17:24] *** bbkr_ left
[17:24] *** yahooooo left
[17:25] *** sorear joined
[17:25] *** silug joined
[17:25] *** pjcj joined
[17:25] *** Tedd1 joined
[17:25] *** huf joined
[17:25] *** PZt joined
[17:25] *** meteorjay joined
[17:25] *** skangas joined
[17:25] *** sivoais joined
[17:25] *** renormalist joined
[17:25] *** broquaint joined
[17:25] *** miso2217_ joined
[17:25] *** frodwith joined
[17:25] *** zb joined
[17:25] *** bbkr_ joined
[17:25] *** yahooooo joined
[17:28] *** Vlavv_ joined
[17:28] *** satyavvd left
[17:31] *** GinoMan[A] left
[17:32] <colomon> pmichaud: I certainly think getting rid of PARROT_REVISION from nom is the long term goal.  I've no idea how practical it is yet in the short term.

[17:32] <pmichaud> colomon: should be no problem.

[17:36] <yath> may i delurk and ask what exactly nom is?

[17:36] <yath> *hide*

[17:37] <tadzik> new object model, usually used in context "rakudo/nom" which means Rakudo using the new NQP

[17:37] <tadzik> and the new object model

[17:38] <benabik> Which has often been referred to as 6model

[17:41] *** mj41 joined
[17:43] *** araujo joined
[17:44] <moritz> pmichaud: some ages ago you said you'd come up with a plan on how to handle pseudo packages like nqp::, OUTER:: etc. Did you happen to get around to that?

[17:46] <yath> tadzik: benabik: thanks

[17:49] <pmichaud> nqp:: I know how to do

[17:49] <p6eval> nqp: OUTPUT«Confused at line 1, near ": I know h"␤current instr.: 'nqp;HLL;Grammar;panic' pc 26292 (src/stage2/gen/NQPHLL.pir:7011)␤»

[17:49] <pmichaud> OUTER:: is really more of a Rakudo thing at the moment

[17:50] <PerlJam> why is nqp:: a pseudo package?

[17:50] *** mberends left
[17:50] <PerlJam> (I mean it doesn't have to be right?)

[17:50] <pmichaud> things in the nqp namespace are handled specially by the compiler, atm.

[17:50] <pmichaud> as opposed to being standard namespace lookups

[17:50] <moritz> PerlJam: syntactically it looks like a package

[17:51] <moritz> PerlJam: which is why we call it "pseudo package" :-)

[17:51] <pmichaud> is there a better (more canonical) name for the "build/" subdirectory?

[17:51] <PerlJam> pmichaud: right, so does that mean that the way to handle nqp:: is to use the normal mechanism?

[17:52] <pmichaud> PerlJam: I don't quite understand the question.

[17:52] <moritz> we don't want nqp::join to compile to a package lookup + invocation

[17:52] <moritz> but rather to a more low-level thing

[17:52] <pmichaud> nqp:: becomes the interface to the underlying vm

[17:52] <p6eval> nqp: OUTPUT«Confused at line 1, near ": becomes "␤current instr.: 'nqp;HLL;Grammar;panic' pc 26292 (src/stage2/gen/NQPHLL.pir:7011)␤»

[17:52] <pmichaud> p6eval: stop that!

[17:53] *** pernatiy joined
[17:53] <pmichaud> what do other modules/packages use in place of build/, if anything?

[17:54] <tadzik>  nqp:: curious if p6eval will react

[17:54] <p6eval> nqp: OUTPUT«Confused at line 1, near ": curious "␤current instr.: 'nqp;HLL;Grammar;panic' pc 26292 (src/stage2/gen/NQPHLL.pir:7011)␤»

[17:54] <moritz> blib/

[17:54] <tadzik> bah

[17:54] <moritz> should I teach p6eval to require a space after the : ?

[17:55] <pmichaud> blib/ always felt to me like it was a place for generated files

[17:55] <pmichaud> not the file that do the generating.

[17:55] <pmichaud> *files

[17:55] <PerlJam> moritz: yes, please

[17:55] <moritz> ah, I misunderstood

[17:55] <moritz> there's config/ or tools/ or so, but both don't quite cut it

[17:56] <pmichaud> could do tools/build/ perhaps

[17:56] <pmichaud> and a config/

[17:56] <dalek> evalbot: 6f67aa4 | moritz++ | evalbot.pl:

[17:56] <dalek> evalbot: require a whitespace after the :

[17:56] <dalek> evalbot: review: https://github.com/perl6/evalbot/commit/6f67aa4fd1

[17:56] *** tylercurtis left
[17:57] *** tylercurtis joined
[17:57] *** p6eval left
[17:58] *** p6eval joined
[17:58] *** ChanServ sets mode: +v p6eval

[17:58] <moritz> nqp::don'tcomplain

[17:58] <moritz> nqp: say(1)

[17:58] <pmichaud> nqp:: moritz++

[17:58] <pmichaud> uh oh

[17:59] <p6eval> nqp: OUTPUT«1␤»

[17:59] <PerlJam> heh

[18:00] <jdhore1> Is Dalek Caan open source?

[18:04] <pmichaud> tools/build/  versus   build/    any preference?

[18:05] <pmichaud> (I'm thinking build/ might be bad because it's sometimes used as the place to build the system)

[18:05] <moritz> pmichaud: I think I'd prefer tools/build/ because some project use build/ for generated files

[18:05] <pmichaud> I'll go with that

[18:05] <pmichaud> similarly I'm planning to s/parrot_install/install/

[18:06] <moritz> +1

[18:07] *** TimToady left
[18:07] *** TimToady joined
[18:08] *** gbacon joined
[18:08] <pmichaud> build/Makefile.in -> config/Makefile.in

[18:09] <pmichaud> build/PARROT_REVISION -> config/PARROT_REVISION

[18:09] <moritz> +2

[18:09] <PerlJam> what he said

[18:11] *** pmurias left
[18:11] *** keeth joined
[18:13] *** MayDaniel joined
[18:15] <tadzik> pmichaud: maybe also ./perl6 => ./rakudo?

[18:15] *** silug left
[18:16] <pmichaud> that might be reasonable for nom, yes.

[18:16] <tadzik> if we're at big changes anyway

[18:16] <pmichaud> well, so far these are developer-facing changes, not user-facing ones.

[18:16] <tadzik> oh well

[18:21] <colomon> ./perl6 => ./rakudo +1

[18:22] <PerlJam> er ... why?

[18:31] *** mberends joined
[18:38] <tadzik> for there's no One Perl 6 Compiler. Why should 'perl6' be reserved for Rakudo, and not for Yapsi? :)

[18:39] <PerlJam> who said it was reserved?

[18:40] <tadzik> well, it's not

[18:40] <PerlJam> maybe someone should circumvent the problem by creating perl6brew now  ;-)

[18:41] <colomon> especially considering that people will probably want to run rakudo master (soon to be known as beta?) and rakudo nom side-by-side for the next three months or so...

[18:42] * colomon 's computer has mysteriously started playing some excellent Irish polkas... I think I know what they are, but have no idea why they are playing nor in what window.

[18:42] <PerlJam> colomon: What if there were an option --install-as=whatever ?

[18:42] <tadzik> hmm

[18:42] <tadzik> rakudo: sub marine

[18:42] <p6eval> rakudo 369665: OUTPUT«Could not find sub &marine␤  in main program body at line 22:/tmp/sRNhSA8Yft␤»

[18:43] <tadzik> :)

[18:47] <colomon> PerlJam: that would be nice, for sure.

[18:48] *** MayDaniel left
[18:48] <tadzik> rising up a question again. I need to be able to somehow set up a global-ish variable in Actions.pm, and frequently append information to it. How do I do that? Is there anything in Rakudo currently which I can look at for inspiration?

[18:50] *** wamba left
[18:50] <PerlJam> tadzik: you mean like @BLOCK ?

[18:50] <tadzik> hmm, maybe our @FOO; and some set_hll_global magic?

[18:50] <tadzik> PerlJam: it needs to be available in runtime.

[18:50] <tadzik> see $=POD, but for now whatever works

[18:50] <PerlJam> oh

[18:51] <PerlJam> for a second there I had no clue what you were working on  :)

[18:52] <tadzik> or something like PAST::Var.new( :name('self'), :scope('global')

[18:54] *** Mowah_ left
[18:55] * tadzik pokes moritz

[18:56] <PerlJam> tadzik: :scope('package') wouldn't work?

[18:56] <PerlJam> that seems like what you'd want anyway

[18:56] <pmichaud> even just  our @FOO and repeated pushes would work

[18:56] <tadzik> pmichaud: it will be available in runtime then?

[18:57] <tadzik> Or would I need some set_hll_global for that?

[18:57] <pmichaud> if you look in the right package, yes.

[18:57] <moritz> tadzik: pong

[18:57] <tadzik> PerlJam: in an ideal world it should be file-scoped. But as I say, the proper way is for week 10th or something, it turned out I need something for testing now

[18:57] <pmichaud> as a first attempt, you could try   "our @FOO"  and then look in  @Perl6::Actions::FOO

[18:57] <tadzik> moritz: following?

[18:58] <moritz> tadzik: just backlogging..

[18:58] <pmichaud> you can also do something like    our @FOO := @Some::Other::Package::FOO

[18:58] <moritz> tadzik: define a global variable in the same way that $*PERL etc. are defined

[18:59] <pmichaud> which binds @FOO in the local package to a @FOO in Some::Other::Package

[18:59] <moritz> tadzik: and then emit calls @FOO.push($things)

[18:59] <tadzik> moritz: $*PERL is in cheats/somewhere.pm

[18:59] <moritz> sorry, afk

[19:00] <pmichaud> note that all of this will work only if "runtime" means "same process where the Perl 6 code was parsed"

[19:00] <pmichaud> if a file gets output to .pir, the $=POD won't be serialized with it (but that sounds like week 10th or something to me)

[19:00] <tadzik> yeah. For now it's just "whatever lets me test the parser in more-less complete way"

[19:01] <tadzik> also, I'll need to have Pod6 nodes in Nqp, not Perl6, right?

[19:01] <tadzik> not much loss though

[19:01] <pmichaud> not sure about that.

[19:02] <pmichaud> and I still expect to want/need to serialize a copy of the source code in the compiled output anyway, so POD thingies could make reference to that.

[19:02] <tadzik> afk for a longer while. Thanks for the tips

[19:10] *** fhelmberger left
[19:18] *** birdwindupbird joined
[19:23] *** keeth left
[19:23] <jnthn> pmichaud, tadzik: When we have the proper serialization stuff in place, then we can just build the POD data structures during the compile and shove 'em in the SC.

[19:26] * jnthn doing family stuff, mostly afk :)

[19:28] *** tomaw left
[19:33] *** wamba joined
[19:44] *** lichtkind joined
[19:49] *** tomaw_ joined
[19:51] *** codeacrobat joined
[19:52] *** hercynium left
[20:00] *** keeth joined
[20:05] *** [Coke] left
[20:07] *** [Coke] joined
[20:07] *** mberends left
[20:18] *** birdwindupbird left
[20:19] *** dukeleto left
[20:20] *** dukeleto joined
[20:21] *** ymasory left
[20:25] *** hanekomu joined
[20:25] *** silug joined
[20:29] *** donri left
[20:29] *** wknight8111 left
[20:30] *** mj41 left
[20:31] *** donri joined
[20:32] *** cotto_work left
[20:33] *** codeacrobat left
[20:37] <tadzik> jnthn: that'd be something

[20:44] <tadzik> where do I define classes so I can use them in Actions.pm?

[20:45] *** tomaw_ left
[20:47] *** ymasory joined
[20:47] *** silug left
[20:55] <moritz> tadzik: src/Perl6/*.pm has some examples

[20:55] <moritz> tadzik: though most often you don't need to use them in Actions.pm directly, but rather emit calls that construct them

[20:55] <tadzik> so they will end up built at runtime?

[20:56] <moritz> aye

[20:56] *** tomaw_ joined
[20:56] <moritz> at least that's the current approach

[20:56] <moritz> will change with nom

[20:57] <tadzik> problems so far: http://nopaste.snit.ch/47776

[20:57] * moritz doesn't feel really qualified or concentrated right now

[20:57] <tadzik> ok, no hurry

[20:58] <moritz> btw, our @POD := []; should work just as fine

[20:59] *** mtk left
[21:00] <tadzik> moritz: so in the current approach Pod6::Nodes will become a part of the settings library?

[21:00] <moritz> tadzik: yes

[21:01] <tadzik> moritz: @POD := [] later results in NPA on find_method('push')

[21:01] *** rokoteko left
[21:01] <moritz> urks.

[21:03] *** tomaw_ is now known as tomaw

[21:10] *** mtk joined
[21:13] *** Bucciarati left
[21:13] *** bluescreen10 left
[21:20] *** ymasory left
[21:20] <tadzik> pushing "quick and dirty" to a whole, new level: http://nopaste.snit.ch/47777

[21:21] *** Bucciarati joined
[21:21] <tadzik> guess it's sleepytime, once I started coming out with things like this

[21:21] <moritz> tadzik: you can try my @POD = infix:<,>(@Perl6::Actions::POD)

[21:21] <moritz> iirc that was the way to turn a RPA into a Perl 6 array

[21:22] * moritz -> also sleep

[21:22] <lichtkind> moritz: good night

[21:22] <tadzik> moritz: neat!

[21:22] <tadzik> moritz: sleep tight

[21:23] *** Zapelius left
[21:23] <lichtkind> im shoot at anyone calling be zebra or panda :)

[21:23] <tadzik> why so? :)

[21:23] <tadzik> . o O ( why so serious? )

[21:24] <lichtkind> it just feels like a proper reaction

[21:24] *** kjeldahl left
[21:25] *** bluescreen10 joined
[21:26] *** cooper__ joined
[21:26] <lichtkind> anywhay im nore motivated to do something fpr p6 again

[21:27] *** Mowah left
[21:28] *** cotto_work joined
[21:30] *** mj41 joined
[21:30] *** cooper__ is now known as cooper

[21:32] <tadzik> hah, guitar chords for "The internet is for porn" :D

[21:33] <lichtkind> your gross

[21:34] <tadzik> shh. Yesterday I learned "Never gonna give you up" :)

[21:34] *** gbacon left
[21:34] *** bluescreen10 left
[21:34] <lichtkind> sir your try to rickrole me?

[21:34] <tadzik> no. But I'll surely rickroll the next Jam Session at the university

[21:49] *** Patterner left
[21:51] *** Psyche^ joined
[21:51] *** Psyche^ is now known as Patterner

[21:51] *** hanekomu left
[21:53] *** keeth left
[21:53] *** keeth joined
[22:04] *** bbkr_ left
[22:05] *** bbkr_ joined
[22:10] *** tom_tsuruhara joined
[22:14] <tadzik> bedtime &

[22:14] *** bbkr_ left
[22:14] *** bbkr_ joined
[22:22] <sorear> good * #perl6

[22:27] <sorear> yapsi likes to catch exceptions thrown in the compiler... this is probably not good

[22:28] <sorear> perl6: my @foo; say pop(@foo).perl

[22:28] <p6eval> niecza v5-84-gca9fc3e: OUTPUT«Unhandled exception: System.IndexOutOfRangeException: Array index is out of range.␤  at Niecza.VarDeque.Pop () [0x00000] in <filename unknown>:0 ␤  at CORE.C297_List_2Epop_2Ditem (Niecza.Frame ) [0x00000] in <filename unknown>:0 ␤  at Niecza.Kernel.RunCore

[22:28] <p6eval> ..(Niecza.Frame& cur) [0x00…

[22:28] <p6eval> ..pugs, rakudo 369665: OUTPUT«undef␤»

[22:28] *** mj41 left
[22:36] *** [Coke] left
[22:39] <sorear> stefan@stefans:~/dl/yapsi$ mono ~/rel/niecza/obj/MAIN.exe -e 'say 5'            5

[22:39] <sorear> stefan@stefans:~/dl/yapsi$ 

[22:39] <sorear> \o/

[22:39] <dalek> niecza: a828415 | sorear++ | lib/CORE.setting:

[22:39] <dalek> niecza: Add Match.keys, List.kv, pop returns undef, Hash.exists and delete for Rakudo compatibility

[22:39] <dalek> niecza: review: https://github.com/sorear/niecza/commit/a828415fb7

[22:47] *** donri left
[22:56] *** whiteknight joined
[23:04] *** tom_tsuruhara left
[23:15] *** daniel-s joined
[23:22] *** awoodland left
[23:24] <sorear> perl6: "foo" ~~ /o*/; say $/.ast.WHAT.perl

[23:24] <p6eval> rakudo 369665: OUTPUT«Any␤»

[23:24] <p6eval> ..niecza v5-84-gca9fc3e: OUTPUT«Str␤»

[23:24] <p6eval> ..pugs: OUTPUT«Error eval perl5: "if (!$INC{'Pugs/Runtime/Match/HsBridge.pm'}) {␤    unshift @INC, '/home/p6eval/.cabal/share/Pugs-6.2.13.16/blib6/pugs/perl5/lib';␤    eval q[require 'Pugs/Runtime/Match/HsBridge.pm'] or die $@;␤}␤'Pugs::Runtime::Match::HsBridge'␤"␤*** '<HANDLE>' trapped by operat…

[23:26] *** whiteknight left
[23:29] *** whiteknight joined
[23:30] *** whiteknight left
[23:30] *** whiteknight joined
[23:35] <sorear> branch 'niecza' on git://github.com/masak/yapsi now passes all tests on current HEAD niecza

[23:45] <sorear> phenny: seen masak

[23:46] <sorear> (what, no celebrations?)

[23:46] <sorear> phenny: seen masak?

[23:56] *** silug joined
[23:56] <sorear> pmichaud: pig

[23:56] <sorear> pmichaud: ping

[23:57] <sorear> pmichaud: I would like to hear your thoughts on OUTER.

