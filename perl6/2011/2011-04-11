[00:00] *** sufrostico left
[00:05] *** sufrostico joined
[00:08] *** sftp left
[00:08] *** sftp joined
[00:11] *** mikemol joined
[00:16] *** sftp left
[00:18] *** edenc_ joined
[00:20] *** _jaldhar joined
[00:23] *** edenc_ left
[00:23] *** donri left
[00:25] *** edenc_ joined
[00:32] *** mikemol left
[00:36] *** mikemol joined
[00:47] *** Chillance left
[01:13] *** woosley joined
[01:13] *** whiteknight left
[01:21] *** edenc left
[01:21] *** edenc_ is now known as edenc

[01:36] *** dayangkun left
[01:37] *** dayangkun joined
[02:03] *** edenc left
[02:06] *** edenc joined
[02:06] *** edenc left
[02:26] *** takadonet1 left
[02:32] *** s1n joined
[02:46] *** imamelia joined
[02:48] *** TheMartianGeek left
[02:48] *** imamelia is now known as TheMartianGeek

[02:55] *** hudnix left
[03:03] *** rml_ joined
[03:17] *** zer0o left
[03:23] *** dayangkun_ joined
[03:23] *** Su-Shee_ joined
[03:27] *** dayangkun left
[03:27] *** Su-Shee left
[03:33] *** tomaw left
[03:35] <diakopter> interesting!

[03:35] *** edenc joined
[03:36] <sorear> diakopter: hi

[03:36] <sorear> what's so interesting?

[03:38] *** tomaw joined
[03:42] *** edenc left
[03:45] *** edenc joined
[03:56] *** satyavvd joined
[03:56] *** edenc left
[04:00] *** edenc joined
[04:01] *** orafu left
[04:01] *** orafu joined
[04:03] *** rml_ left
[04:14] *** dayangkun__ joined
[04:18] *** dayangkun_ left
[04:53] *** ymasory left
[05:13] *** TheMartianGeek left
[05:16] *** TheMartianGeek joined
[05:18] *** birdwindupbird joined
[05:18] *** dayangkun__ left
[05:19] *** dayangkun__ joined
[05:21] *** imamelia joined
[05:23] *** TheMartianGeek left
[05:25] *** imamelia left
[05:26] *** kaare_ joined
[05:30] *** TheMartianGeek joined
[05:30] *** MUILTFN joined
[05:30] *** kaare_ left
[05:33] *** kaare_ joined
[05:37] *** hatseflats left
[05:39] *** justatheory left
[05:41] *** hatseflats joined
[05:47] *** TheMartianGeek left
[05:53] *** _jaldhar left
[05:53] *** wtw joined
[05:54] *** _jaldhar joined
[06:01] *** f00li5h left
[06:38] *** edenc left
[06:38] *** edenc joined
[06:40] *** dayangkun__ left
[06:43] *** noganex_ joined
[06:46] *** donri joined
[06:47] *** noganex left
[06:47] <moritz> miso2217_: thanks for the effort, but that's really a contrived example. Any real-world application of this would involve splitting on a comma

[06:48] <moritz> miso2217_: contrived examples are easy to find - it's real-world examples that I'm after

[06:48] *** Su-Shee_ is now known as Su-Shee

[06:49] <moritz> miso2217_: also minimal quantifiers (*?, +? etc.) are special-cased in that they do a certain amount of backtracking even inside :ratchet (otherwise they would always match the minimum count, and be fairly useless), so they don't make a good example

[06:50] *** f00li5h joined
[06:51] *** donri left
[06:52] *** Mowah joined
[06:58] *** shi joined
[07:04] *** masak joined
[07:05] <masak> lol hi from the course!

[07:05] *** donri joined
[07:06] <tadzik> hi

[07:06] *** noganex_ is now known as noganex

[07:07] <masak> apparently 'Jan Novak' applied for this course but didn't show up :P

[07:12] *** MUILTFN left
[07:18] *** Mowah left
[07:28] *** domidumont joined
[07:37] <moritz> how's the course?

[07:46] *** satyavvd left
[07:54] *** awoodland joined
[08:02] <masak> promising so far.

[08:04] <masak> the concepts are very language-agnostic, so I'm hoping to be able to apply these things to my Perl 6 coding as well.

[08:04] *** awoodland left
[08:05] <moritz> what's the topic?

[08:08] <masak> the whole course is about DDD and CQRS. today we're talking about bounded contexts and aggregates.

[08:09] <masak> both are devilishly simple concepts, but they apply to everything else in the course, so it's important to understand them well.

[08:10] <masak> things are a bit 'emperor's new clothes'-y sometimes, in that things sound like bland advice of the type "make sure you separate concepts that don't belong together". but on the other hand, when you go out into the Real World and look at business code, that's exactly what people tend not to do.

[08:12] <moritz> the point is teaching good techniques to do in practice what you preach

[08:12] <masak> aye.

[08:13] <masak> what's positive about DDD and CQRS is that getting the language right is actually a big part of it. so a Perl person like me fits right in. :)

[08:13] * moritz never heard those two abbreviations before

[08:14] <masak> I hadn't either, until I started my new job in January.

[08:15] <masak> best way I can describe it is this: for a long time I thought if I just understood Patterns, I'd level up from just a general understanding of OO and architecture.

[08:15] <masak> but patterns aren't really the next level. Domain-Driven Design is.

[08:16] <moritz> what do you mean by "Patterns"? sounds like an overloaded term to me

[08:18] * moritz really shouldn't distract masak++ from his course

[08:18] <masak> I mean Design Patterns, as in the Gang of Four book.

[08:18] <masak> it's ok, we're having a break now.

[08:18] <moritz> oh, I never "believed" in them

[08:19] <moritz> given that in Perl, some of them are just two lines or so

[08:19] <masak> they have some valid points. but they're simply that, patterns.

[08:19] <moritz> I always wondered why they made such a big fuzz

[08:19] <masak> and yes, some patterns in some languages go away in other languages.

[08:20] <masak> others, like Interpreter, are important even in Perl 6. I believe both PGE and nqp-rx use Interpreter.

[08:22] * masak </pause>

[08:24] *** satyavvd joined
[08:26] <miso2217> moritz: I can't think about any real world example where backtracking would be needed beside performance. I'll try to find some ideas on google.

[08:30] <moritz> miso2217: I think that the example of the word substring duplication is a good one, it just needs to brought into a shape where the backtracking actually works

[08:30] <moritz> erm, is needed

[08:30] *** shi left
[08:30] <mathw> I read an interesting thing once which said that you can consider design patterns to be patches for missing features in your programming language

[08:30] <moritz> something like anchoring it, and adding a .* to the front or so

[08:30] <mathw> This is why some of them are trivial in some languages, because that's a language which already has that feature

[08:31] <moritz> mathw: I guess that's true to a certain extent

[08:31] <mathw> yeah to a certaine xtent

[08:31] <mathw> I wouldn't say it applies to all patterns

[08:31] <moritz> mathw: other design patterns are simply formalized experience from solving a certain class of problems

[08:31] <mathw> And I do tend to think they're overrated in general

[08:31] <mathw> I've got a colleague who thinks the Visitor Pattern is absolutely awesome

[08:32] <mathw> Whereas I think it exposes all the things that are pooey about virtual method calls

[08:32] <mathw> And his justification for it being awesome seems to stop somewhere around 'but it's in the book!'

[08:33] <Khisanth> anything that is in a book is awesome?

[08:33] <moritz> :-)

[08:33] <moritz> mathw: you should write a different book, and point to that :-)

[08:39] *** noganex left
[08:39] *** noganex joined
[08:51] <mathw> moritz: maybe I will

[08:52] <mathw> 'mathw's little book of programming'

[08:52] *** awoodland joined
[08:52] <moritz> mathw's non-bullshit book of non-bullshit programming

[08:53] <mathw> that's a better title

[08:53] <mathw> I like that

[08:53] <mathw> it would need to have code fragments in C++, Perl 5, Perl 6 and Haskell at least

[08:54] <moritz> .oO( Anti-Patterns Observed From Anti-Programmers )

[08:54] <moritz> that would be a different book though

[08:54] *** dakkar joined
[08:55] <Su-Shee> peter norvig has written a nice article about how 16 of the 24 DP are obsolete in Lisp. 

[08:55] <moritz> sounds like fun :-)

[09:01] <arnsholt> Su-Shee: I have a friend who rants about DP all being work-arounds for not having proper lambdas =)

[09:02] <tadzik> DP?

[09:02] <moritz> Design Patterns

[09:03] <tadzik> oh, 16 of the 24, I see

[09:03] <tadzik> misread that

[09:04] <Su-Shee> I'm also very hm not critical but let's say suspicious of design pattern (most of them, at least). So I read critiques carefully.

[09:04] <mathw> arnsholt: a lot of crappy programming structure is down to a lack of lambdas IMO

[09:05] <arnsholt> There's that as well

[09:05] <arnsholt> That's probably the thing that annoys me the most when working in Java. I can't use lambdas and everything that comes with it

[09:05] <arnsholt> map and grep for example

[09:05] <Su-Shee> "Ruby Design Pattern" is very nice because it shows how to break several of them in a nice, rubyish way. (which basically applies to perl 5&6 as well.)

[09:06] <mathw> arnsholt: annoys me in C++ as well. I really need a new compiler which supports C++0x lambdas.

[09:06] <moritz> arnsholt: what really annoys me is the design bloat in libraries of languages that don't have closures

[09:06] <moritz> or no pointers to routines at all

[09:07] <arnsholt> Yeah, that's annoying as well. Java can do closures with anonymous inner classes, but it's a bit of a hack

[09:07] <moritz> you can't just install a callback, you need to implement the MyCallbackableForSpecificPurpose interface

[09:07] <moritz> and instantiate an object

[09:07] <moritz> and then pass that around

[09:09] <arnsholt> Indeed

[09:10] <mathw> yeah

[09:10] <mathw> and C++ makes you define an entire class for a functor (until C++0x, anyway)

[09:10] <mathw> I suspect I will use STL algorithms a lot more when I can define the functor in place

[09:14] <moritz> it's a bit curious that the STL relies on callbacks, and it's from a language that doesn't necessarily make them easy

[09:15] <moritz> (yet)

[09:15] <mathw> yeah it seemed like the library design begged for a language feature which wasn't implemented yet

[09:16] <mathw> std::for_each is a real pain to use without lambdas

[09:16] <p6eval> std 4608239: OUTPUT«[31m===[0mSORRY![31m===[0m␤Two terms in a row at /tmp/rkdkZ3L4X0 line 1:␤------> [32m:for_each [33m⏏[31mis a real pain to use without lambdas[0m␤    expecting any of:␤     bracketed infix␤        infix or meta-infix␤    statement modifier loop␤Parse failed␤FAILED 00:01

[09:16] <p6eval> ..120m␤»

[09:16] <mathw> woops, sorry bot :)

[09:16] *** SHODAN joined
[09:16] <woosley> hello *, perl6

[09:16] <woosley> what dose key word augment  in class definition mean?

[09:17] <moritz> woosley: it means "add to an existing class"

[09:17] <tadzik> that you're to modify an existing class, rather than creating new

[09:17] <moritz> http://dictionary.reference.com/browse/augment

[09:18] <miso2217> I would like to write the perl6 highlighting definition file for kate/kwrite/KDevelop. Any ideas on this? Is there a way to use STD.pm for this to generate part of the highlighting definitions automatically or do I need to go tho all manual way? May be here is a way to reuse the existing vim definition file?

[09:18] <woosley> moritz: LoL, looks like you know that my native language is no english

[09:19] *** donri left
[09:19] <moritz> woosley: not mine either :-)

[09:19] <TiMBuS> hey moritz, did you end up rakudobugging that thing i found yesterday?

[09:19] <moritz> TiMBuS: nope, I only rakudobugged the (my $ || my $) thing

[09:20] <TiMBuS> oh

[09:20] <moritz> miso2217: I don't really know, but I suspect it will be more work to emit something from STD than to do it manually

[09:20] <moritz> (except extracting keywords maybe)

[09:21] <moritz> miso2217: STD is intended as an exact parser, and keeps lots of information around, and then does conditional parsing based on that information. You don't want that for a syntax hilighter

[09:21] <moritz> those are all about cheating in a clever way :-)

[09:21] <TiMBuS> what was it again?

[09:21] <TiMBuS> rakudo: my $f = Match.new; say $f.clone;

[09:21] <p6eval> rakudo 4bf132: OUTPUT«␤»

[09:21] <TiMBuS> no its gotta contain something

[09:21] <moritz> that's why we have IRC logs

[09:22] <moritz> :-)

[09:22] *** awoodland left
[09:23] <woosley> moritz: What's being hacking in the Perl6 world right now? 

[09:24] <moritz> woosley: jnthn works on the new meta object model for rakudo, I'm working on a spec for error objects

[09:24] <moritz> woosley: tadzik is hacking the module installer, and applied for a GSoC project to implement a Pod6 parser

[09:25] <moritz> sorear is hacking niezca

[09:25] <moritz> takadonet is working on his bioperl modules (iirc)

[09:25] <TiMBuS> rakudo: my $f = 'a' ~~ /$<foo>='a'/; say $f.clone

[09:25] <p6eval> rakudo 4bf132: OUTPUT«(timeout)»

[09:26] <woosley> I think I saw a Pod6 parser on CPAN?

[09:27] *** azalyn left
[09:27] <moritz> yep, but that's in perl 5, and not integrated into rakudo, and implements an older spec

[09:27] <moritz> thing is, you are supposed to be able to access documentation of objects through the object itself

[09:28] <moritz> so the compiler needs to understand the doc syntax, and attach the documenation to the classes

[09:29] *** domidumont left
[09:30] <woosley> So at this time , this parser will be written in Perl6

[09:30] <moritz> right

[09:30] <woosley> Is this happening in the Rakudo repository? 

[09:31] *** birdwindupbird left
[09:33] <moritz> it will, at least partially

[09:33] <moritz> (assuming his project is funded)

[09:33] *** domidumont joined
[09:35] *** azalyn joined
[09:35] *** shi joined
[09:36] <masak> mathw: sounds like something MJD has said in some blog post.

[09:36] <masak> or someone.

[09:36] <masak> "Design patterns are missing language features."

[09:36] <moritz> MJD is always a good bet when attributing witty (and sometimes a bit biting) programming quotes :-)

[09:39] *** MayDaniel joined
[09:39] *** MayDaniel left
[09:39] *** MayDaniel joined
[09:40] <mathw> :)

[09:40] <masak> ah, here: http://www.codinghorror.com/blog/2005/06/are-design-patterns-how-languages-evolve.html

[09:43] <masak> ah, and that one says Paul Graham said it too. I'm not surprised.

[09:45] <mathw> I followed the link to the c2.com wiki page

[09:45] <mathw> the argument about the Visitor Pattern is quite enlightening

[09:45] <mathw> it finally makes me realise what I dislike about it so much

[09:45] <mathw> some part of my brain which already knew a language with multimethod dispatch must've been saying 'this is unnecessary crap'

[09:45] <mathw> right from the first time I encountered it

[09:46] <kaare_> "It will ultimately be why perl will fall away slowly (slow because languages never die quickly)" (from the comments) :-)

[09:48] *** daxim joined
[09:52] *** awoodland joined
[09:57] *** awoodland left
[09:58] *** MUILTFN joined
[10:07] *** xaphod left
[10:08] *** woosley left
[10:10] *** _twitch joined
[10:11] *** MayDaniel left
[10:15] <mathw> The more I read this stuff the more I think I really should learn Common Lisp

[10:15] <mathw> but the syntax has always put me off

[10:15] <moritz> same here :-)

[10:15] <moritz> that's why Perl 6 is like CL, but with a syntax :-)

[10:17] <mathw> lol there is that

[10:18] <moritz> the point is just that easy macros *require* an uniform syntax

[10:19] <moritz> so either you sacrifice macroability or readability

[10:19] <mathw> very, very good point

[10:19] <moritz> both options suck

[10:19] <mathw> when your only syntax is S-expressions, it's easy to define new macros

[10:19] <moritz> lips folks neglect syntax, we neglect macros

[10:19] <moritz> just a matter of opinions

[10:26] <mathw> everything's really just a pile of compromises

[10:27] <mathw> the question is, which compromises are you willing to make?

[10:27] <mathw> This is why it's so valuable to learn more than one language and be willing to employ more than one language

[10:27] <mathw> different compromises lead to different problems being solvable with different difficulty

[10:27] *** daxim_ joined
[10:27] *** daxim left
[10:28] <moritz> that's a very universal truth, far outside the realm of software

[10:29] <moritz> and with that I'm off to lunch :-)

[10:36] <mathw> :)

[10:38] *** MUILTFN left
[10:46] *** colomon joined
[10:46] *** araujo joined
[10:46] *** woosley joined
[10:47] *** daxim_ is now known as daxim

[10:51] *** SHODAN left
[10:59] *** Axius joined
[11:13] *** makkksimal joined
[11:22] <masak> mathw: the syntax of Common Lisp puts you off... and yet you went ahead and taught yourself Lojban? :P

[11:24] <masak> I think I've moved beyond being put off by Lisp's parentheses. the turning point for me was when I started reading really well-indented code.

[11:27] <masak> the indentation guides the eye, and one can basically trust it and ignore the parens.

[11:27] *** wallberg left
[11:28] *** wallberg joined
[11:29] *** MayDaniel joined
[11:30] *** fhelmberger left
[11:31] *** fhelmberger joined
[11:36] *** masak left
[11:38] *** masak joined
[11:42] *** hanekomu joined
[11:43] *** MayDaniel left
[11:44] *** makkksimal left
[11:44] *** wallberg left
[11:49] *** shozan joined
[11:49] *** mtk joined
[11:54] *** Patterner left
[11:56] *** Psyche^ joined
[11:56] *** Psyche^ is now known as Patterner

[12:07] *** Axius left
[12:19] *** satyavvd left
[12:26] *** masak left
[12:31] *** twinshadow joined
[12:35] *** leprevost joined
[12:40] *** takadonet joined
[12:41] <takadonet> morning all

[12:41] <moritz> o/

[12:43] *** donri joined
[12:44] *** colomon left
[12:46] <Tene> http://23andme.com/ is currently running a $0 sale, with a year commitment to their $9/mo update service.  $108 is very reasonable.  I've found my results from the service pretty fascinating.

[12:46] <mathw> phenny: tell masak yes, I did. Lojban isn't full of parentheses!

[12:46] <phenny> mathw: I'll pass that on when masak is around.

[12:47] <moritz> Tene: is that the genetic sequencing service?

[12:47] <Tene> phenny: tell masak currently big sale on http://23andme.com/

[12:47] <phenny> Tene: I'll pass that on when masak is around.

[12:47] <Tene> moritz: Kind of.  They identify 1M SNPs, which are one specific type of variation (single substitution of a base pair)

[12:48] <Tene> There's a general estimate that there are about 10M SNPs across humans globally.

[12:49] <Tene> 23andme has reports for specific SNPs, drug response, disease risk, etc.  They also give you access to the raw data, to do further research yourself.  Look at http://snpedia.com/index.php/SNPedia for examples and links to research that references specific SNPs.

[12:50] *** shozan left
[12:50] <Tene> http://www.snpedia.com/index.php/Rs4680 is always my favorite example (I'm AA/Met Met)

[12:51] <Tene> moritz: it won't give you a full sequence of your entire DNA, but it gives you a pretty useful subset of common significant variations we've identified.

[12:52] * moritz wonders if he should give his wife such a set for Eastern

[12:52] *** birdwindupbird joined
[12:52] <Tene> They also let you opt-in to let them keep your sample on file, so they can re-run it on newer equipment, when they update.

[12:53] <Tene> It's a saliva sample, so no needles or blood or anything scary.

[12:56] <Tene> The "update service" is just giving you access to new reports they add, whether from new research, or old.  Looks like they added a report on skin cancer a couple of days ago, for example, but if I wanted to follow the research myself, I could.  It would just be a lot more work.

[12:57] *** gantrixx left
[12:58] <tadzik> someone is writing Email::MIME: http://stackoverflow.com/questions/5604128/does-a-perl-6-module-for-rakudo-exist-to-parse-mimes/5604479#comment-6401430

[12:59] <moritz> tadzik: sounds more like "it takes too long, so I won't"

[13:00] *** gantrixx joined
[13:00] *** am0c joined
[13:02] *** xinming left
[13:02] <takadonet> tadzik:  I looked at the p5 version of the module and was too much work..... for the time I have

[13:05] *** xinming joined
[13:05] *** pernatiy joined
[13:07] *** Holy_Cow joined
[13:12] *** plobsing_ left
[13:17] *** bluescreen10 joined
[13:19] *** kaare_ left
[13:23] *** hanekomu left
[13:30] *** xinming left
[13:32] *** plobsing joined
[13:33] *** hudnix joined
[13:34] *** pjcj left
[13:34] *** TheMartianGeek joined
[13:34] *** leprevost left
[13:34] *** pjcj joined
[13:37] *** isBEKaml joined
[13:39] <perplexa> rakudo: let me confuse you

[13:39] <p6eval> rakudo 4bf132: OUTPUT«Could not find sub &you␤  in main program body at line 22:/tmp/OyQM_kBpSn␤»

[13:39] <perplexa> hmm

[13:41] *** leprevost joined
[13:41] <isBEKaml> so it picked 'you' out? 

[13:42] <tadzik> it's the last one

[13:42] <tadzik> it could declare the previous subs

[13:42] <isBEKaml> yo tadzik!

[13:42] <isBEKaml> read the whole sentence. :P

[13:46] <tadzik> yo isBEKaml!

[13:46] <tadzik> isBEKaml: yeah, I noticed the pun

[13:47] <isBEKaml> tadzik: how goes thee? systemas-eco? (sorry if my speech is slurred ;)

[13:48] <tadzik> isBEKaml: mips assembly atm

[13:48] <tadzik> :|

[13:48] <isBEKaml> tadzik: at school? and assembly? 

[13:51] *** sftp joined
[13:52] <tadzik> isBEKaml: yeah, a project for a university

[13:52] <tadzik> I suck at this, and debugging is ridiculous

[13:52] <tadzik> now it throws a runtime exception on writing 2 bytes to a stack

[13:53] <isBEKaml> tadzik: I know. Been there, done that. :( Debugging really sucks, so we usually wound up rewriting every one of our programs. :/

[13:58] <tadzik> isBEKaml: there is a slurp() sub, like P6's slurp. When I use it once, it's ok. On the second launch, it fails as I said

[14:03] *** xinming joined
[14:04] *** kaare_ joined
[14:04] <isBEKaml> tadzik: Oh, can't help you there, mate - though I'd have liked to. :(

[14:05] *** shi left
[14:06] *** wallberg joined
[14:08] *** TheMartianGeek left
[14:08] *** araujo left
[14:11] <isBEKaml> DOE notice that vimperl6 syntax highlighter goes crazy after lines with odd number of quotes (') ? 

[14:11] <isBEKaml> *DAE

[14:12] <isBEKaml> For eg, Yapsi.pm#L785

[14:13] <isBEKaml> https://github.com/masak/yapsi/blob/master/lib/Yapsi.pm#L785

[14:13] *** wtw left
[14:14] <isBEKaml> My workaround was to insert another quote within a comment on that line. :|

[14:15] <moritz> I know that all too well

[14:15] <isBEKaml> moritz: you lost the dangler! :)

[14:16] *** araujo joined
[14:16] <isBEKaml> moritz: did you have any other workaround than what I did? 

[14:16] *** PacoLinux joined
[14:19] <moritz> isBEKaml: open bug report on the github issue tracker :-)

[14:19] <isBEKaml> moritz: that's what I was about to do. Thought of asking it here first. :)

[14:20] <isBEKaml> moritz: Oh, and a good opportunity to use github issues 2.0! 

[14:20] <moritz> :-)

[14:21] <isBEKaml> petdance, right/ 

[14:22] <isBEKaml> or is that maintained by someone other than petdance? 

[14:22] <moritz> I think petdance

[14:22] <moritz> there's a link from perl6.org/whatever/ or so

[14:24] *** TheMartianGeek joined
[14:24] *** colomon joined
[14:28] <isBEKaml> moritz: done. :)

[14:37] *** daxim_ joined
[14:37] *** daxim left
[14:38] *** am0c left
[14:43] *** alester joined
[14:43] *** Trashlord left
[14:44] *** Trashlord joined
[14:44] *** Trashlord is now known as Guest93851

[14:46] *** yves_ joined
[14:51] *** Rotwang joined
[14:54] *** PacoLinux left
[14:55] *** donri left
[14:55] *** PacoLinux joined
[14:55] *** TheMartianGeek left
[14:57] *** awoodland joined
[14:59] *** Su-Shee left
[15:01] *** daxim_ left
[15:02] *** Guest93851 left
[15:02] *** awoodland left
[15:03] *** risou joined
[15:03] *** pmurias joined
[15:04] *** daxim_ joined
[15:07] *** justatheory joined
[15:07] <flussence_> bah, tryrakudo's broken again. I think I've got a pretty good idea for making it stay up though...

[15:11] *** daxim_ left
[15:12] *** donri joined
[15:19] *** _twitch is now known as Burning_aces

[15:19] *** plainhao joined
[15:25] *** awoodland joined
[15:28] *** mj41 joined
[15:28] *** plobsing left
[15:34] *** Su-Shee joined
[15:37] *** pernatiy left
[15:41] *** risou left
[15:42] *** risou joined
[15:46] *** Burning_aces left
[15:47] *** pmurias left
[15:47] *** Trashlord joined
[15:50] *** risou left
[15:50] *** plobsing joined
[15:50] *** risou joined
[15:51] *** Trashlord left
[15:52] *** am0c joined
[16:02] *** Trashlord joined
[16:05] *** fhelmberger left
[16:05] *** yves_ left
[16:06] *** woosley left
[16:10] *** Trashlord left
[16:12] *** Trashlord joined
[16:18] *** araujo left
[16:21] *** Trashlord left
[16:21] *** molaf joined
[16:22] *** plobsing left
[16:26] *** araujo joined
[16:26] *** araujo left
[16:26] *** araujo joined
[16:34] *** MUILTFN joined
[16:36] *** Rotwang left
[16:37] *** Alias joined
[16:39] *** Alias_ left
[16:41] * TimToady is not going to remove the indirect object syntax for various reasons.  It resonates with other uses of colon.  It decreases paren noise and increases formatting options for well-known method names like "new".  Unlike in p5, it's not ambiguous.

[16:42] <TimToady> and I don't buy slippery slope arguments, especially "doctor it hurts when I do this" arguments

[16:42] *** TheMartianGeek joined
[16:42] * TimToady goes to take out his frustrations on his house  :)

[16:44] * moritz observes a house shaking in the far distance

[16:44] <pyrimidine> I personally don't have a problem with it in p6, just not in p5

[16:44] <PerlJam> moritz: you've got good eyesight!

[16:46] *** araujo left
[16:46] *** awoodland left
[16:46] <pyrimidine> moritz: so, acc to TimToady, rakudo doesn't have that correct?

[16:46] <PerlJam> pyrimidine: rakudo doesn't have what?

[16:46] <pyrimidine> rakudo: class Foo {}; my $x = new Foo;

[16:46] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Unsupported use of C++ constructor syntax; in Perl 6 please use method call syntax at line 22, near ";"␤»

[16:47] <pyrimidine> PerlJam: indirect object syntax

[16:47] <moritz> pyrimidine: that's not indirect object syntax in p6

[16:47] <moritz> pyrimidine: that still requires a colon after the invocant. And no, NYI

[16:47] <PerlJam> pyrimidine: it does, but it's makred with a colon

[16:48] <PerlJam> er, s/makred/marked/

[16:48] <pyrimidine> ah

[16:48] <sorear> long line of code:

[16:48] <sorear> another long line of code;

[16:48] <sorear> # this is my only problem with IOS

[16:52] *** araujo joined
[16:56] *** jevin joined
[16:57] *** mj41 left
[17:00] *** TheMartianGeek left
[17:03] *** dukeleto left
[17:03] *** MayDaniel joined
[17:03] *** dukeleto joined
[17:03] *** dukeleto left
[17:03] *** jaffa4 joined
[17:04] *** dukeleto joined
[17:04] *** dukeleto left
[17:04] <isBEKaml> rakudo: class Foo; my $x = new Foo; #empty constructors, anyone? 

[17:04] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Unsupported use of C++ constructor syntax; in Perl 6 please use method call syntax at line 22, near "; #empty c"␤»

[17:05] *** dukeleto joined
[17:05] *** dukeleto left
[17:05] <sorear> class Foo { }; my Foo $x .= new;

[17:06] *** dukeleto joined
[17:06] *** dukeleto left
[17:06] <isBEKaml> rakudo: class Foo; my Foo $x .= new; 

[17:06] <p6eval> rakudo 4bf132:  ( no output )

[17:06] *** dukeleto joined
[17:06] *** dukeleto left
[17:06] <isBEKaml> hmm, so I don't need those `unsightly` braces. 

[17:07] <sorear> yes you do

[17:07] <sorear> without the braces it means something completely different

[17:07] <isBEKaml> rakudo: class Foo; my Foo $x .= new; $x.perl.say;

[17:07] <p6eval> rakudo 4bf132: OUTPUT«Foo.new()␤»

[17:07] *** dukeleto joined
[17:07] *** dukeleto left
[17:07] <isBEKaml> sorear: ^^

[17:08] *** dakkar left
[17:08] <sorear> class Foo; my Foo $x .= new; $x.perl.say means class Foo { my Foo $x .= new; $x.perl.say }

[17:08] *** dukeleto joined
[17:08] *** dukeleto left
[17:08] *** TheMartianGeek joined
[17:08] <sorear> so if you have any package-scope declarations after class Foo; they'll go into the class

[17:08] * isBEKaml headslaps!

[17:08] *** dukeleto joined
[17:08] *** dukeleto left
[17:10] <isBEKaml> the key phrase was "package scope declaration". Right, headslap! :/

[17:10] *** donri left
[17:10] *** Rotwang joined
[17:11] *** dukeleto joined
[17:11] *** dukeleto left
[17:11] *** dukeleto joined
[17:11] *** dukeleto left
[17:12] *** IllvilJa joined
[17:12] *** dukeleto joined
[17:12] *** dukeleto left
[17:13] *** TheMartianGeek left
[17:13] *** dukeleto joined
[17:13] *** dukeleto left
[17:14] *** dukeleto joined
[17:14] *** dukeleto left
[17:15] *** dukeleto joined
[17:15] *** dukeleto left
[17:15] *** dukeleto joined
[17:15] *** dukeleto left
[17:16] *** dukeleto joined
[17:16] *** dukeleto left
[17:17] *** dukeleto joined
[17:17] *** dukeleto left
[17:17] *** dukeleto joined
[17:17] *** dukeleto left
[17:18] *** dukeleto joined
[17:18] *** dukeleto left
[17:19] *** dukeleto joined
[17:19] *** dukeleto left
[17:19] *** dukeleto joined
[17:19] *** dukeleto left
[17:20] *** dukeleto joined
[17:20] *** dukeleto left
[17:20] *** dukeleto joined
[17:20] *** dukeleto left
[17:21] *** dukeleto joined
[17:21] *** dukeleto left
[17:21] *** dukeleto joined
[17:21] *** dukeleto left
[17:21] <flussence_> .oO( freenode's "excess flood" logic is counterproductive... )

[17:22] *** dukeleto joined
[17:22] *** dukeleto left
[17:24] *** Vlavv joined
[17:24] *** Mowah joined
[17:24] *** dukeleto joined
[17:24] *** dukeleto left
[17:25] *** dukeleto joined
[17:26] *** dukeleto left
[17:26] *** dukeleto joined
[17:26] *** dukeleto left
[17:27] *** dukeleto joined
[17:27] *** dukeleto left
[17:28] *** dukeleto joined
[17:28] *** dukeleto left
[17:29] *** dukeleto joined
[17:29] *** dukeleto left
[17:31] *** dukeleto joined
[17:31] *** dukeleto left
[17:31] *** dukeleto joined
[17:31] *** dukeleto left
[17:32] *** dukeleto joined
[17:32] *** dukeleto left
[17:33] *** dukeleto joined
[17:33] *** dukeleto left
[17:34] *** dukeleto joined
[17:34] *** dukeleto left
[17:34] *** birdwindupbird left
[17:34] *** dukeleto joined
[17:34] *** dukeleto left
[17:34] *** clkao joined
[17:35] *** dukeleto joined
[17:35] *** dukeleto left
[17:36] *** apejens joined
[17:36] *** dukeleto joined
[17:36] *** dukeleto left
[17:36] *** dukeleto joined
[17:36] *** dukeleto left
[17:37] *** dukeleto joined
[17:37] *** dukeleto left
[17:37] *** dukeleto joined
[17:39] *** wallberg left
[17:42] *** pernatiy joined
[17:42] *** MayDaniel left
[17:44] *** risou_ joined
[17:45] *** slavik left
[17:45] *** risou left
[17:47] *** donri joined
[17:47] *** hercynium joined
[17:47] *** icwiener joined
[17:58] *** araujo left
[18:02] <jaffa4> is there reflection in Perl6?

[18:03] *** nymacro left
[18:05] *** wallberg joined
[18:07] <arnsholt> jaffa4: That depends a bit on what you mean, but there is plenty of run-time introspection of attributes and whatnot

[18:07] <arnsholt> (I'm no expert on the details though)

[18:09] <isBEKaml> jaffa4: jnthn++ wrote an article on that some time back. MOP, I think. 

[18:09] <isBEKaml> Let me dig up that link for you ...

[18:17] <jaffa4> ok

[18:17] <jaffa4> I just wonder how far they have got

[18:17] *** araujo joined
[18:20] *** risou_ left
[18:21] <isBEKaml> rakudo: my $x = 42; $x.^HOW.perl.say;

[18:21] <p6eval> rakudo 4bf132: OUTPUT«too many positional arguments: 2 passed, 1 expected␤  in main program body at line 22:/tmp/pD02nb2G1A␤»

[18:21] <isBEKaml> rakudo: my $x = 42; $x.^methods.perl.say;

[18:21] <p6eval> rakudo 4bf132: OUTPUT«[{ ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ... }, { ...

[18:21] <p6eval> ..}, { …

[18:21] <isBEKaml> rakudo: my $x = 42; $x.^methods(:local).join(",").perl.say;

[18:21] <p6eval> rakudo 4bf132:

[18:21] <p6eval> ..OUTPUT«"perl,pred,succ,WHICH,Str,Bridge,Int,Rat,Num,sign,gcd,ACCEPTS,Real,Bool,Complex,reals,isNaN,abs,exp,ln,sqrt,roots,floor,ceiling,truncate,round,cis,unpolar,rand,sin,asin,cos,acos,tan,atan,sec,asec,cosec,acosec,cotan,acotan,sinh,asinh,cosh,acosh,tanh,atanh,sech,asech,cosech,acosech,c…

[18:22] <isBEKaml> jaffa4: ^^ that was one way

[18:22] <isBEKaml> rakudo: my $x = 42; $x.HOW.methods(:local).join(",").perl.say;

[18:22] <p6eval> rakudo 4bf132: OUTPUT«too few positional arguments: 1 passed, 2 (or more) expected␤  in main program body at line 22:/tmp/4dd1OoFPcY␤»

[18:22] <isBEKaml> rakudo: my $x = 42; $x.HOW.methods(Int).join(",").perl.say;

[18:22] <p6eval> rakudo 4bf132:

[18:22] <p6eval> ..OUTPUT«"perl,pred,succ,WHICH,Str,Bridge,Int,Rat,Num,sign,gcd,ACCEPTS,Real,Bool,Complex,reals,isNaN,abs,exp,ln,sqrt,roots,floor,ceiling,truncate,round,cis,unpolar,rand,sin,asin,cos,acos,tan,atan,sec,asec,cosec,acosec,cotan,acotan,sinh,asinh,cosh,acosh,tanh,atanh,sech,asech,cosech,acosech,c…

[18:23] <isBEKaml> that's another. 

[18:24] <isBEKaml> rakudo: my $x = 42; $x.WHAT.perl.say;

[18:24] <p6eval> rakudo 4bf132: OUTPUT«Int␤»

[18:24] <isBEKaml> so you know it's an Int. 

[18:24] <isBEKaml> for more look at S12(I think)

[18:24] <jaffa4> rakudo: join.WHAT.perl.say

[18:24] <p6eval> rakudo 4bf132: OUTPUT«Str␤»

[18:24] <isBEKaml> while I'm still searching for the link... ;)

[18:25] <tadzik> oh, what?

[18:25] <tadzik> rakudo: join.perl.say

[18:25] <p6eval> rakudo 4bf132: OUTPUT«""␤»

[18:25] <tadzik> mhm

[18:25] <moritz> $x.^methods also works

[18:26] <isBEKaml> er, join takes a blank? 

[18:26] *** Chillance joined
[18:26] <isBEKaml> rakudo: join.perl.say; # shouldn't rakudo cop out? 

[18:26] <p6eval> rakudo 4bf132: OUTPUT«""␤»

[18:26] <jaffa4> what is the response?

[18:26] <jaffa4> I cannot read it

[18:26] <isBEKaml> jaffa4: you don't have an unicode enabled irc client? 

[18:27] <isBEKaml> what irc client are you using/

[18:27] <jaffa4> kvirc

[18:27] <isBEKaml> oh, dunno about that. most of use here use xterm+irssi (for unicode) or simply xchat. 

[18:27] <moritz> jaffa4: try the online irc logs, maybe your browser displays it correctly

[18:32] *** cdarroch joined
[18:32] *** cdarroch left
[18:32] *** cdarroch joined
[18:34] *** donri left
[18:34] *** TheMartianGeek joined
[18:35] <jaffa4> ok

[18:39] <isBEKaml> jaffa4: http://use.perl.org/~JonathanWorthington/journal/36958

[18:39] <isBEKaml> anyone still use use.perl.org? and it isn't even indexed on google search.. :/

[18:39] *** araujo left
[18:40] <isBEKaml> jaffa4: you may find this of interest too..

[18:40] <isBEKaml> http://perl6advent.wordpress.com/2009/12/11/day-11-classes-attributes-methods-and-more/

[18:40] <[Coke]> no. use.perl.org is dead-ish.

[18:41] *** masak joined
[18:41] <isBEKaml> [Coke]: yeah. If anything, I'd have expected it to show up on google search(atleast some of the content in there is archived)

[18:42] <masak> evning, zebry.

[18:42] <phenny> masak: 12:46Z <mathw> tell masak yes, I did. Lojban isn't full of parentheses!

[18:42] <phenny> masak: 12:47Z <Tene> tell masak currently big sale on http://23andme.com/

[18:42] <isBEKaml> masak!

[18:42] <masak> isBEKaml! \o/

[18:43] <tadzik> masak: dobry wieczór zebro

[18:43] <isBEKaml> masak: thee how goes? 

[18:43] *** snearch joined
[18:44] <masak> isBEKaml: I feel great. I regret that I never got a Yapsi release out this month, but that's a small worry, relatively speaking. and thou, good sir, how fare you?

[18:46] <isBEKaml> masak: I'm hale and healthy, goodsir! I just got to look at Yapsi today after a long time... :)

[18:46] <masak> \o/

[18:46] <masak> isBEKaml: I almost got the ENTER phaser working locally. exciting times.

[18:47] <masak> isBEKaml: is it the first time you have a look at Yapsi since the FUTURE arrived?

[18:47] <isBEKaml> named subs, closures, repl! it feels like universe left me and ran way ahead.. good times, good times, I hope?

[18:47] <masak> yes, unless you mean runtime performance :P

[18:47] <isBEKaml> masak: yes, I was a wee bit puzzled looking at FUTURE and wondered if I was looking at tardis. :P

[18:47] <isBEKaml> and droid!

[18:48] <masak> ironically, Tardis will be least affected by FUTURE. :)

[18:49] <isBEKaml> jaffa4: here's another: http://use.perl.org/~JonathanWorthington/journal/39455

[18:49] * masak clearly missed some backlog

[18:49] <isBEKaml> jaffa4: I could go on digging up references. All you have to look for is jnthn! :P

[18:50] <isBEKaml> jaffa4: here's a list of all his entries, go have a good dive! http://use.perl.org/journal.pl?op=list&uid=6049

[18:50] <masak> jnthn also has a new blog or two.

[18:50] <moritz> this is going to sounds like the average scammer, so I apologize in advance... my wife's nephew (6 years old) is currently recovering from leukemia. I'm lookiing for people who would send him a post card to cheer him up

[18:51] <isBEKaml> masak: nah, jaffa4 was specifically asking for meta model stuff. and I remembered jnthn's old blog posts(unless they are moved somewhere than use.perl.org)

[18:51] <masak> well, jnthn is definitely still blogging about meta model stuff at his new blog, too.

[18:51] <moritz> (English, Norwegian, Swedish, French, Spanish, German, Danish would be OK)

[18:53] <isBEKaml> masak: yes, the new ones and NQP. AIUI, jaffa4 wanted references on existing functionalities.. 

[18:53] <masak> moritz: that's a great initiative. is there an address involved?

[18:53] <moritz> masak: address comes via /msg

[18:53] <tadzik> moritz: how long could the postcard go?

[18:53] <masak> isBEKaml: well, 6model is largely implemented, IIUC.

[18:53] <moritz> tadzik: hum? it's usually just a quarter of a page, a postcard :-)

[18:54] <isBEKaml> masak: well, it shows I have been out too long.. :/

[18:54] <tadzik> moritz: no, I mean the delivery time :)

[18:54] <tadzik> my CLA for TPF has never come to the US I think :)

[18:54] *** slavik joined
[18:54] <moritz> tadzik: just postal mail to .de

[18:54] <isBEKaml> moritz: that's a great thing you're doing... address please

[18:55] <moritz> isBEKaml: sent by personal message

[18:55] <tadzik> moritz: I can send one too

[18:56] <moritz> thanks in advance to masak++, isBEKaml++ and tadzik++

[18:56] *** TheMartianGeek left
[18:58] *** araujo joined
[18:58] <isBEKaml> moritz: PM'd you. 

[18:58] <masak> moritz: oh, and it's not a scam until you promise us money :P

[18:58] <moritz> isBEKaml: re-sent, hope you got it now

[18:59] <moritz> masak: I know, it's just the usual "somebody's i know around 3 corners is really sick..."

[18:59] <moritz> except that I know him personally :-)

[19:00] <isBEKaml> crap, how do you unignore in irssi...? I did that and I still didn't get it.. 

[19:01] *** [hercynium] joined
[19:01] *** [hercynium] left
[19:01] *** [hercynium] joined
[19:02] <moritz> isBEKaml: http://perlpunks.de/paste/show/4da35021.791e.2b4 expires in 1 hour, password foobar

[19:03] <isBEKaml> moritz: got it. thanks. 

[19:03] *** hercynium left
[19:03] *** [hercynium]_ joined
[19:03] *** [hercynium]_ left
[19:03] *** [hercynium]_ joined
[19:05] *** leprevost left
[19:05] <masak> I just want to declare that today, on the CQRS course, when we were asked to implement a simple value object with TDD, and got to choose implementation language, I took one look at Eclipse, went "nah", and fired up tote/rakudo ;)

[19:05] <masak> I was among the first to finish. :)

[19:05] <moritz> :-)

[19:05] *** [hercynium] left
[19:06] <isBEKaml> masak: :)

[19:07] *** demetro joined
[19:08] <masak> the big point of that exercise, by the way, is that getter methods are contrary to the encapsulation that OO provides. and that TDD can be done just fine even without them.

[19:09] <isBEKaml> masak: I think TDD doesn't require all of OO. The whole point of TDD is just that, tests and adherence to specs/behaviour. 

[19:10] <isBEKaml> irssi can be an infuriating at times. :/

[19:11] <masak> isBEKaml: yes. testing against getters causes a lot of bad coupling.

[19:11] <moritz> masak: did your instructor cope well with your choice of language?

[19:12] <isBEKaml> masak: :} I just tell people, I won't use java if given a choice. 

[19:12] *** masak` joined
[19:12] <isBEKaml> masak: seen junit? makes testing a lot easier, if you ask me.. 

[19:13] <masak`> isBEKaml: seen it, used it quite a bit.

[19:13] <isBEKaml> anyway, enough about java!

[19:13] <masak`> and yes, it does make testing easier.

[19:13] *** plobsing joined
[19:14] <masak`> but I only settled in with JUnit after having tried to use it two or three times, each time ending up re-implementing a small subset of TAP in Java instead :)

[19:15] *** masak left
[19:16] <isBEKaml> that's insane. I thought java can never be influenced by anything. perl6 now ventures there!

[19:16] *** masak` is now known as masak

[19:16] <jaffa4> TDD?

[19:16] <isBEKaml> Test Driven Development. 

[19:16] <masak> jaffa4: Test-Driven Development.

[19:17] *** plobsing left
[19:18] <isBEKaml> jaffa4: you got those links I sent you? you can look at them or bug jnthn here if you don't see them quite right.. ;)

[19:18] <isBEKaml> jnthn++

[19:18] *** plobsing joined
[19:20] <jaffa4> got them

[19:23] <slavik> tdd -> test before code?

[19:24] <masak> slavik: no, but the two are related.

[19:24] <isBEKaml> slavik: that would work too. the idea is to see if there's anything that you left out and see that things actually break where they are supposed to. 

[19:25] <masak> slavik: TDD could be used to apply tests after the code was written, too. but test-first goes really well with TDD.

[19:25] <slavik> isBEKaml: but if you're coding the test, who is going to test the test?

[19:26] <isBEKaml> slavik: you. :)

[19:26] <slavik> D:

[19:28] <tadzik> heh, that reminds me of this roast commit of mine...

[19:28] <moritz> isBEKaml: yes, ok

[19:28] <moritz> isBEKaml: you still seem to not receive my private messages :-)

[19:28] *** plainhao left
[19:28] <isBEKaml> moritz: I received it. 

[19:28] <tadzik> https://github.com/perl6/roast/commit/f8adce3

[19:28] <tadzik> that one :)

[19:29] <slavik> rofl

[19:29] <tadzik> (:

[19:29] <tadzik> I resisted the tempation to check who wrote that in the first place :)

[19:29] <moritz> it was probably me

[19:30] <slavik> tadzik: I am not better than you, how do I find out?

[19:30] <slavik> we gotta make fun of someone :D

[19:30] * moritz is notorious for being bad at basic arithmetic

[19:30] <moritz> slavik: git blame

[19:30] <slavik> I don't have it copied

[19:30] <slavik> but git is awesome :D

[19:31] <tadzik> moritz: that's usual. When you do complicated integrals, you usually make a mistake in multiplication

[19:31] <arnsholt> Or a sign error. I always make sign errors

[19:31] <isBEKaml> tadzik: :O maybe you misplaced something? 

[19:32] <isBEKaml> simple. don't do arithmetic!

[19:32] *** alester left
[19:45] <tadzik> who doesn't know https://github.com/perl6/ecosystem/wiki/Most-Wanted%3A-Modules-to-write-port ?

[19:45] <tadzik> this page needs more attention and a better link

[19:45] <tadzik> something like modules.perl6.org/most-wanted maybe?

[19:45] <isBEKaml> tadzik: I'd suggest putting that out on perl6.org

[19:45] <isBEKaml> or rakudo.org

[19:46] <tadzik> it is somewhere on perl6.org

[19:46] <tadzik> but I hid it so good that even I don't know where it is

[19:46] <moritz> getting-started maybe?

[19:46] <moritz> which itself isn't linked anywhere?

[19:47] *** TheMartianGeek joined
[19:47] <moritz> f*ck, perl6.org still links to proto as the module installer

[19:47] <masak> :(

[19:48] <masak> no wonder proto won't die!

[19:48] *** plobsing left
[19:48] <tadzik> (:

[19:48] <tadzik> where does it?

[19:48] <moritz> front page

[19:48] <moritz> and modules.perl6.org too

[19:48] * masak jumps on the back of the proto zombie, drags it into a cellar and bars the cellar door shut

[19:48] <tadzik> I thought it mentions neutro

[19:48] <tadzik> which is bad too

[19:49] <isBEKaml> that still shows proto!

[19:49] <masak> we do eat through module installers, don't we? :)

[19:49] <jaffa4> what is  >>

[19:49] <moritz> jaffa4: please provide more context

[19:49] *** mj41 joined
[19:49] <jaffa4> say Pair.^attributes(:local)>>.name.join(", ");

[19:49] <colomon> hyper

[19:50] <moritz> it calls the .name method not on the return list, but on each item in the list separately

[19:50] <colomon> and in no specific order

[19:50] <isBEKaml> that means join everything calling name on that and print

[19:50] <tadzik> moritz: yeah, we have like... five?

[19:50] <isBEKaml> that can be used on anything that returns a list (more than a single item, generally)

[19:50] <isBEKaml> rakudo: say Pair.^attributes(:local)>>.name.join(", ");

[19:50] <p6eval> rakudo 4bf132: OUTPUT«␤»

[19:51] <isBEKaml> heh. 

[19:51] <moritz> isBEKaml: Pair is defined in PIR

[19:51] <moritz> isBEKaml: which is why the introspection on it still fails

[19:51] <isBEKaml> moritz: ah. new thing? 

[19:52] *** awwaiid left
[19:52] <isBEKaml> moritz: I seem to remember seeing Pair.pm or something.. 

[19:52] <moritz> isBEKaml: yes, but it only augments Pair.pir

[19:52] *** awwaiid joined
[19:52] <moritz> isBEKaml: I tried to move it to all perl 6, but it's used in the compilation fairly early

[19:52] <isBEKaml> moritz: ah... 

[19:53] <dalek> perl6.org: 80d7635 | moritz++ | source/index.html:

[19:53] <dalek> perl6.org: [/] link to modules, not Whatever

[19:53] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/80d7635fe8

[19:54] <jaffa4> rakudo: say Num.^methods(:local)>>.name.join(", ");

[19:54] <p6eval> rakudo 4bf132: OUTPUT«pred, succ, WHICH, Str, Bridge, Int, Rat, Num, isNaN, ln, perl, sqrt, floor, ceiling, rand, sin, asin, cos, acos, tan, atan, sec, asec, sinh, asinh, cosh, acosh, tanh, atanh, sech, asech, cosech, acosech, cosec, acosec, cotan, acotan, cotanh, acotanh, atan2, ACCEPTS, Real,

[19:54] <p6eval> ..Bool, Co…

[19:54] * [Coke] doesn't use junit, but does use mxunit

[19:54] <jaffa4> rakudo: say Str.^methods(:local)>>.name.join(", ");

[19:54] <p6eval> rakudo 4bf132: OUTPUT«ACCEPTS, perl, pred, succ, WHICH, Bool, Str, encode␤»

[19:55] <jaffa4> rakudo: say Str.methods(:local)>>.name.join(", ");

[19:55] <p6eval> rakudo 4bf132: OUTPUT«Method 'methods' not found for invocant of class ''␤  in main program body at line 22:/tmp/pn29XL0e3r␤»

[19:55] <isBEKaml> [Coke]: flash? 

[19:55] <jaffa4> rakudo: say Int.methods(:local)>>.name.join(", ");

[19:55] <p6eval> rakudo 4bf132: OUTPUT«Method 'methods' not found for invocant of class ''␤  in main program body at line 22:/tmp/IPeuFmkFmz␤»

[19:55] <jaffa4> rakudo: say Int.^methods(:local)>>.name.join(", ");

[19:55] <[Coke]> isBEKaml: ColdFusion

[19:55] <dalek> perl6.org: 7dca706 | moritz++ | source/index.html:

[19:55] <dalek> perl6.org: [/] the casual visitor will find niecza far more interesting than viv

[19:55] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/7dca706a70

[19:55] <p6eval> rakudo 4bf132: OUTPUT«perl, pred, succ, WHICH, Str, Bridge, Int, Rat, Num, sign, gcd, ACCEPTS, Real, Bool, Complex, reals, isNaN, abs, exp, ln, sqrt, roots, floor, ceiling, truncate, round, cis, unpolar, rand, sin, asin, cos, acos, tan, atan, sec, asec, cosec, acosec, cotan, acotan, sinh, asinh,

[19:55] <p6eval> ..cosh, a…

[19:55] *** rhr joined
[19:56] <[Coke]> (my $dayjob)

[19:56] <isBEKaml> [Coke]: wow. (not sarcastic, but really, wow)

[19:57] <jaffa4> rakudo: say Int.^methods(:global)>>.name.join(", ");

[19:57] <p6eval> rakudo 4bf132: OUTPUT«perl, pred, succ, WHICH, Str, Bridge, Int, Rat, Num, sign, gcd, ACCEPTS, Real, Bool, Complex, reals, isNaN, abs, exp, ln, sqrt, roots, floor, ceiling, truncate, round, cis, unpolar, rand, sin, asin, cos, acos, tan, atan, sec, asec, cosec, acosec, cotan, acotan, sinh, asinh,

[19:57] <p6eval> ..cosh, a…

[19:57] <isBEKaml> [Coke]: I heard of CF long time back from an old friend. Never heard anything since. 

[19:57] <jaffa4> DId i just return all methods that use int as a argument?

[19:58] <jaffa4> rakudo: cos(i)

[19:58] <PerlJam> jaffa4: no

[19:58] <moritz> s/argument/invcant/

[19:58] <p6eval> rakudo 4bf132:  ( no output )

[19:58] <jaffa4> rakudo: cos(i1)

[19:58] <isBEKaml> jaffa4: :global is default when you don't mention it. 

[19:58] <p6eval> rakudo 4bf132: OUTPUT«Could not find sub &i1␤  in main program body at line 22:/tmp/7tMZNQtprQ␤»

[19:58] <[Coke]> there are 2 OS engines that implement it. We're still using the commercial one (adobe) here. it's ... OK.

[19:58] <jaffa4> rakudo: say cos(i1)

[19:58] <p6eval> rakudo 4bf132: OUTPUT«Could not find sub &i1␤  in main program body at line 22:/tmp/sxkgc4bZgr␤»

[19:58] <jaffa4> rakudo: say cos(1)

[19:58] <p6eval> rakudo 4bf132: OUTPUT«0.54030230586814␤»

[19:58] <tadzik> rakudo: say cos(i)

[19:58] <p6eval> rakudo 4bf132: OUTPUT«1.54308063481524 + -0i␤»

[19:58] <jaffa4> rakudo: say 1.cos

[19:58] <tadzik> nice try :)

[19:58] <p6eval> rakudo 4bf132: OUTPUT«0.54030230586814␤»

[19:59] * [Coke] wonders why cos(i) prints out -0i.

[19:59] * isBEKaml too

[19:59] * tadzik wonders why cos(i) even works

[19:59] <tadzik> should it?

[19:59] <isBEKaml> no imagination!

[19:59] <tadzik> :D

[19:59] <tadzik> probably

[20:00] <moritz> why shouldn't it?

[20:00] <tadzik> hmm

[20:00] <jaffa4> rakudo: say arccos(i)

[20:00] <p6eval> rakudo 4bf132: OUTPUT«Could not find sub &arccos␤  in main program body at line 22:/tmp/85awXWbwDK␤»

[20:00] <[Coke]> wolframalpha.com sayz yes.

[20:00] <isBEKaml> wait a minute, probably it was treating it on a polar coordinate. 

[20:00] <tadzik> well, division is defined for Complexes, so I guess it's alright

[20:01] <moritz> there's a perfectly fine definition for sin(), cos() etc. in terms of exp()

[20:01] <jaffa4> rakudo: say 1i+4

[20:01] <p6eval> rakudo 4bf132: OUTPUT«4 + 1i␤»

[20:01] <jaffa4> rakudo: say (1i+4)*(3i)

[20:01] <p6eval> rakudo 4bf132: OUTPUT«-3 + 12i␤»

[20:01] <dalek> modules.perl6.org: 81d4bd8 | moritz++ | web/index.tmpl:

[20:01] <dalek> modules.perl6.org: [web] link to Pls instead of proto+neutro

[20:01] <dalek> modules.perl6.org: review: https://github.com/perl6/modules.perl6.org/commit/81d4bd8bf7

[20:02] <jaffa4> rakudo: say sqrt(-1)

[20:02] <p6eval> rakudo 4bf132: OUTPUT«NaN␤»

[20:02] <jaffa4> it could say i,

[20:02] <frooh> arcanez: wesome

[20:02] <frooh> woops

[20:02] <moritz> rakudo: say sqrt(-1 + 0i)

[20:02] <p6eval> rakudo 4bf132: OUTPUT«0 + 1i␤»

[20:03] <moritz> jaffa4: it could, but we decided against it

[20:03] <moritz> not all people know about complex numbers

[20:03] <moritz> so we only return them when explicitly requested

[20:03] <jaffa4> it makes sens

[20:03] <jaffa4> e

[20:03] <[Coke]> moritz: is there a pragma to turn that always on?

[20:04] <moritz> [Coke]: no.

[20:04] <jaffa4> What is >> again?

[20:04] <moritz> jaffa4: same as before. If you forgot, backlog

[20:04] <moritz> [Coke]: but if you are familiar with complex numbers, you can be bothered to use .roots(2) and pick whatever leaf of the complex plain you want :-)

[20:05] <moritz> rakudo: say ~2.roots(2)

[20:05] <p6eval> rakudo 4bf132: OUTPUT«1.4142135623731 + 0i -1.4142135623731 + 1.73191211247099e-16i␤»

[20:05] <jaffa4> say Int.^methods(:global)

[20:05] <jaffa4> raudo: say Int.^methods(:global)

[20:05] <jaffa4> rakudo: say Int.^methods(:global)

[20:05] <p6eval> rakudo 4bf132:

[20:05] <p6eval> ..OUTPUT«perlpredsuccWHICHStrBridgeIntRatNumsigngcdACCEPTSRealBoolComplexrealsisNaNabsexplnsqrtrootsfloorceilingtruncateroundcisunpolarrandsinasincosacostanatansecaseccosecacoseccotanacotansinhasinhcoshacoshtanhatanhsechasechcosechacosechcotanhacotanhatan2Numericconjugateloglog10to-radiansf…

[20:05] <Tene> masak: http://www.happyprog.com/tdgotchi/ is cute and silly

[20:07] <isBEKaml> rakudo: Int.^methods.take(5).join(", ").say

[20:07] <jaffa4> Are macros working?

[20:07] <p6eval> rakudo 4bf132: OUTPUT«Method 'take' not found for invocant of class 'Array'␤  in main program body at line 22:/tmp/NYkiko95_r␤»

[20:07] <Tene> jaffa4: no.

[20:07] *** _jaldhar left
[20:07] *** _jaldhar joined
[20:08] <isBEKaml> rakudo: Array.^methods(:local).perl.say

[20:08] <p6eval> rakudo 4bf132: OUTPUT«[{ ... }, { ... }, { ... }, { ... }, { ... }]␤»

[20:09] <isBEKaml> rakudo: Array.^methods(:local)>>.name.join(", ")

[20:09] <p6eval> rakudo 4bf132:  ( no output )

[20:09] <jaffa4> rakudo: say 1|3

[20:09] <isBEKaml> rakudo: Array.^methods(:local)>>.name.join(", ").perl.say

[20:09] <p6eval> rakudo 4bf132: OUTPUT«any(1, 3)␤»

[20:09] <p6eval> rakudo 4bf132: OUTPUT«"new, at_pos, perl, splice, delete"␤»

[20:09] <isBEKaml> rakudo: Array.^methods>>.name.join(", ").perl.say

[20:09] <p6eval> rakudo 4bf132: OUTPUT«"new, at_pos, perl, splice, delete, new, Capture, eager, elems, flat, iterator, list, munch, Bool, Num, Str, exists, fmt, map, perl, reverse, rotate, sort, pop, push, shift, unshift, ACCEPTS, at_pos, hash, of, item, Numeric, Int, Num, Str, elems, fmt, list, Numeric, Real, Int,

[20:09] <p6eval> ..Rat,…

[20:09] <jaffa4> rakudo: say (1,2,3) >> join(":::")

[20:09] <masak> Tene: ah. :)

[20:09] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Unsupported use of >> to do right shift; in Perl 6 please use +> or ~> at line 22, near "join(\":::\""␤»

[20:10] <masak> Tene: very much the same feel/principle as with tote, in fact.

[20:10] <jaffa4> rakudo: say (1,2,3) ==> join(":::")

[20:10] <isBEKaml> rakudo: Int.^methods.elems.take(5).join(", ").say

[20:10] <p6eval> rakudo 4bf132: OUTPUT«123␤»

[20:10] <p6eval> rakudo 4bf132: OUTPUT«Method 'take' not found for invocant of class 'Integer'␤  in main program body at line 22:/tmp/ANkvl_8jnU␤»

[20:10] <jaffa4> rakudo: say ((1,2,3) ==> join(":::"))

[20:10] <p6eval> rakudo 4bf132: OUTPUT«1:::2:::3␤»

[20:10] <isBEKaml> rakudo: Int.^methods.list.take(5).join(", ").say

[20:10] <p6eval> rakudo 4bf132: OUTPUT«Method 'take' not found for invocant of class 'Array'␤  in main program body at line 22:/tmp/xZkUpxhPGz␤»

[20:11] <moritz> \o/ perl6.org updated

[20:11] <masak> rakudo: 1,2,3 ==> join(":::") ==> say

[20:11] <p6eval> rakudo 4bf132: OUTPUT«1:::2:::3␤»

[20:11] <masak> moritz++

[20:12] <jaffa4> rakudo: say (1 ==> join(":::"))

[20:12] <p6eval> rakudo 4bf132: OUTPUT«1␤»

[20:12] <jaffa4> rakudo: say PI

[20:12] <p6eval> rakudo 4bf132: OUTPUT«Could not find sub &PI␤  in main program body at line 22:/tmp/rsMY6_hNkB␤»

[20:13] <moritz> rakudo: say exp(1i * pi)

[20:13] <p6eval> rakudo 4bf132: OUTPUT«-1 + 1.22464679914735e-16i␤»

[20:13] <isBEKaml> moritz: "Whatever" still shows proto?

[20:13] <moritz> isBEKaml: I just noticed, updating...

[20:14] <dalek> perl6.org: 306179c | moritz++ | source/ (2 files):

[20:14] <dalek> perl6.org: more module tweaks

[20:14] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/306179ce71

[20:14] <jaffa4> rakudo: pi

[20:14] <p6eval> rakudo 4bf132:  ( no output )

[20:14] <jaffa4> rakudo: say pi

[20:14] <p6eval> rakudo 4bf132: OUTPUT«3.14159265358979␤»

[20:14] <jaffa4> What is the binary or operator?

[20:14] <flussence_> +|

[20:15] *** donri joined
[20:15] <jaffa4> rakudo: say 3+|5

[20:15] <p6eval> rakudo 4bf132: OUTPUT«7␤»

[20:15] <slavik> what's +| supposed to do?

[20:15] <jaffa4> rakudo: say 3+|5+|255

[20:15] <p6eval> rakudo 4bf132: OUTPUT«255␤»

[20:15] <isBEKaml> slavik: 3 | 5

[20:15] <PerlJam> slavik: bitwise-or

[20:16] <jaffa4> rakudo: say 3+|5+|255+&4

[20:16] <flussence_> | in numeric context

[20:16] <p6eval> rakudo 4bf132: OUTPUT«7␤»

[20:16] <PerlJam> slavik: numeric bitwise or

[20:16] <slavik> +| in boolean?

[20:16] <isBEKaml> slavik: no. bitwise. 

[20:16] <jaffa4> it shoud be 4

[20:17] <flussence_> rakudo: say (3+|5+|255)+&4

[20:17] <p6eval> rakudo 4bf132: OUTPUT«4␤»

[20:17] <jaffa4> you are right

[20:17] <jaffa4> precedence

[20:17] <jaffa4> rakudo: say !3

[20:17] <p6eval> rakudo 4bf132: OUTPUT«Bool::False␤»

[20:17] <jaffa4> rakudo: say +!3

[20:18] <p6eval> rakudo 4bf132: OUTPUT«0␤»

[20:18] <jaffa4> rakudo: say +^3

[20:18] <p6eval> rakudo 4bf132: OUTPUT«-4␤»

[20:18] <jaffa4> rakudo: say 0+!3

[20:18] <p6eval> rakudo 4bf132: OUTPUT«0␤»

[20:18] <jaffa4> rakudo: say 1+^1

[20:18] <p6eval> rakudo 4bf132: OUTPUT«0␤»

[20:19] <jaffa4> rakudo: say 3+^1

[20:19] <p6eval> rakudo 4bf132: OUTPUT«2␤»

[20:19] <jaffa4> rakudo: say ~3

[20:19] <p6eval> rakudo 4bf132: OUTPUT«3␤»

[20:19] <jaffa4> rakudo: say +~3

[20:19] <p6eval> rakudo 4bf132: OUTPUT«3␤»

[20:19] <jaffa4> What is completenter?

[20:20] <jaffa4> rakudo: say 3~3~''oo'

[20:20] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Confused at line 22, near "say 3~3~''"␤»

[20:21] <flussence_> there's no complement operator, since it's not possible to know in advance what bitsize you expect the output to be.

[20:21] <flussence_> you'll have to xor with 0xFFFFFFFF if you want a 32-bit complement

[20:22] <PerlJam> It would be nice to have a compliment operator though ...

[20:22] <PerlJam> "Your hair looks nice"

[20:22] <tadzik> :D

[20:22] <PerlJam> "you have pretty eyes"

[20:22] <tadzik> where is this unicode heart...

[20:22] <tadzik> .u heart

[20:22] <phenny> U+2766 FLORAL HEART (❦)

[20:22] <jaffa4> rakudo: say 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

[20:22] <tadzik> notmuch

[20:22] <p6eval> rakudo 4bf132: OUTPUT«-1␤»

[20:22] <isBEKaml> .u love

[20:22] <phenny> isBEKaml: Sorry, no results for 'love'.

[20:22] <isBEKaml> blah!

[20:23] <tadzik> poor, ronery phenny

[20:23] <jaffa4> rakudo: say 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF+1

[20:23] <p6eval> rakudo 4bf132: OUTPUT«0␤»

[20:23] <tadzik> no results for Love :(

[20:23] <jaffa4> rakudo: say 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF*500

[20:23] <isBEKaml> phenny: love thyself!

[20:23] <p6eval> rakudo 4bf132: OUTPUT«-500␤»

[20:23] <tadzik> hugme: hug phenny

[20:23] <tadzik> oh, love is not there again

[20:24] <tadzik> how depressing

[20:24] *** hugme joined
[20:24] *** ChanServ sets mode: +v hugme

[20:24] <isBEKaml> phenny: tell yourself to love thyself. 

[20:24] <phenny> isBEKaml: I'll pass that on when yourself is around.

[20:24] <moritz> hugme: hug tadzik 

[20:24] * hugme hugs tadzik

[20:24] <tadzik> moritz: thanks, I missed that :)

[20:24] <jaffa4> rakudo: say 0xFFFFFFFFFFFF*500

[20:24] <p6eval> rakudo 4bf132: OUTPUT«1.40737488355328e+17␤»

[20:24] <isBEKaml> hugme: hug phenny

[20:24] * hugme hugs phenny

[20:24] <isBEKaml> phenny: hug back!

[20:24] <jaffa4> rakudo: say 0xFFFFFFF*500

[20:24] <p6eval> rakudo 4bf132: OUTPUT«134217727500␤»

[20:27] *** maja joined
[20:27] <tadzik> hugme: hug maja

[20:27] * hugme hugs maja

[20:27] <tadzik> maja: welcome :)

[20:27] <maja> hi :)

[20:28] *** wallberg left
[20:28] <isBEKaml> whoa, tadzik is being especially harsh on moritz... 

[20:28] <isBEKaml> silly pytos. 

[20:28] <tadzik> :P

[20:29] <tadzik> I actually wrote that in the first place, and left it there w/o correcting for -Ofun

[20:29] *** maja left
[20:29] <jaffa4> niecza: say 0x333

[20:29] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«819␤»

[20:29] <jaffa4> niecza: say 0x333*700

[20:29] <masak> hiya, maja.

[20:29] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«573300␤»

[20:29] <masak> dang, I missed maja :)

[20:29] <jaffa4> niecza: say 0x333fffffffffffffffff*700

[20:30] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«1.69414897572948E+26␤»

[20:30] <jaffa4> niecza: say 0x333fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff*700

[20:30] <isBEKaml> masak: maja means great fun in my native tongue. 

[20:30] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«1.62267234429247E+79␤»

[20:30] <isBEKaml> :)

[20:30] <jaffa4> niecza: say 0x333fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff*700

[20:30] <tadzik> isBEKaml: if you knew what I know... :)

[20:30] <p6eval> niecza v4-47-gfffa4cd: OUTPUT«1.87892620893239E+156␤»

[20:30] <masak> isBEKaml: sounds like your language is properly huffmannized.

[20:31] <isBEKaml> masak: oh, you don't know... :P

[20:31] <tadzik> isBEKaml: what language would that be?

[20:31] <masak> probably not :)

[20:31] <isBEKaml> tadzik: you got masak in on your joke too? slavic tongues always confound... :D

[20:32] <tadzik> isBEKaml: what joke? :)

[20:32] <jaffa4> maja kniga

[20:32] * tadzik wonders to what word in Polish "masak" is close

[20:32] <masak> 'maska', apparently.

[20:32] <tadzik> yeah

[20:32] <isBEKaml> tadzik: "01:59 < tadzik> isBEKaml: if you knew what I know... :)"

[20:33] <masak> tadzik: yes. spill it out. what is it that you know? :)

[20:33] <tadzik> oh, you know, stuff :)

[20:33] <isBEKaml> masak: maska again. bittersweet, salty. :D

[20:33] <tadzik> maja is a close friend of mine apparently

[20:33] <moritz> tadzik: oh, did I typo somewhere?

[20:33] <tadzik> :)

[20:33] <tadzik> moritz: aye, the commit message

[20:33] <masak> tadzik: we're geeks, you can't expect us to be happy about your withholding information from us! :)

[20:33] <moritz> if so, please correct it

[20:34] <moritz> ah

[20:34] <isBEKaml> moritz: https://github.com/perl6/modules.perl6.org/commit/81d4bd8bf7dde4fe58c3ef148747a04743e285c8#commitcomment-337656

[20:34] <tadzik> moritz: I commented on a commit

[20:34] <tadzik> masak: fine. Whatcha wanna know? :)

[20:34] <moritz> tadzik: I just searched the files for the wrong speling :-)

[20:34] <masak> tadzik: you sir, are a tease.

[20:34] <tadzik> masak: you know this variant of Truth of Dare in which everyone's afraid to say "Dare"? :)

[20:34] <moritz> wha'ever

[20:34] <isBEKaml> masak: huffmanised tease. 

[20:35] <slavik> speaking of slavic languages ... kind of interesting that it is quiet a large family of languages which are very familiar

[20:35] <masak> tadzik: actually, I don't. I don't play that game nearly enough :)

[20:35] <isBEKaml> exactly what I meant. Swedish isn't that far off the slavic family from polish. 

[20:35] <masak> tadzik: why would one be afraid to say "Dare"? isn't Dare the non-scary option?

[20:35] <slavik> except that all the names have a lot of jjjjjkkkkkk and such

[20:36] <moritz> good for vim users :-)

[20:36] <slavik> vowels are there for a reason!!!!!!!!!!!!!!!!!! :P

[20:36] <masak> isBEKaml: er. Swedish isn't a slavic language.

[20:36] <tadzik> masak: it depends on the company :)

[20:36] <slavik> moritz: maybe vim users invented it?

[20:36] <moritz> :-)

[20:36] <isBEKaml> masak: Scandinavian,okay. :)

[20:36] <tadzik> in colemak j and k are pretty far apparently

[20:36] <tadzik> j is on qwerty 'y', k is on 'n'

[20:36] <masak> tadzik: you do know that jnthn and I aren't the only people in Sweden? ;)

[20:37] <isBEKaml> masak: to be honest, I didn't include swedish in slavic family actually. :)

[20:37] <tadzik> masak: yeah, I know :) What are you up to?

[20:37] <tadzik> or is that a Truth or Dare question? :P

[20:38] *** icwiener left
[20:38] <slavik> masak: there are more than 2 people in Sweden?!?!

[20:38] <slavik> no wait ... there are 4

[20:38] <slavik> the other 2 are professional starcraft2 players

[20:38] <masak> tadzik: if only you knew what I'm up to... :P

[20:38] <slavik> actually, make that 5

[20:38] <masak> yeah. the King of Sweden, too.

[20:38] <tadzik> slavik: your nick is pretty close to "Słowik"

[20:38] <tadzik> and IKEA

[20:38] <tadzik> I don't think that's one person

[20:38] <masak> IKEA is a company, not a person.

[20:38] <isBEKaml> tadzik: and slavic

[20:39] <slavik> holy crap, 60% of Swedish population is made up of professional sc2 players

[20:39] <tadzik> oh, so you all work for IKEA?

[20:39] <tadzik> that explains LackRack

[20:39] <slavik> that explains the poor packaging

[20:39] <slavik> stop being lazy!!!

[20:39] <isBEKaml> that explains the constant movement! 

[20:40] <jaffa4> rakudo: my $b=< 1 2 3>;

[20:40] <p6eval> rakudo 4bf132:  ( no output )

[20:40] <jaffa4> rakudo: my $b=< 1 2 3>; say $b

[20:40] <p6eval> rakudo 4bf132: OUTPUT«1 2 3␤»

[20:40] <jaffa4> rakudo: my @b=< 1 2 3>; say $b

[20:40] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Symbol '$b' not predeclared in <anonymous> (/tmp/Kz6uNmuqO5:22)␤»

[20:40] <jaffa4> rakudo: my @b=< 1 2 3>; say @b

[20:41] <p6eval> rakudo 4bf132: OUTPUT«123␤»

[20:41] <jaffa4> rakudo: my @b=< 1 2 3>; say @b*3

[20:41] <p6eval> rakudo 4bf132: OUTPUT«9␤»

[20:41] <jaffa4> rakudo: my @b=< 1 2 3 1>; say @b*3

[20:41] <p6eval> rakudo 4bf132: OUTPUT«12␤»

[20:41] <jaffa4> rakudo: my @b=< 1 2 3 1> >> sin; say @b*3

[20:41] *** mj41 left
[20:41] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Unsupported use of >> to do right shift; in Perl 6 please use +> or ~> at line 22, near "sin; say @"␤»

[20:42] <jaffa4> rakudo: my @b=< 1 2 3 1> ; @b >> sin; say @b*3

[20:42] <tadzik> »

[20:42] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Unsupported use of >> to do right shift; in Perl 6 please use +> or ~> at line 22, near "sin; say @"␤»

[20:42] <tadzik> hrm

[20:42] <jaffa4> rakudo: my @b=< 1 2 3 1> ; @b >> sin; say @b

[20:42] <tadzik> rakudo: my @b=< 1 2 3 1> ; @b » sin; say @b*3

[20:42] <masak> jaffa4: it's @b>>.sin

[20:42] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Unsupported use of >> to do right shift; in Perl 6 please use +> or ~> at line 22, near "sin; say @"␤»

[20:42] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Confused at line 22, near "@b \x{bb} sin; "␤»

[20:42] <jaffa4> rakudo: my @b=< 1 2 3 1> ; @b>> sin; say @b

[20:43] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Unsupported use of >> to do right shift; in Perl 6 please use +> or ~> at line 22, near "sin; say @"␤»

[20:43] <tadzik> still an LTA message for me

[20:43] <masak> jaffa4: it's @b>>.sin

[20:43] <masak> jaffa4: but that won't change @b itself.

[20:43] <masak> only calculate the answer and throw it away.

[20:43] *** donri left
[20:43] <Tene> do we support hyper addign into aggregates?  @b>>.=sin ?

[20:43] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b>> sin; say @b

[20:43] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Unsupported use of >> to do right shift; in Perl 6 please use +> or ~> at line 22, near "sin; say @"␤»

[20:44] <jaffa4> I cannot see what is wrong

[20:44] <Tene> rakudo: my @b = < 1 2 3 1 >; my @c=@b>>.sin; say @b

[20:44] <p6eval> rakudo 4bf132: OUTPUT«1231␤»

[20:44] <masak> jaffa4: you're missing a dot.

[20:44] <Tene> jaffa4: you left out the .

[20:44] <Tene> rakudo: my @b = < 1 2 3 1 >; @b>>.=sin; say @b

[20:44] <p6eval> rakudo 4bf132: OUTPUT«0.8414709848078970.9092974268256820.1411200080598670.841470984807897␤»

[20:44] <masak> \o/

[20:44] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b>>.  sin; say @b

[20:44] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Confused at line 22, near "my @c=@b>>"␤»

[20:44] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b>>.sin; say @b

[20:45] <p6eval> rakudo 4bf132: OUTPUT«1231␤»

[20:45] <isBEKaml> rakuod: my @b=<1 2 3 4>; my @c= (@b>>.sin); say @c.perl;

[20:45] <isBEKaml> rakudo: my @b=<1 2 3 4>; my @c= (@b>>.sin); say @c.perl;

[20:45] <p6eval> rakudo 4bf132: OUTPUT«[0.841470984807897, 0.909297426825682, 0.141120008059867, -0.756802495307928]␤»

[20:45] <isBEKaml> >>.= does inplace? hmmm

[20:46] <masak> well, .= does in-place.

[20:46] <jaffa4> rakudo: my @b=< < 2 3 1> 

[20:46] <p6eval> rakudo 4bf132:  ( no output )

[20:46] <masak> the >> merely distributes the calculation on the elements.

[20:46] <jaffa4> rakudo: my @b=< < 2 3 1>; say @b 

[20:46] <p6eval> rakudo 4bf132: OUTPUT«<231␤»

[20:46] <isBEKaml> masak: I forgot context. I was speaking about >> alone. :)

[20:47] <jaffa4> rakudo: my @b=< < 2 3 >>; say @b 

[20:47] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Confused at line 22, near "my @b=< < "␤»

[20:47] <jaffa4> rakudo: my @b=< < 2 3 \>>; say @b 

[20:47] <p6eval> rakudo 4bf132: OUTPUT«<23>␤»

[20:47] <jaffa4> rakudo: my @b=< < 2 3 \> >; say @b 

[20:47] <p6eval> rakudo 4bf132: OUTPUT«<23>␤»

[20:47] <jaffa4> rakudo: my @b=< < 2 3 \> \\>; say @b 

[20:47] <p6eval> rakudo 4bf132: OUTPUT«<23>\␤»

[20:47] <isBEKaml> heh. arrays are not homogeneous? 

[20:48] <masak> sorry, what?

[20:48] <isBEKaml> rakudo: my @b=< < 2 3 \> \\>; say @b.WHAT

[20:48] <p6eval> rakudo 4bf132: OUTPUT«Array()␤»

[20:48] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b>>.*3; say @b

[20:48] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Confused at line 22, near "my @c=@b>>"␤»

[20:48] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b>>.(*3); say @b

[20:48] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Unable to parse postcircumfix:sym<( )>, couldn't find final ')' at line 22␤»

[20:48] <isBEKaml> masak: I'm again losing context. :) too much FP, apparently. 

[20:48] <masak> rakudo: my @b=< 1 2 3 1> ; my @c= @b >>.*3; say @b

[20:48] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Confused at line 22, near "my @c= @b "␤»

[20:48] <masak> rakudo: my @b=< 1 2 3 1> ; my @c= @b >>*>> 3; say @b

[20:49] <p6eval> rakudo 4bf132: OUTPUT«1231␤»

[20:49] <masak> rakudo: my @b=< 1 2 3 1> ; my @c= @b >>*>> 3; say @c

[20:49] <p6eval> rakudo 4bf132: OUTPUT«3693␤»

[20:49] <isBEKaml> masak: homogeneity in arrays or lists refers to the contents of the array being of the same type as every other element in it. 

[20:49] <masak> isBEKaml: ah. no, certainly not :)

[20:49] <masak> isBEKaml: not unless you ask for it.

[20:49] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b>>*; say @b

[20:49] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Missing << or >> at line 22, near "; say @b"␤»

[20:49] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b>>*>>8; say @b

[20:49] <isBEKaml> rakudo: my Int @b=< < 2 3 \> \\>; say @b.WHAT

[20:49] <masak> isBEKaml: we're not in a HM regime here :)

[20:49] <p6eval> rakudo 4bf132: OUTPUT«1231␤»

[20:49] <p6eval> rakudo 4bf132: OUTPUT«()␤»

[20:50] <isBEKaml> rakudo: my Int @b=< < 2 3 \> \\>; say @b;

[20:50] <p6eval> rakudo 4bf132: OUTPUT«<23>\␤»

[20:50] <isBEKaml> hah. 

[20:50] <isBEKaml> masak: HM?

[20:51] <masak> Hindley-Milner?

[20:51] <masak> the type system that ML and Haskell use...

[20:51] <isBEKaml> masak: ouch. that was the first thing I though. 

[20:51] <isBEKaml> masak: HM is a type inference algorithm, how haskell and ML infer types. 

[20:51] <masak> unless it means "Hidden Markov" :P

[20:51] <isBEKaml> or higher mathematics. 

[20:52] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b>>*>> 8; say @b

[20:52] <p6eval> rakudo 4bf132: OUTPUT«1231␤»

[20:52] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b >>*>> 8; say @b

[20:52] <masak> jaffa4: say @c

[20:52] <p6eval> rakudo 4bf132: OUTPUT«1231␤»

[20:52] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b >>*>> 8; say @c

[20:52] <p6eval> rakudo 4bf132: OUTPUT«816248␤»

[20:52] <masak> \o/

[20:52] <masak> rakudo: my @b=< 1 2 3 1> ; my @c=@b >>*>> 8; say @c.perl

[20:52] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b >>* >> 8; say @c

[20:52] <p6eval> rakudo 4bf132: OUTPUT«[8, 16, 24, 8]␤»

[20:52] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Missing << or >> at line 22, near " >> 8; say"␤»

[20:53] <masak> jaffa4: meta'd operators must be written without whitespace in them.

[20:53] <moritz> in fact all operators must be free of whitespace

[20:53] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b >>*>>8>>+>>1; say @c

[20:53] <p6eval> rakudo 4bf132: OUTPUT«917259␤»

[20:54] <jaffa4> rakudo: my @b=< 1 2 3 1> ; my @c=@b >>*>>8>>+>>1; say @c.perl

[20:54] <isBEKaml> rakudo: my @b = <1 2 3 4>; my @c=@b >>*>>8>>*8; @c.perl.say;

[20:54] <p6eval> rakudo 4bf132: OUTPUT«[9, 17, 25, 9]␤»

[20:54] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Missing << or >> at line 22, near "8; @c.perl"␤»

[20:54] *** impious joined
[20:54] <isBEKaml> rakudo: my @b = <1 2 3 4>; my @c=@b >>*>>8>>*>>8; @c.perl.say;

[20:54] <p6eval> rakudo 4bf132: OUTPUT«[64, 128, 192, 256]␤»

[20:54] <isBEKaml> \o/

[20:55] <isBEKaml>  rakudo: my Int @b=< < 2 3 \> \\>; say @b;

[20:55] <p6eval> rakudo 4bf132: OUTPUT«<23>\␤»

[20:55] <isBEKaml> masak: ^^ I specifically asked for an Int array. what's wrong here?

[20:55] *** donri joined
[20:55] <jaffa4> rakudo: say e+4

[20:55] <p6eval> rakudo 4bf132: OUTPUT«6.71828182845904␤»

[20:56] <jaffa4> rakudo: say 'e'+4

[20:56] <p6eval> rakudo 4bf132: OUTPUT«4␤»

[20:56] <masak> isBEKaml: the type checking is not done, I guess.

[20:56] <jaffa4> rakudo: say '1y'+4

[20:56] <p6eval> rakudo 4bf132: OUTPUT«5␤»

[20:56] <jaffa4> rakudo: say '1yuuuuu'+4

[20:56] <p6eval> rakudo 4bf132: OUTPUT«5␤»

[20:56] <isBEKaml> masak: poor, poor rakudo. What can I do for you? :)

[20:57] *** dorlamm joined
[20:57] <jaffa4> rakudo: say '-1yuuuuu'+4

[20:57] <p6eval> rakudo 4bf132: OUTPUT«3␤»

[20:57] <jaffa4> rakudo: say "1yuuuuu"+4

[20:57] <p6eval> rakudo 4bf132: OUTPUT«5␤»

[20:57] <jaffa4> rakudo: say "1".ord+4

[20:57] <p6eval> rakudo 4bf132: OUTPUT«53␤»

[20:58] <isBEKaml> masak: is there a bug ticket open on this?

[21:00] <jaffa4> rakudo: say "1"++

[21:00] <p6eval> rakudo 4bf132: OUTPUT«Cannot modify readonly value␤  in '&infix:<=>' at line 1␤  in main program body at line 7538:CORE.setting␤»

[21:02] *** Holy_Cow left
[21:03] *** jevin left
[21:04] *** wallberg joined
[21:08] *** masak left
[21:08] *** masak` joined
[21:09] *** kaare_ left
[21:09] <masak`> isBEKaml: I believe so.

[21:10] <masak`> isBEKaml: however, I don't exactly feel I have a good overview of the ticket queue anymore.

[21:10] *** jevin joined
[21:12] *** jevin left
[21:14] *** jevin joined
[21:17] <masak`> 'night, #perl6.

[21:17] *** masak` left
[21:18] <jaffa4> bye

[21:18] *** jaffa4 left
[21:18] *** snearch left
[21:21] *** hercynium joined
[21:21] *** hercynium left
[21:21] *** hercynium joined
[21:21] *** wallberg left
[21:22] *** jevin left
[21:22] *** jevin joined
[21:24] *** [hercynium]_ left
[21:26] *** impious left
[21:32] *** TheMartianGeek left
[21:34] *** bluescreen10 left
[21:39] *** icwiener joined
[21:43] *** dorlamm left
[21:49] *** plobsing joined
[21:50] *** isBEKaml left
[21:50] *** bbkr_ joined
[21:51] *** TheMartianGeek joined
[21:53] *** am0c left
[21:58] *** Khisanth left
[21:59] *** Khisanth joined
[22:03] *** Mowah left
[22:03] <sorear> good * #perl6

[22:03] *** _sri left
[22:04] *** Zapelius_ left
[22:05] *** Zapelius_ joined
[22:05] *** _sri joined
[22:05] *** Rotwang left
[22:07] *** flatwhatson left
[22:15] *** twinshadow left
[22:16] *** imamelia joined
[22:17] *** TheMartianGeek left
[22:17] *** imamelia is now known as TheMartianGeek

[22:19] *** flatwhatson joined
[22:20] *** whiteknight joined
[22:24] *** molaf left
[22:25] *** demetro left
[22:26] *** twinshadow joined
[22:27] *** jevin left
[22:30] *** hercynium left
[22:30] *** knewt2 joined
[22:31] *** [Coke] left
[22:42] *** Rotwang joined
[22:42] *** profesor joined
[22:43] *** profesor left
[22:47] *** TheMartianGeek left
[22:51] *** Chillance left
[22:57] *** mikemol left
[23:08] *** icwiener left
[23:15] *** Rotwang left
[23:17] *** MUILTFN left
[23:26] *** mkramer1 left
[23:31] *** ronoreck left
[23:37] *** risou joined
[23:39] *** stkowski joined
[23:45] *** risou_ joined
[23:48] *** risou left
[23:49] *** stkowski left
[23:57] <Tene> an acquaintence of mine in a different channel had an interesting example of precircumfix syntax.

[23:57] <Tene> 17:49 < jcowan> {http://www.ccil.org/~cowan/whatever}foo

[23:57] <Tene> 17:50 < jcowan> the conventional expanded form of cowan:foo in discussing XML namespaces.

[23:58] *** cdarroch left
[23:58] <Tene> I don't know enough about XML namespace syntax and semantics to know if that's really precircumfix in the same sense that we understand postcircumfix here or not, though.

