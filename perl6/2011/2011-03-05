[00:06] *** fisted_ is now known as fisted

[00:13] *** masak joined
[00:13] <masak> \o/

[00:15] <tadzik> o/

[00:15] <masak> tadzik: hi! :)

[00:15] <tadzik> ohhai :)

[00:16] <masak> so... what's up? :)

[00:16] *** tyatpi joined
[00:17] <jnthn> o/ #perl6

[00:17] <phenny> jnthn: 04 Mar 19:04Z <Tene> ask jnthn if he's had time to look at https://gist.github.com/838498 yet

[00:17] <masak> jnthn: http://rt.perl.org/rt3/Ticket/Display.html?id=78234

[00:17] <jnthn> :P

[00:18] <Tene> hi jnthn

[00:18] <jnthn> o/

[00:19] <sorear> Hello jnthn

[00:19] <jnthn> I'm...a boyut to sleep.

[00:19] <jnthn> But I'm hackathoning Sun - Tue

[00:19] <jnthn> So will have time to look \o/

[00:19] <sorear> That's all you do anymore :/

[00:19] <jnthn> sorear: I know :/

[00:19] <jnthn> $dayjob :/

[00:19] <Tene> jnthn: what time zone are you on?

[00:20] <jnthn> European

[00:20] <masak> Central.

[00:20] <jnthn> CET

[00:20] <tadzik> http://nopaste.snit.ch/34387

[00:23] * masak sleeps

[00:23] *** masak left
[00:23] * jnthn sleeps too...talks tomorrow

[00:30] *** tyatpi left
[00:32] *** risou joined
[00:46] *** _jaldhar left
[00:46] *** araujo joined
[00:47] *** cotto joined
[00:51] *** zamolxes joined
[00:54] *** risou left
[01:05] *** Helios` joined
[01:07] *** kolibrie joined
[01:08] *** jedai joined
[01:08] *** stepnem joined
[01:10] *** Tedd1 joined
[01:12] *** AphelionZ joined
[01:14] *** __rnddim__ is now known as lue

[01:14] <lue> hello world! o/

[01:15] *** Eevee joined
[01:15] <colomon> lue!  \o/

[01:17] *** silent_h joined
[01:18] <lue> .oO(It's funny. There's always a bunch of stuff I want to look up on my computer, but the second I sit down in front of my old laptop, I have trouble remembering :D)

[01:24] *** envi joined
[01:29] *** Guest87704 left
[01:31] *** Guest87704 joined
[01:32] *** silent_h left
[01:34] *** Eevee left
[01:47] *** jferrero left
[01:50] *** risou joined
[01:53] *** Guest87704 left
[01:58] *** fisted_ joined
[01:58] *** Guest87704 joined
[01:59] *** zamolxes_ joined
[01:59] *** krunen left
[01:59] *** krunen joined
[01:59] *** Sarten-X joined
[02:00] *** noganex_ joined
[02:01] *** kst left
[02:01] <dalek> niecza: 105a947 | sorear++ | lib/ (6 files):

[02:01] <dalek> niecza: Rename a couple C# types for 6model consistency

[02:01] <dalek> niecza: review: https://github.com/sorear/niecza/commit/105a9473a1

[02:01] *** kolibrie left
[02:02] *** kst joined
[02:02] *** kolibrie joined
[02:02] *** JodaZ joined
[02:05] *** zamolxes left
[02:05] *** fisted left
[02:05] *** sjn left
[02:05] *** baest left
[02:05] *** _ilbot left
[02:05] *** rokoteko left
[02:06] *** _ilbot joined
[02:06] *** sjn joined
[02:06] *** baest joined
[02:06] *** rokoteko joined
[02:07] <flussence> is there a good way to write a test for a function that's supposed to warn() but not die()? lives_ok doesn't differentiate between them

[02:14] *** Eevee joined
[02:14] <TimToady> warn is supposed to be a control exception, but I doubt rakudo does it right yet

[02:19] <flussence> pretty sure it doesn't...

[02:20] <flussence> rakudo: try { warn; say 'ok'; CONTROL { say 'fail' } }

[02:20] <p6eval> rakudo 413862:  ( no output )

[02:20] <flussence> er.

[02:20] <flussence> rakudo: try { warn; say 'ok'; CONTROL { say 'fail' }; CATCH { say 'double fail' } }

[02:20] <p6eval> rakudo 413862: OUTPUT«double fail␤»

[02:21] <flussence> (though I think the right fix is for me to rewrite this code so it DWIM without spewing warnings...)

[02:36] *** Eevee left
[02:38] *** leprevost joined
[02:45] *** _jaldhar joined
[02:49] *** stkowski left
[02:57] *** _jaldhar left
[02:57] * colomon is feeling defeated by inkscape.

[03:14] *** AphelionZ left
[03:49] *** Eevee joined
[03:59] *** whiteknight left
[04:21] <lue> colomon: what's the problem?

[04:35] *** akaman joined
[04:36] *** akaman left
[04:41] *** _jaldhar joined
[04:41] *** Eevee left
[04:42] *** Eevee joined
[05:21] *** fhelmberger joined
[05:32] *** araujo left
[05:42] *** Guest87704 left
[05:49] *** Guest87704 joined
[06:31] *** _twitch joined
[06:45] *** cotto left
[06:45] *** cotto joined
[06:52] *** justatheory joined
[06:53] *** kaare_ joined
[06:56] *** justatheory left
[06:56] *** NoisyNose joined
[07:07] *** nymacro joined
[07:15] *** HarryS joined
[07:17] *** satyavvd joined
[07:23] *** satyavvd_ joined
[07:23] *** satyavvd left
[07:26] *** nymacro left
[07:27] *** nymacro joined
[07:37] *** satyavvd_ left
[07:43] *** NoisyNose left
[07:46] <dalek> niecza: ce33cb7 | sorear++ | lib/ (3 files):

[07:46] <dalek> niecza: Refactor away distinction between loc_ vtables and local methods

[07:46] <dalek> niecza: review: https://github.com/sorear/niecza/commit/ce33cb7ecf

[07:46] * sorear out

[07:50] *** Guest87704 left
[07:51] *** risou_ joined
[07:54] *** risou left
[07:55] *** Guest87704 joined
[08:19] *** woosley joined
[08:46] *** araujo joined
[09:09] *** Trashlord joined
[09:10] *** donri joined
[09:16] *** satyavvd joined
[09:17] *** Mowah joined
[09:17] *** araujo left
[09:21] *** araujo joined
[09:21] *** araujo left
[09:21] *** araujo joined
[09:28] *** woosley left
[10:05] <donri> Is <:Letter> NYI?

[10:07] *** Teedev[1] joined
[10:14] *** Axius joined
[10:20] <Teedev[1]> Hi! I newbie in Perl6 

[10:21] <Teedev[1]> how to install perl6 module?

[10:26] <tadzik> Teedev[1]: you can try neutro, if it works for you. I'm currently in the middle of rewriting/refactoring it, so I'm sorry for alle the breakages :)

[10:26] <tadzik> or you can go the old way with ufo?

[10:27] <tadzik> s/\?$//

[10:35] <Teedev[1]> tadzik,neutro?

[10:36] <tadzik> Teedev[1]: aye. https://github.com/tadzik/neutro

[10:36] <tadzik> you can try either of the branches, there is a chance that one of them will work :) What do you want to install actually?

[10:45] *** PacoLinux_ joined
[10:52] *** Bzek joined
[10:57] <dalek> roast: 9040c15 | moritz++ | S0 (3 files):

[10:57] <dalek> roast: unfudge Parcel related tests for niecza

[10:57] <dalek> roast: review: https://github.com/perl6/roast/commit/9040c1594d

[10:58] <Teedev[1]> tadzik,  Unable to find module 'File::Mkdir' in the @*INC directories.

[10:58] <Teedev[1]> (@*INC contains:

[10:58] <Teedev[1]>   /home/ron/.perl6/lib

[10:59] <Teedev[1]> don't have /usr/lib64/parrot/2.5.0/languages/perl6/lib in root directory!!!

[10:59] <tadzik> Teedev[1]: have you read the README instructions?

[10:59] *** PacoLinux_ left
[11:02] <moritz_> tadzik: nobody ever read READMEs :(

[11:02] <moritz_> tadzik: are you in .nl now?

[11:02] <Teedev[1]> tadzik,  yse i read it

[11:02] <moritz_> Teedev[1]: so which command did you run?

[11:02] <tadzik> moritz_: in this particular case I'm unable to determine whether docs are not read, or whether neutro is _so_ broken :)

[11:03] <tadzik> moritz_: aye, on the workshop

[11:03] <Teedev[1]>  # ./bootstrap.sh 

[11:03] <tadzik> trying the master branch?

[11:03] <Teedev[1]> ?

[11:04] <moritz_> looks like

[11:04] <tadzik> anyway, did it clone the git repos, are the "mt" and "ft" directories present?

[11:05] <Teedev[1]> teedev:/home/ron/Downloads/tadzik-neutro-c41d1f3 # ls

[11:05] <Teedev[1]> bin  bootstrap.sh  deps.proto  ft  mt  README

[11:05] <tadzik> what if you run 'PERL6LIB=mt/lib:ft/lib bin/neutro .'?

[11:06] *** MayDaniel joined
[11:08] <colomon> lue: when I ask it to install inkscape, macports works for hours and then dies.

[11:09] <Teedev[1]> tadzik,  ron@teedev:~/Downloads/tadzik-neutro-c41d1f3>  'PERL6LIB=mt/lib:ft/lib bin/neutro .'

[11:09] <Teedev[1]> bash: PERL6LIB=mt/lib:ft/lib bin/neutro .: No such file or directory

[11:09] <Teedev[1]> ron@teedev:~/Downloads/tadzik-neutro-c41d1f3> 

[11:11] <tadzik> oh that's weird

[11:11] <tadzik> are those mt/ft directories empty?

[11:12] *** mberends joined
[11:12] <Teedev[1]> tadzik, not empty.

[11:12] <Teedev[1]> tadzik,  ron@teedev:~/Downloads/tadzik-neutro-c41d1f3> ls mt ft

[11:12] <Teedev[1]> ft:

[11:12] <Teedev[1]> lib  LICENSE  META.info  README  t

[11:13] <tadzik> are the lib is in there? Looks like something's wrong with either your shell or your files, or I'm missing something

[11:14] <mberends> http://www.perlworkshop.nl/nlpw2011/ rocks!  masak++ is starting his talk :-)

[11:18] <colomon> \o/

[11:22] <Teedev[1]> no time for online 

[11:23] <Teedev[1]> tadzik,  thanks for help me :D 

[11:23] <Teedev[1]> bye :P บายครับ

[11:24] <tadzik> oh, you're welcome. Shame it's not working for you though

[11:24] *** Teedev[1] left
[11:33] *** jferrero joined
[11:35] *** alex__ joined
[11:38] <tadzik> did skip() stop working recently?

[11:43] *** alex__ left
[11:44] <tadzik> rakudo: use Test; plan 1; skip(1, 'foo'); ok 0, 'blah!'

[11:44] <p6eval> rakudo 413862: OUTPUT«1..1␤get_attr_str() not implemented in class 'Sub'␤  in main program body at line 7530␤»

[11:44] <tadzik> at least LTA

[11:46] *** whiteknight joined
[12:04] *** satyavvd left
[12:04] <TimToady> donri: <:Foo> was a recent invention, so yes, NYI, I suspect

[12:04] *** orafu left
[12:05] <TimToady> rakudo: say 'a' ~~ <Letter>

[12:05] <p6eval> rakudo 413862: OUTPUT«Bool::False␤»

[12:05] <TimToady> rakudo: say 'a' ~~ <isLetter>

[12:05] <p6eval> rakudo 413862: OUTPUT«Bool::False␤»

[12:05] <TimToady> rakudo: say 'a' ~~ <isL>

[12:05] <p6eval> rakudo 413862: OUTPUT«Bool::False␤»

[12:05] <TimToady> bleah

[12:05] <TimToady> ENOBRANE

[12:06] <TimToady> rakudo: say 'a' ~~ /<Letter>/

[12:06] <p6eval> rakudo 413862: OUTPUT«Method 'Letter' not found for invocant of class 'Cursor'␤  in <anon> at line 22:/tmp/8uHMHjW3_1␤  in 'Cool::match' at line 2659:CORE.setting␤  in 'Regex::ACCEPTS' at line 6271:CORE.setting␤  in main program body at line 22:/tmp/8uHMHjW3_1␤»

[12:06] <TimToady> rakudo: say 'a' ~~ /<isLetter>/

[12:06] <p6eval> rakudo 413862: OUTPUT«a␤»

[12:06] <TimToady> donri: ^^

[12:06] <TimToady> that's what it was before we invented <:Letter>

[12:07] * TimToady is logged in from a livecd while copying files off an undead disk drive...

[12:08] * TimToady ought to be sharpening a wooden stake instead

[12:08] *** orafu joined
[12:15] *** avuserow left
[12:15] *** pyrimidine left
[12:16] *** Guest87704 left
[12:19] *** ggoebel joined
[12:20] * TimToady ought to be sleeping, actually, but jetlag hath its uses...

[12:20] *** Guest87704 joined
[12:22] *** avuserow joined
[12:23] *** ggoebel left
[12:29] *** ggoebel joined
[12:30] *** pyrimidine joined
[12:47] *** Chillance joined
[13:00] <donri> TimToady: Thanks :) also: melatonin

[13:09] *** orafu left
[13:09] *** orafu joined
[13:13] *** Axius left
[13:21] *** flatwhatson_ joined
[13:22] *** mberends left
[13:27] <dalek> rakudo: 3abc9c8 | tadzik++ | Test.pm:

[13:27] <dalek> rakudo: Add a variant of skip() to Test.pm to overcome RT #85472

[13:27] <dalek> rakudo: 

[13:27] <dalek> rakudo: Error message taken from Perl 5's Test::More

[13:27] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/3abc9c8f88

[13:30] <flussence> argh, Text::Wrap seems to be doing something insane with how it counts \n as part of the line-length. Sometimes it does, sometimes it doesn't.

[13:38] <dalek> rakudo: 12dfa0d | tadzik++ | t/01-sanity/99-test-basic.t:

[13:38] <dalek> rakudo: Fix tests of Test.pm to use the right order of arguments.

[13:38] <dalek> rakudo: 

[13:38] <dalek> rakudo: Add a test for the wrong order.

[13:38] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/12dfa0d593

[13:38] <dalek> rakudo: c463f55 | tadzik++ | Test.pm:

[13:38] <dalek> rakudo: [Test.pm] DRY in skip_rest

[13:38] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/c463f55e1c

[13:42] *** am0c joined
[13:51] *** risou joined
[13:53] *** karupanerura joined
[13:54] *** risou_ left
[14:07] *** am0c left
[14:09] *** AphelionZ joined
[14:09] <flussence> rakudo: https://gist.github.com/856374

[14:09] <p6eval> rakudo 413862: OUTPUT«===SORRY!===␤Unable to parse blockoid, couldn't find final '}' at line 28␤»

[14:09] <flussence> huh

[14:11] <flussence> std: https://gist.github.com/856374

[14:11] <p6eval> std 4608239: OUTPUT«[31m===[0mSORRY![31m===[0m␤Non-declarative sigil is missing its name at /tmp/pDZeQSjxmS line 5:␤------> [32m        [33m⏏[31m&[$_]("abcde");[0m␤Preceding context expects a term, but found infix & instead at /tmp/pDZeQSjxmS line 5:␤------> [32m       

[14:11] <p6eval> ..[33m⏏[31m&[$_]("abcd…

[14:11] <flussence> works locally :/

[14:15] <flussence> oh, no it didn't.

[14:16] <flussence> rakudo: given 'say' { &[$_](1) }

[14:16] <p6eval> rakudo 413862: OUTPUT«invoke() not implemented in class 'Any'␤  in main program body at line 22:/tmp/JqHYEJjX9s␤»

[14:16] <flussence> rakudo: given 'say' { &[$_].(1) }

[14:16] <p6eval> rakudo 413862: OUTPUT«invoke() not implemented in class 'Any'␤  in main program body at line 22:/tmp/4EPFqSRj91␤»

[14:16] <flussence> rakudo: given &say { &[$_].(1) }

[14:16] <p6eval> rakudo 413862: OUTPUT«Method 'count' not found for invocant of class 'Perl6MultiSub'␤  in 'Any::postcircumfix:<[ ]>' at line 1791:CORE.setting␤  in main program body at line 1␤»

[14:16] <flussence> rakudo: given &say { $_.(1) }

[14:17] <p6eval> rakudo 413862: OUTPUT«1␤»

[14:17] <flussence> that's the one...

[14:17] <flussence> std: https://gist.github.com/856374

[14:17] <p6eval> std 4608239: OUTPUT«[31m===[0mSORRY![31m===[0m␤Two terms in a row at /tmp/btY8PWby_l line 7:␤------> [32m       (given $! { .Str, .WHAT, .perl })[33m⏏[31mÂ».say[0m␤    expecting any of:␤      POST␤   bracketed infix␤        infix or meta-infix␤    postfix␤       

[14:17] <p6eval> ..postfix_prefix_meta_operator␤   statement modifier loop␤…

[14:17] <flussence> death by mojibake :(

[14:18] <flussence> std: https://gist.github.com/856374

[14:18] <p6eval> std 4608239: OUTPUT«ok 00:01 128m␤»

[14:18] <flussence> rakudo: https://gist.github.com/856374

[14:18] <p6eval> rakudo 413862: OUTPUT«&warn␤abcde␤Exception()␤undef␤&die␤abcde␤Exception()␤undef␤»

[14:18] <flussence> there we go.

[14:18] *** am0c joined
[14:19] *** AphelionZ left
[14:22] *** zby_home joined
[14:47] *** cpk joined
[14:54] <cpk> sorear: hi

[15:03] *** fisted_ is now known as fisted

[15:17] *** leprevost left
[15:17] *** AphelionZ joined
[15:38] *** am0c^ joined
[15:41] *** am0c left
[15:51] *** colomon left
[16:04] *** am0c^ left
[16:11] *** cognominal joined
[16:18] *** Psyche^ joined
[16:18] *** Psyche^ is now known as Patterner

[16:18] *** AphelionZ left
[16:25] *** ymasory joined
[16:29] *** nwc10 joined
[16:29] <nwc10> what is the p5 post referenced in http://irclog.perlgeek.de/phasers/2011-02-22#i_3323431 ?

[16:32] <moritz_> nwc10: not yet published, I fear

[16:33] <nwc10> and that's all we know about it? :-)

[16:33] <moritz_> we know it's about the 5th task of  http://strangelyconsistent.org/blog/masaks-perl-6-coding-contest

[16:34] <nwc10> aha thanks.

[16:34] *** justatheory joined
[16:34] *** nwc10 left
[16:35] *** GinoMan joined
[16:38] *** leprevost joined
[16:39] <flussence> Files=15, Tests=91 Result: PASS \o/

[16:39] *** cjk101010 joined
[16:44] *** whiteknight left
[16:44] *** Bzek left
[16:47] *** cpk left
[16:49] *** Bzek joined
[16:51] *** kaare_ left
[16:52] *** kaare_ joined
[16:57] *** Bzek left
[16:57] *** rdesfo joined
[16:58] *** Bzek joined
[16:59] *** Bzek left
[17:00] *** amiri joined
[17:09] *** MayDaniel left
[17:12] <sorear> good * #perl6

[17:12] *** pumphaus_ joined
[17:13] <moritz_> \o

[17:14] *** pumphaus_ is now known as pumphaus

[17:14] <sorear> phenny: tell cpk The last two times you've tried to contact me it's been at night.  Please either stick around longer, or PM me an e-mail address.

[17:14] <phenny> sorear: I'll pass that on when cpk is around.

[17:15] *** am0c^ joined
[17:19] *** justatheory left
[17:40] *** MayDaniel joined
[17:44] * sorear wants to do something with <:Letter>

[17:45] * TimToady still thinks the right path forward is not to use ICU everywhere, but to steal the data out of Perl 5's tables

[17:46] <sorear> Perl 5's table generators are... big.

[17:46] <sorear> I still don't really understand how most of them are put together

[17:46] <TimToady> I'm not suggesting stealing the implementation

[17:46] <TimToady> just the data

[17:47] <sorear> but the data changes with each Unicode version

[17:47] <TimToady> and Perl 5 tracks it

[17:48] * sorear tries to quantify opposition to adding 100+ KB of tables

[17:48] <TimToady> at some point we write our own mktables and track it ourselves

[17:49] <sorear> currently niecza uses the CLR platform tables

[17:49] <sorear> which include only General_Category and case mapping for characters 0-65535

[17:49] <moritz_> niecza: say uc 'ß'

[17:49] <TimToady> most platforms screw up Unicode support

[17:49] <p6eval> niecza v3-36-gce33cb7: OUTPUT«ß␤»

[17:49] <moritz_> seems this one does too

[17:50] <sorear> What should that produce?  SS?

[17:50] <moritz_> yes

[17:51] <TimToady> not that p5 supports that level either by default...

[17:51] <moritz_> $ perl -Mutf8 -wE 'say uc "ß"'

[17:51] <moritz_> SS

[17:52] <TimToady> -Mutf8 isn't default :/

[17:52] <sorear> What about "SS" ~~ /ß/i ?

[17:52] <moritz_> matches in Perl 5

[17:52] <sorear> What about "ß" ~~ /SS/i ?

[17:52] <sorear> What about "ß" ~~ /ss/i ?

[17:53] <moritz_> too

[17:53] <sorear> ...what.

[17:53] <sorear> how.

[17:53] *** leprevost left
[17:53] <moritz_> magic!

[17:53] <TimToady> p5 canonicalizes to lc

[17:54] <TimToady> because it understands there is also titlecase

[17:54] <TimToady> course, that probably breaks other languages :)

[17:55] <TimToady> but we're aiming for language independent grapheme semantics, which can't be perfect for everyone

[17:55] *** porter235 joined
[17:55] <moritz_> that's ok as long as it's perfect for *me* :-)

[17:56] <porter235> is anyone packaging rakudo-star for ubuntu? 

[17:58] * moritz_ is not aware of anybody

[18:01] *** porter235 left
[18:04] *** mberends joined
[18:05] <tadzik> moritz_: my PM pal was doing this some time ago, hang on

[18:06] <tadzik> oh that's just Rakudo: https://launchpad.net/~dexter/+archive/rakudo-pkg

[18:07] *** plobsing_ joined
[18:10] *** plobsing left
[18:12] *** justatheory joined
[18:17] *** Axius joined
[18:17] *** pmurias joined
[18:18] *** Rotwang joined
[18:23] *** Sarten-X left
[18:27] <dalek> specs: 411f2a5 | masak++ | S32-setting-library/Containers.pod:

[18:27] <dalek> specs: [S32/Containers] removed parameter to .keys etc

[18:27] <dalek> specs: 

[18:27] <dalek> specs: You could match on indexes/keys using an optional parameter on the .keys,

[18:27] <dalek> specs: .values, .pairs, .enums, .kv methods. I discovered this by accident, and

[18:27] <dalek> specs: went to check the source of both Rakudo and Niecza. Neither implements this

[18:27] <dalek> specs: parameter. It's a very old parameter, but it seems no-one has cared about

[18:27] <dalek> specs: it enough to ask for it or implement it. Besides, there are better, more

[18:27] <dalek> specs: readable ways to accomplish the same thing:

[18:27] <dalek> specs: 

[18:27] <dalek> specs:     %h.values(/^prefix/);                         # instead of this...

[18:27] <dalek> specs: 

[18:27] <dalek> specs:     %h.pairs.grep({.key ~~ /^prefix/})».value;    # ...do this

[18:27] <dalek> specs:     %h.kv.map({ $^value if $^key ~~ /^prefix/ }); # ...or this

[18:27] <dalek> specs:     %h{%h.keys.grep(/^prefix/)};                  # ...or even this

[18:27] <dalek> specs: 

[18:27] <dalek> specs: There are plenty of alternative ways to emulate the functionality that

[18:27] <dalek> specs: the parameter provided, all of them (in my opinion) more tractable.

[18:27] <dalek> specs: review: https://github.com/perl6/specs/commit/411f2a59f5

[18:27] <dalek> specs: d8e2c04 | masak++ | S32-setting-library/Containers.pod:

[18:27] <dalek> specs: [S32/Containers] fixed typo

[18:27] <dalek> specs: review: https://github.com/perl6/specs/commit/d8e2c04218

[18:28] *** masak joined
[18:29] <masak> oh hai, #perl6 :)

[18:29] <sorear> Hello, masak.

[18:29] <moritz_> \o

[18:30] * masak is drinking whisky and making the spec smaller :P

[18:32] <masak> if someone will stand up to defend that feature, please get in touch with me.

[18:33] <flussence> dir() has a similar thing, doesn't it?

[18:33] <moritz_> yes, but it has a good reason

[18:33] <moritz_> it defaults to none <. ..>

[18:33] <flussence> oh, yeah.

[18:34] <masak> dir() has other issues :)

[18:34] <moritz_> yep, returning Strs for one

[18:34] *** kst left
[18:34] <masak> I especially like how .values(/^prefix/) does filtering on the *keys*.

[18:34] <moritz_> s/does/did/

[18:35] <sorear> dir's issues are related to the poor support for qp-y stuff in stadnard Perl 6

[18:35] <masak> moritz_: troo

[18:35] <flussence> (maybe Associative should have a match parameter, and dir() should subclass it... :)

[18:35] * sorear should probably implement dir in niecza soon

[18:35] <moritz_> sorear: if you do, use your imagination, and make it better than rakudo's :-)

[18:35] <moritz_> flussence: noooooo

[18:36] <moritz_> neither is a dir() listing associative

[18:36] <masak> flussence: what moritz_said.

[18:36] <flussence> just kidding :)

[18:36] <moritz_> nor ... oh, there was a ':)' at the end

[18:36] <masak> had this been p6l, there wouldn't have been :)

[18:46] <moritz_> how's the workshop going?

[18:46] <moritz_> or are you hackathoning today?

[18:48] *** Vlavv_ left
[18:49] *** Vlavv_ joined
[19:05] *** simcop2387 joined
[19:05] *** pmurias left
[19:13] *** envi left
[19:16] *** karupanerura left
[19:17] <masak> moritz_: the workshop has finished. it was successful IMO.

[19:18] <sorear> workshop on what?

[19:18] <masak> sorear: Dutch Perl Workshop 2011

[19:18] *** rdesfo left
[19:25] *** thelazydeveloper joined
[19:29] <masak> thelazydeveloper: oh hai

[19:29] <thelazydeveloper> oharrothar

[19:29] <masak> :)

[19:30] <sorear> Welcome, thelazydeveloper.

[19:30] <sorear> Did masak invite you?

[19:30] <masak> not that I know.

[19:30] <masak> rakudo: my @a = 0..3; @a[0, 1] = @a[1, 3]; say @a.perl

[19:30] <p6eval> rakudo c463f5: OUTPUT«[1, 3, 2, 3]␤»

[19:30] * thelazydeveloper tips his hat 

[19:30] <masak> thelazydeveloper: that doesn't mean you shouldn't feel welcome :)

[19:30] <thelazydeveloper> narp, he didn't invite

[19:31] * thelazydeveloper takes off his shoes and kicks back

[19:31] <sorear> niecza: my @a = 0..3; @a[0, 1] = @a[1, 3]; say @a.perl

[19:31] <thelazydeveloper> Good to know

[19:31] <p6eval> niecza v3-36-gce33cb7: OUTPUT«[1, 3, 2, 3]␤»

[19:31] <masak> rakudo++ niecza++

[19:31] <masak> thelazydeveloper: nice shoes.

[19:31] <sorear> pugs: my @a = 0..3; @a[0, 1] = @a[1, 3]; say @a.perl

[19:31] <p6eval> pugs: OUTPUT«[1, 3, 2, 3]␤»

[19:31] <masak> pugs++

[19:32] <sorear> alpha: my @a = 0..3; @a[0, 1] = @a[1, 3]; say @a.perl

[19:32] <p6eval> alpha : OUTPUT«[1, 3, 2, 3]␤»

[19:32] <masak> alpha++ :)

[19:33] <masak> I was trying to break slice assignment today, but I haven't succeeded yet.

[19:33] <masak> s/break/expose of bug in/

[19:33] <sorear> What bug?

[19:33] <masak> none in particular.

[19:33] <masak> was just looking for one :)

[19:35] * sorear is trying to figure out unicode case mapping rules

[19:35] *** kst joined
[19:35] *** cpk joined
[19:35] <sorear> particular question: how can my $str = "ss"; "ß" ~~ /$str/i possibly work?

[19:36] <sorear> hi cpk

[19:36] <sorear> for once you didn't come at midnight ;)

[19:36] <cpk> hi sorear

[19:36] <phenny> cpk: 17:14Z <sorear> tell cpk The last two times you've tried to contact me it's been at night.  Please either stick around longer, or PM me an e-mail address.

[19:36] * masak is trying to decide what to hackathon on for three days

[19:36] <cpk> i'm living in france

[19:36] *** AphelionZ joined
[19:37] <cpk> sorear: i tried niecza on my home pc (vista 32bits) and i have the same issue

[19:38] <sorear> the runtime version thing?

[19:38] <cpk> sorear: I have seen the IRC log of yesterday

[19:38] <cpk> yep

[19:38] *** AphelionZ left
[19:38] <cpk> so the v3 is broken when used with microsoft .net 4 ?

[19:39] <sorear> I don't quite know why it's not working with .net 4

[19:39] <cpk> ok

[19:39] <sorear> however I know why it's broken with .net 2 / mono 2.6

[19:40] *** Mowah left
[19:40] *** nymacro left
[19:40] <sorear> I'll try to put together a binary release today for the 2.0 runtime

[19:40] <sorear> hopefully that will work better on .net 4

[19:40] <cpk> i hope too

[19:41] <masak> I'm eager to try v3. did moritz_ succeed in getting .net 4 to work on Debian?

[19:41] <cpk> I can't wait for using niecza on my windows PC ;-)

[19:41] <masak> Niecza seems quite popular these days. :)

[19:43] <cpk> masak: I like the fact that perl6 starts to work on other VM than parrot

[19:43] <tadzik> it deserves it

[19:43] <sorear> Rakudo is also moving to support Java/.net

[19:43] *** Mowah joined
[19:44] <moritz_> masak: i just recompiled mono from source

[19:44] <moritz_> masak: took some time, but worked

[19:44] <masak> moritz_: URL?

[19:45] <moritz_> masak: dunno, but easy to google

[19:45] <masak> gotcha.

[19:45] <cpk> I have to go, talk to you next week and have fun !

[19:45] <cpk> bye

[19:45] <masak> cpk: \o

[19:45] *** cpk left
[19:52] *** Axius left
[19:52] <tadzik> hrm, could someone take a look at the skip() madness and what currently happens in the spectests?

[19:52] *** risou_ joined
[19:53] *** Guest87704 left
[19:53] <moritz_> tadzik: what about it?

[19:53] <lue> hello world!

[19:54] <tadzik> moritz_: seen my latest patch?

[19:54] <tadzik> lue: hi!

[19:54] *** Guest87704 joined
[19:54] <tadzik> then take a look at t/spec/S06-multi/proto.rakudo:33

[19:55] <tadzik> that case causes an ambigous dispatch I believe

[19:55] <masak> hi lue!

[19:55] <moritz_> tadzik: well, 'skip 1' is not very fortunate

[19:55] *** risou left
[19:56] <tadzik> moritz_: well, skip(1,1) is quite weird anyway

[19:56] <lue> Trying to get the Principle of Explosion to work in Perl 6 is an interesting distraction :)

[19:56] <tadzik> but it still feels like this entire multis are a bit wrongish

[19:56] *** porter235 joined
[19:56] <tadzik> so maybe there should be one multi with 2 params, checking whether the first one is Int inside

[19:57] <tadzik> lemme code what I think

[19:57] <moritz_> tadzik: the signature and error message in that skip() multi don'T fit well together either

[19:57] <moritz_> +# needed because of RT #85472

[19:57] <moritz_> +multi sub skip(Int $count, $reason) is export {

[19:57] <moritz_> +    die "skip() was passed a non-numeric number of tests.  Did you get the argu

[19:58] <moritz_> there's no check in there that $reason is non-numeric

[19:58] <moritz_> which is why you get that error

[19:58] <tadzik> like this: http://wklej.org/id/487473/

[19:58] <masak> lue: getting the principle of explosion "to work" in Perl 6? :)

[19:58] <dalek> roast: 20f0418 | moritz++ | S06-multi/proto.t:

[19:58] <dalek> roast: improve fudge message

[19:58] <dalek> roast: review: https://github.com/perl6/roast/commit/20f04189b4

[19:58] <moritz_> rakudo: say pir::null__p() # EXPLOSION

[19:58] <p6eval> rakudo c463f5: OUTPUT«Null PMC access in type()␤  in main program body at line 22:/tmp/4NIeUBmR89␤»

[19:59] <masak> lue: isn't it, like, a general logical principle that holds all the time and regardless of circumstances?

[19:59] <lue> Er, trying to use the principle of explosion, I meant :)

[19:59] *** justatheory left
[19:59] <tadzik> moritz_: well, that patch is due to a different error coming from typechecking $count actually, in your patch

[19:59] <masak> lue: the one that says "anything follows from a contradiction"?

[19:59] <lue> Yes, that's the one.

[19:59] *** mberends left
[19:59] <moritz_> tadzik: the error message and the check still aren't aligned in that nopaste

[20:00] <tadzik> what do you mean?

[20:00] <masak> lue: I guess I'm having trouble seeing how anything you might write in a program would change the way that principle plays out.

[20:00] <moritz_> tadzik: it says that something is *not* numeric, but you are checking that some *is* an Int

[20:00] <masak> lue: it feels like saying "I'm trying to get gravity to work in English".

[20:01] <moritz_> tadzik: how about $count !~~ Int # instead?

[20:01] <lue> I'm just trying to see how I could make $p ^ $q and $p ^ !$q both come out True.

[20:02] *** mberends joined
[20:02] <moritz_> rakudo: say so True ^ False

[20:02] <p6eval> rakudo c463f5: OUTPUT«Bool::True␤»

[20:02] <tadzik> oh, I see the point

[20:02] <moritz_> rakudo: say so True ^ !False

[20:02] <p6eval> rakudo c463f5: OUTPUT«Bool::False␤»

[20:02] <tadzik> I just borrowed the message from Test::More

[20:02] <moritz_> just overload infix:<^> to always return True?

[20:02] <masak> :P

[20:02] <masak> let's overload Logic!

[20:02] <lue> waitaminute. There's a valid  so  operator‽

[20:03] <moritz_> sure.

[20:03] <tadzik> die "skip() was passed a numeric reason parameter. -- better now?

[20:03] <masak> The Operator Formerly Known As 'true'.

[20:03] <lue> moritz_: That feels like cheating though.

[20:03] <moritz_> rakudo: say so True ^ any(True, False)

[20:03] <p6eval> rakudo c463f5: OUTPUT«Bool::False␤»

[20:04] <moritz_> rakudo: say so True ^ !any(True, False)

[20:04] <p6eval> rakudo c463f5: OUTPUT«Bool::True␤»

[20:04] <moritz_> hm.

[20:04] <moritz_> problem is that ! doesn't autothraed

[20:04] <sorear> perl6: say defined 1 && 0

[20:04] <p6eval> niecza v3-36-gce33cb7: OUTPUT«Bool::True␤»

[20:04] <p6eval> ..pugs, rakudo c463f5: OUTPUT«0␤»

[20:04] <flussence> takadonet: ping

[20:04] <masak> rakudo: say all(True, False).not

[20:04] <p6eval> rakudo c463f5: OUTPUT«Bool::True␤»

[20:05] <masak> tadzik, jnthn, and I are sitting in the same sofa behind our laptops. people are stopping by all the time pointing out how cute we look.

[20:06] <moritz_> send pics!

[20:06] <tadzik> hah, hold on

[20:07] <donri> What is <EXPR> really?

[20:07] <masak> donri: it's the rule for Perl 6 expressions.

[20:07] <moritz_> a call to a named subrule

[20:07] <donri> (In PCT)

[20:07] <tadzik> I actually made a screenshot of us :)

[20:07] *** Rotwang left
[20:07] <masak> right, a call to the rule.

[20:07] <tadzik> http://i.imgur.com/F5GIX.jpg

[20:08] <donri> but do my own rules match on <EXPR> somehow?

[20:08] <lue> does    say so    mean what it does in English, as in "why didn't you just SAY SO‽‽"

[20:08] <sorear> TimToady: Now, I'm pondering "ß" ~~ / [:i .] . /

[20:09] <masak> donri: not implicitly, no.

[20:09] <jnthn> heh, I forgot to look at the camera :P

[20:09] <moritz_> masak, tadzik: yes, you're a cute bunch

[20:09] <donri> masak: but how do you do that then? e.g. if I have a rule for function calls

[20:09] <masak> moritz_: :>

[20:10] <sorear> tadzik: where are y'all?

[20:10] * tadzik blushes

[20:10] <tadzik> sorear: Dutch Perl Workshop

[20:10] <moritz_> donri: maybe you should rephrase your question

[20:10] <sorear> Who'se #4?

[20:10] <moritz_> I have a feeling you didn't mean to ask the question that masak++ answered

[20:10] <moritz_> sorear: mberends 

[20:10] <moritz_> (on the left)

[20:10] <masak> donri: what moritz_ said.

[20:11] <masak> donri: I'm getting a bit of an XY problem vibe here.

[20:11] <donri> doesn't EXPR match calls to functions in squaak for example?

[20:11] <donri> but i can't figure out how/why

[20:12] <masak> donri: are you writing an HLL?

[20:12] <donri> toying with it yes

[20:12] <masak> ok.

[20:12] <masak> then the question makes sense.

[20:12] <moritz_> donri: EXPR generally matches things of the form  <term> [<infix> <term>]*

[20:12] <masak> but if the Squaak tutorial doesn't do it for you, I'm not sure I can be of much help. :/

[20:12] <donri> yea I should probably go to #parrot but, not on freenode :(

[20:13] <moritz_> as well as prefix and postfix operators

[20:13] <moritz_> so I hope that your <term> rule matches function calls

[20:13] <sorear> [ <prefix>* <term> <postfix>* ] ** <infix> :)

[20:13] <moritz_> sorear: modulo [post]?circumfix

[20:14] <donri> is it about naming, e.g. term: rules?

[20:14] <donri> it's unclear to me when a rule name is significant and not

[20:14] <moritz_> donri: well, all the term:stuff rules are part of the 'proto term { ... }' rule

[20:15] <donri> yes, but is that 'term' rule significant in itself?

[20:15] <sorear> 'term' is significant because it has a well known name

[20:15] <donri> its name, I mean, is that used by stuff inherited by HLL::Grammar

[20:15] <donri> hm I should go read the source for the parent grammar

[20:15] <sorear> NQP's EXPR uses term, I think

[20:16] <sorear> donri: it's written in pir, yhbw

[20:16] <donri> hehe

[20:16] <moritz_> but iirc it's commented at a lot

[20:21] *** Rotwang joined
[20:21] *** porter235 left
[20:21] <masak> moritz_: is it MonoDevelop I should download? it's just version 2.4.2, I thought I was looking for something 4.x

[20:21] <moritz_> masak: mono-2.10.1.tar.gz or so

[20:22] <masak> oh, ok.

[20:22] <sorear> MonoDevelop is an IDE

[20:23] <moritz_> masak: http://ftp.novell.com/pub/mono/sources/mono/mono-2.10.1.tar.bz2

[20:23] <sorear> it is versioned independantly of mono

[20:23] <masak> moritz_: thanks.

[20:24] <tadzik> bbi60

[20:24] <tadzik> and I think I fixed that Test.pm wrongness

[20:27] *** masak left
[20:36] *** mberends left
[20:38] <donri> yay i can has working hll base

[20:38] <donri> thanks guys

[20:39] *** justatheory joined
[20:39] *** _sri joined
[20:46] <moritz_> in the Perl 5 code I'm writing right now I'd so love to use :$foo to mean foo => $foo

[20:58] *** risou_ left
[21:00] *** _twitch left
[21:06] *** y3llow_ joined
[21:06] <sorear> TimToady: in light of STD.pm6:4290, what does / <[ \ß ]> / mean? :)

[21:06] *** pothos_ joined
[21:06] *** whiteknight joined
[21:08] *** y3llow_ is now known as y3llow

[21:08] *** pothos_ is now known as pothos

[21:13] *** takadonet1 joined
[21:13] <takadonet1> flussence: yo

[21:14] <flussence> I fixed the infinite loop bug!

[21:14] <takadonet1> !!!!

[21:14] <flussence> (and pretty much rewrote all of Text::Wrap doing so)

[21:14] <takadonet1> i knew you could do it

[21:15] <flussence> I guess now all that needs doing is cleaning up the leftover p5 pod stuff

[21:15] <takadonet1> and put your name as the main author :)

[21:16] <flussence> hm, I've got half a mind to give you the blame for starting it :)

[21:17] <takadonet1> sounds good

[21:20] <takadonet1> flussence: anything else sir?

[21:23] <sorear> after picking over UTS10 and UTS18, I think I understand how this works

[21:23] <flussence> those global vars need to go away at some point, I'll leave them in for compatibility though until I figure out a better way to do it

[21:23] <sorear> in particular, "ß" ~~ / :i <!before s> ss / will match :)

[21:24] <sorear> slightly counterintuitive but perfectly well-defined

[21:24] <takadonet1> flussence:  ok

[21:24] <moritz_> sorear: as long as we have something to point people to when they submit bug reports... :-)

[21:27] <flussence> (hm, perl6.vim seems to have some outdated "#( )" comment syntax instead of "#`( )"...)

[21:29] <flussence> (":1290,1329s/#/#`/g" seems to make it DWIW)

[21:38] <sorear> std: 1 + #(  ) 2

[21:38] <p6eval> std 4608239: OUTPUT«[31m===[0mSORRY![31m===[0m␤Bogus term at /tmp/EXosEXYD8M line 1 (EOF):␤------> [32m1 + #(  ) 2[33m⏏[31m<EOL>[0m␤Other potential difficulties:␤  Embedded comment seems to be missing backtick at /tmp/EXosEXYD8M line 1:␤------> [32m1 + #(  )[33m⏏[31m 2[0m␤Parse

[21:38] <p6eval> ..failed␤FAIL…

[21:39] <sorear> moritz_: what worries me is that said bug reports probably won't be in English

[21:40] <moritz_> sorear: if they are in German, I can help :-)

[21:40] <sorear> yes, we're quite lucky to have you

[21:41] <sorear> but what if they're in Spanish?

[21:43] <moritz_> I think in general we can ask for English bug reports

[21:43] <moritz_> and if we find nobody who translates, and the automatic translation aren't helpful either, we can still reject them

[21:57] *** colomon joined
[22:06] * tadzik is back

[22:06] <moritz_> wb

[22:17] *** porter235 joined
[22:19] *** PacoLinux_ joined
[22:21] *** porter235 left
[22:24] *** Mowah left
[22:28] <tadzik> rakudo: say $_ while prompt("asd") # is that correct?

[22:28] <p6eval> rakudo c463f5: OUTPUT«asdAny()␤asdAny()␤asdAny()␤asdAny()␤asdAny()␤asdAny()␤asdAny()␤asd»

[22:28] <flussence> I'm guessing the intent is to loop until it gets an EOF, right?

[22:29] *** zby_home left
[22:29] *** masak joined
[22:29] *** zby_home joined
[22:30] <jnthn> rakudo: while prompt("asd") -> $line { say $line }

[22:30] <p6eval> rakudo c463f5: OUTPUT«asdLand der Berge, Land am Strome,␤asdLand der Äcker, Land der Dome,␤asdLand der Hämmer, zukunftsreich!␤asdHeimat bist du großer Söhne,␤asdVolk, begnadet für das Schöne,␤asdvielgerühmtes Österreich,␤asdvielgerühmtes Österreich!␤asd»

[22:30] <flussence> (should prompt() recognise a ^D?)

[22:30] <tadzik> flussence: it does

[22:36] <moritz_> tadzik: yes, prompt() doesn't set $_ implicitly

[22:36] <moritz_> no function does

[22:36] *** kaare_ left
[22:38] <sorear> hello jnthn

[22:39] <masak> jnthn just went to sleep.

[22:39] <sorear> moritz_: 'while' is supposed to set $_, though

[22:39] <masak> sorear: say what? o.O

[22:39] <masak> would you mind checking the spec again?

[22:39] <moritz_> sorear: no.

[22:39] <sorear> actually I'm only sure about that in the prefix case

[22:40] <masak> sorry, but no.

[22:40] <masak> actually, I'm not disagreeing with the fact that you're certain about it. :P

[22:40] *** Rotwang left
[22:41] <sorear> interesting, S04 contradicts itself

[22:41] <moritz_> rakudo: while 3 { .say; last }

[22:41] <p6eval> rakudo c463f5: OUTPUT«Any()␤»

[22:41] <moritz_> rakudo: while 3 -> $_ { .say; last }

[22:41] <p6eval> rakudo c463f5: OUTPUT«3␤»

[22:41] <moritz_> interesting.

[22:41] <masak> not terribly.

[22:41] <moritz_> perl6: while 3 -> $_ { .say; last }

[22:41] <p6eval> pugs, rakudo c463f5: OUTPUT«3␤»

[22:41] <p6eval> ..niecza v3-36-gce33cb7: OUTPUT«Unhandled exception: No value in mainline available for parameter $_␤  at /tmp/QlafEZyHqE line 1 (MAIN mainline @ 3)␤  at /home/p6eval/niecza/lib/CORE.setting line 1261 (CORE C524_ANON @ 2)␤  at /home/p6eval/niecza/lib/CORE.setting line 1262 (CORE module-CORE @ 39)␤ 

[22:41] <p6eval> ..at /home/p6eva…

[22:42] <moritz_> perl6: while 3  { .say; last }

[22:42] <p6eval> niecza v3-36-gce33cb7: OUTPUT«Unhandled exception: Unable to resolve method say in class Any␤  at /tmp/o7uAnmEFKg line 1 (MAIN mainline @ 4)␤  at /home/p6eval/niecza/lib/CORE.setting line 1261 (CORE C524_ANON @ 2)␤  at /home/p6eval/niecza/lib/CORE.setting line 1262 (CORE module-CORE @ 39)␤  at

[22:42] <p6eval> ../home/p6eval/niec…

[22:42] <p6eval> ..rakudo c463f5: OUTPUT«Any()␤»

[22:42] <p6eval> ..pugs: OUTPUT«␤»

[22:43] <dalek> specs: 6828ff4 | sorear++ | S04-control.pod:

[22:43] <dalek> specs: Fix self-contradiction in S04

[22:43] <dalek> specs: review: https://github.com/perl6/specs/commit/6828ff4487

[22:46] *** Mowah joined
[22:46] * Tene prods jnthn about future availability to talk about p6object

[22:48] *** PacoLinux_ left
[22:49] <masak> Tene: not in another 7-8 hours, I'd guess.

[22:50] <Tene> 'k

[22:50] <flussence> Is there an up-to-date .html translation of S26 anywhere?

[22:53] <masak> not that I know.

[22:53] <masak> maybe try generating one with Damian's CPAN module?

[22:53] *** zby_home left
[22:55] <donri> Is there a better way to do this in nqp?    my $int := ""; for $<digit> { $int := $int ~ $_; }

[22:55] *** masak left
[22:56] <dalek> rakudo: d85450a | tadzik++ | Test.pm:

[22:56] <dalek> rakudo: Hopefully fix the skip() insanity

[22:56] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/d85450af26

[22:56] <dalek> rakudo: bfdd78d | tadzik++ | src/core/List.pm:

[22:56] <dalek> rakudo: Fail when trying to reverse an infinite list

[22:56] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/bfdd78dde1

[22:58] <flussence> (hmm, I could use that CPAN module, but I prefer the insane method personally...)

[23:25] <arnsholt> donri: The base HLL grammar has a built-in rule for parsing integers, if that's what you're trying

[23:25] <donri> yep but I'm not sure how to extend it

[23:25] <donri> I want to allow commas

[23:26] <arnsholt> Hmm. Not sure how to do that, off-hand

[23:26] <donri> I have it working but not very elegant :)

[23:27] <donri> that is, manually with <digit>

[23:27] <arnsholt> You could try looking at Rakudo's grammar. Think it allows _

[23:28] <arnsholt> Working and not elegant beats elegant and not working, any day =)

[23:34] <donri> haha true

[23:34] <donri> just curious for sake of learning nqp better

[23:36] <arnsholt> If you're working on an HLL I can recommend looking into how NQP is built up as well

[23:36] <arnsholt> Knowing the grammar well enough to see what constructs are avilable is quite useful, and it's useful for building one's own HLL as well =)

[23:39] <donri> Everyone is building their own web framework these days; I predict in the future everyone will build their own Parrot HLL for every problem domain. ;)

[23:39] <donri> (Joke, but not completely.)

[23:52] <Tene> donri: answering your specific question, pir::join('', @($<digit>))

[23:52] <Tene> oslt

[23:52] <donri> ooh

[23:53] <Tene> donri: alternately, capture it as one string and subst out the ,s oslt

[23:54] <donri> works without the @()

[23:55] *** fisted_ joined
[23:56] <Tene> yeah, rakudo's &radcalc ignores _, and handles alternate bases, etc.

[23:56] *** fisted left
[23:57] *** MayDaniel left
