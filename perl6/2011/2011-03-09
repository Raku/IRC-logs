[00:01] *** cdarroch left
[00:02] *** hercynium joined
[00:02] *** benabik joined
[00:05] *** nymacro joined
[00:07] *** nymacro left
[00:09] *** nymacro joined
[00:17] *** shi left
[00:20] *** tyatpi_ left
[00:28] *** wallberg left
[00:29] *** jaldhar left
[00:30] *** jaldhar joined
[00:31] *** porter235 joined
[00:35] *** porter235 left
[00:45] *** plobsing left
[00:56] *** plobsing joined
[01:08] *** gdey_ left
[01:18] *** plobsing left
[01:23] *** lichtkind left
[01:29] *** jevin left
[01:30] *** gdey_ joined
[01:40] *** woosley joined
[01:45] <sorear> good * #perl6

[01:50] *** plobsing joined
[01:54] <diakopter> *

[02:00] *** noganex joined
[02:01] <Util> o/

[02:02] *** donri left
[02:04] *** noganex_ left
[02:06] *** cotto joined
[02:09] *** gdey_ left
[02:10] *** gdey_ joined
[02:11] *** mizerydearia joined
[02:11] <colomon> \o

[02:11] *** gdey_ left
[02:13] *** whiteknight left
[02:13] *** gdey_ joined
[02:14] *** mizerydearia left
[02:14] *** gimix joined
[02:17] *** mtk left
[02:21] *** hercynium left
[02:25] *** mtk joined
[02:31] *** porter235 joined
[02:35] *** porter235 left
[02:49] *** stkowski left
[02:55] *** jferrero left
[03:09] *** patspam_ joined
[03:09] *** cotto left
[03:13] *** patspam_ left
[03:14] *** cotto joined
[03:15] *** Woody_ left
[03:22] *** patspam__ joined
[03:42] <colomon> rakudo: <a c g t>.roll(100).say;

[03:42] <p6eval> rakudo 3680ac: OUTPUT«taaatatattgtttcatagtcgtaccacccaacacattgtcctcacgcataaccggcggctcgtggctttctgtagaccgaatcttcgctgtttgctctg␤»

[03:42] <dalek> specs: 65912c8 | sorear++ | S12-objects.pod:

[03:42] <dalek> specs: Fix typo declaratoins

[03:42] <dalek> specs: review: https://github.com/perl6/specs/commit/65912c88d9

[03:43] <sorear> I wonder how many different values that line can print.

[03:45] * TimToady thinks it's 4 ** 100

[03:45] <TimToady> pugs: say 4 ** 100

[03:45] <p6eval> pugs: OUTPUT«1606938044258990275541962092341162602522202993782792835301376␤»

[03:46] <sorear> I have my doubts that the Parrot RNG is that good.

[03:47] <TimToady> well, one *can* give rakudo a better RNG, in which case that line *can* print more values :)

[03:51] <sorear> parrot rng isn't *too* horrible

[03:52] <sorear> it's a linear congruential generator with 32 bit seeding and a 48 bit state

[03:53] <TimToady> the digits of pi are pretty random

[03:53] <colomon> I bet parrot will have a better rng before you get all 4 ** 100 results printed out.  ;)

[03:54] <colomon> afk # desperate need of sleep.  will try to get sorear++'s percentage benchmark graph suggestion up and running tomorrow.

[03:58] *** s1n left
[04:02] *** sjohnson left
[04:04] *** satyavvd joined
[04:09] *** s1n joined
[04:14] *** patspam__ left
[04:23] *** Su-Shee_ joined
[04:27] *** Su-Shee left
[04:29] *** JimmyZ joined
[04:29] *** VX64Z left
[04:32] *** porter235 joined
[04:36] *** porter235 left
[05:13] *** cottoo joined
[05:15] *** cotto left
[05:16] *** JimmyZ left
[05:23] *** mberends joined
[05:25] *** cottoo left
[05:32] *** orafu left
[05:33] *** orafu joined
[05:37] *** orafu left
[05:41] *** orafu joined
[05:45] *** kaare_ joined
[05:56] *** justatheory left
[06:03] *** sjohnson joined
[06:19] *** fhelmberger joined
[06:32] *** porter235 joined
[06:36] *** porter235 left
[06:37] *** GinoMan left
[06:45] *** woosley1 joined
[06:46] *** woosley left
[06:47] *** wtw joined
[06:47] *** woosley1 left
[06:48] *** dual left
[06:53] *** dual joined
[06:59] *** mberends left
[07:04] *** nymacro left
[07:08] *** nymacro joined
[07:16] *** eternaleye_ is now known as eternaleye

[07:20] <sorear> ah, the Parrot entropy source is seconds-after-Epoch

[07:20] <jdhore> sorear, Out of curiousity, what made you choose the CLR as the backend for your P6 implementation?

[07:20] <sorear> diakopter++ recommended it to me

[07:21] <sorear> also niecza was (very, very briefly) a fork of diakopter's perlesque

[07:21] *** gdey_ left
[07:21] <jdhore> ah

[07:21] <sorear> I'm quite happy with it, btw.

[07:27] <sorear> to @Larry: consider class A { proto method foo($x) {*} }; class B is A { method foo(1) {} }; class C is A { method foo(2) {} }; class D is B is C {}

[07:27] <sorear> ; D.foo(2);

[07:28] <sorear> a very literal reading of S12:1029 suggests that this should fail

[07:28] <sorear> because D's body scope does not have a foo multi, no foo dispatch is created

[07:28] <sorear> therefore the foo dispatch is inherited from B following the MRO

[07:28] *** Chillance joined
[07:29] <sorear> but B's foo dispatch has a wired-in dispatch list that includes only multis visible in B's MRO

[07:29] *** jaldhar left
[07:29] <sorear> excluding the multi in C

[07:29] <sorear> is this *really* correct?

[07:34] *** jaldhar joined
[07:48] *** Mowah joined
[07:57] *** am0c joined
[08:10] *** woosley joined
[08:21] *** am0c left
[08:22] <moritz_> good morning

[08:33] *** porter235 joined
[08:33] *** Alias joined
[08:34] *** aesop joined
[08:39] *** porter235 left
[08:39] <moritz_> rakudo: say (-10..10).perl

[08:39] <p6eval> rakudo 3680ac: OUTPUT«-10..10␤»

[08:49] *** bacek joined
[09:11] *** Su-Shee_ is now known as Su-Shee

[09:12] <jnthn> morning, #perl6

[09:13] *** daxim joined
[09:13] <tadzik> morning

[09:13] <moritz_> \o

[09:14] <tadzik> jnthn: http://nopaste.snit.ch/36414 mind taking a look in some spare time?

[09:14] <moritz_> tadzik: which branch?

[09:15] <tadzik> master

[09:15] <tadzik> alike on ctmo though

[09:15] <tadzik> bbs

[09:18] <moritz_> anybody got an opinion on https://github.com/rakudo/rakudo/pull/19 ?

[09:19] <moritz_> to me it seems wrong

[09:19] <moritz_> if the user needs to set an env variable to properly use the version control system, shouldn't the user set that variable?

[09:19] <moritz_> or is that special-cased in that weird make?

[09:28] <jmm_> I'm looking at avalaibles modules on perl6.org, and notice gamebase, which seems to use perl5 SDL. am I wrong ? there is a SDL port to perl6 ?

[09:30] <moritz_> jmm_: it uses parrot's SDL bindings

[09:31] <jmm_> umm.

[09:31] <moritz_> what's "umm." about it? :-)

[09:33] <tadzik> moritz_: I'd like to somehow integrate the module API service (http://feather.perl6.nl:3000/) with modules.perl6.org in the near time. What does modules.perl6.org run on, it's a plain html with a cronjob? Where does it live?

[09:33] *** dakkar joined
[09:33] <jmm_> hehe, I wonder what are those parrot binding, and what will happen if you run your program with rakudo.

[09:34] <jmm_> ( I'm googling about parrots binding ).

[09:34] <tadzik> probably nothing, as it's so old everything it uses is probably deprecated :)

[09:34] <moritz_> tadzik: modules.perl6.org is currently static HTML, generated by web/build-project-list.pl on via cronjob

[09:35] <moritz_> tadzik: and unless there's a very good reason, I'd like to keep it as static HTML

[09:38] <tadzik> moritz_: where does it live, feather?

[09:39] <moritz_> tadzik: feather2

[09:47] *** JimmyZ joined
[09:49] <JimmyZ> moritz_: that's a special case :)

[09:50] <moritz_> JimmyZ: in what way? does the make require that variable to be set in the Makefile?

[09:51] <moritz_> JimmyZ: I'm not against the patch, I just try to understand why it's needed

[09:51] <moritz_> JimmyZ: and it needs better comments for sure

[09:53] <JimmyZ> moritz_: without it, run make then outputs '"D:/Program Files/Git/bin/sh.exe": D:strawberryperlbinperl.exe: command not found'

[09:55] <JimmyZ> moritz_: that is, you can't build parrot or rakudo without set shell = cmd

[09:56] *** woosley left
[09:56] <moritz_> because the git installation provides its own sh.exe?

[09:57] <jnthn> tadzik: gah, that looks...weird. I ended up having to remove an arg fromt he macro usage to make it work.

[09:57] <JimmyZ> moritz_: I am not sure why make likes sh.exe, I think make looks for 'sh[.exe]' first,

[10:02] <JimmyZ> moritz_: http://www.gnu.org/prep/standards/html_node/Makefile-Basics.html#Makefile-Basics, this one

[10:03] *** mtk left
[10:04] <moritz_> tadzik, jnthn: I get the same error when building on a new parrot. Works fine on an old one (the one recommended in build/PARROT_REVISION)

[10:05] <JimmyZ> moritz_: it says 'avoid trouble on systems where the SHELL variable might be inherited from the environment'

[10:05] <moritz_> JimmyZ: yes, that makes sense. Thanks for the link

[10:05] <JimmyZ> moritz_: :)

[10:08] *** am0c joined
[10:09] <jnthn> moritz_: Oh

[10:09] <jnthn> moritz_: OK, that explains it.

[10:12] *** mtk joined
[10:16] *** tzhs joined
[10:23] *** _twitch joined
[10:33] <colomon> phenny: tell masak http://justrakudoit.wordpress.com/2011/03/09/benchmarking-p5/ and http://justrakudoit.wordpress.com/2011/03/09/more-on-masaks-p5/

[10:33] <phenny> colomon: I'll pass that on when masak is around.

[10:35] *** porter235 joined
[10:39] *** JimmyZ left
[10:39] *** porter235 left
[10:54] <moritz_> colomon++ # more benchmarking

[10:54] <moritz_> as I mentioned beefore, I found the case of no common character at all very degenerate

[10:58] *** Mowah left
[10:59] *** coldhead left
[11:10] *** Hackbinary left
[11:28] *** kappa joined
[11:30] <kappa> how do I flatten a list of lists in Perl 6?

[11:32] <moritz_> rakudo: .say for ([1, 2], [3, 4])>>.flat

[11:32] <p6eval> rakudo 3680ac: OUTPUT«1␤2␤3␤4␤»

[11:32] <moritz_> kappa: like that

[11:35] <kappa> oh. why is there the hyper >> meta token? is .flat applied to each individual inside array?

[11:35] <moritz_> yes

[11:35] <moritz_> (I don't know, maybe .flat is supposed to recurse, but currently it doesn't in rakudo)

[11:37] *** shi joined
[11:37] <tadzik> an lhf?

[11:38] <moritz_> probably

[11:38] <moritz_> but requires spec cehciking first

[11:41] *** cjk101010 left
[11:45] *** sji joined
[11:45] *** agentzh joined
[11:46] *** shi left
[11:48] *** ircanetsss joined
[11:48] <ircanetsss> hi everyone

[11:49] <ircanetsss> i tried to build rakudo on windows using msvc

[11:49] <ircanetsss> works fine but LWP::Simple module not work 

[11:50] <ircanetsss> it loads ok but when do get it fails

[11:50] <ircanetsss> can you help me?

[11:53] <tadzik> I'm afraid it's broken currently, due to some Parrot changes

[11:54] <tadzik> can you show how it fails?

[11:58] <ircanetsss> yeah, building again

[12:07] *** Layla_91 joined
[12:07] <Layla_91> o/

[12:08] <jnthn> o/

[12:08] <ircanetsss> o/

[12:09] <tadzik> o/

[12:11] <Layla_91> did you ever encounter this on ubuntu ? "Unable to locate tools.jar. Expected to find it in /usr/lib/jvm/java-6-openjdk/lib/tools.jar" I am trying to run ant.. going crazy with these native packages :S

[12:11] <jnthn> :/

[12:11] <jnthn> 'fraid not...

[12:12] *** silent_h_ joined
[12:15] <kappa> rakudo: for ({a=>1, b=>2},{c=>3})>>.flat.flat -> $p { say $p.key, $p.value }

[12:15] <p6eval> rakudo 3680ac: OUTPUT«a1␤b2␤c3␤»

[12:16] <kappa> I ended up with this to flatten a list of hashes. Two flats are ugly indeed. Are they absolutely needed in Rakudo or did I missed something?

[12:31] *** ircanetsss left
[12:31] *** nymacro left
[12:32] *** jferrero joined
[12:33] *** ircanetsss joined
[12:33] <ircanetsss> > use v6;

[12:33] <ircanetsss> _block78

[12:33] <ircanetsss> > use LWP::Simple;

[12:33] <ircanetsss> P

[12:33] <ircanetsss> > my $html = LWP::Simple.get("http://google.com/");

[12:33] <ircanetsss> Nominal type check failed for parameter '$resp'; expected Str but got Failure instead

[12:33] <ircanetsss> >

[12:33] <ircanetsss> tadzik: 

[12:33] <ircanetsss> help me plz if you can

[12:33] <ircanetsss> maybe msvc is wrong?

[12:34] *** ircanetsss left
[12:34] *** nymacro joined
[12:35] *** porter235 joined
[12:37] *** kappa left
[12:38] *** ircanetsss joined
[12:44] *** porter235 left
[12:47] *** Layla_91 left
[13:00] <jnthn> ircanetsss: I build/develop Rakudo with MSVC - that tends to be the best bet for building on Windows.

[13:00] <jnthn> I suspect the issue is with LWP

[13:00] <jnthn> Can't look now though...$dayjob...

[13:00] <moritz_> no, rakudo's socket implementation has a regression

[13:00] <moritz_> which is why I asked ircanetsss to try it with a patch

[13:01] <moritz_> at least I think I did :(

[13:01] <moritz_> https://github.com/rakudo/rakudo/pull/20 these patches might help

[13:03] <moritz_> ah, I did, but in #parrot

[13:08] *** am0c left
[13:08] *** ircanetsss left
[13:10] <takadonet> morning all

[13:12] <jmm_> hi.

[13:12] *** whiteknight joined
[13:17] *** nymacro left
[13:26] *** MayDaniel joined
[13:27] *** AndroUser joined
[13:27] <AndroUser> o/

[13:28] *** AndroUser is now known as colomon_droid

[13:28] <colomon_droid> that's better 

[13:29] <moritz_> colomon has turned into a droid!

[13:33] <colomon> ooo, and this is even better.

[13:33] * colomon has reclaimed his laptop, so isn't ircing from his phone.

[13:37] <xinming> Is there any database driver for rakudo to use?

[13:37] <xinming> Or It's still just a pure language?

[13:37] <moritz_> there's MiniDBI

[13:37] <moritz_> I think it supports sqlite, mysql and postgres

[13:37] <xinming> moritz_: thanks, I'll check it.

[13:38] *** ircanetsss joined
[13:39] <ircanetsss> hi again how to use .pirs from parrot in rakudo perl 6

[13:39] <ircanetsss> ?

[13:39] <ircanetsss> use SDL

[13:39] <ircanetsss> for example

[13:39] <moritz_> ircanetsss: you have to wrap it

[13:39] <moritz_> ircanetsss: for example the gamebase module wraps part of SDL

[13:40] *** MayDaniel left
[13:40] <LoRe> wird zeit dass mal jemand ein jperl macht :)

[13:41] *** ircanetsss left
[13:49] *** colomon_droid left
[13:49] *** ircanetsss joined
[13:49] *** ircanetsss left
[13:51] *** youguy joined
[13:53] *** _twitch left
[13:53] *** youguy left
[13:57] *** kaare_ left
[14:27] <dalek> roast: dc78f9a | moritz++ | S32-list/minmax.t:

[14:27] <dalek> roast: [minmax.t] :by must be passed by name, according to spec

[14:27] <dalek> roast: review: https://github.com/perl6/roast/commit/dc78f9a77e

[14:31] <dalek> rakudo: a38d453 | moritz++ | src/core/Any-list.pm:

[14:31] <dalek> rakudo: fix RT #85674, signature of min() etc.

[14:31] <dalek> rakudo: review: https://github.com/rakudo/rakudo/commit/a38d453904

[14:32] *** kaare_ joined
[14:33] *** alin_ joined
[14:38] *** agentzh left
[14:39] *** donri joined
[14:40] *** porter235 joined
[14:44] *** porter235 left
[14:48] *** patspam_ joined
[14:53] *** daxim left
[14:54] *** Holy_Cow joined
[14:54] *** satyavvd left
[14:56] <colomon> rakudo: say <a c g t>.roll(100)

[14:56] <p6eval> rakudo 3680ac: OUTPUT«accgccaaccggaaagaatgtcctcccaccacaaatgtacgctcgcatggcggttgtcgagtctatgtcggttgcgctatactacatgataatggacgcc␤»

[14:56] <colomon> rakudo: say <a c g t>.roll(100)

[14:56] <p6eval> rakudo 3680ac: OUTPUT«ttacttacccaaagtagaaataagctcgtctttgagaaccgtggactggtactacctatttttagtcaaactcatgactcgcgcctagcccacatacaat␤»

[14:56] * moritz_ wants a .troll method

[14:57] <colomon> would it sit under .Bridge somehow?

[14:57] <moritz_> I hope so :-)

[14:58] <moritz_> /=-~~-=\

[14:58] * moritz_ not a good ASCII bridge builder

[15:00] <donri> rakudo: for ^Inf { next unless <a c g t>.roll(7).join eq "gattaca"; say $^x; last }

[15:00] *** daxim joined
[15:00] <p6eval> rakudo 3680ac: OUTPUT«(timeout)»

[15:00] <pyrimidine> heh

[15:00] <donri> :(

[15:02] <moritz_> donri: go buy us a faster server :-)

[15:02] <pyrimidine> moritz_: what is the current timeout set to?

[15:02] <donri> yea with the money i totally have right

[15:03] <moritz_> pyrimidine: I don't remember

[15:06] *** sji left
[15:08] *** M_o_C joined
[15:09] *** patspam_ left
[15:11] <pyrimidine> rakudo: for ^Inf { next unless <a c g t>.roll(10).join ~~ /gattaca/; say $^x; last }

[15:12] <pyrimidine> boom

[15:12] <p6eval> rakudo 3680ac: OUTPUT«(timeout)»

[15:12] <pyrimidine> rakudo: for ^Inf { next unless <a c g t>.roll(10).join ~~ /gatt/; say $^x; last }

[15:12] <p6eval> rakudo 3680ac: OUTPUT«(timeout)»

[15:13] <pyrimidine> locally that worked pretty fast, so the timeout must be set fairly low

[15:13] *** M_o_C left
[15:13] <pyrimidine> rakudo: for ^Inf { next unless <a c g t>.roll(10).join ~~ /gat/; say $^x; last }

[15:13] <p6eval> rakudo 3680ac: OUTPUT«12␤»

[15:13] <moritz_> what's "pretty fast"?

[15:13] <takadonet> 5 seconds for me

[15:14] <pyrimidine> 1-2 secs for me

[15:14] <takadonet> i had a bad roll :(

[15:14] <moritz_> I think the timeout is about 8 to 12 seconds, but the machine isn't the fastest

[15:15] <donri> > for ^Inf { next unless <a c g t>.roll(100).join ~~ /gattaca/; say $^x; last }

[15:15] <donri> 165

[15:15] <donri> that took many seconds

[15:15] <moritz_> and sometimes the load is high when some project rebuilds

[15:15] <pyrimidine> donri: yes, saw that too

[15:16] <donri> Evolution: brute-force.

[15:22] *** Alias_ joined
[15:22] *** ymasory joined
[15:23] *** Hackbinary joined
[15:32] *** cjk101010 joined
[15:39] *** wtw left
[15:50] *** cotto joined
[15:50] *** justatheory joined
[15:51] *** cotto left
[15:51] *** risou joined
[15:53] *** cotto joined
[15:54] *** justatheory left
[15:58] *** tzhs left
[16:06] <sorear> good * #perl6

[16:08] <tadzik> hello

[16:08] <jmm_> hiho.

[16:08] <colomon> \o

[16:13] *** Patterner left
[16:19] *** Psyche^ joined
[16:19] *** Psyche^ is now known as Patterner

[16:20] <dalek> specs: 56a1b09 | larry++ | S12-objects.pod:

[16:20] <dalek> specs: dispatch generation should work under MI

[16:20] <dalek> specs: 

[16:20] <dalek> specs: Fixed an ambiguity noted by sorear++.  It's not just the presence

[16:20] <dalek> specs: of multi declarations in the current scope that cause autogeneration

[16:20] <dalek> specs: of a dispatch routine.  Any difference in the candidate set at the point

[16:20] <dalek> specs: of call should make a fresh dispatcher.  We can reuse parent dispatchers

[16:20] <dalek> specs: only if they represent the same set of routines.

[16:20] <dalek> specs: review: https://github.com/perl6/specs/commit/56a1b09e13

[16:21] *** Alias left
[16:24] <sorear> excellent.  TimToady++

[16:25] *** MayDaniel joined
[16:26] *** estrabd joined
[16:33] *** wamba joined
[16:41] *** porter235 joined
[16:41] *** cjk101010 left
[16:44] <dalek> niecza: b3b0f37 | sorear++ | / (5 files):

[16:44] <dalek> niecza: Implement user-specified parameter types

[16:44] <dalek> niecza: review: https://github.com/sorear/niecza/commit/b3b0f37f7f

[16:44] *** donri left
[16:45] *** porter235 left
[16:48] *** wamba left
[17:05] <sorear> after updating to a March 8 build of Mono and fudging a few things, I can build against the 2.0 profile again \o/

[17:07] <pyrimidine> sorear++

[17:07] <takadonet> sorear: how does it look? 

[17:08] <sorear> takadonet: how does it look?  entirely possible 2.6 compatibility will be restored today.

[17:08] <sorear> (someone in the mono project)++ # the bug was closed "cannot reproduce in master" and I'm too lazy to bisect

[17:09] <takadonet> sorear: if you do, give me a shout so I can build it :)

[17:11] *** dsp_ joined
[17:12] *** alin__ joined
[17:13] *** alin__ left
[17:15] <jnthn> evenin'

[17:16] <jnthn> Ah, nice clarification in the multi spec. Pretty sure that's what I already implemented it as anyway, though. :)

[17:17] *** alin_ left
[17:18] <sorear> hello jnthn

[17:18] <sorear> perfect timing as always; I need to leave in five

[17:19] <sorear> bleh, current niecza doesn't want to compile itself

[17:19] *** donri joined
[17:20] <sorear> hello donri

[17:20] <donri> hello there

[17:20] <jnthn> sorear: o/

[17:21] <jnthn> sorear: Heh...blame social conventions around $dayjob attendance times. :)

[17:29] *** gdey_ joined
[17:38] *** hudnix left
[17:40] *** justatheory joined
[17:42] *** dsp_ left
[17:45] *** jaldhar left
[17:45] *** jaldhar joined
[17:45] *** daxim left
[17:45] *** shi joined
[17:45] *** icwiener joined
[17:50] *** jaldhar left
[17:50] *** jaldhar joined
[17:51] *** mtk left
[17:51] *** justatheory left
[17:51] *** justatheory joined
[17:51] *** justatheory left
[17:53] *** rokoteko left
[17:53] *** rokoteko joined
[17:54] *** plobsing left
[17:54] *** dsp_ joined
[17:59] *** cdarroch joined
[17:59] *** cdarroch left
[17:59] *** cdarroch joined
[17:59] *** fhelmberger left
[17:59] *** jaldhar left
[17:59] *** mtk joined
[18:00] *** gdey_ left
[18:01] *** gdey_ joined
[18:02] *** silent_h_ left
[18:06] *** ab5tract joined
[18:10] *** stephenlb joined
[18:10] *** dakkar left
[18:11] *** plobsing joined
[18:13] *** mtk left
[18:14] *** mtk joined
[18:16] *** ashleydev left
[18:21] *** ashleydev joined
[18:21] *** mtk left
[18:23] *** mtk joined
[18:24] *** Holy_Cow left
[18:25] *** Holy_Cow joined
[18:26] *** mtk left
[18:30] <stephenlb> Wall is breifly mentioned in a heroes song: http://www.pubnub.com/blog/internet-heroes-song-crockford-dahl-wall-torvalds-resig-souders

[18:31] <stephenlb> s/breifly/briefly

[18:31] *** mberends joined
[18:31] *** mtk joined
[18:33] *** Eevee left
[18:33] *** Eevee joined
[18:33] *** ymasory left
[18:36] <colomon> So, at what point do I give up on benchmarking a p5 run?  A pair of strings that takes 167 seconds in one of the p5 scripts has now been running for over an hour in another....

[18:39] *** masak joined
[18:39] <masak> gd'eve, zebras.

[18:39] <phenny> masak: 10:33Z <colomon> tell masak http://justrakudoit.wordpress.com/2011/03/09/benchmarking-p5/ and http://justrakudoit.wordpress.com/2011/03/09/more-on-masaks-p5/

[18:39] <colomon> \o

[18:40] <masak> colomon: \o/

[18:40] <masak> I saw the first one earlier today. will read the second now.

[18:41] <colomon> I kind of hope someone else tries running a few, because right now it's looking like a very self-serving benchmarking.  ;)

[18:41] *** porter235 joined
[18:41] <masak> I don't mind that one jot.

[18:41] <jnthn> o/ masak!

[18:42] <masak> moritz_: you also seem to be serving moritz_ and... fox!

[18:42] <masak> jnthn: \o!

[18:42] <tadzik> yayitsmasak!

[18:44] <colomon> masak: oooo, good point.  I just noticed moritz_ beat me out on my new, longer DNA test.

[18:44] *** ymasory joined
[18:44] <colomon> (not posted yet)

[18:44] *** jevin joined
[18:45] <masak> amd all my old rationales just go out the window... :P

[18:45] <colomon> dna-2, p5-colomon.pl, 16.0393736, 15.921665, 16.17857

[18:45] <colomon> dna-2, p5-fox.pl, 19.6781661, 19.585883, 19.813437

[18:45] <colomon> dna-2, p5-matthias.pl, 175.119308, 173.464796, 177.424137

[18:45] <colomon> dna-2, p5-moritz.pl, 15.4255487, 15.365786, 15.51322

[18:45] <colomon> dna-2, p5-util.pl, 49.9942837, 49.677288, 50.362169

[18:45] <masak> moritz_++

[18:45] <masak> colomon++

[18:45] <masak> fox++

[18:45] *** porter235 left
[18:46] *** gdey_ left
[18:46] <Juerd> At the Dutch Perl Workshop I heard that contexts are gone. What's a good place to read about the decision and its consequences?

[18:46] <masak> Juerd: I think moritz_ once wrote a nice post about it.

[18:46] <masak> but I might be hallucinating that.

[18:47] <masak> the gist of it all, though, is that (amount) contexts don't mesh with signature MMD.

[18:48] <jnthn> I know the moritz_ post you're referring to. It certainly exists and is very worth a read.

[18:48] <tadzik> rakudo: for 1..5 { NEXT if $_ ~~3; say $_ } # what's wrong?

[18:48] <p6eval> rakudo a38d45: OUTPUT«1␤2␤Could not find sub &NEXT␤  in <anon> at line 22:/tmp/wwejO4Xu6S␤  in main program body at line 1␤»

[18:50] <colomon> NEXT?

[18:50] <tadzik> em, the phaser, right? Like continue; in C

[18:50] <colomon> rakudo: for 1..5 { next if $_ ~~3; say $_ } # what's wrong?

[18:50] <p6eval> rakudo a38d45: OUTPUT«1␤2␤4␤5␤»

[18:51] <colomon> not a phaser.

[18:51] <colomon> unless there's also a phaser I don't know about there.  (very possible)

[18:51] <tadzik> ok, thanks

[18:52] <Juerd> moritz_: Where can I find your writeup on the removal of Contexts?

[18:53] <jnthn> Juerd: Ah, here it is: http://perlgeek.de/blog-en/perl-6/immutable-sigils-and-context.html

[18:53] <Juerd> Thanks a lot

[18:54] <Juerd> In 2009 already? Oh my, I really haven't been paying attention!

[18:54] <Juerd> jnthn: That post does assume context still exists

[18:55] <jnthn> jnthn: Not in the inwards-flowing sense though.

[18:55] <Juerd> But in a different way, with an object.

[18:55] <Juerd> Right, so it doesn't propagate but essentially the functionality is still there

[18:55] *** justatheory joined
[18:55] <masak> <Juerd> In 2009 already? Oh my, I really haven't been paying attention!

[18:56] <masak> Juerd: so the "while you blinked" wasn't too out of place, then :P

[18:56] <Juerd> I'm not sure this could still count as blinking :)

[18:57] <tadzik> masak: mind a question about Pls?

[18:57] <masak> Juerd: anyway, welcome back. enjoy the lack of contexts. :)

[18:57] <masak> tadzik: sure. fire away.

[18:57] <Juerd> I'm not "back" in any sense

[18:59] <tadzik> masak: in Pls, there is a standard, predefined method running fetch, build, test, install. What if you want to omit testing phase, as in --notest of --force? Overloading the entire method breaks the sense of Pls

[18:59] <masak> yes.

[18:59] <masak> likely the predefined method is too simplistic.

[19:00] <masak> and needs to be extended.

[19:00] <masak> it's not in Pls::Core, is it?

[19:00] <tadzik> I think it is, lemee see

[19:01] <tadzik> oh, there is !fetch-helper, !build-helper etc, so I think the idea is that an implementation will be able to just overload one of those?

[19:01] *** gdey_ joined
[19:02] <masak> that's not something that I intended, no.

[19:03] <masak> let's take a step back for a while. I don't think I understand your use case.

[19:03] <masak> do you want to do something that the tests don't already do?

[19:03] <tadzik> what tests?

[19:03] <tadzik> I want my implementation to omit tests, under some circumstances

[19:03] <masak> pls's tests.

[19:04] <masak> 'pls test <module>' should do what you want.

[19:05] <tadzik> hrm, I don't think you understand my use case :)

[19:06] <tadzik> or another way: what if you want to skip resolving dependencies?

[19:07] <masak> oh!

[19:07] <masak> I think that's a use case Pls simply does not implement.

[19:07] <masak> it's very keen on dependencies.

[19:08] <masak> it can install things without the tests passing, but it can't test things without the dependencies being installed.

[19:08] <tadzik> the workaround would be to overload a dependencies() method in Pls::Project, but that's rather ugly

[19:08] <masak> guess I didn't think there'd be anyone wanting that.

[19:09] <masak> I mean, it's a module installer, not a development framework.

[19:09] <tadzik> yeah, but even cpanminus has --nodeps or something

[19:09] <masak> oh, ok.

[19:09] <masak> as I said, it can probably be added in pls itself rather than extending it from the outside.

[19:10] <masak> similar to --force and --notest

[19:10] <tadzik> which are inside?

[19:10] <tadzik> aye, I see

[19:15] *** plobsing left
[19:21] <mberends> colomon: ahem, comparing p5-colomon.pl to a (slower) unpuplished one of my own, yours failed to find the longest common substring. Using the third data set from http://justrakudoit.wordpress.com/2011/03/09/more-on-masaks-p5/, yours found ' were' and it should have found ' other' :/

[19:21] <mberends> and yes, I'll publish mine soon ;)

[19:22] <colomon> mberends: 

[19:22] <colomon> mberends: yes, been wondering about correctness in all the codes, too.

[19:23] <mberends> it may be just a minor detail in your port

[19:23] <colomon> actually, though, I think you're wrong in this case

[19:23] <colomon> it's " were ", not " were".

[19:23] <colomon> or at least, it should be

[19:23] <mberends> ah, ok :)

[19:24] <colomon> give me a sec to look closer

[19:25] <mberends> add quotes to the output, and also print the .chars result

[19:25] <colomon> oooo, hey, p5-matthias.pl actually completed the first trial run on my "super-long" Dumas text comparison

[19:25] <colomon> of course, it will be until tomorrow until the entire thing is done at this rate.  :)

[19:27] <mberends> p5-mberends.pl ex-contest, and not a speed record either http://pastebin.com/rK4tz0UE

[19:27] <mberends> colomon: please try mine on a few texts and give me your impressions

[19:29] *** plobsing joined
[19:30] <colomon> mberends: I'll give it a try, but as I say, the benchmarking is very tied up with a slow routine at the moment.  :)

[19:30] <colomon> mberends: my code finds both * were * and * other*, and since they're tied in length either one is a valid answer.

[19:30] <colomon> afk

[19:32] *** [particle] left
[19:33] *** gdey_ left
[19:33] *** gdey_ joined
[19:35] <Util> Blizkost requires Perl 5.10 to Configure, saying:

[19:35] <Util>     "Ideally we'd support back further, but fixing the macro framework back in time is not a priority"

[19:35] <Util> Darwin 10.5 uses Perl 5.8, so I can't make Blizkost part of the binary .dmg.

[19:35] <Util> What will it take to resolve this?

[19:36] <dalek> ecosystem: a0d4d4a | tadzik++ | projects.list:

[19:36] <dalek> ecosystem: Add 2 new modules of mine

[19:36] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/a0d4d4a388

[19:36] <mberends> Util: any idea what macro(s) the comment is referring to?

[19:37] <Util> No; I have not poked that deep into it, hoping that someone in the channel already knew.

[19:38] <Util> afk for 20 minutes

[19:39] *** ymasory left
[19:41] *** impious joined
[19:42] <colomon> mberends: ooo, interesting approach!

[19:43] <mberends> really an electronic engineer's approach

[19:44] <mberends> your could build it with far fewer nand gates than the other solutions ;)

[19:48] *** marietta joined
[19:48] *** impious left
[19:48] *** ab5tract left
[19:50] *** [particle] joined
[19:52] *** ymasory joined
[19:54] *** jeteve_ joined
[19:56] *** jjore_ left
[19:59] <masak> mberends++

[19:59] <masak> mberends: fwiw, I've had the same feeling about .chars at times. it's a slightly unfortunate name.

[20:00] *** jjore joined
[20:00] *** fisted_ is now known as fisted

[20:01] <mberends> masak: I also made the mistake of optimistically expecting p5-mberends.pl to be faster than it turned out to be. At least I only told you verbally :/

[20:02] <masak> p5 speed seems highly non-intuitive.

[20:03] <mberends> would you be interested in a naive C translation?

[20:04] <masak> hm... I'm not going to actually need a LSC algorithm anytime soon. and this is a Perl 6 contest... :P

[20:04] <masak> LCS*

[20:07] *** ymasory left
[20:12] <Util> back

[20:13] <masak> Util: \o

[20:18] *** petdance joined
[20:22] <flussence> rakudo: 'abcde' ~~ m:ex/../ # nyi?

[20:22] <p6eval> rakudo a38d45: OUTPUT«===SORRY!===␤Adverb 'ex' not allowed on m at line 22, near " # nyi?"␤»

[20:22] <jnthn> std: 'abcde' ~~ m:ex/../

[20:22] <p6eval> std 4608239: OUTPUT«ok 00:01 122m␤»

[20:22] <jnthn> NYI I expect.

[20:24] * masak thought :ex was killed off

[20:24] <flussence> S05:504 - still there

[20:24] <masak> hm, maybe that was some other regex adverb, then.

[20:29] <Util> jnthn: Please see my earlier Blitkost Q: http://irclog.perlgeek.de/perl6/2011-03-09#i_3376521

[20:30] <jnthn> Util: I saw it, but don't know the answer. sorear++ probably does.

[20:30] <Util> thanks

[20:34] *** ymasory joined
[20:34] <[Coke]> Util: you could include a copy of perl 5.12.x in the dmg.

[20:37] *** Util joined
[20:42] *** Su-Shee left
[20:42] *** porter235 joined
[20:47] *** porter235 left
[20:49] *** justatheory left
[20:51] *** petdance left
[20:56] *** MayDaniel left
[20:57] *** Rotwang joined
[21:02] *** SalmanAbbas007 joined
[21:02] *** SalmanAbbas007 left
[21:09] *** gdey- joined
[21:13] *** gdey_ left
[21:16] *** coldhead joined
[21:16] *** gdey_ joined
[21:21] *** gdey- left
[21:24] <masak> 'night, #perl6

[21:25] *** masak left
[21:26] *** justatheory joined
[21:34] *** y3llow_ joined
[21:35] *** y3llow left
[21:35] *** y3llow_ is now known as y3llow

[21:42] *** starcoder left
[21:43] *** imamelia joined
[21:45] *** cognominal left
[21:49] *** starcoder joined
[21:50] *** petdance joined
[21:51] <takadonet> rakudo: my $ya = "<[AGTC]>"; my $x= rx/$ya/; if 'A' ~~ $x { say 'boo' }

[21:51] <p6eval> rakudo a38d45:  ( no output )

[21:51] <takadonet> any takers?

[21:51] *** imamelia left
[21:52] <jnthn> rakudo: my $ya = "<[AGTC]>"; my $x= rx/<$ya>/; if 'A' ~~ $x { say 'boo' }

[21:52] <p6eval> rakudo a38d45: OUTPUT«boo␤»

[21:52] <takadonet> !!!!!!!!!!!1

[21:52] <jnthn> $ya = interpolate as literal, <$ya> = interpolate as regex syntax.

[21:52] <sjohnson> heh

[21:52] *** kaare_ left
[21:52] <jnthn> They're (happily) distinct operations in Perl 6. :)

[21:53] <jnthn> Which means it's harder to get vulnerable to a regex injection exploit. :)

[21:53] <huf> also different things look different ;)

[21:53] <huf> \o/

[21:53] <jnthn> Right :)

[21:53] <takadonet> Had a hard time finding that rule in syn....

[21:53] <takadonet> n/m

[21:53] <takadonet> i just found it

[21:53] <takadonet> hehe

[21:55] *** justatheory left
[21:55] *** stkowski joined
[21:57] *** mberends left
[21:57] *** justatheory joined
[21:58] *** [Coke] left
[21:59] *** shi left
[21:59] *** __rnddim__ joined
[21:59] *** cognominal joined
[21:59] *** [Coke] joined
[22:03] *** lue left
[22:04] *** ymasory left
[22:09] *** Holy_Cow left
[22:14] *** gdey_ left
[22:14] *** gdey_ joined
[22:14] *** [particle]1 joined
[22:16] *** [particle] left
[22:26] *** justatheory left
[22:36] *** TheMartianGeek joined
[22:39] *** jferrero left
[22:40] *** sftp joined
[22:40] *** jferrero joined
[22:43] *** porter235 joined
[22:48] *** porter235 left
[22:49] *** petdance left
[22:53] *** noganex left
[22:59] *** ymasory joined
[23:10] *** noganex joined
[23:11] *** cosimo joined
[23:15] *** marietta left
[23:22] *** justatheory joined
[23:22] *** jeteve_ left
[23:28] <sorear> good * #perl6

[23:28] *** risou left
[23:30] <sorear> Util: I am thorougly disgusted by blizkost's current design and have blanked all details of it from my memory.

[23:31] *** petdance joined
[23:33] <jnthn> .oO( The disgusting parts are probably the bits left over from when I hacked on it... )

[23:34] <diakopter> sorear: you've been enlightened since your time working on it, or...?

[23:35] <TheMartianGeek> Speaking of bad design, PerlMonks.  I don't know what is up with their forum design, but it's awkward both to use and aesthetically.

[23:38] <sorear> fun fact: perlmonks is a fork of everything2.com

[23:38] <sorear> hmm

[23:39] <sorear> I am starting to reply to pmichaud.  However, my reply would make more sense on p6l than p6c.

[23:39] <sorear> Should I break the thread?

[23:39] <sorear> Should I send it to p6l, p6c, or both? (independant of above)

[23:40] <sorear> diakopter: trying to improve blizkost put me against increasing resistance; I gave up in the middle of trying to allow access to Perl 5 hashes

[23:41] <sorear> diakopter: if I were to start a blizkost-like project today, I would use fork() and some kind of remoting stuff.  Trying to link libperl.so is not work it

[23:41] <sorear> worth

[23:42] *** patch_ joined
[23:46] *** Rotwang left
[23:54] <Util> sorear: thanks. Sounds like the right thing to do for now is continue to omit Blizkost from the R* binary.

[23:55] *** fisted_ joined
[23:57] *** fisted left
