[00:02] *** am0c joined
[00:07] *** silent_h_ joined
[00:16] *** ymasory left
[00:18] *** ymasory joined
[00:21] *** silent_h_ left
[00:22] *** rgrau left
[00:24] *** jevin left
[00:25] *** jevin joined
[00:25] *** silent_h_ joined
[00:35] *** am0c_ joined
[00:35] *** jevin left
[00:35] *** am0c left
[00:36] *** jevin joined
[00:48] *** am0c_ is now known as am0c

[00:54] *** jevin left
[00:54] *** jevin joined
[01:02] *** silent_h_ left
[01:03] *** am0c left
[01:19] *** am0c joined
[01:30] *** whiteknight left
[01:30] *** woosley joined
[01:31] *** woosley left
[01:32] *** woosley joined
[01:44] *** nymacro joined
[01:51] *** plobsing_ joined
[01:53] <sorear> good * #perl6

[01:54] *** plobsing left
[01:55] <colomon> \o

[01:56] <Tene> phenny: ask masak how that sliding window alg we discussed worked out for him.

[01:56] <phenny> Tene: I'll pass that on when masak is around.

[01:56] <Tene> phenny: thanks

[02:16] <PerlJam> re the viking bear looking like masak ... years ago I took an art class where we were paired and how to sculpt our partner in clay.  The teacher said that invariably the sculpture ended up looking like the sculptor rather than the subject.  So perhaps there's some truth to "making things in our own image" :-)

[02:16] <PerlJam> s/how/had/

[02:16] <PerlJam> (the teachers words were borne out in our experience too)

[02:20] *** am0c left
[02:23] *** am0c joined
[02:27] *** justatheory left
[02:57] *** Transformer joined
[02:58] *** Transformer left
[03:00] *** bacek left
[03:23] *** Su-Shee_ joined
[03:26] *** Guest17428 joined
[03:27] *** Su-Shee left
[03:27] *** Guest17428 left
[03:29] <geekosaur> it's certainly true from a cognitive point of view

[03:40] *** bacek joined
[03:44] *** sftp left
[03:51] *** hudnix left
[03:56] *** ymasory left
[04:17] *** orafu left
[04:17] *** orafu joined
[04:28] <sorear> mm, niecza bootstrap failed

[04:28] <sorear> looks like there won't be a release this month

[04:29] <sorear> v5 will most likely come out May 1 or so after I have time to sort out what broke

[04:31] *** TheD joined
[04:53] *** kaare__ joined
[05:12] *** Helios` left
[05:13] *** Helios` joined
[05:15] *** xinming_ joined
[05:18] *** xinming left
[05:25] *** birdwindupbird joined
[05:34] *** daxim left
[05:37] *** daxim joined
[05:55] *** bacek left
[05:58] *** Mowah joined
[06:10] *** [Coke] left
[06:11] *** bacek joined
[06:26] *** sivoais joined
[06:28] *** sivoais left
[06:28] *** Su-Shee_ is now known as Su-Shee

[06:29] *** sivoais joined
[06:35] *** [Coke] joined
[06:35] *** mj41 joined
[06:45] *** dju left
[06:45] *** mtk left
[06:53] *** mtk joined
[07:16] *** yegor joined
[07:18] *** yegor left
[07:19] *** elkng joined
[07:23] <moritz> jnthn: I get two test failures in ctmo (t/setting/ {hash,resizablepmcarray}) - is that expected?

[07:34] *** [particle]1 joined
[07:36] <tadzik> same here

[07:36] *** [particle] left
[07:39] *** cosimo left
[07:45] *** am0c_ joined
[07:48] *** am0c left
[07:52] *** am0c_ is now known as am0c

[07:55] *** rhebus_ joined
[07:55] *** rhebus left
[07:55] *** rhebus_ is now known as rhebus

[08:02] *** yegor joined
[08:05] <jnthn> ohhai

[08:05] <jnthn> moritz: We don't go fiddling with Parrot types in NQP's setting any more.

[08:05] <jnthn> moritz: So the tests are no longer valid.

[08:08] *** fhelmberger joined
[08:09] *** snearch joined
[08:09] *** fhelmberger left
[08:09] *** fhelmberger joined
[08:11] <moritz> ok 4 - Join elements

[08:11] <moritz> Could not find sub join

[08:11] <moritz> so sub join() is gone?

[08:12] <jnthn> moritz: I'm fine with that being put back.

[08:12] <jnthn> moritz: Didn't remove it intentionally.

[08:12] <jnthn> Just needs to go in one of the files in core, or add one.

[08:12] * mathw mutters darkly about namespace pollution mumble mumble

[08:13] <jnthn> The only intentional change is we don't monkey-patch Parrot's PMCs any more. :)

[08:13] <jnthn> It was a little anti-social, after all. ;)

[08:13] <moritz> a bit javascript-esque

[08:13] <jnthn> mathw: Relax. It's a setting. It's just the outer lexical scope of your program. :)

[08:14] <jnthn> mathw: Compile with --setting=MYAWESOMESETTING and you can define your own. ;)

[08:14] <mathw> \o/

[08:14] <mathw> or just redefine join if I want to :D

[08:14] <mathw> I do like the idea that the setting is just another lexical scope

[08:14] <mathw> it makes so much sense

[08:14] <jnthn> :)

[08:15] *** am0c_ joined
[08:17] * mathw dives headlong into the dark and unhappy world of network packet captures

[08:18] *** am0c left
[08:18] *** tzhs joined
[08:18] *** yegor left
[08:18] *** am0c_ is now known as am0c

[08:19] *** donri joined
[08:27] <rhebus> \

[08:30] *** bacek left
[08:33] *** yegor joined
[08:33] *** yegor left
[08:35] *** jjore left
[08:39] *** jjore joined
[08:41] *** pernatiy joined
[08:46] *** bacek joined
[08:52] *** daxim_ joined
[08:52] *** daxim left
[08:53] *** [particle]1 left
[08:56] *** jjore left
[08:57] *** cotto left
[09:01] <rhebus> gah ssh is being totally weird with my github usernames

[09:02] <rhebus> it keeps authenticating as the wrong user, even when i hide that user's id_rsa from ssh

[09:02] <rhebus> i don't know how that's even possible

[09:02] <donri> does perl6 have reserved keywords that can be syntax errors to use for identifiers?

[09:02] <donri> or does TTIAR "solve" that

[09:03] <moritz> donri: it has nothing to do with TTIAR

[09:03] <donri> oh? :)

[09:03] <moritz> rakudo: my %h = if => 3; say %h.perl

[09:03] <p6eval> rakudo 8533c3: OUTPUT«{"if" => 3}␤»

[09:03] <moritz> rakudo: sub if() { say "alive" }; if();

[09:03] <donri> i suppose

[09:03] <p6eval> rakudo 8533c3: OUTPUT«alive␤»

[09:03] <moritz> rakudo: sub if() { say "alive" }; if;

[09:03] <p6eval> rakudo 8533c3: OUTPUT«alive␤»

[09:03] *** am0c left
[09:03] <donri> i'm thinking in python, where i think TTIAR *would* be a solution if it was used

[09:04] <mathw> What's TTIAR?

[09:04] <donri> two terms in a row

[09:04] <moritz> two terms in a row

[09:04] <mathw> ah

[09:04] <mathw> that

[09:04] <donri> nowait there are situations where ttiar isn't enough in python

[09:04] <donri> recv = yield

[09:05] * moritz doesn't see two terms in a row

[09:06] <donri> exactly :P

[09:06] <donri> i was working under the assumption that all situations involving keywords are ttiar in python

[09:06] <donri> it's an example to the contrary

[09:06] <donri> also i might be misusing the term 'ttiar'

[09:07] <donri> + i'm probably thinking of 'statements' rather than keywords

[09:07] <moritz> to answer your question, Perl 6 does not have reserved words

[09:07] <donri> ok :)

[09:07] <donri> they're rather annoying in python

[09:08] <moritz> but it doesn't matter all that much, because variables and attributes have sigils anyway

[09:08] <donri> i guess it makes sense in python's philosophy to keep the grammar simple and the rules obvious but "meh"

[09:08] <donri> moritz: well, subs

[09:08] <moritz> so even if perl had reserved words, $next wouldn't collide with next;

[09:09] <jnthn> Recently when reading some C# code, I did a double take when I saw a variable whose name started with an @

[09:09] <donri> do you have to use () to disambiguate then?

[09:09] <jnthn> I was like "huh, C# doesn't have sigils?!"

[09:09] <jnthn> So I went and read the langauge grammar.

[09:09] <moritz> rakudo: sub if() { say "alive" }; if

[09:09] <jnthn> Turns out that if you want to use a reserved word as a variable name, you put an @ before it. :D

[09:09] <p6eval> rakudo 8533c3: OUTPUT«alive␤»

[09:10] <donri> rakudo: if

[09:10] <p6eval> rakudo 8533c3: OUTPUT«Could not find sub &if␤  in main program body at line 22:/tmp/6UULO6r94d␤»

[09:10] <donri> it's not really ambigous if it's not syntactically an if

[09:10] <moritz> jnthn: is that allowed for non-reserved words as well?

[09:10] *** bacek left
[09:10] *** bacek joined
[09:11] <jnthn> moritz: yes ;)

[09:11] <donri> rakudo: sub next() { say "next!"; }; multi sub dostuff() { next; }; dostuff()

[09:11] <p6eval> rakudo 8533c3: OUTPUT«next!␤»

[09:11] <jnthn> moritz: So I could start using it on all my arrays :)

[09:11] <donri> how do you get the 'next' statement instead?

[09:11] <donri> or is it a sub?

[09:11] <jnthn> I think it's a sub and you've just gone and overridden it :)

[09:12] <donri> aye

[09:12] <jnthn> Probably you can get the "real" one with SETTING::next();

[09:12] <jnthn> In theory. Not in current Rakudo.

[09:12] <moritz> jnthn: I should troll some C# boards on the internet suggesting to always use @ on variables as a "best" practice

[09:12] <moritz> or OUTER::next() or so

[09:12] <jnthn> moritz: :D

[09:12] <mathw> moritz: yes yes!

[09:12] <mathw> do it

[09:12] <donri> but is there any situation such that i'm trying

[09:12] <mathw> then they can come tell us we need to use SETTING::next() always in case someone overrides it

[09:12] *** [particle] joined
[09:12] <mathw> and then we can practise our defenestration

[09:12] *** cotto joined
[09:13] <donri> is @ part of the identifier in C#?

[09:13] <donri> the convention in python is "append _" but it's part of the name so you have to handle that case everywhere

[09:13] *** jjore joined
[09:14] <moritz> "meh"

[09:14] * jnthn wrestles with PAST::Compiler

[09:14] * mathw thinks Python has a few too many underscores in some places

[09:17] <donri> hehe

[09:18] <mathw> I don't get why __init__

[09:18] <mathw> it looks like some sort of dirty compiler internal to me

[09:18] <mathw> why not just reserve all uppercase identifiers as special and call it INIT?

[09:18] <mathw> oh wait we did that here already :)

[09:19] <dalek> nqp/ctmo: 7aa35a5 | jonathan++ | src/ops/nqp.ops:

[09:19] <dalek> nqp/ctmo: Add a way to take a type object and find out if its representation considers itself as representing a boxed primitive.

[09:19] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/7aa35a51b9

[09:47] <rhebus> can someone add ppotter as a committer so i can update t/spec/S32-str/indent.t with a new plan?

[09:48] <bbkr_> tadzik: my Pies bootstrap problem occured on Debian 5.0 "Linux dev.v.l 2.6.29.2-vs2.3.0.36.12 #1 SMP Fri May 8 16:22:41 CEST 2009 i686 GNU/Linux", with libtest-harness-perl 3.12-1 installed

[09:48] <phenny> bbkr_: 26 Apr 20:08Z <tadzik> tell bbkr_ what os is that? Is that possible that 0 is not a success on it?

[09:48] *** yegor joined
[09:49] <bbkr_> tadzik: 0 means success, nothing exotic here

[09:49] <tadzik> strange

[09:49] <tadzik> you can reproduce that, righ?

[09:50] *** birdwindupbird left
[09:50] <bbkr_> checking...

[09:51] *** birdwindupbird joined
[09:52] <bbkr_> yes

[09:52] <tadzik> oh, I has a bug

[09:52] <bbkr_> i'll check if it has something to do with TODO tests

[09:52] <tadzik> my thought is maybe prove gives some non-zero exit status on such occasion

[09:54] <tadzik> bugs! bugs everywhere!

[09:54] *** woosley left
[09:55] <rhebus> who handles pull requests for perl6/roast?

[09:56] <moritz> rhebus: nobody, which is why we hand out commit bits instead :-)

[09:56] <moritz> rhebus: what's your github ID?

[09:56] <rhebus> ppotter

[09:56] <moritz> hugme: add ppotter to perl6

[09:56] * hugme hugs ppotter. Welcome to the perl6 github organization

[09:56] <rhebus> nice one

[09:57] <dalek> roast: 5f51953 | (Philip Potter)++ | S32-str/indent.t:

[09:57] <dalek> roast: add plan to S32-str/indent.t

[09:57] <dalek> roast: review: https://github.com/perl6/roast/commit/5f5195342d

[09:57] <moritz> rhebus++

[09:58] <rhebus> yeah, github-- or ssh-- or something. i have 2 github accounts; rhebus is already a perl6 committer but i just can't get rhebus's identity to auth through ssh atm :(

[10:01] <moritz> you can configure the public ssh key that github uses for auth

[10:02] <moritz> https://github.com/account -> SSH Public Keys

[10:05] <tadzik> what the hell, pies stopped to even build for me

[10:10] <tadzik> zsh: segmentation fault  panda install .

[10:10] <tadzik> ohgreat

[10:11] <bbkr_> tadzik: confirmed, when prove has any todo() test passed it returns 1 on exit. 

[10:12] <tadzik> cool

[10:12] <tadzik> what does it return on error?

[10:12] <bbkr_> tadzik: 1

[10:13] <tadzik> supercool >{(

[10:13] <bbkr_> I removed todo() from JSON::Tiny 04-roundtrip.t and Pies installed

[10:14] <tadzik> http://nopaste.snit.ch/42225

[10:14] <bbkr_> which is weird, because according to TAP::Harness todo test always pass

[10:16] <bbkr_> and rakudo.org is down (blank page). day for disasters :)

[10:19] <tadzik> meh, turns out it's me who broke my parrot :)

[10:27] *** yegor left
[10:34] *** yegor joined
[10:35] *** yegor left
[10:37] *** elkng left
[10:42] <rhebus> t/spec/S19-command-line/dash-e.t fails on my system; i suspect, though, it's my shell and not rakudo which is at fault here

[10:42] <rhebus> http://smolder.parrot.org/app/projects/tap_stream/15626/389

[10:43] <rhebus> other people seem to have the same issue, but it's not universal: http://smolder.parrot.org/app/projects/test_file_history/5/1015

[10:50] <rhebus> perl6: say q{\c[LATIN SMALL LETTER A WITH DOT ABOVE]}

[10:50] <p6eval> pugs, rakudo 8533c3, niecza v4-76-g7bf5ef9: OUTPUT«\c[LATIN SMALL LETTER A WITH DOT ABOVE]␤»

[10:50] <rhebus> perl6: say q[\c[LATIN SMALL LETTER A WITH DOT ABOVE]]

[10:51] <p6eval> niecza v4-76-g7bf5ef9: OUTPUT«Unhandled exception: Unable to resolve method ast in class List␤  at /home/p6eval/niecza/src/NieczaActions.pm6 line 944 (NieczaActions C384_ANON @ 1)␤  at /home/p6eval/niecza/src/NieczaActions.pm6 line 990 (NieczaActions NieczaActions.process_nibble @ 4)␤  at

[10:51] <p6eval> ../home/p6eval/niecza/sr…

[10:51] <p6eval> ..pugs: OUTPUT«\c[LATIN SMALL LETTER A WITH DOT ABOVE]␤»

[10:51] <p6eval> ..rakudo 8533c3: OUTPUT«===SORRY!===␤Confused at line 22, near "]"␤»

[10:52] <rhebus> i suspect that the second test in t/spec/S19-command-line/dash-e.t is incorrect; it looks like a single-quotish context but it expects interpolation

[10:53] <rhebus> oh wait, i'm getting confused

[10:53] <rhebus> perl6: say q[ȧ]

[10:53] <p6eval> rakudo 8533c3, niecza v4-76-g7bf5ef9: OUTPUT«ȧ␤»

[10:53] <p6eval> ..pugs: OUTPUT«decodeUTF8': bad data: '\551'␤È§␤»

[10:55] *** cosimo joined
[10:59] <rhebus> so yeah, here is the summary of the issue I'm seeing: http://scsys.co.uk:8002/99941

[11:00] <rhebus> http://scsys.co.uk:8002/99942 shows that echo works fine, so i'm not sure where the encoding issue is creeping in

[11:07] <rhebus> huh, --target=parse doesn't give any output for -e programs -- anyone else see this?

[11:13] <TiMBuS> yep its a known issue

[11:14] <rhebus> ok

[11:14] <rhebus> is there a bug report system for smolder.parrot.org?

[11:14] <TiMBuS> ¯\(°_o)/¯

[11:15] <rhebus> :/

[11:17] *** ggoebel__ left
[11:23] *** ggoebel__ joined
[11:25] <moritz> rhebus: the software itself is on CPAN, so it has a queue in the CPAN rt

[11:25] <moritz> rhebus: as for this particular installation... ask in #parrot (on irc.perl.org)

[11:25] <rhebus> ooh, thanks

[11:25] <rhebus> *scurries*

[11:30] *** jevin left
[11:31] *** woosley joined
[11:33] *** cosimo left
[11:37] *** SHODAN joined
[11:45] *** jevin joined
[11:48] *** jevin left
[11:49] *** jevin joined
[11:53] *** Patterner left
[11:53] <colomon> moritz, jnthn, masak: what are you guys using to make presentations?

[11:56] <moritz> colomon: a custom perl script that generates HTML, and the 's5' html+js+CSS framework

[11:56] <moritz> https://github.com/moritz/perltalk/

[11:56] <moritz> I think jnthn uses powerpoint

[11:56] *** pmurias joined
[11:56] <moritz> and masak writes a new script for each presentation :-)

[11:57] *** Psyche^ joined
[11:57] *** Psyche^ is now known as Patterner

[11:58] <colomon> So the physics file is the source for the talk?

[11:59] <colomon> and can embed p6 code?

[12:02] <moritz> those slides marked with :perl6 are highlighted as Perl 6

[12:02] <moritz> with Text::VimColor, vim and perl6.vim

[12:02] <moritz> the file 'talk' contains another talk

[12:02] <moritz> yes, very clever file names, I know :-)

[12:03] <colomon> moritz++

[12:03] <colomon> Ack, I don't have HTML::Template::Compiled installed, and I just got a bunch of test failures when I tried to install it.

[12:04] <moritz> oh

[12:04] <moritz> there's a new development version which fixes those on perl 5.12

[12:04] <moritz> HTML-Template-Compiled-0.94_002

[12:04] <moritz> cpanm HTML-Template-Compiled-0.94_002 # should help

[12:05] <colomon> moritz++

[12:06] <colomon> errr, that doesn't actually work?   "Cannot make HTML-Template-Compiled-0.94_002, don't know what it is."

[12:07] <moritz> cpanm http://search.cpan.org/CPAN/authors/id/T/TI/TINITA/HTML-Template-Compiled-0.94_002.tar.gz

[12:07] * moritz tries to get the maintainer to release the last version as non-devel

[12:10] <colomon> is cpanm a typo or something different from cpan?

[12:10] <arnsholt> CPAN minus IIRC

[12:10] <moritz> App::cpanminus

[12:10] <arnsholt> A simpler CPAN client

[12:10] <colomon> ah

[12:11] <takadonet> colomon: you will love it

[12:11] <moritz> very convenient, asks far fewer (I think "none") questions

[12:11] <mathw> it actually works

[12:11] <takadonet> morning all

[12:11] <moritz> and it Just Works[tm]

[12:11] <takadonet> faster too

[12:11] <mathw> which I find is a big plus point

[12:11] * colomon is now using cpan to get cpanm.  ;)

[12:11] <moritz> colomon: that's the last thing I used cpan for :-)

[12:12] * BinGOs uses cpanm to bootstrap cpanp when he needs to.

[12:12] <colomon> ah, yes, that seems to be helping matters greatly.  :)

[12:13] <BinGOs> cpanm doesn't do test reporting so is of no use to me apart from bootstrapping something I can use to do test reporting.

[12:19] *** mikemol left
[12:19] *** mikemol joined
[12:22] *** MayDaniel joined
[12:28] *** sftp joined
[12:37] *** ymasory joined
[12:40] *** MayDaniel left
[12:48] *** hudnix joined
[13:03] *** ymasory left
[13:06] *** eml joined
[13:13] *** leprevost joined
[13:16] <dalek> star: 589a29d | pmichaud++ | skel/docs/announce/2011.04:

[13:16] <dalek> star: Add 2011.04 release announcement.

[13:16] <dalek> star: review: https://github.com/rakudo/star/commit/589a29de4c

[13:18] * PerlJam looks forward to the time when 6model and GSoC gives us some of those not-quite-there features.

[13:21] <dalek> star: 8c68a22 | pmichaud++ | / (2 files):

[13:21] <dalek> star: Bump Makefile and gen_parrot versions.

[13:21] <dalek> star: review: https://github.com/rakudo/star/commit/8c68a22de0

[13:26] *** maja joined
[13:29] *** noganex joined
[13:32] *** noganex_ left
[13:34] *** maja left
[13:36] * jnthn back

[13:39] <takadonet> jnthn: wb

[13:39] * mikemol is pleased the pi spigot sequence has been so interesting.

[13:43] <jnthn> My talks from OSDC.TW are available as video! Includes Perl 6 Signatures: http://video.osdc.tw/1301385198.mp4 and Inside A Compiler: http://video.osdc.tw/1301386903.mp4

[13:44] <moritz> is the signature talk the same as at YAPC::EU?

[13:45] <jnthn> Yes

[13:47] *** leprevost left
[13:48] *** pochi left
[13:51] <colomon> jnthn: do you have all your talks located in one convenient place on the web?  I'd like to point people to them in my presentation.  :)

[13:51] <jnthn> colomon: http://www.jnthn.net/articles.shtml

[13:51] <colomon> jnthn++

[13:52] * moritz wonders if that's linked to from perl6.org

[13:54] <arnsholt> jnthn: The TPJ link at the bottom of that page is dead

[13:54] <arnsholt> Apparently tpj.com is for sale

[13:54] <jnthn> arnsholt: Ah...

[13:54] <jnthn> I don't think I've seen the bottom of that page for a loooong time :)

[13:55] <arnsholt> Yeah, the length of that page is quite impressive

[14:03] <dalek> perl6.org: c64b77f | moritz++ | source/documentation/index.html:

[14:03] <dalek> perl6.org: [documentation] lik to the excellent presentations by jnhtn++

[14:03] <dalek> perl6.org: review: https://github.com/perl6/perl6.org/commit/c64b77f50f

[14:04] *** Moukeddar joined
[14:05] *** leprevost joined
[14:05] *** leprevost left
[14:06] *** leprevost joined
[14:07] *** spq joined
[14:12] *** am0c joined
[14:13] <tadzik> oh oh, star is today?

[14:14] <colomon> looks like.  \o/

[14:15] <tadzik> dang, I wanted to push Panda there

[14:15] <moritz> hurry up, maybe it's not too late

[14:15] *** alester joined
[14:15] <tadzik> pmichaud: how much time until the Star release?

[14:15] *** leprevost left
[14:16] <pmichaud> tadzik: I was wondering if Panda is ready for release.   I'm thinking of including it

[14:16] *** leprevost joined
[14:17] <pmichaud> tadzik: if you think Panda should be included, I'm inclined to agree

[14:17] <pmichaud> right now I'm just doing some basic testing and building stuff, so I think there's time

[14:17] <moritz> it's the only working module installer we have :-)

[14:17] <pmichaud> (working installer)  Yes, I know.  :-)

[14:18] <PerlJam> We need more animal named software so that we can have the "lions and tigers and bears" release of Rakudo Star  :)

[14:20] <tadzik> pmichaud: the problem is it started segfaulting for me today. Surely Parrot's fault, but disturbing anyway

[14:20] <tadzik> see http://nopaste.snit.ch/42225

[14:20] <pmichaud> tadzik: using Parrot 3.3.0 ?

[14:21] <tadzik> aye

[14:21] <tadzik> well, the git version from --gen-parrot

[14:21] <tadzik> I'll to remove it completely, bootstrap and install a few things

[14:21] <pmichaud> tadzik:  I'll test it here also.  But my plan was to try to include Panda in the release.

[14:22] <tadzik> cool

[14:22] <pmichaud> afk for a bit (errands)

[14:22] <tadzik> oh, I was also thinking about removing some of the modules from the META.list, so the star-panda (oh the pun!) will contain only those installable and working (more or less)

[14:23] <moritz> +1 from me

[14:25] <tadzik> oh good, it didn't segfault now, while bootstraping

[14:26] <tadzik> moritz: I'm going to remove all the modules from SHELTER from the META.list, they'll still live in the shelter and in the old projects.list, what do you think?

[14:27] <moritz> tadzik: do they install?

[14:27] <tadzik> moritz: not all of them

[14:27] <tadzik> I can try some

[14:27] <tadzik> I know a plenty of them have some missing dependencies

[14:28] <tadzik> okay, after a full reinstalation of panda and deps it doesn't segfault anymore

[14:34] *** wtw left
[14:34] *** leprevost left
[14:34] <tadzik> uh-oh, does LWP::Simple build for anyone?

[14:35] <moritz> it tested fine last I tried

[14:35] <tadzik> t/get-rakudo-org.t .............. Method 'match' not found for invocant of class ''

[14:35] <tadzik> oh wait, isn't rakudo.org down?

[14:35] <tadzik> I believe LWP::Simple needs a better testing target

[14:36] <moritz> just a sec, I can fix it

[14:37] *** snearch_ joined
[14:38] <moritz> tadzik: fix pushed

[14:39] <tadzik> moritz: pushed where?

[14:39] *** am0c left
[14:39] <moritz> tadzik: [email@hidden.address]
[14:40] <tadzik> ok, works

[14:41] *** twinshadow left
[14:41] *** hercynium joined
[14:41] <pmichaud> ...why is rakudo.org down?

[14:42] * moritz has no idea, but it has happened a few times recently

[14:43] <pmichaud> That's... not good.

[14:43] <moritz> agreed.

[14:43] <dalek> ecosystem: 2d8ceac | tadzik++ | / (2 files):

[14:43] <dalek> ecosystem: Module::Tools has no tests and is broken, kill it with fire

[14:43] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/2d8ceac13e

[14:43] <pmichaud> I think I'll set up a new site for rakudo on my server (WordPress)

[14:44] <tadzik> colomon: Testing is broken, isn't it?

[14:44] <colomon> tadzik: not so far as I know...

[14:44] <pmichaud> Maybe we can get Andy to point rakudo.org to a new location

[14:44] <tadzik> colomon: .notdef is used

[14:44] <alester> pmichaud: No, it's not good.

[14:44] <tadzik> rakudo: "dupa".notdef

[14:44] <p6eval> rakudo 8533c3: OUTPUT«.notdef is deprecated, please use negated .defined instead␤  in 'Mu::notdef' at line 1293:CORE.setting␤  in main program body at line 22:/tmp/s2NfPypQS9␤»

[14:45] <alester> I am going to point elsewhere.

[14:45] <alester> I'm not at all in love with Drupal.

[14:45] <pmichaud> I agree, Drupal has been painful.

[14:45] <alester> s/going/willing/

[14:45] <colomon> tadzik: looking into it now

[14:45] <pmichaud> anyway, I'll set up wordpress on my server today and we can start populating it

[14:45] <alester> pmichaud: What do you need form me?

[14:45] <pmichaud> (I have wordpress installed already... I just need to set up the account(s))

[14:46] <alester> If there's some convert-o-dump-o-tron that needs DB access or whatever, let me know.

[14:46] <alester> pmichaud: I also have WordPress installed.

[14:46] <alester> But if you wanna drive, that's fine.

[14:46] <pmichaud> alester: I'll use mine for now...  I think I'm a little less squeamish about giving out access to my server than you are :)

[14:47] <alester> pmichaud: Probably ture.

[14:47] <alester> Thanks for driving.

[14:47] <pmichaud> anyway, yeah -- the biggest question is how much of the old content from rakudo.org we feel we need to preserve (and how to get it)

[14:48] <alester> And then I can shoot Drupal. :-)

[14:48] <moritz> it would be nice to preserve some URLs (not necessarily pages) that are linked everywhere

[14:48] <moritz> like how-to-get-rakudo

[14:48] <tadzik> FWIW, I'm now installing every module in the ecosystem to see which are working to at least some extend

[14:49] <colomon> tadzik: Testing fix pushed

[14:49] <moritz> tadzik++

[14:49] <tadzik> colomon++, great

[14:49] <pmichaud> I'm certain we can preserve urls if rakudo.org is forwarded somewhere

[14:50] *** Moukeddar left
[14:51] *** MayDaniel joined
[14:53] *** am0c joined
[14:53] *** snearch left
[14:55] *** tzhs left
[14:55] *** Holy_Cow joined
[14:59] *** Sarten-X left
[15:00] <tadzik> also, Perl6-Term--ANSIColor is unmaintained since I remember, and all of my attempts to contact its author failed. Mind if I remove that? We have another Term::ANSIColor, tested and maintained

[15:00] <tadzik> (and mine, but that's a coincidence)

[15:00] <pmichaud> +1

[15:02] <moritz> tadzik: go right ahead

[15:02] <moritz> tadzik: if the author complains, we can tell him to fix his module and re-add it to the index file :-)

[15:02] <tadzik> :)

[15:03] <tadzik> I hope masak doesn't mind if I remove pun

[15:03] *** MayDaniel left
[15:03] *** icwiener joined
[15:04] <tadzik> ==> Succesfully installed Proto

[15:04] <tadzik> nice

[15:04] <dalek> ecosystem: ccc953a | tadzik++ | META.list:

[15:04] <dalek> ecosystem: Remove some obsolete modules

[15:04] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/ccc953a269

[15:10] *** ymasory joined
[15:10] *** Sarten-X joined
[15:11] <tadzik> wow, perl6-ioc looks like Bread::Board for Perl 6. It seems a bit unmaintaned, but it builds and tests fine

[15:12] <tadzik> this smokebuilding experience should be blagged about today

[15:12] <moritz> it's rather new, iirc

[15:12] <tadzik> hmm, right, January this year

[15:13] <tadzik> seen jasonmay

[15:13] <aloha> jasonmay was last seen in #perl6 12 days 22 hours ago saying ".oO( has $.x is service lifecycle Singleton depends-on <y z> )".

[15:13] <tadzik> oh, a resident :)

[15:14] <tadzik> phenny: tell jasonmay hey, your perl6-ioc looks quite nice, would you mind adding a META.info to it thus fulfilling the latest modules' spec?

[15:14] <phenny> tadzik: I'll pass that on when jasonmay is around.

[15:14] <jasonmay> sure

[15:14] <phenny> jasonmay: 15:14Z <tadzik> tell jasonmay hey, your perl6-ioc looks quite nice, would you mind adding a META.info to it thus fulfilling the latest modules' spec?

[15:14] <tadzik> oh, cool :)

[15:15] <tadzik> do we really need perl6-examples in the ecosystem? I don't remember when that was buildable

[15:16] <moritz> no, IMHO

[15:16] <tadzik> by "in the ecosystem" I really mean "available for installation"

[15:16] <dalek> ecosystem: 6e6bc12 | tadzik++ | META.list:

[15:16] <dalek> ecosystem: Remove perl6-examples

[15:16] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/6e6bc125d9

[15:16] <tadzik> okay, tried all of them

[15:16] <tadzik> results: http://nopaste.snit.ch/42233

[15:17] <tadzik> the notworking ones are not so common thing to do any mass removal imho

[15:17] <tadzik> maybe there will appear someone who will want to fix them even

[15:18] <jasonmay> tadzik: http://pastie.org/1839606 -- would this be sufficient

[15:18] <jasonmay> I basically cargo culted from one of the other files in the ecosystem

[15:18] <jasonmay> html-template I think

[15:18] <tadzik> that's a good way to do it

[15:19] <tadzik> jasonmay: that should be source-type and source-url, the former being optional. Otherwise it's perfect

[15:19] <tadzik> I don't think otherwise is the word I'm looking for

[15:19] <moritz> we're switching from 'repo' to 'source' because tarballs are not repos

[15:20] <jasonmay> pushed

[15:20] <tadzik> jasonmay++

[15:21] *** Holy_Cow left
[15:21] <dalek> ecosystem: ce89679 | tadzik++ | META.list:

[15:21] <dalek> ecosystem: IoC doesn't need no SHELTER

[15:21] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/ce8967971b

[15:23] <pmichaud> the latest rakudo star test build runs significantly slower on my system than the 2011.01 build

[15:23] <pmichaud> like, about 40% slower

[15:23] <moritz> wow

[15:23] <pmichaud> I'll run again in case I was doing something weird

[15:23] <moritz> what does parrot_config gc  say ?

[15:24] <tadzik> wasn't ms2 default for 3.3?

[15:24] <moritz> oh, the config key doesn't exist

[15:24] <moritz> yes

[15:24] <moritz> pmichaud: make sure to compile with --gc=gms

[15:24] <pmichaud> but the rakudo configure script assumes --gc=gms

[15:24] <moritz> s/compile/configure parrot/

[15:24] <pmichaud> unless the star confi..... right

[15:24] <pmichaud> Star doesn't use Rakudo's configure to build parrot

[15:25] <pmichaud> okay, fixing.

[15:25] <tadzik> okay, I declare panda star-ready

[15:25] <tadzik> it has some LTA things, but it's usable more than annoying

[15:25] <pmichaud> tadzik: could you update the star makefile(s) as appropriate?

[15:25] <pmichaud> tadzik: or do you need me to do that?

[15:25] <tadzik> pmichaud: I think I can do that, yes

[15:25] <tadzik> pmichaud: I can also fill in some of the NEWS, if that's ok for you

[15:25] <pmichaud> please

[15:26] <pmichaud> tadzik++

[15:26] <tadzik> no problem with that

[15:27] <tadzik> pmichaud: mind if I also remove those modules which proved to be not working?

[15:27] <pmichaud> tadzik: please do that.  make sure we note the removals in the announcement

[15:28] <tadzik> pmichaud: I'd take care of it

[15:33] <dalek> star: f742a45 | pmichaud++ | skel/Configure.pl:

[15:33] <dalek> star: Add --gc=gms to Parrot configuration options.

[15:33] <dalek> star: review: https://github.com/rakudo/star/commit/f742a4535a

[15:34] <colomon> pmichaud: Current slowness is consistent with my benchmarks.  Alas, still haven't had a proper chance to look into it.

[15:35] <pmichaud> I'm trying again now with --gc=gms

[15:36] <jnthn> *drum roll*

[15:36] <dalek> nqp/ctmo: 0ff3ff4 | jonathan++ | src/ (2 files):

[15:36] <dalek> nqp/ctmo: First cut of natively typed attributes (int/num/str). Code gen could be better, but it works.

[15:36] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/0ff3ff4c27

[15:36] <colomon> jnthn++: \o/

[15:37] <pmichaud> parrot_config option is "gc_type", fwiw.

[15:37] <pmichaud> (I'm continually amazed at how many times Parrot uses multiple names for the same option.)

[15:38] <pmichaud> and its value is "GMS" instead of "gms"

[15:38] <alester> pmichaud: WHY NO HAVE WORDPRESS DONE YET

[15:38] <alester> HURRY UP, QUICKER

[15:38] <pmichaud> (I'm continually amazed at Parrot's inconsistent use of capitals.)

[15:38] <dalek> star: c38a2a6 | tadzik++ | / (3 files):

[15:38] <dalek> star: Remove some of the not working modules, add some new. Note the changes in the announcement

[15:38] <dalek> star: review: https://github.com/rakudo/star/commit/c38a2a6fd2

[15:38] <alester> IT BEEN WHOLE 49 MINUTES NOW

[15:38] <jnthn> Uniquitous language fail... 

[15:39] *** Moukeddar_ joined
[15:40] <jnthn> colomon: I suspect some other leak is going on somewhere, but initial testing suggests that if you make a complex type with objects attributes and one with two native num attributes, then half a million instances of complex come out at 20 meg less or so.

[15:40] <colomon> jnthn: !!!!!!!

[15:41] <tadzik> oh my

[15:41] <tadzik> that's super-cool

[15:41] *** Moukeddar_ left
[15:41] <jnthn> colomon: Note that this still has 500,000 objects hanging around in memory. Once we do packed arrays, my complex @foo; can pack them in so it's one big chunk.

[15:41] <jnthn> But even so, this is a nice bit of progress :)

[15:42] * colomon wants 6model to land in Rakudo very badly...

[15:42] <jnthn> colomon: My NQP pre-req task list is shrinking rapidly.

[15:42] <tadzik> jnthn: if you try very hard, would you be able to ship it before Star? :P

[15:42] *** yegor joined
[15:43] <tadzik> I mean, you know, everybody's waiting and stuff ;)

[15:43] <jnthn> Sure. :P

[15:43] <jnthn> So long as I don't have to say *which* Star release. :P

[15:43] <tadzik> aw, snap!

[15:43] <dalek> star: 227e50e | tadzik++ | skel/docs/announce/2011.04:

[15:43] <dalek> star: Add some advertising to the announcement

[15:43] <dalek> star: review: https://github.com/rakudo/star/commit/227e50ed22

[15:45] <jnthn> So, what's next...

[15:45] * jnthn glances his todo list 

[15:45] <jnthn> eww :)

[15:46] <jnthn> Whenever my next task has "circularity" in it, I know it's gonna hurt some...

[15:46] *** toebu left
[15:58] *** yegor left
[16:01] *** SHODAN left
[16:01] <pmichaud> anyone who wants to author/admin on the new rakudo.org, please go to http://rakudoperl.org/wp/   and click the "Register" link at the bottom-right

[16:02] *** mj41 left
[16:03] <jnthn> pmichaud: registered (jnthn)

[16:05] <pmichaud> jnthn/colomon: you now have admin privs

[16:05] <colomon> thanks

[16:06] <jnthn> yay

[16:06] <jnthn> pmichaud++

[16:07] * PerlJam has registered also

[16:07] <PerlJam> (does this mean that rakudo.org is going away or what?)

[16:08] *** Su-Shee left
[16:08] <pmichaud> rakudoperl.org is a domain I already own; we'll hopefully get rakudo.org to forward to rakudoperl.org or something like that

[16:09] *** molaf_ left
[16:12] *** ymasory left
[16:12] *** Su-Shee joined
[16:12] <pmichaud> PerlJam/Util:  updated

[16:13] <pmichaud> I have a lunch meeting I have to go to... I'll bbi120.  Feel free to update things on the rakudoperl site as you see fit.

[16:19] *** risou joined
[16:19] *** risou left
[16:20] *** risou joined
[16:24] *** yegor joined
[16:29] *** ymasory joined
[16:30] *** risou_ joined
[16:30] *** woosley left
[16:31] *** cdarroch joined
[16:31] *** cdarroch left
[16:31] *** cdarroch joined
[16:32] *** noganex_ joined
[16:33] *** noganex left
[16:33] *** risou left
[16:45] *** birdwindupbird left
[16:50] *** PerlJam left
[16:50] *** PerlJam joined
[16:53] <dalek> nqp/ctmo: cc013b6 | jonathan++ | src/ (5 files):

[16:53] <dalek> nqp/ctmo: Setup the very basic KnowHOWAttribute in 6model core rather than leaving every HLL the problem of setting up an initial one. It's especially a pain if you're going to have a compile time meta-model and need the attribute meta-object available to the compiler. (FWIW, nqpclr ended up with this in core too, though with a different initial motivation.)

[16:53] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/cc013b68b2

[16:53] <dalek> nqp/ctmo: 2af2457 | jonathan++ | src/NQP/ (2 files):

[16:53] <dalek> nqp/ctmo: Start using KnowHOWAttribute from the 6model core instead. Means we now create all meta-attributes during the compile. Toss the knowhow-specific workarounds.

[16:53] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/2af2457e7d

[16:53] *** nymacro left
[16:57] *** Sarten-X left
[16:59] <sunnavy> date

[17:00] <sunnavy> oops

[17:00] *** bacek left
[17:01] *** bacek joined
[17:04] *** Chillance joined
[17:04] *** leprevost joined
[17:06] *** pmurias left
[17:07] *** bacek left
[17:09] *** wallberg joined
[17:10] *** molaf joined
[17:13] *** rhebus left
[17:15] *** rhebus joined
[17:20] *** Axius joined
[17:20] <dalek> nqp/ctmo: 28dbe5e | jonathan++ | src/stage0/ (6 files):

[17:20] <dalek> nqp/ctmo: Update bootstrap with various attribute changes.

[17:20] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/28dbe5eb7d

[17:20] <dalek> nqp/ctmo: 74ac547 | jonathan++ | / (2 files):

[17:20] <dalek> nqp/ctmo: Toss the now-unused KnowHOWAttribute.pm.

[17:20] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/74ac547d6b

[17:20] <dalek> nqp/ctmo: 835b51e | jonathan++ | src/Regex/ (3 files):

[17:20] <dalek> nqp/ctmo: Fix lookups of meta-objects in regex library.

[17:20] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/835b51ec4d

[17:24] *** yegor_ joined
[17:26] *** yegor left
[17:30] *** takadonet left
[17:32] *** yegor_ left
[17:33] *** rhebus left
[17:33] *** fhelmberger left
[17:35] *** rhebus joined
[17:51] *** masak joined
[17:51] <masak> oh hai, #perl6

[17:51] <phenny> masak: 01:56Z <Tene> ask masak how that sliding window alg we discussed worked out for him.

[17:53] <tadzik> oh hi masak

[17:53] <masak> Tene: heh, I already wrote a solution for that problem -- was curious how to do it "right" for next time. :) right now I've moved on to other problems at $work... but I'll keep on the lookout for similar problems.

[17:53] <masak> hai tadzik 

[17:54] *** leprevost left
[17:54] <sorear> hi masak

[17:54] *** justatheory joined
[17:54] <masak> Tene: I like the syntax I arrived at at the bottom of https://gist.github.com/942868 -- it exposes the essential complexity and hides the accidental complexity. the remaining problems I have it are miniscule.

[17:54] <masak> sorear: hi there :)

[17:57] <masak> sorear: if I were to toy around with the grammar extensions and AST transformations necessary to make something like that gist DTRT, should I try doing it in Niecza, or in the new 6model-enhanced nqp?

[17:59] * masak keeps tugging at loose end of the future :)

[18:03] *** rhebus left
[18:07] *** rhebus joined
[18:07] <sorear> I don't totally understand what OVER is supposed to do here

[18:07] <sorear> also I don't know what new-nqp is capable of

[18:08] *** MayDaniel joined
[18:10] <dalek> nqp/ctmo: 177dadd | jonathan++ | src/HLL/SerializationContextBuilder.pm:

[18:10] <dalek> nqp/ctmo: Toss a bunch of legacy package installations that we no longer need (this means that all type lookups are certainly working through the new packages).

[18:10] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/177daddb23

[18:10] <dalek> nqp/ctmo: 5d65440 | jonathan++ | src/NQP/Actions.pm:

[18:10] <dalek> nqp/ctmo: Update some package lookups.

[18:10] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/5d65440963

[18:10] <dalek> nqp/ctmo: c408fe7 | jonathan++ | src/Regex/ (3 files):

[18:10] <dalek> nqp/ctmo: More legacy package lookup/installation cleanups.

[18:10] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/c408fe79c0

[18:10] <sorear> jnthn: grr, I'm gonna have so much catching up to do when I get my tuits back :D

[18:11] <jnthn> sorear: :)

[18:15] *** risou_ left
[18:16] *** newbee joined
[18:17] *** Sarten-X joined
[18:17] <masak> sorear: OVER is supposed to hide the bookkeeping that the upper, uncommented code exposes. the two pieces of code are meant to do the same thing.

[18:18] <masak> jnthn: how difficult would it be to introduce something like OVER in nqp at this point? just as an experiment.

[18:18] *** Moukeddar joined
[18:18] <masak> Moukeddar: arf!

[18:19] <tadzik> was that an evil panda sound?

[18:19] <Moukeddar> arf!?

[18:19] * masak keeps silent and practices a piercing look

[18:19] <Moukeddar> what happened to ROAAAR!

[18:19] *** molaf left
[18:20] <TimToady> perl6: my @fib := 0, 1, @fib Z+ @fib[1..*]; say @fib[10];

[18:20] <masak> Moukeddar: in here, we tend to yap rather than roar :)

[18:20] <Moukeddar> shell pirecing look ?

[18:20] <p6eval> rakudo 8533c3, niecza v4-76-g7bf5ef9: OUTPUT«(timeout)»

[18:20] <p6eval> ..pugs: OUTPUT«␤»

[18:20] <TimToady> pugs: my @fib := (0, 1, @fib Z+ @fib[1..*]); say @fib[10];

[18:20] <p6eval> pugs: OUTPUT«␤»

[18:20] <masak> TimToady: I've been told that that's never going to work, because there are no closures in there that will delay evaluation the way @fib needs to.

[18:21] <masak> TimToady: I think sorear told me that.

[18:21] <TimToady> um, the lists are lazy

[18:21] <newbee> hi... what are the datatypes for date, time, and timedate in perl6? I know that Date and Duration works, bit Time don't:    use v6; class Task; has Str $.command is rw; has Time $.exec_time is rw; has Date $.exec_date is rw; has Duration $.exec_timeout is rw;

[18:21] <newbee> It says that Time is not a valid datatype

[18:22] <TimToady> and binding is not eager

[18:22] <masak> newbee: Time does make much sense on its own. Date does.

[18:22] <jnthn> masak: use NQP; class MyNQPGrammar is NQP::Grammar { ... }; class MyNQPActions is NQP::Actions { ... }; sub MAIN(*@ARGS) { ...same as in src/NQP/Compiler.pm but put your subclassed grammar/actions in instead... }

[18:22] <TimToady> and the problem in rakudo is just that subscripting isn't lazy, I think

[18:23] <masak> newbee: if you want, you could declare 'class Time { has $.hour; has $.minute; has $.second }'

[18:23] <masak> newbee: but we don't do that for you because you might have different requirements beyond that.

[18:23] <newbee> My intention was to use a "native" datatype for Time

[18:23] <masak> newbee: maybe you're looking for Instant?

[18:23] <newbee> is there any?

[18:24] <TimToady> rakudo: say now.WHAT

[18:24] <tadzik> Sure. Like counterspell, or terror :>

[18:24] <p6eval> rakudo 8533c3: OUTPUT«Instant()␤»

[18:24] <tadzik> I wonder if that joke isn't too hermetic

[18:24] <sorear> TimToady: lists may be lazy but function calls aren't

[18:24] <newbee> mmmm i see... Instant does that.. Much better than the generic "Time".. Thanks :D

[18:24] <sorear> &infix:<,> has to evaluate both arguments right away

[18:25] <masak> newbee: if it's any lead, "Instant" is for atomic time, whereas "DateTime" is for civil time.

[18:26] <TimToady> sorear: fine, but Z+ is returning a lazy list that commits to nothing until munched, supposedly

[18:26] <TimToady> er, hmm, precedence problem

[18:26] <TimToady> perl6: my @fib := 0, 1, (@fib Z+ @fib[1..*]); say @fib[10];

[18:26] <masak> the precedence with X and Z often surprises. but it's one of those can't-please-everyone problems.

[18:27] <p6eval> rakudo 8533c3, niecza v4-76-g7bf5ef9: OUTPUT«(timeout)»

[18:27] <p6eval> ..pugs: OUTPUT«␤»

[18:27] <TimToady> that's what I meant

[18:27] *** aindilis joined
[18:27] <newbee> i just need a Time without relation to a date.. i want to do a "schedule" system. For example, run this task at "14:30" for certain dates.

[18:27] <masak> newbee: then I advise you to create a custom Time class.

[18:27] <sorear> if we allow general functions like &zipwith to delay evaluation, we're opening a can of worms

[18:27] <masak> or TimeOfDay or something.

[18:27] <sorear> all the performance problems of Haskell without the elegance :)

[18:28] <pmichaud> good afternoon, #perl6

[18:28] <masak> pmichaud! \o/

[18:28] <jnthn> o/ again, pmichaud :)

[18:28] <tadzik> welcome back :)

[18:29] <sorear> masak: I don't even understand what either version of the gist is supposed to do.

[18:29] <jnthn> masak: fwiw, if you play with new nqp, I suggest doing so against the master branch. ctmo is where I feel free to break stuff. :)

[18:29] <TimToady> sorear: I don't know what you mean by "delay evaluation"; the zipwith is called, but returns a lazy list that commits to nothing until munched

[18:29] <jnthn> masak: When something becomes "good" I merge it to master. The native attrs are just about to get merged, for example.

[18:29] <TimToady> I see no performance problems there

[18:29] <pmichaud> hmm, R* with the new garbage collector doesn't seem to be significantly faster than 2011.01  :/

[18:29] <jnthn> pmichaud: :/

[18:30] <masak> jnthn: understood.

[18:30] <masak> sorear: oh, sorry. :/ I'll attempt an explanation.

[18:30] <sorear> TimToady: the zipwith is called, but it receives the *old* @fib as an argument

[18:30] <jnthn> masak: In theory you should have no problems at all subclassing grammar and actions and setting up NQP::Compiler to use your new ones.

[18:30] <sorear> @fib isn't rebound until zipwith and , return

[18:31] <tadzik> I wonder what did slow Rakudo down

[18:31] <masak> sorear: the general problem is this: given an incoming stream of ordered records-with-fields, where fields to the right "vary" faster than fields to the left (odometer-style), devise an algorithm that does something within each contigous chunk of field values.

[18:31] <pmichaud> I'll run some tests.

[18:31] *** xinming_ left
[18:32] <masak> sorear: in this particular case, the incoming fields are person, shop, and item. for each person, print (in the correct order) that person's shops. print as soon as possible.

[18:32] <TimToady> sorear: okay I see your point

[18:32] <masak> sorear: thing is, everything will lag until the iteration after, when we know that a new person was found.

[18:33] <masak> sorear: I want to avoid having to think about that in the code.

[18:33] <dalek> Heuristic branch merge: pushed 21 commits to nqp by jnthn

[18:34] <TimToady> perl6: my @fib.plan: 0, 1, (@fib Z+ @fib[1..*]); say @fib[10];

[18:34] <TimToady> that's more like

[18:34] <p6eval> niecza v4-76-g7bf5ef9: OUTPUT«(timeout)»

[18:34] <p6eval> ..pugs: OUTPUT«*** ␤    Unexpected "@fib"␤    expecting "=", ".=", context, ":" or "("␤    at /tmp/Vu1zPIfhS1 line 1, column 4␤»

[18:34] <p6eval> ..rakudo 8533c3: OUTPUT«===SORRY!===␤Confused at line 22, near "my @fib.pl"␤»

[18:34] <dalek> nqp/ctmo: 0a24347 | jonathan++ | src/stage0/ (7 files):

[18:34] <dalek> nqp/ctmo: Update bootstrap.

[18:34] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/0a24347e46

[18:35] <masak> .plan ?

[18:35] <TimToady> see Containers.pod

[18:35] <sorear> for .lines.map({[.split(',')]}).group(*.[0]) -> $person, @tuples { say ($person => @tuples.map(*.[1]).uniq) } # I would write it like this

[18:36] <pmichaud> alester: is there a way to export the article contents from the rakudo.org drupal instance?  I'm not too concerned with preserving comments

[18:37] <TimToady> perl6: constant @fib = 0, 1, (@fib Z+ @fib[1..*]); say @fib[10];  # what we really want here

[18:37] <alester> pmichaud: haven't looked

[18:37] <p6eval> rakudo 8533c3: OUTPUT«===SORRY!===␤Constant type declarator not yet implemented at line 22, near "= 0, 1, (@"␤»

[18:37] <p6eval> ..niecza v4-76-g7bf5ef9: OUTPUT«(timeout)»

[18:37] <p6eval> ..pugs: OUTPUT«pugs: *** Undeclared variable: ("@fib",MkPad (padToList []),[PCompiling {pc_pad = MkMPad {mp_id = 140387682278377, mp_pad = <ref:0x7fae8de4a431>}}])␤    at /tmp/ahoZrnsUjj line 1, column 23-43␤»

[18:37] <alester> Have you googled for a drupal-to-wordpress conversion?

[18:37] <pmichaud> yes

[18:37] <alester> I imagine it's a solved problem.

[18:37] *** xinming joined
[18:37] <pmichaud> no

[18:37] <alester> No exiting tools?

[18:37] <alester> Wow.

[18:38] *** Axius left
[18:38] <pmichaud> there are tools for older versions of wordpress and drupal

[18:38] <pmichaud> I don't find anything current

[18:38] <masak> sorear: .group ?

[18:38] <pmichaud> and I find lots of articles that say the tools don't really work

[18:38] <sorear> masak: a hypothetical Perl 6 version of the Haskell groupBy

[18:38] <sorear> masak: sort of like .classify, but lazy and expects sorted input

[18:39] <TimToady> sorear: I believe "constant @fib =" should bind the lazy list at compile time

[18:39] <pmichaud> so, I'll be happy to just get the article text somewhere and re-build the articles manually from that

[18:39] <pmichaud> there aren't that many, iirc

[18:40] *** Moukeddar left
[18:40] *** yegor joined
[18:44] <masak> TimToady: so 'constant @fib =' and 'constant @fib :=' are semantically identical?

[18:44] <TimToady> um

[18:45] <TimToady> std: constant @fib := 42;

[18:45] <p6eval> std 3468e14: OUTPUT«[31m===[0mSORRY![31m===[0m␤Malformed constant at /tmp/CojEtiERau line 1:␤------> [32mconstant @fib :[33m⏏[31m= 42;[0m␤    expecting any of:␤        coloncircumfix␤ signature␤Parse failed␤FAILED 00:01 118m␤»

[18:45] <tadzik> arnsholt, ingy, moritz and quietfanatic are people with 2 or more modules in the SHELTER

[18:45] <arnsholt> SHELTER?

[18:46] <tadzik> aye, where the not-updated-to-the-new-spec modules live

[18:46] <tadzik> mentioned in http://ttjjss.wordpress.com/2011/04/18/news-from-the-modules-world/

[18:47] *** MayDaniel left
[18:47] <arnsholt> SQL::Grammar can be deleted

[18:48] <arnsholt> I never got anywhere with that, and it can be safely deleted

[18:48] <tadzik> alright

[18:48] <masak> TimToady: so binding and constants don't mix?

[18:48] <arnsholt> Gimme a sec and I'll update the Viterbi one

[18:48] <tadzik> alright. Familiar with META.info's?

[18:49] <arnsholt> Not yet =)

[18:49] *** leprevost joined
[18:49] <tadzik> :)

[18:50] <tadzik> You can either read the spec, or just cargocult it from some panda-badged module on modules.perl6.org

[18:50] <arnsholt> Looking at the spec now, and then I'll probably cargo-cult =)

[18:52] <sorear> the way constants are parsed is a tad dubious

[18:53] <tadzik> I have a feeling that only the neutro's META.info has been actually written from scratch. I should've put some funky whitespace in it, and now give a special prize for everyone without that character in their META.infos :)

[18:53] *** risou joined
[18:53] <sorear> '5 * constant $x = 2' parses as (5 * constant $x) = 2, but the latter isn't valid syntax

[18:54] <masak> it isn't?

[18:54] <masak> std: 5 * constant $c = 2

[18:54] <p6eval> std 3468e14: OUTPUT«ok 00:01 120m␤»

[18:54] <masak> std: (5 * constant $x) = 2

[18:54] <p6eval> std 3468e14: OUTPUT«[31m===[0mSORRY![31m===[0m␤Malformed constant at /tmp/LdYyerpRjm line 1:␤------> [32m(5 * constant $x[33m⏏[31m) = 2[0m␤    expecting any of:␤       desigilname␤    trait␤  twigil␤Parse failed␤FAILED 00:01 121m␤»

[18:54] <masak> huh.

[18:55] <masak> something's odd there, fershure.

[18:56] *** impious joined
[18:58] <arnsholt> How do Panda and ufo interact?

[18:58] <tadzik> they don't

[18:58] <arnsholt> Right. No deps for my module then

[18:58] *** impious left
[18:59] <masak> right. ufo was never meant to be a dep of anything.

[18:59] <masak> I seem to gravitate to writing that kind of module, for some reason :)

[19:01] <arnsholt> There. New version pushed to github

[19:01] <tadzik> arnsholt++

[19:01] <TimToady> re pseudo-assignment to declarators, see S03:4802

[19:02] <TimToady> pseudo assignment has nothing to do with normal assignment, even wrt precedence

[19:02] <tadzik> arnsholt: fwiw, source-type is optional, Panda is smart enought to figure that out from the url

[19:02] <TimToady> declarators all look for '=' as part of their "term"

[19:03] <arnsholt> Yeah, I noticed. But the files I cargo-culted from had it, so y'know... =)

[19:03] <tadzik> :)

[19:03] <tadzik> I'know :)

[19:03] <TimToady> (that is, declarators that take initializers, not things like 'sub')

[19:04] <arnsholt> So now all that's missing is that I remove the module from SHELTER and update META.list in perl6/ecosystem?

[19:05] <dalek> ecosystem: 1ba36bf | tadzik++ | / (5 files):

[19:05] <dalek> ecosystem: Algorithm::Viterbi does not live in a SHELTER anymore. Clean the SHELTER from some (re)moved modules

[19:05] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/1ba36bfcfe

[19:05] <arnsholt> Or that. Cheers!

[19:06] <newbee> hi again :) I was creating the TimeOfDay  class:      use v6; class TimeOfDay {  has $.hour;  has $.minute;  has $.seconds; }

[19:06] <pmichaud> alester: if you can put rakudo.org up long enough for me to do a webscrape of its contents, that would be okay

[19:07] <alester> pmichaud: Oh, shoot, I'm sorry, forgot about you.  Real Job got in the way.

[19:07] <alester> let me see what I can do re: export

[19:07] <pmichaud> np, just letting you know options

[19:07] <pmichaud> no real hurry

[19:07] <newbee> now, i know i can put constraints to the data using where, for example, 0 >= $hour <= 23... but i dont wan't the program to fail if i assing a 61 to $.hour

[19:07] <newbee> how can i make "accesors" for those data members?

[19:08] *** am0c left
[19:08] <tadzik> newbee: you already did

[19:08] *** rhebus_ joined
[19:08] <tadzik> $.foo is an attribute foo, with a public accessor

[19:08] <tadzik> rakudo: class Foo { has $.bar = 5 }; say Foo.new.bar

[19:08] <p6eval> rakudo 8533c3: OUTPUT«5␤»

[19:08] *** rhebus left
[19:08] *** rhebus_ is now known as rhebus

[19:08] <sorear> pmichaud: what's up with rakudo.org?

[19:09] <pmichaud> sorear: apparently it's down, so I'm moving it to a wordpress-based site on my server

[19:09] <alester> "What's up" is a rare condition. :-)

[19:09] <tadzik> TiMBuS! TiMBuS! Your META.info is broken!

[19:09] <alester> is it down NOW?

[19:09] <alester> dammit

[19:10] <pmichaud> it was down earlier when I tried it

[19:10] <sorear> Why does it keep going down?

[19:10] <alester> sorear: You are far too late to this party. :-)

[19:10] <alester> If I knew, I'd fix it.

[19:10] <sorear> alester: I know, hence the questions :)

[19:11] <sorear> :/

[19:11] <alester> oh man, I might be able to kill my mysql instance, too.

[19:11] <alester> pmichaud: want a mysqldump?

[19:11] <alester> I'll paste it into the channel.

[19:12] <sorear> I hope you mean a link

[19:12] <alester> sorear: I kid.

[19:12] <alester> Wuss.

[19:12] <alester> Can't handle thousands of lines of SQL INSERTs?

[19:12] <newbee> so, i did accesors just by declaring the variable... but, how can i send a warning if i pass 61 to $.hour ??

[19:13] <pmichaud> alester:  a mysqldump would work okay, yes

[19:13] <tadzik> newbee: you can supply your own BUILD submethod which will validate the attributes

[19:14] <alester> pmichaud: OK, can't look right this second.

[19:14] <alester> but I will

[19:14] <tadzik> rakudo: class Mytime { has $.hour; submethod BUILD { callsame; die "how many? Are you nuts?" unless 0 < $.hour < 24; } }; Mytime.new(hour => 77)

[19:14] <p6eval> rakudo 8533c3: OUTPUT«how many? Are you nuts?␤  in 'Mytime::BUILD' at line 22:/tmp/2JjrX55tCA␤  in main program body at line 22:/tmp/2JjrX55tCA␤»

[19:14] <tadzik> rakudo: class Mytime { has $.hour; submethod BUILD { callsame; die "how many? Are you nuts?" unless 0 < $.hour < 24; } }; Mytime.new(hour => 17)

[19:14] <p6eval> rakudo 8533c3:  ( no output )

[19:15] <pmichaud> alester: great, no rush

[19:15] <alester> pmichaud: I just saw them on April 12th.

[19:15] <tadzik> newbee: keep in mind that is only during the object creation

[19:16] <tadzik> github++ # "fork and edit this file"

[19:16] <alester> github++ # Just in general.

[19:18] <masak> github++ # happily paying customer

[19:18] *** rhebus_ joined
[19:19] *** rhebus left
[19:19] *** rhebus_ is now known as rhebus

[19:19] *** mj41 joined
[19:21] *** birdwindupbird joined
[19:21] *** am0c joined
[19:22] <newbee> but what happens if i change $.hour after the creation? I understand that BUILD runs only once...

[19:23] *** leprevost left
[19:23] <tadzik> newbee: if you don't add "is rw" to "has" you can't change it

[19:23] <tadzik> and Time sounds like something I'd prefer immutable

[19:23] <tadzik> I believe they're immutable in Perl 6 to

[19:23] *** risou left
[19:24] <masak> DateTime is mutable; Date is immutable.

[19:24] *** yegor_ joined
[19:24] <masak> but yes, I agree with tadzik that Time sounds like it could well be immutable.

[19:25] *** yegor left
[19:26] <pmichaud> ...I thought the new garbage collector was to give a significant speed improvement, but for some reason I'm not seeing it here.

[19:27] <pmichaud> at least, I'm not seeing it in the spectests.

[19:27] <newbee> ok, lets put this example then: class Soldier { has $.health is rw } and i want to perform some action if health goes beyond 100, all this without a special method. Just by saying $Asoldier.health = 120;

[19:28] <tadzik> newbee: that's either hard or impossible in the current state of Rakudo

[19:28] <pmichaud> in Rakudo?  what about in Perl 6 in general?

[19:28] <colomon> pmichaud: did you get any speed improvement with that Parrot flag you were trying to set earlier today?

[19:29] <pmichaud> colomon: by changing the flag I eliminated the 40% penalty I was seeing

[19:29] <colomon> pmichaud: that's something, anyway!

[19:29] <pmichaud> which means rakudo is only as fast as the january release, not faster

[19:29] <colomon> pmichaud: are we going to make setting the flag that way the default for Rakudo?

[19:30] <pmichaud> colomon: it's been the default already

[19:30] <pmichaud> it was the default in the march release

[19:30] <pmichaud> and in the april release

[19:30] <pmichaud> --gc=gms

[19:30] <sorear> niecza: class Soldier { has $!health; method health() { _newtiedscalar(Any, Any, { $!health }, { die "Oops too big" if $_ > 100; $!health = $_ }); } }; my Soldier $Asoldier .= new; $Asolder.health = 5; say $Asoldier.health; $Asoldier.health = 120

[19:30] <p6eval> niecza v4-76-g7bf5ef9: OUTPUT«[31m===[0mSORRY![31m===[0m␤␤Variable $Asolder is not predeclared at /tmp/haIrhJxpoe line 1:␤------> [32m}; my Soldier $Asoldier .= new; $Asolder[33m⏏[31m.health = 5; say $Asoldier.health; $Asol[0m␤␤Unhandled exception: Check failed␤␤  at

[19:30] <p6eval> ../home/p6eval/niecza/boot/lib/CORE.se…

[19:30] <sorear> niecza: class Soldier { has $!health; method health() { _newtiedscalar(Any, Any, { $!health }, { die "Oops too big" if $_ > 100; $!health = $_ }); } }; my Soldier $Asoldier .= new; $Asoldier.health = 5; say $Asoldier.health; $Asoldier.health = 120

[19:30] <p6eval> niecza v4-76-g7bf5ef9: OUTPUT«5␤Unhandled exception: Oops too big␤  at /home/p6eval/niecza/lib/CORE.setting line 413 (CORE die @ 2)␤  at /tmp/D2WE45_RKj line 1 (MAIN C6_ANON @ 2)␤  at  line 0 (ExitRunloop @ 0)␤  at /tmp/D2WE45_RKj line 1 (MAIN mainline @ 9)␤  at /home/p6eval/niecza/lib/CORE.setting

[19:30] <p6eval> ..line 1311 (C…

[19:30] <sorear> \o/

[19:32] *** Rotwang1 joined
[19:32] <pmichaud> which means that either (a) the GC didn't provide nearly as much improvement as claimed, or (b) something has happened to Rakudo to cause it to become much slower than it was in January (and thus lose any gains provided by the GC)

[19:32] <pmichaud> or (c) other

[19:33] <newbee> hehe, great, thanks sorear :) now, ¿what is _newtiedscalar? looks like a hack, ¿it is?

[19:34] <sorear> _newtiedscalar is how niecza makes special lvalues

[19:34] <pmichaud> I think the standard Perl 6 mechanism would be to use WHENCE

[19:34] <sorear> no good decision has been made on how to do that

[19:35] <newbee> oh well... in the meantime niecza's method is what i will use :)

[19:35] <sorear> pmichaud: WHENCE only lets you run code the first time a variable is bound or assigned to

[19:35] <pmichaud> method health() is rw { $!health WHENCE { die "Oops too big" if $_ > 100 } }

[19:35] <pmichaud> or something like that

[19:35] <pmichaud> oh yes, only for vivification

[19:35] <pmichaud> hmm

[19:36] <sorear> there's something in the spec about Proxy.new:, but I find that interface vaguely disturbing

[19:36] <pmichaud> that pre-dates WHENCE

[19:36] <pmichaud> it's probably fossil

[19:36] <pmichaud> afk, kid pickup

[19:40] <alester> Today I learned that pmichaud has a kid.

[19:42] <sbp> he didn't say he has one

[19:42] <sbp> could be picking anybody's kid up!

[19:42] <masak> newbee: subset Health of Real where { 0 <= $_ < 100 }; class Soldier { has Health $.health is rw }

[19:44] <colomon> sbp: he's also quite knowledgable about Thomas the Tank Engine.  ;)

[19:44] <sbp> proof at last

[19:44] <tadzik> masak: that's nice

[19:44] <TimToady> std: subset Health of Real where 0..^100

[19:44] <p6eval> std 3468e14: OUTPUT«ok 00:01 120m␤»

[19:44] <tadzik> also, that's Perl6-y;

[19:44] <masak> TimToady++

[19:45] <masak> tadzik: yes; problem is it dies if you try to make the assignment.

[19:45] <masak> maybe you just wanted a warning?

[19:46] <newbee> i do want a warning.. :)

[19:47] <masak> there you go :)

[19:47] <TimToady> subset Health of Real preferring 0..^100  :)

[19:47] <masak> TimToady: now you're just making stuff up :P

[19:48] <sorear> he's TimToady.  he can do that.

[19:48] <masak> rakudo: subset Health of Real where 0 ..^ 100; my Health $h = 47; say $h; $h = -20; say 'alive'

[19:48] <p6eval> rakudo 8533c3: OUTPUT«Null PMC access in invoke()␤  in 'ACCEPTS' at line 1␤  in '&infix:<=>' at line 1␤  in main program body at line 22:/tmp/NXqWXvAzfS␤»

[19:49] <masak> huh?

[19:49] * masak submits rakudobug

[19:49] <sbp> subset Health of Real where Maybe 0..^100

[19:49] <moritz> tadzik: huh? which of my modules miss a meta info thingy file?

[19:50] <masak> neither 'preferring' or 'Maybe' have anything to do with giving a warning instead of an error.

[19:50] <colomon> does it make sense to have a subset of a role?

[19:50] <colomon> rakudo: subset Health of Int where 0 ..^ 100; my Health $h = 47; say $h; $h = -20; say 'alive'

[19:50] <p6eval> rakudo 8533c3: OUTPUT«47␤Type check failed for assignment␤    Container type: Int␤               Got: Int␤  in '&infix:<=>' at line 1␤  in main program body at line 22:/tmp/SaP_Ta4xRj␤»

[19:50] <TimToady> std: subset Health of Real where (0..^100) S| warn("Health out of range")

[19:50] <p6eval> std 3468e14: OUTPUT«ok 00:01 121m␤»

[19:51] <masak> colomon: sure, since you can instantiate (classes snapshotted from) roles.

[19:51] <masak> TimToady: ooh.

[19:51] <tadzik> moritz: CGI::Application, Nonogram and Module::Starter

[19:51] <sbp> Perl6: Our operators are from Sendak

[19:51] <masak> so, S| is basically || but without the need to put things in a block? :P

[19:52] <colomon> TimToady: warn returns something which is True?

[19:52] <TimToady> if it succeeds

[19:52] <masak> what kind of object does S| create? a Junction-but-serial?

[19:52] <TimToady> supposedly

[19:52] <TimToady> S is vaguely specced to mean several things

[19:52] * masak glares irritatedly at S

[19:53] <colomon> Yes, as I recall, S made me cross last time I looked at the spec for it.  :)

[19:53] <masak> to me, S is the "one metaop too many" metaop.

[19:54] <TimToady> masak: it also differs from || in not making you compare explicitly with the value, since it's still a junction

[19:54] <moritz> tadzik: I think Module::Starter can be deleted

[19:55] <masak> TimToady: the &warn call is part of the 'where' clause. surely its return value will be matched against the subtyped variable?

[19:56] *** jaldhar left
[19:56] <TimToady> not if it's a Boolean...

[19:56] <colomon> masak: it's not that S is "one metaop too many"... it's that it's "one metaop, four different meanings, more or less magically determined".

[19:56] <pmichaud> rakudo 2011.01 spectest:  29m45s

[19:56] <masak> TimToady: oh!

[19:57] <sbp> S is for polySemy

[19:57] <pmichaud> rakudo 2011.03 spectest:  30m15s

[19:57] * colomon randomly picked "four", been too long since he looked at the spec for S

[19:57] <pmichaud> rakudo 2011.04 spectest:  28m59s

[19:57] <pmichaud> I see no significant speedup here.  :-(

[19:57] <TimToady> that's okay, since Unicode has 98 things that match /« S »/

[19:57] <jnthn> pmichaud: No, not much... :(

[19:58] <TimToady> .u ∾

[19:58] <phenny> U+223E INVERTED LAZY S (∾)

[19:59] <jnthn> pmichaud: I shoved nqp through the Visual Studio profiler recently.

[19:59] <jnthn> pmichaud: 6model guts were...a long way down the profiling list...

[19:59] *** Moukeddar joined
[19:59] <jnthn> pmichaud: And that's before we're even really using it optimally...

[20:00] <alester> Phooey, the durpal dump is >1.5G 

[20:00] <alester> but I don't know hy

[20:00] <moritz> lots of spam?

[20:00] <alester> i'm sure

[20:00] <alester> i don't know which tables to dump.

[20:01] * masak .oO( this would all have been easier with event sourcing... )

[20:01] *** Moukeddar left
[20:01] <tadzik> moritz: I'm on it

[20:02] <tadzik> moritz: now I think about writing one anyway :)

[20:03] <dalek> ecosystem: f981b4e | tadzik++ | / (2 files):

[20:03] <dalek> ecosystem: Remove Module::Starter

[20:03] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/f981b4ea52

[20:04] <sorear> S is the "I have no idea how it's expected to work" metaop

[20:04] <pmichaud> alester: I've scraped the site

[20:04] <pmichaud> I'll grab what I need from the html 

[20:05] <pmichaud> I'm guessing the drupal dump is 1.5G owing to the spam comments

[20:05] <alester> I have raw stuff for you, pmichaud

[20:05] <alester> only two tables you need

[20:06] <alester> once I figure how to get mysqldump to dump only certain tables.

[20:06] <alester> but if you're happy w/the scraping, that's fine, too, and I'll stop

[20:06] *** Rotwang1 is now known as Rotwang

[20:06] *** ymasory left
[20:06] <pmichaud> let me try with the scrapes first... if I need the dumps I'll let you know :)

[20:07] <moritz> tadzik: I've added META.info to CGI::Application and Nonogram

[20:08] *** stkowski joined
[20:09] <moritz> tadzik: which ecosystem repo is the "authoritative" one right now? yours or the one in perl6?

[20:10] <tadzik> moritz: perl6. I should remove mine, doing that now

[20:10] <tadzik> done

[20:13] <moritz> tadzik: do we still need projects.list for anything?

[20:13] <tadzik> moritz: for backwards compatibility and historical reasons I think

[20:13] *** pmurias joined
[20:14] <pmichaud> channel poll:  is it important to re-post the various Rakudo compiler announcements to rakudoperl.org ?

[20:14] <pmurias> sorear: what's wrong with Proxy?

[20:14] <moritz> pmurias: no, but I'd love to preserve the R* release

[20:15] <pmurias> moritz: meant pmichaud?

[20:15] <moritz> yes, sorry

[20:15] <moritz> pmichaud: see above :-)

[20:15] <pmichaud> yes, I'm planning to keep the R* release announcements

[20:15] <pmichaud> here's a preview:  http://rakudoperl.org/?p=7&preview=true

[20:15] <tadzik> pmichaud: notfound

[20:15] <moritz> Apologies, but the page you requested could not be found. Perhaps searching will help.

[20:15] <masak> pmichaud: I think it's important to show something each month. I remember when I wasn't too involved with Rakudo. the release announcements served as a reminder that the project still existed and was alive.

[20:15] <masak> pmichaud: posting things is cheap.

[20:16] <pmichaud> masak: I mean the historical postings

[20:16] <masak> oh!

[20:16] <pmichaud> masak:  we're moving rakudo.org to a wordpress site

[20:16] <pmichaud> rakudoperl.org

[20:16] <masak> ah. sorry. :) I'm not keeping up :P

[20:16] <pmichaud> and I'm wondering how much content from the old rakudo.org site I need to keep

[20:16] <dalek> ecosystem: 72f62a5 | moritz++ | / (3 files):

[20:16] <dalek> ecosystem: remove two modules from SHELTER, and add META.info links instead

[20:16] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/72f62a5911

[20:16] <pmichaud> thus:  do I need to transfer all of the monthly release announcements for rakudo compiler

[20:17] <pmichaud> preview post might only be available if you're logged in/registered

[20:17] <moritz> no

[20:17] <pmichaud> I'll go ahead and publish it

[20:17] <pmurias> sorear: the interface to Proxy seems perfect to me

[20:17] <pmichaud> http://rakudoperl.org/2010/06/19/rakudo-star-a-usable-perl-6-to-be-released-by-july-29/

[20:17] <moritz> (and if yes, it would probably be less work to just take the announcements from git)

[20:17] *** rhebus left
[20:17] *** rhebus joined
[20:18] <pmichaud> it seems to be really easy to copy-n-paste from the drupal html into wordpress

[20:25] <pmurias> sorear: with a possible BIND for bvalues

[20:25] *** yegor__ joined
[20:26] *** Moukeddar joined
[20:28] *** yegor_ left
[20:29] *** molaf joined
[20:38] *** Moukeddar left
[20:38] *** MayDaniel joined
[20:38] *** ymasory joined
[20:40] *** birdwindupbird left
[20:42] <tadzik> heh, I need Test::Simple for every language I use. Did anyone ever wrote Test::Simple for Java? :)

[20:43] *** Moukeddar joined
[20:43] *** Sarten-X left
[20:50] <masak> yeah. but I never published it.

[20:50] <masak> it was before I embraced JUnit a bit more.

[20:51] *** molaf left
[20:52] *** Sarten-X joined
[20:54] *** snearch_ left
[20:55] <tadzik> yeah, I guess I should look into this jUnit

[20:55] <tadzik> I was trying to limit the "new things to learn" to just java

[20:55] * tadzik writing Battleship game for the university project

[20:56] <arnsholt> tadzik: Yeah, I have really come to like TAP

[20:57] *** TheD left
[21:01] <masak> TAP, like POD, should really be more widespread than just Perl.

[21:02] *** yegor_ joined
[21:03] *** kaare__ left
[21:05] *** Mowah left
[21:05] *** yegor__ left
[21:09] *** MayDaniel left
[21:10] *** yegor_ left
[21:16] *** Moukeddar left
[21:17] <pmichaud> jnthn: how many of your articles from rakudo.org would you want to have migrated to rakudoperl.org?  ("all" is an acceptable answer)

[21:17] <pmichaud> (other opinions welcome also)

[21:18] *** Rotwang left
[21:18] <pmurias> masak: what does jUnit use instead of TAP?

[21:19] <jnthn> pmichaud: How many are there?

[21:19] <jnthn> pmichaud: And what were they about?

[21:20] <jnthn> pmichaud: I don't ever remember writing anything exclusively for rakudo.org...

[21:20] <pmurias> pmichaud: why is there a migration from rakudo.org to rakudoperl.org

[21:20] <jnthn> Oh, maybe the odd thing...

[21:20] <pmichaud> I'm not sure they were "exclusive"

[21:20] <jnthn> Yeah

[21:21] <jnthn> I suspect they were cross-posts.

[21:21] <pmichaud> http://rakudo.org/node/55

[21:21] <pmichaud> 21:19 <jnthn> pmichaud: And what were they about?

[21:21] <pmichaud> oops

[21:21] <alester> pmichaud: why the domain name change?

[21:21] <pmichaud> http://rakudo.org/node/52

[21:21] <pmichaud> http://rakudo.org/node/51

[21:21] <pmichaud> etc

[21:21] <jnthn> Oh, I'm sure they were cross-posted 

[21:22] <pmichaud> alester:  I'm only using "rakudoperl.org" to distinguish new versus old

[21:22] <jnthn> I did them on use.perl.org

[21:22] <pmichaud> alester:  when things are moved across it'll just be "rakudo.org" again

[21:22] <alester> pmichaud: ok.

[21:22] <jnthn> So in terms of "not losing them for good" they won't be.

[21:22] *** leprevost joined
[21:22] <jnthn> So I've no issue with them not being migrated.

[21:22] <alester> My A-record-modifying fingers stand at the ready.

[21:22] *** mj41 left
[21:22] <alester> jnthn: Or rather, is there any reason NOT to migrate them?

[21:23] <pmichaud> well, I don't know how much I trust use.perl.org to stay around, either :)

[21:23] <pmichaud> I've been thinking of migrating my use.perl.org posts to my blog

[21:23] *** hercynium left
[21:24] <jnthn> alester: No, there's no reason not to either.

[21:24] <jnthn> alester: I don't feel strongly either way. :)

[21:25] <alester> Is there a way you could be even more ambivalent?

[21:25] <alester> More extreme in your ambivalence?

[21:25] <alester> TRUE NEUTRAL, BABY.

[21:26] <alester> pmichaud: HURRY I YEARN TO KILL THE DRUPAL.

[21:27] <alester> "He took his Drupal sword in hand...."

[21:30] <frettled> alester++

[21:31] <frettled> Is WordPress on rakudoperl.org updated to 3.1.2 yet?

[21:31] <alester> I'm sure Drupal is really awesome and powerful and all, but damn, I can't maintain the thing.

[21:32] <frettled> WP 3.x is easy to upgrade, at least.

[21:32] <frettled> But there has been a spate of vulnerability fixes recently, more than Drupal, and a whole bunch of automated attacks.

[21:33] <PerlJam> frettled: Drupal is easy to upgrade too ... it's just dealing with the fall-out that's the problem.  :-)

[21:33] <pmichaud> frettled: I'm at 3.1.0 atm.  I can upgrade to 3.1.2

[21:33] <pmichaud> one moment

[21:34] <pmichaud> Done.

[21:35] *** frettled joined
[21:35] <frettled> Sigh, irssi froze.  :

[21:36] <frettled> hugme: hug me

[21:36] * hugme hugs frettled

[21:36] <frettled> (:

[21:36] <masak> hugme: hug hugme

[21:36] * hugme hugs hugme

[21:36] <frettled> masak: hug masak

[21:36] * masak hugs masak

[21:36] <frettled> \o/

[21:37] <masak> I'm gonna hug myself into bed now.

[21:37] <masak> 'night, #perl6.

[21:37] <TimToady> o/

[21:37] <frettled> Splendid idea, masak++

[21:37] *** masak left
[21:39] <frettled> TimToady: golfing?  :)

[21:40] *** wallberg_ joined
[21:40] *** justatheory left
[21:41] *** rhebus left
[21:43] <tadzik> arnsholt! arnsholt!

[21:43] <tadzik> arnsholt: you missed a comma in your META.info

[21:44] <tadzik> I should make the ecosystem more typoproof

[21:44] *** rhebus joined
[21:52] <arnsholt> OHNOES!

[21:53] <arnsholt> There. Fixed

[21:53] <tadzik> thx

[21:53] *** ymasory left
[21:53] <frettled> If only other software developers could be half as quick.

[21:55] <arnsholt> I can either write my thesis, which is due on monday, or procrastinate. Not a difficult choice ;)

[21:57] <dalek> ecosystem: e2cebef | tadzik++ | META.list:

[21:57] <dalek> ecosystem: Remove links to nonexisting META.infos

[21:57] <dalek> ecosystem: review: https://github.com/perl6/ecosystem/commit/e2cebef04c

[22:00] <dalek> nqp/ctmo: 6435cc3 | jonathan++ | src/ (3 files):

[22:00] <dalek> nqp/ctmo: Simply multi method construction and dispatcher testing.

[22:00] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/6435cc3adb

[22:00] <dalek> nqp/ctmo: 245026d | jonathan++ | src/ (2 files):

[22:00] <dalek> nqp/ctmo: Shuffle method-adding code into the SC builder.

[22:00] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/245026dac9

[22:00] <dalek> nqp/ctmo: fef0b59 | jonathan++ | src/HLL/SerializationContextBuilder.pm:

[22:00] <dalek> nqp/ctmo: First steps at getting method definitions to go through the compile time meta-model. Some regressions.

[22:00] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/fef0b59bbc

[22:03] <dalek> star: 0601403 | pmichaud++ | skel/docs/announce/2011.04:

[22:03] <dalek> star: More announcement updates.

[22:03] <dalek> star: review: https://github.com/rakudo/star/commit/0601403bf6

[22:13] *** bacek joined
[22:14] *** rhebus left
[22:19] *** karamorf joined
[22:26] *** wallberg_ left
[22:32] *** wallberg left
[22:32] *** whiteknight joined
[22:38] *** icwiener left
[22:46] *** alester left
[22:53] <dalek> nqp/ctmo: 6ca730b | jonathan++ | src/ (3 files):

[22:53] <dalek> nqp/ctmo: Partial fix for multi-method dispatch regression.

[22:53] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/6ca730be75

[22:53] <dalek> nqp/ctmo: 5b9b016 | jonathan++ | src/NQP/Actions.pm:

[22:53] <dalek> nqp/ctmo: Get adding of regex declarations done through the compile time meta-object. Well, mostly...there's a horrible issue with the way prefixes are stored to deal with first...

[22:53] <dalek> nqp/ctmo: review: https://github.com/perl6/nqp/commit/5b9b01685a

[22:53] *** donri left
[22:54] <jnthn> pmichaud: ping

[22:55] *** stkowski left
[22:56] *** pmurias left
[23:02] <dukeleto> if anybody has any lingering commits to rakudo.git, please push. I am testing a github post-receive hook that runs and times the test suite

[23:12] *** justatheory joined
[23:14] *** justatheory_ joined
[23:16] *** justatheory left
[23:16] *** justatheory_ is now known as justatheory

[23:25] *** karamorf left
[23:38] *** cosimo joined
[23:39] <jnthn> sleep &

[23:39] *** Chillance left
