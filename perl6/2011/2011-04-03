[00:00] *** icwiener left
[00:15] *** mberends left
[00:28] *** bacek joined
[00:28] *** mikehh joined
[00:30] *** jasonmay joined
[00:37] *** bacek left
[00:49] *** bacek joined
[00:55] *** mikehh left
[01:05] *** mikehh joined
[01:06] *** Chillance left
[01:07] *** TimToady_ joined
[01:07] *** sftp_ joined
[01:07] *** itz_ joined
[01:08] *** Chillance joined
[01:08] *** sftp left
[01:08] *** krunen left
[01:09] *** krunen joined
[01:09] * sorear wonders if anyone highlights on @Larry anymore

[01:09] <Tene> I don't!

[01:27] *** aesop left
[01:29] <geekosaur> yeh, "betray" there is uncommon but perfectly valid, and usually applied to the particular thing that is doing the betraying (e.g. "this phrase betrays a certain preference for mumble")

[01:30] <geekosaur> or "...phrase betrays the author's bias toward..."

[01:33] *** octagon joined
[01:38] *** octagon left
[01:40] *** aesop joined
[01:43] *** aesop left
[01:50] *** whiteknight left
[02:04] *** aesop joined
[02:23] *** rdesfo joined
[02:24] <rdesfo> does perl6 have anything equivalent to python's matplotlib?

[02:37] *** shabble joined
[02:37] *** shabble left
[02:37] *** shabble joined
[02:41] <TimToady_> several people have done some plotty things, but I don't know offhand what they used

[02:42] *** Sarten-X left
[02:42] <TimToady_> most of the smart people are asleep already :)

[02:43] *** TimToady_ is now known as TimToady

[02:45] <rdesfo> TimToady: thanks

[02:49] *** Sarten-X joined
[02:49] *** wooden joined
[02:49] *** wooden left
[02:49] *** wooden joined
[02:49] <colomon> rdesfo: you'd want to look at the per 6  SVG modules, particularly SVG::Plot.

[02:49] <rdesfo> thanks

[02:49] <colomon> it's probably wildly less featureful than matplotlib at the moment, I'd guess.

[02:50] <TimToady> colomon being an exception on the subject of sleep

[02:50] * colomon not quite smart enough to be asleep yet.

[02:50] * TimToady is glad he said "most of"

[02:50] <rdesfo> colomon: do you know if there are any plans to build onto it?

[02:51] <colomon> rdesfo: I don't know of any formal plans, but I'm sure people would rather it did more.  

[02:51] * colomon really should be asleep, mind you.  Big day tomorrow, not enough sleep last night.

[02:53] <colomon> afk # bed

[02:53] <rdesfo> is there a way to use perl5's pdl?

[02:55] <TimToady> blizkost might do it, though eventually when S09 gets implemented it'll mostly be built-in

[03:00] *** Chillance left
[03:02] *** rdesfo left
[03:03] <sorear> TimToady: any thoughts on my question starting around 1535?

[03:05] * TimToady doesn't have enough brane today

[03:06] *** jaldhar left
[03:08] *** jaldhar joined
[03:11] *** marcio_ferreira left
[03:12] *** awwaiid joined
[03:13] <sorear> TimToady: oh.  very well then.

[03:16] <sorear> perl6: grammar Foo { proto token bar {*}; token bar:x { \w+ }; token bar:y { \+ } }; say Foo.parse("hi")

[03:16] <p6eval> pugs: OUTPUT«*** No such method in class Foo: "&parse"␤    at /tmp/NlM70JQqXB line 1, column 83 - line 2, column 1␤»

[03:16] <p6eval> ..niecza v4-8-g2bdc3ff: OUTPUT«Unhandled exception: Unable to resolve method TOP in class Foo␤  at /home/p6eval/niecza/lib/CORE.setting line 1058 (CORE Grammar.parse @ 3)␤  at /tmp/UgNoi3PLXD line 1 (MAIN mainline @ 2)␤  at /home/p6eval/niecza/lib/CORE.setting line 1264 (CORE C525_ANON @ 2)␤  at

[03:16] <p6eval> ../home/p6eval/nie…

[03:16] <p6eval> ..rakudo 4bf132: OUTPUT«===SORRY!===␤Quantifier quantifies nothing at line 22, near "}; token b"␤»

[03:16] *** pencilk joined
[03:17] <sorear> rakudo: grammar Foo { proto token bar {...}; token bar:x { \w+ }; token bar:y { \+ } }; say Foo.parse("hi", :rule<bar>)

[03:17] <p6eval> rakudo 4bf132: OUTPUT«␤»

[03:18] *** aesop left
[03:19] <TimToady> rakudo: grammar Foo { proto token bar {<...>}; token bar:x { \w+ }; token bar:y { \+ } }; say Foo.parse("hi", :rule<bar>)

[03:19] <p6eval> rakudo 4bf132: OUTPUT«␤»

[03:20] <TimToady> rakudo: grammar Foo { proto token bar {<...>}; token bar:sym<x> { \w+ }; token bar:sym<y> { \+ } }; say Foo.parse("hi", :rule<bar>)

[03:20] <p6eval> rakudo 4bf132: OUTPUT«hi␤»

[03:20] <TimToady> there you go

[03:21] * TimToady is at least that smart today

[03:21] <sorear> rakudo: grammar Foo { token bar:sym<x> { \w+ }; token bar:sym<y> { \+ } }; say Foo.parse("hi", :rule<bar>)

[03:21] <p6eval> rakudo 4bf132: OUTPUT«Method 'bar' not found for invocant of class ''␤  in 'Grammar::parse' at line 6327:CORE.setting␤  in main program body at line 22:/tmp/fHN9JGf9BV␤»

[03:21] <sorear> niecza: grammar Foo { token bar:sym<x> { \w+ }; token bar:sym<y> { \+ } }; say Foo.parse("hi", :rule<bar>)

[03:21] <p6eval> niecza v4-8-g2bdc3ff: OUTPUT«hi␤»

[03:22] <TimToady> cool

[03:22] <sorear> is this a feature?

[03:23] <TimToady> supposed to be able to intuit a proto eventually

[03:23] *** Su-Shee_ joined
[03:25] *** marcio_ferreira joined
[03:26] *** marcio_ferreira left
[03:26] *** Su-Shee left
[03:28] *** pencilk left
[03:31] *** leprevost joined
[03:31] *** leprevost_ joined
[03:31] *** aesop joined
[03:34] *** leprevost_ left
[03:34] *** leprevost left
[03:43] *** envi joined
[03:58] <simcop2387> wtf i was killed?

[04:02] *** donri left
[04:06] <simcop2387> sorry wrong channel

[04:07] *** mrkodiak joined
[04:27] *** envi left
[04:27] *** envi joined
[04:39] *** ajs left
[04:40] *** ajs joined
[04:43] *** hudnix left
[04:46] *** ymasory left
[04:51] *** jaldhar left
[04:52] *** jaldhar joined
[05:01] *** zer0o left
[05:40] *** noganex left
[05:40] *** _twitch joined
[05:42] *** _twitch left
[05:42] *** _twitch joined
[05:43] *** noganex joined
[05:50] *** JimmyZ joined
[05:53] *** JimmyZ left
[05:59] *** _twitch left
[06:09] *** am0c joined
[06:12] *** _twitch joined
[06:12] *** _twitch left
[06:14] *** charsbar_ left
[06:18] *** charsbar_ joined
[06:31] *** birdwindupbird joined
[06:55] <dalek> niecza: 705a5b4 | sorear++ | lib/Kernel.cs:

[06:55] <dalek> niecza: Add a P6how object adjoint to STable

[06:55] <dalek> niecza: review: https://github.com/sorear/niecza/commit/705a5b4a37

[06:55] <dalek> niecza: 1081c72 | sorear++ | lib/ (2 files):

[06:55] <dalek> niecza: Move a number of types to P6how

[06:55] <dalek> niecza: review: https://github.com/sorear/niecza/commit/1081c72cc2

[06:55] <dalek> niecza: 8cfb157 | sorear++ | lib/Kernel.cs:

[06:55] <dalek> niecza: Move role caching to P6how

[06:55] <dalek> niecza: review: https://github.com/sorear/niecza/commit/8cfb1578e8

[06:55] <dalek> niecza: f9008b0 | sorear++ | lib/ (2 files):

[06:55] <dalek> niecza: Move method table internal state to P6how

[06:55] <dalek> niecza: review: https://github.com/sorear/niecza/commit/f9008b0ac7

[07:02] <dalek> niecza: c74e0f6 | sorear++ | lib/Kernel.cs:

[07:02] <dalek> niecza: Move revalidate algorithm to P6how

[07:02] <dalek> niecza: review: https://github.com/sorear/niecza/commit/c74e0f60d9

[07:04] *** GinoMan joined
[07:05] *** plobsing left
[07:13] *** plobsing joined
[07:29] *** nymacro joined
[07:31] *** am0c left
[07:33] *** jimmy_ joined
[07:40] *** jimmy_ left
[07:41] *** charsbar_ left
[07:44] *** Mowah joined
[07:46] *** charsbar_ joined
[07:48] *** am0c joined
[07:53] *** nymacro left
[07:55] *** nymacro joined
[07:56] *** isBEKaml joined
[07:58] <isBEKaml> rakudo: say [*] (1..5)

[07:58] <p6eval> rakudo 4bf132: OUTPUT«120␤»

[07:58] <isBEKaml> rakudo: say [*] (1,3,..15)

[07:58] <p6eval> rakudo 4bf132: OUTPUT«===SORRY!===␤Method 'returns' not found for invocant of class 'Undef'␤»

[07:58] <isBEKaml> rakudo: say [*] (1,3..15)

[07:59] <p6eval> rakudo 4bf132: OUTPUT«653837184000␤»

[07:59] <sorear> rakudo: say [*] (1,3...15)

[07:59] <p6eval> rakudo 4bf132: OUTPUT«2027025␤»

[07:59] <isBEKaml> sorear: ehh.. 

[07:59] <isBEKaml> :)

[08:05] *** isBEKaml left
[08:07] *** sftp joined
[08:07] *** sftp_ left
[08:09] *** jimmy1980 left
[08:18] *** ajs left
[08:23] <dalek> niecza: dd436cc | sorear++ | lib/ (3 files):

[08:23] <dalek> niecza: Move MRO-logic to P6how

[08:23] <dalek> niecza: review: https://github.com/sorear/niecza/commit/dd436cc24c

[08:26] *** donri joined
[08:37] <dalek> niecza: 698ab10 | sorear++ | / (4 files):

[08:37] <dalek> niecza: Split out deques etc to Utils.cs

[08:37] <dalek> niecza: review: https://github.com/sorear/niecza/commit/698ab10f82

[08:37] <dalek> niecza: ef344df | sorear++ | / (3 files):

[08:37] <dalek> niecza: Split basic object stuff into ObjModel.cs

[08:37] <dalek> niecza: review: https://github.com/sorear/niecza/commit/ef344dfbfb

[09:05] *** Su-Shee_ is now known as Su-Shee

[09:14] <moritz> good morning

[09:18] *** charsbar_ left
[09:27] *** charsbar_ joined
[09:41] *** orafu left
[09:41] *** orafu joined
[09:49] *** birdwindupbird left
[10:02] *** am0c left
[10:07] *** Lorn left
[10:07] *** bacek left
[10:08] *** charsbar_ left
[10:12] *** pmurias joined
[10:13] *** charsbar_ joined
[10:23] *** wallberg joined
[10:29] *** bacek joined
[10:32] *** xinming left
[10:35] *** gfldex left
[10:40] *** xinming joined
[10:40] <tadzik> good morning

[10:40] <tadzik> moritz: around?

[10:41] <moritz> tadzik: aye

[10:42] *** wallberg left
[10:45] <tadzik> moritz: speaking of my GSoC proposal, mberends suggested that I should aim for something more visibly deliverable for the first week, like "10 classes 100 tests", something more concrete. What is your opinion on this?

[10:45] <tadzik> https://gist.github.com/892249 the proposal

[10:45] *** whiteknight joined
[10:46] <moritz> tadzik: assessing the value of code by the number of classes is like judging the worth of a plane by its weight

[10:47] <tadzik> well, I think he meant something to compile, run and test rather than "a specs and Rakudo investigation"

[10:47] <tadzik> my plan was to underpromise and overdeliver, tbh :)

[10:48] *** charsbar_ left
[10:49] <moritz> I agree that the current goal for week 1 is weak and imprecise

[10:49] <moritz> but I think that numbers are the wrong fix to that

[10:49] <tadzik> so what would be better?

[10:49] <moritz> think about it: what do you want from these classes?

[10:50] <moritz> you want them to be easily constructed during the parse (ie in a bottom-up manner)

[10:50] <tadzik> that's what the user gets after his/her POD is pasred. A code generator will generate readable output from this

[10:50] <moritz> you might want to extract line number, original POD, and use it as an AST

[10:50] *** amkrankruleuen joined
[10:51] <moritz> so: write classes that represent POD AST nodes, and tests that construct them, and extract information from them

[10:52] *** charsbar_ joined
[10:52] <tadzik> sounds reasonable

[10:53] <tadzik> and of course "document them with POD" :)

[10:53] <moritz> where will you get inspiration fro those POD AST nodes? write it down too

[10:57] *** pmurias left
[10:58] <tadzik> http://search.cpan.org/~zag/Perl6-Pod-0.24/ -- this looks like something I could get inspiration from

[11:00] *** patrickas joined
[11:00] <moritz> there's also Perl6::Perldoc and the normal rakudo AST nodes to take inspiration from

[11:01] <patrickas> o/

[11:01] <patrickas> rakudo: say [*] ();

[11:01] <p6eval> rakudo 4bf132: OUTPUT«1␤»

[11:01] <patrickas> is that a bug ?

[11:01] <moritz> nope, feature

[11:01] <patrickas> oh ok ...

[11:02] <patrickas> rakudo: say [+] ();

[11:02] <p6eval> rakudo 4bf132: OUTPUT«0␤»

[11:02] <patrickas> where can I read about it ?

[11:02] <moritz> rakudo: say [&&] ()

[11:02] <p6eval> rakudo 4bf132: OUTPUT«Bool::True␤»

[11:02] <moritz> S03 iirc

[11:03] <moritz> http://perlcabal.org/syn/S03.html#Reduction_operators more specifically

[11:04] <patrickas> thanks boss! Something's different! You changed your haircut? :-p

[11:04] <patrickas> referencing the lack of _ 

[11:05] <moritz> patrickas: aye. 'moritz' was registered on freenode, and not used for last 20 weeks. I've convinced a freenode staffer to drop the nick, so I could register it

[11:05] *** kanishka joined
[11:05] <tadzik> you're more moritz than that duy :)

[11:06] <tadzik> s/duy/guy/

[11:06] <moritz> :-)

[11:10] <patrickas> I might have missed it ... but it seems S03 says that [*]() returns 1 but not does explain why 1 was chozen...

[11:10] <moritz> because it's the neutral element for the infix:<*> operation

[11:11] <moritz> so that ([*] ()) * ([*] @rest) == [*] @rest

[11:11] <moritz> just like ([+] ()) + ([+] @rest) == [+] @rest

[11:11] <moritz> and same for s:g/\+/&&/ etc.

[11:12] <patrickas> so that reducing an empty list with another list does not change the result ?

[11:13] <moritz> aye

[11:13] <patrickas> ok makes sense

[11:14] *** _sri joined
[11:16] <patrickas> I kinda feel bad for expecting it to be 0 in the first place.

[11:19] <tadzik> moritz: how do you see week 2 then? Maybe an initial Pod (possibly just stubs) parser and a basic integration with Rakudo?

[11:19] <moritz> rakudo: my $x; $x *= 5; say $x

[11:19] <p6eval> rakudo 4bf132: OUTPUT«5␤»

[11:19] <moritz> tadzik: documentation for #1 :-)

[11:19] <tadzik> iirc we agreed that the parser would be good to have as a Role consumed by Rakudo parser

[11:19] <patrickas> I have a new definition for then rakudo will be "done" for me. When I get something that surprizes me, my first reaction is "I haven't thought this well enough", instead of "I wonder if that's a rakudobug."

[11:20] <moritz> tadzik: I find that dangerous, because you can't reliably compose roles into rakudo's grammar

[11:22] <tadzik> so the idea is a utopia? Separation from Rakudo would be profitable, not only for other implementations, but also regarding Rakudo build time

[11:22] <moritz> tadzik: I'd say week 1 and week 2 should do the same, but in week 1 you lay the ground work and implement a few classes

[11:22] <tadzik> so maybe the parser goes first, and then we manually compose it into Rakudo

[11:22] <moritz> tadzik: and in week 2 you implement more classes

[11:23] <tadzik> moritz: how about week 1 being week 1-2? That'd be harder to rate the amount of work after the first week

[11:25] <tadzik> oh, turns out my exam session actually ends on May 30th

[11:26] *** birdwindupbird joined
[11:26] <moritz> then don't cram too much into the first two weeks

[11:26] <tadzik> so I, well, _May_ have only 4 days for week 1st

[11:26] <tadzik> so could the first week become the first two?

[11:27] *** pencilk joined
[11:27] <moritz> yes

[11:27] <moritz> and insert a week for refactorings around week 7 or 8

[11:28] <tadzik> oh, turns out I have _no_ week 1 then

[11:29] <moritz> set up your work environments, get acquinted with the rakudo committers :-)

[11:29] *** sftp left
[11:30] <moritz> week 1: write some classes + tests + docs

[11:31] <tadzik> Week 1 is 24-28 May, I'll just write that I can't possibly start then

[11:31] <tadzik> hrmpf, everything slips

[11:32] <moritz> if you do the class writing in week 2, it's ok to do nothing in week 1

[11:33] <tadzik> I think I'll manage to do it in 4 days. After the exam session, that will be quite relaxing anyway

[11:33] *** wallberg joined
[11:33] <tadzik> moritz: updated, could you take a peek on it?

[11:33] *** Vlavv left
[11:35] *** cjk101010 joined
[11:43] <moritz> +1

[11:47] <tadzik> great

[11:47] *** Vlavv joined
[11:49] *** sftp joined
[11:51] *** Patterner left
[11:53] *** jaldhar left
[11:53] *** jaldhar joined
[11:54] *** pencilk left
[11:54] *** Psyche^ joined
[11:55] *** Psyche^ is now known as Patterner

[11:56] *** kanishka left
[11:56] *** sftp left
[11:57] *** sftp joined
[11:57] *** pencilk joined
[11:59] *** pencilk left
[12:06] *** charsbar_ left
[12:10] *** DanielC joined
[12:10] *** charsbar_ joined
[12:13] *** DanielC left
[12:31] *** patrickas left
[12:49] *** Chillance joined
[13:01] *** gfldex joined
[13:09] *** mikehh left
[13:10] *** arlinius left
[13:16] *** dual left
[13:23] *** hudnix joined
[13:26] *** Axius joined
[13:35] *** mikehh joined
[14:09] <sorear> good * #perl6

[14:12] *** ajs joined
[14:16] *** xinming_ joined
[14:18] *** xinming left
[14:21] *** nymacro left
[14:31] *** risou joined
[14:45] *** dual joined
[14:45] *** kaare_ joined
[14:51] *** leprevost joined
[14:58] *** JimmyZ joined
[15:01] <moritz> \o

[15:01] *** rdesfo1 joined
[15:01] <sorear> hello moritz

[15:01] * sorear wonders what to do today

[15:04] <moritz> take over the world?

[15:07] <sorear> I need a shorter-term goal

[15:08] <sorear> something I can do while @Larry is unable to help explain multiple dispatch

[15:08] <moritz> turn some of your niecza tests into spectests

[15:20] <flussence_> if you're looking for something to add, Text-Tabs-Wrap's tests only seem to be missing Sub.assuming, Array.kv and Callable. I think the module itself works in niecza...

[15:28] *** JimmyZ left
[15:34] <rdesfo1> is it possible to use perl5 "PDL" module in perl6?

[15:36] <diakopter> no

[15:36] *** cognominal left
[15:37] <PerlJam> rdesfo1: not yet

[15:37] <rdesfo1> thanks

[15:41] *** mberends joined
[15:44] *** broquaint joined
[15:44] *** bleakgadfly joined
[15:44] *** cognominal joined
[15:52] *** anderson joined
[15:55] *** plobsing left
[15:56] *** hatseflats left
[15:58] *** PerlJam left
[16:04] *** cjk101010 left
[16:06] *** tadzik joined
[16:07] *** pmichaud joined
[16:07] *** hatseflats joined
[16:08] *** Util joined
[16:09] *** PerlJam joined
[16:15] *** M_o_C joined
[16:16] *** ymasory joined
[16:19] *** plobsing joined
[16:22] <tylercurtis> Hi, #perl6.

[16:25] <MindosCheng> Hi, #perl6.

[16:27] *** Axius left
[16:31] <sorear> yay it's tylercurtis!

[16:34] *** envi left
[16:34] <sorear> WHAT.

[16:35] <sorear> the niecza v4 announce was rejected by the p6a moderators...?

[16:42] <diakopter> _

[16:48] <sorear> according to the ezmlm message, they rejected it through inaction

[16:48] <sorear> so maybe they're just all asleep

[16:48] <sorear> maybe I'll rewrite S29 and S32 today

[16:48] <diakopter> ha

[16:49] <diakopter> (impressive)

[16:57] *** Juerd joined
[17:01] *** birdwindupbird left
[17:03] *** estrabd joined
[17:05] *** icwiener joined
[17:09] *** plobsing left
[17:09] *** Vinay_ joined
[17:16] *** Vinay_ left
[17:16] *** Mowah left
[17:35] *** M_o_C left
[17:48] *** pmurias joined
[17:48] <pmurias> sorear: ping

[17:53] *** cjk101010 joined
[17:56] <tylercurtis> jnthn: ping

[18:04] *** Rotwang joined
[18:04] *** dannyboy joined
[18:05] *** M_o_C joined
[18:09] *** leprevost left
[18:10] *** broquaint left
[18:12] *** broquaint joined
[18:12] *** dannyboy left
[18:12] *** broquaint left
[18:12] *** MayDaniel joined
[18:16] <sorear> pmurias: pong

[18:16] *** MayDaniel left
[18:19] <pmurias> sorear: re your A -> B -> C, A -> D, foo -> bar means that the bar signature is more specific?

[18:20] <sorear> I meant that foo is more specific

[18:20] <pmurias> so A is the prefered signature

[18:22] <sorear> yes

[18:23] *** rdesfo1 left
[18:23] <pmurias> what we could do is to choose the first one on the list that matches and then check if it is more specific then all the other ones that match

[18:24] *** gfldex left
[18:26] *** gfldex joined
[18:28] <pmurias> sorear: how fast to we need the choosing of the variant to be?

[18:30] *** Rotwang left
[18:40] *** Rotwang joined
[18:42] <pmurias> sorear: we could simly walk the sorted list, and when a signature matches mark off all the less specific ones (that info can be pre-cached)

[18:42] <pmurias> if we find two unmarked matching ones we have an ambiguity

[18:43] <pmurias> only one matching unmarked ones we found the right choice

[18:43] <pmurias> sorear: would that be fast enough?

[18:43] <pmurias> or is there a design problem in Perl 6 I haven't figured out?

[18:47] *** plobsing joined
[18:49] *** risou left
[18:50] *** cjk101010 left
[18:52] *** takadonet joined
[18:53] <takadonet> 0/

[18:53] *** mikehh left
[19:02] *** M_o_C left
[19:24] *** justatheory joined
[19:41] *** Rotwang left
[19:45] *** Rotwang joined
[20:08] *** Rotwang left
[20:22] *** justatheory_ joined
[20:22] *** justatheory left
[20:22] *** justatheory_ is now known as justatheory

[20:31] *** zer0o joined
[20:34] <moritz> \o

[20:34] <donri> A-do the boogie woogie and we turn around

[20:34] <donri>  o/

[20:36] *** ymasory left
[20:37] <sorear> pmurias: I want to talk to pmichaud or jnthn before making any decisions like that

[20:37] *** ymasory joined
[20:39] <sorear> pmurias: eventually, I'd like to implement a version of (Wadler or Augustsson)'s pattern match compiler

[20:52] *** kaare_ left
[20:55] *** justatheory left
[20:56] *** MayDaniel joined
[21:04] *** ymasory left
[21:08] *** sftp left
[21:09] *** sftp joined
[21:14] *** rdesfo joined
[21:15] <rdesfo> is any one on that is familiar with the PDL data-structure in Perl6's core specs?

[21:16] <moritz> S09 talks about that

[21:17] <tadzik> . o O ( there is a spec for that! )

[21:18] <moritz> right. You can read it, and become the expert yourself!

[21:18] <rdesfo> Ya,  I spoke to Duke and he said I should ask about it here and read the S09.  I'm interested in putting in another proposal for GSOC with it

[21:18] <moritz> for implementing that in Rakudo?

[21:19] <tadzik> funny, I just thought about that

[21:19] <rdesfo> ya

[21:19] <moritz> that would be very welcome

[21:19] <moritz> seen jnthn 

[21:19] <aloha> jnthn was last seen in #perl6 5 days 18 hours ago joining the channel.

[21:20] <moritz> hrmpf

[21:32] *** Rotwang joined
[21:37] *** MayDaniel left
[21:42] *** benabik left
[21:44] *** benabik joined
[21:52] *** wallberg left
[21:53] *** masak joined
[21:53] <masak> hi zebras.

[21:53] <phenny> masak: 02 Apr 22:18Z <Tene> tell masak to look at http://vimeo.com/channels/stanfordvis#19185801

[21:53] <sorear> hi masak.

[21:54] <sorear> rdesfo: compact arrays in niecza... hmm could be an interesting idea.

[21:55] <rdesfo> sorear: is the compact array in Rakudo?

[21:57] <sorear> I'm just thinking aloud

[21:57] <sorear> I need some ideas, myself

[21:58] <masak> Tene: wow.

[21:59] *** justatheory joined
[21:59] <masak> Tene: that demo is impressive. it's generally not the kind of "intelligence" I like in an app, but they seem to pull it off really well.

[21:59] <sorear> masak: do you know where jnthn is?  aloha hasn't seen em for almost 6 days and I need a pragmatic MMD expert

[21:59] <masak> sorear: jnthn is still in .tw

[21:59] <sorear> pm too?

[22:00] <masak> no.

[22:01] *** Rotwang left
[22:04] <masak> Tene: the other thing it reminds me of is the concept of lenses (bidirectional/bijective transformations). those provide things like traceability and automatic mapping between the view and the model. I half-expected the video to culminate with that.

[22:09] <masak> I meant to do a Yapsi release this weekend, but in hindsight that turned out to be a bit too optimistic. spent most of this weekend with $family.

[22:10] <masak> anyway, I'm halfway through an implementation of ENTER/LEAVE. halfway meaning that the compiler now accepts them and creates the right kind of SIC, but the runtime doesn't yet know what to do.

[22:10] <masak> I should probably push what I have so far, because it's quite self-contained.

[22:11] *** risou joined
[22:12] <masak> the thing I'm stuck-ish at with the runtime is that I want to make sure it stays a state machine, but the phasers seem to postulate much more of a stack-like behavior.

[22:12] <masak> if that makes any sense.

[22:13] *** donri left
[22:18] <masak> 'night, #perl6

[22:18] *** masak left
[22:31] *** risou_ joined
[22:33] *** risou left
[22:44] *** wlod joined
[22:44] *** wlod left
[22:49] *** pmurias left
[22:53] *** orafu left
[22:55] *** orafu joined
[22:58] *** justatheory left
[22:59] *** rgrau` joined
[23:06] *** Holy_Cow joined
[23:06] *** Holy_Cow left
[23:10] *** Chillance left
[23:16] *** rgrau` left
[23:17] *** VxJasonxV joined
[23:17] *** VxJasonxV left
[23:26] * sorear wonders if ENTER and LEAVE should have dynamic-wind semantics

[23:26] *** risou_ left
[23:27] *** Grrrr joined
[23:29] <felher> It isn't a good idea using rakudo to parse a 4.500.000-lines file, is it? :)

[23:32] <felher> s/rakudo/perl6 interpreted by rakudo/

[23:33] *** kolibrie_ joined
[23:33] *** pjcj_ joined
[23:33] *** Tene_ joined
[23:33] *** Tene_ left
[23:33] *** Tene_ joined
[23:33] *** apejens_ joined
[23:34] *** ribasushi_ joined
[23:34] *** TiMBuS|Away joined
[23:34] *** krunen_ joined
[23:35] *** shabble_ joined
[23:35] *** mdxi joined
[23:35] *** shabble left
[23:35] *** krunen left
[23:35] *** Khisanth left
[23:35] *** pjcj left
[23:35] *** flussence_ left
[23:35] *** PZt left
[23:35] *** Tene left
[23:35] *** apejens_ is now known as apejens

[23:35] *** TiMBuS|Away is now known as TiMBuS

[23:36] *** woldrich joined
[23:36] *** flussence joined
[23:36] *** woldrich is now known as Guest51810

[23:36] *** Bucciarati joined
[23:37] *** arlinius joined
[23:39] *** IRSeekBot joined
[23:39] *** Brandon_W_ATS joined
[23:39] *** knewt2 joined
[23:41] *** mberends left
[23:43] *** sftp left
[23:46] *** PZt joined
[23:48] *** [particle]1 joined
[23:48] *** baest_ joined
[23:48] *** y3llow_ joined
[23:49] *** flussence left
[23:51] *** Koven joined
[23:51] *** y3llow left
[23:51] *** [particle] left
[23:51] *** Khisanth joined
[23:51] *** VXZ left
[23:51] *** baest_ left
[23:51] *** Trashlord left
[23:52] *** y3llow_ is now known as y3llow

[23:52] *** Koven is now known as Kovensky

[23:52] *** Patterner left
[23:52] *** flussence_ joined
[23:52] *** VX64Z joined
[23:52] *** pnu_ joined
[23:52] *** szbalint_ joined
[23:52] *** baest joined
[23:52] *** noganex left
[23:52] *** Bucciarati left
[23:52] *** gfldex left
[23:53] *** gfldex joined
[23:53] *** Bucciarati joined
[23:53] *** Trashlord joined
[23:53] *** noganex joined
[23:54] *** Psyche^ joined
[23:54] *** Psyche^ is now known as Patterner

[23:58] *** Eevee joined
