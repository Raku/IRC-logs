[01:18] *** frost joined
[03:13] *** discord-raku-bot left
[03:13] *** discord-raku-bot joined
[06:26] <discord-raku-bot> <stevied#8273> can someone explain why I'm getting an error with this:

[06:26] <discord-raku-bot> <stevied#8273> ```

[06:26] <discord-raku-bot> <stevied#8273>     for $config.IO.slurp.lines <-> $l {

[06:26] <discord-raku-bot> <stevied#8273>         $l .= trim;

[06:26] <discord-raku-bot> <stevied#8273> ```

[06:27] <discord-raku-bot> <stevied#8273> error is: `Parameter '$l' expects a writable container (variable) as an argument,

[06:27] <discord-raku-bot> <stevied#8273> but got '# karabiner config file' (Str) as a value without a container.`

[06:27] <discord-raku-bot> <stevied#8273> why doesn't $l have a container?

[06:27] <discord-raku-bot> <stevied#8273> can I give it one?

[06:38] <discord-raku-bot> <lakmatiol#8020> I assume `my $l` would work

[07:07] *** MasterDuke left
[08:39] *** MasterDuke joined
[08:40] <MasterDuke> doing `$l is rw` works

[08:42] <MasterDuke> you need both `<->` and `is rw`

[08:44] <discord-raku-bot> <gfldex#8222> `-> $l is copy` makes more sense

[08:45] <MasterDuke> yep, probably so

[09:05] *** dakkar joined
[09:08] <lizmat> .lines doesn't produce containers

[09:23] <discord-raku-bot> <Nemokosch#9980> which pretty much makes sense, lines of a file are constant values

[12:20] *** frost73 joined
[12:23] *** frost left
[12:24] *** frost73 is now known as frost

[12:46] *** frost left
[13:17] <discord-raku-bot> <shift-eleven#8115> is there any sort of overhead to the `is-prime` method for `Int`

[13:18] <dakkar> "over" with respect to what? I mean, it has to determine if the number is prime, and that's going to be slow for large numbers‚Ä¶

[13:19] <MasterDuke> there is a different code path for numbers less than 2**31 - 1 that doesn't use the big integer library

[13:21] <discord-raku-bot> <shift-eleven#8115> runtime overhead is what I meant

[13:25] <MasterDuke> not entirely sure what you mean, but i don't think so. it pretty much just directly calls¬† the moarvm implementation (that's where it splits in deciding to call into the big integer library or not)

[13:26] <discord-raku-bot> <shift-eleven#8115> gotcha

[14:27] <discord-raku-bot> <stevied#8273> thanks MasterDuke, that worked. Also an interesting answer here: https://stackoverflow.com/questions/70692342/getting-value-without-a-container-error/70694125#70694125

[14:28] <discord-raku-bot> <stevied#8273> oh, that's lizmat

[14:52] <discord-raku-bot> <Nemokosch#9980> üòÇ

[16:33] <discord-raku-bot> <stevied#8273> anyone got any tips on how to speed up syntax highlighting using neovim?

[16:39] <thowe> speaking of, the neovim raku syntax plugin link on the Raku web site needs to be updated.

[16:45] <destroycomputers> stevied, try to set regex engine to 1 (set re=1), that helped quite a bit when I used neovim with raku

[16:52] <discord-raku-bot> <stevied#8273> this looks cool: https://developpaper.com/real-time-syntax-checking-of-raku-perl6-script-with-language-server-in-vim/

[16:52] <discord-raku-bot> <stevied#8273> no idea how to set it up, though

[17:08] *** [Coke] left
[17:14] *** [Coke] joined
[17:40] *** dakkar left
[18:41] * gfldex .oO( .lines is so lazy, it doesn't even produce containers )

[21:02] <discord-raku-bot> <stevied#8273> ok, been working on this for a couple hours. can't figure out what the problem is

[21:03] <discord-raku-bot> <stevied#8273> I have this in a file in lib/Karabiner/Template.rakumod:

[21:03] <discord-raku-bot> <stevied#8273> ```

[21:03] <discord-raku-bot> <stevied#8273> unit class Template;

[21:03] <discord-raku-bot> <stevied#8273> has Str $.key;

[21:03] <discord-raku-bot> <stevied#8273> ```

[21:04] <discord-raku-bot> <stevied#8273> and I have this in lib/Karabiner/Templates/DoubleTab.rakumod:

[21:04] <discord-raku-bot> <stevied#8273> ```

[21:04] <discord-raku-bot> <stevied#8273> use Karabiner::Template;

[21:04] <discord-raku-bot> <stevied#8273> unit class DoubleTap is Template;

[21:04] <discord-raku-bot> <stevied#8273> has Str $!app1;

[21:04] <discord-raku-bot> <stevied#8273> method print() {

[21:04] <discord-raku-bot> <stevied#8273>     say $!app1;

[21:04] <discord-raku-bot> <stevied#8273>     say $!key;

[21:04] <discord-raku-bot> <stevied#8273> }

[21:04] <discord-raku-bot> <stevied#8273> ```

[21:04] <discord-raku-bot> <stevied#8273> I'm getting error in second file: `lib/Karabiner/Templates/DoubleTap.rakumod|11 error| Attribute $!key not declared in class DoubleTap`

[21:05] *** qorg11 left
[21:06] *** qorg11 joined
[21:07] <[Coke]> Yes, it's not declared

[21:07] <[Coke]> did you mean $.key ?

[21:07] <[Coke]> even the parent doesn't have a $!key.

[21:08] <[Coke]> but even if it did, you can't poke at the guts of the parent.

[21:08] <MasterDuke> the parent does. but classes are very private in raku and yeah, i think the child needs to use the accessor

[21:08] <[Coke]> so you'd still have to use $.key

[21:08] <[Coke]> the parent does not have a $!key

[21:08] <[Coke]> it has a $.key

[21:08] <[Coke]> (not declared anyway)

[21:09] <MasterDuke> that's sugar though to create an accessor for $!key

[21:09] <MasterDuke> m: class A { has $.key = "hi"; method foo() { say $!key } }; A.new.foo

[21:09] <camelia> rakudo-moar 4d78bc6ac: OUTPUT: ¬´hi‚ê§¬ª

[21:10] <[Coke]> (sugar) fair

[21:13] <discord-raku-bot> <stevied#8273> yeah, $.key fixed it

[21:13] <discord-raku-bot> <stevied#8273> this is confusing

[21:14] <[Coke]> You can't refer to another classes attributes directly, even if you're their kid.

[21:15] <discord-raku-bot> <stevied#8273> so I can't have $!key in parent and allow child to use it?

[21:15] <[Coke]> Correct.

[21:16] <[Coke]> but you can use the accessors that you get with 'has $.key'

[21:16] <[Coke]> This allows the parent to maintain consistency

[21:16] <discord-raku-bot> <stevied#8273> ok, thanks

[21:17] <discord-raku-bot> <stevied#8273> one other question: can objects be set up to accept positional parameters instead of named?

[21:17] <[Coke]> ISTR there was an ovid presentation that covered this that might be worth finding (looking)

[21:18] <MasterDuke> you'll need to create your own .new for that

[21:19] <discord-raku-bot> <stevied#8273> is that the same as the BUILD method?

[21:21] <MasterDuke> m: class A { has $.key = "hi"; multi method new($key) { self.bless(:$key) }; method foo() { say $!key } }; A.new("bye").foo¬†¬†¬†¬†¬†¬†¬†¬† # something like this perhaps

[21:21] <camelia> rakudo-moar 4d78bc6ac: OUTPUT: ¬´bye‚ê§¬ª

[21:29] <discord-raku-bot> <stevied#8273> I can't seem to have $.key in parent and set $!key in submethod BUILD()

[21:29] <discord-raku-bot> <stevied#8273> this is what I've been struggling with

[21:30] <MasterDuke> do you really need BUILD over TWEAK?

[21:31] <discord-raku-bot> <stevied#8273> I got this:

[21:31] <discord-raku-bot> <stevied#8273> ```

[21:31] <discord-raku-bot> <stevied#8273> has $.app1;

[21:31] <discord-raku-bot> <stevied#8273> has $.key;

[21:31] <discord-raku-bot> <stevied#8273> submethod BUILD($app, $key) {

[21:31] <discord-raku-bot> <stevied#8273>     $!app1 = $app;

[21:31] <discord-raku-bot> <stevied#8273>     $!key = $key;

[21:31] <discord-raku-bot> <stevied#8273> }

[21:31] <discord-raku-bot> <stevied#8273> ```

[21:31] <discord-raku-bot> <stevied#8273> trying to use positional arguments

[21:31] <discord-raku-bot> <stevied#8273> never heard of TWEAK. will it make my head explode?

[21:32] <MasterDuke> you generally should try to use TWEAK before BUILD. it was added after the initial release of rakudo, so a lot of the docs don't mention it as much, but it's supposed to make the simpler kinds of things you used to have to use BUILD for easier to do

[21:33] <discord-raku-bot> <stevied#8273> ok, thanks. I see it now in the docs. I'll play around with it

[21:34] <discord-raku-bot> <stevied#8273> i gotta say, OO Moose in Perl was a lot easier than this

[21:35] <MasterDuke> you can't do what i did in my example above?

[21:36] <discord-raku-bot> <stevied#8273> oh, missed that

[21:41] <discord-raku-bot> <stevied#8273> ok, that worked

[21:45] <discord-raku-bot> <stevied#8273> oh wow, now I can do positional constructors

[21:45] <discord-raku-bot> <stevied#8273> nice

[22:25] <discord-raku-bot> <Sub#9075> Hello friends. I'm trying to extract certain strings from a file and I'm not sure if grammars are the right fit for me. Would someone be able to point me in the right direction? Even just a term to search for in the documentation should help, I think. Here's my code.

[22:25] <discord-raku-bot> <Sub#9075> ```

[22:25] <discord-raku-bot> <Sub#9075> use v6;

[22:25] <discord-raku-bot> <Sub#9075> grammar G {

[22:25] <discord-raku-bot> <Sub#9075>     token TOP {

[22:25] <discord-raku-bot> <Sub#9075>         ^

[22:25] <discord-raku-bot> <Sub#9075>         .*?

[22:25] <discord-raku-bot> <Sub#9075>         <expression>+

[22:25] <discord-raku-bot> <Sub#9075>         .*?

[22:25] <discord-raku-bot> <Sub#9075>         $

[22:25] <discord-raku-bot> <Sub#9075>     }

[22:25] <discord-raku-bot> <Sub#9075>     token expression {

[22:25] <discord-raku-bot> <Sub#9075>        \{ \! (\w+) \}

[22:25] <discord-raku-bot> <Sub#9075>     }

[22:27] <discord-raku-bot> <Sub#9075> Hello friends. I'm trying to extract certain strings from a file and I'm not sure if grammars are the right fit for me. Would someone be able to point me in the right direction? Even just a term to search for in the documentation should help, I think. Here's my code.

[22:27] <discord-raku-bot> <Sub#9075> I'm getting that I can perform captures with regex, but I'm wondering if I need to break the file into smaller chunks and try to make matches line by line, or something. It seems like maybe I need to use an action method to further operate on what I extract with the grammar, but I'm not too sure.

[22:27] <discord-raku-bot> <Sub#9075> ```

[22:27] <discord-raku-bot> <Sub#9075> use v6;

[22:27] <discord-raku-bot> <Sub#9075> grammar G {

[22:27] *** discord-raku-bot left
[22:28] *** discord-raku-bot joined
[22:56] <discord-raku-bot> <gfldex#8222> m:```

[22:56] <discord-raku-bot> <gfldex#8222> use v6.*;

[22:56] <discord-raku-bot> <gfldex#8222> sub is-pentagon($c is raw) { (1+sqrt(1+24*$c))%%6 }

[22:56] <discord-raku-bot> <gfldex#8222> sub P($n is raw) { $n*(3*$n-1) div 2 }

[22:56] <discord-raku-bot> <gfldex#8222> my \integers = Channel.new;

[22:56] *** discord-raku-bot left
[22:56] *** discord-raku-bot joined
[22:56] <discord-raku-bot> <gfldex#8222> With that I got it down to 1.671976079s and it even terminates!

[22:58] <discord-raku-bot> <gfldex#8222> This is basically hypering by hand. :)

[23:02] <[Coke]> if you're not specifying a language variant, you can skip the 'use' there.

[23:02] <[Coke]> Nice work.

[23:04] <discord-raku-bot> <gfldex#8222> wow. This is super sensitive to the batch size. With 40 Ints per batch I'm at 1.22098525s.

[23:05] <discord-raku-bot> <gfldex#8222> Note quite. `use v6.e` does include _PREVIEW.

[23:05] <discord-raku-bot> <gfldex#8222> `v6.*` even

[23:06] <[Coke]> Isn't that the same as no use v6 at all?

[23:06] <discord-raku-bot> <gfldex#8222> Also, Channel doesn't throttle. So it may produce way more batches than are needed.

[23:08] <discord-raku-bot> <gfldex#8222> With `$*KERNEL.cpu-cores - 1` it gets a wee bit faster. So the Channel is throttled ... accidentally.

[23:09] <discord-raku-bot> <gfldex#8222> I believe we default to the latest stable.

[23:10] <discord-raku-bot> <gfldex#8222> m: say $*RAKU;

[23:10] <discord-raku-bot> <gfldex#8222> We do.

