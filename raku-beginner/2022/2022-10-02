[00:03] *** jetchisel left
[00:58] <lizmat> ++ to go fro False to True and -- to go from True to False

[02:24] <guifa_> m: sub toggle (Bool $b is rw) { $b = !$b }; my $a = True; toggle $a; say $a;

[02:24] <camelia> rakudo-moar cc7193d0a: OUTPUT: ¬´False‚ê§¬ª

[02:50] *** razetime joined
[03:41] *** razetime left
[04:56] *** razetime joined
[05:10] *** deoac left
[07:02] <discord-raku-bot> <Nemokosch> m: my $a = True; $a ^^= True; say $a;

[07:02] <discord-raku-bot> <Nemokosch> Come on...

[07:11] <discord-raku-bot> <Nemokosch> > Note that the semantics of this operator may not be what you assume: infix ^^ flips to the first true value it finds and then flips to Nil forever after the second, no matter how many more true values there are.

[07:13] <discord-raku-bot> <Nemokosch> b-but... why

[07:15] <discord-raku-bot> <Nemokosch> anyway, I found a workaround for xor...

[07:15] <discord-raku-bot> <Nemokosch> m: my Bool() $a = True; $a +^= True; say $a;

[07:16] <kjp> The boolean exclusive-or operator is ?^, so "$a ?^= True" sdoes what you want.

[07:17] <discord-raku-bot> <Kaiepi> i wasn't aware `^^` existed

[07:17] <discord-raku-bot> <Kaiepi> ...or that

[07:17] <discord-raku-bot> <Kaiepi> i want to like `?&`/`?|` but

[07:17] <discord-raku-bot> <Kaiepi> m:```

[07:17] <discord-raku-bot> <Kaiepi> say 1 && say 2;

[07:17] <discord-raku-bot> <Kaiepi> say 3 ?& say 4;

[07:17] <discord-raku-bot> <Kaiepi> ```

[07:19] <discord-raku-bot> <Kaiepi> hold on a sec

[07:19] <discord-raku-bot> <Kaiepi> oh right i need the shortcircuit

[07:19] <discord-raku-bot> <Kaiepi> m:```

[07:19] <discord-raku-bot> <Kaiepi> say 0 && say 2;

[07:19] <discord-raku-bot> <Kaiepi> say 0 ?& say 4;

[07:19] <discord-raku-bot> <Kaiepi> ```

[07:19] <discord-raku-bot> <Nemokosch> m: my $a = True; $a ?^= True; say $a;

[07:19] <discord-raku-bot> <Nemokosch> kjp: nice, thank you

[07:25] <discord-raku-bot> <Nemokosch> <@210313526928080896> Say always returns True iirc

[07:29] <discord-raku-bot> <Kaiepi> ik that, the point's that `?&` isn't thunking the rhs like `&&` so `0 ?&` evaluates the rhs before shortcircuiting w/ a falsey lhs, unlike `&&`

[07:31] <discord-raku-bot> <Nemokosch> oh right

[07:33] <discord-raku-bot> <Nemokosch> but what is wrong with &&?

[07:33] <discord-raku-bot> <Kaiepi> nothing

[07:33] <discord-raku-bot> <Nemokosch> with ^^, there was something painfully obvious wrong

[07:33] <discord-raku-bot> <Kaiepi> it's `?&` i'm annoyed by

[07:33] <discord-raku-bot> <Nemokosch> okay but I'm trying to say that you don't need that operator badly

[07:34] <discord-raku-bot> <Nemokosch> not even `True ^^ True` and `False ^^ False`yield the same result

[07:35] <discord-raku-bot> <Nemokosch> I found this: https://stackoverflow.com/questions/9688343/why-doesnt-the-bitwise-operator-short-circuit

[07:36] <discord-raku-bot> <Nemokosch> I haven't actually checked but I suspected bitwise operators don't tend to short-circuit

[07:36] <discord-raku-bot> <Nemokosch> let me assume OP is right about that üòÑ

[07:39] <discord-raku-bot> <Nemokosch> Anyway... to be honest, it doesn't hurt if Raku sometimes respects widely accepted conventions...

[07:40] <discord-raku-bot> <Nemokosch> "if it's not broken, don't fix it"

[08:09] *** razetime left
[08:31] *** razetime joined
[09:13] *** frost joined
[10:50] *** frost left
[11:34] *** Wonner joined
[11:35] *** Wonner left
[14:34] *** deoac joined
[14:38] *** jgaz joined
[15:18] *** jgaz left
[16:15] *** jgaz joined
[16:22] *** jgaz left
[17:45] *** razetime left
[19:42] <discord-raku-bot> <Anton Antonov> Does anyone here have a favorite _long_ Raku post at StackOverflow ?

[19:43] <discord-raku-bot> <Anton Antonov> Does anyone here have a favorite and _long_ Raku post at StackOverflow ?

[19:43] <discord-raku-bot> <Anton Antonov> (Needed for testing...)

