[01:59] *** frost joined
[02:53] *** frost left
[02:57] *** frost joined
[03:02] *** m_athias left
[03:02] *** m_athias joined
[03:04] <discord-raku-bot> <stevied#8273> in a regex, what is the equivalent of not matching a new line from perl: `[^\n]+`

[03:11] *** codechurch joined
[03:35] *** frost left
[03:36] *** frost joined
[04:02] *** codechurch left
[05:23] *** frost left
[06:06] *** TempIRCLogger__ left
[06:06] *** qorg11 left
[06:06] *** Manifest0 left
[06:06] *** SmokeMachine left
[06:06] *** CIAvash left
[06:06] *** thowe left
[06:06] *** sivoais left
[06:06] *** mjgardner left
[06:07] *** gfldex left
[06:07] *** anight[m] left
[06:07] *** m_athias left
[06:07] *** Util left
[06:07] *** destroycomputers left
[06:07] *** samebchase left
[06:07] *** lizmat left
[06:07] *** tbrowder left
[06:07] *** codesections left
[06:07] *** discord-raku-bot left
[06:07] *** MasterDuke left
[06:07] *** camelia left
[06:13] *** frost joined
[06:13] *** m_athias joined
[06:13] *** discord-raku-bot joined
[06:13] *** lizmat joined
[06:13] *** TempIRCLogger__ joined
[06:13] *** Util joined
[06:13] *** qorg11 joined
[06:13] *** MasterDuke joined
[06:13] *** Manifest0 joined
[06:13] *** destroycomputers joined
[06:13] *** gfldex joined
[06:13] *** anight[m] joined
[06:13] *** CIAvash joined
[06:13] *** SmokeMachine joined
[06:13] *** tbrowder joined
[06:13] *** samebchase joined
[06:13] *** mjgardner joined
[06:13] *** thowe joined
[06:13] *** sivoais joined
[06:13] *** codesections joined
[06:13] *** camelia joined
[07:21] <discord-raku-bot> <stevied#8273> I'm totally lost with grammars

[07:21] <discord-raku-bot> <stevied#8273> this works:

[07:21] <discord-raku-bot> <stevied#8273> ```

[07:21] <discord-raku-bot> <stevied#8273> grammar G {

[07:21] <discord-raku-bot> <stevied#8273>     token TOP {<blah> k}

[07:21] <discord-raku-bot> <stevied#8273>     token blah { \w\w\w }

[07:21] <discord-raku-bot> <stevied#8273> }

[07:21] <discord-raku-bot> <stevied#8273> my $match = G.parse('duck');

[07:21] <discord-raku-bot> <stevied#8273> say $match;

[07:21] <discord-raku-bot> <stevied#8273> ```

[07:21] <discord-raku-bot> <stevied#8273> this doesn't match:

[07:21] <discord-raku-bot> <stevied#8273> ```

[07:21] <discord-raku-bot> <stevied#8273> grammar G {

[07:21] <discord-raku-bot> <stevied#8273>     token TOP {<blah> k}

[07:21] <discord-raku-bot> <stevied#8273>     token blah { \w+ }

[07:21] <discord-raku-bot> <stevied#8273> }

[07:27] <discord-raku-bot> <Nahita#3882> `\N+` I believe

[07:48] <discord-raku-bot> <stevied#8273> this has got to be a bug. this matches:

[07:48] <discord-raku-bot> <stevied#8273> ```

[07:48] <discord-raku-bot> <stevied#8273> grammar G {

[07:48] <discord-raku-bot> <stevied#8273>     token TOP { 'd' <blah> '/' }

[07:48] <discord-raku-bot> <stevied#8273>     token blah { \w+ }

[07:48] <discord-raku-bot> <stevied#8273> }

[07:48] <discord-raku-bot> <stevied#8273> my $match = G.parse('duc/');

[07:48] <discord-raku-bot> <stevied#8273> say $match;

[07:48] <discord-raku-bot> <stevied#8273> ```

[07:48] <discord-raku-bot> <stevied#8273> this doesn't:

[07:48] <discord-raku-bot> <stevied#8273> ```

[07:48] <discord-raku-bot> <stevied#8273> grammar G {

[07:48] <discord-raku-bot> <stevied#8273>     token TOP { 'd' <blah> 'k' }

[07:48] <discord-raku-bot> <stevied#8273>     token blah { \w+ }

[07:51] <lizmat> the \w+ is probably too greedy

[07:52] <discord-raku-bot> <stevied#8273> ok, sorry, the `/`  is not a `\w` character

[07:52] <discord-raku-bot> <stevied#8273> so that makes sense

[07:52] <discord-raku-bot> <stevied#8273> i tried making it non-greedy

[07:52] <discord-raku-bot> <stevied#8273> didn't work: `\w+?`

[07:53] <lizmat> please, I'm a pretty Raku grammar noob myself  :-)

[07:54] <discord-raku-bot> <stevied#8273> now I don't feel so bad.

[07:54] <lizmat> m: my token blah { \w+? }; say "foo" ~~ / f <blah> o /

[07:54] <camelia> rakudo-moar dab9cd661: OUTPUT: ¬´ÔΩ¢fooÔΩ£‚ê§ blah => ÔΩ¢oÔΩ£‚ê§¬ª

[07:54] <discord-raku-bot> <stevied#8273> maybe you can't do non-greedy in grammars?

[07:54] <lizmat> looks to me you can ?

[07:55] <lizmat> there's also: https://raku.land/github:jnthn/Grammar::Debugger

[07:56] <discord-raku-bot> <stevied#8273> but that's not a grammar, right?

[07:57] <discord-raku-bot> <stevied#8273> m: grammar G { token TOP { 'd' <blah> 'k' } token blah { \w+? } } my $match = G.parse('duck'); say $match;

[07:57] <lizmat> no, but a grammar is just a module of regexen really, with regexen being methods

[07:57] <discord-raku-bot> <stevied#8273> m: grammar G { token TOP { 'd' <blah> 'k' } token blah { \w+? } }; my $match = G.parse('duck'); say $match;

[07:57] <lizmat>  m: grammar G { token TOP { 'd' <blah> 'k' } token blah { \w+? } }; my $match = G.parse('duck'); say $match;

[07:57] <camelia> rakudo-moar dab9cd661: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Strange text after block (missing semicolon or comma?)‚ê§at <tmp>:1‚ê§------> grammar G { token TOP { 'd' <blah> 'k' }‚èè token blah { \w+? } }; my $match = G.pa‚ê§    expecting any of:‚ê§       ‚Ä¶¬ª

[07:57] <lizmat>  m: grammar G { token TOP { 'd' <blah> 'k' }; token blah { \w+? } }; my $match = G.parse('duck'); say $match;

[07:57] <camelia> rakudo-moar dab9cd661: OUTPUT: ¬´(Any)‚ê§¬ª

[07:58] <lizmat> m: my token blah { \w+? }; say "duck" ~~ / d <blah> k /

[07:58] <camelia> rakudo-moar dab9cd661: OUTPUT: ¬´Nil‚ê§¬ª

[07:58] <discord-raku-bot> <stevied#8273> m: grammar G { token TOP { 'd' <blah> 'k' }; token blah { \w+? } }; my $match = G.parse('duck'); say $match;

[07:58] *** frost left
[07:59] <lizmat> hmmm

[08:03] <discord-raku-bot> <stevied#8273> i gotta get to bed. wanted to go out on a good note but getting nowhere on this

[08:04] <lizmat> sorry, hope we'll be a able to provide more clarity in the morn

[08:04] <discord-raku-bot> <stevied#8273> using that debugger

[08:04] <discord-raku-bot> <stevied#8273> with non-greedy, it's just matching the "u" and nothing else

[08:06] <lizmat> m: my regex blah { \w+ }; say "duck" ~~ / d <blah> k /

[08:06] <camelia> rakudo-moar dab9cd661: OUTPUT: ¬´ÔΩ¢duckÔΩ£‚ê§ blah => ÔΩ¢ucÔΩ£‚ê§¬ª

[08:06] <lizmat> it needs to be able to backtrack, that's why it needs to be a regex

[08:06] <lizmat> breakfast&

[08:08] <discord-raku-bot> <stevied#8273> oh the TOP needs to be a regex it looks like

[08:08] <discord-raku-bot> <stevied#8273> I had only tried making the second block a regex

[08:09] <discord-raku-bot> <stevied#8273> actually, they both need to be regexes, not tokens

[08:10] <discord-raku-bot> <stevied#8273> alright, I'll have to sleep on this. I know what backtracking is but don't quite understand how it works across two different regexes like this. weird shit.

[13:55] *** discord-raku-bot left
[13:55] *** discord-raku-bot joined
[13:59] *** discord-raku-bot left
[14:00] *** discord-raku-bot joined
[15:36] *** frost joined
[16:03] *** frost left
[17:41] <discord-raku-bot> <stevied#8273> ok, got this working:

[17:41] <discord-raku-bot> <stevied#8273> ```

[17:41] <discord-raku-bot> <stevied#8273> grammar G {

[17:41] <discord-raku-bot> <stevied#8273>     token TOP {  .*? ( '<' 'a' <-[ > ]>+ '>' <hypertext> '<' '/' 'a' '>' .*? )+ .*  }

[17:41] <discord-raku-bot> <stevied#8273>     token hypertext { <-[ < ]>+ }

[17:41] <discord-raku-bot> <stevied#8273> }

[17:41] <discord-raku-bot> <stevied#8273> my @matches = G.parse('<a href="kjsdf">blah 1</a><a href="/">blah 2</a>');

[17:41] <discord-raku-bot> <stevied#8273> say @matches;

[17:41] <discord-raku-bot> <stevied#8273> ```

[17:41] <discord-raku-bot> <stevied#8273> it works, but I'm gonna say that grammars are not the ideal tool for parsing html, just like with regexes

[17:41] <discord-raku-bot> <stevied#8273> is that the common wisdom?

[18:02] <lizmat> I think it is  :-)

[18:03] <lizmat> especially since HTML can be improperly formed and still sorta render ok in a browser

[18:03] <discord-raku-bot> <stevied#8273> I'm in the middle of posting to reddit about this right now. Let's see what happens.

[18:03] <lizmat> stevied++

[18:04] <discord-raku-bot> <stevied#8273> right. though in my particular situation, I'm parsing an html document created from markdown using a tool. so the html should be well-formed

[18:26] <discord-raku-bot> <stevied#8273> https://www.reddit.com/r/rakulang/comments/sex4qa/any_thoughts_out_there_on_using_grammars_to_parse/

[18:26] <discord-raku-bot> <stevied#8273> don't know who that dude in the picture is üôÇ

[18:37] <m_athias> @stevied#8273 why do you need the .*? in there? it should work just fine without them.

[18:48] <m_athias> if you want to allow whitespace at the beginning <.ws> works. that way lies madness: writing decent rules to figure out what whitespace is relevant is a pain.

[18:55] *** thowe left
[18:55] *** thowe joined
[18:57] <discord-raku-bot> <stevied#8273> @m_athias, I don't know why it's in there. I created it with lots of trial and error. I can play with it some more.

[18:58] <discord-raku-bot> <stevied#8273> are you talking about the one at the beginning or near the end?

[18:59] <discord-raku-bot> <stevied#8273> ok, yup. remove that worked

[19:01] <discord-raku-bot> <stevied#8273> whoa, removing the second one worked, too

[19:01] <discord-raku-bot> <stevied#8273> heh, i clearly don't know what I'm doing

[19:03] <discord-raku-bot> <stevied#8273> actually, i take that back. remove those breaks things. I had change the string getting parsed to remove the text before and after the first and last anchor tags

[19:03] <discord-raku-bot> <stevied#8273> actually, i take that back. removing those .*? breaks things. I had change the string getting parsed to remove the text before and after the first and last anchor tags

[19:03] <discord-raku-bot> <stevied#8273> ah, dammit. I pated in the wrong code to reddit

[19:03] <discord-raku-bot> <stevied#8273> good catch

[19:04] <discord-raku-bot> <stevied#8273> ok, fixed it

[19:05] <discord-raku-bot> <stevied#8273> ah, dammit. I pasted in the wrong code to reddit

[19:59] <discord-raku-bot> <stevied#8273> alright, so what's the best way to parse html, then?

[19:59] <discord-raku-bot> <stevied#8273> I think i'll pose this question to stackoverflow. too many requirements to outline here

[20:08] <discord-raku-bot> <stevied#8273> https://stackoverflow.com/questions/70899694/replacing-youtube-html-links-with-embed-code

