[00:03] *** Kaiepi left
[02:09] *** frost joined
[04:16] *** samebchase joined
[04:29] <Util> deoac: According to https://github.com/rakudo/rakudo/blob/master/src/Perl6/Actions.nqp#L3964 , "Some things can't be done to our vars".

[04:30] <Util> I am not clear on why "type constraint" is one of those things, though.

[04:30] <Util> Could be a necessity of the fundamental language design that I just am not seeing,

[04:30] <Util> or it could just be a limitation of the current implementation (as in "Not Yet Implemented").

[04:30] <Util> Two old issues are mainly about the LTA error: https://github.com/Raku/old-issue-tracker/issues/4677 , https://github.com/Raku/old-issue-tracker/issues/5778

[04:30] <Util> The docs, at https://docs.raku.org/language/variables#The_our_declarator , suggest that `our Int $foo` should work:

[04:30] <Util>     "our variables work just like my variables, except that they also introduce an alias into the symbol table."

[05:35] *** Kaiepi joined
[06:07] *** deoac left
[06:53] <discord-raku-bot> <pelevesque> Anyone know if there is a difference under the hood between these two lines. I see know difference over the hood.

[06:53] <discord-raku-bot> <pelevesque> ```

[06:53] <discord-raku-bot> <pelevesque> my @seq = 1, 2, 4 ... ‚àû;

[06:53] <discord-raku-bot> <pelevesque> my @seq = 1, 2, 4 ... *;

[06:53] <discord-raku-bot> <pelevesque> ```

[06:53] <discord-raku-bot> <pelevesque> Anyone know if there is a difference under the hood between these two lines. I see no difference over the hood.

[06:53] <discord-raku-bot> <pelevesque> ```

[06:53] <discord-raku-bot> <pelevesque> my @seq = 1, 2, 4 ... ‚àû;

[06:53] <discord-raku-bot> <pelevesque> my @seq = 1, 2, 4 ... *;

[06:53] <discord-raku-bot> <pelevesque> ```

[06:53] <discord-raku-bot> <Nemokosch> There is no difference in this case, indeed

[06:54] <discord-raku-bot> <pelevesque> Thanks.

[06:54] <discord-raku-bot> <Nemokosch> * is the so-called whatever star, it depends on the context what it will mean

[06:54] <discord-raku-bot> <Nemokosch> in a sequence or a range, it will mean Inf

[06:55] <discord-raku-bot> <pelevesque> Ah, I see... and here it means to whatever which is the same as infinity.

[06:55] <discord-raku-bot> <pelevesque> Makes sense, thanks.

[06:55] <discord-raku-bot> <Nemokosch> since these sequences are lazy, often it's possible to not think of them as "to infinity" but "to what I demand"

[06:57] <discord-raku-bot> <Nemokosch> m: (a .. z) Z~ (1, 2, 4 ... *) andthen .say;

[06:57] <discord-raku-bot> <Nemokosch> oops, wrong line

[06:57] <discord-raku-bot> <Nemokosch> m: ('a' .. 'z') Z~ (1, 2, 4 ... *) andthen .say

[06:58] <discord-raku-bot> <Nemokosch> so yes, it's actually the same as Inf here but it may look nice in a context like this

[06:59] <discord-raku-bot> <pelevesque> Ah true - I like that - to what I demand idea.

[07:34] <discord-raku-bot> <Nemokosch> do we have something like splice in Javascript?

[07:34] <discord-raku-bot> <Nemokosch> oh we do have splice

[07:57] <discord-raku-bot> <pelevesque> I'm having a problem and not sure how to solve it.

[07:57] <discord-raku-bot> <pelevesque> I have the following code in a module (.rakumod). If I use my module in a raku.main and try test(4) it will fail. I'm realizing it does not like the fact that I use my,

[07:57] <discord-raku-bot> <pelevesque> ```

[07:57] <discord-raku-bot> <pelevesque> my @powers2 = 1, 2, 4 ... 5.7896045e+76; # 2‚Å∞ ‚Üí 2¬≤‚Åµ‚Åµ

[07:57] <discord-raku-bot> <pelevesque> subset Pow2 of UInt where * ~~ any @powers2;

[07:57] <discord-raku-bot> <pelevesque> sub test (Pow2 $n) is export { say $n; }

[07:57] <discord-raku-bot> <pelevesque> ```

[07:57] <discord-raku-bot> <pelevesque> If I do this, I have no problem:

[07:57] <discord-raku-bot> <pelevesque> ```

[07:57] <discord-raku-bot> <pelevesque> subset Pow2 of UInt where * ~~ any 1, 2, 4 ... 5.7896045e+76;

[07:57] <discord-raku-bot> <pelevesque> sub test (Pow2 $n) is export { say $n; }

[07:57] <discord-raku-bot> <pelevesque> ```

[07:57] <discord-raku-bot> <pelevesque> I can use our instead, but then @powers2 becomes available in my raku.main

[08:04] <discord-raku-bot> <Nemokosch> I wonder if you can export anything with internal variables in it

[08:05] <discord-raku-bot> <Nemokosch> I'm not a module guru but I have the impression that exporting a function that has variables only accessible in the exporting module, would require some sort of "module-level closure" to work

[08:06] <discord-raku-bot> <Nahita> `my constant` instead of `my`?

[08:06] <discord-raku-bot> <Nemokosch> but then I'm thinking: if modules are a unit of compilation, that shouldn't be a problem, right?

[08:06] <discord-raku-bot> <pelevesque> Nahita, I'm going to try.

[08:06] <discord-raku-bot> <Nahita> makes it compile time thing right

[08:08] <discord-raku-bot> <pelevesque> Nahita, it worked.

[08:08] <discord-raku-bot> <pelevesque> Thanks!

[08:08] <discord-raku-bot> <Nahita> oh, glad

[08:18] <discord-raku-bot> <Nahita> idk why it didn't work without it though

[08:18] <discord-raku-bot> <Nahita> btw, you can do `2 ¬´**¬´ ^256` for @powers2 but maybe you already know that

[08:19] <discord-raku-bot> <pelevesque> I did not know that.

[08:20] <discord-raku-bot> <Nemokosch> _hyper hyper_

[08:20] <discord-raku-bot> <Nahita> hyped here: https://docs.raku.org/language/operators#Hyper_operators

[08:21] <discord-raku-bot> <Nahita> it's a good way to say good bye to `.map` in cases i think

[08:22] <discord-raku-bot> <Nemokosch> but don't forget that the hyper meta-operator is not lazy

[08:22] <discord-raku-bot> <pelevesque> I know nothing... I have everything to learn... so thanks!

[08:23] <discord-raku-bot> <Nemokosch> I think this is hard to get right at first, even though it can really look clever at times

[08:23] <discord-raku-bot> <pelevesque> Raku feels really nice to learn.

[08:23] <discord-raku-bot> <pelevesque> and use!

[08:24] <discord-raku-bot> <Nemokosch> This is a phase üòÖ

[08:24] <discord-raku-bot> <Nemokosch> something to talk about in my presentation at the raku conference üòõ

[08:24] <discord-raku-bot> <pelevesque> Coming from JS, it feels like someone gave me a Samurai sword instead of a butter knife.

[08:25] <discord-raku-bot> <Nemokosch> And I'd say JS isn't even bad

[08:26] <discord-raku-bot> <pelevesque> not bad at all... I love that language too... but Raku makes some things much easier.

[08:26] <discord-raku-bot> <Nemokosch> But yes, Raku is still bigger... some argued that it's bigger than C++

[08:26] <discord-raku-bot> <pelevesque> and the gradual typing is amazing.

[08:26] <discord-raku-bot> <Nemokosch> The gradual typing will bite you sooner or later

[08:26] <discord-raku-bot> <Nemokosch> this is not a wish, just experience...

[08:26] <discord-raku-bot> <Nemokosch> there are still serious issues with it, simply put

[08:27] <discord-raku-bot> <Nemokosch> khm, khm, trying to pass an array literal as a typed array

[08:28] <discord-raku-bot> <Nemokosch> well, typed arrays in general

[08:28] <discord-raku-bot> <Nemokosch> that's yucky stuff

[08:30] <discord-raku-bot> <Nemokosch> still, a lot of things can be done by clever coercions

[08:30] <discord-raku-bot> <Nemokosch> the design of Raku leans towards "operator implies type" instead of "operator implies some abstract operation"

[08:30] <discord-raku-bot> <Nemokosch> if you have the + sign, that will be numeric addition and that's that

[08:31] <discord-raku-bot> <pelevesque> I'm gonna try to wrap my head around that!

[08:31] <discord-raku-bot> <pelevesque> Are you in asia? Or are you up super late like me?

[08:31] <discord-raku-bot> <Nemokosch> you can of course overload it but why would you when you can just _invent new operators if need be_

[08:31] <discord-raku-bot> <Nemokosch> negative, Europe

[08:32] <discord-raku-bot> <pelevesque> I invented 2 operators for the module I am working on.

[08:32] <discord-raku-bot> <pelevesque> What kind of things are you building with raku?

[08:33] <discord-raku-bot> <Nemokosch> I'm mainly just scripting around. I don't like shell.

[08:34] <discord-raku-bot> <pelevesque> nice

[08:34] <discord-raku-bot> <Nemokosch> automation stuff ü§ñ

[08:34] <discord-raku-bot> <Nemokosch> my biggest "flex" is that I have used an HTTP client already xD

[08:35] <discord-raku-bot> <pelevesque> How long have you been a Rakoon?

[08:36] <discord-raku-bot> <Nemokosch> roughly a year

[08:36] <discord-raku-bot> <Nemokosch> so yes... I thought last time I only watched the conference, this time I will participate

[08:36] <discord-raku-bot> <Nemokosch> draw the conclusions of this year

[08:37] <discord-raku-bot> <Nemokosch> trynna give something back, feedback at least

[08:37] <discord-raku-bot> <pelevesque> I'm watching a Ruth Halloway talk and she said something inspiring... I quote - "Do it, release the code... let the code out"

[08:39] <discord-raku-bot> <pelevesque> Did you come from Perl or straight into Raku?

[08:39] <discord-raku-bot> <Nemokosch> I started with Raku

[08:39] <discord-raku-bot> <Nemokosch> Sometimes I check Perl stuff but I'm not actively using it for anything longer than 5 lines

[08:39] <discord-raku-bot> <pelevesque> I never did Perl. Coming from JS. I'd probably just get confused if I did Perl after learning a bit of Raku.

[08:43] <discord-raku-bot> <pelevesque> My sleeping hours became messed up because of Raku.

[08:43] <discord-raku-bot> <pelevesque> It's hard to stop coding since it's so much fun.

[08:43] <discord-raku-bot> <Nemokosch> üòÇ

[08:43] <discord-raku-bot> <Nemokosch> have you tried the weekly challenge?

[08:44] <discord-raku-bot> <pelevesque> No. I have specific projects keeping me busy. But, I should at one point.

[08:45] <discord-raku-bot> <pelevesque> I bought some books and learned a lot from those, and have a kind of mentor that is good in Raku who helps me too... and you and Nahita!

[08:47] <discord-raku-bot> <Nemokosch> the weekly challenge is usually something that you can solve with < 10 lines of code, often something arithmetics related

[08:47] <discord-raku-bot> <Nemokosch> and I agree - the availability and enthusiasm is a strong point of the community

[08:50] <discord-raku-bot> <Nemokosch> also, something that shouldn't be overlooked: the language itself is developed in a transparent and comprehensible manner

[08:51] <discord-raku-bot> <Nemokosch> if you know the essentials of Raku, you have a chance to understand the internals, since it's NQP all around

[08:51] <discord-raku-bot> <Nemokosch> and NQP is a subset of Raku

[08:51] <discord-raku-bot> <pelevesque> Ya, that is super cool actually.

[08:51] <discord-raku-bot> <pelevesque> Maybe one day I'll get there and can contribute,

[08:52] <discord-raku-bot> <Nemokosch> Same üòÑ

[08:53] <discord-raku-bot> <Nemokosch> The tough nut to crack is still performance...

[08:54] <discord-raku-bot> <pelevesque> ya - I keep reading that.

[08:57] <discord-raku-bot> <Nemokosch> And this is not something to overlook if you need a lot of calculations quickly put together. Of course you could just trust C with the computations and invoke it from a dynamic library but yes, it would be important to catch up to the potential competitors like Python

[08:58] <discord-raku-bot> <pelevesque> I looked at Rakudo's commit history, and there only seems to be a few people working on it.

[08:59] <discord-raku-bot> <Nemokosch> It's like you can get to know them one by one

[09:00] <discord-raku-bot> <Nemokosch> Again, lizmat, vrurg and jhnthn will surely hold presentations on the conference

[09:00] <lizmat> https://conf.raku.org/2022/talks

[09:10] <discord-raku-bot> <Nemokosch> what does snip do, exactly?

[09:21] <lizmat> m: use v6.*; dd (^10).snip(* < 5, * < 8)

[09:21] <camelia> rakudo-moar 36b0a635f: OUTPUT: ¬´((0, 1, 2, 3, 4), (5, 6, 7), (8, 9)).Seq‚ê§¬ª

[09:22] <lizmat> it cuts up an Iterable into lists depending on given condition

[09:22] <lizmat> (s)

[09:24] <discord-raku-bot> <Nemokosch> can it be used in a way that only takes some middle part of a sequence?

[09:29] <lizmat> no, but there's a PR for that: https://github.com/rakudo/rakudo/pull/5008

[09:29] <lizmat> say (^20).skip(0,5,3);       # (5 6 7)

[09:32] <discord-raku-bot> <Nemokosch> that operates on "indices", though, not predicates

[09:32] <discord-raku-bot> <Nemokosch> I know there is toggle but honestly, it's a really cumbersome state machine that often doesn't give the right value around the boundaries because of that

[09:33] <discord-raku-bot> <pelevesque> When is 6.e due? Is there a release schedule... or it's whenever things are ready?

[09:35] <discord-raku-bot> <Nemokosch> ~~is there a release schedule for Perl6~~

[09:39] <lizmat> 6.e will be released after RakuAST has been merged

[09:39] <lizmat> that's about the schedule that we have

[09:41] <discord-raku-bot> <Nemokosch> How many tests pass for RakuAST? üôÇ

[09:41] <discord-raku-bot> <Nemokosch> and especially what percentage

[09:41] <lizmat> I think it was just below 50% last time I checked

[09:42] <lizmat> but that's fully passing files

[09:53] <discord-raku-bot> <pelevesque> Is there a way to create a symbol in raku. 

[09:53] <discord-raku-bot> <pelevesque> I want to write a note name like G#4 without any quotes or anything of possible and when I write that it is the same as if I had written the associated MIDI note number. Possible?

[09:57] <discord-raku-bot> <Nemokosch> the hash is not a good idea

[09:58] <lizmat> # is a character that is not acceptable in an identifier, so alas, no

[09:59] <lizmat> you *could* probably create the symbol, but then you wouldn't be able to use it

[09:59] <discord-raku-bot> <Nemokosch> there is the musical sharp sign though

[09:59] <discord-raku-bot> <Nemokosch> also not allowed in identifiers but could be used as a very tight operator

[10:00] <discord-raku-bot> <Nemokosch> and that sounds like a meaningful way to go about it imo

[10:00] <discord-raku-bot> <Nemokosch> ‚ôØ as a tight infix operator that eats musical note enums and octave numbers

[10:01] <discord-raku-bot> <Nemokosch> but then the same approach wouldn't work for flat

[10:02] <discord-raku-bot> <Nemokosch> wait I messed up the terminology

[10:02] <lizmat> I guess you would have to export C D E F G A B as enums

[10:02] <discord-raku-bot> <Nemokosch> it wouldn't work for the normal key, whatever the name is

[10:02] <discord-raku-bot> <Nemokosch> G4

[10:03] <lizmat> .oO( export them all as enums :-)

[10:03] <lizmat> that could work

[10:04] <discord-raku-bot> <Nemokosch> that would "work" but it would be pretty weird, right? having G4 as one thing on its own and G‚ôØ4 as G and 4 composed üôÇ

[10:05] <lizmat> the ‚ôØ infix op could just be a hash lookup really

[10:05] <discord-raku-bot> <Nemokosch> but then how to do G4

[10:06] <discord-raku-bot> <Nemokosch> other idea: flat and sharp as tight postfix, that's semantically more correct

[10:06] <lizmat> would be an enum

[10:06] <discord-raku-bot> <Nemokosch> and the letters would be functions

[10:06] <lizmat> that could work oot

[10:06] <lizmat> too

[10:06] <discord-raku-bot> <Nemokosch> so G 4 would be a function call üòÑ

[10:07] <discord-raku-bot> <Nemokosch> and G‚ôØ 4 a different function call

[10:07] <discord-raku-bot> <Nemokosch> but then of course you'd need to pay attention to the precedence still

[10:08] <discord-raku-bot> <Nemokosch> eventually, it will always have to be something compound, apart from G4, B6 stuff

[12:26] *** Kaiepi left
[12:31] *** frost left
[13:41] *** Kaiepi joined
[15:13] *** Kaiepi left
[15:13] *** Kaiepi joined
[17:00] <discord-raku-bot> <pelevesque> Thanks, you both gave me a lot to think about!

[17:14] *** MasterDuke left
[18:59] *** Kaipei joined
[19:02] *** Kaiepi left
[20:18] <discord-raku-bot> <pelevesque> Is there a default .gitignore recommended for Raku projects?

[20:18] <discord-raku-bot> <pelevesque> I see that it created lib/.precomp/* so I should probably ignore that.

[20:25] <SmokeMachine> pelevesque: probably not the best way‚Ä¶ but a way‚Ä¶ https://glot.io/snippets/gcbpxggou0

[20:51] <SmokeMachine> Another way: https://glot.io/snippets/gcbql1t0vf

[20:57] <discord-raku-bot> <pelevesque> OMG SmokeMachine... that is gold!

[20:58] <SmokeMachine> I think I prefer the 2nd way‚Ä¶

[20:59] <discord-raku-bot> <pelevesque> Me too... I think... Thanks a bunch!

[21:31] *** Kaiepi joined
[21:33] *** Kaipei left
