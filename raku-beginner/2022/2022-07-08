[00:57] *** frost joined
[01:42] *** deadmarshal left
[02:13] *** deadmarshal joined
[09:01] *** jaguart joined
[09:13] *** Kaiepi joined
[10:02] *** frost left
[10:12] *** frost joined
[10:26] *** frost left
[10:36] *** frost joined
[11:53] *** alethkit joined
[12:10] *** frost left
[12:24] <jaguart> What is REA in the context of Zef?

[12:25] <discord-raku-bot> <stevied> i don't know offhand

[12:26] <lizmat> the Raku Ecosystem Archive

[12:27] <lizmat> it's where (almost) all distributions of the raku ecosystem live

[12:27] <jaguart> Thank you :) - I'd just found https://github.com/Raku/REA

[12:27] <lizmat> it's Raku's equivalent of BackPan, but integrated into zef

[12:31] <jaguart> So REA is an Archive - not a repository where folks would publish modules?

[12:31] <lizmat> indeed

[12:32] <lizmat> you only need to publish a module in any of the other backends: git / cpan / zef

[12:32] <lizmat> and it will be automatically added to the REA

[12:32] <jaguart> So I guess that fez is the repository, and REA grabs from there (and other ecosystems)?

[12:33] <jaguart> thanks :)

[12:36] <lizmat> jaguart: yes

[12:44] <jaguart> Looking for recommends of a Raku package on github to use as an example of current style 

[12:45] <jaguart> e.g. things like https://github.com/Raku/Pod-To-HTML

[12:47] <lizmat> jaguart: what parts of style are you looking for?  documentation / readme / code ?

[12:48] <jaguart> More the documentation / readme - I have a module I'd like to contribute and want to lint it a bit

[12:48] <lizmat> personally, I use App::Mi6 for my modules, which creates the README from the pod for me

[12:49] <jaguart> Great thanks - I'll have a dig

[12:50] <jaguart> Coming from the private-garden world, I kind of miss having a decent code-doc site where I can browse

[12:51] <lizmat> you know of raku.land ?

[12:51] <lizmat> https://raku.land 

[12:52] <jaguart> Oh fantastic - I do now :)

[13:00] <jaguart> Are there any other tools like App::Mi6 that you recommend?

[13:00] <jaguart> ie other tools you find useful in day to day development

[13:01] <lizmat> well, there's of course Comma  https://commaide.com

[13:01] <lizmat> i'm hooked on vim  :-)

[13:01] <lizmat> (still)

[13:02] <jaguart> Yeah - I have my fav editor too, and desktop-edit but server-run. Have installed and played with it, but so far not enough to make me move

[15:44] *** avuserow joined
[18:54] <discord-raku-bot> <Anton Antonov> I have a large collection of large Mix objects. Currently, the Mix objects have string keys. If I use integer keys instead should I expect faster Mix merges and / or reduction and / or "typical" infix operations?

[18:59] <lizmat> no

[19:00] <lizmat> at the moment, if you want faster Mixes, than plain hashes should be used

[19:00] <lizmat> Mixes (currently) always have the overhead of needing to create the .WHICH

[19:01] <lizmat> basically, a Mix is a hash with the .WHICH of the key as the actual key, and a Pair with the key and the value as its value

[19:01] <lizmat> Anton Antonov ^^

[19:11] <discord-raku-bot> <Anton Antonov> @lizmat Ok, good to know. My whole recommender design was centered around Mix properties...

[19:22] <lizmat> fwiw, I have considered special casing Str key cases, and possibly int key cases, but that would basically be two complete new classes internally

[19:33] <discord-raku-bot> <Anton Antonov> I see..

[19:58] <discord-raku-bot> <grenzo> Hello,

[19:58] <discord-raku-bot> <grenzo> I have a question on publishing a package. I'm still getting acquainted with Raku so I started by writing 3 small scripts. csv2json, json2csv (fast but slurps the sourcefile), and jsonStream2csv (should take any size).

[19:58] <discord-raku-bot> <grenzo> I'd like to package these up in case anyone might find them useful. How should I structure the package so that when installed, the scripts are put somewhere accessible (assuming this is possible)?

[20:00] <discord-raku-bot> <grenzo> (Provides no new modules)

[20:03] <SmokeMachine> grenzo: maybe this helps: https://docs.raku.org/language/modules

[20:06] <discord-raku-bot> <grenzo> SmokeMachine: Thanks, I thought I had read that, but I seemed to have missed the section on executables.

[20:07] <discord-raku-bot> <grenzo> I see it now

[20:51] <discord-raku-bot> <stevied> ```

[20:51] <discord-raku-bot> <stevied> my $blah = 'baz';

[20:51] <discord-raku-bot> <stevied> enum Foo <bar baz>;

[20:51] <discord-raku-bot> <stevied> say ($blah ~~ Foo);

[20:51] <discord-raku-bot> <stevied> ```

[20:51] <discord-raku-bot> <stevied> what does that return false and what do I need to do to get it to return true?

[20:56] <discord-raku-bot> <Nemokosch> Well, why would that be true...

[20:56] <discord-raku-bot> <stevied> dunno, trying to figure out enums. I don't seem to get them

[20:56] <discord-raku-bot> <Nemokosch> What about Foo{$blah}?

[20:58] <discord-raku-bot> <stevied> error: Autovivifying object closures not yet implemented. Sorry.

[21:00] <discord-raku-bot> <Nemokosch> Wtf

[21:02] <discord-raku-bot> <Nemokosch> That's less than awesome, damnit

[21:02] <discord-raku-bot> <stevied> all I want to do is see if a string is in an enum

[21:02] <discord-raku-bot> <stevied> i guess I could just use an old-fashioned hash and check for key, but would like to learn about enums

[21:05] <discord-raku-bot> <Nemokosch> $blah ~~ Foo()

[21:05] <discord-raku-bot> <Nemokosch> works apparently

[21:05] *** jaguart left
[21:06] <discord-raku-bot> <Nemokosch> Nevermind

[21:06] <discord-raku-bot> <Nemokosch> Perma true

[21:06] <discord-raku-bot> <Nemokosch> For whatever reason

[21:09] <discord-raku-bot> <Nemokosch> Anyway, the output of Foo{$blah} is horrid

[21:10] <discord-raku-bot> <Nemokosch> I'd definitely make an issue for it if I were at home

[21:10] <discord-raku-bot> <stevied> ok

[21:10] <discord-raku-bot> <stevied> figure it out: ` Foo::{$blah};`

[21:10] <discord-raku-bot> <stevied> figured it out: ` Foo::{$blah};`

[23:14] *** Kaipei joined
[23:17] *** Kaiepi left
[23:50] *** discord-raku-bot left
[23:51] *** discord-raku-bot joined
