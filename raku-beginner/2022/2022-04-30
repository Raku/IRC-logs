[00:39] *** Disco-Frog joined
[00:54] *** Disco-Frog left
[02:43] *** Oshawott left
[03:18] *** Guest35 left
[03:48] *** Guest41 joined
[04:07] <Guest41> Is there a way to run Prove6 in "watch mode" easily? Like an interactive test runner. I might have to build something that watches for file changes, or something to run on save.

[04:23] *** Guest41 left
[05:17] *** razetime joined
[05:19] *** razetime left
[05:19] *** razetime joined
[06:13] *** archenoth joined
[06:14] *** frost joined
[07:18] *** razetime left
[07:56] <lizmat> Guest41: https://docs.raku.org/routine/watch

[11:47] *** razetime joined
[11:49] <discord-raku-bot> <piotrklibert#0328> Guest41: it's very easy to do thanks to a few features of Raku. It was one of the first things I wrote with it: https://github.com/piotrklibert/relearn/blob/master/raku/watch.raku#L45-L51

[11:49] <discord-raku-bot> <piotrklibert#0328> Guest41: it's very easy to do thanks to a few features of Raku. It was one of the first things I wrote with it: https://github.com/piotrklibert/relearn/blob/master/raku/watch.raku#L45-L51

[11:52] <discord-raku-bot> <piotrklibert#0328> Oh, by the way, on topic of files. Why the heck `IO::Path.absolute` returns a string?

[11:54] <lizmat> because that's considered more low level, and is usually used by routines that are closer to the metal

[11:55] <lizmat> also: an absolute path doesn't need any knowledge about current working directory or OS dependent details such as / vs \

[12:12] <discord-raku-bot> <piotrklibert#0328> Hmm, ok, that brings me to lots of questions about Raku's object model, but I'll leave that for later ðŸ™‚

[12:13] <discord-raku-bot> <piotrklibert#0328> On another note, do we have an Emacs user here?

[12:13] <lizmat> not /me

[12:14] <discord-raku-bot> <piotrklibert#0328> I'd be happy to know if they succeeded in setting up "go to definition" for Raku.

[12:14] <lizmat> fully Stockholm syndromed to vi  :-)

[12:15] <discord-raku-bot> <piotrklibert#0328> (might be hard to be 100% correct, but getting at least the more obvious cases would be nice)

[12:15] <discord-raku-bot> <piotrklibert#0328> Ah. My respect. I remember going through Vim withdrawal after switching to Emacs.

[12:21] <discord-raku-bot> <piotrklibert#0328> (I had to. Support for Lisps, and particularly Common Lisp, in Vim was simply nowhere near that of Emacs, so when I started learning CL seriously ~2012 I had to make a switch, after 5 years with Vim. Adopting Emacs was hard, but leaving Vim - much more so :))

[12:23] *** razetime left
[13:39] *** discord-raku-bot left
[13:40] *** discord-raku-bot joined
[13:42] <discord-raku-bot> <Nemokosch#9980> I can even imagine that Emacs is better overall but things went in a way that only diehard CS nerds (old mathematicians in particular) use Emacs ðŸ˜›

[13:42] <discord-raku-bot> <Nemokosch#9980> the counter culture

[14:15] *** frost left
[14:18] *** Guest35 joined
[14:27] <discord-raku-bot> <piotrklibert#0328> Well, there are some advantages to using Emacs, but they tend to matter mostly to die-hard nerds. Who else would need support for syntax highlighting, indentation, and auto-completion for languages that don't even make the top 50 on TIOBE?

[16:04] <CIAvash> I think the best thing we have so far for Emacs' "go to definition" is using ctags. `ctags --language-force=perl6 -e **/*.rakumod`, something like that, but that only finds functions and methods. Another option is improving ctags or adding support for Raku to the `dumb-jump` package. Or wait for a language server for Raku.

[16:17] <discord-raku-bot> <piotrklibert#0328> > adding support for Raku to the dumb-jump package

[16:17] <discord-raku-bot> <piotrklibert#0328> Might be worth an effort, I use the package anyway.

[16:17] <discord-raku-bot> <piotrklibert#0328> > Or wait for a language server for Raku.

[16:17] <discord-raku-bot> <piotrklibert#0328> I think I've seen some blog post referencing LSP implementation for Raku, it would be really helpful if completed. Is it being developed as part of Rakudo, or something separate?

[16:39] <discord-raku-bot> <Morfent#9811> such a project would involve rakuast sooner or later i'd imagine

[18:29] *** n1to joined
[23:10] *** n1to left
[23:43] <discord-raku-bot> <Nemokosch#9980> only asking this because it's Raku of all languages...

[23:43] <discord-raku-bot> <Nemokosch#9980> is there something like a multidimensional search?

