[00:14] *** Heptite left
[00:53] *** Manifest0 left
[01:37] *** QhpAptyj9hj0RQwM left
[03:29] *** razetime joined
[03:42] *** Guest47 joined
[04:22] *** Kaipei left
[04:32] *** razetime left
[05:22] *** razetime joined
[06:35] *** razetime left
[07:38] *** Kaipei joined
[10:51] *** QhpAptyj9hj0RQwM joined
[10:55] *** QhpAptyj9hj0RQwM left
[10:56] *** QhpAptyj9hj0RQwM joined
[12:10] *** subben-troska joined
[12:12] <subben-troska> hello I have an issue trying to convert a json line into an hash...

[12:12] <subben-troska> # { id: 152, name: 'KochstraÃŸe', type: 'PT', description: 'station', entries: 3 },

[12:12] <subben-troska> for stations.lines -> $station {

[12:12] <subben-troska> Â  if "id: 3" ~~ m:g/$<key>=\w+':'\s*$<value>=\d+/ {

[12:12] <subben-troska> Â  Â  my %h = $/.hash;

[12:12] <subben-troska> Â  }

[12:12] <subben-troska> }

[12:14] <subben-troska> sub stationer {

[12:14] <subben-troska> Â  Â  return return q:to/END/;

[12:14] <subben-troska> Â  { id: 1, name: 'xxxxÃ¶Ã¶', type: 'TB1', description: 'surface', entries: 10 },

[12:14] <subben-troska> Â  { id: 2, name: 'yyyyÃ¥Ã¥', type: 'TB3', description: 'semi-surface', entries: 10 },

[12:14] <subben-troska> ...

[12:15] <subben-troska> I can't make the global matching in conjunction with hash to work

[12:18] <subben-troska> I would like to access like "%h{'name'}", however I can't make it to work..

[12:18] <discord-raku-bot> <Nemokosch> isn't it a better idea to use a proper library for that?

[12:19] <subben-troska> my original regex: /(\w+)\:\s*\'?(<[\w\s\-]>+)\'?/

[12:19] <subben-troska> well.. in java it would be very easy :)

[12:19] <subben-troska> just using find() on matcher

[12:20] <subben-troska> I thought it used to be easy in perl5

[12:20] <subben-troska> which I stopped using in 2015

[12:20] <discord-raku-bot> <Nemokosch> I'm not terribly fond of Java regex API but anyways, if there is a better choice, why suffer?

[12:21] <subben-troska> suffer is living;-) Â .. aaahhh it shouldn't be hard

[12:22] <subben-troska> its just a consecutive matcher of pairs to turn into a hash

[12:22] <discord-raku-bot> <Nemokosch> perhaps it's not hard but please... if that's the only argument against using JSON::Fast...

[12:22] <subben-troska> ok! I give up! I will go for your suggestion :)

[12:22] <subben-troska> I just saw it some 30 mins ago

[12:23] <lizmat> use JSON::Fast; for station.lines { my %h := from-json($_) }

[12:24] <subben-troska> Just to mention the format wasn't json from the beginning but the data is meant to be inserted in a TS mock application

[12:26] <subben-troska> thanks both of you discord-raku-bot (bot?) and lizmat!! you are my heroes (shouldn't waste too much Christmas-time with Raku-suffering)

[12:27] <discord-raku-bot> <Nemokosch> by the way, I did start up a REPL to check what it returns

[12:27] <lizmat> subben-troska: there's benefit in trying to do stuff yourself from scratch

[12:27] <subben-troska> great :)

[12:27] <discord-raku-bot> <Nemokosch> perhaps m:g always returns a List of matches?

[12:27] <lizmat> but the JSON "standard" has all sorts of nooks and crannies, you seriously don't want to get into

[12:28] <discord-raku-bot> <Nemokosch> and turning a one-element List into a Map... won't work out well

[12:28] <lizmat> having spent quite some time on optimising JSON::Fast, I think I'm qualified to say that  :-)

[12:29] <discord-raku-bot> <Nemokosch> so if you wanted to m:g on all the lines, then you were pretty close probably

[12:29] <subben-troska> nah... I used to be a perl5-geek digging deep.. now I am like a blank paper

[12:29] <subben-troska> ok?

[12:29] <subben-troska> close

[12:29] <discord-raku-bot> <Nemokosch> it's just what you get is a list of matches, not a big match of lists

[12:30] <subben-troska> uhu? list of matches

[12:31] <discord-raku-bot> <Nemokosch> so you could call .hash on individual elements of that list, e.g with map or if you really feel like some cool APL folk, with the hyper meta-operator

[12:31] <subben-troska> REPL.. is it regex perl or regex Raku.. I am always using rubular (by default)

[12:32] <discord-raku-bot> <Nemokosch> what is rubular? ðŸ¤£

[12:32] <discord-raku-bot> <Nemokosch> sounds like some old east-german truck

[12:33] <subben-troska> well working at E/// back then in a test team we used that to check regex'es (while it doest work out for raku)

[12:34] <subben-troska> https://rubular.com

[12:34] <subben-troska> it's ruby?

[12:35] <discord-raku-bot> <Nemokosch> seems like it is. Yet another language that is slightly getting nostalgic.

[12:35] <subben-troska> "hyper-meta-operator"?

[12:35] <discord-raku-bot> <Nemokosch> hyper is the name, if anything

[12:36] <subben-troska> well my only tools at the moment is "comma-ct", is there a test regex-online (..well offline) for Raku?

[12:37] <discord-raku-bot> <Nemokosch> I never tried this with a heredoc so wish me luck...

[12:37] <discord-raku-bot> <Nemokosch> m: q:to/END/ ~~  m:g/$<key>=\w+':'\s*$<value>=\d+/;

[12:37] <discord-raku-bot> <Nemokosch>   { id: 1, name: 'xxxxÃ¶Ã¶', type: 'TB1', description: 'surface', entries: 10 },

[12:37] <discord-raku-bot> <Nemokosch>   { id: 2, name: 'yyyyÃ¥Ã¥', type: 'TB3', description: 'semi-surface', entries: 10 },

[12:37] <discord-raku-bot> <Nemokosch>   { id: 3, name: 'tire', type: 'TB1', description: 'non-surface', entries: 2 },

[12:37] <discord-raku-bot> <Nemokosch> END

[12:37] <discord-raku-bot> <Nemokosch> dd $/>>.hash;

[12:38] <discord-raku-bot> <Nemokosch> well, I did get a huge output ðŸ˜„

[12:38] <discord-raku-bot> <Nemokosch> perhaps dd was a bit overkill

[12:38] <discord-raku-bot> <Nemokosch> m: q:to/END/ ~~  m:g/$<key>=\w+':'\s*$<value>=\d+/;

[12:38] <discord-raku-bot> <Nemokosch>   { id: 1, name: 'xxxxÃ¶Ã¶', type: 'TB1', description: 'surface', entries: 10 },

[12:38] <discord-raku-bot> <Nemokosch>   { id: 2, name: 'yyyyÃ¥Ã¥', type: 'TB3', description: 'semi-surface', entries: 10 },

[12:38] <discord-raku-bot> <Nemokosch>   { id: 3, name: 'tire', type: 'TB1', description: 'non-surface', entries: 2 },

[12:38] <discord-raku-bot> <Nemokosch> END

[12:38] <discord-raku-bot> <Nemokosch> say $/>>.hash;

[12:38] <discord-raku-bot> <Nemokosch> yeah, this is enough

[12:39] <discord-raku-bot> <Nemokosch> I don't think the bot output gets posted on IRC but you can run the same thing, there is an evalbot on that end as well

[12:39] <subben-troska> oki :)

[12:44] <subben-troska> ..yeah.. ?! .. implementing .. (still slow with the MBP)

[12:50] <subben-troska> ok, so the problem is that the global matcher creates ONE hash for EACH PAIR instead of ONE hash for EACH SET of pairs?

[12:50] <subben-troska> (Map.new((key => ï½¢idï½£, value => ï½¢1ï½£)) Map.new((key => ï½¢entiresï½£, value => ï½¢10ï½£)))

[12:50] <subben-troska> (Map.new((key => ï½¢idï½£, value => ï½¢2ï½£)) Map.new((key => ï½¢entiresï½£, value => ï½¢10ï½£)))

[12:50] <subben-troska> (Map.new((key => ï½¢idï½£, value => ï½¢3ï½£)) Map.new((key => ï½¢entiresï½£, value => ï½¢6ï½£)))

[12:50] <subben-troska> (Map.new((key => ï½¢idï½£, value => ï½¢4ï½£)) Map.new((key => ï½¢entiresï½£, value => ï½¢14ï½£)))

[12:52] <discord-raku-bot> <Nemokosch> what is MBP again?

[12:53] <discord-raku-bot> <Nemokosch> I don't know, I don't see any problems ðŸ™‚

[12:53] <subben-troska> MacBook I am a pc/linux guy

[12:53] <subben-troska> from the very start

[12:54] <subben-troska> Â  Â if $station ~~ m:g/$<key>=\w+':'\s*$<value>=\d+/ {

[12:54] <subben-troska> Â  say $/>>.hash;

[12:54] <subben-troska> Â  my %h = $/>>.hash;

[12:54] <subben-troska> Â  say %h{'id'}

[12:54] <discord-raku-bot> <Nemokosch> haha, don't get me started on Apple

[12:54] <subben-troska> ???

[12:55] <subben-troska> but the BATTERY life , the BEAUTIFUL screen .. its the perfect laptop, but my greedy company just let me off with a 14" :(

[12:56] <subben-troska> I haven't dusted off my hash'ing skills.. but the %h yields 'Any' for 'id'

[12:56] <subben-troska> (Map.new((key => ï½¢idï½£, value => ï½¢135ï½£)) Map.new((key => ï½¢gateCountï½£, value => ï½¢5ï½£)))

[12:56] <subben-troska> (Any)

[12:56] *** QhpAptyj9hj0RQwM left
[12:56] <discord-raku-bot> <Nemokosch> I mean, the field name is "key", you yourself chose that

[12:57] <discord-raku-bot> <Nemokosch> and it's still not a Map but a List of Maps

[12:57] <subben-troska> oohhhh?!..oh 'key'.. well. aha .. key/value - right named capture

[12:57] <subben-troska> right got you it's a list of single entry maps

[12:58] <subben-troska> pity..

[12:58] <discord-raku-bot> <Nemokosch> >   my %h = $/>>.hash;

[12:58] <discord-raku-bot> <Nemokosch> this line is still sort of NFSW

[12:58] <discord-raku-bot> <Nemokosch> NSFW*

[12:59] <discord-raku-bot> <Nemokosch> hey, you *could* do what you actually want to do

[12:59] <subben-troska> Its not really work its just me turning data to match the mocked data

[12:59] <subben-troska> of the react app

[12:59] <discord-raku-bot> <Nemokosch> I think this is a good example of habits that drift one towards wrong solutions

[13:00] <subben-troska> ok, how? a half-liner :-)

[13:00] <discord-raku-bot> <Nemokosch> It seems you don't want multiple matches but one big match

[13:00] <subben-troska> yeah I know I am sucker of cryptic solutions.. but it will not show in the real app

[13:01] <subben-troska> ... we'll sort of one big match I am getting your point.

[13:01] <subben-troska> the lists should be merged into a map

[13:02] <discord-raku-bot> <Nemokosch> it doesn't help with the case that you only want to match some arbitrary parts of the objects

[13:02] <subben-troska> I thought that was possible, because I went from PERL5 to Java back in -15 and I thought of the transition and about the possibility to easily use hashes like in JAVA. but I can't remember PL5

[13:03] <subben-troska> Its all about matching pairs of k/v into map

[13:03] <subben-troska> ok! I get your point about arbitrary order..

[13:04] <discord-raku-bot> <Nemokosch> I mean if you matched the whole thing, the named parts of that one match would be lists alright

[13:04] <discord-raku-bot> <Nemokosch> but it's like match a little bit, then another little bit etc

[13:04] <subben-troska> yes a list of unordered entries (which are in order)

[13:05] <subben-troska> I SHOULD turn into a complete regex matching the order right?

[13:05] <discord-raku-bot> <Nemokosch> not just that. some keys aren't properly matched because their value is not integer

[13:05] <subben-troska> not a global consecutive one.

[13:05] <discord-raku-bot> <Nemokosch> and therefore there are gaps inherently

[13:05] <subben-troska> yeah that why I had the optional \'? before and after

[13:06] <subben-troska> well it was in another regex..

[13:06] <subben-troska> if $station ~~ m:global/(\w+)\:\s*\'?(<[\w\s\-]>+)\'?/ {

[13:07] <subben-troska> ...which isn't working... its a conversion from a previous

[13:07] <subben-troska> non global context like; if $station ~~ m:global/(name)\:\s*\'?(<[\w\s\-]>+)\'?/ {

[13:08] <discord-raku-bot> <Nemokosch> ' starts a string though, doesn't it

[13:09] <subben-troska> regex's are much harder in PL6 than PL5. We actually had a PL5 course with MÃ¤sak back than (from Edument)

[13:09] <discord-raku-bot> <Nemokosch> '?(<[\w\s-]>+)'? is the string `?(<[\w\s-]>+)` optionally

[13:10] <subben-troska> It was the ' that are optional around the values

[13:11] <discord-raku-bot> <Nemokosch> I get that that was what you wanted but I doubt that's what you managed to express

[13:11] *** jgaz joined
[13:11] <subben-troska> Mmmmm... maybe its been a mess..

[13:11] <discord-raku-bot> <Nemokosch> I'd say the rules are fairly simple. Any character that isn't alphanumeric, must be escaped to be used literally. That's it.

[13:12] <discord-raku-bot> <Nemokosch> you can escape it with the backslash or by *putting it into a string literal*

[13:13] <discord-raku-bot> <Nemokosch> also, regex literals are whitespace-insensitive so you can write them in a way that doesn't look like a long hieroglyph

[13:14] <subben-troska> allright.. sounds great.. I would really like to see a (laugh if you want, its on the house ;-) ) "rubular" for perl6.. besides REPL

[13:14] <subben-troska> ok? so no more \s'es then?

[13:15] <subben-troska> \s*+..

[13:15] <discord-raku-bot> <Nemokosch> that's not what I meant

[13:15] <discord-raku-bot> <Nemokosch> By the way: what are your priorities? To solve a specific task or to get to know more about Raku regexes?

[13:16] <discord-raku-bot> <Nemokosch> I mean both is fine but that decides how I try to govern the topic ðŸ˜›

[13:16] <subben-troska> well I would like to dust off perl and more over learn RAKU and how things works out

[13:17] <discord-raku-bot> <Nemokosch> Okay, gotcha

[13:17] <subben-troska> I am doing this undercover, some members of the team knows I am into this RAKU thing ;-)

[13:18] <discord-raku-bot> <Nemokosch> disclaimer: the topic is covered in much greater detail in the docs - https://docs.raku.org/language/regexes

[13:20] <discord-raku-bot> <Nemokosch> now, the most important things about writing Raku regexes are:

[13:20] <discord-raku-bot> <Nemokosch> - they are constructed with this regex language; prior to bleeding-edge works, a string literal and a regex literal had no connection to each other

[13:21] <discord-raku-bot> <Nemokosch> - a regex literal can contain strings and even code blocks and it ignores whitespace

[13:21] <discord-raku-bot> <Nemokosch> - alphanumeric characters don't have to be escaped but everything else (including whitespace) has to be

[13:22] <subben-troska> great @Nemokosch my angry/tired gf just called to get picked up (from work) and I need to warm up my old limping French c4gp car so I have to leave for now..

[13:22] <subben-troska> but I also got your last point about those two kinds of literals..

[13:22] <subben-troska> I am still here reading.. (there were some problems with the car .. lol)

[13:22] <discord-raku-bot> <Nemokosch> for what it's worth, I tend to add everything as a string - except for the regex control characters I want to use in their special meaning

[13:24] <subben-troska> ok.. in my case do you and for the moment recommend using json::fast?? just to not get further into some misconceptions like you are pointing out to me?

[13:24] <subben-troska> I want to get it right and according to your teaching :-)

[13:25] <subben-troska> I mean the way it works in RAKU.. correcgiton

[13:25] <discord-raku-bot> <Nemokosch> you seem to be kind of a funny person lol

[13:25] <subben-troska> I am dynamic

[13:25] <discord-raku-bot> <Nemokosch> but it's okay, new year's eve is close

[13:26] <subben-troska> yeah it is.. the code is always present to the mind

[13:26] <subben-troska> well I better be going, have a great NY eve, I will try myself ;-)

[13:26] <discord-raku-bot> <Nemokosch> well, if what you want to process is valid JSON, that's probably the safest choice, and frankly it might even turn out to be faster, not sure about the implementation

[13:27] <subben-troska> I'll have a go after the pickup

[13:27] <discord-raku-bot> <Nemokosch> okay okay

[13:27] <discord-raku-bot> <Nemokosch> take care

[13:37] *** subben-troska left
[14:29] *** Guest47 left
[15:42] *** jgaz left
[15:44] *** razetime joined
[15:51] *** razetime left
[15:55] *** razetime joined
[17:58] *** razetime left
[23:10] *** lizmat joined
[23:10] <discord-raku-bot> <Nemokosch> I can't vouch for the books but there is the documentation itself

[23:13] <CodeTortoise> Right. The website has a lot of examples, and the documentation is well done, so I should not have too much trouble finding answers to any questions I have. Raku seems to be anti-idiomatic, or pro-idiosyncratic, so I don't have to worry about style I guess.

[23:53] *** lizmat_ joined
[23:53] *** jgaz joined
[23:56] <discord-raku-bot> <Nemokosch> also, feel free to ask if something is not clear. Mistakes are very much possible when you have a large language with a small crew ðŸ˜›

[23:56] *** lizmat left
[23:58] <CodeTortoise> For sure! I mean, I have been in a kind of beginner's hell sampling languages when I got interested in programming like.. ten years ago. Never pursued it seriously, I mostly just enjoyed reading about different rationales and implementations, but just like learning an instrument, knowing how to make sounds but not how to play songs is terrible.

