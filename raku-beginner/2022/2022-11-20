[01:13] *** Kaiepi joined
[01:22] *** discord-raku-bot left
[01:22] *** discord-raku-bot joined
[01:30] *** razetime joined
[03:53] *** Kaiepi left
[04:56] *** sgrs left
[06:32] <discord-raku-bot> <Da-ding!> I have a grammar where one rule is essentially syntactic sugar for another rule. Inside an action method, am I able to restructure the match and pass it into a different action method? Or would I have to create a separate subroutine to contain any shared behaviour?

[06:34] <discord-raku-bot> <Da-ding!> Secondly, to solve this I was thinking of delegating everything to a separate class anyway, leaving pretty much every method in the action class as 'method foo($/) {  Bar.foo($/.values.map(*.made)) }`.  Any ideas on how I might be able to reduce this boilerplate code?

[06:34] <discord-raku-bot> <Da-ding!> Secondly, to solve this I was thinking of delegating everything to a separate class anyway, leaving pretty much every method in the action class as `method foo($/) {  Bar.foo($/.values.map(*.made)) }`.  Any ideas on how I might be able to reduce this boilerplate code?

[08:20] *** Kaiepi joined
[09:11] *** ToddAndMargo joined
[10:25] *** ToddAndMargo left
[12:16] *** sgrs joined
[13:24] *** Kaiepi left
[13:40] *** Kaiepi joined
[13:55] <guifa> Da-ding! you can call one one action method from another one — there's actually not anything particular special about action methods

[13:56] <guifa> as to the second one, if you're going to farm out everything to the other class.... why not make it the action class?

[13:56] <guifa> just do :actions(Bar) instead 

[15:47] *** guifa_ joined
[15:50] *** guifa left
[16:38] *** sgrs left
[17:19] *** razetime left
[18:07] *** sgrs joined
[18:28] *** sgrs left
[18:33] *** MasterDuke left
[19:58] *** n1to left
[23:23] *** sgrs joined
