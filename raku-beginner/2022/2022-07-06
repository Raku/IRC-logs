[00:40] *** frost joined
[01:53] *** Kaiepi left
[03:40] *** Kaiepi joined
[04:28] *** Guest83 joined
[04:31] *** Guest83 left
[04:32] <discord-raku-bot> <stevied> ok, thanks

[04:32] <discord-raku-bot> <stevied> I don't understand the syntax here:

[04:32] <discord-raku-bot> <stevied> Proxy.new(

[04:32] <discord-raku-bot> <stevied>         :STORE{ },

[04:32] <discord-raku-bot> <stevied>         :FETCH{ }

[04:32] <discord-raku-bot> <stevied> );

[04:33] <discord-raku-bot> <stevied> I know STORE and fetch are keys and the { } are probably values but I don't quite understand how it works

[04:35] <discord-raku-bot> <stevied> i don't see anything in the documentation for constructing a pair like this with curly braces

[04:39] <discord-raku-bot> <stevied> looks like it's just creating an empty hash for the value. But isn't STORE supposed to require a callable?

[04:41] <discord-raku-bot> <stevied> weird, even this works without error:

[04:41] <discord-raku-bot> <stevied> ```

[04:41] <discord-raku-bot> <stevied> my $t = Proxy.new(

[04:41] <discord-raku-bot> <stevied>         :STORE[ 7, 2, 3],

[04:41] <discord-raku-bot> <stevied>         :FETCH[ 5, 4, 9]

[04:41] <discord-raku-bot> <stevied> );

[04:41] <discord-raku-bot> <stevied> ```

[04:42] <discord-raku-bot> <stevied> that's clearly an array

[04:43] <discord-raku-bot> <stevied> weird, even this works without error:

[04:43] <discord-raku-bot> <stevied> Proxy.new(

[04:43] <discord-raku-bot> <stevied>         :STORE[ 7, 2, 3],

[04:43] <discord-raku-bot> <stevied>         :FETCH[ 5, 4, 9]

[04:43] <discord-raku-bot> <stevied> );

[04:43] <discord-raku-bot> <stevied> ```

[04:46] <discord-raku-bot> <stevied> ```

[04:46] <discord-raku-bot> <stevied> my $p1 = :STORE{ };

[04:46] <discord-raku-bot> <stevied> say $p1.value.^name;

[04:46] <discord-raku-bot> <stevied> my $p2 = :STORE{ 2 };

[04:46] <discord-raku-bot> <stevied> say $p2.value.^name;

[04:46] <discord-raku-bot> <stevied> ```

[04:47] <discord-raku-bot> <stevied> first returns "hash" second returns "block"

[04:50] <discord-raku-bot> <stevied> ok, so this explains it: my $p1 = :STORE{ };

[04:50] <discord-raku-bot> <stevied> say $p1.value.^name;

[04:50] <discord-raku-bot> <stevied> my $p2 = :STORE{ 2 };

[04:50] <discord-raku-bot> <stevied> say $p2.value.^name;

[04:50] <discord-raku-bot> <stevied> ok, so this explains it: https://docs.raku.org/language/operators#term_{_}

[04:52] <discord-raku-bot> <stevied> but that doesn't answer the question  as to why/how STORE accepts a hash for an argument

[04:52] <discord-raku-bot> <stevied> i guess it must get coerced into a block?

[05:01] <discord-raku-bot> <stevied> ok, interesting, if I try to assign the object to a var, I do get an expected error:

[05:01] <discord-raku-bot> <stevied> ```

[05:01] <discord-raku-bot> <stevied> my $t = Proxy.new(

[05:01] <discord-raku-bot> <stevied>         :STORE{ },

[05:01] <discord-raku-bot> <stevied>         :FETCH{ }

[05:01] <discord-raku-bot> <stevied> );

[05:01] <discord-raku-bot> <stevied> ```

[05:02] <discord-raku-bot> <stevied> ```

[05:02] <discord-raku-bot> <stevied> No such method 'CALL-ME' for invocant of type 'Hash'

[05:02] <discord-raku-bot> <stevied>   in block <unit> at /Users/stevedondley/Library/Application Support/"Edument Central Europe"/Comma2022.06/scratches/random-scratch line 5

[05:02] <discord-raku-bot> <stevied> ```

[05:02] <discord-raku-bot> <stevied> problem solved

[05:02] <discord-raku-bot> <stevied> if I put something between the braces, raku treats it like a block

[05:02] <discord-raku-bot> <stevied> very confusing, though

[06:18] *** Kaiepi left
[07:50] *** dakkar joined
[09:55] *** frost left
[10:17] *** frost joined
[10:53] <discord-raku-bot> <gfldex> `()` is the empty List, `[]` is the empty Array, `{}` is the empty Hash and  `{;}` is the empty Block.

[10:58] *** jaguart joined
[11:18] *** frost left
[11:26] *** frost joined
[12:20] *** frost left
[12:47] *** m_athias left
[12:48] *** m_athias joined
[13:07] <discord-raku-bot> <stevied> Yeah but the part that really threw me was that the object wasnâ€™t created because it was never assigned.

[13:08] <discord-raku-bot> <stevied> So it looked like the { } was being used as a callable.

[17:01] *** dakkar left
[17:15] *** jaguart left
[17:31] *** jaguart joined
[23:11] *** jaguart left
