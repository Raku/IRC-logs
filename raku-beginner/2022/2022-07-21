[05:34] *** saint- left
[06:57] *** Oshawott joined
[06:59] *** archenoth left
[07:06] *** Kaiepi joined
[08:00] *** archenoth joined
[08:02] *** Oshawott left
[08:37] *** Oshawott joined
[08:39] *** archenoth left
[09:09] *** jaguart joined
[09:19] *** Oshawott left
[09:19] *** Oshawott joined
[11:13] *** Ssw joined
[11:27] *** Ssw left
[12:08] *** Kaipei joined
[12:10] *** Kaiepi left
[12:18] *** frost joined
[12:38] *** frost left
[13:13] <discord-raku-bot> <South> how would i create an array of whatever length filled with a single value? ruby has Array#* which does this, but raku handles smthn like `<111>*5` or `[111]*5` differently

[13:15] <discord-raku-bot> <Nemokosch> `xx` is the operator you are looking for

[13:16] <discord-raku-bot> <Nemokosch> m: dd 111 xx 5

[13:17] <discord-raku-bot> <Nemokosch> if you assign a Sequence to an Array, it will be stored as expected

[13:17] <SmokeMachine> m: dd 111 xx 5

[13:17] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: ¬´(111, 111, 111, 111, 111).Seq‚ê§¬ª

[13:18] <discord-raku-bot> <Nemokosch> Yes, this time around it worked

[13:19] <discord-raku-bot> <Nemokosch> just not on your end üòõ

[13:20] <discord-raku-bot> <Nemokosch> in Raku, the general principle is that operands adapt to the operator, not vice versa. Of course you can overload the same known operators to handle new types - but generally you have no reason to, because you can define new operators

[13:20] <SmokeMachine> does Camelia answers `m:` from discord bridge to discord bridge only?

[13:21] <discord-raku-bot> <South> nice, i was getting a little irked i couldn‚Äôt find it anywhere in the docs but it‚Äôs just a little hard to navigate rn

[13:23] <discord-raku-bot> <Nemokosch> Smokemachine: seems like that, but even that doesn't seem to work for the raku irc channel

[13:25] <discord-raku-bot> <Nemokosch> I can imagine that. Apparently the keyword to remember is "repetition"; it's described as the "list repetition operator"

[13:25] <discord-raku-bot> <Nemokosch> as opposed to `x` which is the "string repetition operator"

[13:25] <discord-raku-bot> <South> yeah i went looking for it on the op page after you mentioned it

[13:25] <discord-raku-bot> <Nemokosch> strings and lists are so distinct that strings wouldn't even take indexing...

[13:26] <discord-raku-bot> <Nemokosch> which is a bit too much to my taste but welp, comb can help if it's really needed

[13:28] <discord-raku-bot> <South> i don‚Äôt remember raku being this extensive when i last looked at it tbh, theres a lot going on when i look at examples

[13:29] <discord-raku-bot> <South> it could very well be because of how unique it is tho

[13:29] <discord-raku-bot> <Nemokosch> It's a huge language really. Someone said lately that it might be bigger than C++ which I wouldn't say buuut... it should give you an idea

[13:31] <discord-raku-bot> <South> i caught a glimpse of the scale just through the ops page for sure, even coming from J i was a little awe struck

[13:31] <discord-raku-bot> <Nemokosch> hahaha, J

[13:31] <discord-raku-bot> <Nemokosch> the asciified APL, right? xD

[13:32] <discord-raku-bot> <South> i have a feeling this will be a little harder to learn than J tbh

[13:32] <discord-raku-bot> <South> yeah, it‚Äôs the successor

[13:32] <discord-raku-bot> <Nemokosch> well you can use Raku as an operator freakshow, too

[13:33] <discord-raku-bot> <South> that is the goal, yes

[13:33] <discord-raku-bot> <Nemokosch> ü§£

[13:33] <discord-raku-bot> <South> i‚Äôve been aware of raku for quite a while now and it‚Äôs reputation, only just now mustering the grit to really try it out

[13:33] <discord-raku-bot> <Nemokosch> with special regards to the metaoperators and the ability to define your own operators

[13:34] <discord-raku-bot> <Nemokosch> with your preferred associativity and precedence, of course xD

[13:34] <discord-raku-bot> <South> very nice

[13:35] <discord-raku-bot> <Nemokosch> ```perl

[13:35] <discord-raku-bot> <Nemokosch> #!/usr/bin/env raku

[13:36] <discord-raku-bot> <Nemokosch> subset Digit of Int where *.chars == 1;

[13:36] <discord-raku-bot> <Nemokosch> sub infix:<nN>(Digit() $a, Digit() $b) is assoc<chain> {

[13:36] <discord-raku-bot> <Nemokosch>   abs($a - $b) == 1

[13:36] <discord-raku-bot> <Nemokosch> }

[13:36] <discord-raku-bot> <Nemokosch> my $n = prompt 'Input: ';

[13:36] <discord-raku-bot> <Nemokosch> say [nN] $n.comb;

[13:36] <discord-raku-bot> <Nemokosch> ```

[13:36] <discord-raku-bot> <Nemokosch> tells whether all subsequent digits of a number differ by one or not

[13:46] <discord-raku-bot> <South> huh, that‚Äôs pretty nifty

[13:47] <discord-raku-bot> <South> the subset line is really elegant

[14:20] *** m_athias left
[14:21] *** m_athias joined
[14:49] *** saint- joined
[14:50] *** saint- left
[14:50] *** saint- joined
[14:53] *** jgaz joined
[15:20] *** jgaz left
[16:09] <discord-raku-bot> <gfldex> m:```

[16:09] <discord-raku-bot> <gfldex>     use MONKEY-TYPING;

[16:09] <discord-raku-bot> <gfldex>     augment class Str {

[16:09] <discord-raku-bot> <gfldex>         method AT-POS($idx){ self.comb[$idx] }

[16:09] <discord-raku-bot> <gfldex>     }

[16:09] <discord-raku-bot> <gfldex>     say "Hallo Nemokosch!"[6];

[16:09] <discord-raku-bot> <gfldex> ```

[16:09] <discord-raku-bot> <gfldex> <@297037173541175296> ^^^ there you go

[16:17] <discord-raku-bot> <Nemokosch> exactly...

[16:40] *** jgaz joined
[17:20] <SmokeMachine> m: multi postcircumfix:<[ ]>(Str $s, UInt $i) { substr $s, $i, 1 } say "blablabla"[3]

[17:20] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Strange text after block (missing semicolon or comma?)‚ê§at <tmp>:1‚ê§------> ]>(Str $s, UInt $i) { substr $s, $i, 1 }‚èè say "blablabla"[3]‚ê§    expecting any of:‚ê§        infix‚ê§        infi‚Ä¶¬ª

[17:21] <SmokeMachine> m: multi postcircumfix:<[ ]>(Str $s, UInt $i) { substr $s, $i, 1 }; say "blablabla"[3]

[17:21] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: ¬´b‚ê§¬ª

[17:30] <gfldex> SmokeMachine: overloading postcircumfix:<[ ]> is almost never a good idea

[17:30] <gfldex> m: multi postcircumfix:<[ ]>(Str $s, UInt $i) { substr $s, $i, 1 }; say "blablabla"[3..6]

[17:30] <camelia> rakudo-moar 7ec4b10d7: OUTPUT: ¬´Index out of range. Is: 3, should be in 0..0‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[17:31] <gfldex> The build in candidates take care of quite a few types of arguments

[17:33] <discord-raku-bot> <gfldex> m:```

[17:33] <discord-raku-bot> <gfldex>     use MONKEY-TYPING;

[17:33] <discord-raku-bot> <gfldex>     augment class Str {

[17:33] <discord-raku-bot> <gfldex>         method AT-POS($idx){ dd $idx; self.comb[$idx] }

[17:33] <discord-raku-bot> <gfldex>         method elems { self.chars }

[17:33] <discord-raku-bot> <gfldex>     }

[17:33] <discord-raku-bot> <gfldex>     say "Hallo Nemokosch!"[6..9, *-1].flat.join;

[17:33] <discord-raku-bot> <gfldex> ```

[17:38] <discord-raku-bot> <Nemokosch> I'm horrified üòÇ

[17:42] <discord-raku-bot> <gfldex> <@297037173541175296> Yes, we do support Halloween as well.

[17:44] <discord-raku-bot> <Nemokosch> now that we are at it

[17:44] <discord-raku-bot> <Nemokosch> do you know anything about Exports.pm6 being special once upon a time?

[17:44] <discord-raku-bot> <Nemokosch> or was the author of HTML::Tag simply forgetful üòÖ

[17:45] <discord-raku-bot> <gfldex> No. The only 2 special files are META6.json and Build.pm6 .

[17:46] <discord-raku-bot> <Nemokosch> this module was oldish, 2017, but I also started thinking that maybe it simply got left out of

[17:46] <discord-raku-bot> <Nemokosch> META6.json by accident

[21:01] *** jgaz left
[21:13] *** guifa_ left
[21:14] *** guifa joined
[21:18] *** saint- left
[23:12] *** jaguart left
