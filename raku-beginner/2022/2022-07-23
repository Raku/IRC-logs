[00:15] *** jaguart left
[00:25] <guifa> kbtz: make sure to `use gname`

[00:25] <guifa> Depending on where it's located at, you may need a `use lib 'path/to/gname.rakumod'`

[00:38] *** kbtz left
[07:36] *** kbtz joined
[09:02] *** jaguart joined
[13:01] *** saint- joined
[19:52] *** kbtz left
[20:26] <jaguart> in a method, how to I call another method with all of my args? e.g. in Perl I would just: delegated( @_ );

[20:26] <jaguart> I have a mix of positional and named args - all of which need to be passed to delegated()

[20:28] <discord-raku-bot> <stevied> Use a slurpy

[20:28] <discord-raku-bot> <stevied> https://andrewshitov.com/2018/10/31/slurpy-parameters-and-flattening-in-perl-6/

[20:29] <jaguart> what if I dont know the signature of delegated()

[20:29] <jaguart> might be positional, named or a mix thereof

[20:31] <jaguart> or even a multi

[20:37] <jaguart> I'm looking at https://docs.raku.org/language/functions#Re-dispatching - I kind of want a ``nextsame`` where I can specify the next and get the return etc

[20:37] <jaguart> so maybe that's not really a ``nextdame`` :)

[20:42] <jaguart> ok - so now I'm reading https://docs.raku.org/type/Capture ... but any pointers appreciated

[20:48] <jaguart> aha - my subs signature ( |c ) -> othersub( |c ) -> hoorah.

[21:24] <discord-raku-bot> <p6steve> anton: back to 22 July (sorry just noticed) - I have added .to-dataset method to latest Dan::Polars prototype - on my 8GB RAM laptop it maxes on about 240MB csv file (19 mins) ... this is about 3 secs for Polars read_csv to ingest the file, the rest is then the get-data to bring it into raku

[21:26] <discord-raku-bot> <p6steve> with Dan::Polars you can just leave the data over in the Polars shadow df  (ie. Rust + Arrow2) and just use raku to manipulate

[21:28] <discord-raku-bot> <p6steve> but there are good reasons to load into raku too, I think that there are many limitations to my current code mainly in copying data into and out of CArrays and also in building raku objects on ingestion ...

[22:42] <lizmat> jaguart: if it is just about allowing 2 different names, you can also alias 2 subs

[22:43] <lizmat> m: sub a(|c) { dd c }; my &b := &a; b 42

[22:43] <camelia> rakudo-moar a7e9b1938: OUTPUT: «\(42)␤»

[22:43] <lizmat> m: sub a(|c) { dd c }; my &b := &a; b 42

[22:43] <camelia> rakudo-moar a7e9b1938: OUTPUT: «\(42)␤»

[22:57] *** jaguart left
