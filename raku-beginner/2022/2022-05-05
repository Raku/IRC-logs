[00:04] *** frost joined
[00:12] *** frost left
[01:09] *** kaiepi joined
[01:48] *** kaiepi left
[03:53] *** Guest35 left
[07:53] *** kaiepi joined
[08:05] *** dakkar joined
[08:19] *** kaiepi left
[08:22] *** kaiepi joined
[08:26] *** kaiepi left
[08:28] *** kaiepi joined
[08:49] *** sivoais left
[08:50] *** sivoais joined
[09:08] *** frost joined
[09:22] *** discord-raku-bot left
[09:22] *** discord-raku-bot joined
[11:10] <discord-raku-bot> <Anton Antonov#7232> I am trying to redirect stderr to a custom $err. I am have this code: 

[11:10] <discord-raku-bot> <Anton Antonov#7232> ```

[11:10] <discord-raku-bot> <Anton Antonov#7232>     my Str $err = '';

[11:10] <discord-raku-bot> <Anton Antonov#7232>     my $*ERR = $*ERR but role {

[11:10] <discord-raku-bot> <Anton Antonov#7232>         method print (*@args) {

[11:10] <discord-raku-bot> <Anton Antonov#7232>             $err ~= @args

[11:10] <discord-raku-bot> <Anton Antonov#7232>         }

[11:10] <discord-raku-bot> <Anton Antonov#7232>     }

[11:10] <discord-raku-bot> <Anton Antonov#7232> ```

[11:11] <discord-raku-bot> <Anton Antonov#7232> Which worked before I updated to Raku 2022.04. Now I get the error: "Cannot resolve caller print(Any:U: BOOTStr); none of these signatures matches:  (Mu: *%_)"

[11:12] <discord-raku-bot> <Anton Antonov#7232> How can I fix this?

[12:15] *** frost left
[12:20] *** frost joined
[13:10] *** Guest35 joined
[13:53] *** TempIRCLogger left
[13:55] *** lizmat left
[14:17] *** kaiepi left
[14:18] *** kaiepi joined
[14:20] *** frost left
[14:39] *** kaiepi left
[15:48] *** kaiepi joined
[16:01] *** kaiepi left
[16:03] *** kaiepi joined
[16:10] <MasterDuke> Anton Antonov: i don't get that error running just the code you pasted. is there more required to trigger it?

[16:30] *** dakkar left
[16:36] *** TempIRCLogger joined
[16:36] *** lizmat joined
[16:40] *** TempIRCLogger left
[16:40] *** TempIRCLogger joined
[17:16] <discord-raku-bot> <Anton Antonov#7232> MasterDuke -- Ok, I will try to give an example.

[17:16] <discord-raku-bot> <Anton Antonov#7232> MasterDuke -- Ok, I will try to give an example that has the error.

[18:02] *** Manifest0 joined
[19:15] *** n1to joined
[19:19] *** n1to left
[19:20] *** n1to joined
[19:20] <discord-raku-bot> <piotrklibert#0328> How come `[Z]` or `(1, 2) Z (2, 3) Z (3, 4)` work? Reduce over zip also works: `reduce(&zip, [(1, 2), (2, 3), (3, 4)])` Again, how come?

[19:20] <discord-raku-bot> <piotrklibert#0328> Semantically, all these should be reducible to: `zip( zip( (1, 2), (2, 3) ), (3, 4) )` which does give the result I'd expect: `(((1 2) 3) ((2 3) 4))`. Same for `((1, 2) Z (2, 3)) Z (3, 4)` so I was suspecting some operator precedence magic, but reduce/zip makes me think it's a special case in the `zip` multi (if it's a multi). This should be equivalen to `[Z]`, too, yet isn't: 

[19:20] <discord-raku-bot> <piotrklibert#0328> ```

[19:20] <discord-raku-bot> <piotrklibert#0328> > dd my @a = reduce(-> @a, @b { say "acc={@a.raku}, el={@b.raku}, ret=" ~ (my @r = @a Z @b).raku; @r}, [(1, 2), (2, 3), (4, 5)])

[19:20] <discord-raku-bot> <piotrklibert#0328> acc=(1, 2), el=(2, 3), ret=[(1, 2), (2, 3)]

[19:20] <discord-raku-bot> <piotrklibert#0328> acc=[(1, 2), (2, 3)], el=(4, 5), ret=[($(1, 2), 4), ($(2, 3), 5)]

[19:20] <discord-raku-bot> <piotrklibert#0328> Array @a = [($(1, 2), 4), ($(2, 3), 5)]

[19:20] <discord-raku-bot> <piotrklibert#0328> ```

[19:20] <discord-raku-bot> <piotrklibert#0328> What am I missing?

[19:22] <discord-raku-bot> <piotrklibert#0328> Something about nodality, or scalar vs. array contexts, maybe?

[19:28] *** discord-raku-bot left
[19:29] *** discord-raku-bot joined
[19:29] <discord-raku-bot> <gfldex#8222> m: &reduce.candidates[0].signature.say; # bot? you there?

[19:30] <MasterDuke> m: &reduce.candidates[0].signature.say;

[19:30] <camelia> rakudo-moar 530e17848: OUTPUT: ¬´(&with, +list)‚ê§¬ª

[19:31] <discord-raku-bot> <gfldex#8222> <@486998692683841566> see https://docs.raku.org/language/functions#Slurpy_conventions  "single argument rule"

[19:35] <discord-raku-bot> <piotrklibert#0328> Ah, this again... üòÑ Ok, thanks, I think it's finally time to actually understand that section instead of just reading it üôÇ

[19:37] <discord-raku-bot> <Morfent#9811> slurpy oneargs are pretty handy

[19:39] *** discord-raku-bot left
[19:39] *** discord-raku-bot joined
[20:17] <discord-raku-bot> <Anton Antonov#7232> MasterDuke, I use(d) Test::Output to capture the error output -- works fine. The complication was coming from using my crude approach inside a Cro routing service.

[21:41] <discord-raku-bot> <Nemokosch#9980> I don't see much "single argument" here, how is this related?

[21:41] <discord-raku-bot> <Nemokosch#9980> I only see a question about associativity and Z has the so called list associativity

[21:42] <discord-raku-bot> <Nemokosch#9980> So neither left nor right, it acts like one function expanding to several arguments

[21:45] <discord-raku-bot> <Nemokosch#9980> https://docs.raku.org/language/operators#Operator_associativity

[21:47] <discord-raku-bot> <Nemokosch#9980> <@486998692683841566> https://docs.raku.org/language/functions#Associativity you can do this, too :)

[22:24] *** n1to left
