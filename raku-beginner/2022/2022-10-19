[01:44] *** razetime joined
[02:27] *** archenoth joined
[02:28] *** archenoth left
[02:28] *** archenoth joined
[02:30] *** Oshawott left
[03:48] *** guifa_ left
[03:48] *** MasterDuke left
[03:49] *** guifa joined
[03:55] *** razetime left
[03:58] *** Heptite left
[04:37] *** razetime joined
[06:21] <discord-raku-bot> <zacque> Rant: Didn't expect the flattening effect of zip!

[06:24] <discord-raku-bot> <zacque> How can I prevent flattening such that some `((1,2)) Z ((3,4))` produces `(((1,2), (3,4)))`?

[06:42] <discord-raku-bot> <Nemokosch> That's not flattening - ((1, 2)) is not a nested list.

[06:42] <discord-raku-bot> <Nemokosch> It's the very same thing as (1, 2)

[06:44] <discord-raku-bot> <Nemokosch> If you want the nested list, write ((1, 2),)

[06:44] <discord-raku-bot> <Nemokosch> (The comma operator constructs the list, not the parens)

[07:01] <discord-raku-bot> <zacque> Ah, you're right! Didn't notice that

[07:02] <discord-raku-bot> <zacque> That solves my problem, haha! Tq very much ðŸ˜„

[07:03] <discord-raku-bot> <Nemokosch> That one was an easy win, at least

[08:09] *** dakkar joined
[08:15] <CIAvash> or maybe `$(1,2) Z $(3,4)`

[08:28] <discord-raku-bot> <Nemokosch> that generates weird output, by the way

[08:28] <discord-raku-bot> <Nemokosch> oops nevermind, I was just stupid

[08:29] <discord-raku-bot> <Nemokosch> Still, I don't get why $(1, 2) Z $(3, 4) is double-nested

[08:31] <discord-raku-bot> <Zephyr> comma operator creates a list by itself, I think explicitly creating a list that wraps it makes it double nested?

[08:32] <discord-raku-bot> <Nemokosch> I suppose $(1, 2) is like an item

[08:32] <discord-raku-bot> <Nemokosch> m: dd 1 Z 2

[08:33] <discord-raku-bot> <Nemokosch> do items turn into one-element lists implicitly, again? ðŸ˜†

[08:33] <discord-raku-bot> <Zephyr> wait nvm, $(1, 2) isn't a nested list

[08:34] <discord-raku-bot> <Zephyr> I guess yes then it's transforming an item into an one-element list... didn't expect that

[08:45] <CIAvash> `$(1,2)` is the same as `(1,2).item`

[09:48] *** razetime left
[10:20] *** frost16 joined
[11:19] <discord-raku-bot> <zacque> ClAvash: `$(1,2)` works too, thanks!

[11:21] <discord-raku-bot> <zacque> I'm confused, should I implement `cmp` inside my custom class, or a `multi sub` outside it?

[11:22] <discord-raku-bot> <zacque> But if I implement it as a `multi sub`, it will need to have access to some internal details ðŸ˜¦

[11:36] *** Kaiepi joined
[11:42] <discord-raku-bot> <Nemokosch> I wonder https://docs.raku.org/routine/trusts

[11:58] <discord-raku-bot> <zacque> I don't think it helps, since I'm comparing two objects of the same class

[12:02] *** razetime joined
[12:11] <discord-raku-bot> <Nemokosch> yeah I mean maybe there is something like "friend" in C++?

[12:13] <discord-raku-bot> <zacque> Ya, but how does it help?

[12:19] <discord-raku-bot> <Nemokosch> well, do you know what a friend function is? ðŸ¤”

[12:57] <discord-raku-bot> <zacque> Yup, a friend class has access to all private and public attributes and functions

[12:58] <discord-raku-bot> <zacque> A friend function, not sure..

[12:58] <discord-raku-bot> <Nemokosch> same but as a function ðŸ˜›

[12:58] <discord-raku-bot> <zacque> With public attributes, I can do something like this: https://paste.debian.net/1257585/

[12:59] <discord-raku-bot> <zacque> Huh? Is there such a thing as friend function in Raku? ðŸ˜®

[12:59] <discord-raku-bot> <Nemokosch> I don't know

[12:59] <discord-raku-bot> <Nemokosch> that's the thing...

[12:59] <discord-raku-bot> <zacque> Lol hahaha

[13:03] *** jgaz joined
[13:04] <discord-raku-bot> <Nemokosch> it exists in C++ at least

[13:29] <discord-raku-bot> <zacque> Ok...

[13:31] <discord-raku-bot> <zacque> Is there a way to compare two objects of the same class without exposing internal details? I'd like to keep everything private though

[13:36] <discord-raku-bot> <Nemokosch> method infix:<cmp> seems to work

[13:56] <lizmat> zacque: if these objects are value types, then maybe https://docs.raku.org/type/ValueObjAt is interesting

[14:13] *** frost16 left
[14:18] *** habere-et-disper joined
[14:18] <habere-et-disper> Hi all o/

[14:18] <habere-et-disper> :-)

[14:18] <habere-et-disper> Hoes does the control flow keyword `lift` work?

[14:18] <habere-et-disper> I can't find any documentation.

[14:18] <habere-et-disper> Thanks!

[14:25] <discord-raku-bot> <zacque> lizmat: That helps! How do I compare two objects then? Do I have to invoke `WHICH` on both objects?

[14:43] *** deoac joined
[14:46] <deoac> what is the meaning ofÂ  ` FATAL: Empty input word set `Â  Â ?

[14:48] *** Heptite joined
[16:42] *** dakkar left
[16:46] *** deoac left
[16:46] *** razetime left
[17:03] <lizmat> zacque using the identity operator  https://docs.raku.org/routine/===,%20infix%20â©¶

[17:25] <discord-raku-bot> <Nemokosch> lizmat: what does =:= use?

[17:25] <lizmat> the actual memory address: aka, whether they are referring to actually the same object

[17:30] *** m_athias left
[17:31] *** m_athias joined
[18:14] *** habere-et-disper left
[19:19] <discord-raku-bot> <Nemokosch> thankies

[19:59] *** Kaiepi left
[19:59] *** Kaiepi joined
[20:04] *** Kaiepi left
[20:05] *** Kaiepi joined
[20:08] *** Kaiepi left
[20:08] *** Kaiepi joined
[21:11] *** jgaz left
[22:33] <discord-raku-bot> <zacque> lizmat: Ah, I see. Thx!

[22:49] <lizmat> habere-et-disper: where did you read about "lift" ?  it was never implemented

[23:23] <discord-raku-bot> <Mofu> This seems like a harmless place to fawn over Raku, so I'm here to say I appreciate how life-changing Raku can be for quick and dirty scripting. For example just using `sub MAIN($somearg = "blah")` for passing cmdline args to the script be magic, instead of having to do the usual ARGV array/length parsing boilerplate.

[23:43] <guifa> Mofu: glad to have you enjoying it!

[23:48] <discord-raku-bot> <Mofu> I haven't felt this lazy since I first learned Ruby lol.

