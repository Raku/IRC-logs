[03:11] *** discord-raku-bot left
[03:11] *** discord-raku-bot joined
[09:09] <discord-raku-bot> <Razetime#5187> thanks a lot

[09:09] <discord-raku-bot> <Razetime#5187> ah this is super concise, exactly what i need

[12:30] <discord-raku-bot> <RoM#5135> Following up on Rakus leading/tailing Declarator Blocks #| and #= and Python's "doctest" I tried using the Pod-Test-Code module approach inside the  leading #| Block - which did not work. However, putting some simple initial tests close to the sub I like to document - inside some =begin pod ... =end pod - is also good enough and works nicely. Thank you for that hint.

[12:30] <discord-raku-bot> <RoM#5135> The follow-up question I could not solve is related to converting pod to HTML.

[12:30] <discord-raku-bot> <RoM#5135> When running 

[12:30] <discord-raku-bot> <RoM#5135> raku --doc=HTML lib/MyDemoMod.rakumod > doc/MyDemoMod.html

[12:30] <discord-raku-bot> <RoM#5135> on this Module code:

[12:30] <discord-raku-bot> <RoM#5135> unit module MyDemoMod;

[12:30] <discord-raku-bot> <RoM#5135> #| Some one sentence documentation.

[12:30] <discord-raku-bot> <RoM#5135> subset PInt of UInt where * > 0;

[12:30] <discord-raku-bot> <RoM#5135> #| Another one sentence documentation.

[12:30] <discord-raku-bot> <RoM#5135> proto multipliziere_pos_int(PInt:D $x, PInt:D $y where $x <= $y) returns PInt {*}

[12:30] <discord-raku-bot> <RoM#5135> multi sub multipliziere_pos_int(1, $y) is export {

[12:30] <discord-raku-bot> <RoM#5135>   return $y

[12:32] <discord-raku-bot> <RoM#5135> Following up on Rakus leading/tailing Declarator Blocks #| and #= and Python's "doctest" I tried using the Pod-Test-Code module approach inside the  leading #| Block - which did not work. However, putting some simple initial tests close to the sub I like to document - inside some =begin pod ... =end pod - is also good enough and works nicely. Thank you for that hint.

[12:32] <discord-raku-bot> <RoM#5135> The follow-up question I could not solve is related to converting pod to HTML.

[12:32] <discord-raku-bot> <RoM#5135> When running 

[12:32] <discord-raku-bot> <RoM#5135> raku --doc=HTML lib/MyDemoMod.rakumod > doc/MyDemoMod.html

[12:32] <discord-raku-bot> <RoM#5135> on this Module code:

[12:32] <discord-raku-bot> <RoM#5135> unit module MyDemoMod;

[12:32] <discord-raku-bot> <RoM#5135> #| Some one sentence documentation.

[12:32] <discord-raku-bot> <RoM#5135> subset PInt of UInt where * > 0;

[12:32] <discord-raku-bot> <RoM#5135> #| Another one sentence documentation.

[12:32] <discord-raku-bot> <RoM#5135> proto multipliziere_pos_int(PInt:D $x, PInt:D $y where $x <= $y) returns PInt {*}

[12:32] <discord-raku-bot> <RoM#5135> multi sub multipliziere_pos_int(1, $y) is export {

[12:32] <discord-raku-bot> <RoM#5135>   return $y

[12:32] <discord-raku-bot> <RoM#5135> Am I doing something wrong when generating teh HTML?

[12:34] <discord-raku-bot> <RoM#5135> Am I doing something wrong when generating the HTML?

[12:38] <discord-raku-bot> <RoM#5135> PS: I removed all the pod from the rakumod-file, the subset-format-error appears also whenusing pod inside.

[12:38] <discord-raku-bot> <RoM#5135> PS: I removed all the pod from the rakumod-file, the subset-format-error appears also when using pod inside.

[14:12] *** TheAthlete joined
[14:24] *** TheAthlete left
[14:44] <MasterDuke> @RoM#5135 i suggest asking in #raku

[15:30] <discord-raku-bot> <RoM#5135> @MasterDuke: ok

[16:48] <discord-raku-bot> <stevied#8273> I'm running the code in the synopsis at https://github.com/chloekek/Template-Classic/blob/master/lib/Template/Classic.pm6

[16:48] <discord-raku-bot> <stevied#8273> all I'm getting for output is 3 dots

[17:12] <discord-raku-bot> <stevied#8273> where do I find the source code for this module on my local machine?

[17:17] <discord-raku-bot> <stevied#8273> looks like it's buried in share/perl6/site. I guess I don't want to touch that

[17:17] <discord-raku-bot> <stevied#8273> I guess I should download it manually from git hub and throw it in lib or something and load it manually

[17:33] <discord-raku-bot> <stevied#8273> I'm using `use lib '/path/to/mylib`; to try to override the module installed with zef but not getting anywhere

[17:34] <discord-raku-bot> <stevied#8273> it's still using the module installed with zef

[17:36] <discord-raku-bot> <stevied#8273> ok, had to do `use lib '/path/to/my/lib/Template-Classic/lib`

[19:17] <discord-raku-bot> <stevied#8273> Is there a way to add CFLAGS when compiling a module?

[19:18] <discord-raku-bot> <stevied#8273> or building a module, I should say

[19:51] <MasterDuke> @stevied#8273 fyi, if it was installed with zef, `zef look Template::Classic` will drop you into a shell in the modules files. however, i don't believe you can modify the files. if you want to do that, then yes, clone and then `raku -I . <...>` in the repo

[19:54] <MasterDuke> i'm not sure how CFLAGS gets populated when building a module. might take the CFLAGS used when building moarvm, or maybe just what's in your env. if the latter, then `CFLAGS="$CFLAGS -foo -bar" zef install .` should work

[21:25] <discord-raku-bot> <stevied#8273> thanks. thankfully I was able to resolve the problem without resorting to cflags voodoo

[22:04] *** [Coke] left
[22:07] *** [Coke] joined
[22:12] *** [Coke] left
[22:12] *** [Coke] joined
[22:19] <discord-raku-bot> <stevied#8273> can someone please shed some light on this: https://docs.raku.org/type/Signature#Sub-signatures

[22:19] <discord-raku-bot> <stevied#8273> what is compound parameter, first of all?

[22:27] *** [Coke] left
[22:34] <MasterDuke> i think they're saying that `|c`, a Capture, can (and does in this case) have multiple arguments/parameters that make it up

[22:35] <MasterDuke> and the sub-signature is a way to specify its "schema"

[22:35] <discord-raku-bot> <stevied#8273> the letter after the | can be anything, right?

[22:36] <MasterDuke> yeah, 'c' is just convention

[22:37] <discord-raku-bot> <stevied#8273> so this doesn't shed too much light on what a sub-signature is or why I would want to use it.

[22:37] <discord-raku-bot> <stevied#8273> oh, wait. I think I see

[22:38] <discord-raku-bot> <stevied#8273> so c is a parameter made  up of two pieces of data

[22:39] <discord-raku-bot> <stevied#8273> what's the advantage of doing something like that?

[22:39] <discord-raku-bot> <stevied#8273> why not just have two differently name parameters?

[22:40] <MasterDuke> sort of. i might say that c is the meta-view of all the parameters, whether it's one or many

[22:40] *** [Coke] joined
[22:41] <MasterDuke> usually you would. but if you're doing some meta-programing (e.g., passing a function into another function to wrap it), you might need/want to operate on the parameters as a whole

[22:42] <MasterDuke> so some function might just take all it's arguments as a whole and pass them off to another function, and that function might have multi candidates based on the schema of the "whole" it receives

[22:44] <discord-raku-bot> <stevied#8273> well, what I'm trying to figure out is this line: https://github.com/chloekek/Template-Classic/blob/master/lib/Template/Classic.pm6#L102

[22:44] <discord-raku-bot> <stevied#8273> and it's throwing an error at me

[22:44] <discord-raku-bot> <stevied#8273> ```Stub code executed

[22:44] <discord-raku-bot> <stevied#8273>   in sub  at EVAL_0 line 1

[22:44] <discord-raku-bot> <stevied#8273>   in sub  at /Users/me/git_repos/raku/modules/steve/Template-Classic/lib/Template/Classic.pm6 (Template::Classic) line 104

[22:44] <discord-raku-bot> <stevied#8273>   in block <unit> at ./template.raku line 13

[22:44] <discord-raku-bot> <stevied#8273> ```

[22:46] <discord-raku-bot> <stevied#8273> it only throws an error when I have a "where" clause in my signature:

[22:46] <discord-raku-bot> <stevied#8273> ```

[22:46] <discord-raku-bot> <stevied#8273> use Template::Classic;

[22:46] <discord-raku-bot> <stevied#8273> my &render-list := template :(Str:D $app1,

[22:46] <discord-raku-bot> <stevied#8273>                               Str:D $app2,

[22:46] <discord-raku-bot> <stevied#8273>                               Str:D $key where 1),

[22:46] <discord-raku-bot> <stevied#8273>                               'practice.json'.IO.slurp;

[22:46] <discord-raku-bot> <stevied#8273> ```

[22:46] <discord-raku-bot> <stevied#8273> I'm trying to see if I can get it to work with a where a clause. but I don't know what I'm doing.

[22:46] <MasterDuke> oh, a where clause might be tricky

[22:47] <MasterDuke> since that's essentially code

[22:47] <MasterDuke> but what if you just put `1` instead of `Str:D $key where 1`?

[22:48] <MasterDuke> or really `'1'` since it's a Str

[23:05] <discord-raku-bot> <stevied#8273> Thanks. Iâ€™ll try in a bit. Eating.

[23:13] <discord-raku-bot> <stevied#8273> yeah, I just get an error: `Variable '$key' is not declared`

[23:13] <discord-raku-bot> <stevied#8273> what I really want to do is `Str:D $key where .charrs == 1`

[23:16] <MasterDuke> it might not be possible to use a where clause when you're passing a capture around like that. any difference if you declare a subset type beforehand and use that? e.g., `subset Char of Str where .chars == 1; sub foo(Char $a) { ... }`

[23:19] <discord-raku-bot> <stevied#8273> doesn't work. here's the code:

[23:19] <discord-raku-bot> <stevied#8273> ```

[23:19] <discord-raku-bot> <stevied#8273> subset Char of Str where .chars == 1;

[23:19] <discord-raku-bot> <stevied#8273> my &render-list := template :(Str:D $app1,

[23:19] <discord-raku-bot> <stevied#8273>                               Str:D $app2,

[23:19] <discord-raku-bot> <stevied#8273>                               Char $key),

[23:19] <discord-raku-bot> <stevied#8273>                               'practice.json'.IO.slurp;

[23:19] <discord-raku-bot> <stevied#8273> print render-list 'one', 'two', 'p',;

[23:19] <discord-raku-bot> <stevied#8273> ```

[23:21] <MasterDuke> hm. then i'm out of suggestions. might trying pinging lizmat, vrurg, SmokeMachine, gfldex, codesections, etc

[23:22] <discord-raku-bot> <stevied#8273> I guess what I'l have to do is just create a wrapper that does the checks on the arguments and then calls template

[23:22] <MasterDuke> i'm off to sleep, good luck

[23:23] <discord-raku-bot> <stevied#8273> not a big deal. I'm just farting around trying to learn

[23:23] <discord-raku-bot> <stevied#8273> thanks. bye.

[23:52] <discord-raku-bot> <stevied#8273> I have this signature: `sub triple(Str:D $app1, Str:D $app2, Str:D $key where .chars == 1, Str $mod? where * ~~ any @modifiers = 'command' ) {}`

[23:52] <discord-raku-bot> <stevied#8273> I want the last argument to be optional

[23:52] <discord-raku-bot> <stevied#8273> when I don't pass in the 4th arg, I get an error:

[23:52] <discord-raku-bot> <stevied#8273> `Constraint type check failed in binding to parameter '$mod'; expected anonymous constraint to be met but got Str (Str)`

