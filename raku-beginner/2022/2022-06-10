[00:49] *** jgaz left
[01:31] *** frost joined
[04:53] *** Kaiepi left
[04:55] <discord-raku-bot> <stevied#8273> If anyone is bored and is looking for a distraction, I wrote an answer to my own question on SO for my code that uses a class factory to generate similar classes concisely. If you see a way I can improve or streamline this code further, please post a comment there on SO. Thanks!

[05:02] <discord-raku-bot> <stevied#8273> oh, and I couldn't figure out how to put the attributes directly into the Dimension class without getting an error so I created them on the fly. Not sure if it's possible to put them into Dimension class directly.

[05:37] *** kjp joined
[08:12] *** Kaiepi joined
[08:19] *** lizmat_ is now known as lizmat

[08:35] *** kueppo joined
[08:48] <kueppo> Hi there, just going through the manual, I've no clue of what the ~ twigil is used for, I guess I'm not gonna have to use it in future or ...? '=D

[08:50] <lizmat> kueppo: probably not, indeed

[08:50] <kueppo> Noted

[08:51] <lizmat> not until RakuAST has landed, I'd say

[09:32] *** kueppo left
[09:52] *** kueppo joined
[10:02] *** kueppo left
[10:35] *** Kaiepi left
[10:40] *** Kaiepi joined
[10:45] *** kueppo joined
[10:50] *** kueppo left
[11:44] *** Kaiepi left
[11:48] *** Kaiepi joined
[12:11] *** jgaz joined
[12:46] *** kueppo joined
[13:32] *** frost left
[15:10] *** m_athias left
[15:12] *** m_athias joined
[16:02] *** kueppo left
[17:03] <SmokeMachine> stevied: is there a link for that?

[17:04] *** jgaz left
[17:06] <SmokeMachine> this one? https://stackoverflow.com/questions/72554455/how-can-i-create-a-factory-for-classes/72569192#72569192

[17:22] <discord-raku-bot> <Nemokosch#9980> ngl you guys are really using Raku in sophisticated and very diverse ways

[17:29] *** jgaz joined
[17:31] *** jgaz left
[17:35] <discord-raku-bot> <stevied#8273> oh, sorry, yeah, forgot the link. yeah, that's it

[17:37] <discord-raku-bot> <stevied#8273> i have this function sig:

[17:37] <discord-raku-bot> <stevied#8273> `sub derived-factory(Hash:D %derived, Str:D $type, Str:D $base, Bool:D $imp = False)`

[17:37] <discord-raku-bot> <stevied#8273> I'm passing a hash into it, I think, but I'm getting this error:

[17:37] <discord-raku-bot> <stevied#8273> `Type check failed in binding to parameter '%derived'; expected Associative[Hash] but got Hash ({:Gt(${:den(1.0), :n...)`

[17:38] <discord-raku-bot> <stevied#8273> why does it say expected Associative[Hash]?

[17:39] <discord-raku-bot> <stevied#8273> I don't even know the difference between the two

[17:43] <discord-raku-bot> <stevied#8273> ok, if I change it the `%` to the `$` sign it works. I suppose this is one of those container things

[17:43] <discord-raku-bot> <stevied#8273> or it gets converted to a list or something, right? I forget.

[17:49] <discord-raku-bot> <Nahita#3882> `%` means the variable is an (or "does") Associative (for which the default type is Hash); if you put some type before it (e.g, Hash you did), it indicates what the type of *key*s of the Associative is restricted to. So it expects an Associative where keys are Hashes; `Associative[Hash]` signals this (i.e., some variable declared as `my Hash %h;` is to be passed). [Similarly you can constrain the type 

[17:49] <discord-raku-bot> <Nahita#3882> (at least) two resolutions: as you did `Hash $var`, or `%var` only

[17:49] <discord-raku-bot> <stevied#8273> ah, ok, yeah, that rings a bell

[17:50] <discord-raku-bot> <stevied#8273> so it's like a argument checker, not a sigil

[17:50] <discord-raku-bot> <stevied#8273> thanks!

[18:05] <SmokeMachine> Hash:D %derived means exactly a Associative (that's what the % mean) where each value is a Hash:D

[18:05] <SmokeMachine> sorry, just ready Nahita's answer...

[18:07] <SmokeMachine> stevied: I've added a suggestion on your question to create a `dimension` keyword...

[18:23] *** jgaz joined
[18:59] <discord-raku-bot> <stevied#8273> thanks, i'll check it out

[19:35] <discord-raku-bot> <stevied#8273> what's the best way to determine if an object has a specific attribute?

[19:39] <discord-raku-bot> <stevied#8273> I came up with this: `say $.dimension.^attributes.Str.contains: 'multiplier';` but this seems pretty hacky

[19:40] <lizmat> m: dd q/$!value/ (elem) 42.^attributes>>.name

[19:40] <camelia> rakudo-moar b5a82d28b: OUTPUT: ¬´Bool::True‚ê§¬ª

[19:41] <discord-raku-bot> <stevied#8273> ok, so seems like there's not built in way

[19:41] <discord-raku-bot> <stevied#8273> ok, so seems like there's no built in way

[19:42] <lizmat> well, that *is* a  built-in way as no NQP is involved :-)

[19:42] <lizmat> well, externally  :-)

[19:45] <discord-raku-bot> <stevied#8273> still couldn't tell you waht NGP stands for üôÇ

[19:45] <discord-raku-bot> <stevied#8273> Q

[19:46] <lizmat> Not Quite Perl

[19:46] <lizmat> originally

[19:47] <lizmat> m: sub has-attribute(\object, Str:D $name) { $name (elem) object.^attributes.map({.name.substr(2)}) }; say 42.&has-attribute("value")

[19:47] <camelia> rakudo-moar b5a82d28b: OUTPUT: ¬´True‚ê§¬ª

[19:47] <discord-raku-bot> <stevied#8273> oh yeah

[19:47] <discord-raku-bot> <Nahita#3882> there are `$obj.^can("attr")` and `$obj.?attr` but not sure if these are equivalent to what @lizmat showed above fully

[19:48] <lizmat> ^can only tells you it can do a *method*

[19:48] <discord-raku-bot> <Nahita#3882> `^can` returns an empty list if not found, `.?` returns Nil

[19:48] <SmokeMachine> those are for methods...

[19:48] <lizmat> an attribute *can* have an accessor method, but if it's private, it doesn't

[19:48] <lizmat> and methods can also be just: methods  :-)

[19:49] <SmokeMachine> m: class Bla { has $.a; has $!b }; say Black.^can("a"); say Black.^can("b")

[19:49] <camelia> rakudo-moar b5a82d28b: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    Black used at line 1. Did you mean 'Block'?‚ê§‚ê§¬ª

[19:49] <discord-raku-bot> <Nahita#3882> oh okay thanks

[19:49] <SmokeMachine> m: class Bla { has $.a; has $!b }; say Black.^can("a"); say Bla.^can("b")

[19:49] <camelia> rakudo-moar b5a82d28b: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Undeclared name:‚ê§    Black used at line 1. Did you mean 'Block'?‚ê§‚ê§¬ª

[19:49] <SmokeMachine> m: class Bla { has $.a; has $!b }; say Bla.^can("a"); say Bla.^can("b")

[19:49] <camelia> rakudo-moar b5a82d28b: OUTPUT: ¬´(a)‚ê§()‚ê§¬ª

[19:51] <discord-raku-bot> <Nahita#3882> where is Raku on EAFP vs LBYL? is there a strong tendency to either

[19:51] <discord-raku-bot> <Nahita#3882> or TIMTOWTDI and discussion is moot

[19:58] <jgaz> If I want to split my code off into smaller module files (in the same dir as my main code) how do I do that?

[19:59] <jgaz> That is, how do I include the external module?

[20:00] <lizmat> with "use"  (and make sure to add the to the META6.json :-)

[20:03] <jgaz> So, even when it's a local file I still have to use META6.jason?

[20:03] <jgaz> err... META6.json? What's the point/

[20:05] <lizmat> no, you don't, but it is a good practice  :-)

[20:05] <lizmat> -I has its disadadvantages

[20:06] <jgaz> Sorry, I mean what is META6 in the first place? What is the function of the file?

[20:10] <lizmat> it is needed to create an installable distribution of your module

[20:10] <lizmat> it keeps information on what it provides, what it needs, who the authors are, and the authority etc.

[20:17] <jgaz> lizmat: okay, gotcha.

[20:45] *** Kaiepi left
[20:54] *** jgaz left
[21:46] *** Kaiepi joined
[21:49] *** Kaipei joined
[21:51] *** Kaiepi left
[23:08] *** kueppo joined
[23:12] <kueppo> I searched but found nothing

[23:12] <kueppo> @a-cloned.push: "k$i" => $i.clone;

[23:12] <kueppo> @a-cloned.push("k$i" => $i.clone);

[23:12] <kueppo> What's the name for the first syntax, I haven't seen such a signature syntax from the signature doc but appears in some examples.

[23:14] <kueppo> s/signature/argument/

[23:19] <kueppo> from here https://docs.raku.org/language/variables#The_state_declarator

