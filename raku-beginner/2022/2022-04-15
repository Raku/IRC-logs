[01:04] *** frost joined
[01:14] *** razetime joined
[02:07] *** zacts joined
[03:05] *** zacts left
[03:16] *** Guest35 left
[03:33] *** guifa joined
[04:01] *** zacts joined
[05:00] *** zacts left
[11:13] <deadmarshal> I've read that Raku is slower than Perl. why is that? Is it because it's based on jvm and not written in C? or what?

[11:24] *** discord-raku-bot left
[11:24] *** discord-raku-bot joined
[11:37] <gfldex> deadmarshal: It is slower because it comes with more batteries and had less time to be optimised. Raku is catching up and is faster for some workloads already.

[11:42] <deadmarshal> great 

[12:06] *** zacts joined
[12:20] *** razetime left
[12:33] *** razetime joined
[12:39] <discord-raku-bot> <Anton Antonov#7232> <@788061414769164348>  I think the techniques in Big Ball of Mud (BBM) apply to your problem (http://www.laputan.org/mud/). If you do not want to examine each file and its relation to others -- and that is totally fine! -- then you should come up with some strategy for automatic "name spacing" (and implement it in Raku.) I think "SHEARING LAYERS" from BBM applies the most to what you describe.

[12:41] <discord-raku-bot> <Anton Antonov#7232> I think you should make suitable Raku roles. A discussion on similar issue can be found here: https://stackoverflow.com/q/67564394 .

[12:43] <discord-raku-bot> <Anton Antonov#7232> I think you should make suitable Raku roles. A discussion on a similar issue can be found here: https://stackoverflow.com/q/67564394 .

[12:45] <discord-raku-bot> <Anton Antonov#7232> <@127299883806883840>  For the data science / machine learning projects I have in Raku (recommenders, prefix trees, data wrangling) I find to Raku to be between 2 and 10 times slower than "established" players, like, Mathematica, Python, or R.

[12:46] <discord-raku-bot> <Anton Antonov#7232> <@127299883806883840>  For the data science / machine learning projects I have in Raku (recommenders, prefix trees, data wrangling) I find to Raku to be between 2 and 10 times slower than "established" players, like, Mathematica, Python, or R. (And sometimes 100 times slower...)

[12:47] <discord-raku-bot> <Anton Antonov#7232> <@127299883806883840>  For the data science / machine learning projects I have in Raku (recommenders, prefix trees, data wrangling) I find Raku to be between 2 and 10 times slower than "established" players, like, Mathematica, Python, or R. (And sometimes 100 times slower...)

[13:09] *** TempIRCLogger joined
[13:59] *** zacts left
[14:04] *** Guest35 joined
[14:44] *** frost left
[15:28] *** razetime left
[15:38] *** razetime joined
[15:47] <guifa> deadmarshal as one example: perl has a much faster start up time.  But as soon as you import the OO modules, the start up time is much more similar.  It's just that Perl doesn't require OO, but it's a fundamental part of Raku

[16:01] <deadmarshal> guifa: right good point

[16:29] *** wingfold joined
[16:44] *** wingfold left
[16:45] *** razetime left
[18:29] *** guifa left
[18:43] <MasterDuke> deadmarshal: fyi, lizmat has been doing a lot of work recently on some micro-optimizations for startup and compilation. startup probably won't be as fast as perl even at the end, but it's being worked on

[18:49] <deadmarshal> MasterDuke: Great! can't wait for it

[22:15] *** saint- joined
[22:30] <discord-raku-bot> <klebs#2209> it wasn't so bad after all -- i restructured the repository a bit so that it could be easily reorganized.  Basically, all that had to be done was to create separate directories for each language, treat every file within as a unit module, and update the use statements throughout.  It was a nontrivial operation, but not all that invasive, ultimately.

[22:32] <discord-raku-bot> <klebs#2209> I do have another issue, though.  It shows up as the following error: `===SORRY!===Object of type X in QAST::WVal, but not in SC`

[22:32] <discord-raku-bot> <klebs#2209> any idea what this means?

[22:54] <discord-raku-bot> <klebs#2209> it wasn't so bad after all -- i restructured the repository a bit so that it could be easily reorganized.  Basically, all that had to be done was to create separate directories for each language, treat every file within as a unit module, and update the use statements throughout.  It was a nontrivial operation, but not all that invasive, ultimately.  flat hierarchies, as long as they remain a certain siz

[22:57] <discord-raku-bot> <klebs#2209> it wasn't so bad after all -- i restructured the repository a bit so that it could be easily reorganized.  Basically, all that had to be done was to create separate directories for each language, treat every file within as a unit module, and update the use statements throughout.  It was a nontrivial operation, but not all that invasive, ultimately.  flat hierarchies, as long as they remain a certain siz

[22:57] <saint-> Hi, I was wondering what was wrong with trying to use this grammar to parse into just separate lines? https://www.toptal.com/developers/hastebin/ecijorefon.lua

[23:04] <saint-> Even something like this isn't working https://www.toptal.com/developers/hastebin/ixejenopop.lua

[23:14] <saint-> Whoa the single quotes were screwing things up

