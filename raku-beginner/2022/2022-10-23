[01:16] *** habere-et-disper joined
[01:29] <habere-et-disper> How do I ascertain the name of the calling method within a method?

[01:33] *** Kaipei left
[02:28] *** habere-et-disper left
[07:01] *** Kaipei joined
[08:12] *** razetime joined
[08:14] <discord-raku-bot> <gfldex> m:put .package.raku, '::', .name with callframr(1).code;

[08:54] <lizmat> m: sub a() { dd &?BLOCK.name }; a

[08:54] <camelia> rakudo-moar d9059e3fe: OUTPUT: «"a"␤»

[09:43] *** razetime left
[10:19] *** razetime joined
[13:22] *** habere-et-disper joined
[14:08] *** habere-et-disper left
[14:44] *** lizmat_ joined
[14:48] *** lizmat left
[16:13] *** habere-et-disper joined
[17:40] *** razetime left
[18:18] *** lizmat_ is now known as lizmat

[18:19] *** lizmat left
[18:19] *** lizmat joined
[18:44] <discord-raku-bot> <lakmatiol> m: say TR:i/abc/123/ given "abC"

[18:44] <discord-raku-bot> <lakmatiol> why does this not actually do case insesitive transliteration

[18:44] <discord-raku-bot> <lakmatiol> why does this not actually do case insensitive transliteration

[18:48] <[Coke]> don't think it takes an :i

[18:49] <[Coke]> TR same as tr same as .trans

[18:53] <discord-raku-bot> <lakmatiol> IG the next question is why isn't it an error

[19:07] <discord-raku-bot> <Nemokosch> Or why it doesn't take an :i, to be honest

[19:26] *** habere-et-disper left
[19:38] <guifa> it's not an error because it just passes :i probably as an adverb to Str.trans(), and trans() allows arbitrary pairs sent, so it won't want to error on random named args

[19:40] <discord-raku-bot> <Nahita> :Z for example is a compile time error, so there's an inconsistency there unfortunately

[19:41] <guifa> m: Str.^find_method('trans').wrap( -> |c { say c } ); tr:i/a/A/ given 'a';

[19:42] <camelia> rakudo-moar d9059e3fe: OUTPUT: «\("a", "a" => "A", :i(1))␤Cannot modify an immutable Str (a)␤  in block <unit> at <tmp> line 1␤␤»

[19:42] <guifa> anyways, there we can see the argument is being passed through, at least.

[19:43] <guifa> It seems like the grammar will happily allow all of the regex modifiers, even though trans doesn't support them

[19:43] <guifa> m is allowed too, for instance

[20:36] <discord-raku-bot> <lakmatiol> ah, funky

[20:51] *** Nemokosch joined
[21:22] *** Nemokosch left
[23:01] *** [Coke]__ joined
[23:04] *** [Coke] left
[23:17] *** Kaipei left
[23:39] *** deoac joined
[23:40] <deoac> What is the difference between `Rat` and `Rat()` ?

[23:46] *** z4kz joined
[23:52] *** deoac left
[23:54] *** frost1 joined
