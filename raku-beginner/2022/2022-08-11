[00:53] *** Kaiepi left
[02:09] *** deoac joined
[02:11] <deoac>         $foo = '-s';

[02:11] <deoac>         my @arr = < alice -bob cat -soup dog>;

[02:11] <deoac>  How to I determine if any elements in @arr match $foo, without looping thru the array?

[02:41] *** deoac left
[03:23] *** deoac joined
[03:30] <discord-raku-bot> <pelevesque> https://andrewshitov.com/2019/09/09/check-if-an-element-is-in-a-list-in-perl-6/

[03:30] <discord-raku-bot> <pelevesque> https://stackoverflow.com/questions/35423037/how-to-determine-if-an-element-exists-in-a-perl-6-array

[03:37] *** deoac left
[05:04] *** Ghost10 joined
[05:05] *** Ghost10 left
[05:12] *** deoac joined
[05:14] <deoac> But I need a partial match.  '-s' isn't an element of the array.  But an element contains it.

[05:35] *** deoac left
[06:02] <CIAvash> `@arr.any.&(*.contains: '-s')`

[06:17] *** frost joined
[06:47] *** discord-raku-bot left
[06:47] *** discord-raku-bot joined
[06:54] *** Kaiepi joined
[07:25] <discord-raku-bot> <Nahita> or `@arr.grep(*.contains: $foo).so`

[08:13] *** dakkar joined
[09:11] <lizmat> m: say < alice -bob cat -soup dog>.contains('-s')

[09:11] <camelia> rakudo-moar 10feda116: OUTPUT: «Calling '.contains' on a List, did you mean 'needle (elem) list'?␤True␤  in block <unit> at <tmp> line 1␤»

[09:11] <lizmat> m: say quietly < alice -bob cat -soup dog>.contains('-s')

[09:11] <camelia> rakudo-moar 10feda116: OUTPUT: «True␤»

[09:12] <lizmat> though this *looks* like it is following the requirement to not loop through the array

[09:12] <lizmat> it actually does to create the Str representation

[09:12] <lizmat> and it is actually the worst case always

[09:13] <lizmat> m: say <alice -bob cat -soup dog>.first: *.contains('-s')

[09:13] <camelia> rakudo-moar 10feda116: OUTPUT: «-soup␤»

[09:13] <lizmat> m: say so <alice -bob cat -soup dog>.first: *.contains('-s')

[09:13] <camelia> rakudo-moar 10feda116: OUTPUT: «True␤»

[09:13] <lizmat> would be much better, as it would short-circuit as soon as it found it, so in this case, only look at 4 of the 5 elements in the list

[09:14] <lizmat> ^^ deoac

[09:25] <lizmat> oh, and it looks to me that the '-s' should be at the start of an element

[09:25] <lizmat> if that is true, then this is better:

[09:25] <lizmat> m: say so <alice -bob cat -soup dog>.first: *.starts-with('-s')

[09:25] <camelia> rakudo-moar 10feda116: OUTPUT: «True␤»

[13:15] *** deoac joined
[13:17] <deoac> Thank you lizmat.  That's much better than my manual loop.

[13:44] *** deoac left
[14:08] *** frost left
[14:55] *** razetime joined
[15:37] *** razetime left
[15:49] *** razetime joined
[16:23] *** camelia left
[16:23] *** m_athias left
[16:25] *** m_athias joined
[16:27] *** dakkar left
[16:28] *** camelia joined
[17:05] *** razetime left
[17:08] *** Kaipei joined
[17:11] *** Kaiepi left
[17:32] *** Kaiepi joined
[17:35] *** Kaipei left
[19:12] *** Kaiepi left
[19:57] *** Kaiepi joined
[22:59] *** Kaiepi left
[23:58] *** Kaiepi joined
