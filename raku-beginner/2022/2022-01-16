[00:13] <discord-raku-bot> <stevied#8273> alright, thanks to everyone who has helped me. I was able to convert my module over to OO. It works, though I'm sure there's lots of room for improvement. Sorry it won't be useful to probably anyone: https://github.com/sdondley/Karabiner-CompModGenerator

[04:50] *** CIAvash joined
[10:44] <discord-raku-bot> <gfldex#8222> @stevied#8273 You can do even more OO in Template.rakumod by replacing line 20-26 with `render-list(|@values).join.trim-trailing`

[10:59] *** Guest35 joined
[11:00] *** Guest35 left
[11:04] <discord-raku-bot> <gfldex#8222> m:```

[11:04] <discord-raku-bot> <gfldex#8222>     my @params = <a b c>.map: { Parameter.new(:name('$' ~ $_)) };

[11:04] <discord-raku-bot> <gfldex#8222>     my $sig = Signature.new(:@params);

[11:04] <discord-raku-bot> <gfldex#8222>     say $sig;

[11:04] <discord-raku-bot> <gfldex#8222> ```

[11:05] <discord-raku-bot> <gfldex#8222> m:```

[11:05] <discord-raku-bot> <gfldex#8222>     my @params = <a b c>.map: { Parameter.new(:name('$' ~ $_)) };

[11:05] <discord-raku-bot> <gfldex#8222>     my $sig = Signature.new(:@params, :returns(Str));

[11:05] <discord-raku-bot> <gfldex#8222>     say $sig;

[11:05] <discord-raku-bot> <gfldex#8222> ```

[11:06] <discord-raku-bot> <stevied#8273> ok, cool. I'll check it out

[11:06] <discord-raku-bot> <gfldex#8222> @stevied#8273 Please note that Rakudo doesn't like to precompile MONKEYs.

[11:06] <discord-raku-bot> <stevied#8273> funny, I just posted a question to rakuland on reddit about this

[11:07] <discord-raku-bot> <stevied#8273> rakulang

[11:07] <discord-raku-bot> <stevied#8273> https://www.reddit.com/r/rakulang/comments/s59heo/how_can_i_make_my_raku_module_more_elegantraku/

[11:08] <discord-raku-bot> <stevied#8273> ah, yes. a signature object. that is so obvious I missed it ðŸ™‚

[11:09] <discord-raku-bot> <gfldex#8222> I'm checking right now if that is an ENODOC.

[11:11] <discord-raku-bot> <gfldex#8222> Signature.new and Parameter.new are not in roast. So this might be an ENOSPEC.

[11:11] <discord-raku-bot> <stevied#8273> not familiar with those terms

[11:13] <discord-raku-bot> <gfldex#8222> ENODOC means: No where to be found on https://docs.raku.org/

[11:13] <discord-raku-bot> <gfldex#8222> ENOSPEC means: No where to be found in https://github.com/raku/roast

[11:15] <discord-raku-bot> <gfldex#8222> Any advanced Raku-beginner (you can read most Raku code) is well advised to read roast. This can lead to many ohh-that-works-too-?-moments.

[11:17] <discord-raku-bot> <stevied#8273> yeah, so using .join doesn't work. The render-list function returns a sequence

[11:18] <discord-raku-bot> <stevied#8273> ok, thanks. I'll poke through that and see what I can figure out

[11:20] <discord-raku-bot> <stevied#8273> actually, I think the larger problem is Template::Classic uses `gather` so I have to make separate class to $out to get everything out. There's probably a better way, but using a block method was all I could figure out

[11:20] <discord-raku-bot> <stevied#8273> actually, I think the larger problem is Template::Classic uses `gather` so I have to make separate calss to $out to get everything out. There's probably a better way, but using a block method was all I could figure out

[11:28] <discord-raku-bot> <gfldex#8222> m:```

[11:28] <discord-raku-bot> <gfldex#8222>     class C {

[11:28] <discord-raku-bot> <gfldex#8222>         has $.foo;

[11:28] <discord-raku-bot> <gfldex#8222>         has $.bar;

[11:28] <discord-raku-bot> <gfldex#8222>         method desc_gen {

[11:28] <discord-raku-bot> <gfldex#8222>             say self.^attributesÂ».nameÂ».substr(2).map: { $_ => self."$_"() };

[11:28] <discord-raku-bot> <gfldex#8222>         }

[11:28] <discord-raku-bot> <gfldex#8222>     }

[11:28] <discord-raku-bot> <gfldex#8222>     C.new(:foo(42)).desc_gen;

[11:28] <discord-raku-bot> <gfldex#8222> ```

[11:28] <discord-raku-bot> <gfldex#8222> That should eliminate the 2nd EVAL.

[11:29] <discord-raku-bot> <gfldex#8222> `.join` should work on a `Seq`. Sometimes you have to sneak a `.cache` in, tho.

[11:30] <discord-raku-bot> <stevied#8273> @gfldex#8222 that signature object worked perfectly. nice.

[11:32] <discord-raku-bot> <stevied#8273> just had to change :returns(Str) to :returns(Seq).

[11:36] <discord-raku-bot> <stevied#8273> that code above is pretty tricky. man

[11:42] <discord-raku-bot> <stevied#8273> seems to work, though. awesome

[11:42] <discord-raku-bot> <stevied#8273> i'll have to study that

[11:57] <discord-raku-bot> <stevied#8273> @gfldex#8222 OK! I still got an amateurish loop to extract out the attributes names and value but got rid of the eval. Thanks!

[11:57] <discord-raku-bot> <stevied#8273> ```

[11:57] <discord-raku-bot> <stevied#8273>     my @test_values = self.^attributesÂ».nameÂ».substr(2).map: { $_, self."$_"() };

[11:57] <discord-raku-bot> <stevied#8273>     for @test_values -> $pair {

[11:57] <discord-raku-bot> <stevied#8273>         push @usage_names, $pair[0];

[11:57] <discord-raku-bot> <stevied#8273>         push @values, $pair[1];

[11:57] <discord-raku-bot> <stevied#8273>     }

[11:57] <discord-raku-bot> <stevied#8273> ```

[12:09] <discord-raku-bot> <stevied#8273> Tried using .join.cache and .cache.join methods. no luck. I keep getting ... for the output. maybe I'm using .cache wrong?

[12:14] <discord-raku-bot> <gfldex#8222> If you get `...` you are calling `.gist` indirectly.

[12:18] <discord-raku-bot> <stevied#8273> here's the Template::Classic module: https://modules.raku.org/dist/Template::Classic:cpan:CHLOEKEK/lib/Template/Classic.pm6

[12:19] <discord-raku-bot> <stevied#8273> it does a lazy gather. I still haven't figure out how that works, exactly.

[14:30] <discord-raku-bot> <gfldex#8222> m: dd (1..10).grep(* %% 2).map(* * 10).head(2);

[14:31] <discord-raku-bot> <gfldex#8222> m:```

[14:31] <discord-raku-bot> <gfldex#8222>     class Generator does Iterable {

[14:31] <discord-raku-bot> <gfldex#8222>         has $.code;

[14:31] <discord-raku-bot> <gfldex#8222>         has $.input;

[14:31] <discord-raku-bot> <gfldex#8222>         method iterator {

[14:31] <discord-raku-bot> <gfldex#8222>             class :: does Iterator {

[14:31] <discord-raku-bot> <gfldex#8222>                 has $.code;

[14:31] <discord-raku-bot> <gfldex#8222>                 has $.input;

[14:31] <discord-raku-bot> <gfldex#8222>                 method pull-one {

[14:31] <discord-raku-bot> <gfldex#8222>                     loop {

[14:31] <discord-raku-bot> <gfldex#8222>                         my \value = $.input.pull-one;

[14:31] <discord-raku-bot> <gfldex#8222>                         next if value =:= Empty;

[14:32] <discord-raku-bot> <gfldex#8222> @stevied#8273 the two examples show what is going on under the hood. There is more to laziness, this is quite simplified.

[16:11] <discord-raku-bot> <tailgate#1731> if I have a string i know is even length, how do I break it up into a list of 2 character substrings? e.g "ABCDEF" -> ("AB" "CD" "EF")

[16:13] <lizmat> "ABCDEF".comb(2)

[16:17] <discord-raku-bot> <tailgate#1731> thanks!

[17:20] <discord-raku-bot> <stevied#8273> ok, thanks! I'l be looking at all your suggestions and code for my homework today

[19:15] *** discord-raku-bot left
[19:15] *** discord-raku-bot joined
[19:20] *** discord-raku-bot left
[19:20] *** discord-raku-bot joined
[19:52] *** discord-raku-bot left
[19:52] *** discord-raku-bot joined
[19:56] *** discord-raku-bot left
[19:57] *** discord-raku-bot joined
[20:18] *** discord-raku-bot left
[20:18] *** discord-raku-bot joined
[20:22] *** gfldex left
[20:22] *** gfldex joined
[20:23] *** discord-raku-bot left
[20:23] *** discord-raku-bot joined
[21:19] *** discord-raku-bot left
[21:19] *** discord-raku-bot joined
[21:22] *** gfldex left
[21:22] *** gfldex joined
[22:13] *** discord-raku-bot left
[22:13] *** discord-raku-bot joined
[22:17] *** discord-raku-bot left
[22:18] *** discord-raku-bot joined
[23:52] *** Manifest0 left
