[01:19] *** deoac joined
[01:21] <deoac> How do you declare a Hash of Hash of Int?

[01:52] <deoac> And how do you initialize it in the `my` statement?

[02:06] *** deoac left
[03:32] *** frost joined
[08:23] <lizmat> m: my Hash[Int] %h; %h<a> = (my Int %i = b => 42); dd %h

[08:23] <camelia> rakudo-moar 10feda116: OUTPUT: «Hash[Hash[Int] %h = (my Hash[Int] % = :a($(my Int % = :b(42))))␤»

[08:23] <lizmat> m: my Hash[Int] %h; %h<a> = (my Int % = b => 42); dd %h

[08:23] <camelia> rakudo-moar 10feda116: OUTPUT: «Hash[Hash[Int] %h = (my Hash[Int] % = :a($(my Int % = :b(42))))␤»

[10:55] *** frost left
[13:16] *** jaguart joined
[13:18] <jaguart> Would someone please point me to hints for the Moo eqiv of lazy builder

[13:19] <jaguart> ie is lazy building readily supported in Raku classes?

[13:23] <lizmat> jaguart: please remind me of the Moo definition of a lazy builder ?

[13:24] <jaguart> class attribute: has $expensive is lazy, builder => sub { Expensive->new( $_[0]->tweak ) };

[13:25] <jaguart> so that $expensive only gets built when first used/accessed

[13:26] <lizmat> not in core Rakudo afaik

[13:26] <lizmat> in module space, maybe

[13:26] <jaguart> thanks - I'll search in raku.land

[13:27] <lizmat> https://raku.land/zef:jonathanstowe/Attribute::Lazy

[13:27] <jaguart> yeah - doh that was fast, sorry should have checked there first :blush

[13:28] <lizmat> yeah...  no worries

[13:46] <discord-raku-bot> <Nahita> there's also this i think: <https://raku.land/zef:vrurg/AttrX::Mooish>

[13:59] <jaguart> thanks :) Attribute::Lazy seems to be working fine -> will check the Mooish too

[14:12] <lizmat> jaguart: possibly also of interest: https://raku.land/zef:lizmat/Object::Delayed

[14:30] *** razetime joined
[15:18] *** razetime left
[15:26] *** razetime joined
[15:44] *** discord-raku-bot left
[15:44] *** discord-raku-bot joined
[15:50] *** discord-raku-bot left
[15:50] *** discord-raku-bot joined
[16:15] <jaguart> what is the different intent for submethod BUILD vs submethod TWEAK ?

[16:16] <lizmat> jaguart: tomorrow: https://conf.raku.org/talk/183  Be smart – be lazy! Provided to you by AttrX::Mooish

[16:16] <lizmat> TWEAK is run *after* all attribute initialization has been done

[16:17] <discord-raku-bot> <Nemokosch> oh

[16:17] <lizmat> BUILD runs before that...   generally, it is recommended to use TWEAK nowadays

[16:17] <discord-raku-bot> <Nemokosch> good to know that we get to hear about this

[16:17] <jaguart> oh thanks for the conference pointer too :)))

[16:37] <jaguart> hmmm - been arguing with Semantic::Versioning until I realised my $v.^name is 'Version' - :o there's a builtin Version class !!! ~jaw-drop

[16:39] <lizmat> m: dd v0.0.1.^name

[16:39] <camelia> rakudo-moar 10feda116: OUTPUT: «"Version"␤»

[16:39] <lizmat> even the version literals are Version objects :-)

[16:41] *** deoac joined
[16:42] <jaguart>  I am amazed, agog and astonished - wowser!

[16:42] <lizmat> Raku comes with a *lot* of things built in

[16:44] <lizmat> m: say π

[16:44] <camelia> rakudo-moar 10feda116: OUTPUT: «3.141592653589793␤»

[16:44] <lizmat> m: say τ

[16:44] <camelia> rakudo-moar 10feda116: OUTPUT: «6.283185307179586␤»

[16:44] <lizmat> m: say 42 ∈ (17,66,84,42,15)

[16:44] <camelia> rakudo-moar 10feda116: OUTPUT: «True␤»

[17:22] *** razetime left
[20:20] *** discord-raku-bot left
[20:20] *** discord-raku-bot joined
