[00:00] <habere-et-disper> Thanks again!

[00:01] <discord-raku-bot> <Nemokosch> I'm not sure what to do about it but I can understand that the situation is far from optimal...

[00:05] *** NemokoschKiwi joined
[00:05] *** NemokoschKiwi left
[00:08] <discord-raku-bot> <Nemokosch> https://github.com/Raku/doc/blob/master/writing-docs/EXAMPLES.md#preambles

[00:16] <discord-raku-bot> <Nemokosch> to be honest, I don't think that justifies the omission of parts that are required for the proclaimed output

[00:17] *** Kaiepi left
[00:37] <discord-raku-bot> <Nemokosch> FYI https://github.com/Raku/doc/issues/4138

[00:43] *** habere-et-disper left
[01:20] *** razetime joined
[01:31] *** sgrs left
[03:06] *** Kaiepi joined
[03:43] *** MasterDuke left
[05:03] *** Heptite left
[07:52] *** razetime left
[08:10] *** razetime joined
[08:29] *** Kaiepi left
[09:11] *** dakkar joined
[09:21] *** razetime left
[09:22] *** razetime joined
[10:03] *** Kaiepi joined
[10:34] *** equinox joined
[10:41] *** mat40 joined
[10:45] *** mat40 left
[12:04] *** habere-et-disper joined
[12:45] *** equinox left
[12:50] <discord-raku-bot> <Nemokosch> Hello, how can I figure out the exact number of significant bits of an Int?

[13:27] *** sgrs joined
[13:55] *** equinox joined
[14:05] *** habere-et-disper left
[14:28] <discord-raku-bot> <yabobay> ```pl

[14:28] <discord-raku-bot> <yabobay> my &some = sub {

[14:28] <discord-raku-bot> <yabobay>   sub ($thing) {

[14:28] <discord-raku-bot> <yabobay>   }

[14:28] <discord-raku-bot> <yabobay> }();

[14:28] <discord-raku-bot> <yabobay> ```

[14:28] <discord-raku-bot> <yabobay> is there a more proper way to do closures?

[14:33] <discord-raku-bot> <Nemokosch> Well, why did you wrap it into a function that you execute right away? What is the purpose?

[14:33] <discord-raku-bot> <yabobay> in my actual code i make some variables in that anonymous function

[14:33] <discord-raku-bot> <yabobay> that are used by the function inside it

[14:35] *** equinox left
[14:38] <discord-raku-bot> <Nemokosch> you know... I'd be curious if a simple do block is sufficient

[14:39] <discord-raku-bot> <Nemokosch> ```perl

[14:39] <discord-raku-bot> <Nemokosch> my &some = do {

[14:39] <discord-raku-bot> <Nemokosch>   # Last instruction

[14:39] <discord-raku-bot> <Nemokosch>   sub ($thing) {

[14:39] <discord-raku-bot> <Nemokosch>   }

[14:39] <discord-raku-bot> <Nemokosch> };

[14:39] <discord-raku-bot> <Nemokosch> ```

[14:42] <discord-raku-bot> <yabobay> isn't a do block the same thing as {}()?

[14:44] <discord-raku-bot> <Nemokosch> > do is equivalent, as in other cases, to surrounding a statement with a parenthesis. It can be used as an alternative with a (possibly more) straightforward syntax.

[14:44] <discord-raku-bot> <Nemokosch> well, sounds like that

[14:44] <discord-raku-bot> <Nemokosch> but that does look better, no? xD

[14:50] <discord-raku-bot> <yabobay> it does

[14:50] <discord-raku-bot> <yabobay> i kinda phrased my question wrong

[14:50] <discord-raku-bot> <yabobay> i meant that it being the same thing is what i wanted

[14:50] <discord-raku-bot> <Nemokosch> https://docs.raku.org/language/functions#index-entry-closures

[14:50] <discord-raku-bot> <Nemokosch> > All code objects in Raku are closures, which means they can reference lexical variables from an outer scope.

[14:50] <discord-raku-bot> <Nemokosch> so I'd assume that you don't even need them to be subroutines, blocks will do

[14:59] <discord-raku-bot> <Kaiepi> `do`'s like writing `-> { }()`

[15:00] <discord-raku-bot> <Kaiepi> should be ok here

[15:04] <discord-raku-bot> <Kaiepi> if the block's error prone, maybe exposing a `sub named() { }` would be more appropriate

[15:04] <discord-raku-bot> <Kaiepi> then it could be tested

[15:25] <discord-raku-bot> <yabobay> there's a Inline::Python module which can be used like this:

[15:25] <discord-raku-bot> <yabobay> ```pl

[15:25] <discord-raku-bot> <yabobay> use Inline::Python;

[15:25] *** Heptite joined
[15:25] <discord-raku-bot> <yabobay> my $py = Inline::Python.new();

[15:25] <discord-raku-bot> <yabobay> $py.run('print("hello world")');

[15:25] <discord-raku-bot> <yabobay> # Or

[15:25] <discord-raku-bot> <yabobay> say EVAL('1+3', :lang<Python>);

[15:25] <discord-raku-bot> <yabobay> use string:from<Python>;

[15:25] <discord-raku-bot> <yabobay> say string::capwords('foo bar'); # prints "Foo Bar"

[15:25] <discord-raku-bot> <yabobay> ```

[15:25] <discord-raku-bot> <yabobay> and i'm trying to use a constructor from a python class like this:

[15:25] <discord-raku-bot> <yabobay> ```perl

[15:25] <discord-raku-bot> <yabobay> my $a = translate::Translator(:from_lang('zh'), :to_lang('en'));

[15:25] <discord-raku-bot> <yabobay> a::translate($text);

[15:25] <discord-raku-bot> <yabobay> ```

[15:25] <discord-raku-bot> <yabobay> which gives me this error:

[15:25] <discord-raku-bot> <yabobay> ```

[15:25] <discord-raku-bot> <yabobay> Could not find symbol '&Translator' in 'translate'

[15:25] <discord-raku-bot> <yabobay>   in sub  at weirdfortunecookie.raku line 6

[15:25] <discord-raku-bot> <yabobay>   in block <unit> at weirdfortunecookie.raku line 29

[15:25] <discord-raku-bot> <yabobay> SystemError: frame does not exist

[15:25] <discord-raku-bot> <yabobay> ```

[15:25] <discord-raku-bot> <yabobay> i guess constructors aren't functions the same way they are in python?

[15:25] <discord-raku-bot> <yabobay> (that's *all* the available documentation about Inline::Python btw)

[15:29] <discord-raku-bot> <Nemokosch> perhaps it would be better to pretend there is no Inline::Python module 😅

[15:29] <discord-raku-bot> <yabobay> is there any better way to use python classes then?

[15:30] *** razetime left
[15:32] <discord-raku-bot> <Nemokosch> maybe not

[15:33] <discord-raku-bot> <Nemokosch> > my $a = translate::Translator(:from_lang('zh'), :to_lang('en'));

[15:33] <discord-raku-bot> <Nemokosch> this syntax leaves me clueless, though...

[15:34] <discord-raku-bot> <yabobay> well, Translator() returns an object

[15:36] <discord-raku-bot> <Nemokosch> tbh if there was something I liked about Python is that they ditched this whole :: madness

[15:37] <discord-raku-bot> <yabobay> is this even a thing i could possibly do

[15:44] <discord-raku-bot> <Nemokosch> As a rule of thumb, I wouldn't put too much effort into it

[15:46] <discord-raku-bot> <yabobay> yeah i've just decided to do it the easier but less satisfying way

[15:49] <discord-raku-bot> <yabobay> or i guess the not at all way:

[15:50] <discord-raku-bot> <yabobay> Inline::Python can't use pip modules i guess

[15:52] <discord-raku-bot> <Nemokosch> for me, the module resolution part worked

[15:53] <discord-raku-bot> <yabobay> i've got kind of a weird setup with rootless linuxbrew and both the python and the raku are installed from it

[15:54] <discord-raku-bot> <yabobay> so maybe that's why it's having problems doing that

[15:54] <discord-raku-bot> <yabobay> ```pl

[15:54] <discord-raku-bot> <yabobay>   $py.run('import random');    # works

[15:54] <discord-raku-bot> <yabobay>   $py.run('import translate'); # doesn't work

[15:54] <discord-raku-bot> <yabobay> ```

[15:56] <discord-raku-bot> <Nemokosch> no problem for me

[15:56] <discord-raku-bot> <Nemokosch> you have installed the module from pip, haven't you

[15:56] <discord-raku-bot> <yabobay> yea

[15:58] <discord-raku-bot> <yabobay> there's basically no good reason to not just use python for this thing i'm doing tbh.

[15:58] <discord-raku-bot> <yabobay> but yknow, optimizing for fun or whatever

[15:59] <discord-raku-bot> <yabobay> even if i did install it from pip, what does it matter? i thouhgt that Inline::Python just runs a python on your system

[16:01] <discord-raku-bot> <Nemokosch> No clue how it works tbh, probably some bridging business

[16:04] <discord-raku-bot> <yabobay> disappointment hour

[16:06] <discord-raku-bot> <Nemokosch> Well, for disappointments: it's important to set reasonable expectations. I would have been positively surprised if running Python from within Raku turned out to be swift. Proper linking with C ABI's is respectable enough.

[16:07] <discord-raku-bot> <Nemokosch> This might be the most relevant experiment regarding Inline::Python

[16:07] <discord-raku-bot> <Nemokosch> https://github.com/p6steve/raku-Dan-Pandas

[16:08] <discord-raku-bot> <yabobay> what if i

[16:08] <discord-raku-bot> <yabobay> called the python code from c

[16:08] <discord-raku-bot> <yabobay> and then called the c code from raku

[16:08] <discord-raku-bot> <yabobay> (that's a joke but also would it be a thing i could do)

[16:09] <lizmat> to an extent, that's how Inline::Perl works, afaik

[16:10] <discord-raku-bot> <yabobay> does perl5 have a good inline python module?

[16:11] <lizmat> https://metacpan.org/pod/Inline::Python

[16:12] <lizmat> by the same author as Inline::Perl5  :-)

[16:12] <discord-raku-bot> <Nemokosch> and the same author as Inline::Python for Raku...

[16:15] <discord-raku-bot> <Nemokosch> it seems to me that nobody believed this importing from Python would actually work

[16:21] <discord-raku-bot> <yabobay> ```pl

[16:21] <discord-raku-bot> <yabobay> use Inline Python => <<'END_OF_PYTHON_CODE';

[16:21] <discord-raku-bot> <yabobay> def test():

[16:21] <discord-raku-bot> <yabobay>   return "AAAA"

[16:21] <discord-raku-bot> <yabobay> END_OF_PYTHON_CODE

[16:21] <discord-raku-bot> <yabobay> print test() ~ "\n";

[16:21] <discord-raku-bot> <yabobay> ```

[16:21] <discord-raku-bot> <yabobay> in perl 5,

[16:21] <discord-raku-bot> <yabobay> brings this error:

[16:21] <discord-raku-bot> <yabobay> ```

[16:21] <discord-raku-bot> <yabobay> Couldn't find an appropriate DIRECTORY for Inline to use.

[16:21] <discord-raku-bot> <yabobay>  at translate.pl line 1.

[16:21] <discord-raku-bot> <yabobay> BEGIN failed--compilation aborted at translate.pl line 1.

[16:21] <discord-raku-bot> <yabobay> ```

[16:25] <discord-raku-bot> <Nemokosch> come on, don't you dare to "upgrade" to Perl 5 from Raku... 😅

[16:25] <discord-raku-bot> <yabobay> haha no

[16:25] <discord-raku-bot> <yabobay> i will use perl5's Inline::Python

[16:25] <discord-raku-bot> <yabobay> and then raku's Inline::Perl5

[16:25] <discord-raku-bot> <Nemokosch> xdddd

[16:26] <discord-raku-bot> <yabobay> i guess i can't get perl5 help in here though :p

[16:27] <lizmat> It's been 10+ years for me since I did some serious Perl work

[16:56] <discord-raku-bot> <Anton Antonov> @lizmat What fraction in the last 10 years did you spent on Raku? What is the second most prominently attended language? 🙂

[17:07] <lizmat> I'd say 95% Raku, 4.99% Javascript and 0.01% Perl

[17:33] <discord-raku-bot> <Anton Antonov> Good to know! (Not going to be used against you.)

[17:33] <discord-raku-bot> <Anton Antonov> Well, I would not...

[17:34] *** dakkar left
[18:48] <lizmat> the JS work was mostly for the irclogs.raku.org website  :-)

[18:52] <discord-raku-bot> <Anton Antonov> @lizmat I am considering translating Raku plots into JS plotting libraries. (In order to use certain notebook solutions.)

[19:48] <discord-raku-bot> <yabobay> what does :: mean anyway

[20:14] *** habere-et-disper joined
[20:17] <habere-et-disper> I think it has infinite precision, but you can drill down with a more specific type:

[20:17] <habere-et-disper> m: say Int.Range

[20:17] <habere-et-disper> m: say uint32.Range

[20:17] <camelia> rakudo-moar 59a348538: OUTPUT: «-Inf^..^Inf␤»

[20:17] <camelia> rakudo-moar 59a348538: OUTPUT: «0..4294967295␤»

[20:17] <habere-et-disper> m: say uint64.Range

[20:17] <camelia> rakudo-moar 59a348538: OUTPUT: «0..18446744073709551615␤»

[20:30] <discord-raku-bot> <Nemokosch> symbol lookup or sth like that

[20:34] <habere-et-disper> Should Real have a Range?

[20:34] <habere-et-disper> m: say Real.Range

[20:34] <camelia> rakudo-moar 59a348538: OUTPUT: «No such method 'Range' for invocant of type 'Real'.  Did you mean␤'rand'?␤  in block <unit> at <tmp> line 1␤␤»

[20:39] *** ToddAndMargo joined
[20:51] *** Kaiepi left
[21:02] *** Kaiepi joined
[21:29] *** sgrs left
[21:29] <discord-raku-bot> <Nemokosch> for addressing a subroutine, we have &subroutine-name. What do we have for addressing a method? is there nothing better than ^find_method?

[21:50] <discord-raku-bot> <Kaiepi> you could put it in `my`/`our` to make it addressable with `&`

[21:50] <discord-raku-bot> <Kaiepi> the default scope is `has`

[21:50] <discord-raku-bot> <Nemokosch> what kind of scope is that?

[21:50] <discord-raku-bot> <Kaiepi> a weird one

[21:52] <discord-raku-bot> <Nemokosch> that much I could figure 😄

[21:53] *** sgrs joined
[23:11] *** Kaiepi left
