[03:16] *** jgaz joined
[03:19] *** jgaz left
[04:01] *** razetime joined
[04:22] *** Kaiepi left
[05:49] *** Heptite left
[05:51] *** Kaiepi joined
[06:23] *** razetime left
[06:52] *** razetime joined
[07:07] *** razetime left
[08:50] *** razetime joined
[09:37] *** razetime left
[10:41] <discord-raku-bot> <Nemokosch> TIL `raku -m` which is apparently a lot like `node -r`

[11:48] <lizmat> -m ?

[11:48] <lizmat> you mean -M

[12:01] *** Kaiepi left
[12:08] *** equinox joined
[12:10] <equinox> hi what's happening when I do `&(4)`?

[12:11] <equinox> i think it's the same as `$(4)`

[12:12] <equinox> but not sure why or how

[12:33] <lizmat> It indeed seems to codegen into 4.item

[12:33] <lizmat> feels like an oversight in the grammar

[12:35] <equinox> oh, thanks

[12:43] *** equinox left
[13:04] *** Kaiepi joined
[13:58] *** discord-raku-bot left
[13:59] *** discord-raku-bot joined
[15:01] *** equinox joined
[15:12] *** discord-raku-bot left
[15:12] *** discord-raku-bot joined
[15:20] *** discord-raku-bot left
[15:20] *** discord-raku-bot joined
[15:21] *** razetime joined
[15:25] *** razetime left
[15:31] *** Heptite joined
[15:43] *** jgaz joined
[15:48] *** guifa left
[15:49] *** guifa joined
[16:23] *** equinox left
[16:42] <deadmarshal> What would be the Perl's equivalent of this? (0) x $n; which gives an array of n zeros.

[16:50] *** Kaiepi left
[16:50] *** jgaz left
[16:55] *** razetime joined
[17:16] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/12/26/2022-52-antonovmas/

[17:22] *** jgaz joined
[17:25] <discord-raku-bot> <Nemokosch> deadmarshal: 0 xx $n

[17:25] <discord-raku-bot> <Nemokosch> (reminder that parens are not doing anything apart from setting the precedence)

[17:38] <deadmarshal> thanks

[17:44] *** Kaiepi joined
[17:51] *** Kaiepi left
[18:10] *** razetime left
[18:23] *** equinox joined
[18:31] *** Kaiepi joined
[20:53] *** equinox left
[22:12] *** jgaz left
[23:10] <jaguart> is there any way to reset within the REPL - e.g. so that it forgets all the lexicals etc.?

[23:13] <discord-raku-bot> <Nemokosch> I don't know but keep in mind that the REPL is not at all that good at remembering things like that in the first place. For example, you can always just redeclare a variable and it won't complain. At the same time, binding is absolutely broken and you will get weird complaints if you try to "rebind" anything.

[23:29] <jaguart> so maybe its a case of use '-e'

[23:32] <discord-raku-bot> <Nemokosch> the REPL is good for prototyping not-so-hardcore scripts. For example, you want to figure out how you can process a certain textfile, or a common use-case for me is to include CoreHackers::Sourcery and investigate how built-in functions are implemented

[23:33] <discord-raku-bot> <Nemokosch> at the same time, it's really not a fully featured Raku runtime - notoriously it cannot make use of operators (maybe terms in general) that you define

[23:33] <discord-raku-bot> <Nemokosch> I suspect somehow it boils down to use of EVAL

