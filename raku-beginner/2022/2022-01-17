[00:40] *** lizmat_ joined
[00:40] *** TempIRCLogger__ joined
[00:41] *** RakuIRCLogger left
[00:42] *** TempIRCLogger left
[00:42] *** lizmat left
[00:44] *** TempIRCLogger__ left
[00:44] *** TempIRCLogger joined
[03:52] *** frost joined
[04:56] *** frost left
[08:00] *** Manifest0 joined
[08:08] *** lizmat_ left
[08:08] *** lizmat joined
[08:51] *** dakkar joined
[11:44] *** MasterDuke left
[13:01] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/01/17/2022-03-rakucon-how/

[13:04] <discord-raku-bot> <Nemokosch#9980> so I have sets of pairs

[13:04] <discord-raku-bot> <Nemokosch#9980> what exactly happens when I substitute one from the other?

[13:05] <discord-raku-bot> <Nemokosch#9980> the first result is okay, the new includes the old one

[13:06] <discord-raku-bot> <Nemokosch#9980> but then the other difference should contain 1760 elements, right?

[13:22] *** MasterDuke joined
[13:33] *** [Coke] left
[13:42] *** [Coke] joined
[14:37] *** qorg11 left
[14:40] *** qorg11 joined
[14:56] *** [Coke]_ joined
[14:57] *** [Coke] left
[15:55] <discord-raku-bot> <Nahita#3882> Not necessarily

[15:55] <discord-raku-bot> <Nahita#3882> m:`​``

[15:55] <discord-raku-bot> <Nahita#3882> my @old = 12.comb;

[15:55] <discord-raku-bot> <Nahita#3882> my @new = 124444666666.comb;

[15:55] <discord-raku-bot> <Nahita#3882> say @old (-) @new;

[15:55] <discord-raku-bot> <Nahita#3882> say @new (-) @old;

[15:55] <discord-raku-bot> <Nahita#3882> `​``

[15:56] <discord-raku-bot> <Nahita#3882> m: `​``

[15:56] <discord-raku-bot> <Nahita#3882> my @old = 12.comb;

[15:56] <discord-raku-bot> <Nahita#3882> my @new = 124444666666.comb;

[15:56] <discord-raku-bot> <Nahita#3882> say @old (-) @new;

[15:56] <discord-raku-bot> <Nahita#3882> say @new (-) @old;

[15:56] <discord-raku-bot> <Nahita#3882> `​``

[15:56] <discord-raku-bot> <Nemokosch#9980> I mean... okay, this wasn't the case

[15:56] <discord-raku-bot> <Nemokosch#9980> I can tell you it wasn't all duplicates but one pair

[15:56] <discord-raku-bot> <Nahita#3882> Then we need an MRE!

[16:08] <discord-raku-bot> <Nahita#3882> m:​```

[16:08] <discord-raku-bot> <Nahita#3882> my @old = 12.comb;

[16:08] <discord-raku-bot> <Nahita#3882> my @new = 124444666666.comb;

[16:08] <discord-raku-bot> <Nahita#3882> say @old (-) @new;

[16:08] <discord-raku-bot> <Nahita#3882> say @new (-) @old;

[16:08] <discord-raku-bot> <Nahita#3882> ​```

[16:08] <discord-raku-bot> <Nahita#3882> (for completeness nothing else :))

[17:14] *** [Coke] joined
[17:15] *** [Coke]_ left
[17:20] <discord-raku-bot> <Nemokosch#9980> m: say (2-1*sqrt 5)**(1/3)

[17:20] <discord-raku-bot> <Nemokosch#9980> why is that?

[17:21] <discord-raku-bot> <Nemokosch#9980> m:  say (2-1*sqrt 5)

[17:21] <discord-raku-bot> <Nemokosch#9980> m: say -0.2360679774997898**(1/3)

[17:21] <discord-raku-bot> <Nemokosch#9980> why don't I get this number but NaN instead?

[17:35] <discord-raku-bot> <Nemokosch#9980> I mean, okay, I get that the unary minus actually has lower precedence

[17:35] <discord-raku-bot> <Nemokosch#9980> m: say (-0.2360679774997898)**(1/3)

[17:35] <discord-raku-bot> <Nemokosch#9980> but this doesn't seem okay at all

[17:39] *** dakkar left
[18:49] <discord-raku-bot> <Nahita#3882> Seems to have adopted the first point here <https://math.stackexchange.com/a/317546>. Like C, Java, Perl and JS but not Python.

[19:02] <discord-raku-bot> <Nemokosch#9980> it seems to me the best built-in way is using sign and abs

[19:22] <discord-raku-bot> <stevied#8273> I got some busted links on: https://raku.land/zef:sdondley/Karabiner::CompModGenerator

[19:22] <discord-raku-bot> <stevied#8273> I filed a report on raku.land repo for the broken USAGE links. not sure if that's the right place

[19:22] <discord-raku-bot> <stevied#8273> this is also showing up on the page: ` [Configuration File](#Configuration File) `

[19:23] <discord-raku-bot> <stevied#8273> in my original pod, I have this: `L<Configuration File|#Configuration File>`

[19:23] <discord-raku-bot> <stevied#8273> am I doing anything wrong there?

[20:58] *** aitron joined
[21:49] *** aitron left
[21:49] *** aitron joined
[22:05] *** [Coke]_ joined
[22:07] *** [Coke] left
[22:26] <discord-raku-bot> <tailgate#1731> is there a way to get a default value from a hash if a key isn't there, or is this the best way?

[22:26] <discord-raku-bot> <tailgate#1731> if %capitals{'Europe'}:exists { return %capitals{'Europe'} ;} else {return "";}

[22:27] <discord-raku-bot> <stevied#8273> `%d{'x}:exists || '';

[22:28] <discord-raku-bot> <tailgate#1731> thanks!

[22:28] <discord-raku-bot> <stevied#8273> `%d{'x}.exists || '';

[22:28] <discord-raku-bot> <stevied#8273> no need for "return" if it's the last line in the function

[22:28] <discord-raku-bot> <stevied#8273> `%d{'x'}.exists || '';

[22:29] <discord-raku-bot> <stevied#8273> oh, wait, sorry

[22:30] <discord-raku-bot> <stevied#8273> `%d{'x'}.exists ?? %d{'x'} !! '';`

[22:32] <discord-raku-bot> <stevied#8273> hold on, I'm new at this, too

[22:32] <discord-raku-bot> <lakmatiol#8020> You could do `%d{'x'}//''`

[22:32] <discord-raku-bot> <stevied#8273> `%d{'x'}:exists ?? %d{'x'} !! '';`

[22:34] <discord-raku-bot> <stevied#8273> but doesn't that check if the value is True?

[22:34] <discord-raku-bot> <stevied#8273> or defined, I mean

[22:43] <discord-raku-bot> <Nemokosch#9980> defined

[22:43] <discord-raku-bot> <Nemokosch#9980> isn't that exactly the wanted behavior?

[22:45] <discord-raku-bot> <Nemokosch#9980> also, if you want, you can define a default value for hashes, I believe

[22:45] <discord-raku-bot> <Nemokosch#9980> m: my %capitals is default(''); dd %capitals{'Europe'};

[22:45] <discord-raku-bot> <Nemokosch#9980> 😎

[22:49] <discord-raku-bot> <tailgate#1731> thanks!

[22:51] <discord-raku-bot> <stevied#8273> can I key exist with an undefined value, though?

[22:51] <discord-raku-bot> <stevied#8273> can a key exist with an undefined value, though?

[22:53] <discord-raku-bot> <Nemokosch#9980> what does that mean?

[22:53] <discord-raku-bot> <stevied#8273> it seems `%d{'x'}//''` will test if the value is defined. he wants to test if the key exists

[22:53] <discord-raku-bot> <Nemokosch#9980> I don't think there is a conceptual difference

[22:57] <discord-raku-bot> <Nemokosch#9980> I mean... why would you assign not definite values to something?

[23:28] *** [Coke]_ left
[23:31] *** jaguart joined
[23:31] *** [Coke] joined
[23:38] <jaguart> Hello, old Perlie, Raku absolute beginner, trying to get @INC path and class/file naming. Have class A::B::C in ./A/B/lib/C.rakumod and that isa A::D::C which is in ./A/D/lib/C.rakumod but can't seem to get raku to tie it together.

[23:49] <discord-raku-bot> <gfldex#8222> @Nemokosch#9980 I wrote a script that tried to find methods that where missing in the docs. To do so, I had to query methods on the build in types. Those happen to be type object, and as such quite undefined. As soon as you do meta-programming you will find ample reason to store undefined values in Hashes and otherwise.

[23:51] <discord-raku-bot> <Nemokosch#9980> That doesn't seem like intended usage to me, although it works

[23:51] <discord-raku-bot> <gfldex#8222> The MOP is very intentional.

[23:52] <discord-raku-bot> <Nemokosch#9980> what is MOP?

[23:52] <[Coke]> meta object protocol

[23:53] <[Coke]> jaguart: You need to specify -I. to specifically look starting in the local dir.

[23:53] <discord-raku-bot> <gfldex#8222> meta object protocol

[23:53] <discord-raku-bot> <Nemokosch#9980> btw I can vaguely recall that defined values of a type do have everything that the default value i.e the type object could provide

[23:53] <[Coke]> you can also use RAKULIB

[23:53] <jaguart> I already have the /lib/ folders in my use-lib pragma

[23:53] <[Coke]> (first is command line arg, second is an env var.)

[23:53] <[Coke]> jaguart: ok, but you never mentioned lib in your example.

[23:54] <[Coke]> if it's still not working, can you show me your use lib, your use of the module, and the path to the module?

[23:54] <[Coke]> er.

[23:55] <[Coke]> you did mention lib but it's buried near the bottom?

[23:55] <[Coke]> if you have ./A/B/C.rakumod, you "use A::B::C" and you specify a lib dir of .

[23:55] <[Coke]> you don't use lib near the end of the path.

[23:56] <jaguart> ok - let me fix that and retry

[23:56] <[Coke]> When I read your example at first, I literally tuned out after A/B, sorry . :)

[23:57] <discord-raku-bot> <gfldex#8222> @Nemokosch#9980 Note quite. Here is a practical example: https://gfldex.wordpress.com/2021/08/17/most-fancy/

[23:58] <jaguart> removing /lib and raku doesnt find the first A::B::C

[23:59] <[Coke]> please share your use statement, path to the module, fully qualified name of the module in the file, and your -I/use lib/RAKULIB

[23:59] <discord-raku-bot> <Nemokosch#9980> well, I don't see the contradiction

[23:59] <[Coke]> (and the error message)

[23:59] <discord-raku-bot> <gfldex#8222> To be fair, undefinedness is a fairly large field in Raku. Where other languages need a paragraph in a book, we need a whole section.

