[00:14] *** MasterDuke left
[08:03] *** dakkar joined
[09:53] *** MasterDuke joined
[10:19] *** wingfold joined
[10:46] *** wingfold left
[11:10] *** razetime joined
[13:07] *** razetime left
[13:38] *** razetime joined
[13:46] *** Manifest0 left
[13:47] *** Manifest0 joined
[14:11] *** razetime left
[14:55] *** razetime joined
[15:38] *** razetime left
[15:44] *** razetime joined
[16:35] *** dakkar left
[17:25] *** razetime left
[18:37] *** zacts joined
[18:49] *** zacts left
[18:50] <discord-raku-bot> <stevied#8273> ok, I gotta think this is a bug:

[18:50] <discord-raku-bot> <stevied#8273> ```

[18:50] <discord-raku-bot> <stevied#8273>     grammar HC2 {

[18:50] <discord-raku-bot> <stevied#8273>         token TOP { <line>+ }

[18:50] <discord-raku-bot> <stevied#8273>         token line { \N* \n }

[18:50] <discord-raku-bot> <stevied#8273>     }

[18:50] <discord-raku-bot> <stevied#8273> ```

[18:51] <discord-raku-bot> <stevied#8273> otherwise, can someone explain why this does not match a file ending in with hex code `0a`, the newline character?

[18:56] <discord-raku-bot> <stevied#8273> actually, I think it doesn' t end in 0a.

[18:56] <discord-raku-bot> <stevied#8273> so that's gotta be the problem

[18:58] <discord-raku-bot> <stevied#8273> actually, it does end in 0a on the disk

[19:01] <discord-raku-bot> <stevied#8273> oh, holy crap. the comma ide is stripping it out

[19:01] <discord-raku-bot> <stevied#8273> jesus

[19:21] <discord-raku-bot> <stevied#8273> https://stackoverflow.com/a/71667703/1641112

[19:21] <discord-raku-bot> <stevied#8273> there's the answer

[19:23] *** n1to joined
[19:59] *** zacts joined
[20:40] *** discord-raku-bot left
[20:41] *** discord-raku-bot joined
[21:00] *** zacts left
[21:12] <discord-raku-bot> <Anton Antonov#7232> @stevied#8273 I having similar frustrations using this package: https://github.com/antononcube/Raku-Grammar-TokenProcessing . It parses Raku files just fine inside Comma, but not on the command line!

[21:16] <discord-raku-bot> <stevied#8273> this stuff can get frustrating for sure. I just spend ridiculous amounts of time on it until I figure it out

[21:17] <discord-raku-bot> <Anton Antonov#7232> Thanks for figuring that out!

[21:24] *** zacts joined
[21:28] <discord-raku-bot> <stevied#8273> grammars are still driving me crazy. Just when I think I have them figured it it looks like I've made another bad assumption about how they process the text.

[21:30] <discord-raku-bot> <stevied#8273> like i'm finding out that apparently you can't do a negative lookahead assertion in a token

[21:32] <discord-raku-bot> <stevied#8273> i don't know. that may not be true. but my grammar isn't working for some weird reason

[21:38] <discord-raku-bot> <stevied#8273> this has got to be a bug or i'm just a total idiot.

[21:39] <discord-raku-bot> <stevied#8273> in my defense, this stuff isn''t easy

[21:45] *** zacts left
[21:49] <discord-raku-bot> <Anton Antonov#7232> Yes, there are some very hard to figure out or navigate points. BTW, some of the things you trying to do might have been figured out by DrForr (https://github.com/drforr).

[21:51] <discord-raku-bot> <stevied#8273> https://stackoverflow.com/questions/71669179/grammar-not-parsing-as-expected-with-negative-lookaround-assertion

[21:51] *** n1to left
[21:53] <discord-raku-bot> <stevied#8273> yeah, i realize i'm probably reinventing the wheel. but my primary goal is to learn raku. so I'm working in a problem space I'm familiar with to help do that.

[21:53] <discord-raku-bot> <Anton Antonov#7232> Same here -- I pointed out that repository as source code look-up place. Not as package, en-bloc replacement of what you od.

[21:53] <discord-raku-bot> <Anton Antonov#7232> Same here -- I pointed out that repository as source code look-up place. Not as package, en-bloc replacement of what you do.

[21:54] <discord-raku-bot> <Anton Antonov#7232> Same here -- I pointed out that repository as a source code look-up place. Not as package, en-bloc replacement of what you do.

[21:55] <discord-raku-bot> <Anton Antonov#7232> Same here -- I pointed out that repository as a source code look-up place. Not as a package, en-bloc replacement of what you do.

[21:55] <discord-raku-bot> <Nemokosch#9980> is that really a lookahead, not just usual negative matching?

[21:57] <discord-raku-bot> <Nemokosch#9980> and where is <header-content>?

[22:03] <discord-raku-bot> <stevied#8273> crap, did i cut that off

[22:03] <discord-raku-bot> <stevied#8273> let me add

[22:04] <discord-raku-bot> <stevied#8273> fixed

[22:04] <discord-raku-bot> <stevied#8273> it's called a "lookaround assertion"

[22:05] <discord-raku-bot> <stevied#8273> https://docs.raku.org/language/regexes#Lookaround_assertions

[22:06] <discord-raku-bot> <stevied#8273> maybe they behave differently than lookahead? if they do, I don't get it

[22:07] <discord-raku-bot> <stevied#8273> i think the heading sizes in the docs are wrong

[22:07] <discord-raku-bot> <stevied#8273> i think lookahead and lookbehind are types of "lookaround". doc outline level doesn't reflect that, though

[22:58] *** destroycomputers joined
[23:08] *** zacts joined
[23:34] <discord-raku-bot> <stevied#8273> ok, did some more searching: https://stackoverflow.com/questions/62686065/using-after-as-lookbehind-in-a-grammar-in-raku

[23:34] <discord-raku-bot> <stevied#8273> same question. not a bug, but it doesn't work as expected

