[00:16] *** guifa_ joined
[00:17] *** guifa left
[00:56] *** discord-raku-bot left
[00:57] *** discord-raku-bot joined
[13:26] *** otpv joined
[13:35] <otpv> hi, i use PDF::IO::Reader to read a pdf file. that works fine. when i want to print out the content, i face 2 issues: when i log the object being the first content, the content is encoded and is not in the hash:

[13:35] <otpv> {Filter => FlateDecode, Length => ind-ref => [8 0]}

[13:35] <otpv> "...<long-encoded-string>..."

[13:35] <otpv> wondering how i can reach that encoded string. and how to decode it (i see an attribute Filter set to FlatDecode, so i tried to use PDF::IO::Filter.decode by setting Filter to FlatDecode, but w/o success).

[13:37] <otpv> here is the code:my PDF::IO::Reader $reader .= new;

[13:37] <otpv> $reader.open: 'myfile.pdf';

[13:37] <otpv> say $reader.trailer<Root><Pages><Kids>[0]<Contents>[0];

[13:38] <discord-raku-bot> <stevied> wsl-lis

[15:03] <discord-raku-bot> <stevied> anyone know why this is returning false: `say $*SPEC.gist.contains(/unix/, :ignorecase);`

[15:05] <discord-raku-bot> <stevied> m: say $*SPEC.gist.contains(/unix/, :ignorecase);

[15:05] *** otpv left
[15:13] <discord-raku-bot> <stevied> oh, i see. doesn't work with a regex

[16:09] <discord-raku-bot> <Nemokosch> You could do a smartmatch for regex

[17:32] *** Kaipei left
[17:36] <Util_> m: say $*SPEC.gist.lc.contains("unix");

[17:36] <camelia> rakudo-moar 5a6344fc6: OUTPUT: «True␤»

[17:39] *** Util_ is now known as Util

[18:17] *** Kaiepi joined
[21:19] *** lucs_ is now known as lucs

[23:09] *** otpv joined
