[00:26] <discord-raku-bot> <stevied#8273> got another question. let's say I got a method and I want it to be able to accept `5` as an argument or `5.0` as an argument. If I set the parameter to an `Int` it chokes when passed a decimal. When I set the paramter to `Rat` it chokes on an integer value. So how do I best accomplish this? Do I need a `multi` and convert the argument as needed or is there some type that can accept either something th

[00:27] <discord-raku-bot> <stevied#8273> got another question. let's say I got a method and I want it to be able to accept `5` as an argument or `5.0` as an argument. If I set the parameter to an `Int` it chokes when passed a decimal value. When I set the paramter to `Rat` it chokes on an integer value. So how do I best accomplish this? Do I need a `multi` and convert the argument as needed or is there some type that can accept either someth

[00:32] <discord-raku-bot> <Nemokosch#9980> depends if you want to convert to a certain type or not

[00:33] <discord-raku-bot> <stevied#8273> i ultimately want it to be converted to a `Rat`

[00:33] <discord-raku-bot> <Nemokosch#9980> If you want Rat either way, you could just use Rat() $parameter

[00:33] <discord-raku-bot> <Nemokosch#9980> the parens allow for conversions

[00:35] <discord-raku-bot> <Nemokosch#9980> I think this could be further specialized

[00:35] <discord-raku-bot> <stevied#8273> oh, wow, never knew that either.

[00:35] <discord-raku-bot> <Nemokosch#9980> like what function to use for conversion and stuff

[00:35] <discord-raku-bot> <Nemokosch#9980> but I rarely wanted anything more complex than this

[00:35] <discord-raku-bot> <stevied#8273> yup, that worked. thanks!

[07:08] <discord-raku-bot> <sabas3dgh#6795> Hello

[07:09] <discord-raku-bot> <sabas3dgh#6795> I need to write a rest wbservice in raku. Is it possible? Please explain!

[08:38] *** Kaiepi left
[09:03] *** Kaiepi joined
[09:04] <discord-raku-bot> <Nemokosch#9980> Check out Cro

[10:06] *** frost left
[10:49] *** lizmat joined
[10:55] <discord-raku-bot> <stevied#8273> I'm getting an error with this code: https://paste.debian.net/1243011/

[10:55] <discord-raku-bot> <stevied#8273> `Illegally post-declared type: Kg used at line 23`

[11:05] <lizmat> stevied: you're using Kg *before* it is being defined

[11:05] <lizmat> you will need to stub the class

[11:05] <lizmat> e.g. by adding "class Kg { ... }" before class Unit is being defined

[11:06] <lizmat> after that, you also need to change $to.get_abbr to $to!get_abbr

[11:07] <lizmat> although I thing you can just replace that by $!abbr  :-)

[11:07] <discord-raku-bot> <stevied#8273> i tried that, then I get a different error: "No such method 'get_abbr' for tpe 'Kg'

[11:07] <discord-raku-bot> <stevied#8273> i tried that, then I get a different error: "No such method 'get_abbr' for type 'Kg'

[11:07] <discord-raku-bot> <stevied#8273> ah, oops

[11:07] <discord-raku-bot> <stevied#8273> thanks!

[11:08] <lizmat> *think

[12:38] <discord-raku-bot> <stevied#8273> if raku does a calculation and comes up with an answer of 0.000005, how can I tell it do display that in scientific noatation with "X" number of significant digits?

[12:38] <discord-raku-bot> <stevied#8273> do I need a module to help me do that?

[12:49] <discord-raku-bot> <stevied#8273> ok sprintf can handle this with "e" format spcificer

[12:55] <lizmat> yup, and there's .fmt  (which is essentially sprintf under the hood)

[12:56] <lizmat> m: say 42.fmt("%e")

[12:56] <camelia> rakudo-moar 77bc03047: OUTPUT: ¬´4.200000e+01‚ê§¬ª

[12:57] <discord-raku-bot> <stevied#8273> do you know a good way to do pretty scientific notation. so instead of 5e-06 you'd have 5 x 10-6 (with the -6 in superscript)?

[12:59] <lizmat> no way to do that in core, I don't think

[12:59] <lizmat> m: dd "x".uninames

[12:59] <camelia> rakudo-moar 77bc03047: OUTPUT: ¬´("LATIN SMALL LETTER X",).Seq‚ê§¬ª

[13:00] <lizmat> I guess you could whip up an elaborate .subst to do that transformation

[13:01] <discord-raku-bot> <stevied#8273> sounds like a good idea

[13:16] <discord-raku-bot> <stevied#8273> ok, so let's say I want to convert the string `06` to a superscript. what's a good way to do that?

[13:16] <discord-raku-bot> <stevied#8273> the zero would be dropped

[13:19] <lizmat> https://gist.github.com/lizmat/42d59853c1dfe1f3df35e379b7043efc

[13:20] <discord-raku-bot> <stevied#8273> ah, trans, good idea

[13:28] <discord-raku-bot> <stevied#8273> here's what I came up with, FWIW:

[13:28] <discord-raku-bot> <stevied#8273> ```

[13:28] <discord-raku-bot> <stevied#8273>         if ($num < 10000) {

[13:28] <discord-raku-bot> <stevied#8273>             my $exp = $num ~~ /\d+$/;

[13:28] <discord-raku-bot> <stevied#8273>             $exp = $exp.subst(/^0/, '');

[13:28] <discord-raku-bot> <stevied#8273>             $exp .= trans( [0..9] => [ "\x[2070]".."\x[2079]" ] );

[13:28] <discord-raku-bot> <stevied#8273>             $num = $num.subst(/e\-\d+/, " x 10\x[207B]$exp");

[13:28] <discord-raku-bot> <stevied#8273>         }

[13:28] <discord-raku-bot> <stevied#8273> ```

[13:28] <discord-raku-bot> <stevied#8273> thanks, Liz!

[13:40] *** Oshawott joined
[13:43] *** archenoth left
[13:44] *** lizmat left
[15:01] <discord-raku-bot> <Anton Antonov#7232> Which are packages I can assume are always found in Raku?

[15:20] <discord-raku-bot> <Anton Antonov#7232> Well, I do not need to know. üôÇ I figured to get what I want without that assumption...

[16:17] *** Oshawott left
[16:36] *** kueppo joined
[16:51] *** kueppo left
[19:36] *** lizmat joined
[19:45] *** lizmat left
[20:01] <discord-raku-bot> <stevied#8273> I have these two classes:

[20:01] <discord-raku-bot> <stevied#8273> ```

[20:01] <discord-raku-bot> <stevied#8273> class Unit-ug is Unit {

[20:01] <discord-raku-bot> <stevied#8273>     method new(Rat:D() $value = 1.0) {

[20:01] <discord-raku-bot> <stevied#8273>         self.bless(

[20:01] <discord-raku-bot> <stevied#8273>             :UnitType('Mass'),

[20:01] <discord-raku-bot> <stevied#8273>             :abbr('¬µg'),

[20:01] <discord-raku-bot> <stevied#8273>             :base_value(1/1_000_000),

[20:01] <discord-raku-bot> <stevied#8273>             :$value,

[20:01] <discord-raku-bot> <stevied#8273>             :si,

[20:01] <discord-raku-bot> <stevied#8273>         );

[20:01] <discord-raku-bot> <stevied#8273>     }

[20:01] <discord-raku-bot> <stevied#8273> }

[20:01] <discord-raku-bot> <stevied#8273> class Unit-mcg is Unit-ug { }

[20:03] <discord-raku-bot> <stevied#8273> I want the Unit-mcg to have a different abbreviation than Unit-ug. Everything else is the same. What's the cleanest way to do that?

[20:28] <discord-raku-bot> <stevied#8273> best I came up with is this:

[20:28] <discord-raku-bot> <stevied#8273> ```

[20:28] <discord-raku-bot> <stevied#8273> class Mass-ug is Mass {

[20:28] <discord-raku-bot> <stevied#8273>     method new(Rat:D() $value = 1.0) {

[20:28] <discord-raku-bot> <stevied#8273>         self.bless(

[20:28] <discord-raku-bot> <stevied#8273>             :abbr('¬µg'),

[20:28] <discord-raku-bot> <stevied#8273>             :base_value(1/1_000_000),

[20:28] <discord-raku-bot> <stevied#8273>             :$value,

[20:28] <discord-raku-bot> <stevied#8273>             :si,

[20:28] <discord-raku-bot> <stevied#8273>         );

[20:28] <discord-raku-bot> <stevied#8273>     }

[20:28] <discord-raku-bot> <stevied#8273> }

[21:11] <discord-raku-bot> <wamba#9976> > class Mass-mcg is Mass-ug {

[21:11] <discord-raku-bot> <wamba#9976> >       method TWEAK { self.clone( abbr => "mcg" ) }

[21:11] <discord-raku-bot> <wamba#9976> >   };

[21:11] <discord-raku-bot> <wamba#9976> or 

[21:11] <discord-raku-bot> <wamba#9976> > class Mass-mcg is Mass-ug {

[21:11] <discord-raku-bot> <wamba#9976> >       method TWEAK { $.abbr = "mcg"  }

[21:11] <discord-raku-bot> <wamba#9976> >   };

[21:11] <discord-raku-bot> <wamba#9976> > if `abbr` us mutable

[21:13] <discord-raku-bot> <wamba#9976> But, why do you define your own `new`?

[21:13] <discord-raku-bot> <wamba#9976> or 

[21:13] <discord-raku-bot> <wamba#9976> > class Mass-mcg is Mass-ug {

[21:13] <discord-raku-bot> <wamba#9976> >       method TWEAK { $.abbr = "mcg"  }

[21:13] <discord-raku-bot> <wamba#9976> >   };

[21:13] <discord-raku-bot> <wamba#9976> if `abbr` us mutable

[21:13] <discord-raku-bot> <wamba#9976> or 

[21:13] <discord-raku-bot> <wamba#9976> > class Mass-mcg is Mass-ug {

[21:13] <discord-raku-bot> <wamba#9976> >       method TWEAK { $.abbr = "mcg"  }

[21:13] <discord-raku-bot> <wamba#9976> >   };

[21:13] <discord-raku-bot> <wamba#9976> if `abbr` is mutable

[21:17] <discord-raku-bot> <stevied#8273> ah, nice. forgot about TWEAK.

[21:19] <discord-raku-bot> <stevied#8273> not sure what you mean. but Mass-ug is subclass of Mass class:

[21:21] <discord-raku-bot> <stevied#8273> which looks like this:

[21:21] <discord-raku-bot> <stevied#8273> ```

[21:21] <discord-raku-bot> <stevied#8273> class Mass {

[21:21] <discord-raku-bot> <stevied#8273>     has Str $!name;

[21:21] <discord-raku-bot> <stevied#8273>     has Str $.abbr is rw;

[21:21] *** discord-raku-bot left
[21:22] *** discord-raku-bot joined
[21:34] <discord-raku-bot> <stevied#8273> class Mass-lb is Mass {

[21:34] <discord-raku-bot> <stevied#8273>     method new(Rat:D() $value = 1.0) {

[21:34] <discord-raku-bot> <stevied#8273>         self.bless(

[21:34] <discord-raku-bot> <stevied#8273>             :abbr('lb'),

[21:34] <discord-raku-bot> <stevied#8273>             :base_value(453.59237),

[21:34] <discord-raku-bot> <stevied#8273>             :$value,

[21:34] <discord-raku-bot> <stevied#8273>         );

[21:34] <discord-raku-bot> <stevied#8273>     }

[21:34] <discord-raku-bot> <stevied#8273> }

[21:34] <discord-raku-bot> <stevied#8273> my @lb-syn = < lbs pounds pound >;

[21:34] <discord-raku-bot> <stevied#8273> for @lb-syn {

[21:34] <discord-raku-bot> <stevied#8273>     EVAL 'class ::("Mass-$_") is Mass-lb {}';

[21:34] <discord-raku-bot> <stevied#8273> Wondering if there is a way to easily generatate aliases for classes. Tried this:

[21:34] <discord-raku-bot> <stevied#8273> ```

[21:34] <discord-raku-bot> <stevied#8273> class Mass-lb is Mass {

[21:34] <discord-raku-bot> <stevied#8273>     method new(Rat:D() $value = 1.0) {

[21:34] <discord-raku-bot> <stevied#8273>         self.bless(

[21:34] <discord-raku-bot> <stevied#8273>             :abbr('lb'),

[21:34] <discord-raku-bot> <stevied#8273>             :base_value(453.59237),

[21:34] <discord-raku-bot> <stevied#8273>             :$value,

[21:34] <discord-raku-bot> <stevied#8273>         );

[21:34] <discord-raku-bot> <stevied#8273>     }

[21:34] <discord-raku-bot> <stevied#8273> }

[21:34] <discord-raku-bot> <stevied#8273> my @lb-syn = < lbs pounds pound >;

[21:34] <discord-raku-bot> <stevied#8273> for @lb-syn {

[21:34] <discord-raku-bot> <stevied#8273>     EVAL 'class ::("Mass-$_") is Mass-lb {}';

[21:36] <discord-raku-bot> <stevied#8273> but it throws an error:

[21:36] <discord-raku-bot> <stevied#8273> `Name ::("Mass-$_") is not compile-time known, and can not serve as a package name`

