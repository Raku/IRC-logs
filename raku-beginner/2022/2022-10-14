[00:17] *** kueppo left
[02:20] *** frost joined
[04:48] *** Heptite left
[04:48] *** Guest68 joined
[04:50] <Guest68> Hi folks sry but I have a stupid question - How do I run the bytecode using moar? I compiled the script using `perl6 -o hello --target mbc hello.raku` but seems like moar could not recognise the compiled file...

[04:54] *** Guest68 left
[04:56] *** Guest68 joined
[05:00] *** Guest68 left
[05:03] *** Guest68 joined
[05:05] *** Guest68 left
[05:15] *** kueppo joined
[06:16] *** razetime joined
[08:02] *** razetime left
[08:18] *** discord-raku-bot left
[08:18] *** discord-raku-bot joined
[08:19] *** razetime joined
[08:26] *** kueppo left
[08:33] *** discord-raku-bot left
[08:33] *** discord-raku-bot joined
[08:35] <lizmat> Guest68: that's hardly a beginner question?

[09:32] *** Kaiepi left
[09:32] *** razetime left
[09:35] *** Kaiepi joined
[10:09] *** Kaiepi left
[10:09] *** razetime joined
[10:24] *** Kaiepi joined
[10:28] <discord-raku-bot> <Nemokosch> Depends. In Java, this would be basic.

[12:06] *** Kaiepi left
[12:06] *** Kaiepi joined
[12:11] *** Kaiepi left
[12:31] *** Kaiepi joined
[12:44] <[Coke]> If this is related to the recent post I saw on the RSS feed, the easiest way to get this benefit is to hoist the guts of your script into a module and use it from the script - the lib will get precompiled automatically.

[12:45] <[Coke]> (it's not answer the exact question here, ofc.)

[12:46] <[Coke]> I don't think we can do what you're attempting there. (e.g. run "moar hello")

[12:48] <[Coke]> (also, it's 'raku' these days)

[13:06] *** jgaz joined
[13:07] *** frost left
[13:08] *** jgaz left
[13:13] *** Kaipei joined
[13:14] *** Kaipii joined
[13:15] <lizmat> also: https://www.reddit.com/r/rakulang/comments/y3n5lg/directly_run_compiled_bytecode_file/  :-(

[13:16] *** Kaiepi left
[13:17] *** Kaipei left
[13:27] *** jgaz joined
[13:37] <[Coke]> that's the one I saw on the feed, thanks1

[13:39] <[Coke]> also https://github.com/rakudo/rakudo/issues/5081

[13:40] *** kueppo joined
[13:44] <lizmat> ack

[13:45] *** Heptite joined
[13:46] *** razetime left
[13:52] <discord-raku-bot> <Nemokosch> okay but... what's the problem?

[13:56] <discord-raku-bot> <Nemokosch> Like, is it a bad question? Or unworth of answering?

[13:57] <[Coke]> no, it's not intended to work (yet), and doesn't.

[13:57] *** kueppo left
[13:59] <[Coke]> so to get a similar result (precompiling your script), you can do the trick mentioned above. you're not running the bytecode directly, but most of your code is now compiled once and then run as bytecode.

[13:59] <[Coke]> It's a great question.

[14:00] <discord-raku-bot> <Nemokosch> That's fair I think

[14:04] <discord-raku-bot> <Nemokosch> something else: does the double colon in ::?CLASS have a name?

[14:19] *** kueppo joined
[14:31] *** razetime joined
[14:34] <[Coke]> I don't think it has a special name. it's a package separator - same thing as ::("foo"), I think. it's the top most, indicating the root.

[14:36] <[Coke]> Though if it were exactly identical, I might expect ?CLASS to work by itself, which it doesn't.

[14:40] *** kueppo left
[14:40] <discord-raku-bot> <Nemokosch> This helps. I didn't know this was meant to be a package separator in the first place.

[14:54] <[Coke]> m: dd ::Rat.new

[14:54] <camelia> rakudo-moar 4cdb55850: OUTPUT: «0.0␤»

[16:12] *** Kaipii left
[16:12] *** Kaipii joined
[16:17] *** Kaipii left
[16:43] *** Kaipii joined
[17:32] *** razetime left
[17:54] *** jgaz left
[19:47] *** jgaz joined
[20:36] *** kueppo joined
[21:02] *** kueppo left
[22:49] *** jgaz left
[23:48] <guifa_> "If the name part before :: is null, it means the package is unspecified and must be searched for. Generally this means that an initial :: following the main sigil is a no-op on names that are known at compile time, though ::() can also be used to introduce an interpolation. Also, in the absence of another sigil, :: can serve as its own sigil indicating intentional use of a not-yet-declared package name"

