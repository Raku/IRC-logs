[00:00] <jaguart> m: class C { has Mu $.o; method gist { $!o.^name;  }  }; say C.new( :o(Int) );

[00:00] <camelia> rakudo-moar 02043da92: OUTPUT: «Int␤»

[00:00] <discord-raku-bot> <Nemokosch> But you see, the whole grammar is built in a way where the token for numbers just doesn't include anything negative

[00:00] <jaguart> m: class C { has Mu $.o; method gist { $!o.^name;  }  }; say C.new( :o(Nil) );

[00:00] <camelia> rakudo-moar 02043da92: OUTPUT: «Mu␤»

[00:05] * jaguart off to pick xmas cherries... bbs

[00:15] <discord-raku-bot> <Nemokosch> 😂 byez

[01:48] <jaguart> the probelm with Nil boiled down to assign -> works if I bind instead :)

[02:51] *** razetime joined
[04:42] *** Heptite left
[05:00] *** Heptite joined
[07:10] *** Heptite left
[09:19] *** jaamer joined
[09:19] *** jaamer left
[09:21] *** jaamer joined
[09:24] <jaamer> A question on POD and semantics :) - Perl has this: https://perldoc.perl.org/perlpodstyle - the nearest I can find in Raku is: https://docs.raku.org/language/pod#Semantic_blocks - which seems a little light, and maybe incorrect? =TITLE and =SUBTITLE don't really feel like Pod semantics?

[09:24] <jaamer> Does anyone have any thoughts? Opinionated is good too :)

[09:25] <jaamer> even Modules that have Pod you like / recommend?

[09:55] *** Kaiepi joined
[11:17] *** jaamer left
[12:04] <discord-raku-bot> <Nemokosch> Hey, could you quickly say what your goal is?

[12:44] *** razetime left
[14:48] *** jgaz joined
[15:18] *** jgaz left
[15:52] *** Heptite joined
[19:48] <discord-raku-bot> <p6steve> my regex number {

[19:48] <discord-raku-bot> <p6steve>     \S+                     #grab chars

[19:48] <discord-raku-bot> <p6steve>     <?{ +"$/" ~~ Real }>    #assert coerces via '+' to Real

[19:48] <discord-raku-bot> <p6steve> }

[19:49] <discord-raku-bot> <p6steve> ^^^ works for me

[19:51] <discord-raku-bot> <p6steve> (uses the language semantics to decide what is a number)

[19:57] *** jgaz joined
[20:15] *** jgaz left
