[02:39] *** frost joined
[03:01] *** frost left
[05:26] *** frost joined
[05:42] *** frost left
[07:25] *** camelia left
[07:28] *** guifa joined
[07:28] *** camelia joined
[09:07] *** dakkar joined
[14:02] <discord-raku-bot> <Nemokosch#9980> Okay, so if I have a multi and one parameter binding fails, shouldn't it attempt to use another binding?

[14:03] <discord-raku-bot> <Nemokosch#9980> oh okay, it should - but apparently not when cached

[16:05] <guifa> I think the is cached trait is still a bit experimental

[16:42] <lizmat> yes, itis

[17:23] *** dakkar left
[18:07] <guifa> it's fairly easy to recreate the trait though as long as you can generate a unique identifier from the arguments.  for example, I have a module that generates formatters on a combination of language / length / number type.  my sub is 

[18:09] <guifa> sub get-formatter ($lang, $len, $type) {Â state %cache; .return with %cache{"$lang $len $type"}; my &formatter = #`[actual generation code]; return %cache{"$lang $len $type"} := &formatter }

[19:55] *** jjkklll joined
[20:09] *** jjkklll left
[21:49] *** libbits joined
[21:51] *** libbits left
