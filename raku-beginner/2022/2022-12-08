[00:15] *** NemokoschKiwi joined
[00:20] <discord-raku-bot> <Mason> I was looking for a way to say "something like this"

[00:20] <discord-raku-bot> <Mason> not to say "exactly this"

[00:20] <discord-raku-bot> <Mason> hence using `$0` is better than the workaround I was trying to do

[00:21] <discord-raku-bot> <Nemokosch> it's just kinda hard to guess what makes pieces of code "alike"

[00:30] <jaguart> any recommends on a javadoc equiv for Raku?

[00:43] <discord-raku-bot> <Nemokosch> well... pod6?

[00:52] <jaguart> lol

[00:53] <jaguart> does pod6 include basics like signature analysis?

[01:09] <discord-raku-bot> <Nemokosch> pod6 is native Raku

[01:11] <discord-raku-bot> <Nemokosch> tbh considering that it's literally a documentation format ("plain old documentation"), I rarely hear about it in that context

[01:13] *** NemokoschKiwi left
[01:49] <jaguart> Javadoc is a code-analysis tool that identifies components and interfaces, and generates documentation. Like POD and POD6 a lot of (all?) of the work is manual. TBH I am really looking for something that does the manual bit and leaves me to add the 'why' rather than the 'what'.

[01:53] <discord-raku-bot> <Nemokosch> Well, the Comma folks may know something about that. If not, most probably somebody could just go ahead and write something for that.

[01:55] <jaguart> ok - I might start with this: https://github.com/Altai-man/docs.raku.org - is this the current docs or something new?

[01:55] <discord-raku-bot> <Nemokosch> I can only welcome these ideas. I'd say the Raku mainstream doesn't deal a lot with formalized documentation methods or even type signatures. That shows on the doc site as well. At the same time, this is again a very good and imo doable idea. The inspection capabilities of Raku are awesome, sure, why not generate something from it.

[01:56] <discord-raku-bot> <Nemokosch> This is "something new", actually it's pending on infrastructure, should be deployed as soon as possible.

[01:57] <jaguart> ok - so is this the current: https://github.com/Raku/doc

[01:57] <discord-raku-bot> <Nemokosch> the new site also depends on content from the doc repo

[01:58] <discord-raku-bot> <Nemokosch> https://github.com/Raku/Documentable and this is the API that turns the documentation files into something digestable

[01:59] <jaguart> nice - thanks for that :)

[02:00] <discord-raku-bot> <Nemokosch> Having said that, I think this all relies on hand-written pod content

[02:00] <jaguart> yah lol

[02:00] <discord-raku-bot> <Nemokosch> https://github.com/raku-community-modules/CoreHackers-Sourcery something that might be interesting regarding introspection capabilities

[02:01] <discord-raku-bot> <Nemokosch> you can give it a subroutine or a method call and it can point to the code that backs it up in Rakudo

[02:01] <jaguart> TBH JavaDoc only has some introspection - same weakness

[02:02] <discord-raku-bot> <Nemokosch> https://raku.land/zef:lizmat/sourcery

[02:02] <discord-raku-bot> <Nemokosch> liz created a general-purpose version on any local codebase; I have to admit I haven't taken the effort to actually understand how to use it

[02:03] <discord-raku-bot> <Nemokosch> the original sourcery is a big favorite of mine though so knowing liz, the general variant can be pretty badass

[02:04] * jaguart disappears down a magic rabbit hole

[02:04] <jaguart> I always knew lizmat was magic

[02:47] <discord-raku-bot> <Mason> is it possible to dispatch multis off of regexs?

[02:48] <discord-raku-bot> <Mason> ```

[02:48] <discord-raku-bot> <Mason>     multi method sim (/^'v '(\w+)/, *@b) { @.l.push($0) }

[02:48] <discord-raku-bot> <Mason>     multi method sim ('v %%', *@b) { @.l.pop() }

[02:48] <discord-raku-bot> <Mason>     multi method sim ('v !', *@b) { @.l = ("",) }

[02:48] <discord-raku-bot> <Mason> ```

[02:48] <discord-raku-bot> <Mason> notably that first one

[02:50] <discord-raku-bot> <Nemokosch> I doubt it works like this, however a `where` clause might suffixe

[02:50] <discord-raku-bot> <Nemokosch> I doubt it works like this, however a `where` clause might suffice

[02:50] <discord-raku-bot> <Nemokosch> $blah where /^'v '(\w+)/

[02:50] *** razetime joined
[02:51] <discord-raku-bot> <Mason> works great

[02:51] <discord-raku-bot> <Nemokosch> even with the regex literal or with the where clause?

[02:52] <discord-raku-bot> <Mason> the where clause a syou wrote it

[02:52] <discord-raku-bot> <Mason> the where clause as you wrote it

[02:53] <discord-raku-bot> <Nemokosch> nice - what I wasn't sure of is the precedence of multi candidates

[02:53] <discord-raku-bot> <Nemokosch> that's a bit obscure

[02:53] <discord-raku-bot> <Mason> ach well I'm not there yet

[02:53] <discord-raku-bot> <Mason> will know in a min

[04:55] *** Heptite left
[05:08] *** ToddAndMargo joined
[05:08] <ToddAndMargo> On my sub declarations, I like to use "returns"

[05:08] <ToddAndMargo>     sub abc() returns Str {...}

[05:08] <ToddAndMargo> because it makes the sub easier to figure out at a glance when I go to maintain it.

[05:08] <ToddAndMargo> Two exports I have not figured out are

[05:08] <ToddAndMargo>    1) an array,

[05:08] <ToddAndMargo>    2) an object created from a custom class.

[05:09] <jaguart> maybe you mean: sub abc() returns Array {...}

[05:09] <jaguart> maybe you mean: sub abc() returns MyCustomClass {...}

[05:12] <ToddAndMargo> that was right under my nose!

[05:12] <ToddAndMargo> [1] sub abc() returns Array { my @x = (0x44, 0x55); return @x;}

[05:12] <ToddAndMargo> &abc

[05:12] <ToddAndMargo> [2] > say abc

[05:12] <ToddAndMargo> [68 85]

[05:12] <ToddAndMargo> thank you!

[05:13] <jaguart> m: sub abc() returns Array { my @x = (0x44, 0x55); return @x;}; say abc()

[05:13] <camelia> rakudo-moar d52342eb0: OUTPUT: «[68 85]␤»

[05:14] <jaguart> Note this: https://docs.raku.org/type/Signature#index-entry-Return_type_arrow

[05:14] <jaguart> m: sub abc( --> Array ) { my @x = (0x44, 0x55); return @x;}; say abc()

[05:14] <camelia> rakudo-moar d52342eb0: OUTPUT: «[68 85]␤»

[05:15] <jaguart> IMHO it's nice sugar because your signature is all inside the brackets - i.e. ( Int $a, Str $y --> Array )

[05:17] <ToddAndMargo> Love it!  Thank you!

[05:18] *** ToddAndMargo left
[06:32] <jaguart> beginner inheritance question: in a subclass, how to I set default values for parent-classes attributes?

[06:32] <jaguart> m: class A { has $.foo; }; class B is A { submethod TWEAK ( :$foo = 'baa' ) { } }; say B.new.foo;

[06:32] <camelia> rakudo-moar d52342eb0: OUTPUT: «(Any)␤»

[06:32] <jaguart> so that B.ff is 'baa'

[06:33] <kjp> $!foo = 'baa' ?

[06:33] * jaguart knows he's going to have to slap his head, doh

[06:35] <jaguart> m: class A { has $.foo; }; class B is A { submethod TWEAK () { $!foo='baa';} }; say B.new.foo;

[06:35] <camelia> rakudo-moar d52342eb0: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Attribute $!foo not declared in class B␤at <tmp>:1␤------> A { submethod TWEAK () { $!foo='baa';} }⏏; say B.new.foo;␤    expecting any of:␤        horizontal whitespace␤        postfi…»

[06:36] <jaguart> You cant reach your super's attributes directly (and rightly so), I really just want a build-args and cascade UP

[06:37] <jaguart> and I dont want to modfify the parent class to make the attribute rw

[06:53] <jaguart> m: class A { has $.foo; }; class B is A { multi method new ( *%attr ) { %attr<foo> = 'baa'; self.bless( |%attr ) } }; say B.new.foo;

[06:53] <camelia> rakudo-moar d52342eb0: OUTPUT: «baa␤»

[06:54] <jaguart> that was harder to work out than I though :o

[07:05] <jaguart> I often (sometimes) wish for simpler examples in the documentation, I do read it a lot, and spot occasional grammar errors. If one of the doc-gods is listening, and feels like a quick mentor session on the process, I would be keen on patching docs.

[07:30] *** razetime_ joined
[08:25] *** avuserow joined
[08:45] <discord-raku-bot> <Nemokosch> "God" might be an overstatement but what is your wish?

[08:54] *** razetime_ left
[09:10] *** dakkar joined
[12:22] <guifa> jaguart: ti's a semi-known issue, because we have a bimodal distribution of users: extremely experienced, and beginners.  There's not a whole lot of people in the middle, who tend to be better about not over complicating examples

[13:39] *** frost joined
[13:54] *** frost left
[15:37] *** Heptite joined
[16:04] *** NemokoschKiwi joined
[16:06] *** NemokoschKiwi left
[16:24] *** Kaiepi left
[16:31] *** Kaiepi joined
[17:30] *** dakkar left
[18:19] *** razetime left
[20:42] <discord-raku-bot> <yabobay> m:

[20:42] <discord-raku-bot> <yabobay> ```

[20:42] <discord-raku-bot> <yabobay> my $x = (1, 2, 3);

[20:42] <discord-raku-bot> <yabobay> .say for $x;

[20:42] <discord-raku-bot> <yabobay> ```

[20:42] <discord-raku-bot> <yabobay> m:

[20:42] <discord-raku-bot> <yabobay> my $x = (1, 2, 3);

[20:42] <discord-raku-bot> <yabobay> .say for $x;

[20:42] <discord-raku-bot> <yabobay> why isn't it printing each element in a new line?

[20:46] <discord-raku-bot> <yabobay> ohhh i realised

[20:46] <discord-raku-bot> <yabobay> wrong sigil

[21:13] <discord-raku-bot> <Nemokosch> accurate

