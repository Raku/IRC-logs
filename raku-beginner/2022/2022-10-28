[01:52] *** archenoth left
[01:55] *** Kaipei joined
[02:08] *** archenoth joined
[04:09] *** Heptite left
[06:22] *** archenoth left
[06:23] *** archenoth joined
[08:19] *** PolarBearXL joined
[08:47] *** Kaipii joined
[08:51] *** Kaipei left
[09:05] *** discord-raku-bot left
[09:05] *** discord-raku-bot joined
[09:11] <discord-raku-bot> <rcmlz> Hello, I am trying to do a short script that scambles text, preserving word order and keeping the first and the last letter of each word at its place.

[09:11] <discord-raku-bot> <rcmlz> # keep first and last letter, permutate letters in the middle at random

[09:11] <discord-raku-bot> <rcmlz> my $INPUT = "A longer sentence\nOFF words. And some more!";

[09:11] <discord-raku-bot> <rcmlz> my $EXAMPLE_OUTPUT = "A lgoner sntceene OFF wdors. And smoe mroe!";

[09:11] <discord-raku-bot> <rcmlz> My current solution is:

[09:11] <discord-raku-bot> <rcmlz> say $INPUT.lines.words.map(.subst(/(\w)(\w)(\w?)(<[. , ! ?]>?)/, {$0 ~ $1.flip ~ $2 ~ $3})).join(" ");

[09:11] <discord-raku-bot> <rcmlz> I have two issues

[09:11] <discord-raku-bot> <rcmlz> a.) the regex consumes the entire middle part, so the last character of each word is not kept at the last position. I tried to use <ww> (within words) to make the regex a bit more appealing, but failed.

[09:11] <discord-raku-bot> <rcmlz> b.) using flip works, but I fail using roll or permutations.

[09:11] <discord-raku-bot> <rcmlz> Can anyone give me a hint on the two issues?

[09:11] <discord-raku-bot> <rcmlz> Thank you

[09:15] <lizmat> m: say .substr(0,1) ~ .substr(1,*-1).comb.pick(*).join ~ .substr(*-1) given "frobnicate"

[09:15] <camelia> rakudo-moar ef835615f: OUTPUT: ¬´fonbtcriae‚ê§¬ª

[09:15] <lizmat> m: say .substr(0,1) ~ .substr(1,*-1).comb.pick(*).join ~ .substr(*-1) given "frobnicate"

[09:15] <camelia> rakudo-moar ef835615f: OUTPUT: ¬´foirantbce‚ê§¬ª

[09:16] <lizmat> I wouldn't use a regex for this

[09:17] <lizmat> .comb separates the letters, .pick(*) randomly orders them, .join puts them together again

[09:18] *** discord-raku-bot left
[09:19] *** discord-raku-bot joined
[09:27] *** Kaipii is now known as Kaiepi

[09:35] *** frost24 joined
[10:04] <discord-raku-bot> <rcmlz> Thank you.

[10:04] <discord-raku-bot> <rcmlz> m:

[10:04] <discord-raku-bot> <rcmlz> my $INPUT = "AbcdefG";

[10:04] <discord-raku-bot> <rcmlz> say .substr(1,*-1) given $INPUT;

[10:04] <discord-raku-bot> <rcmlz> say .substr(1,*-1).comb given $INPUT;

[10:04] <discord-raku-bot> <rcmlz> say .substr(1,*-1).comb.pick given $INPUT;

[10:04] <discord-raku-bot> <rcmlz> say .substr(1,*-1).comb.pick.join given $INPUT;

[10:05] <discord-raku-bot> <rcmlz> I get the same wrong output at my machine running

[10:05] <discord-raku-bot> <rcmlz> Welcome to Rakudo‚Ñ¢Ô∏è v2022.07.

[10:06] <discord-raku-bot> <rcmlz> Strange that sting.comb.pick.join it worked when you executed it.

[10:06] <discord-raku-bot> <rcmlz> Strange that sting.comb.pick.join worked when you executed it.

[10:08] <discord-raku-bot> <rcmlz> (the asterixes get lost when using Discord, but I put them in)

[10:08] *** frost24 left
[10:10] <discord-raku-bot> <rcmlz> (the asterixes before -1 get lost when using Discord, but I put them in)

[10:11] <lizmat> that would explain  :-)

[10:12] <lizmat> also: .pick(*)   with an asterisk!

[10:12] <lizmat> otherwise you'd only get one letter

[10:12] <discord-raku-bot> <Nemokosch> would .pick(Inf) work the same way?

[10:15] <discord-raku-bot> <rcmlz> ahhh, that is it. I was wondering why you used pick() and not pick ...

[10:15] <discord-raku-bot> <rcmlz> m:

[10:15] <discord-raku-bot> <rcmlz> my $INPUT = "AbcdefG";

[10:15] <discord-raku-bot> <rcmlz> say .substr(1,*-1).comb.pick(*).join given $INPUT;

[10:15] <discord-raku-bot> <rcmlz> say .substr(1,*-1).comb.pick(Inf).join given $INPUT;

[10:15] <discord-raku-bot> <rcmlz> (with * in pick() and before -1)

[10:15] <lizmat> m: say .substr(0,1) ~ .substr(1,*-1).comb.pick(Inf).join ~ .substr(*-1) given "frobnicate"

[10:15] <camelia> rakudo-moar ef835615f: OUTPUT: ¬´fnibotcrae‚ê§¬ª

[10:15] <lizmat> Inf works

[10:16] <discord-raku-bot> <Nemokosch> https://discord.com/channels/538407879980482560/619193814653075477/1035485633503830016 toldya üòù

[10:16] <discord-raku-bot> <rcmlz> yes, I was not aware of that issue.

[10:17] <discord-raku-bot> <Nemokosch> can a substitution used with a callable?

[10:18] <lizmat> m: say "foo bar".subst(/ \w+ /, { .uc })   # like that you mean?

[10:18] <camelia> rakudo-moar ef835615f: OUTPUT: ¬´FOO bar‚ê§¬ª

[10:18] <discord-raku-bot> <Nemokosch> > The replacement can be a Callable in which the current Match object will be placed in the $/ variable, as well as the $_ topic variable.

[10:19] <discord-raku-bot> <Nemokosch> cool

[10:19] <discord-raku-bot> <Nemokosch> yep

[10:27] <discord-raku-bot> <Nemokosch> something is weird

[10:27] <discord-raku-bot> <Nemokosch> still investigating in case I did something wrong

[10:29] <discord-raku-bot> <Nemokosch> aha

[10:29] *** PolarBearXL left
[10:29] <discord-raku-bot> <Nemokosch> the S/// syntax can't be used with callables?

[10:30] <discord-raku-bot> <Nemokosch> or perhaps s/can't/shouldn't/

[10:32] <lizmat> fwiw, I'm no fan of S///

[10:32] <lizmat> m: say S/ \w+ / { .uc } / given "foo bar"

[10:32] <camelia> rakudo-moar ef835615f: OUTPUT: ¬´ FOO BAR  bar‚ê§¬ª

[10:32] <lizmat> looks like $_inside the { } is the whole string ?

[10:33] <lizmat> m: say S/ \w+ /{ $/.uc }/ given "foo bar"

[10:33] <camelia> rakudo-moar ef835615f: OUTPUT: ¬´FOO bar‚ê§¬ª

[10:37] <discord-raku-bot> <Nemokosch> yes, it does seem like that...

[10:37] <discord-raku-bot> <Nemokosch> it seems like S/// does not set $_ at all

[10:47] <discord-raku-bot> <rcmlz> Simplifying my code using Liz hint I derived at

[10:47] <discord-raku-bot> <rcmlz> my $INPUT = "A longer sentence\nOFF words. And some more!";

[10:47] <discord-raku-bot> <rcmlz> say $INPUT.subst(:g, /\w+\w+/, {.substr(0,1) ~ .substr(1,*-1).comb.pick(*).join ~ .substr(*-1)});

[10:47] <discord-raku-bot> <rcmlz> The only thing I am not happy with is the \w+\w+ to exclude single letters like the "A" - as .subst() is not working otherwise.

[10:47] <discord-raku-bot> <rcmlz> Thank you for your help.

[10:48] <discord-raku-bot> <rcmlz> Simplifying my code using Liz hint I derived at

[10:48] <discord-raku-bot> <rcmlz> my $INPUT = "A longer sentence\nOFF words. And some more!";

[10:48] <discord-raku-bot> <rcmlz> say $INPUT.subst(:g, /\w+\w+/, {.substr(0,1) ~ .substr(1,\*-1).comb.pick(\*).join ~ .substr(\*-1)});

[10:48] <discord-raku-bot> <rcmlz> The only thing I am not happy with is the \w+\w+ to exclude single letters like the "A" - as .subst() is not working otherwise.

[10:48] <discord-raku-bot> <rcmlz> Thank you for your help.

[10:50] <lizmat> m: say .substr(0,1) ~ .substr(1,*-1).comb.pick(Inf).join ~ .substr(*-1) given "f"

[10:50] <camelia> rakudo-moar ef835615f: OUTPUT: ¬´Number of characters argument to substr out of range. Is: -1, should be in 0..^Inf; use *-1 if you want to index relative to the end‚ê§  in block <unit> at <tmp> line 1‚ê§‚ê§¬ª

[10:50] <lizmat> hmmm

[10:51] <lizmat> I guess you could put in a check for number of chars

[10:52] <discord-raku-bot> <rcmlz> there is no second character subst(1,*-1) crashes

[10:52] <lizmat> add a .chars > 3 as any smaller word doesn't make sense anyway

[10:53] <lizmat> \w ** 4..*

[10:53] <lizmat> or use that ^^

[10:54] <discord-raku-bot> <rcmlz> I tried that

[10:54] <discord-raku-bot> <rcmlz> my $INPUT = "A longer sentence\nOFF words. And some more!";

[10:54] <discord-raku-bot> <rcmlz> say $INPUT.subst(:g, /\w+/, {.substr(0,1) ~ .substr(1,\*-1).comb.pick(\*).join ~ .substr(\*-1) if .chars > 1});

[10:54] <discord-raku-bot> <rcmlz> but then single letters are omitted.

[10:56] <discord-raku-bot> <Nemokosch> yeah liz is right

[10:56] <discord-raku-bot> <Nemokosch> your condition returns Empty when the condition fails

[10:56] <discord-raku-bot> <Nemokosch> that's why they get omitted

[10:56] <discord-raku-bot> <Nemokosch> it's better to not match them at all

[10:58] <discord-raku-bot> <rcmlz> Yes, /\w ** 4..*/ did the trick

[10:58] <discord-raku-bot> <rcmlz> No I have a nice, short solution! Thank you.

[10:58] <discord-raku-bot> <rcmlz> Now I have a nice, short solution! Thank you.

[11:13] *** Kaiepi left
[11:15] *** Kaiepi joined
[11:30] *** frost53 joined
[11:42] <discord-raku-bot> <Nemokosch> ü•≥

[11:56] *** frost53 left
[11:57] *** frost70 joined
[12:27] *** frost70 left
[12:50] *** jgaz joined
[14:25] *** Heptite joined
[16:21] *** Kaiepi left
[17:06] *** deoac left
[17:15] *** Kaiepi joined
[19:02] *** n1to joined
[19:03] *** n1to left
[19:11] *** jgaz left
[19:32] *** jgaz joined
[20:22] *** jgaz left
[21:31] *** Nemokosch joined
[22:51] *** jaguart joined
[23:04] *** deoac joined
[23:20] *** deoac left
