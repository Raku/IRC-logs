[00:50] *** Kaipei left
[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> Is there a way to do type assertions, such as asserting `.WHAT` is a type? In essence, i'm trying to construct another instance of a mixed-in type: ```

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> class Foo {

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF>     has $.field;

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF>     method incr { $?CLASS.new: field => self.field + 1 }

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> }

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> my $foo = Foo.new(field => 4) but role {

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF>     method field { callwith() * 2 }

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> };

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> say $foo;

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> say $foo.incr;

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> say $foo.incr.incr;```

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> Is there a way to do type assertions, such as asserting `.WHAT` is a type? In essence, i'm trying to construct another instance of a mixed-in type: ```

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> class Foo {

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF>     has $.field;

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF>     method incr {

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF>         $?CLASS.new: field => $!field + 1

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF>         # doesn't work:

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF>         # .new: field => $!field + 1

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF>     }

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> }

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> my $foo = Foo.new(field => 3) but role {

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF>     method field { callwith() * 2 }

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> };

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> say $foo.field; # should return 6

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> say $foo.incr.field; # should be 8, but is 4```

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> Is there a way to do type assertions, such as asserting `.WHAT` is a type? In essence, i'm trying to construct another instance of a mixed-in type: ```

[02:10] <discord-raku-bot> <sampersand—2B +| +^2B == FF> class Foo {

[02:16] *** razetime joined
[02:53] <guifa_> .WHAT should produce a type object always, AFAIK.  It's not even a real method, and is compiler controlled.  I'm not sure I see how it would benefit what you're trying to do

[02:56] <guifa_> your last code works fine for me:

[02:56] <guifa_> m: class A { has $.b; method i { self.new: b => $!b + 1} }; my $c = A.new(:3b) but role { method b { callsame() * 2 } }; say $c.b; say $c.i.b;

[02:56] <camelia> rakudo-moar 4cdb55850: OUTPUT: «6␤8␤»

[02:57] <guifa_> the reason $?CLASS doesn't work is that it will refer to a fresh unmixed class, so the role isn't applied

[02:58] <guifa_> self.new (or even self.WHAT.new if you feel dirty acting on an definite object) will keep the mix

[03:11] <discord-raku-bot> <sampersand—2B +| +^2B == FF> cool thanks

[03:15] <discord-raku-bot> <sampersand—2B +| +^2B == FF> that works :-)

[03:24] <discord-raku-bot> <sampersand—2B +| +^2B == FF> What's the purpose of `my method foo`? why have the `my`? Likewise for `submethod foo`

[04:00] *** razetime left
[04:35] *** razetime joined
[04:37] *** Ebudae joined
[04:41] *** Heptite left
[04:42] *** Ebudae left
[05:13] *** Manifest0 left
[05:13] *** gfldex left
[05:13] *** human_blip left
[05:13] *** gfldex joined
[05:13] *** Manifest0 joined
[05:16] *** human_blip joined
[05:55] <discord-raku-bot> <Nemokosch> https://docs.raku.org/language/objects#index-entry-Submethods

[06:59] *** kueppo joined
[07:47] *** dakkar joined
[08:01] *** razetime left
[08:25] *** kueppo left
[08:26] *** razetime joined
[09:05] *** razetime left
[09:05] *** razetime joined
[10:00] *** Kaiepi joined
[10:05] *** razetime left
[10:27] *** razetime joined
[12:07] *** discord-raku-bot left
[12:07] *** discord-raku-bot joined
[12:29] *** jgaz joined
[13:04] *** discord-raku-bot left
[13:04] *** discord-raku-bot joined
[13:06] *** kueppo joined
[13:32] *** discord-raku-bot left
[13:33] *** discord-raku-bot joined
[13:37] *** discord-raku-bot left
[13:37] *** discord-raku-bot joined
[14:10] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2022/10/17/2022-42-grep-no-fear/

[14:35] *** Heptite joined
[16:35] *** dakkar left
[18:16] *** razetime left
[19:20] *** Kaiepi left
[19:20] *** Kaiepi joined
[19:38] *** Kaiepi left
[19:38] *** Kaiepi joined
[19:43] *** Kaiepi left
[20:05] *** Kaiepi joined
[22:58] *** Heptite left
[22:58] *** Heptite joined
[23:00] *** jgaz left
