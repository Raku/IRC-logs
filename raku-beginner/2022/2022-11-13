[00:02] *** deoac joined
[01:33] *** razetime joined
[01:58] *** deoac left
[02:40] *** razetime left
[02:53] *** habere-et-disper left
[03:29] *** MasterDuke joined
[03:45] *** Kaipei joined
[04:49] *** codesections left
[04:57] *** frost joined
[05:34] *** Heptite left
[06:04] *** frost left
[06:05] *** frost joined
[08:09] *** frost left
[09:00] *** andrea[m] left
[09:26] *** razetime joined
[09:47] *** Kaipei left
[09:50] *** razetime left
[10:16] *** frost joined
[10:51] *** habere-et-disper joined
[10:53] *** Kaipei joined
[10:54] <habere-et-disper> m: say '‚ë©'.uniname.words.tail.lc

[10:54] <camelia> rakudo-moar 5e1f092f5: OUTPUT: ¬´ten‚ê§¬ª

[10:54] <habere-et-disper> m: say ('‚ë†'..'‚ë©').map: *.uniname.words.tail.lc

[10:54] <camelia> rakudo-moar 5e1f092f5: OUTPUT: ¬´(one two three four five six seven eight nine ten)‚ê§¬ª

[10:54] <habere-et-disper> m: say (‚ë†..‚ë©).map: *.Str.uniname.words.tail.lc

[10:54] <camelia> rakudo-moar 5e1f092f5: OUTPUT: ¬´(one two three four five six seven eight nine one)‚ê§¬ª

[10:55] <habere-et-disper> WHY?

[10:55] <lizmat> why what ?

[10:55] <habere-et-disper> Why does the last range give one in the tail instead of ten?

[10:56] <habere-et-disper> m: say (‚ë†..‚ë©).map: *.Str.uniname.words.tail.lc

[10:56] <camelia> rakudo-moar 5e1f092f5: OUTPUT: ¬´(one two three four five six seven eight nine one)‚ê§¬ª

[10:56] <discord-raku-bot> <Nemokosch> indeed lol

[10:57] <discord-raku-bot> <Nemokosch> oh okay, I have an idea

[10:57] <discord-raku-bot> <Nemokosch> 10.uniname might not be such a good idea to call

[10:57] <discord-raku-bot> <Nemokosch> and that's essentially what happened

[10:58] <discord-raku-bot> <Nemokosch> https://docs.raku.org/routine/uniname

[10:58] <habere-et-disper> Okay -- thanks!

[10:58] <discord-raku-bot> <Nemokosch> > Interprets the invocant or first argument as a Str, and returns the Unicode codepoint name of the first codepoint of the first character.

[10:59] *** Nemokosch joined
[11:00] <Nemokosch> say (‚ë†..‚ë©).map: *.Str.uninames.words

[11:00] <Nemokosch> m: say (‚ë†..‚ë©).map: *.Str.uninames.words

[11:00] <camelia> rakudo-moar 5e1f092f5: OUTPUT: ¬´((DIGIT ONE) (DIGIT TWO) (DIGIT THREE) (DIGIT FOUR) (DIGIT FIVE) (DIGIT SIX) (DIGIT SEVEN) (DIGIT EIGHT) (DIGIT NINE) (DIGIT ONE DIGIT ZERO))‚ê§¬ª

[11:01] *** Nemokosch left
[11:01] <habere-et-disper> (It's the Str which undoes the unicode.)

[11:01] <habere-et-disper> Fair enough.

[11:01] <discord-raku-bot> <Nemokosch> no, it's not, I think

[11:02] <discord-raku-bot> <Nemokosch> ‚ë†..‚ë© itself just returns 1..10

[11:02] <discord-raku-bot> <Nemokosch> these are legitimate numbers

[11:03] <lizmat> right, they're *numbers*, not *digits*

[11:05] <habere-et-disper> Is this a bug then?

[11:07] <lizmat> no, it's behaviour defined by the Unicode standard

[11:08] <habere-et-disper> Okay, whew! :-)

[11:10] <discord-raku-bot> <Nemokosch> I think if there is anything that can confuse you, it's that numbers may be entered in several ways in Raku (one of them being ‚ë©) - but they can only have one .Str representation and that's always gonna be the good old Arabic

[11:10] <discord-raku-bot> <Nemokosch> so the moment you entered ‚ë© as a number, you lost it as a string

[11:10] <lizmat> m: say ‚ë©.^name

[11:10] <camelia> rakudo-moar 5e1f092f5: OUTPUT: ¬´Int‚ê§¬ª

[11:12] <habere-et-disper> Thank you for clarifying @Nemokosch! Helpful.

[11:12] <discord-raku-bot> <Nemokosch> if you need it as a string, well, keep it in a string rather than a numeric literal üòõ

[11:12] <discord-raku-bot> <Nemokosch> üç¨

[11:14] <discord-raku-bot> <Nemokosch> lizmat: is there possibly a way to specify what representation of a number you'd like to get?

[11:14] <lizmat> coerce it?

[11:15] <lizmat> m: dd ‚ë©.Num

[11:15] <camelia> rakudo-moar 5e1f092f5: OUTPUT: ¬´10e0‚ê§¬ª

[11:16] <discord-raku-bot> <Nemokosch> I mean non-arabic systems and possibly these funky unicodes

[11:18] <discord-raku-bot> <Nemokosch> my gut feeling is that this is more up to modules

[11:29] <lizmat> ah, like that... hhmm... definitely module space

[11:29] <lizmat> probably in the I18N:: namespace ?

[11:57] <discord-raku-bot> <Nemokosch> hm, could be, I don't know one

[12:29] *** frost left
[12:37] *** habere-et-disper left
[12:58] *** frost joined
[13:23] *** frost left
[14:01] <guifa_> Intl::Format::Number

[14:01] <guifa_> an module which I am actually updating *as we speak*

[14:01] <guifa_> lol

[14:09] *** frost joined
[15:01] <guifa_> (trying to add support for "compact numbers".  So `format-number 12345, :length<short>` will produce "12 K" and :length<long> will produce "12 thousand".  I don't find those as useful, both if I'm doing all the work to update for RakuAST, might as well go ahead and do the standard to a T

[15:11] *** Heptite joined
[15:48] *** guifa_ left
[16:49] *** guifa joined
[17:26] *** Kaipei left
[17:28] *** Kaipei joined
[18:45] <discord-raku-bot> <Nemokosch> this module fails to install for me due to test errors

[18:47] <discord-raku-bot> <Anton Antonov> How can I get the body of a function? Or regex.

[18:48] <lizmat> you mean the source?

[18:51] <discord-raku-bot> <Anton Antonov> Yes, the source. It looks like I can use .gist ...

[18:53] <lizmat> that would surprise me

[18:53] <discord-raku-bot> <Anton Antonov> Hm... I can use .gist on regexes in grammar classes.

[18:53] <lizmat> yeah, but normally the source of a code block is *not* kept

[18:53] <discord-raku-bot> <Anton Antonov> @lizmat Yeah, I was wrong.

[18:54] <lizmat> you could do find out the filename and line number

[18:54] <lizmat> and read the file and lines and look for the end of the code block, I guess

[18:55] <discord-raku-bot> <Anton Antonov> @lizmat Ok, that is doable.

[18:56] <lizmat> https://raku.land/zef:lizmat/Backtrace::Files has a sub "normalize-backtrace-filename" that could be of use

[19:05] <discord-raku-bot> <Anton Antonov> @lizmat Thank you!

[19:29] <guifa> Nemokosch: which one?  Mine?  

[19:30] <guifa> it's possible, I haven't touched it in a while.  What's it erroring on?  If it's something simple I can maybe fix it real fast.  Current update I'm working on will take a few days

[19:48] <guifa> oh yeah, that's a fairly easy fix, it's due to a small change I made in Intl::CLDR.  I'll see if I can do it tonight

[21:20] <discord-raku-bot> <Nemokosch> TAP problems

[21:22] <discord-raku-bot> <Nemokosch> perhaps it's not good marketing that whenever something goes wrong with a test, some nebulous message referring to TAP shows up üòÖ

[21:55] *** bigfondue left
[22:03] *** MasterDuke left
[22:27] *** bigfondue joined
[22:46] *** habere-et-disper joined
[23:32] *** Nemokosch joined
[23:35] *** Nemokosch left
[23:45] *** jaguart joined
[23:49] *** Kaipei left
