[01:10] *** Kaipei joined
[01:12] *** Kaiepi left
[01:59] *** deadmarshal left
[02:25] *** deadmarshal joined
[10:48] *** frost joined
[12:05] *** Guest86 joined
[12:10] *** frost left
[12:55] *** Guest86 left
[14:00] *** discord-raku-bot left
[14:01] *** discord-raku-bot joined
[14:03] *** discord-raku-bot left
[14:03] *** discord-raku-bot joined
[14:41] *** discord-raku-bot left
[14:41] *** discord-raku-bot joined
[15:59] *** discord-raku-bot left
[15:59] *** discord-raku-bot joined
[19:16] *** deoac joined
[19:17] <deoac> How can I use regexs when calling Test subroutines?

[19:17] <deoac> use Test;

[19:17] <deoac> throws-like({ say 42[2] }, X::OutOfRange, message => /Index out of range .*/);

[19:17] <deoac> gives this result

[19:18] <deoac>     not ok 3 - .message matches /Index out of range .*/

[19:18] <deoac> not ok 1 - did we throws-like X::OutOfRange?

[19:18] <deoac>     # Failed test '.message matches /Index out of range .*/'

[19:18] <deoac>     # at SETTING::src/core.c/Any-iterable-methods.pm6 line 563

[19:18] <deoac>     # Expected: /Index out of range .*/

[19:18] <deoac>     # Got:      Index out of range. Is: 2, should be in 0..0

[19:18] <deoac>     # You failed 1 test of 3

[19:18] *** deoac left
[19:18] *** deoac joined
[19:33] <lizmat> m: CATCH { dd .^name }; 42[2]

[19:33] <camelia> rakudo-moar dc180bd95: ( no output )

[19:33] <lizmat> m: CATCH { dd .^name }; say 42[2]

[19:33] <camelia> rakudo-moar dc180bd95: OUTPUT: «"X::OutOfRange"␤Index out of range. Is: 2, should be in 0..0␤  in block <unit> at <tmp> line 1␤␤»

[19:33] <CIAvash> deoac: spaces are not significant: `/'Index out of range' .*/`

[19:34] <CIAvash> use quotes

[19:42] *** deoac2 joined
[19:44] *** deoac2 left
[19:44] *** deoac17 joined
[19:45] *** deoac17 left
[19:48] <deoac> How do I specify the :message() parameter so that

[19:48] <deoac> the #Expected: and #Got: match?

[19:49] <deoac> I tried assigning a regex to :message(), but the Test module treats it like a literal string.

[19:49] <deoac>         # Expected: /Index out of range .*/

[19:49] <deoac>         # Got: Index out of range. Is: 2, should be in 0..0

[19:57] <CIAvash> use... (full message at https://libera.ems.host/_matrix/media/r0/download/libera.chat/1af5af0befaf10b66568d29020dd474cb8f64612)

[20:07] <discord-raku-bot> <Nemokosch> what could it be? 👀

[20:07] <discord-raku-bot> <Nemokosch> oh makes sense

[20:09] <discord-raku-bot> <Nemokosch> the thing to remember is that regex literals aren't sensitive to whitespace

[20:09] <discord-raku-bot> <Nemokosch> if you want to match literal strings, it's generally a good idea to quote them inside the regex

[20:09] <discord-raku-bot> <Nemokosch> even if they aren't special characters or there is no whitespace involved imo

[20:09] <discord-raku-bot> <Nemokosch> but here, whitespace involved: go for the quoting

[20:12] <deoac> Ahh, got it.  Thanks

[21:45] *** avuserow left
[22:15] <deoac>         use Test;

[22:15] <deoac>         sub foo { print ' bar '; };

[22:15] <deoac> l.       ives-ok {foo}, 'foo() runs correctly';

[22:15] <deoac>          is foo(), 'bar ';

[22:15] <deoac> Outputs:

[22:15] <deoac>          ->bar<- ok 1 - foo() runs correctly

[22:15] <deoac>          ->bar<- not ok 2 -

[22:15] <deoac>          # Failed test at scratch.raku line 7

[22:15] <deoac>          # expected: 'bar'

[22:15] <deoac>          #      got: 'True'

[22:15] <deoac> How can I test that foo() printed correctly?

[22:21] <guifa> You can set $*OUT to something else, and capture the printed output

[22:53] *** deoac left
[22:55] *** deoac joined
