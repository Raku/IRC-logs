[00:00] *** lizmat left
[00:00] *** Kaipei left
[00:00] *** Util left
[00:00] *** Util joined
[00:01] *** lizmat joined
[00:53] *** frost joined
[00:57] *** thowe left
[00:58] *** thowe joined
[04:43] *** kjp left
[08:13] *** human-blip left
[10:26] *** human-blip joined
[10:31] *** human-blip left
[10:32] *** Guest6291 joined
[10:34] <Guest6291> n

[10:34] *** Guest6291 left
[10:55] *** human-blip joined
[10:59] *** frost left
[13:55] *** n1to joined
[15:12] <thowe> what does "+%" do?  Specifically I am looking at a grammar that was made for parsing ip addresses and this is part of some of the regexes.  That's here: https://rosettacode.org/wiki/Parse_an_IP_Address#Raku

[15:13] <thowe> that symbol isn't in the docs

[15:15] <thowe> that said, I also can't find "hexdigit"

[15:21] <thowe> I mean, I'm guessing it is a character class, but it isn't constructed here, so is it a built-in character class?

[15:23] <thowe> Ah, is it maybe old syntax???  There is a character class <xdigit> that should match a hexdigit.  Is it deprecated code maybe?

[15:34] <thowe> hm <xdigit> and <hexdigit> both work interchangeably when I run the code...  Must be some leftover syntax(?)

[15:47] <thowe> still wondering what +% is

[15:51] <thowe> or maybe that's not an operator and they have specified a modified quantifier in a funny way....  That makes sense I think

[15:55] <thowe> I was wrong, hexdigit and xdigit are not equiv  now I'm confused again

[16:28] <thowe> I asked in the other channel and apparently it's a unicode class, and case and underscores are ignored, so Hex_Digit can be hexdigit.  https://sites.google.com/site/icuprojectuserguide/strings/properties

[16:30] <thowe> newer stuff is harder to find but is here: https://unicode-org.github.io/icu/userguide/strings/properties.html

[17:47] <gfldex> thowe: hexdigit is defined in the Raku grammar.

[17:53] *** chikega joined
[18:05] *** chikega left
[18:36] <discord-raku-bot> <stevied> i have a command the prompts a user for input. I want to get at the output of the program. So I have this:

[18:36] <discord-raku-bot> <stevied> ```

[18:36] <discord-raku-bot> <stevied> my $proc = Proc::Async.new('bin/docexec');

[18:36] <discord-raku-bot> <stevied> $proc.stdout.tap(->$v { say $v; say 'bye'; });

[18:36] <discord-raku-bot> <stevied> $proc.start;

[18:36] <discord-raku-bot> <stevied> react {

[18:36] <discord-raku-bot> <stevied>     whenever Promise.in(1) {

[18:36] <discord-raku-bot> <stevied>         $proc.kill; # sends SIGHUP, change appropriately

[18:36] <discord-raku-bot> <stevied>     }

[18:36] <discord-raku-bot> <stevied> }

[18:36] <discord-raku-bot> <stevied> ```

[18:36] <discord-raku-bot> <stevied> however, I'm not getting anything back in `$v`

[19:19] <discord-raku-bot> <stevied> ah, dammit, was getting back something but first line was blank.

[19:20] <discord-raku-bot> <stevied> how do I get back all the lines?

[20:26] <discord-raku-bot> <stevied> ok, there was some line buffering going on. using "unbuffer" utility did the trick. see https://stackoverflow.com/a/63513815/1641112

[20:54] <thowe> gfldex: where do you see hexdigits defined?

[21:44] <thowe> stevied: I'm willing to play with it a bit, but I think you need a pastbin or gist or something so I can get your real code.

[23:48] *** n1to left
