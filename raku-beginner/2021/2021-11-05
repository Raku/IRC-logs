[01:51] <discord-raku-bot> <Hydrazer#4827> is there a cons operator? or should i just use the flatten prefix? ```pl

[01:51] <discord-raku-bot> <Hydrazer#4827> my @arr = 1..5;

[01:51] <discord-raku-bot> <Hydrazer#4827> say [5, |@arr];

[01:51] <discord-raku-bot> <Hydrazer#4827> ```

[02:01] *** melezhik34 joined
[02:06] <[Coke]> m: my @a=1..5; @a.unshift: 5; dd @a

[02:06] <camelia> rakudo-moar 3ef09a72e: OUTPUT: «Array @a = [5, 1, 2, 3, 4, 5]␤»

[02:08] <[Coke]> raku gives shift/unshift/pop/push  for adding/removing from the ends, splice, but your way is also fine.

[02:16] <discord-raku-bot> <Hydrazer#4827> yeah i guess that would work too

[02:21] *** melezhik34 left
[08:36] <discord-raku-bot> <gfldex#8222> m:```

[08:36] <discord-raku-bot> <gfldex#8222>     sub infix:«|<<»(\a, \e) {

[08:36] <discord-raku-bot> <gfldex#8222>         Proxy.new(FETCH => method { |a, |e },

[08:36] <discord-raku-bot> <gfldex#8222>                   STORE => method (\e) {})

[08:36] <discord-raku-bot> <gfldex#8222>                   but role { method sink { a.push: e } };

[08:36] <discord-raku-bot> <gfldex#8222>     }

[08:36] <discord-raku-bot> <gfldex#8222>     my @a = 1,2,3;

[08:36] <discord-raku-bot> <gfldex#8222>     @a |<< 4;

[08:36] <discord-raku-bot> <gfldex#8222>     dd @a;

[08:36] <discord-raku-bot> <gfldex#8222>     my @b = @a |<< 5;

[08:36] <discord-raku-bot> <gfldex#8222>     dd @a, @b;

[08:36] <discord-raku-bot> <gfldex#8222> ```

[08:37] <discord-raku-bot> <gfldex#8222> @Hydrazer#4827 We wont stop you from defining your own operator. We are very liberal. :)

[11:02] *** dakkar joined
[11:17] *** dakkar left
[14:07] *** TempIRCLogger left
[14:08] *** TempIRCLogger joined
[15:23] *** [Coke] left
[15:57] *** [Coke] joined
