[19:46] <discord-raku-bot> <Anton Antonov#7232> How can I optimize (get faster execution times) for the following code: 

[19:46] <discord-raku-bot> <Anton Antonov#7232> ```

[19:46] <discord-raku-bot> <Anton Antonov#7232> my @chars =['a' ... 'z'].roll(4);

[19:46] <discord-raku-bot> <Anton Antonov#7232> my %init = @chars[*- 1] => %(ROOT0 => 1e0);

[19:46] <discord-raku-bot> <Anton Antonov#7232> my %res = reduce(-> %a, $x { { $x => %a.push((ROOT2 => 1e0)) } }, (%init, |@chars[^(*- 1)].reverse));

[19:46] <discord-raku-bot> <Anton Antonov#7232> ```

[19:46] <discord-raku-bot> <Anton Antonov#7232> it produces `%res` like this:

[19:46] <discord-raku-bot> <Anton Antonov#7232> ```

[19:46] <discord-raku-bot> <Anton Antonov#7232> {g => {ROOT2 => 1, q => {ROOT2 => 1, l => {ROOT2 => 1, c => {ROOT0 => 1}}}}}

[19:46] <discord-raku-bot> <Anton Antonov#7232> ```

[21:55] <discord-raku-bot> <gfldex#8222>  '@' ~ discord-user(694526400488669234.Str)  With a nested structure you might be better of with custom classes then with Hash. As I understand it, reduce will copy ever growing Hashes into even bigger Hashes.

[21:58] <discord-raku-bot> <Anton Antonov#7232>  '@' ~ discord-user(195453211409121280.Str)  Thanks! I tried that first -- having a tree of objects. I thought moving to hashes would speed-up things. (Here is a more detailed description, in case you are curious: https://github.com/antononcube/Raku-ML-TriesWithFrequencies#implementation-notes )

[22:02] <discord-raku-bot> <Anton Antonov#7232>  '@' ~ discord-user(195453211409121280.Str)  Thanks! I tried that first -- having a tree of objects. I thought moving to hashes would speed-up things. (Here is a more detailed description, in case you are curious: https://github.com/antononcube/Raku-ML-TriesWithFrequencies#implementation-notes )

[22:02] <discord-raku-bot> <Anton Antonov#7232>  '@' ~ discord-user(195453211409121280.Str)  Your comment makes re-examine my object-based implementation...

[22:43] <discord-raku-bot> <lakmatiol#8020> how would I go about checking if a string contains an uppercase letter, `[A-Z]` is not a valid raku regex, `[A..Z]` doesn't seem to do what I need it to

[22:45] <discord-raku-bot> <Morfent#9811> m:```

[22:45] <discord-raku-bot> <Morfent#9811> use v6;

[22:45] <discord-raku-bot> <Morfent#9811> say m:g/ <upper> / given 'abCdeFgh';

[22:45] <discord-raku-bot> <Morfent#9811> ```

[22:45] <discord-raku-bot> <Morfent#9811> m:```

[22:45] <discord-raku-bot> <Morfent#9811> use v6;

[22:45] <discord-raku-bot> <Morfent#9811> say so m:g/ <upper> / given 'abCdeFgh';

[22:45] <discord-raku-bot> <Morfent#9811> ```

[22:47] <discord-raku-bot> <Morfent#9811> m:```

[22:47] <discord-raku-bot> <Morfent#9811> use v6;

[22:47] <discord-raku-bot> <Morfent#9811> say so m:1st/ <upper> / given 'abCdeFgh';

[22:47] <discord-raku-bot> <Morfent#9811> ```

[22:48] <discord-raku-bot> <Morfent#9811> m:```

[22:48] <discord-raku-bot> <Morfent#9811> use v6;

[22:48] <discord-raku-bot> <Morfent#9811> say so m:1st/ <.upper> / given 'abCdeFgh';

[22:48] <discord-raku-bot> <Morfent#9811> ```

[22:48] <discord-raku-bot> <Morfent#9811>  '@' ~ discord-user(207089259730042881.Str)  this is one way

[22:52] <discord-raku-bot> <Morfent#9811> m: ```

[22:52] <discord-raku-bot> <Morfent#9811> say so m:1st/ <[ A..Z ]> / given 'abCdeFgh';

[22:52] <discord-raku-bot> <Morfent#9811> ```

[22:53] <discord-raku-bot> <Morfent#9811> m: ```

[22:53] <discord-raku-bot> <Morfent#9811> use v6;

[22:53] <discord-raku-bot> <Morfent#9811> say so m:1st/ <[ A..Z ]> / given 'abCdeFgh';

[22:53] <discord-raku-bot> <Morfent#9811> ```

[22:53] <discord-raku-bot> <Morfent#9811> m:```

[22:53] <discord-raku-bot> <Morfent#9811> use v6;

[22:53] <discord-raku-bot> <Morfent#9811> say so m:1st/ <[ A..Z ]> / given 'abCdeFgh';

[22:53] <discord-raku-bot> <Morfent#9811> ```

[22:53] <discord-raku-bot> <Morfent#9811> this will match ascii A-Z specifically

