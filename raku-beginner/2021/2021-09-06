[07:05] <discord-raku-bot> <Nemokosch#9980> Hello, how should one interpolate a quoting construct in another quoting construct? Like shell quoting inside a string.

[07:50] *** dakkar joined
[08:09] <discord-raku-bot> <lakmatiol#8020> do you mean sth like

[08:09] <discord-raku-bot> <lakmatiol#8020> ```perl

[08:09] <discord-raku-bot> <lakmatiol#8020> "the uname is $(qx{uname})"

[08:09] <discord-raku-bot> <lakmatiol#8020> ```

[08:15] <lizmat> "foo bar { do whatever code in here } baz"

[08:21] <discord-raku-bot> <Nemokosch#9980> something like that, yes

[08:21] <discord-raku-bot> <Nemokosch#9980> so it will require double paranthesizing, no matter what?

[08:23] <lizmat> well, maybe, if you could use a sub like "run" you could do something like:

[08:23] <lizmat> say "foo &run(<echo bar>, :out).out.slurp()"

[08:24] <lizmat> or wrap that into a sub of your own and call that :-)

[08:25] <lizmat> sub doit(@a)nsub doit(@a) { run(@a, :out).out.slurp }; say "foo &doit(<echo bar>)"

[08:26] <lizmat> sub doit(@a) { run(@a, :out).out.slurp }; say "foo &doit(<echo bar>)"

[08:50] <discord-raku-bot> <sjn ðŸ‡³ðŸ‡´#0644> What are you specifically trying to achieve?

[08:55] <discord-raku-bot> <Nemokosch#9980> interpolating command output in a string?

[08:56] <discord-raku-bot> <Nemokosch#9980> this isn't an XY problem, this is really what I'm trying to achieve and I'm curious what is the idiomatic way among the many possible solutions

[09:02] <discord-raku-bot> <sjn ðŸ‡³ðŸ‡´#0644> my $output = qx<echo "foo">;

[10:09] *** lizmat_ joined
[10:10] *** TempIRCLogger left
[10:10] *** TempIRCLogger joined
[10:13] *** lizmat left
[10:16] *** lizmat_ left
[10:16] *** lizmat joined
[11:50] *** TempIRCLogger left
[11:51] *** TempIRCLogger joined
[12:33] <discord-raku-bot> <Nemokosch#9980> what if the command output should be a part of a longer string?

[12:34] <lizmat> say "longer string $output"

[12:50] <discord-raku-bot> <Nemokosch#9980> and one without a temporary variable? ^^

[12:51] <lizmat> say "longer string { qx<echo foo> }"

[13:01] <discord-raku-bot> <Nemokosch#9980> so it does require some double bracketing

[13:11] <sjn> yes, double quotes generally means interpolation allowed inside

[13:17] <discord-raku-bot> <sjn ðŸ‡³ðŸ‡´#0644> e.g. `say "Kernel is { qx[uname -s] }";` vs. `say 'Kernel is { qx[uname -s] }';`

[15:08] <discord-raku-bot> <Anton Antonov#7232> How can I find the filenames in the resources directory of module / package? The documentation here https://docs.raku.org/language/variables#%?RESOURCES just says : 

[15:08] <discord-raku-bot> <Anton Antonov#7232> > The %?RESOURCES variable is not implemented as a plain Hash, but as an instance of the Distribution::Resources type, so do not expect to see all available resource files in a distribution by printing or by using other ways to inspect its value. Instead, use the API described above to access particular files.

[15:25] <dakkar> Anton: https://github.com/search?q=%22%24%3FRESOURCES%22+language%3ARaku&type=Code&ref=advsearch&l=Raku&l= may give you some examples / inspiration

[15:25] <dakkar> (it would be nicer if github's code search understood sigilsâ€¦)

[15:28] <discord-raku-bot> <Anton Antonov#7232> @dakkar Thanks, I am looking into those search results now...

[15:29] *** dakkar left
[15:29] *** dakkar joined
[15:29] *** dakkar left
[15:29] *** dakkar joined
[15:30] <dakkar> (wow, my irc client dies when I click a linkâ€¦ that's new)

[15:31] <dakkar> Anton: short version: add a file at `resources/mything.txt`, mention it in `META6.json` like `"resources":["mything.txt"]`, then read it via `$?RESOURCES<mything.txt>.slurp` or similar

[15:32] <dakkar> the bit of documentatino you quoted just means "don't expect to see all files by calling `keys`"

[15:33] <dakkar> also, dammit, it's `%?RESOURCES` not `$?RESOURCES`â€¦ /me is still thinking in Perl5

[15:37] <discord-raku-bot> <Anton Antonov#7232> @dakkar I am familiar with what you describe -- accessing the resource files content by explicitly specifying the individual file names. My question is: Can I find the resource file names programmatically? (Not specifying them manually.)

[15:37] <dakkar> no, that is explicitly not a thing you can do

[15:40] <discord-raku-bot> <Anton Antonov#7232> @dakkar Ok. good to know! Thanks!

[16:59] *** dakkar left
[18:33] <discord-raku-bot> <gfldex#8222> m:```

[18:33] <discord-raku-bot> <gfldex#8222> class __px {}

[18:33] <discord-raku-bot> <gfldex#8222> multi postcircumfix:<{ }>(__px, @a) { "interpolation of @a[]" }

[18:33] <discord-raku-bot> <gfldex#8222> constant term:<&px> = __px;

[18:33] <discord-raku-bot> <gfldex#8222> say "&px<1 2 3>"

[18:33] <discord-raku-bot> <gfldex#8222> ```

[18:34] <discord-raku-bot> <gfldex#8222> <@!297037173541175296> ^^^

[18:35] <discord-raku-bot> <gfldex#8222> This is slightly evil tho.

[19:11] <discord-raku-bot> <Nemokosch#9980> what is this?

[19:38] *** TempIRCLogger left
[19:38] *** TempIRCLogger joined
[20:11] <discord-raku-bot> <gfldex#8222> <@!297037173541175296> This a trick to get function call semantics combined with subscripts that can be used in quotes.

[20:12] <discord-raku-bot> <gfldex#8222> m:```

[20:12] <discord-raku-bot> <gfldex#8222> sub px(@a) { "interpolation of @a[]" }

[20:12] <discord-raku-bot> <gfldex#8222> say "&px<1 2 3>";

[20:12] <discord-raku-bot> <gfldex#8222> ```

[20:12] <discord-raku-bot> <gfldex#8222> You can't use a sub directly. At least not without parentheses.

[20:13] <discord-raku-bot> <Nemokosch#9980> so yours works because you actually override an operator for a dummy class?

[20:14] <discord-raku-bot> <gfldex#8222> yes, and use a term that looks like a sub-reference.

[20:14] <discord-raku-bot> <gfldex#8222> I didn't expect that to work tho. Rakudo is full of surprises. :)

[20:16] <discord-raku-bot> <Nemokosch#9980> ðŸ˜‚

[20:17] <discord-raku-bot> <Nemokosch#9980> so this line

[20:17] <discord-raku-bot> <Nemokosch#9980> ```

[20:17] <discord-raku-bot> <Nemokosch#9980> constant term:<&px> = __px;

[20:17] <discord-raku-bot> <Nemokosch#9980> ```

[20:17] <discord-raku-bot> <Nemokosch#9980> is important here

[20:17] <discord-raku-bot> <gfldex#8222> indeed

[20:18] <discord-raku-bot> <Nemokosch#9980> does it require the "sigil"?

[20:18] <discord-raku-bot> <gfldex#8222> yes, or the quote construct would take it as verbatim

[20:20] <discord-raku-bot> <Nemokosch#9980> so there needs to be something to remind Rakudo that some interpolation is going on

[20:20] <discord-raku-bot> <Nemokosch#9980> makes sense

[20:30] <discord-raku-bot> <gfldex#8222> I can't find this in Roast. So it might be more then just slightly evil. I shall open a problem solving issue.

