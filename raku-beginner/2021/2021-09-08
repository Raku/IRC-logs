[05:13] <discord-raku-bot> <Util#9950> <@!297037173541175296> We more reasonably check for membership in a hash by just looking the key up in the hash.

[05:13] <discord-raku-bot> <Util#9950> In your code, this neatly dovetails with the need in the next line to use the looked-up value.

[05:13] <discord-raku-bot> <Util#9950> Also dovetailing, an `if` statement can alias the result of its condition, and you want a "normal" list, so how about:

[05:13] <discord-raku-bot> <Util#9950>     constant $basis-postfix = 'Foo'; # Added to make example compile

[05:13] <discord-raku-bot> <Util#9950>     my $choice = 3;                  # Added to make example compile

[05:13] <discord-raku-bot> <Util#9950>     constant \choices = {

[05:13] <discord-raku-bot> <Util#9950>         1 => ('old', "old_$basis-postfix"),

[05:13] <discord-raku-bot> <Util#9950>         2 => ('new', 'old'),

[05:13] <discord-raku-bot> <Util#9950>         3 => ('new', 'old', "old_$basis-postfix"),

[05:13] <discord-raku-bot> <Util#9950>     };

[05:13] <discord-raku-bot> <Util#9950>     if choices{$choice} -> @meld_params {

[05:13] <discord-raku-bot> <Util#9950>         run 'meld', |@meld_params;

[05:15] <discord-raku-bot> <Util#9950> ```

[05:15] <discord-raku-bot> <Util#9950> constant $basis-postfix = 'Foo'; # Added to make example compile

[05:15] <discord-raku-bot> <Util#9950> my $choice = 3;                  # Added to make example compile

[05:15] <discord-raku-bot> <Util#9950> constant \choices = {

[05:15] <discord-raku-bot> <Util#9950>     1 => ('old', "old_$basis-postfix"),

[05:15] <discord-raku-bot> <Util#9950>     2 => ('new', 'old'),

[05:15] <discord-raku-bot> <Util#9950>     3 => ('new', 'old', "old_$basis-postfix"),

[05:15] <discord-raku-bot> <Util#9950> };

[05:15] <discord-raku-bot> <Util#9950> if choices{$choice} -> @meld_params {

[05:15] <discord-raku-bot> <Util#9950>     run 'meld', |@meld_params;

[05:15] <discord-raku-bot> <Util#9950> }

[05:15] <discord-raku-bot> <Util#9950> else {

[05:15] <discord-raku-bot> <Util#9950>     say "Choice $choice was not valid. Please choose from {choices.keys.sort.join(',')}";

[05:15] <discord-raku-bot> <Util#9950> }

[05:17] *** Util joined
[06:46] <discord-raku-bot> <Nemokosch#9980> You know, I'm not sure how much that check was meant for the hash. It was more for the type of the choice (and there is only this one type so far)

[08:08] *** dakkar joined
[09:39] *** discord-raku-bot left
[09:40] *** discord-raku-bot joined
[16:39] *** dakkar left
[16:50] *** zacts joined
[16:50] <zacts> hi

[16:50] <zacts> what resources are there for a complete beginner to learn raku?

[16:51] *** lizmat_ joined
[16:55] *** lizmat left
[16:56] *** lizmat_ left
[16:56] *** lizmat joined
[16:58] <gfldex> zacts: https://raku.org/resources/ got a section called For Newcomers

[16:59] <gfldex> please note the distinction between between Newcomers and Beginners. I'm a Raku Beginner since 2008 myself.

[17:31] <zacts> thanks gfldex

[22:39] *** TempIRCLogger joined
