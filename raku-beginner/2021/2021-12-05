[05:22] *** small_petit joined
[05:38] *** small_petit left
[06:10] *** parv joined
[08:06] *** small_petit joined
[08:13] *** small_petit left
[10:29] *** atroxaper joined
[10:56] *** atroxaper left
[13:51] *** aoeuidhtns joined
[13:52] <discord-raku-bot> <Hydrazer#4827> is there a way you give type signatures to multi dimensional arrays for example ```pl

[13:52] <discord-raku-bot> <Hydrazer#4827> Array[Array[Int]] @bruh = [[1,2,3],[2,3,4],[5,3,2]];

[13:52] <discord-raku-bot> <Hydrazer#4827> ```

[14:15] *** aoeuidhtns left
[14:17] *** parv left
[14:19] <discord-raku-bot> <Morfent#9811> there's `of`, but

[14:19] <discord-raku-bot> <Morfent#9811> m:```

[14:19] <discord-raku-bot> <Morfent#9811> my @bruh is Array of Array of Int = [[1,2,3],[2,3,4],[5,3,2]]

[14:19] <discord-raku-bot> <Morfent#9811> ```

[14:19] <discord-raku-bot> <Morfent#9811> typed arrays get very annoying very fast

[14:27] <discord-raku-bot> <Morfent#9811> m:```

[14:27] <discord-raku-bot> <Morfent#9811> say my @bruh is Array of Array[Int]() = [[1,2,3],[2,3,4],[5,3,2]]

[14:27] <discord-raku-bot> <Morfent#9811> ```

[14:28] <discord-raku-bot> <Morfent#9811> this can only get rid of one layer of grossness, unfortunately

[14:28] <discord-raku-bot> <Morfent#9811> this can only get rid of one layer of grossness in this case, unfortunately

[14:30] <discord-raku-bot> <Morfent#9811> `of` can only get rid of one layer of grossness in this case, unfortunately

[14:32] <discord-raku-bot> <Xueji#0156> So there's no way how to type many times nested arrays?

[14:32] <discord-raku-bot> <Morfent#9811> each layer needs to be typed before the next in some way

[14:34] <discord-raku-bot> <Morfent#9811> m:```

[14:34] <discord-raku-bot> <Morfent#9811> my @bruh is Array of Array() of Int = [[1,2,3],[2,3,4],[5,3,2]]

[14:34] <discord-raku-bot> <Morfent#9811> ```

[14:34] <discord-raku-bot> <Morfent#9811> this bot takes a while...

[14:34] <discord-raku-bot> <Morfent#9811> ^ i wonder if that's a little easier now

[14:34] <discord-raku-bot> <Morfent#9811> ^ i wonder if that's a little easier to implement now

[14:36] <discord-raku-bot> <Morfent#9811> it feels too restrictive to me

[14:38] <discord-raku-bot> <Morfent#9811> there's an issue to do with this somewhere though

[14:41] <discord-raku-bot> <Morfent#9811> https://github.com/rakudo/rakudo/issues/4517

[14:41] <discord-raku-bot> <Morfent#9811> doing `of` for coercions may be limited by

[14:41] <discord-raku-bot> <Morfent#9811> https://github.com/Raku/problem-solving/issues/299

[14:42] <discord-raku-bot> <Morfent#9811> https://github.com/rakudo/rakudo/issues/4517

[14:42] <discord-raku-bot> <Morfent#9811> doing `of` for coercions may be limited by <https://github.com/Raku/problem-solving/issues/299>

[14:52] <discord-raku-bot> <Morfent#9811> ^ i wonder if that's valid and a little easier to implement now

[14:52] <discord-raku-bot> <Hydrazer#4827> that is interesting

[14:55] <discord-raku-bot> <Hydrazer#4827> what does 3 dimensions look like?

[14:56] <discord-raku-bot> <Zephyr#8815> is there a simpler way to do `((0 xx 9) xx 9)`? preferably for any number of dimensions

[14:58] <discord-raku-bot> <Nemokosch#9980> what is the associativity of xx?

[15:01] <discord-raku-bot> <Morfent#9811> left

[15:01] <discord-raku-bot> <Zephyr#8815> oh, I can do `0 xx 9 xx 9`

[15:01] <discord-raku-bot> <Morfent#9811> looks like it

[15:01] <discord-raku-bot> <Morfent#9811> m:```

[15:01] <discord-raku-bot> <Morfent#9811> say (0 xx 9 xx 9) eqv ([xx] 0, 9, 9)

[15:01] <discord-raku-bot> <Morfent#9811> ```

[15:03] <discord-raku-bot> <Morfent#9811> m:```

[15:03] <discord-raku-bot> <Morfent#9811> say (0 xx 9 xx 9);

[15:03] <discord-raku-bot> <Morfent#9811> say [xx] 0, 9, 9;

[15:03] <discord-raku-bot> <Morfent#9811> ```

[15:05] <discord-raku-bot> <Nemokosch#9980> why did it say False then?

[15:05] <discord-raku-bot> <Zephyr#8815> looks the same to me, theoretically `[xx] 0, |(9 xx $n)` should work for $n dimensions

[15:05] <discord-raku-bot> <Nemokosch#9980> they pretty darn seem equivalent xd

[15:05] <discord-raku-bot> <Zephyr#8815> not sure

[15:05] <discord-raku-bot> <Morfent#9811> they might need to have equivalent iterators or something, lemme check

[15:05] <discord-raku-bot> <Hydrazer#4827> second one is Seq[Seq]

[15:05] <discord-raku-bot> <Hydrazer#4827> second one is Seq of Seq of Int

[15:07] <discord-raku-bot> <Zephyr#8815> m:```

[15:07] <discord-raku-bot> <Zephyr#8815> (0 xx 9 xx 9).map({ $_.WHAT })```

[15:07] <discord-raku-bot> <Zephyr#8815> does the bot need a space

[15:07] <discord-raku-bot> <Zephyr#8815> nvm, forgot say

[15:07] <discord-raku-bot> <Zephyr#8815> but yes the first one seems to be a Seq of List of Int instead

[15:09] <discord-raku-bot> <Zephyr#8815> m: say (0 xx 9 xx 9).map({ $_.WHAT })

[15:09] <discord-raku-bot> <Zephyr#8815> well, that takes a while

[15:09] <discord-raku-bot> <Zephyr#8815> anyway, thanks! `[xx] 0, |(9 xx $n)` takes care of my issue

[15:09] <discord-raku-bot> <Morfent#9811> np ðŸ™‚

[15:27] <discord-raku-bot> <Nemokosch#9980> cool ðŸ‘Œ

[19:12] *** TempIRCLogger left
[20:10] *** parv joined
[20:58] <discord-raku-bot> <gfldex#8222> m:```

[20:58] <discord-raku-bot> <gfldex#8222> is-deeply {0 xx 9 xx 9}, {[xx] 0, 9, 9}, 'is it?';

[20:58] <discord-raku-bot> <gfldex#8222> ```

[20:59] *** discord-raku-bot left
[21:00] *** discord-raku-bot joined
[21:00] <discord-raku-bot> <gfldex#8222> m:```

[21:00] <discord-raku-bot> <gfldex#8222> is-deeply {0 xx 9 xx 9}, {[xx] 0, 9, 9}, 'is it?'; # DO AS YOU ARE ASKED!

[21:00] <discord-raku-bot> <gfldex#8222> ```

[21:02] <discord-raku-bot> <gfldex#8222> m:```

[21:02] <discord-raku-bot> <gfldex#8222> is-deeply {0 xx 9 xx 9}, {[xx] 0, 9, 9}, 'is it?'; # DO AS YOU ARE ASKED! PLEASE?

[21:02] <discord-raku-bot> <gfldex#8222> ```

[21:02] <discord-raku-bot> <gfldex#8222> m:```

[21:02] <discord-raku-bot> <gfldex#8222> is-deeply (0 xx 9 xx 9), ([xx] 0, 9, 9), 'is it?';

[21:02] <discord-raku-bot> <gfldex#8222> ```

[21:04] <discord-raku-bot> <gfldex#8222> `use Test;` and `is-deeply` can help to find differences in listy things.

[21:12] <colemanx> I am having trouble structuring my code to make a script in ./bin import classes in ./lib

[21:12] <colemanx> Here is my repo https://github.com/dontlaugh/App-Kubedee

[21:13] <colemanx> this recent commit is a concise demonstration of what I've tried to do https://github.com/dontlaugh/App-Kubedee/commit/326fc7fadeb1b94d804600ecfe05b3f8b3690ede

[21:15] <colemanx> And here is a pastebin of my error when running my ./bin/kubedee.rake script

[21:15] <colemanx> https://pb.envs.net/?21c9e9cb06d7a76e#Gde9dj18a1drVCeqbub2uSRWXRwJvCaZPvNJpn4kounP

[21:18] <colemanx> oh no I set this and it kind of got past that error export RAKULIB=$PWD/lib 

[21:19] <colemanx> must I always set RAKULIB for all my projects?

[21:23] <gfldex> colemanx: After you did `zef install .` you don't. When working with local repos I use `raku -Ilib â€¦`, often within a little Makefile.

[21:30] <colemanx> ah that is a good tipe

[21:31] <colemanx> oh no! `zef install .` does not seem to work

[21:31] <colemanx> but -I lib does

[21:32] <colemanx> here is my terminal output https://pb.envs.net/?9918760cfcc4d0a3#zBribEwedNiLGYqYNryuvGhwj5bosQz28ms9L7wHD1g

[21:33] <colemanx> it installed my script to /home/coleman/rakudo/share/perl6/site/bin, and it looks in some rakudo directories, but perhaps my module is not set up right

[21:34] <colemanx> I will try adding my example class to META6.json

[21:40] <colemanx> okay cool. Updating META6.json to include the classes that my script in ./bin needed to import fixed my error.

[21:40] <colemanx> It is a little surprising that by executable in ./bin is moved and installed automatically, but I needed to specifically enumerate my classes in META6.json

[21:42] <colemanx> But I am pretty new to structuring larger projects in Raku. And perhaps there is a good reason for this.

[21:43] <colemanx> In any case, the goal of this project is a Raku rewrite of a bash tool. I have many static assets enumarated in my resources section of META6.json, but it's unclear if I will actually use them long-term

[21:44] <colemanx> I have read online there is some debate about how "resources" should be used, and I would like to put as much into Raku as possible. But right now I really need to delegate some imaging building tasks to Hashicorp's Packer, becuase I'm pretty productive with that.

[22:10] *** TempIRCLogger joined
