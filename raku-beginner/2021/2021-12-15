[00:11] <discord-raku-bot> <gfldex#8222> m: "..##".trans: . => a, # => e; # Rakudo, how clever are you?

[00:11] <discord-raku-bot> <gfldex#8222> m: m: "..##".trans: '.' => a, '#' => e; # Rakudo, how clever are you?

[00:13] <discord-raku-bot> <gfldex#8222> m: m: "..##".trans: '.' => 'a', '#' => 'e'; # Rakudo, how clever are you?

[00:13] <discord-raku-bot> <gfldex#8222> m: "..##".trans: '.' => 'a', '#' => 'e'; # Rakudo, how clever are you?

[00:13] <discord-raku-bot> <gfldex#8222> m: say "..##".trans: '.' => 'a', '#' => 'e';

[00:15] <discord-raku-bot> <gfldex#8222> m: say "..##".trans: <. #> => <a e>;

[00:21] <discord-raku-bot> <gfldex#8222> This should have been covered by https://github.com/rakudo/rakudo/issues/2118

[00:33] <discord-raku-bot> <gfldex#8222> This is a nice example, that test driven programming works well -- with the right kinds of tests.

[01:39] <discord-raku-bot> <Hydrazer#4827> oeuf

[03:30] <discord-raku-bot> <gfldex#8222> m:```

[03:30] <discord-raku-bot> <gfldex#8222>     multi sub possible($a, $b where { $a == $b¬≤ }) { say ‚Äû$a is $b¬≤‚Äú }

[03:30] <discord-raku-bot> <gfldex#8222>     multi sub possible($a, $b where { $a =~= $b¬≤}) { say ‚Äû$a is possibly $b¬≤‚Äú }

[03:30] <discord-raku-bot> <gfldex#8222>     multi sub possible(| ($a, $b)) { say ‚Äû$a is not $b¬≤‚Äú }

[03:30] <discord-raku-bot> <gfldex#8222>     possible 1, -1;

[03:30] <discord-raku-bot> <gfldex#8222>     possible 2, sqrt(2);

[03:30] <discord-raku-bot> <gfldex#8222>     possible 4, 4;

[03:30] <discord-raku-bot> <gfldex#8222> ```

[06:44] <discord-raku-bot> <Nemokosch#9980> So can you confirm that this still isn't the right behavior for # inside tr?

[07:47] *** parv left
[08:31] <discord-raku-bot> <gfldex#8222> So far there was no reply in <#633753335119478795> .

[09:01] *** dakkar joined
[11:30] *** TempIRCLogger left
[11:31] *** TempIRCLogger joined
[11:38] *** TempIRCLogger left
[11:38] *** TempIRCLogger joined
[11:44] *** TempIRCLogger left
[11:44] *** TempIRCLogger joined
[11:44] *** TempIRCLogger left
[11:44] *** TempIRCLogger joined
[11:44] *** TempIRCLogger left
[11:44] *** TempIRCLogger joined
[11:45] *** TempIRCLogger left
[11:45] *** TempIRCLogger joined
[11:45] *** TempIRCLogger left
[11:45] *** TempIRCLogger joined
[11:45] *** TempIRCLogger left
[11:45] *** TempIRCLogger joined
[11:45] *** TempIRCLogger left
[11:45] *** TempIRCLogger joined
[11:45] *** TempIRCLogger left
[12:07] *** TempIRCLogger joined
[12:12] *** TempIRCLogger left
[12:12] *** TempIRCLogger joined
[12:16] *** TempIRCLogger left
[12:16] *** TempIRCLogger joined
[12:18] <discord-raku-bot> <Nemokosch#9980> üò¨

[12:22] *** TempIRCLogger left
[12:22] *** TempIRCLogger joined
[13:00] *** TempIRCLogger left
[13:00] *** TempIRCLogger joined
[13:00] *** TempIRCLogger left
[13:00] *** TempIRCLogger joined
[13:25] *** TempIRCLogger left
[13:25] *** TempIRCLogger joined
[13:25] *** TempIRCLogger left
[13:26] *** TempIRCLogger joined
[13:27] *** TempIRCLogger left
[13:27] *** TempIRCLogger joined
[13:27] *** TempIRCLogger left
[13:28] *** TempIRCLogger joined
[13:37] *** TempIRCLogger left
[13:37] *** TempIRCLogger joined
[13:44] *** TempIRCLogger left
[13:45] *** TempIRCLogger joined
[13:52] *** TempIRCLogger left
[13:52] *** TempIRCLogger joined
[13:58] *** TempIRCLogger left
[13:58] *** TempIRCLogger joined
[14:11] *** TempIRCLogger left
[14:11] *** TempIRCLogger joined
[14:12] *** TempIRCLogger left
[14:12] *** TempIRCLogger joined
[14:59] *** halcek joined
[14:59] <halcek> Uploaded file: https://uploads.kiwiirc.com/files/56f004e61685f035b608355a73f13638/pasted.txt

[15:00] <halcek> Hi, a quick question: Is, or could there be there some built-in function in Raku, equivalent to Ruby's times? So that you can set repeating a value by using a keyword (such as times, in 5.times ( print "T" ) , or something like print "T" 5.times, which is grammatically natural for a novice, instead of an operator being the only possibility to

[15:00] <halcek> induce this like: print "T" x 5?

[15:00] <lizmat> m: print "T" for ^5

[15:00] <camelia> rakudo-moar ca4f003bc: OUTPUT: ¬´TTTTT¬ª

[15:01] <lizmat> halcek ^^

[15:01] <halcek> lizmat yes, something like that! Thanks,

[15:01] *** halcek left
[15:31] <SmokeMachine> m: print(‚ÄúT‚Äù) xx 5

[15:31] <camelia> rakudo-moar ca4f003bc: OUTPUT: ¬´TTTTT¬ª

[15:33] <lizmat> 	m: say print(‚ÄúT‚Äù) xx 5

[15:33] <camelia> rakudo-moar ca4f003bc: OUTPUT: ¬´TTTTT(True True True True True)‚ê§¬ª

[15:33] <lizmat> I generally consider xx to not be used for its side-effects, but you're right, you could do it like that as well  :-)

[15:39] <discord-raku-bot> <Nemokosch#9980> what side effects?

[15:40] <SmokeMachine> The printed string

[15:41] <discord-raku-bot> <Nemokosch#9980> oh I misunderstood it for 'T' xx 5

[17:37] *** dakkar left
[19:49] *** TempIRCLogger left
[19:50] *** TempIRCLogger joined
