[01:17] *** parv left
[04:40] *** Flwyd joined
[04:45] <Flwyd> What's the usual way to split a program across multiple files?  E.g. foo.raku has `class Foo` and bar.raku has `class Bar` and the two classes can reference each other?

[04:46] <Flwyd> I've read the documentation on modules, packages, and compunits, and I don't _think_ I want to make a module for each class.

[04:50] *** Kaiepi joined
[05:26] *** sjn left
[05:26] *** Flwyd left
[05:26] *** qorg11 left
[05:26] *** sivoais left
[05:26] *** mjgardner left
[05:26] *** tbrowder left
[05:26] *** SmokeMachine left
[05:26] *** hexology left
[05:26] *** Util_ left
[05:26] *** codesections left
[05:26] *** CIAvash left
[05:26] *** samebchase left
[05:27] *** Flwyd joined
[05:27] *** sivoais joined
[05:27] *** qorg11 joined
[05:27] *** hexology joined
[05:27] *** sjn joined
[05:27] *** Util_ joined
[05:27] *** mjgardner joined
[05:27] *** tbrowder joined
[05:27] *** SmokeMachine joined
[05:27] *** CIAvash joined
[05:27] *** samebchase joined
[05:27] *** codesections joined
[05:50] *** samebchase left
[08:04] *** riffraff joined
[08:48] <SmokeMachine> Flwyd: usually you have 1 .raku file that can ‚Äúimport‚Äù other .rakumod files using `use` (https://docs.raku.org/language/modules#index-entry-use)

[08:54] <SmokeMachine> Flwyd: an example using 3 different files: https://glot.io/snippets/g4wdiwvfta

[09:01] *** frost joined
[09:01] *** frost left
[09:13] *** dakkar joined
[11:01] *** riffraff left
[11:02] *** riffraff joined
[11:11] *** riffraff left
[11:11] *** riffraff joined
[11:15] *** riffraff left
[11:40] *** riffraff joined
[13:18] <discord-raku-bot> <Nemokosch#9980> is there a short way to transpose a two-dimensional array?

[13:29] <discord-raku-bot> <atroxaper#8606> Yes. https://andrewshitov.com/2019/09/09/how-to-transpose-a-matrix-in-perl-6/

[13:30] <discord-raku-bot> <Nemokosch#9980> zip reduce ü§Ø

[13:30] <discord-raku-bot> <Nemokosch#9980> very clever, thank you

[14:22] <discord-raku-bot> <Nemokosch#9980> hm, wait

[14:22] <discord-raku-bot> <Nemokosch#9980> why does this work?

[14:23] <discord-raku-bot> <Nemokosch#9980> m: dd [1, 2] Z [3, 4] Z [5, 6];

[14:24] <discord-raku-bot> <Nemokosch#9980> m: dd ([1, 2] Z [3, 4]) Z [5, 6];

[14:25] <discord-raku-bot> <Nemokosch#9980> > sub infix:<Z>(**@lists --> Seq:D) is assoc<list>

[14:25] <discord-raku-bot> <Nemokosch#9980> is this because of the list associativity?

[14:32] <discord-raku-bot> <Hydrazer#4827> how can i fix string keys in hash? ```pl

[14:32] <discord-raku-bot> <Hydrazer#4827> my %hash{Int} = (3 => 5, 5 => 1, 6 => 4);

[14:32] <discord-raku-bot> <Hydrazer#4827> %hash = %hash.Hash.kv.map(-> $a, $b {$b => $a}).Hash;

[14:32] <discord-raku-bot> <Hydrazer#4827> say %hash

[14:32] <discord-raku-bot> <Hydrazer#4827> ``````

[14:32] <discord-raku-bot> <Hydrazer#4827> Type check failed in binding to parameter 'key'; expected Int but got Str ("5")

[14:32] <discord-raku-bot> <Hydrazer#4827>   in block <unit> at file0.code line 2

[14:32] <discord-raku-bot> <Hydrazer#4827> ```

[14:36] <discord-raku-bot> <Hydrazer#4827> hm seems to work if i declare a new hash then insert into that one

[14:44] *** A26F64 joined
[14:46] <discord-raku-bot> <atroxaper#8606> => Operator makes left side be Str. = operator takes (in first line) takes a list from the right side (yes, it is list) and `convert` it to hash. But in second line you already have a hash on the right side and = operator do not convert it. If you change `.Hash` to `.List` in second line, it will work.

[14:48] <discord-raku-bot> <atroxaper#8606> Change the trailing .Hash, of course.

[14:50] <discord-raku-bot> <Hydrazer#4827> can you check my gist in <#783746907225980958> im not sure why half the time it say ```

[14:50] <discord-raku-bot> <Hydrazer#4827> Cannot look up attributes in a VMNull type object

[14:50] <discord-raku-bot> <Hydrazer#4827>   in block <unit> at 2021/06/part_two.raku line 40

[14:50] <discord-raku-bot> <Hydrazer#4827> ```

[14:52] <discord-raku-bot> <Hydrazer#4827> tried for an hour but i can't get consistent result

[14:57] <discord-raku-bot> <atroxaper#8606> What should I pass to 'get' ?

[15:00] *** riffraff left
[15:00] *** riffraff joined
[15:21] *** riffraff left
[15:21] *** riffraff joined
[15:25] *** riffraff left
[15:29] <discord-raku-bot> <Nemokosch#9980> can I use the hyper operator to perform multiple operations on the same data?

[15:31] <discord-raku-bot> <atroxaper#8606> `(1,22,333,4444)>>.Str>>.chars` ?

[15:33] <discord-raku-bot> <Nemokosch#9980> oh, I didn't phrase it clear enough

[15:33] <discord-raku-bot> <Nemokosch#9980> I'd like to get some f1(v), f2(v), f3(v)

[15:34] <discord-raku-bot> <Nemokosch#9980> to further complicate things, v is supposed to be a positional

[15:49] <discord-raku-bot> <Xueji#0156> Today I have learned, that raku has a class for signature (of callable) - which is interesting. I don‚Äôt think I have everseen language treating a signature like an object.

[15:49] <discord-raku-bot> <Xueji#0156> Why is that? Did any of you used class signature for something cool?

[15:50] <discord-raku-bot> <Xueji#0156> Today I have learned, that raku has a class for signature (of callable) - which is interesting. I don‚Äôt think I have everseen language treating a signature like an object.

[15:50] <discord-raku-bot> <Xueji#0156> Why is that? Did any of you used class Signature for something cool?

[15:52] <discord-raku-bot> <atroxaper#8606> @Nemokosch#9980 I invent something like:

[15:52] <discord-raku-bot> <atroxaper#8606> ```

[15:52] <discord-raku-bot> <atroxaper#8606> my sub f1(@v) { @v>>.Str.List }

[15:52] <discord-raku-bot> <atroxaper#8606> my sub f2(@v) { @v>>.Int.List }

[15:52] <discord-raku-bot> <atroxaper#8606> multi sub infix:<@>(Block $f, \v) { $f(v) }

[15:52] <discord-raku-bot> <atroxaper#8606> say (&f1, &f2) >>@>> ([1,2,3],)

[15:52] <discord-raku-bot> <atroxaper#8606> ```

[15:52] <discord-raku-bot> <atroxaper#8606> But I fail somewhere -> runtime error. Probably you will fix it. Or do some better solution.

[15:55] <discord-raku-bot> <Nemokosch#9980> thanks anyway

[15:55] *** riffraff joined
[15:58] <discord-raku-bot> <ionsolo#0792> ```perl

[15:58] <discord-raku-bot> <ionsolo#0792> (^100)>>.&(-> \v {(v * 2), (v*4), (v*7) })

[15:58] <discord-raku-bot> <ionsolo#0792> ```

[15:59] <discord-raku-bot> <atroxaper#8606> @Xueji#0156 

[15:59] <discord-raku-bot> <atroxaper#8606> ```

[15:59] <discord-raku-bot> <atroxaper#8606> sub foo($foo, :$bar!) { say "$foo, $bar" }

[15:59] <discord-raku-bot> <atroxaper#8606> my @good = 1, bar => 2;

[15:59] <discord-raku-bot> <atroxaper#8606> my @bad = foo => 1, bar => 2;

[15:59] <discord-raku-bot> <atroxaper#8606> say |@good ~~ &foo.signature; # True

[15:59] <discord-raku-bot> <atroxaper#8606> say |@bad ~~ &foo.signature;  # False

[15:59] <discord-raku-bot> <atroxaper#8606> ```

[15:59] <discord-raku-bot> <atroxaper#8606> We get arguments and check if they satisfy the signature. In other words, can we pass them to the function.

[16:00] <discord-raku-bot> <atroxaper#8606> @ionsolo#0792 brilliant!ü§©

[16:02] <discord-raku-bot> <Nemokosch#9980> i mean...

[16:02] <discord-raku-bot> <Nemokosch#9980> this is basically one call, isn't it?

[16:02] <discord-raku-bot> <Nemokosch#9980> not so different from calling map

[16:03] <discord-raku-bot> <ionsolo#0792> lol yes, you have and example of structure of output you want?

[16:04] <discord-raku-bot> <ionsolo#0792> for example f1(v) changes something in place or not?

[16:04] <discord-raku-bot> <Nemokosch#9980> no

[16:04] <discord-raku-bot> <Nemokosch#9980> very blantly put, I want to pass .min, .max and possibly other similar method calls to some positional

[16:06] <discord-raku-bot> <Nemokosch#9980> And I'm not even sure whether the hyper metaoperator supports any syntax for calling multiple methods for the same object in a parallel fashion

[16:09] <discord-raku-bot> <lakmatiol#8020> python has this too, it is often used for creating nice APIs, e.g.. fastAPI infers the parameters for an endpoint from it. Not sure anyone tried that in raku specifically  though.

[16:13] <discord-raku-bot> <ionsolo#0792> ohh let me see

[16:13] <discord-raku-bot> <ionsolo#0792> ```perl

[16:13] <discord-raku-bot> <ionsolo#0792> my @results = .min,.max,.other with @data

[16:13] <discord-raku-bot> <ionsolo#0792> ```

[16:15] <discord-raku-bot> <ionsolo#0792> it's something like this?

[16:15] <discord-raku-bot> <Nemokosch#9980> yes

[16:15] <discord-raku-bot> <ionsolo#0792> I think I'm missing something in the translation üòî

[16:15] <discord-raku-bot> <Nemokosch#9980> hm?

[16:17] <discord-raku-bot> <ionsolo#0792> what is hm?

[16:18] <discord-raku-bot> <Nemokosch#9980> what did you mean?

[16:19] <discord-raku-bot> <ionsolo#0792> I don't known what is hm, I search on Google and I get cloth stuff

[16:20] <discord-raku-bot> <Nemokosch#9980> are you trolling or something? üòÜ

[16:20] <discord-raku-bot> <ionsolo#0792> ohh, I mean I am not a English native speaker

[16:20] <discord-raku-bot> <ionsolo#0792> loool

[16:21] <discord-raku-bot> <Xueji#0156> Aha, I see. I usually work with statically typed languages, they usually don‚Äôt have that. I will check python examples, thanks!

[16:25] <discord-raku-bot> <Nemokosch#9980> this is a way to do it without hyper operator and I wonder whether this can be rephrased using it

[16:25] <discord-raku-bot> <atroxaper#8606> Am I right, that you can introspect a function signature in python, but you do not have a signature as object (and attribute of a function) as we have in Raku?

[16:26] <discord-raku-bot> <lakmatiol#8020> there is a Signature type

[16:26] <discord-raku-bot> <lakmatiol#8020> but it is indeed not an attribute of a function

[16:26] <discord-raku-bot> <lakmatiol#8020> the `inspect` module constructs it by inspecting other function attributes

[16:27] <discord-raku-bot> <atroxaper#8606> Something similar, yes.

[16:31] <discord-raku-bot> <atroxaper#8606> I think, Python's situation is like in Java. You can 'create signature object' by introspection.

[16:33] *** A26F64 left
[16:39] *** riffraff left
[16:39] *** riffraff joined
[17:08] *** azee joined
[17:09] *** azee left
[17:29] <discord-raku-bot> <ionsolo#0792> I think even is possible do it in parallel

[17:30] *** riffraff left
[17:30] *** riffraff joined
[17:35] *** dakkar left
[17:42] <discord-raku-bot> <Nemokosch#9980> I don't understand it

[17:44] *** discord-raku-bot left
[17:45] *** discord-raku-bot joined
[17:58] *** Flwyd left
[19:08] <discord-raku-bot> <ionsolo#0792> another way could be 

[19:08] <discord-raku-bot> <ionsolo#0792> ```perl

[19:08] <discord-raku-bot> <ionsolo#0792> (&min,&max)>>.&{$_(@data)} 

[19:08] <discord-raku-bot> <ionsolo#0792> ```

[19:10] <discord-raku-bot> <Nemokosch#9980> does this really work? It looks okay

[19:14] <discord-raku-bot> <ionsolo#0792> i refer before: should be a way to do (call many functions) on a @array reading in once for all function, I mean reading @array once and get the results for all functions, should be a way without do loops but I don't known how

[19:16] <discord-raku-bot> <ionsolo#0792> the other day found this and I think some ideas could be translated to alter the way of coding in raku 

[19:16] <discord-raku-bot> <ionsolo#0792> https://www.jsoftware.com/help/jforc/loopless_code_i_verbs_have_r.htm

[19:16] <discord-raku-bot> <ionsolo#0792> but also I'm lazy

[19:22] *** melezhik joined
[19:43] <discord-raku-bot> <gfldex#8222> I did use signature introspection a few times. One of them can be found here: https://gfldex.wordpress.com/2019/01/23/a-picky-caller/

[20:03] *** riffraff left
[20:04] *** riffraff joined
[20:05] *** riffraff left
[20:05] *** riffraff joined
[20:06] *** melezhik left
[20:41] <lizmat> and yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2021/12/06/2021-49-adventing-is-on/

[20:43] *** melezhik joined
[21:10] *** melezhik left
[22:19] *** tbrowder left
[22:21] *** riffraff left
[22:21] *** riffraff joined
[22:22] *** tbrowder joined
[22:27] *** riffraff left
[22:33] <discord-raku-bot> <Hydrazer#4827> is there a better way to set a default value in a hash map if it doesn't exist? ```pl

[22:33] <discord-raku-bot> <Hydrazer#4827> my %hash;

[22:33] <discord-raku-bot> <Hydrazer#4827> my $num = 3;

[22:33] <discord-raku-bot> <Hydrazer#4827> if !%hash{$num}:exists {

[22:33] <discord-raku-bot> <Hydrazer#4827>   %hash{$num} = "chicken";

[22:33] <discord-raku-bot> <Hydrazer#4827> }

[22:33] <discord-raku-bot> <Hydrazer#4827> %hash{$num} ~= "bruh";

[22:33] <discord-raku-bot> <Hydrazer#4827> dd %hash;

[22:33] <discord-raku-bot> <Hydrazer#4827> ``````

[22:33] <discord-raku-bot> <Hydrazer#4827> Hash %hash = {"3" => "chickenbruh"}

[22:33] <discord-raku-bot> <Hydrazer#4827> ```

[22:33] *** pamplemousse joined
[22:34] <discord-raku-bot> <Hydrazer#4827> is there a better way to set a default value in a hash map if it doesn't exist? ```pl

[22:34] <discord-raku-bot> <Hydrazer#4827> my %hash{Int:D} of Str:D;

[22:34] <discord-raku-bot> <Hydrazer#4827> my $num = 3;

[22:34] <discord-raku-bot> <Hydrazer#4827> if !%hash{$num}:exists {

[22:34] <discord-raku-bot> <Hydrazer#4827>   %hash{$num} = "chicken";

[22:34] <discord-raku-bot> <Hydrazer#4827> }

[22:34] <discord-raku-bot> <Hydrazer#4827> %hash{$num} ~= "bruh";

[22:34] <discord-raku-bot> <Hydrazer#4827> dd %hash;

[22:34] <discord-raku-bot> <Hydrazer#4827> ``````

[22:34] <discord-raku-bot> <Hydrazer#4827> Hash[Str:D,Int:D] %hash = (my Str:D %{Int:D} = 3 => "chickenbruh")

[22:34] <discord-raku-bot> <Hydrazer#4827> ```

[22:34] <discord-raku-bot> <Hydrazer#4827> is there a better way to set a default value in a hash map if it doesn't exist and then immediately do something with it? ```pl

[22:34] <discord-raku-bot> <Hydrazer#4827> my %hash{Int:D} of Str:D;

[22:34] <discord-raku-bot> <Hydrazer#4827> my $num = 3;

[22:34] <discord-raku-bot> <Hydrazer#4827> if !%hash{$num}:exists {

[22:34] <discord-raku-bot> <Hydrazer#4827>   %hash{$num} = "chicken";

[22:34] <discord-raku-bot> <Hydrazer#4827> }

[22:34] <discord-raku-bot> <Hydrazer#4827> %hash{$num} ~= "bruh";

[22:35] <discord-raku-bot> <Hydrazer#4827> dd %hash;

[22:35] <discord-raku-bot> <Hydrazer#4827> ``````

[22:35] <discord-raku-bot> <Hydrazer#4827> Hash[Str:D,Int:D] %hash = (my Str:D %{Int:D} = 3 => "chickenbruh")

[22:35] <discord-raku-bot> <Hydrazer#4827> ```

[22:36] <discord-raku-bot> <Hydrazer#4827> is there a better way to set a default value in a hash map if it doesn't exist and then immediately do something with it? ```pl

[22:36] <discord-raku-bot> <Hydrazer#4827> my %hash{Int:D} of Str:D;

[22:36] <discord-raku-bot> <Hydrazer#4827> dd %hash;

[22:36] <discord-raku-bot> <Hydrazer#4827> my $num = 3;

[22:36] <discord-raku-bot> <Hydrazer#4827> for ^5 {

[22:36] <discord-raku-bot> <Hydrazer#4827>   if %hash{$num}:!exists {

[22:36] <discord-raku-bot> <Hydrazer#4827>     %hash{$num} = "chicken";

[22:36] <discord-raku-bot> <Hydrazer#4827>   }

[22:36] <discord-raku-bot> <Hydrazer#4827>   %hash{$num} ~= "bruh";

[22:36] <discord-raku-bot> <Hydrazer#4827> }

[22:36] <discord-raku-bot> <Hydrazer#4827> dd %hash;

[22:36] <discord-raku-bot> <Hydrazer#4827> ``````

[22:43] <discord-raku-bot> <Nemokosch#9980> I feel like we are stuck with the same questions

[22:44] <discord-raku-bot> <Nemokosch#9980> a missing value yields Nil, right?

[22:47] <discord-raku-bot> <Nemokosch#9980> ```perl

[22:47] <discord-raku-bot> <Nemokosch#9980> my %hash{Int:D} of Str:D;

[22:47] <discord-raku-bot> <Nemokosch#9980> dd %hash;

[22:47] <discord-raku-bot> <Nemokosch#9980> my $num = 3;

[22:47] <discord-raku-bot> <Nemokosch#9980> for ^5 {

[22:47] <discord-raku-bot> <Nemokosch#9980>   %hash{$num} //= "chicken";

[22:47] <discord-raku-bot> <Nemokosch#9980>   %hash{$num} ~= "bruh";

[22:47] <discord-raku-bot> <Nemokosch#9980> }

[22:47] <discord-raku-bot> <Nemokosch#9980> dd %hash;

[22:47] <discord-raku-bot> <Nemokosch#9980> ```

[22:51] <discord-raku-bot> <Morfent#9811> m:```

[22:51] <discord-raku-bot> <Morfent#9811> my %hash{Int:D} of Str:D is default<chicken>;

[22:51] <discord-raku-bot> <Morfent#9811> dd %hash;

[22:51] <discord-raku-bot> <Morfent#9811> my $num = 3;

[22:51] <discord-raku-bot> <Morfent#9811> %hash{$num} ~= 'bruh' for ^5;

[22:51] <discord-raku-bot> <Morfent#9811> dd %hash;

[22:51] <discord-raku-bot> <Morfent#9811> ```

[22:52] *** riffraff joined
[22:58] *** pamplemousse left
[23:00] *** riffraff left
[23:13] *** riffraff joined
[23:13] <discord-raku-bot> <Nemokosch#9980> is default seems cool

[23:13] <discord-raku-bot> <Nemokosch#9980> what do we have for partial application of functions?

[23:19] *** riffraff left
[23:30] <discord-raku-bot> <gfldex#8222> @Nemokosch#9980 https://docs.raku.org/routine/assuming and https://docs.raku.org/routine/o,%20infix%20%E2%88%98

[23:30] <discord-raku-bot> <gfldex#8222> if i got you right ...

[23:30] <discord-raku-bot> <Nemokosch#9980> Probably it will be useful, no matter what üòÑ

[23:30] <discord-raku-bot> <Nemokosch#9980> A higher-priority question showed up

[23:30] <discord-raku-bot> <Nemokosch#9980> can I turn a list of two values into a range?

[23:30] <discord-raku-bot> <Nemokosch#9980> i.e the opposite of Range.bounds()

[23:32] *** riffraff joined
[23:32] <discord-raku-bot> <lakmatiol#8020> ```

[23:32] <discord-raku-bot> <lakmatiol#8020>  Range.new(|(1,5))

[23:32] <discord-raku-bot> <lakmatiol#8020> 1..5

[23:32] <discord-raku-bot> <lakmatiol#8020> ```?

[23:33] <discord-raku-bot> <Nemokosch#9980> oh lol, this was unexpectedly simple üòÖ thanks

[23:41] *** riffraff left
[23:42] <discord-raku-bot> <Hydrazer#4827> neat

