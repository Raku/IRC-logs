[02:40] <discord-raku-bot> <normanrockwellesque#6606> not sure how cool it is, but gather/take seems pretty nice:

[02:40] <discord-raku-bot> <normanrockwellesque#6606> ```

[02:40] <discord-raku-bot> <normanrockwellesque#6606> my $num = 5;

[02:40] <discord-raku-bot> <normanrockwellesque#6606> my @arr = gather { take $_ ** $_ for 1..$num }

[02:40] <discord-raku-bot> <normanrockwellesque#6606> ```

[02:41] <discord-raku-bot> <normanrockwellesque#6606> I tried getting something working with the sequence `...` operator but was unsuccessful... üòì

[10:43] <discord-raku-bot> <Nemokosch#9980> something like

[10:43] <discord-raku-bot> <Nemokosch#9980> ```perl

[10:43] <discord-raku-bot> <Nemokosch#9980> my $num = 5;

[10:43] <discord-raku-bot> <Nemokosch#9980> my @arr = 1..$num.map(*^2);

[10:43] <discord-raku-bot> <Nemokosch#9980> ```

[10:43] <discord-raku-bot> <Nemokosch#9980> maybe?

[10:43] <discord-raku-bot> <Nemokosch#9980> something like

[10:43] <discord-raku-bot> <Nemokosch#9980> ```perl

[10:43] <discord-raku-bot> <Nemokosch#9980> my $num = 5;

[10:43] <discord-raku-bot> <Nemokosch#9980> my @arr = 1..$num.map(* **2);

[10:43] <discord-raku-bot> <Nemokosch#9980> ```

[10:43] <discord-raku-bot> <Nemokosch#9980> maybe?

[10:56] <lizmat> my @arr = (1..$num).map(* ** 2)    # precedence

[10:58] <discord-raku-bot> <lakmatiol#8020> that takes the second power, it would be `(1..$num).map: {$_ ** $_}` as far as I can tell

[11:44] <discord-raku-bot> <Nahita#3882> "list comprehension" is yet another way:  `[$_ ** $_ for 1..$n]`

[11:45] <discord-raku-bot> <Nahita#3882> or with states: `1, {state $x = 1; ++$x ** $x } ... *`

[11:46] <discord-raku-bot> <Nahita#3882> or more unreadable & assuming 0^0 = 0 because why not: `0, -> *@_ { +@_ ** +@_ } ... *`

[11:46] <discord-raku-bot> <Nahita#3882> or more unreadable & assuming `0**0 = 0` because why not: `0, -> *@_ { @_ ** @_ } ... *`

[11:47] <discord-raku-bot> <Nemokosch#9980> oh right, didn't pay attention

[11:48] <discord-raku-bot> <Nemokosch#9980> but the general idea would be the same, with {$_ ** $_}, I guess

[11:48] <discord-raku-bot> <Nemokosch#9980> but the general idea would be the same, with {$\_ ** $\_}, I guess

[12:39] <discord-raku-bot> <lakmatiol#8020> this is really easy in apl, but we don't get a join operator

[12:39] <discord-raku-bot> <lakmatiol#8020> ```

[12:39] <discord-raku-bot> <lakmatiol#8020>        *‚ç®‚ç≥10

[12:39] <discord-raku-bot> <lakmatiol#8020> 1 4 27 256 3125 46656 823543 16777216 387420489 1E10

[12:39] <discord-raku-bot> <lakmatiol#8020> ```

[12:39] <discord-raku-bot> <lakmatiol#8020> this is really easy in apl, but we don't get a join metaoperator

[12:39] <discord-raku-bot> <lakmatiol#8020> ```

[12:39] <discord-raku-bot> <lakmatiol#8020>        *‚ç®‚ç≥10

[12:39] <discord-raku-bot> <lakmatiol#8020> 1 4 27 256 3125 46656 823543 16777216 387420489 1E10

[12:39] <discord-raku-bot> <lakmatiol#8020> ```

[12:43] <discord-raku-bot> <Nemokosch#9980> don't forget that APL is for array manipulation and pretty much only that

[12:43] <discord-raku-bot> <lakmatiol#8020> yeah, a join metaop would still be nice

[12:43] <discord-raku-bot> <lakmatiol#8020> yeah, a join metaop would still be nice though

[13:14] <discord-raku-bot> <Nemokosch#9980> What would it do?

[13:15] *** mfiano left
[14:43] <discord-raku-bot> <unixcat64#4715> can't install Inline::Perl5 module with zef on Windows

[15:34] <discord-raku-bot> <Nahita#3882> same here!

[15:35] <discord-raku-bot> <Nahita#3882> same here

[15:35] <discord-raku-bot> <Nahita#3882> i was going to try NumPy etc.

[15:35] <discord-raku-bot> <unixcat64#4715> I get `Failed to find dependencies: perl:from<native>`

[15:36] <discord-raku-bot> <Nahita#3882> oh I thought Inline::Python, sorry :p

[15:36] <discord-raku-bot> <Nahita#3882> I couldn't install that one; but let me also try Perl5 now

[15:36] <discord-raku-bot> <Nahita#3882> oh I mistakenly read Inline::Python, sorry :p

[15:37] <discord-raku-bot> <Nahita#3882> Same error!

[15:44] <discord-raku-bot> <unixcat64#4715> @Nahita#3882 Try it with `zef install Inline::Perl5 --exclude="perl" --force-build`

[15:46] <discord-raku-bot> <unixcat64#4715> I still get errors tho

[15:47] <discord-raku-bot> <Nahita#3882> yeah a lot of tests failed and it aborted at the end...

[15:52] <discord-raku-bot> <hyperreal#4715> I submitted an issue on Inline::Perl5's github repo

[17:44] <discord-raku-bot> <gfldex#8222> m: say (1..5)¬ª.&{ $^a ** $^a };

[17:45] <discord-raku-bot> <gfldex#8222> `¬ª.` <-- most favourite Raku feature of mine

[19:14] <discord-raku-bot> <hyperreal#4715> what does `>>.` do?

[19:16] <discord-raku-bot> <gfldex#8222> It calls the following method or callable on each element of a list.

[19:19] <discord-raku-bot> <Nemokosch#9980> it's sort of a "feature abuse" though üòÑ

[19:23] <discord-raku-bot> <Nemokosch#9980> after all, the hyper operators can do much more than that

[19:23] <discord-raku-bot> <Nemokosch#9980> you could pass in a list of functions

[19:24] <discord-raku-bot> <hyperreal#4715> nice üôÇ

[21:23] *** Petr joined
[21:28] *** Petr left
