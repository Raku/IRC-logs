[01:28] *** Heptite joined
[01:29] *** QhpAptyj9hj0RQwM left
[01:42] *** rf left
[01:43] *** rf joined
[01:57] *** NemokoschKiwi joined
[01:58] *** NemokoschKiwi left
[03:59] *** ToddAndMargo left
[04:10] *** rf left
[05:02] *** Heptite left
[06:58] <discord-raku-bot> <el gatito (** advocate)> it is compiled into moar bytecode

[07:01] <discord-raku-bot> <el gatito (** advocate)> it is compiled by default

[08:20] *** habere-et-disper joined
[08:30] <habere-et-disper> I need help with raku syntax highlighting. I've tried with pandoc/kate and with chroma, but both have issues:

[08:30] <habere-et-disper> https://github.com/jgm/skylighting/issues/155

[08:30] <habere-et-disper> https://github.com/alecthomas/chroma/issues/720

[08:30] <habere-et-disper> What is the new doc site using ?

[08:30] <habere-et-disper> Thanks !

[08:41] <discord-raku-bot> <Nemokosch> The old atom-perl6-highlighter

[08:44] <discord-raku-bot> <el gatito (** advocate)> use the raku extension in vscode

[08:45] <habere-et-disper> Thanks ! I'd like something that can do static render from the command-line if possible.

[08:47] <discord-raku-bot> <Nemokosch> CIAvash created one to a highlighter written in Go, don't remember the name

[08:51] <discord-raku-bot> <Nemokosch> Or was that Chroma? üòÖ

[08:53] <habere-et-disper> I think that's chroma. Fast(!), but cannot make certain distinctions like between builtin types and routines.

[08:56] <discord-raku-bot> <Nemokosch> Is the one used on the doc site better?

[08:57] <habere-et-disper> I'm trying it now.

[08:58] <discord-raku-bot> <Nemokosch> To be honest, I wouldn't bet my life on it

[09:00] <habere-et-disper> Looks like I can export to html from Comma IDE which appears robust, but I can't see how to automate that from the interactive prompt.

[09:08] <discord-raku-bot> <el gatito (** advocate)> why do i read your name as habere et diaper lol

[09:10] <habere-et-disper> There's a character limit and it gets chopped. Actually habere-et-dispertire. X-P

[09:11] <discord-raku-bot> <Nemokosch> yeah it was rather sussy for an infinitive :v

[09:13] <discord-raku-bot> <Nemokosch> oh it's actually a cognative of Romanian despƒÉr»õi, makes easier to relate

[09:13] <discord-raku-bot> <Nemokosch> cognate*

[11:42] *** ab5tract joined
[12:13] *** habere-et-disper left
[14:57] *** rf joined
[15:20] *** Heptite joined
[15:44] *** QhpAptyj9hj0RQwM joined
[16:36] <discord-raku-bot> <nHail> roles are like Java interfaces?

[16:37] <discord-raku-bot> <Rog> More like abstract classes

[16:43] <discord-raku-bot> <Nemokosch> Kind of both, lol

[16:43] <discord-raku-bot> <Nemokosch> they are mixins

[16:48] <discord-raku-bot> <Rog> Yeah, I would caution against thinking of it in terms of analogies to Java

[16:52] *** QhpAptyj9hj0RQwM left
[17:02] <discord-raku-bot> <nHail> Well I'd caution against Java in general, that was just the first comparison that came to mind

[17:16] <rf> I recently wrote a module that uses role's quite liberally if you want to use it as an example: https://github.com/rawleyfowler/Monad-Result

[17:31] <discord-raku-bot> <Rog> üòÜ as would I

[17:32] <discord-raku-bot> <nHail> The oop model I know best is JS, but I had to use Java for a semester in high school and some of the bits stuck with me.

[17:33] <discord-raku-bot> <Nemokosch> JS is based

[17:43] *** jgaz joined
[17:45] <rf> JS is actually one the only real "OOP" langauges outside of smalltalk

[18:45] *** QhpAptyj9hj0RQwM joined
[19:12] <discord-raku-bot> <Anton Antonov> Monads-shmonads

[19:15] <discord-raku-bot> <Anton Antonov> @rf Why not (re-)use the forward feed operator? ( ==> )

[19:16] <rf> Didn't know that was a thing

[19:17] <discord-raku-bot> <Nemokosch> also, not sure it's a real operator

[19:17] <discord-raku-bot> <Nemokosch> could be just a compiler macro

[19:17] <rf> Monads are my best friend, don't be mean ;-;

[19:23] <discord-raku-bot> <Anton Antonov> @rf My monads are bigger friend to me! ( Than yours to you.)

[19:25] <discord-raku-bot> <Anton Antonov> Ideally, my previous statement is ‚Äúnice‚Äù to monads, _but_mean to @rf in a monadic way.

[19:30] <discord-raku-bot> <nHail> A monad is a monoid in the category of endofunctors

[19:31] <discord-raku-bot> <Nemokosch> "repeat after me"

[19:32] <discord-raku-bot> <Anton Antonov> Aha. Hence my  prompting : ‚Äúmonads-shmonads.‚Äù

[19:40] <discord-raku-bot> <Anton Antonov> I sort explain what that means here: https://www.youtube.com/watch?v=_cIFA5GHF58&t=1065s .

[19:43] <discord-raku-bot> <nHail> https://www.youtube.com/watch?v=H0Ek86IH-3Y this is also a 'good' introduction

[19:52] <rf> God, I love category theory.

[20:44] <discord-raku-bot> <lakmatiol> I remember there being a way to do perl for 1..9 -> $x {for 1..9 -> $y {} } in one for loop, but I can't get the syntax right

[20:46] <discord-raku-bot> <lakmatiol> for 1..9 X 1..9 -> ($x, $y) {} seems to work

[20:49] <rf> Hmm, I bet those both compile to the same thing, cool nontheless though

[21:11] *** QhpAptyj9hj0RQwM left
[22:01] *** jgaz left
[22:19] <discord-raku-bot> <Rog> That's interesting because I would think you'd need to do [$x, $y] instead

[22:20] <discord-raku-bot> <Rog> because otherwise $x would end up as (1 1) and $y as (2 2)

[22:21] <discord-raku-bot> <Rog> Oh, the parens are actually destructuring, not delimiting the param list

[22:21] <discord-raku-bot> <Rog> I forgot parens aren't used for the arrow blocks

[22:38] <discord-raku-bot> <Nemokosch> tbh this is kind of a shorthand for :($x, $y), if anything

[23:01] *** lizmat_ joined
[23:04] *** lizmat left
[23:26] *** lizmat_ left
[23:26] *** lizmat joined
