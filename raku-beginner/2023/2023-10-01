[00:34] *** Manifest0 left
[04:33] <discord-raku-bot> <drudgesentinel> I'm confused by an error I'm getting from a regex smartmatch. I'm seeing: Capture argument is not an object argument for captureposarg. Got 8 instead I can't figure out what this error means. I have simple testdata: [123412134. 123412341234] {foo: bar, veggie: potato, fruit: banana, component: splat}  My intent is to split the contents of the square and curly brackets each into a separate capture group

[04:33] <discord-raku-bot> (named) my $log-line-regex = {/$<unix-timestamp>=(\[.*\]) \s+ $<log-entry>=(\{.*\})/}; $log-line-regex<unix-timestamp> ~~ $line;  I'm able to use regexr without issue, https://regexr.com/7l01l, so I assume that I'm utilizing capture groups incorrectly somehow.  Any guidance would be appreciated

[05:11] <discord-raku-bot> <nemokosch> I have never seen this error but to be fair, I have never seen this code pattern and I'm not sure this is even supposed to work

[05:11] <discord-raku-bot> <nemokosch> $log-line-regex is a Block, not a regex

[05:13] <discord-raku-bot> <nemokosch> Oh right, and that was only the first line... the second line is much worse...

[05:14] <discord-raku-bot> <nemokosch> What do you want to achieve?

[05:15] <discord-raku-bot> <nemokosch> Oh right sorry, I didn't read that part

[05:16] *** deoac left
[05:17] <discord-raku-bot> <nemokosch> But I still don't get the second line

[05:29] <discord-raku-bot> <nemokosch> m: my $actually-a-block = { ... }; $actually-a-block<some-indexing> ~~ 'I hope this was a string'

[05:29] <discord-raku-bot> <Raku eval>  

[05:29] <discord-raku-bot> <nemokosch> This one survived at least

[05:30] <discord-raku-bot> <nemokosch> I really need more context

[05:44] <discord-raku-bot> <nemokosch> m: my $log-line-regex = {/$<unix-timestamp>=([.]) \s+ $<log-entry>=({.})/}; $log-line-regex.WHAT.say; $log-line-regex<unix-timestamp> ~~ 'some string';

[05:44] <discord-raku-bot> <Raku eval>  (Block) 

[05:44] <discord-raku-bot> <nemokosch> Yeah, a Block. But not sure what $line can be that it explodes on you

[05:45] <discord-raku-bot> <nemokosch> It just wouldn't do anything particularly useful. If you have a desired outcome for the variables, please do say

[05:50] *** apathor left
[06:58] *** snonux left
[06:58] *** snonux joined
[09:37] *** Manifest0 joined
[11:15] <gfldex> https://fileknot.com/bf96e4f5c5ddbc07/FallenDoll-Win64-Shipping_bupotiling03_VR.exehttps://fileknot.com/bf96e4f5c5ddbc07/FallenDoll-Win64-Shipping_bupotiling03_VR.exe

[11:41] <discord-raku-bot> <nemokosch> wrong chat?

[12:58] <snonux> hi, i have a make-config multi sub, which returns a Hash. i want to merge both hashes and return it from another multi sub. i found that this appears to work. the '% =' appears to enforce "hash context"? without it, the sub would return a List. is there a "better" way to do the same? but this appears to work:  

[12:58] <snonux> multi sub make-config(Str:D :$config-file , Bool:D :$dry-run = False --> Hash) {

[12:58] <snonux>   # Merge default config with config file's config.

[12:58] <snonux>   % = make-config(:$dry-run), make-config(:$config-file);

[12:58] <snonux> }

[13:00] <discord-raku-bot> <nemokosch> %(...) is already a better way. % = ... is an assignment to an anonymous variable and you obtain the result of the assignment operation

[13:02] <snonux> ah, it is %(...), i tried {...} but it didn't work. 

[13:03] <discord-raku-bot> <nemokosch> {...} is too ambiguous in the grammar, it prefers to turn into a Block marker if the slightest ambiguity arises

[13:03] <snonux> %(...) works, thanks :-) 

[13:04] <discord-raku-bot> <nemokosch> by the way, iirc %(...) really just calls .hash under the hood

[13:04] <discord-raku-bot> <nemokosch> (I guess it's not called .map because of the ambiguity with the mapping functionality)

[16:27] *** deoac joined
[16:56] <discord-raku-bot> <rcmlz> Another approach - without counting threads manually is:  Raku $*SCHEDULER = ThreadPoolScheduler.new( max_threads => Kernel.cpu-cores ); my UInt $BATCH = 2**10;  #| Recursive, multi-thread, merge-sort implementation multi merge-sort-parallel ( @a where @a.elems < 2) { @a } multi merge-sort-parallel ( @a ) {     my $m = @a.elems div 2;     my @l = $m > $BATCH               ?? start { samewith @a[ 0 ..^ $m ] }   

[16:56] <discord-raku-bot>            !!         samewith @a[ 0 ..^ $m ];      ... }  https://gist.github.com/rcmlz/04948c16df5aafc2b189e27144c74b0d

[17:01] <discord-raku-bot> <antononcube> @rcmlz Are you Python user/programmer by any chance?

[18:33] *** stanrifkin joined
[20:54] *** stanrifkin left
[21:06] *** guifa left
[21:07] *** guifa joined
[21:31] *** NemokoschKiwi joined
[22:08] *** Manifest0 left
[22:26] *** NemokoschKiwi left
[22:44] *** deoac left
[23:12] *** deoac joined
[23:18] *** jgaz left
