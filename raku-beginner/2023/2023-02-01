[00:24] *** tg57 joined
[00:24] *** tg57 left
[01:38] *** tg57 joined
[01:58] *** tg57 left
[02:03] *** raschip joined
[02:37] <discord-raku-bot> <elcaro> oooh, Terminal::Print show-and-tell time!  Here's a terminal snake game with "fancy" graphics. https://gist.github.com/0racle/9852f5903879addbcaa7666375c04840  Snake can be controlled with via WASD, HJKL, or cursor keys. Pause game with P.

[03:27] *** raschip left
[07:57] <discord-raku-bot> <:(**@rest, *%rest)> m: my ($first, %rest) = 1, 2, 3; say %rest; 

[07:57] <discord-raku-bot> <Raku eval>  {2 => 3}  

[07:57] <discord-raku-bot> <:(**@rest, *%rest)> üò≥

[08:01] <discord-raku-bot> <:(**@rest, *%rest)> m: my ($first, %rest) = {:a, :b, :c}; say %rest; 

[08:01] <discord-raku-bot> <Raku eval>  {a => True, b => True}  

[08:02] <discord-raku-bot> <:(**@rest, *%rest)> m: my ($first, %rest) = {:a, :b, :c}; say $first say %rest; 

[08:02] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Two terms in a row across lines (missing semicolon or comma?) at /home/glot/main.raku:3 ------> say $first‚èè<EOL>     expecting any of:         infix         infix stopper         postfix         statement end         statement modifier         statement modifier loop  

[08:02] <discord-raku-bot> <:(**@rest, *%rest)> m: my ($first, %rest) = {:a, :b, :c}; say $first; say %rest; 

[08:02] <discord-raku-bot> <Raku eval>  a => True {b => True, c => True}  

[08:06] <discord-raku-bot> <:(**@rest, *%rest)> when assignment signatures do different than function signatures üòî

[08:06] *** snonux_ left
[08:06] *** snonux left
[09:04] <CIAvash> if you want it to act like function signatures, then you should use binding(:=), not assignment

[09:19] *** dakkar joined
[09:41] <discord-raku-bot> <Nemokosch> very cool stuff!

[09:55] *** Manifest0 joined
[09:59] <discord-raku-bot> <elcaro> Thanks

[10:03] <discord-raku-bot> <Nemokosch> Terminal::Print could also "get a life", again

[10:06] <discord-raku-bot> <Nemokosch> what I'm really curious about for low-level terminal handling is this https://github.com/Bill-Gray/PDCursesMod

[10:06] <discord-raku-bot> <Nemokosch> sometimes one just has to deal with Windows

[10:07] <discord-raku-bot> <Nemokosch> for example because of colleagues who only use that...

[10:37] *** dakkar left
[11:17] *** dakkar joined
[12:45] *** lizmat_ joined
[12:47] *** RakuIRCLogger left
[12:48] *** lizmat left
[12:49] *** MasterDuke left
[12:53] *** ab5tract joined
[13:21] <discord-raku-bot> <Skarsnik> MS push to use the Terminal app now that support lot of thing

[13:46] <discord-raku-bot> <Nemokosch> yes, it's like, they do have working choices by now, but it's too often not available still

[13:48] <discord-raku-bot> <:(**@rest, *%rest)> does anyone knows why my super implementation doesn't work https://glot.io/snippets/ghoxb47ub4

[13:49] <discord-raku-bot> <:(**@rest, *%rest)> should give this output A.a is called B.a is called 

[13:52] <discord-raku-bot> <Nahita> Super.new(o => $o); can't initialize a private attribute with that

[13:53] <discord-raku-bot> <Nahita> it's private

[13:53] <discord-raku-bot> <Nahita> has $!o is built; might help

[13:53] <discord-raku-bot> <Nahita> to initialize

[13:54] <discord-raku-bot> <Nahita> or has $.o as usual

[13:55] <discord-raku-bot> <:(**@rest, *%rest)> oh nice now it worked https://glot.io/snippets/ghoxb47ub4

[13:57] <discord-raku-bot> <Nahita> FWIW, callsame will do too

[14:16] <discord-raku-bot> <Nemokosch> I think the problems with callsame arise once you had multiple candidates by argumentation

[14:17] <discord-raku-bot> <Nemokosch> like, callsame is perfectly happy to redispatch to a less specific candidate on the same class

[14:18] <discord-raku-bot> <:(**@rest, *%rest)> super avoids that

[14:24] *** lizmat_ left
[14:24] *** lizmat joined
[14:58] *** tg57 joined
[15:51] *** ab5tract left
[15:52] *** ab5tract joined
[17:24] *** tg57 left
[17:39] *** tg57 joined
[17:40] *** dakkar left
[17:40] <tg57> I just started learning Raku and was wondering if anyone had good suggestions for practice projects

[18:28] *** tg57 left
[18:55] *** NemokoschKiwi joined
[18:55] *** NemokoschKiwi left
[19:15] <discord-raku-bot> <Nemokosch> I think it very much depends on what you'd like to learn/achieve

[19:19] <discord-raku-bot> <Nemokosch> something with text processing? something about making a port of an existing thing? playing around with some algorithm? some TUI fun like elcaro posted yesterday (mini snake game)?

[19:39] *** snonux joined
[19:40] *** snonux_ joined
[19:48] *** snonux_ left
[19:49] *** snonux left
[19:54] *** tg57 joined
[19:57] *** raschip joined
[20:34] *** snonux joined
[20:35] *** snonux_ joined
[20:48] *** raschip left
[21:12] <discord-raku-bot> <nHail> This code should be printing the tick onto the screen in ncurses every 0.5 seconds, but I'm not seeing any output. What's going on? I tried a similar thing with say and no ncurses, and it did print every half second as expected. perl my $tickSupply = Supply.interval(0.5); $tickSupply.tap(-> $v {     mvaddstr(1, 1, $v);     nc_refresh; }); 

[21:18] <ab5tract> perl?

[21:19] <ab5tract> I think you want to wrap that in a react { whenever $tickSupply -> $v { #current tap code } }

[21:19] <discord-raku-bot> <Nemokosch> You yourself imply that this is a problem related to ncurses. It's probably not a "beginner question", or even a question that most people have a chance to answer

[21:20] <discord-raku-bot> <nHail> That's to mark the syntax highlighting lang in discord. There's no raku option so I told it to use perl

[21:23] <discord-raku-bot> <nHail> Well, now it's at least giving me an error message

[21:23] <discord-raku-bot> <nHail> This type cannot unbox to a native string: P6opaque, Int

[21:24] <discord-raku-bot> <nHail> thrown on the mvaddstr line

[21:25] <discord-raku-bot> <Nahita> $v is integer?

[21:25] <discord-raku-bot> <Nahita> oh it's a parameter there

[21:25] <discord-raku-bot> <Nahita> i don't know supplies so i shouldn't clutter here

[21:26] <discord-raku-bot> <Nahita> but mvaddstr seems to expect string as its last parameter there

[21:28] <discord-raku-bot> <nHail> Okay, I figured it out

[21:29] <discord-raku-bot> <nHail> I had a react block earlier in the program which killed the program when I pressed q

[21:29] <discord-raku-bot> <nHail> From the docs: > a react block runs where it appears in the code flow

[21:30] <discord-raku-bot> <Nemokosch> yes; unlike a supply block

[21:45] <ab5tract> yeah, there's that. glad you got it sorted

[22:30] *** snonux left
[22:30] *** snonux_ left
[22:44] *** ab5tract left
[22:51] *** NemokoschKiwi joined
[22:51] *** NemokoschKiwi left
[22:51] *** NemokoschKiwi joined
[22:54] *** tg57 left
[23:25] *** NemokoschKiwi left
