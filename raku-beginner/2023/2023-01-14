[00:03] *** ab5tract left
[00:46] *** NemokoschKiwi left
[01:17] <jaguart> tried to install Comma IDE - not a great experience so far. I'm used to windows, so when it asked for a project I expected the dialog to let me select a folder... instead of expanding, it seleted the root folder of a 4TB disk with about 2tb of data - which Comma seems to want to index...

[03:05] *** Kaipei left
[03:12] <rf> Is this on MacOS?

[03:15] *** rf left
[03:15] *** rf joined
[03:57] *** rf left
[05:26] *** Kaipei joined
[05:30] *** Kaipei left
[05:44] *** Heptite left
[07:26] *** Heptite joined
[08:49] *** discord-raku-bot left
[08:49] *** discord-raku-bot joined
[09:59] *** Heptite left
[10:49] *** discord-raku-bot left
[10:49] *** discord-raku-bot joined
[12:36] *** Nahita joined
[13:43] *** Nahita left
[15:06] *** Heptite joined
[16:03] *** jgaz joined
[16:42] *** rf joined
[16:45] <rf> What's the difference between unit module and unit class?

[16:46] <discord-raku-bot> <Nemokosch> shouldn't it be the same difference as between a module and a class?

[16:49] <rf> Maybe I'm just unsure about what its unit is really doing

[16:49] <discord-raku-bot> <Nahita> it relieves you from indentation :\)

[16:49] <rf> I see, makes sense

[16:49] <discord-raku-bot> <Nahita> well curly braces

[16:52] *** discord-raku-bot left
[16:52] *** discord-raku-bot joined
[16:56] *** discord-raku-bot left
[16:56] *** discord-raku-bot joined
[17:27] <rf> So how would I nicely define a class then, if say my zef name is: ABC::Class, and I want to define Class wouldn't it always be ABC::Class::Class?

[18:26] *** jgaz left
[18:55] <discord-raku-bot> <p6steve> rf: I vaguely remember having had this same problem ... for example, I ended up using

[18:55] <discord-raku-bot> <p6steve> ```unit module Physics::Measure:ver<1.0.6>:auth<Steve Roe (p6steve@furnival.net)>;```

[18:55] <discord-raku-bot> <p6steve> ```class Measure is export { ... }```

[18:56] <discord-raku-bot> <p6steve> and that sits in the module dir with path ```/lib/Physics/Measure.rakumod```

[19:01] <rf> Uh I think I found a nicer way. In your case that would make the type Physics::Measure::Measure;

[19:02] <rf> What you can do is either define the class as class Physics::Measure is export { ... } or unit class Physics::Measure; and drop the class definition completely

[19:02] <rf> I think... :)

[20:19] <discord-raku-bot> <p6steve> ah - yes, I see that I have the same issue as you

[20:20] <discord-raku-bot> <p6steve> I have taken a look at the Cro::HTTP and App:Rak sources and I think that I have been too worried about having a unit module ... first line to provide auth and ver info

[20:24] <discord-raku-bot> <p6steve> looks like this is unnecessary providing that you properly populate your META6.json ...

[20:27] <discord-raku-bot> <p6steve> then the trick is to either locate a big class as it's own 'class' package, or to use 'module' higher up in the tree to collect a bunch of small classes that are then used with 'use module::class;'

[20:34] <rf> Yeah

[21:40] *** ab5tract joined
[22:18] *** Guest67 joined
[22:19] *** Guest67 left
[22:21] *** ab5tract left
[22:36] *** ab5tract joined
[22:49] *** discord-raku-bot left
[22:50] *** discord-raku-bot joined
[23:03] *** ab5tract left
[23:31] *** loken joined
[23:37] *** loken left
[23:49] *** discord-raku-bot left
[23:50] *** discord-raku-bot joined
