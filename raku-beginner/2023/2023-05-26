[00:44] *** Manifest0 left
[01:53] *** jgaz left
[02:20] *** tea3po left
[02:20] *** tea3po joined
[02:36] *** tea3po left
[02:37] *** tea3po joined
[07:44] *** Manifest0 joined
[09:48] *** lizmat left
[09:52] *** lizmat joined
[10:01] * lizmat just blogged again: https://dev.to/lizmat/a-practical-example-of-rakuast-18jk

[14:19] *** tea3po left
[14:19] *** tea3po joined
[14:22] *** teatwo joined
[14:23] *** guifa_ joined
[14:25] *** tea3po left
[14:25] *** guifa left
[15:35] *** teatwo left
[15:35] *** teatwo joined
[15:52] *** teatwo left
[15:52] *** teatwo joined
[15:53] *** teatwo left
[15:53] *** teatwo joined
[17:43] <discord-raku-bot> <librasteve> m: my $chars = (32^..1024).map(.chr).join; say $chars ~~ /<[\S]>/;

[17:43] <discord-raku-bot> <Raku eval>  ｢!"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~^H｣ 

[17:44] <discord-raku-bot> <librasteve> m: my $chars = (32^..1024).map(.chr).join; say $chars ~~ /<[\w]>/;

[17:44] <discord-raku-bot> <Raku eval>  ｢｣ 

[17:57] <discord-raku-bot> <librasteve> ^^ I was curious how to (i) print out all the members of a character class (not as easy as you may think) and (ii) just what punctuation chars sit between word (\w) and non-space (\S)

[17:58] <lizmat> librasteve \w is defined in terms of Unicode props

[17:58] <lizmat> https://docs.raku.org/language/regexes#\w_and_\W

[17:59] <lizmat> all you need to do is run over all codepoints and check for the L property ?

[17:59] <lizmat> afk&

[18:01] <discord-raku-bot> <librasteve> yeah well I should explain that I looked up the max unicode codepoints (2**21 or 1,114,112 if you're interested) but here I limited the range to 1024 ;-)

[18:04] <discord-raku-bot> <librasteve> m: (32^..1024).map(*.chr).grep(! *.uniprop: 'L').say;

[18:04] <discord-raku-bot> <librasteve> he he

[18:10] <discord-raku-bot> <librasteve> m: [^1_114_112].map(*.chr).grep(! *.uniprop: 'L').say

[18:10] <discord-raku-bot> <Raku eval>  (

[23:42] *** Manifest0 left
