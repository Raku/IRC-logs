[00:12] *** tea3po left
[00:13] *** tea3po joined
[01:07] *** tea3po left
[01:08] *** tea3po joined
[01:22] *** MasterDuke joined
[03:46] *** hythm joined
[05:52] *** hythm left
[07:55] *** dakkar joined
[11:40] *** tea3po left
[11:40] *** tea3po joined
[11:41] *** tea3po left
[11:42] *** tea3po joined
[14:14] <discord-raku-bot> <antononcube> Yeah, also known as the "ZOMG trick."

[14:33] <discord-raku-bot> <nemokosch> ZOMG - handle it!

[14:33] <discord-raku-bot> <nemokosch> https://tenor.com/view/bloons-bloons-td6-zomg-moab-bfb-gif-25688953

[16:54] *** dakkar left
[17:31] *** swaggboi left
[17:39] *** swaggboi joined
[18:05] <discord-raku-bot> <Dr.Doom>  0...^@a.elems  amy shorter way of achiving the same ?

[18:11] <discord-raku-bot> <Nahita> ^@a

[18:12] <discord-raku-bot> <Nahita> ^ as a prefix operator eases writing ranges starting at 0

[18:12] <discord-raku-bot> <Nahita> ^$n is the same as 0..$n

[18:12] <lizmat> 0..$n-1

[18:12] <lizmat> not 0..$n

[18:13] <discord-raku-bot> <Nahita> sorry

[18:14] <discord-raku-bot> <Nahita> ^$n is the same as 0..^$n

[18:17] <lizmat> indeed  :-)

[18:26] <discord-raku-bot> <Nahita> also idk if that's your intention or not but usually people don't iterate over those indices of 0 to array_length as we do in C. Rather the arrays themselves are iterable so the "foreach" loop is there like for @a -> $val { ... }. If one wants the indices still, there is @a.kv to give the "key"s of the array, i.e., 0 to $n-1 as well as the "value"s of the array, i.e., the elements themselves. Like for @a.kv ->

[18:26] <discord-raku-bot> $idx, $val { ... }. Noting that .kv actually gives 2*$n length of a Sequence like (0, @a[0], 1, @a[1], ..., $n-1, @a[$n-1]) but the block attached to that for loop requests 2 things at a time, so this sequence is consumed 2 things at a time to work as expected.

[21:27] *** Tirifto left
[21:35] *** Tirifto joined
[22:39] *** krrishhrx joined
[22:50] *** krrishhrx left
[23:42] *** teatime joined
[23:43] *** tea3po left
