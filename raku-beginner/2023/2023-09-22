[01:59] *** raiph joined
[02:34] *** tea3po joined
[02:37] *** teatwo left
[02:41] *** raiph left
[02:43] *** raiph joined
[02:48] *** raiph left
[07:43] *** Manifest0 joined
[09:57] <discord-raku-bot> <rcmlz> m:  #| operator ≈ compares with tolerance 1e-10 sub infix:<≈>(Numeric \a, Numeric \b --> Bool){ abs(a - b) < 1e-10 }  #| one sentence description sub is-even(Numeric \a --> Bool){ a mod 2 == 0 }  say &is-even.WHY;  try { say &≈.WHY; say ≈.WHY; }

[09:57] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Preceding context expects a term, but found infix ≈ instead. at /home/glot/main.raku:11 ------> say ≈⏏.WHY; 

[09:58] <discord-raku-bot> <rcmlz> Is it possible to attach a Declarator block to an infix?

[09:59] <discord-raku-bot> <rcmlz> I was wondering how I could allow the user to investigate how e.g. ≈ works

[09:59] <discord-raku-bot> <nemokosch> wasn't the problem much rather the way of retrieving?

[09:59] <discord-raku-bot> <rcmlz> m:  #| one sentence description sub is-even(Numeric \a --> Bool){ a mod 2 == 0 }  say &is-even.WHY;

[09:59] <discord-raku-bot> <Raku eval>  one sentence description 

[09:59] <discord-raku-bot> <nemokosch> &[≈] could work, or so could simply typing out &infix:<≈>

[10:00] <discord-raku-bot> <rcmlz> m:  #| operator ≈ compares with tolerance 1e-10 sub infix:<≈>(Numeric \a, Numeric \b --> Bool){ abs(a - b) < 1e-10 }  say &[≈].WHY;  say "Nice! Thank you!"

[10:01] <discord-raku-bot> <Raku eval>  operator ≈ compares with tolerance 1e-10 Nice! Thank you! 

[11:23] *** wafflus joined
[11:25] <wafflus> can anyone show me or point me to a place that shows how to install zef on wsl

[11:26] <discord-raku-bot> <nemokosch> if you use Rakubrew, you probably don't need to install zef and it has a build-zef command as well

[11:26] <discord-raku-bot> <nemokosch> if you just have any Rakudo that came by, you could clone zef and get it install itself

[11:26] <discord-raku-bot> <nemokosch> https://github.com/ugexe/zef/

[11:27] <wafflus> k wiill try that way i';ve tried about 5 different ways and they all have problems

[11:27] <wafflus> brb

[11:35] *** tea3po left
[11:35] *** tea3po joined
[11:48] *** tea3po left
[11:52] <wafflus> terrible i think i installed a app:rak but it doesn't auto add it to path and when i tried to run it i get a bash error I also tried installed a different packages and it complains about missing depedancies

[11:53] <discord-raku-bot> <rcmlz> Not WSL, perhaps still helpfull: lately I played around with Github workflows and after installing rakudo via apt I used   sudo git clone https://github.com/ugexe/zef.git; cd zef; sudo raku -I. bin/zef install . ; cd .. ; sudo rm -rf zef/; sudo /usr/lib/perl6/site/bin/zef install Test JSON::Tiny 

[11:55] <wafflus> k ty few mins will try

[12:02] <wafflus> none work

[12:03] <wafflus> tying building it

[12:04] <discord-raku-bot> <nemokosch> you probably rather have a WSL problem

[12:06] <wafflus> maybe but is pretty confusing to install

[12:06] <discord-raku-bot> <nemokosch> it was like wsl --install or something...

[12:07] <wafflus> not wsl i mean raku + zeg

[12:07] <wafflus> zef

[12:07] <discord-raku-bot> <nemokosch> I don't think so

[12:07] <discord-raku-bot> <nemokosch> and to be frank, I don't find it fair that you have very peculiar environmental problems and mask them as some Raku problem

[12:08] <wafflus> put it this way raku has caused me the most problems

[12:08] <wafflus> there are loads of diffrerent way and diffrenet packages

[12:10] <discord-raku-bot> <nemokosch> it feels a lot like you could be trying to install Node and then suddenly Node "would have the most problems"

[12:11] <wafflus> i've got node installed and working

[12:12] <wafflus> not saying raku is the only thing with problems

[12:12] <discord-raku-bot> <nemokosch> still, the point is that the problem is probably on your side. It's not rocket science to set up WSL and run rakubrew, or add some apt source and run an apt install

[12:14] <wafflus> ofc it must be it's always the users fault with linux:P

[12:14] *** teatime joined
[12:15] <discord-raku-bot> <nemokosch> I have seen people who thought the computer would just magically turn off or caught gazillions of adware, the threshold is simply different

[12:15] <discord-raku-bot> <nemokosch> somebody like that would never even get to Linux, or Mac for that matter

[12:17] <discord-raku-bot> <yabobay> wouldnt that mean that user error is a bigger factor in windows and so with linux its more likely to be some random crap?

[12:18] <discord-raku-bot> <nemokosch> no, it would just mean that "clueless user" have a different definition

[12:19] <wafflus> or i mean maybe it just badly desinged software or maybe it hasn't been tested or maybe the installation instructions are incorrect

[12:19] <discord-raku-bot> <nemokosch> a "clueless user" of Windows would never even get to one single environmental variable

[12:19] <discord-raku-bot> <yabobay> it is crazy how not portable rakudo is

[12:19] <discord-raku-bot> <nemokosch> anyway, here, I don't see anything actionable

[12:20] <discord-raku-bot> <nemokosch> somebody did something with some environment, it didn't work, let's blame Rakudo

[12:20] <discord-raku-bot> <rcmlz> Did not soneone setup a Ansible playbook or something convinient for WSL?

[12:22] <wafflus> @nemokosch i just follow the instructions i don't go editing files (unless it tells me) anways i might have got it to work

[12:22] <discord-raku-bot> <rcmlz> As long as Rakudo-Star is not available via "App-Store" (installable via apt, Apple-App-Store or Windows-App-Store) , I guess there is need for convinience solutions ...

[12:23] <discord-raku-bot> <nemokosch> I mean on Linux it hardly gets any more convenient than Rakubrew

[12:23] <discord-raku-bot> <nemokosch> literally it tells you what to paste, then you read the output, again, it tells you what to paste

[12:23] <discord-raku-bot> <nemokosch> and after two iterations, you are done

[12:23] <wafflus> and the only real reason i'm using wsl is because raku didn;t work on windows with unicode

[12:23] <discord-raku-bot> <nemokosch> and the fix didn't work for you

[12:24] <wafflus> nope

[12:24] <discord-raku-bot> <nemokosch> the fix that wasn't even Rakudo-specific

[12:24] <discord-raku-bot> <rcmlz> yes, but the majority of (potential) users (like pupils and students) is not using Linux as main environment.

[12:24] <discord-raku-bot> <nemokosch> okay but that's kind of not a reason to shit on the Linux toolchain which is pretty much foolproof from all my experience

[12:25] <discord-raku-bot> <yabobay> assuming that rakudo will run on ur machine at all

[12:25] <discord-raku-bot> <nemokosch> I have never seen it not run

[12:25] <discord-raku-bot> <rcmlz> Correct, on Linux and Mac I also never experienced any issues.

[12:25] <discord-raku-bot> <nemokosch> so I don't know why you would assume the opposite

[12:25] <discord-raku-bot> <nemokosch> several people went ahead and hacked around to build it even on Android

[12:26] <discord-raku-bot> <yabobay> ive got a raspberry pi with arch that wont compile it

[12:26] <discord-raku-bot> <nemokosch> Quite possibly because of the lack of resources

[12:26] <discord-raku-bot> <rcmlz> Last time I had a look you could install Python on Windows via Microsoft App-Store.

[12:27] <discord-raku-bot> <nemokosch> I'm not saying that it's okay to possibly peak at multiple gigabytes of RAM during compilation but as a Typescript user, that's not all that unexpected

[12:28] <discord-raku-bot> <rcmlz> But in my experience: if you are running e.g. Python on Windows and want to use some ML libraries, there are also problems and "do not compile here" and "incompatible there" ... so nothing unusual ...

[12:29] <discord-raku-bot> <nemokosch> Regarding Windows, I absolutely agree with you. Now, go tell people to deploy and test on Windows...

[12:29] <discord-raku-bot> <rcmlz> LOL

[12:30] <discord-raku-bot> <nemokosch> For myself, I'm not a masochist to build on Windows, and I won't spend my freetime inventing tests. If somebody can compile sensible test scenarios, sure, I can go through them but that's the most.

[12:30] <discord-raku-bot> <lakmatiol> Can confirm, rakudo compilation is fairly resource intensive

[12:31] <discord-raku-bot> <yabobay> wouldnt that just freeze the machine? cause thats not what happened

[12:31] <discord-raku-bot> <yabobay> also using pkgsrc on a decently specced desktop running ubuntu

[12:32] <discord-raku-bot> <nemokosch> never had any issues on that sort of environment

[12:32] <discord-raku-bot> <nemokosch> by the way, truth be told, I don't know what Raku has to bring to the table for a Windows user, other than being a random scripting language of a hundred

[12:33] <discord-raku-bot> <yabobay> is there something it cant do on windows?

[12:33] <discord-raku-bot> <nemokosch> same could be said for Perl any day, I think it's not even preinstalled on Windows

[12:33] <discord-raku-bot> <nemokosch> that's basically one of the biggest "features" down

[12:34] <discord-raku-bot> <nemokosch> the whole idea of shell scripting, processing string-based standard file handlers, Unix domain sockets...

[12:35] <discord-raku-bot> <nemokosch> shell scripting has never been similar, and PowerShell is a completely incompatible approach to the traditional Unix way

[12:36] <discord-raku-bot> <yabobay> maybe ur doing scripting thats not for system stuff (something that connects to an API on the internet for example) or ur writing an actual application

[12:38] <discord-raku-bot> <nemokosch> you could do that, in theory, and it's supposed to work, in theory

[12:38] <discord-raku-bot> <nemokosch> it doesn't seem like people do that, or even really think of doing that

[12:39] <wafflus> they are different tools i like powershell for its ease of use in the terminal but i also like or at least find some of the features of raku interesting

[12:44] <wafflus> plus its weird

[12:56] <wafflus> plus its weird

[12:56] <wafflus> sorry

[13:05] <wafflus> m: say "test"

[13:05] <camelia> rakudo-moar 89755eb02: OUTPUT: «test␤»

[13:06] <discord-raku-bot> <antononcube> On what hardware and OS?

[13:08] <discord-raku-bot> <lakmatiol> It was IIRC a Linux school server, a gold Xeon sth sth, took several dozen minutes (then failed due to libuv, which is fair). Part of that was probably needing to disable parallelism due to a harsh thread limit.

[13:10] <discord-raku-bot> <antononcube> Thanks!

[13:11] <wafflus> phasers or cool\weird if you use them in a repl then the values get thrown away and are not automatically outputed

[13:11] <wafflus> the

[13:11] <discord-raku-bot> <nemokosch> yeah they are quite surely not meant for the REPL

[13:12] <wafflus> yes i was jsut a little confused as to where the values go as when you use a do for you get the values outputed to the screen

[13:13] <wafflus> a .say fixes it anways

[13:13] <discord-raku-bot> <antononcube> Related, I have to figure out an Windows YAML script for testing Raku packages with GitHub Actions. (It seems I got Linux and macOS working on a few "showcase" packages, but not Windows.)

[13:14] <discord-raku-bot> <antononcube> I have to exeperiment with phasers in the notebook solutions...

[13:15] <discord-raku-bot> <nemokosch> check out File::Find

[13:15] <discord-raku-bot> <nemokosch> reminds me, I should just merge that PR

[13:16] <discord-raku-bot> <antononcube> Will do! It is/was in my TODO list.

[13:16] <discord-raku-bot> <nemokosch> https://cdn.discordapp.com/attachments/768511641758466088/1154768228137046086/image.png

[13:17] <discord-raku-bot> <antononcube> Basically, I got busy reprogramming "LLM::Functions" and "LLM::Prompts" in Python...

[13:19] <discord-raku-bot> <antononcube> Turned out, that the Python re-programming of "Jupyter::Chatbook" is easier. (Not surprisingly.)

[13:25] *** wafflus left
[13:34] <discord-raku-bot> <antononcube> @nemokosch Worked! Thanks! See: https://github.com/antononcube/Raku-LLM-Functions/actions/workflows/windows.yml

[15:37] <discord-raku-bot> <rcmlz> m:  say 5 ∈ UInt;

[15:37] <discord-raku-bot> <Raku eval>  False 

[15:38] <discord-raku-bot> <rcmlz> Does this sort of things only work in signatures and return values?

[15:38] <discord-raku-bot> <yabobay> i think you want ~~ instead

[15:38] <discord-raku-bot> <yabobay> m: say 5 ~~ UInt;

[15:38] <discord-raku-bot> <Raku eval>  True 

[15:38] <discord-raku-bot> <rcmlz> so UInt is not a "Set"

[15:39] <discord-raku-bot> <yabobay> yea, its a type

[15:43] <lizmat> 5 is not an element of the set containing the UInt type

[16:00] <discord-raku-bot> <antononcube> @rcmlz  That works in Mathematica, of course. At some point Raku should get a symbolic (sub-)system.

[16:04] <discord-raku-bot> <antononcube> In this case, though, it might very well fairly easy to re-define (elem) to work on types.

[16:10] <lizmat> you mean that 5 ∈ UInt would be the same as 5 ~~ UInt ?

[16:12] <discord-raku-bot> <antononcube> @lizmat Yes. (I am not saying it should, but if someone prefers that notation, it can be done.)

[16:14] <lizmat> in Raku, set semantics operate on the .WHICH values 

[16:14] <lizmat> special casing this for types feels...  icky and a future WAT

[16:19] <discord-raku-bot> <antononcube> Yeah, sure. Also, I gave wrong information about Mathematica -- the corresponding symbols are only meant to be used in set relations.

[16:21] <discord-raku-bot> <antononcube> For example, Element[7, NonNegativeIntegers] : https://reference.wolfram.com/language/ref/NonNegativeIntegers.html

[17:22] <discord-raku-bot> <nemokosch> Types are genuinely not sets in programming tbh

[17:34] <lizmat> I guess you could consider UInt as a lazy Set: (^Inf).Set

[22:07] *** raiph joined
[22:56] <ingy> 3D/close

[22:56] *** ingy left
[23:13] <discord-raku-bot> <nemokosch> wrong chat

[23:13] *** deoac joined
[23:15] <discord-raku-bot> <nemokosch> With types and sets: I think we tend to think of the set data structure as something that is discrete and finite

[23:15] <discord-raku-bot> <nemokosch> of course, the values of data types are finite but often impractically large to evaluate as a set

[23:16] <discord-raku-bot> <nemokosch> and the subset constraint is like a completely different paradigm, it's a predicate

[23:19] <discord-raku-bot> <nemokosch> I think this is a bit like the rectangle and the square in OO

[23:21] <discord-raku-bot> <nemokosch> that is, makes clear conceptual sense in math but can lead to complications in a data structure-wise more rigid, behavior-wise more dynamic environment

[23:36] *** teatime left
[23:37] *** teatime joined
[23:54] *** hythm joined
