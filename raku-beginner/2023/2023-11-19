[00:32] *** habere-et-disper left
[07:39] <discord-raku-bot> <nemokosch> That's rather costly

[13:57] <discord-raku-bot> <librasteve> i would preprocess ‘@lines’ and grep out all lines (before and after) unambiguous markers, depending on if you have lines you are joining or using multiline grammar of some kind

[20:10] <discord-raku-bot> <dwinkley> hello! is there a way for reading a float in the little endian format in raku?

[20:10] <discord-raku-bot> <dwinkley> since in the documentation for the 'unpack' method, i only found letters for bigendian

[20:19] <ab5tract> It doesn’t look like we have such in core, no :(

[20:30] <discord-raku-bot> <librasteve> o/

[20:59] <ab5tract> \o

[21:21] <ab5tract> dwinkley: have you seen https://raku.land/zef:dwarring/Native::Packing?

[21:31] <discord-raku-bot> <dwinkley> thanks

[21:47] <MasterDuke> diwnkley: have you looked at Byte/Buf's read-num(32|64) methods? they take an `Endian` parameter

[21:48] <MasterDuke> s/Byte/Blob/

[21:50] <MasterDuke> m: my Buf $a .= new(1, 2, 3, 4); say $a.read-num32(0, LittleEndian), say $a.read-num32(0, BigEndian)

[21:50] <camelia> rakudo-moar b64e683c0: OUTPUT: «2.387939260590663e-38␤1.539989614439558e-36True␤»

[21:57] <discord-raku-bot> <dwinkley> this is even more convenient

[21:57] <discord-raku-bot> <dwinkley> thank you

[21:59] <MasterDuke> np

[22:53] *** Nemokosch joined
[23:01] *** Nemokosch left
[23:01] *** Nemokosch joined
