[01:41] *** habere-et-disper left
[02:17] *** teatime left
[02:18] *** teatime joined
[02:29] *** teatwo joined
[02:33] *** teatime left
[05:43] <CIAvash> m: sub pear ((:$key, :$value)) { say $key ~ ' => ' ~ $value }; say pear( 3 => 4 ); # @habere-et-disper:libera.chat

[05:43] <camelia> rakudo-moar c33c5538b: OUTPUT: «3 => 4␤True␤»

[07:08] *** kjp left
[07:11] *** kjp joined
[07:44] <discord-raku-bot> <librasteve> m: sub pear ( Pair $p ) { say .key ~ ' => ' ~ .value given $p }; say pear( 3 => 4 );

[07:44] <discord-raku-bot> <Raku eval>  3 => 4 True 

[07:50] <discord-raku-bot> <librasteve> m: sub pear { say .key ~ ' => ' ~ .value given $^p }; say pear( 3 => 4 );

[07:50] <discord-raku-bot> <Raku eval>  3 => 4 True 

[07:51] <discord-raku-bot> <librasteve> ^^ but neither really does what you asked ;-(

[08:00] *** dakkar joined
[13:46] <avuserow> m: sub pear(Pair $_) { say "{.key} => {.value}" }; pear(3 => 4)

[13:46] <camelia> rakudo-moar 7a49b6ec8: OUTPUT: «3 => 4␤»

[13:50] <lizmat> m: sub pear(Pair $_) { say "{.key} => {.value}" }; pear(a => 4)

[13:50] <camelia> rakudo-moar 7a49b6ec8: OUTPUT: «Too few positionals passed; expected 1 argument but got 0␤  in sub pear at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[13:51] <lizmat> one of the reasons I think named arguments should always be specified with the colonpair syntax

[14:03] <avuserow> Yeah I see what you mean. I've run into a few issues with trying to pass Pairs positionally.

[14:05] <discord-raku-bot> <Nemokosch> the colonpair syntax wouldn't help with this

[14:05] <discord-raku-bot> <Nemokosch> m: sub pear(Pair $_) { say "{.key} => {.value}" }; pear (a => 4)

[14:05] <discord-raku-bot> <Raku eval>  a => 4 

[14:06] <discord-raku-bot> <Nemokosch> no matter how funny it seems, the extra space does help with it

[14:06] <avuserow> m: sub pear(Pair $_) { say "{.key} => {.value}" }; pear((a => 4))

[14:06] <camelia> rakudo-moar 7a49b6ec8: OUTPUT: «a => 4␤»

[14:06] <lizmat> Nemokosch  that's fatarrow syntax, :a(4) would be colonpair syntax

[14:06] <avuserow> It's the parens around the Pair that forces it to be positional.

[14:07] <discord-raku-bot> <Nemokosch> yes, I know. And both syntaxes are treated the same way.

[14:07] <discord-raku-bot> <Nemokosch> and that's only right actually

[14:07] <lizmat> right, except 3 => 4 is *not* treated as a named, while it still is fatarrow syntax

[14:09] <discord-raku-bot> <Nemokosch> 3 => 4 is conceptually bizarre. The name "pair" doesn't properly hint that this type isn't meant for things like that

[14:14] *** teatwo left
[14:15] *** teatwo joined
[14:18] *** teatwo left
[14:18] *** teatwo joined
[15:17] *** razetime joined
[16:38] *** dakkar left
[17:21] *** razetime left
[18:28] *** KOTP left
[18:31] *** KOTP joined
