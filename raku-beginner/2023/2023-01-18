[00:05] <discord-raku-bot> <stevied> if you are coming from perl `||` is the same as `|`. On raku, `|` is longest match. Can be very confusing.

[00:09] <discord-raku-bot> <stevied> So back to my earlier question about too many open file handles. I got this:

[00:09] <discord-raku-bot> <stevied> ```

[00:09] <discord-raku-bot> <stevied>         for dir($path, test => { "$path/$_".IO.f } ) -> $file {

[00:09] <discord-raku-bot> <stevied>             try {

[00:09] <discord-raku-bot> <stevied>                 my $r := Libarchive::Read.new($file);

[00:09] <discord-raku-bot> <stevied>                 for $r -> $entry {

[00:09] <discord-raku-bot> <stevied>                     $count++;

[00:09] <discord-raku-bot> <stevied>                     put $entry.pathname if $entry.is-file;

[00:09] <discord-raku-bot> <stevied>                 }

[00:09] <discord-raku-bot> <stevied>                 $r.close;

[00:09] <discord-raku-bot> <stevied>             }

[00:09] <discord-raku-bot> <stevied>         }

[00:09] <discord-raku-bot> <stevied> ```

[00:10] <discord-raku-bot> <stevied> so this code works perfectly. But if I change the `$r :=` bit from a binding to a regular assignment, I run into the too many open file handles problem. I have no idea why this is so. Can someone clue me in?

[00:11] <jaguart> what do I need to ger REPL up-arrow working again?

[00:12] <discord-raku-bot> <stevied> I think linenoise

[00:12] <discord-raku-bot> <Nemokosch> yes, Linenoise, Readline or Terminal::LineEditor. They are all a little different.

[00:14] <discord-raku-bot> <Nemokosch> <@563790557831495691> not going to lie, this seems so mysterious that it could even be a resource leak type of problem by me

[00:15] <discord-raku-bot> <stevied> yeah, I can't figure it out. I close it with `$r.close` so I'd  think it wouldn't make a difference

[00:16] <jaguart> `zef install Readline` -> another `===> Testing [FAIL]: Readline:ver<0.1.6>:auth<cpan:fooist>`

[00:18] <discord-raku-bot> <stevied> I think you need the OS package readline. not sure, though

[00:19] <discord-raku-bot> <stevied> I think you need the OS package for readline. not sure, though

[00:19] <jaguart> thing is it worked before uninstall/reinstall rakudo-pkg

[00:19] <jaguart> so I doubt an os thing

[00:19] <discord-raku-bot> <Nemokosch> yes, that's right, it's a huge heap of native stuff

[00:20] <discord-raku-bot> <stevied> on a mac: https://formulae.brew.sh/formula/readline

[00:20] <jaguart> heres the failure message: https://gist.github.com/jaguart/8ace1402c02d85a9d0e5144704f30cd1

[00:20] <discord-raku-bot> <stevied> apt-get on debian

[00:20] <discord-raku-bot> <Nemokosch> well, if you have this many problems with the rakudo package, you could try to hit El_Che up

[00:22] <discord-raku-bot> <stevied> raku readline module installed for me on my mac

[00:23] <discord-raku-bot> <stevied> what kind of machine are you on?

[00:24] <jaguart> Debian stable, i7-9700, 32G RAM

[00:24] <discord-raku-bot> <Nemokosch> <@563790557831495691> by the way... don't forget that a NativeCall library can be really troublesome if it's not done right üòÖ

[00:27] <discord-raku-bot> <stevied> you follow the instructions at https://raku.land/cpan:FOOIST/Readline?

[00:27] <jaguart> Hmm: Parse errors: Subtest 5 expected 3 but contains 2 tests

[00:27] <discord-raku-bot> <stevied> you have to install the libreadline7 package

[00:28] <jaguart> I already have libreadline8:amd64 8.1-1 GNU readline and history libraries, run-time libraries

[00:28] <jaguart> I found the issue

[00:29] <discord-raku-bot> <Nemokosch> Do share üôÇ

[00:29] <jaguart> 02-base.t: some tests have been commented out - see above

[00:30] <discord-raku-bot> <Nemokosch> hm, and this wasn't a problem before?

[00:30] <jaguart> I think there are so many zef failures I was installing without tests - this time round I am being more careful

[00:33] <discord-raku-bot> <Nemokosch> this is a good thing - it would be great to "unbreak" these tests

[00:34] <jaguart> with this: t/02-base.t (Wstat: 0 Tests: 17 Failed: 0) Parse errors: Subtest 5 expected 3 but contains 2 tests

[00:34] <jaguart> are the subtests numbered from 1?

[00:35] <jaguart> if so I think it's the 'state' test line 68: https://github.com/lathropd/perl6-readline/blob/master/t/02-base.t#L21

[00:36] <jaguart> but that only has one test - and how does it know it wanted 3 - no plan 3; ?

[00:37] <discord-raku-bot> <Nemokosch> same thoughts...

[00:40] <jaguart> hmmm maybe its 'terminal' and not 'state'

[00:43] <discord-raku-bot> <Nemokosch> I just cloned https://github.com/lathropd/perl6-readline.git and zef test . passed...

[00:43] <discord-raku-bot> <Nemokosch> it installed well, too

[00:43] <discord-raku-bot> <Nemokosch> on Ubuntu 20.04 in WSL

[00:45] <jaguart> this test is the problem: https://github.com/lathropd/perl6-readline/blob/master/t/02-base.t#L58

[00:45] <jaguart> It's not counted by the test harness, even though it emits success

[00:46] <discord-raku-bot> <Nemokosch> is this a TAP issue, then?

[00:46] <discord-raku-bot> <Nemokosch> --/tap-harness can turn it off iirc

[00:47] <jaguart> yeah - that gets the tests to pass

[00:48] <jaguart> I will add that to the list of things to try when installs fail

[00:50] <discord-raku-bot> <Nemokosch> also, if you have enough data about it, consider opening an issue https://github.com/Raku/tap-harness6/issues here

[00:50] <discord-raku-bot> <Nemokosch> leont is about the most consistent module author, I would say. It wouldn't be in vain if there is actually a problem.

[00:52] <discord-raku-bot> <Nemokosch> anyways, I'm off to sleep now üí§

[00:55] <jaguart> thank you :)

[01:09] *** Manifest0 left
[01:17] *** saint- joined
[01:21] <discord-raku-bot> <jaguart> stevied: I saw this and thought of you - https://gitlab.com/raku-land/raku-land/-/tree/master/bin - it's how Raku.land gets all the META info etc.

[02:01] <rf> How can I write a function that takes an "symbol" argument I think is what it's called, ie: 'h e l l o'.split(/\s/, :skip-empty);

[02:03] <MasterDuke> that's a named argument

[02:04] <MasterDuke> m: sub foo(:$bar) { say "bar is $bar" }; foo(:4bar)

[02:04] <camelia> rakudo-moar e614d978d: OUTPUT: ¬´bar is 4‚ê§¬ª

[02:05] <MasterDuke> m: sub foo(:$bar) { say "bar is $bar" }; foo(:bar)¬† # if you don't them them an explicit type (or pass a value), they default to Bool and True

[02:05] <camelia> rakudo-moar e614d978d: OUTPUT: ¬´bar is True‚ê§¬ª

[02:05] <rf> Hmm, that is how I implemented it but I am seeing a parameter error, must be somewhere else. Thanks!

[02:31] <discord-raku-bot> <stevied> looks like the raku.land website

[02:33] <discord-raku-bot> <stevied> thanks. I actually just figured out a surefire way to find modules that need upgrading. I just go through REA and looks at the listings of each tar.gz file and look for files with .t, .pm or .pm6 extensions

[02:33] <discord-raku-bot> <jaguart> yeah - in particular though they grab all the meta - which can have a few different names, and exist in different places in the tarballs etc. in effect they maintain a local ecosystem

[02:33] <discord-raku-bot> <jaguart> oh - that sounds faster üôÇ

[02:34] <discord-raku-bot> <stevied> yeah, takes only a few seconds

[02:36] <discord-raku-bot> <stevied> there's 1451 modules that have old extensions. that's like 70%.

[02:38] <discord-raku-bot> <jaguart> I thought there were only about 850ish distinct modules in the ecosystem?

[02:39] <discord-raku-bot> <stevied> over 2000

[02:39] <discord-raku-bot> <stevied> though some of them might have multiple authors

[02:39] <discord-raku-bot> <stevied> so probably more like 1900

[02:56] <discord-raku-bot> <stevied> is catching a warning different than catching an exception? I can't seem to catch a warning

[02:56] <discord-raku-bot> <stevied> this is what I have:

[02:56] <discord-raku-bot> <stevied> ```

[02:56] <discord-raku-bot> <stevied>             try {

[02:57] <discord-raku-bot> <stevied>                 ver($file.Str).Version;

[02:57] <discord-raku-bot> <stevied>                 CATCH { default { say $file.Str } };

[02:57] <discord-raku-bot> <stevied>             }

[02:57] <discord-raku-bot> <stevied>  ```

[02:57] <discord-raku-bot> <stevied> sometimes I get a "Use of Nil in string context" and I'm trying to figure out which file is causing it

[03:00] <rf> Typically you can't catch warnings. Instead if you have some sort of warning or side-effect to relay use a promise or channel.

[03:00] <discord-raku-bot> <stevied> hmm, I don't know anything about those

[03:01] <discord-raku-bot> <stevied> I just found this: https://docs.raku.org/routine/warn but not sure how it can help me

[03:01] <rf> In your case what sort of warning?

[03:01] <jaguart> can you replace the global warn sub?

[03:01] <rf> Huh I've never seen that caught before, but the docs seem to imply it can be caught

[03:01] <discord-raku-bot> <stevied> see my post right below the code

[03:02] <jaguart> you could add a backtrace...

[03:02] <discord-raku-bot> <stevied> I only want to trigger the backtrace when there's a warning

[03:02] <discord-raku-bot> <stevied> i'm trying to figure out which out of thousands of files is triggering this error

[03:02] <discord-raku-bot> <stevied> or warning

[03:03] <jaguart> eah - can you replace the global warn with a backtrace...

[03:03] <discord-raku-bot> <stevied> I don't 'know. not sure how I would replace the global warn

[03:04] <jaguart> dos say: To override this behavior, catch the warn  exception in a CONTROL block

[03:04] <jaguart> https://docs.raku.org/language/phasers#index-entry-Phasers__CONTROL-CONTROL

[03:05] <jaguart> so you can catch the warning and add a backtrace in a CONTROL phaser

[03:05] <rf> Nice find, there are some really cool Phasers out there

[03:06] <discord-raku-bot> <stevied> oh interesting. didn't know phasers applied to errors/warnings

[03:08] <rf> Yeah you can omit the try as well I believe

[03:08] <discord-raku-bot> <stevied> oh nice, it worked. cool

[03:08] <discord-raku-bot> <stevied> thanks

[03:09] <discord-raku-bot> <stevied> i see the problem now. the file has an empty ver<> number in it. nice

[03:16] *** rf left
[03:20] <discord-raku-bot> <stevied> got another edge case:

[03:20] <discord-raku-bot> <stevied> ```

[03:20] <discord-raku-bot> <stevied>             CONTROL {

[03:20] <discord-raku-bot> <stevied>                 when CX::Warn { say $newest_file; .resume };

[03:20] <discord-raku-bot> <stevied>             }

[03:20] <discord-raku-bot> <stevied>             my $r := Libarchive::Read.new($newest_file);

[03:20] <discord-raku-bot> <stevied> ```

[03:21] <discord-raku-bot> <stevied> so one of the modules has utf8 characters in it: `Acme::‡≤†_‡≤†:ver<0.0.1>:auth<cpan:ELIZABETH>`

[03:21] <discord-raku-bot> <stevied> i guess that's a pair of eyes with eyebrows

[03:22] <discord-raku-bot> <stevied> anyway, it's causing the `my $r := Libarchive::Read.new($newest_file);` line to choke

[03:23] <discord-raku-bot> <stevied> error is: `Pathname can't be converted from UTF-8 to current locale.`

[03:23] <discord-raku-bot> <jaguart> what locale are you using?

[03:24] <discord-raku-bot> <stevied> I don't know. not much of a shell guy

[03:24] <discord-raku-bot> <stevied> is it in an ENV variable?

[03:25] <discord-raku-bot> <jaguart> `locale` ->  LANG=en_AU.UTF-8 for me

[03:25] <discord-raku-bot> <stevied> is that a shell env variable?

[03:27] <discord-raku-bot> <jaguart> `which locale` -> `/usr/bin/locale` - but you can probably `env | grep LANG`

[03:27] <discord-raku-bot> <stevied> ok, got this:

[03:27] <discord-raku-bot> <stevied> ```

[03:27] <discord-raku-bot> <stevied> > $ locale                                                                                                                                                                       [¬±main ‚óè]

[03:27] <discord-raku-bot> <stevied> LANG="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_COLLATE="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_CTYPE="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_MESSAGES="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_MONETARY="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_NUMERIC="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_TIME="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_ALL=

[03:28] <discord-raku-bot> <stevied> ```

[03:28] <discord-raku-bot> <stevied> so that looks good

[03:28] <discord-raku-bot> <stevied> ok, got this:

[03:28] <discord-raku-bot> <stevied> ```

[03:28] <discord-raku-bot> <stevied> > $ locale                                                                                                     

[03:28] <discord-raku-bot> <stevied> LANG="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_COLLATE="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_CTYPE="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_MESSAGES="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_MONETARY="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_NUMERIC="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_TIME="en_US.UTF-8"

[03:28] <discord-raku-bot> <stevied> LC_ALL=

[03:28] <discord-raku-bot> <stevied> ```

[03:28] <discord-raku-bot> <jaguart> maybe you need to let Libarchive know your locale

[03:29] <discord-raku-bot> <stevied> yeah, let me check the docs for the module. I forgot to do taht

[03:30] <discord-raku-bot> <stevied> hmm, module only talks about utf-8 when extracting content from files

[03:31] <discord-raku-bot> <stevied> lemme check the source code of the module

[03:32] <discord-raku-bot> <stevied> error happens here, line 228: https://github.com/CurtTilmes/perl6-libarchive/blob/master/lib/Libarchive/Read.pm6#L228

[03:36] <discord-raku-bot> <stevied> can't really make heads or tails of that

[03:36] <discord-raku-bot> <stevied> archive_read_next_header2 is probably a native call

[03:41] <discord-raku-bot> <jaguart> try this in your shell first? `export LC_ALL=en_US.utf8`

[03:42] <discord-raku-bot> <stevied> thanks. no luck, though

[03:42] <discord-raku-bot> <jaguart> this bug: https://github.com/libarchive/libarchive/issues/587

[03:43] <discord-raku-bot> <stevied> oh interesting

[04:09] <discord-raku-bot> <stevied> the output of the `locale` command is the same when run from within the raku script.

[04:11] <discord-raku-bot> <jaguart> yeah - I couldn't find the equiv of a native Raku setlocale() either - probably just expect you to manipulate your %*ENV

[04:13] <discord-raku-bot> <jaguart> You could try `%*ENV<LC_ALL> = 'en_US.utf8'`

[04:13] <discord-raku-bot> <stevied> this person says something about setting a global locale: https://stackoverflow.com/a/27311895/1641112

[04:14] <discord-raku-bot> <jaguart> have you tried directly getting the specific archive details on the command line?

[04:15] <discord-raku-bot> <jaguart> e.g. `tar -ztvf my-data.tar.gz`

[04:15] <discord-raku-bot> <stevied> yes

[04:15] <discord-raku-bot> <stevied> it worked

[04:19] <discord-raku-bot> <jaguart> so sounds like the libarchive library is not checking ENV for locale - grepped the Raku interface code and no occurrence of 'locale' - also didnt see that dist on raku.land -> do that one by hand?

[04:20] <discord-raku-bot> <stevied> yeah, I could do it by hand. just curious at this point how this might be fixed.

[04:20] <discord-raku-bot> <jaguart> libarchive v4?

[04:20] <discord-raku-bot> <stevied> just a chance to learn something (and then forget about 2 weeks later)

[04:20] <discord-raku-bot> <jaguart> or a setlocale() call in the Raku binding?

[04:21] <discord-raku-bot> <stevied> this is the archive here: https://github.com/Raku/REA/tree/main/archive/A/Acme::‡≤†_‡≤†

[04:22] <discord-raku-bot> <stevied> macos brew only has libarchive3, as far as I can tell

[04:23] <discord-raku-bot> <jaguart> yeah - reported in 2015 -> went in the utf-8-is-hard bucket üôÇ

[04:27] <discord-raku-bot> <stevied> not seeing anything about setlocale for raku. how do I do that?

[04:27] <discord-raku-bot> <stevied> is that for c?

[04:27] <discord-raku-bot> <jaguart> I like the module: `use Acme::‡≤†_‡≤† ;  ‡≤†_‡≤† 'you did what!?';`

[04:28] <discord-raku-bot> <jaguart> yeah - there might be a call on  libarchive that you can make to set the locale

[04:29] <discord-raku-bot> <jaguart> This module should def be on zef and in raku.land - it's purpose is a test of unicode module names

[04:30] <discord-raku-bot> <stevied> the acme one?

[04:37] <discord-raku-bot> <stevied> alright, spent enough time on this. going to post a question about this to SO and how the genii can buzz in and help my sorry ass out

[04:53] <discord-raku-bot> <stevied> https://stackoverflow.com/questions/75154821/pathname-cant-be-converted-from-utf-8-to-current-locale-warning-with-libarchi

[04:54] <discord-raku-bot> <stevied> alright, thanks for the help <@975405607513366631>. have a good night

[04:54] <discord-raku-bot> <stevied> or morning üôÇ

[05:40] *** Heptite left
[06:04] <discord-raku-bot> <Logomachist> say "hello-test failed; \n timestamp = " ~ $<timestamp> ~ " name = " ~ $<name>; # Previous should have

[07:00] *** Heptite joined
[07:54] *** discord-raku-bot left
[07:54] *** discord-raku-bot joined
[08:20] <discord-raku-bot> <Sparkill> Hi, help me install Pop?

[08:20] <discord-raku-bot> <Sparkill> It tells me that I need dependencies but I can't install those versions.

[08:20] <discord-raku-bot> <Sparkill> ``` zef install Pop

[08:20] <discord-raku-bot> <Sparkill> ===> Searching for missing dependencies: Color:ver<1.002008>, TOML::Thumb:ver<0.1>:auth<zef:JRaspass>

[08:20] <discord-raku-bot> <Sparkill> ===> Failed to find dependencies: Color:ver<1.002008>

[08:20] <discord-raku-bot> <Sparkill> Failed to resolve some missing dependencies (use e.g. --exclude="Color" to skip)```

[08:23] *** discord-raku-bot left
[08:23] *** discord-raku-bot joined
[09:05] *** dakkar joined
[09:14] <discord-raku-bot> <Nahita> hi <@346152867532505089> it seems like the module has `use Color;` in one place (https://gitlab.com/jjatria/pop/-/blob/master/lib/Pop/Color.rakumod) and it's to extend the Color class with some handy coercers. So that specific version doesn't seem critical and it doesn't seem to exist anyway perhaps the author should change it

[09:14] <discord-raku-bot> <Nahita> so you can first install the Color module separately

[09:14] <discord-raku-bot> <Nahita> then install Pop with --exclude="Color" as it says

[09:15] *** Heptite left
[09:18] *** ab5tract joined
[09:19] <discord-raku-bot> <Nahita> actually it should be --exclude='Color:ver<1.002008>'

[09:22] <discord-raku-bot> <Nahita> yeah it installed that way

[09:23] <discord-raku-bot> <Nahita> and if you have SDL2 it should be all fine i think after that point

[09:25] <discord-raku-bot> <Nemokosch> the situation will get better from now on: that version dates back to the p6c days where versioning wasn't really solved

[09:32] *** Manifest0 joined
[09:34] <discord-raku-bot> <Sparkill> hi <@836605577400549436> Thank you very much it worked! üôÇ

[09:39] <discord-raku-bot> <Nahita> oh cool!

[12:10] <discord-raku-bot> <Nemokosch> can :e & :!f work for "this path object exists and it isn't a file"?

[12:10] <discord-raku-bot> <Nemokosch> as a smartmatch

[12:47] <CIAvash> yes?

[12:58] <discord-raku-bot> <Nemokosch> well, I hope so

[12:58] <discord-raku-bot> <Nemokosch> not sure how this works tbh üòÑ

[13:05] <discord-raku-bot> <jaguart> I have a headful of questions about module :ver :api and :auth - when a module is installed, where does this come from? the META6? the code?

[13:07] <jaguart> META6 has a 'provides' hash of module => compunit - can the module-key have :ver :api and :auth parts?

[13:07] <discord-raku-bot> <Nemokosch> At this point, I think you have a broader picture of this than I do

[13:08] <discord-raku-bot> <Nemokosch> I'm gonna try to look up a post from Nick

[13:09] <jaguart> Do folks use any tooling to help manage this? and the flip `use xxx` ?

[13:10] <lizmat> I use App::Mi6 for module development

[13:10] <lizmat> it basically does everything apart from writing code and tests and documentation :-)

[13:11] <jaguart> Yeah - I like mi6 - have submitted a pull-request to add customisable scaffolding, fingers crossed

[13:11] <jaguart> Where do you put your :ver :api - in the META6 or in each compunit?

[13:12] <jaguart> or is it automatic from the mi6 version bump?

[13:13] <discord-raku-bot> <Nemokosch> well, at least you have some success with PR's for mi6 üòÖ

[13:13] <discord-raku-bot> <Nemokosch> https://perl6advent.wordpress.com/2016/12/16/day-16-the-meta-spec-distribution-and-compunitrepository-explained-ish/ I found something for you, by the way

[13:14] * jaguart grabs his reading specs

[13:16] <discord-raku-bot> <Nemokosch> the TAP harness does kind of obfuscate errors apparently

[13:27] <jaguart> my assumption is that the VT100.prepterminal test is emitting a control-char that confuses TAP's recognition of the OK.

[13:28] <jaguart> The article indicates that :ver :api and :auth are all driven by META6 - which makes me wonder what happens when you put them actually inside the code :o

[13:29] <jaguart> Thanks for that - it gives me a handle on setting up some testing to see what happens.

[13:30] <discord-raku-bot> <Nemokosch> I'm trying to update the XML module and unless I turn the tap harness off, I can't really see the actual error even with --verbose on

[13:30] <discord-raku-bot> <Nemokosch> not sure if that's a feature

[13:35] <jaguart> yeah - I've learnt to use `raku -Ilib t/...` to see what's going on.

[13:41] *** jgaz joined
[14:01] <jaguart> so on :ver :api and :auth - zef install ALWAYS uses the META6 fields. 

[14:01] <jaguart> :ver and :version -> uses :ver

[14:01] <jaguart> embeded :ver in the provides? -> ignored

[14:02] <jaguart> :ver in the actual compunit -> ignored

[14:02] <jaguart> oh - and :version but no :ver -> uses :version

[14:04] <jaguart> so that's nice and easy - DONT put any :ver :api or :auth on classes / modules you create - its just confusing. 

[14:04] <jaguart> instead use them on your USE statements

[14:16] <jaguart> ok - and mi6 - only checks the META6 :version -> it doesn't recognise :ver :(

[14:20] *** saint- left
[14:22] <jaguart> the docs all use `:version` with one main exception - they use `:ver<>` when specifying dependency information in the META6

[14:22] <discord-raku-bot> <stevied> I wrote a little helper script that tweaks the module after mi6 sets it up on my local drive

[14:22] <jaguart> interested - please share :)

[14:23] <discord-raku-bot> <stevied> it's just an ugly perl script. doesn't do too much, but I can add to it if I need to.

[14:24] <jaguart> I'm interested to know if you tweak the same bits that I do :)

[14:24] <discord-raku-bot> <stevied> yeah, one sec. debian paste bin is down. i'll paste to github

[14:26] <discord-raku-bot> <stevied> https://gist.github.com/sdondley/5831d2c1ccd5c82241686015791b561b

[14:27] <discord-raku-bot> <stevied> so it sets up an xt folder with a test in it, sets up github for me, etc.

[14:29] <jaguart> nice - I do the same changes to .gitignore, tweak the test.yml because of the Windows-TAP-install problem, fix the 'blah blah blah' in both main-module and meta6.

[14:31] <jaguart> I tend to create the github repo via the web and then set the remote origin - `mi6` will update the META6 source-url automatically during build

[14:34] <jaguart> only other comment is that you might want to add your Test::Output to your META6 test-depends - maybe :)

[14:35] <discord-raku-bot> <stevied> I use comma IDE so it adds it in for me easily enough

[14:35] <discord-raku-bot> <stevied> this script probably could use some tweaks because I wrote it a while ago and not sure I know what I'm doing.

[14:37] <jaguart> I struggle a but with Comma - I retry every now and then, just a week ago for example - but my fingers remember by fav editor better, and the auto reformatting drives me batty, and it seems to have a tanty if your desktop is windows but your rakudo is wsl.

[14:38] <discord-raku-bot> <stevied> I can't use vim because it is way too slow with syntax highlighting turned on for any code above 75 lines

[14:39] <discord-raku-bot> <stevied> I turned off code wrapping in comma

[14:41] <discord-raku-bot> <stevied> and i use the ideavim plugin so I can still use vim keystrokes

[14:42] <jaguart> Does comma have a c-tags equiv for Raku? i.e. backlink / nav to definition source?

[14:43] <discord-raku-bot> <stevied> I'm almost sure it does but I never use ctags. I think I did play with it once

[14:43] <jaguart> the Project thing is a pita - I work with several 'projects' at once and dislike having two windows instead of alt-tabbing

[14:45] <jaguart> the file / Folder selection dialogs are a pain too - first thing I did was accidentally set the root of a 4TB disk as my project root - Comma went looking through a lot of files. 

[14:47] <discord-raku-bot> <stevied> yeah, the file explorer/finder seems broken. it never opens up where I want it to

[14:54] <discord-raku-bot> <stevied> you on linux gui? I'm sure there must  be a way to cycle through open windows in the same application using the keyboard

[14:59] *** rf joined
[15:02] <discord-raku-bot> <stevied> i just looked and comma has a shortcut for cycling between project windows

[15:08] <discord-raku-bot> <stevied> but anyway, all these tools have a pretty steep learning curve before you feel comfortable with them. easier to stick with what you know.

[16:38] *** Heptite joined
[16:44] *** NemokoschKiwi joined
[17:36] *** dakkar left
[17:53] <discord-raku-bot> <p6steve> my preference is to stick with vi and tab around (this is reinforced by my preference to install/run raku in a unbuntu VM) ... but, since I started to dig around in Comma, I have had a good look at IntelliJ Idea and now subscribe to and increasing use that for $day-job (because of ftp, git, html, css, js, php and so on) ... so I suspect that I will gradually pick up on Comma Plugin for IntelliJ and keep tr

[17:58] <discord-raku-bot> <p6steve> IntelliJ Remote Gateway and/or Docker  look quite interesting ... so I can combine the client editor goodness with the backend either in a Docker VM or in an (eg) AWS x86 instance ... BUT the combo of IntelliJ + vftools VM + remote gateway service is thrashing in my lowly MBA M1 8GB RAM ... maybe I will try again with AWS x86 clarge just for fun $$$

[17:59] *** NemokoschKiwi left
[18:05] <discord-raku-bot> <stevied> how are you finding vim with raku? If I have more than 75 lines with a few nested loops, vim gets super slow and unusable?

[18:05] <discord-raku-bot> <stevied> how are you finding vim with raku? If I have more than 75 lines with a few nested loops, vim gets super slow and unusable

[18:05] <discord-raku-bot> <stevied> I have to turn off syntax highlighting, but syntax highlighting is a big crutch for me, especially with raku

[18:13] <discord-raku-bot> <Nemokosch> https://tenor.com/view/you-guys-are-getting-paid-gif-20686662

[18:13] <discord-raku-bot> <Nemokosch> "you have syntax highlight for Raku?"

[18:23] <discord-raku-bot> <stevied> yeah

[19:31] <rf> Do you use treesitter?

[19:49] <discord-raku-bot> <p6steve> I really don't like syntax highlighting - maybe all those years in the 80s staring a C

[19:49] <discord-raku-bot> <p6steve> at

[20:48] <discord-raku-bot> <stevied> no. fzf

[20:50] <discord-raku-bot> <stevied> I started on a green screen, apple //e. You could barely tell the difference between the number "1" and a lower case "l". I lost hours hunting that bug down one time.

[20:51] <discord-raku-bot> <stevied> the syntax highlighting gives you instant feedback when you are missing a delimiter or have some other kind of typo. I like it.

[20:51] <discord-raku-bot> <stevied> I guess the colors drive some people crazy.

[20:52] <discord-raku-bot> <stevied> the syntax highlighting gives you instant feedback when you are missing a delimiter or have some other kind of typo or syntax error. I like it.

[20:53] <discord-raku-bot> <stevied> someone must have done a productivity study on syntax highlighting

[20:55] <discord-raku-bot> <stevied> https://firstclassthoughts.co.uk/Articles/Readability/ProductivityFeaturesThatMayRuinCodeReadability.html#code-folding

[20:55] <discord-raku-bot> <stevied> I've never seen some of these features. Stick scrolling?

[20:55] <discord-raku-bot> <stevied> I've never seen some of these features. Sticky scrolling?

[21:09] <discord-raku-bot> <stevied> https://gist.github.com/sdondley/e804292fb707e6594d87c6d5417321a1

[21:12] <discord-raku-bot> <Nahita> wow

[21:48] <discord-raku-bot> <stevied> did  a litle more analysis. So 1347 modules still use the ".t", 241 use ".pm" and 869 use ".pm6"

[21:48] <discord-raku-bot> <stevied> so it's not quite as bad as it seems

[22:06] <discord-raku-bot> <stevied> https://www.reddit.com/r/rakulang/comments/10fju62/rea_tarball_script_for_finding_outdated/

[22:23] <rf> stevied: I use neovim, I find it pretty snappy with 2-3k line files open

[22:24] <rf> I can put my configuration on Git if you'd like as well

[22:30] <discord-raku-bot> <stevied> I use that too

[22:30] <discord-raku-bot> <stevied> Do you do syntax highlighting?

[22:32] <discord-raku-bot> <Nemokosch> does the bridge even get this sort of response across?

[22:33] <discord-raku-bot> <Nemokosch> btw I thought ".t" can stay...

[22:33] <discord-raku-bot> <Nemokosch> perhaps mi6 itself generates ".t" files

[22:45] <discord-raku-bot> <stevied> dunno. i'll look into it

[23:17] <discord-raku-bot> <stevied> yeah looks like .t is not frowned upon: https://docs.raku.org/language/modules#___top

[23:18] <discord-raku-bot> <stevied> I don't know. I'm still trying to figure that out

[23:18] <discord-raku-bot> <stevied> guess i should log into irc and find out

[23:20] <discord-raku-bot> <Nemokosch> the logs might do

[23:20] <discord-raku-bot> <Nemokosch> https://irclogs.raku.org/raku-beginner/live.html

[23:24] *** stevied_test joined
[23:30] *** stevied_test left
[23:30] *** stevied_test joined
[23:30] <stevied_test> test

[23:30] <discord-raku-bot> <stevied> does this notify me?

[23:31] <discord-raku-bot> <stevied> <@563790557831495691>_test

[23:32] <discord-raku-bot> <stevied> /stevied_test

[23:32] <discord-raku-bot> <stevied> ok, that actually works

[23:32] *** jgaz left
[23:32] <discord-raku-bot> <stevied> /stevied_test this is another notification

[23:33] <discord-raku-bot> <stevied> /stevied_test or maybe not

[23:33] <discord-raku-bot> <stevied> ok, it does work

[23:37] <discord-raku-bot> <stevied> /stevied_test again

