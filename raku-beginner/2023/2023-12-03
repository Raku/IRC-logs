[05:13] *** systems_ joined
[06:07] <discord-raku-bot> <shad.ow> /[^\s\d.]/ how can i comb with this regex in raku?

[06:07] <discord-raku-bot> <shad.ow> it doesn't seem to do what i expect it to do

[06:10] <discord-raku-bot> <shad.ow> ah got it

[06:11] <discord-raku-bot> <shad.ow> /<-[\d.]>/

[07:15] *** hexology left
[07:15] *** hexology joined
[08:12] *** systems_ left
[11:07] <discord-raku-bot> <nemokosch> did you deliberately remove \s, by the way?

[15:51] <discord-raku-bot> <shad.ow> yeah turns out it wasn't in the input

[15:51] <discord-raku-bot> <shad.ow> perl my @lines = "input.txt".IO.lines; my %gears;  for @lines.kv -> $j, $line {   for $line.comb(/<-[\d.]>/, match => True) {     %gears{$_.from + $j * i} = [];   } }  for @lines.kv -> $j, $line {   for $line.comb(/\d+/, match => True) {     for ($_.from - 1)..($_.to) -> $y {       for ($j - 1)..($j + 1) -> $x {         %gears{$y + $x * i}.append(+$_) if %gears{$y + $x * i}:exists;       }     }   } }  say

[15:51] <discord-raku-bot> (gather %gears.values.deepmap(*.take)).sum; say %gears.values.map(-> $ns { $ns.elems == 2 ?? $ns[0] * $ns[1] !! 0 }).sum; 

[15:51] <discord-raku-bot> <shad.ow> any suggestions to improve this code ?

[15:51] <discord-raku-bot> <shad.ow> either making it more idiomatic or concise

[15:55] <discord-raku-bot> <nemokosch> match => True might read better as :match

[15:55] <discord-raku-bot> <nemokosch> $_.from reads better as just .from

[15:57] <discord-raku-bot> <nemokosch> It's good to know that the hash is indexed by strings, even if you supply them as numbers

[15:59] <discord-raku-bot> <nemokosch> Could you explain why you needed that gather-deepmap-take?

[16:10] <discord-raku-bot> <fridge777> whats the operator for concatenating two lists? im trying to flatten a list of lists but the elements are lists too and i dont want to flatten those...

[16:14] <lizmat> m: my @a = 1..5; my @b = "a" .. "e"; @a.append(@b); dd @a   # fridge777   like so?

[16:14] <camelia> rakudo-moar d2f8bb6fe: OUTPUT: ¬´Array @a = [1, 2, 3, 4, 5, "a", "b", "c", "d", "e"]‚ê§¬ª

[16:14] <discord-raku-bot> <fridge777> no like for lists

[16:14] <discord-raku-bot> <fridge777> ok i just found out about the slip operator

[16:15] <discord-raku-bot> <fridge777> still a bit odd though

[16:15] <discord-raku-bot> <fridge777> thanks i can use this

[16:36] <discord-raku-bot> <.vushu> @antononcube  so as I understand you just wan't to render example wise: "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR" ?

[17:29] *** kjp left
[18:46] *** MasterDuke joined
[19:23] <discord-raku-bot> <antononcube> Sounds good. üôÇ

[19:58] <discord-raku-bot> <.vushu> @antononcube cool I‚Äôm making the chessboard renderer in a more rakuish way. üòä

[20:09] <discord-raku-bot> <antononcube> Hmm‚Ä¶ I will try to make a Jupyter notebook that shows how it can be used.

[20:46] *** kjp joined
[22:39] <discord-raku-bot> <sharparam> so with 'file.txt'.IO.lines(:!chomp), that correctly preserves newlines when i read a file, but the same doesn't seem to work with just lines(:!chomp) to read from $*ARGFILES? so how would one go about achieving that?

[22:41] <lizmat> If that doesn't work, it's a bug

[22:42] <lizmat> it looks like indeed

[22:43] <discord-raku-bot> <sharparam> bummer, what's the correct place for reporting that

[22:45] <discord-raku-bot> <nemokosch> does it work with $*ARGFILES.lines(:!chomp) by the way?

[22:45] <lizmat> nope, investigatinng

[22:46] <discord-raku-bot> <sharparam> same issue when doing that

[22:46] <discord-raku-bot> <nemokosch> ohh

[22:47] <lizmat> yeah, it looks like $*ARGFILES is an instantiated IO::Handle, with $!chomp set to True

[22:48] <discord-raku-bot> <nemokosch> seems like the underlying IO::Handle lines method doesn't even handle it

[22:48] <discord-raku-bot> <nemokosch> khm-khm, methods just consuming named arguments...

[22:48] <lizmat> yup.. please make an issue for it, I will look at it tomorrow

[22:48] *** sdomi left
[22:49] *** sdomi joined
[22:49] <discord-raku-bot> <nemokosch> it's normally the opening step that would handle the chomping

[22:49] <discord-raku-bot> <nemokosch> but if you are given a file handle directly, there is no opening...

[22:51] <discord-raku-bot> <sharparam> yeah, i tried finding which is the proper issue tracker but not readily finding it

[22:51] <lizmat> https://github.com/rakudo/rakudo/issues/new

[22:51] <discord-raku-bot> <sharparam> ty

[22:51] <lizmat> no, thank you for noticing and reporting!

[22:52] <discord-raku-bot> <sharparam> (not sure if discord reactions bridge to irc?)

[22:52] <discord-raku-bot> <nemokosch> perhaps not

[22:56] <discord-raku-bot> <nemokosch> anyway, this seems rather simple to fix

[22:56] <discord-raku-bot> <nemokosch> just gotta make sure the named arguments are kept and properly saved in the method call

[22:58] <discord-raku-bot> <sharparam> submitted: https://github.com/rakudo/rakudo/issues/5487

[22:58] <lizmat> sharparam++

