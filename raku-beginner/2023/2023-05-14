[00:12] *** Manifest0 left
[01:22] *** Heptite left
[02:17] *** tea3po joined
[02:21] *** teatwo left
[04:20] *** tea3po left
[07:21] *** teatime joined
[08:07] *** Manifest0 joined
[08:28] *** ab5tract joined
[14:17] *** teatwo joined
[14:20] *** teatime left
[14:27] *** teatwo left
[14:27] *** teatwo joined
[15:11] *** habere-et-disper joined
[15:22] <habere-et-disper> How do I make Slip more slippy ? I don't want seven here:

[15:22] <habere-et-disper> m: say ( 2, 3, { ( ++$ * 6 - 1, ++$ * 6 + 1 ).Slip } ... * >= 5 )

[15:22] <camelia> rakudo-moar 5c4f9efe1: OUTPUT: «(2 3 5 7)␤»

[15:22] <lizmat> m: m: say ( 2, 3, { ( ++$ * 6 - 1, ++$ * 6 + 1 ).Slip } ...^ * >= 5 )

[15:22] <camelia> rakudo-moar 5c4f9efe1: OUTPUT: «(2 3)␤»

[15:22] <lizmat> hmmm

[15:23] <habere-et-disper> That's what I thought !?

[15:24] <lizmat> well..  perhaps... there's a lot of magic involved with ...  and I have half a mind to remove it altogether from Raku

[15:24] <lizmat> I once spent about a month to sanitize and optimize its behaviour....  and it was all in vain  :-(

[15:24] <habere-et-disper> The magic is what's keeps me entranced !

[15:24] <habere-et-disper> <3

[15:36] <habere-et-disper> m: use v6.e.PREVIEW; say ( 2, 3, { ( ++$ * 6 - 1, ++$ * 6 + 1 ).Slip } ... * ).snip( * <= 5 ).head

[15:36] <camelia> rakudo-moar 5c4f9efe1: OUTPUT: «(2 3 5)␤»

[15:38] <discord-raku-bot> <Nemokosch> "The truth will come to light"

[15:44] <habere-et-disper> If I get a Segmentation fault: 11 when running under v6.e.PREVIEW is that par for the course or worth filing ?

[15:46] <lizmat> repeatable segfaults are *always* worth filing

[16:08] *** habere-et-disper left
[16:47] *** habere-et-disper joined
[18:07] <Manifest0> How do i know if a string is utf-8 or utf8-c8? 

[18:08] <lizmat> once it lives in raku, it's valid UTF8

[18:09] <lizmat> the utf8-c8 encoding just means that it will try to make something out of invalid UTF8, resulting in valid UTF8 when decoding

[18:12] <Manifest0> Basicaly i want to read a utf8 file, but the file contains invalid utf8. I want to discard those lines. How can i do it?

[18:16] <lizmat> hmmm... discarding those lines would be had currently

[18:18] <Manifest0> :-(

[18:34] <gfldex> Manifest0: You could read the data into a Buf, split on newline and then decode each line.

[18:35] <gfldex> s/Buf/Blob/

[19:09] <Manifest0> gfldex: yeah. That's what i was thinking in doing. Skip if it raises an error

[19:14] *** habere-et-disper left
[22:26] *** Heptite joined
