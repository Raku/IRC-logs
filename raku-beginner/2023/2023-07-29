[02:39] *** razetime joined
[03:32] *** razetime left
[07:00] *** siavash joined
[07:57] *** siavash left
[07:59] *** siavash joined
[08:04] *** siavash left
[08:04] *** siavash joined
[08:12] *** teatime left
[08:12] *** teatime joined
[08:13] *** teatwo joined
[08:17] *** teatime left
[09:00] *** siavash left
[09:00] *** siavash joined
[09:49] *** habere-et-disper joined
[09:50] *** ab5tract joined
[09:52] <habere-et-disper> What's the name for doing `3 < $foo < 10` ? A compound comparator ?

[09:52] <habere-et-disper> Oh, and what do we call `@bar[ 3, 10 ]` ? Multi-indexing ?

[10:04] <lizmat> the latter we call a slice

[10:04] <lizmat> I'm not sure what we call the former  :-)

[10:08] <habere-et-disper> Thanks -- these two are favourites and I enjoy knowing what to call them ! =D

[10:08] <kjp> For the former, the docs talk about chaining operators in some places?

[10:29] <discord-raku-bot> <nemokosch> That type of associativity is definitely called "chaining"

[10:35] <discord-raku-bot> <lakmatiol> python also calls it a chained comparison

[10:38] <habere-et-disper> Inequality chained notation (Wikipedia)

[10:38] <habere-et-disper> https://en.wikipedia.org/wiki/Inequality_(mathematics)#Chained_notation

[10:53] *** ab5tract left
[11:35] *** razetime joined
[13:03] *** habere-et-disper left
[13:17] *** ab5tract joined
[13:23] *** poohman joined
[13:26] <poohman> Hello all, when I try to overload the comparison operators in a inherited class which already implements it, will the first argument be self or should I use 2 arguments - can you please point me to some examples.

[13:27] <lizmat> operators don't have a self ?

[13:35] <poohman> lizmat - sorry, I dont understand. For example, will something like the following make sense, method infix:<>>(DateTimemilli $a, DateTimemilli $b --> Bool) { where I compare $a and $b} OR method infix:<>>(DateTimemilli $a --> Bool) { where I compare self with $a}

[13:36] <poohman> as a method in the DateTimemilli class which inherits from DateTime

[13:38] <lizmat> infixes are not methods, they are subs

[13:38] <lizmat> so in your example s/method/sub/  and you are on your way

[13:38] <lizmat> maybe also add :D to DateTimemilli

[13:39] <lizmat> to make sure the infix only works on defined objects

[13:46] *** siavash left
[13:53] <poohman> lizmat - thanks - ill give it shot

[13:56] <discord-raku-bot> <tanto_grs> i have a question, is there a newer module of WebService::TMDB, i try to install it with zef, but its every time fails by OpenSSL, i try it also with the flags --force-build and --force-test, have anybody an idea, to solve the problem? i use raku on windows 10

[14:00] <lizmat> sadly, Windows has been out of my mind for the past 20 years or so  :-(

[14:08] <discord-raku-bot> <librasteve> maybe try https://learn.microsoft.com/en-us/windows/wsl/install

[14:11] <discord-raku-bot> <tanto_grs> i have also WSL on Windows, also its important to use linux, ok, thx i have to do this ðŸ™‚

[14:12] <discord-raku-bot> <librasteve> cool ;-)

[14:13] <discord-raku-bot> <librasteve> then I recommend rakubrew https://rakubrew.org/?platform=linux

[14:14] <discord-raku-bot> <tanto_grs> and yeah, i know windows is not the best system, but i have to use it on work, i try everything to change there the os to linux, the most developer think also, but the productive part don't want it ðŸ˜„

[14:15] <discord-raku-bot> <tanto_grs> ok, i will install it on my WSL

[14:35] <poohman> lizmat - I was able to get it to compile and run with multi sub infix:<\>>(DateTimemilli:D $a, DateTimemilli:D $b --> Bool:D), but this sub in the class does not seem to override the > original sub from the DateTime class. Is there some override mechanism which needs to be explicitly specified?

[14:36] <lizmat> it should, can you make a gist?

[14:36] <discord-raku-bot> <librasteve> wonder if you need to escape the '>' in '<>"?

[14:37] <discord-raku-bot> <librasteve> <\>>  <== like that

[14:37] <lizmat> ah, that could be it... try using Â«<Â»

[14:37] <poohman> librasteve - cant get it to compile without it

[14:38] <lizmat> ah, that could be it... try using Â«>Â»  actually  :-)

[14:38] <discord-raku-bot> <librasteve> please share the gist and we can check

[14:39] <poohman> how do I get that small less than greater than operator in the keyboard - cant copy (easily) as I am in WSL 1

[14:39] <discord-raku-bot> <librasteve> copy and paste

[14:40] <poohman> ok let me google how to copy into WSL 1

[14:43] <lizmat> I have:

[14:43] <lizmat> :iabbr <<< Â«

[14:43] <lizmat> :iabbr >>> Â»

[14:43] <lizmat> in my ~/.vimrc

[14:45] <discord-raku-bot> <librasteve> errr - you still have to copy paste lmao

[14:47] <discord-raku-bot> <librasteve> https://docs.raku.org/language/unicode_entry

[14:47] <poohman> ok got it - copy in windows and then just left click with the touch pad in WSL1 Emacs

[14:47] <poohman> but it didnt solve the problem

[14:47] <poohman> ill share the gist

[14:47] <poohman> moment

[14:47] <discord-raku-bot> <librasteve> tx

[14:52] <discord-raku-bot> <librasteve> oooo

[14:57] <poohman> <script src="https://gist.github.com/winfredraj/55bbd5d4f95c4b5942400695aa8c93b5.js"></script>

[14:57] <poohman> I copied the whole file - sorry

[14:57] <poohman> still learning the ropes with copying gists etc

[14:58] <discord-raku-bot> <librasteve> https://gist.github.com/winfredraj/55bbd5d4f95c4b5942400695aa8c93b5

[14:58] <discord-raku-bot> <librasteve> looking...

[15:00] <discord-raku-bot> <nemokosch> it's weird to have it in the scope of a class

[15:00] <discord-raku-bot> <nemokosch> also, mandatory disclaimer that this is not something nice to do as it is basically an interface breaker for the > operator

[15:01] <poohman> I initially thought it needed to be a member function

[15:01] <discord-raku-bot> <nemokosch> if you want to overload operators badly, rather overload cmp, before, after

[15:01] <discord-raku-bot> <nemokosch> that's the reason they exist as separate operators

[15:01] <poohman> nemokosch - noted!

[15:03] <poohman> But does not DateTime class implement it, I was just thinking to overload that

[15:03] <discord-raku-bot> <nemokosch> Well I've been trying to fight that off, too, truth be told

[15:04] <discord-raku-bot> <nemokosch> some of the overloads have been removed by now, in favor of implementing the corresponding Numeric coercion

[15:08] <discord-raku-bot> <nemokosch> not blaming people who think that code in the core is some untouchable source of truth but please consider that it's basically just a 1. massive amount of 2. Raku code, contributed by various people over time

[15:10] <discord-raku-bot> <nemokosch> the good thing about numeric operators is that they can be eliminated basically without any breakage, by merely implementing the coercion methods...

[15:10] *** ab5tract left
[15:18] *** Guest93 joined
[15:19] *** Guest93 left
[15:45] <discord-raku-bot> <librasteve> https://gist.github.com/librasteve/2063318fe8b44bd44f91c49b37586ff5

[15:46] <discord-raku-bot> <librasteve> poohman: I hope that this answers your questions - I think you were on the right track ... and have commented where I have adjusted your code

[15:51] <discord-raku-bot> <librasteve> as @nemokosch implies DateTime will anyway be coerced to a  something like a number for comparison by the standard cmp operator so it is probably cleaner to override that than > or <

[15:52] <discord-raku-bot> <librasteve> m: my $dt1 = DateTime.new(1470853583.3);  my $dt2 = DateTime.new(1470853588.3);  dd $dt1; say $dt1 cmp $dt2;

[15:52] <discord-raku-bot> <Raku eval>  Less  DateTime $dt1 = DateTime.new(2016,8,10,18,26,23.3) 

[15:54] <discord-raku-bot> <librasteve> m: my $dt1 = DateTime.new(1470853583.3);  dd +$dt1; say +$dt1 ~~ Numeric

[15:54] <discord-raku-bot> <Raku eval>  True  Instant.from-posix(1470853583.3) 

[15:54] <discord-raku-bot> <librasteve> (looks like dd is run in another thread)

[15:55] <discord-raku-bot> <nemokosch> hm, how did you conclude that?

[15:56] <discord-raku-bot> <librasteve> since it prints to the chat after the previous say

[15:57] <discord-raku-bot> <nemokosch> lol true, that's unexpected

[16:11] <discord-raku-bot> <tanto_grs> @librasteve on WSL it works all, rakubrew and the install over zef - WebService::TMDB, thx for the way ðŸ˜„

[16:12] <discord-raku-bot> <librasteve> happy to help!

[17:00] <poohman> librasteve - just returned from dinner - will have a look immediately - Thanks a lot!

[17:16] <discord-raku-bot> <tanto_grs> Which editor do you prefer, for development raku on linux?

[17:28] *** razetime left
[17:28] <poohman> librasteve - thanks, got it running when I got it out of the class scope - that was probably something I used to do when I programmed using C++ in college, define the operator overloading in the class definition itself - in that case the first variable used to be the "this" variable - so I was expecting self to do the same thing here. Could have

[17:28] <poohman> alos been why I didnt find it it problematic to overload the "<" operator - as it would have been within the class

[17:29] <poohman> thats some unlearning I need to do

[17:35] *** razetime joined
[17:42] *** razetime left
[18:08] <discord-raku-bot> <librasteve> i prefer vim, but that has a quite a learning curve â€¦ maybe nano these days?

[18:14] <discord-raku-bot> <nemokosch> yeah well, to overload the "<" operator is not a technical problem in and of itself, it's rather just an "antipattern"

[18:15] <discord-raku-bot> <nemokosch> there are two approaches when it comes to operations provided on certain types: a) leave the types be and provide sufficient meaning for the operation on them b) leave the operation be and provide sufficient coercions between the types involved

[18:17] <discord-raku-bot> <nemokosch> either way, if you want to write robust code, there needs to be a "fixed point": the type of the operands or the behavior of the operator

[18:20] <discord-raku-bot> <nemokosch> since the < = > operators already coerce to Numeric as the default case, and they are sort of advertised as something meant for numeric comparison, it rather makes sense to keep this "promise"

[18:21] <discord-raku-bot> <nemokosch> especially when there is before eqv after, advertised as the "generic comparison operators", hinting that they are the ones meant to be overloaded

[18:21] <discord-raku-bot> <nemokosch> there is nothing to enforce any of this, it's just a convention to avoid chaos

[18:23] <poohman> nemokosch - thanks for the information

[18:43] <discord-raku-bot> <tanto_grs> i know both, vim and nano, also emacs, but thx for the answer, i got my visualstudio code it works for both ðŸ˜‰

[19:49] *** poohman left
[20:12] *** tea3po joined
[20:14] *** tea3po left
[20:14] *** tea3po joined
[20:15] *** tea3po left
[20:15] *** teatwo left
[20:15] *** tea3po joined
[21:25] *** habere-et-disper joined
[21:33] *** habere-et-disper left
[21:37] *** habere-et-disper joined
[22:00] *** ab5tract joined
[23:30] *** ab5tract left
[23:51] *** habere-et-disper left
