[00:03] *** kdon left
[01:08] *** Manifest0 left
[01:13] <discord-raku-bot> <antononcube> Raku's string processing nicely completes (or integrates with) Large Language Model (LLM) workflows.

[02:02] *** hythm joined
[02:12] *** jgaz left
[03:48] *** thowe left
[04:01] *** thowe joined
[06:19] *** hythm left
[06:32] *** samebchase left
[06:34] *** samebchase joined
[10:16] *** Manifest0 joined
[11:36] *** teatwo left
[11:37] *** teatwo joined
[11:38] *** teatwo left
[11:38] *** teatwo joined
[12:40] <snonux> I like to use Raku for small command line utilities and also for one-off-quick-n-dirty-getting-things-done-scripts. Not to say that Raku can also be used for larger applications, but I personally didn't do that (yet).

[14:08] *** jgaz joined
[14:44] <discord-raku-bot> <scullucs> m: my $b = Blob.new(1, 2, 3); say $b.WHAT; say "{$b.WHAT}" # Why does the interpolated one fail?

[14:44] <discord-raku-bot> <Raku eval>  (Blob)   Use of uninitialized value of type Blob in string context. Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.   in block <unit> at main.raku line 1 

[15:33] <lizmat> m: my $b = Blob.new(1, 2, 3); say $b.WHAT; say "{$b.WHAT.gist}"

[15:33] <camelia> rakudo-moar 9b29fdcab: OUTPUT: «(Blob)␤(Blob)␤»

[15:33] <lizmat> scullucs: interpolation calls .Str on the expression, say calls .gist on the expression

[15:39] <lucs> lizmat: Hmm... Okay, thanks.

[15:46] *** Manifest0 left
[18:38] *** deoac joined
[19:30] *** deoac left
[19:59] *** deoac joined
[20:21] *** Manifest0 joined
[20:36] *** teatwo left
[20:36] *** teatwo joined
[21:47] *** jgaz left
[22:22] *** teatwo left
[23:41] *** guifa joined
[23:51] *** Manifest0 left
