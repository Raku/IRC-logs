[00:15] *** jgaz left
[00:18] *** Manifest0 left
[03:08] *** frost joined
[03:10] *** frost left
[03:29] *** rf left
[05:00] *** frost joined
[05:04] *** frost left
[07:55] *** Heptite left
[08:35] *** Manifest0 joined
[09:05] *** dakkar joined
[09:16] *** ab5tract joined
[09:33] *** ab5tract left
[10:06] *** ab5tract joined
[10:41] *** ab5tract left
[10:41] *** ab5tract joined
[11:00] *** ab5tract left
[11:20] *** ab5tract joined
[12:09] *** ab5tract left
[12:33] *** frost joined
[13:37] *** rf joined
[13:47] <rf> .

[13:49] <lizmat> rf: any of the channels with tellable will give you your messages... no need to . on different channels, unless you meant something else by it 

[13:54] <rf> Oh didn't know that. Thanks!

[16:38] *** Heptite joined
[17:35] *** dakkar left
[17:38] *** hizibiz joined
[18:32] *** tg57 joined
[20:58] *** QhpAptyj9hj0RQwM joined
[21:21] *** hizibiz left
[21:21] *** hizibiz joined
[21:30] *** codesections joined
[21:30] *** codesections left
[21:34] *** tg57 left
[21:37] *** hizibiz left
[22:00] *** frost left
[23:09] <discord-raku-bot> <Yeuph> If I'm initializing classes within some set operations like  $classTest = Stop.new(thing => $num) (|) Stop.new(thing => $num) (|) Go.new(thing => $num) (|) Jump.new(thing => $num) (|) Walk.new(thing => $num);

[23:10] <discord-raku-bot> <Yeuph> how can I access the elements of #classTest?

[23:12] <discord-raku-bot> <Nemokosch> https://docs.raku.org/images/type-graph-Set.svg

[23:12] <discord-raku-bot> <Yeuph> I don't know what that means lol

[23:12] <discord-raku-bot> <Nemokosch> point being, Sets are kind of Hashes still

[23:13] <discord-raku-bot> <Yeuph> well say I want to perform some logic on Stop.new(thing => $num) after the algebra

[23:13] <discord-raku-bot> <Yeuph> how do I grab it?

[23:13] <discord-raku-bot> <Nemokosch> basically, a usual set would consist of Pairs, the item you pushed into being the key of the pair

[23:14] <discord-raku-bot> <Yeuph> by accessing my $classTest SetHash that it's initialized in

[23:14] <discord-raku-bot> <Nemokosch> m: my Set() $demo = <alma körte barack körte alma SZÉN>; say $demo.keys;

[23:14] <discord-raku-bot> <Raku eval>  (alma SZÉN körte barack) 

[23:15] <discord-raku-bot> <Nemokosch> there are also funky methods for taking one element, including the one you already named: grab

[23:15] <discord-raku-bot> <Nemokosch> (well, not necessarily only one but you get the idea - elements, rather than the whole thing at once)

[23:16] <discord-raku-bot> <Nemokosch> https://docs.raku.org/type/Set

[23:16] <discord-raku-bot> <Yeuph> gotta play with this for a bit, thanks

[23:17] <discord-raku-bot> <Nemokosch> https://tenor.com/view/cat-typing-typing-on-computer-computer-work-laptop-gif-21481919

[23:17] <discord-raku-bot> <Yeuph> basically lol

[23:22] <discord-raku-bot> <Yeuph> would I just type the string representing the initialized class in the set?

[23:22] <discord-raku-bot> <Yeuph> like say Go.new(thing => 1) (elem) $classTest;

[23:22] <discord-raku-bot> <Yeuph> it's returning false

[23:23] <discord-raku-bot> <Nemokosch> well a custom object would have reference type semantics

[23:23] <discord-raku-bot> <Yeuph> my ultimate goal here is to move classes - some of which being initialized in the algebra - into other sets

[23:24] <discord-raku-bot> <Nemokosch> if you know Python, that's like saying it's not "hashable" by default

[23:24] <discord-raku-bot> <Yeuph> I don't 😦

[23:24] <discord-raku-bot> <Nemokosch> but just like in Python you can implement the magic method for hashing, there is something similar for Raku as well - the WHICH method

[23:25] <discord-raku-bot> <Yeuph> https://docs.raku.org/routine/WHICH

[23:25] <discord-raku-bot> <Yeuph> this?

[23:25] <discord-raku-bot> <Nemokosch> yes

[23:25] <discord-raku-bot> <Nemokosch> https://docs.raku.org/routine/WHICH#(Mu)_method_WHICH

[23:26] <discord-raku-bot> <Yeuph> so what, it has a special string assigned to it as an object; and even if that string doesn't match the "words or whatever" that the element in the set has

[23:26] <discord-raku-bot> <Yeuph> it would likely access it within the set?

[23:27] <discord-raku-bot> <Nemokosch> I can't understand this

[23:27] <discord-raku-bot> <Yeuph> I'll do some reading and work on my own and if I get stuck I'll come back

[23:27] <discord-raku-bot> <Yeuph> thanks man

[23:28] <discord-raku-bot> <Yeuph> (my question was in reference to the first sentence of the WHICH method page:  "This returns a string that identifies the object. ")

[23:29] <discord-raku-bot> <Nemokosch> https://docs.raku.org/type/ValueObjAt

[23:29] <discord-raku-bot> <Nemokosch> this page has a good example I'd say

[23:43] <discord-raku-bot> <Yeuph> Yeah I can see how this will work but I think figuring it out is a bit more work than I'm wanting to do here before bed

[23:43] <discord-raku-bot> <Yeuph> I think I'll get this working tomorrow

[23:44] <discord-raku-bot> <Yeuph> but thanks, this does look like it'll do it once I figure it out

[23:45] <discord-raku-bot> <Nemokosch> yes, this is mostly something you need to do once in order to get these "hashability" features and then === and these hash-based data types will just work the way you expect

[23:45] <discord-raku-bot> <Yeuph> right

[23:45] <discord-raku-bot> <Yeuph> I'll have some functions giving my the hashes

[23:46] <discord-raku-bot> <Nemokosch> it's all up to what representation you decide on; the default would be some kind of address

[23:46] <discord-raku-bot> <Yeuph> then I'll check the sets for those

[23:46] <discord-raku-bot> <Nemokosch> I think Sets themselves are reference types

[23:46] <discord-raku-bot> <Nemokosch> m: say <1 2 3>.Set === ❤️ 2 1>.Set

[23:46] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Missing required term after infix at /home/glot/main.raku:1 ------> say <1 2 3>.Set ===⏏ ❤️ 2 1>.Set     expecting any of:         prefix         term 

[23:46] <discord-raku-bot> <Nemokosch> bruh discord

[23:46] <discord-raku-bot> <Yeuph> lol

[23:47] <discord-raku-bot> <Nemokosch> m:  say <1 2 3>.Set === <3 2 1>.Set 

[23:47] <discord-raku-bot> <Raku eval>  True 

[23:47] <discord-raku-bot> <Nemokosch> hmmm, maybe not, then? let's see

[23:47] <discord-raku-bot> <Nemokosch> m: <1 2 3>.WHICH.say

[23:47] <discord-raku-bot> <Raku eval>  List|5635469267696 

[23:47] <discord-raku-bot> <Nemokosch> oops, that's the List

[23:48] <discord-raku-bot> <Nemokosch> well, you can see that the List has the default, reference-based behavior, by the way

[23:48] <discord-raku-bot> <Nemokosch> it's a random number; you could create another one with the same content and it would be another number

[23:48] <discord-raku-bot> <Nemokosch> m: <1 2 3>.Set.WHICH.say

[23:48] <discord-raku-bot> <Raku eval>  Set|6AF0F9BD7836549B13210B50833463F26D63E18B 

[23:49] <discord-raku-bot> <Nemokosch> the Set has something trickier... I don't know by heart, need to look it up

[23:49] <discord-raku-bot> <Yeuph> It seems like I'll be able to use the ObjAt:(hash?) (elem) someSet

[23:50] <discord-raku-bot> <Yeuph> eh I'm tired

[23:50] <discord-raku-bot> <Yeuph> I'll come back tomorrow lol

[23:50] <discord-raku-bot> <Nemokosch> https://github.com/rakudo/rakudo/blob/2022.12/src/core.c/Set.pm6#L8 um

[23:50] <discord-raku-bot> <Yeuph> my eyes aren't cooperating with reading anymore

[23:51] <discord-raku-bot> <Nemokosch> let's say, the hashing of a Set is not trivial

[23:51] <discord-raku-bot> <Yeuph> well computers don't do set algebra

[23:51] <discord-raku-bot> <Yeuph> sooo

[23:51] <discord-raku-bot> <Yeuph> making one do it

[23:51] <discord-raku-bot> <Yeuph> is serious business

[23:51] <discord-raku-bot> <Yeuph> that's why I'm not even trying with C++

[23:51] <discord-raku-bot> <Yeuph> someone did the work for me here already lol

[23:51] <discord-raku-bot> <Nemokosch> but yeah, you can create a WHICH that isn't this complex

[23:52] <discord-raku-bot> <Nemokosch> that really is like that code snippet; type + attribute values

[23:52] <discord-raku-bot> <Yeuph> Yeah, I may get a rain day tomorrow (bricklayer) so I'll have plenty of time to play

[23:52] <discord-raku-bot> <Yeuph> w00t!

[23:54] <discord-raku-bot> <Nemokosch> good luck to that 😂

[23:57] *** jgaz joined
