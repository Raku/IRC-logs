[00:08] *** Manifest0 left
[01:19] *** inquinn left
[01:33] *** inquinn joined
[01:43] *** inquinn left
[02:28] *** inquinn joined
[02:33] *** inquinn left
[04:05] *** hythm joined
[06:11] *** hythm left
[08:40] *** Manifest0 joined
[08:45] <ab5tract_> .vushu I was looking into raylib just last week, specifically at the GUI parts! I didnâ€™t encounter any callbacks in what I adapted, but I also couldnâ€™t get everything working as expected.. Anyway, dealing with callbacks between C and Raku is a bit complex. Hopefully the answer already exists in an ecosystem example.

[08:49] <ab5tract_> I wonder what happens if you change Pointer[void] $bufferData to just Pointer $bufferData?

[09:14] <discord-raku-bot> <.vushu> Hi again I have tried to just using Pointer, im still having the same issue

[09:15] <discord-raku-bot> <.vushu> I am autogenerating all raylib.h bindings: here they are If you can spot what's wrong: https://github.com/vushu/raylib-raku/blob/main/lib/Raylib/Bindings.rakumod

[09:16] <discord-raku-bot> <.vushu> here are the generated pointerized wrapper : https://github.com/vushu/raylib-raku/blob/main/resources/raylib_pointerized_wrapper.c

[10:55] <ab5tract_> thatâ€™s pretty slick!

[10:58] <ab5tract_> OOC, how are other parts of ray lib behaving?

[10:59] <ab5tract_> Because these auto-generated thingies look good to me to be honest

[11:03] <ab5tract_> ah, I think I see something.. isnâ€™t $frames supposed to be unsigned?

[11:04] <ab5tract_> unsigned int frames â€”> gets generated into â€”> int32 $frames

[11:12] <discord-raku-bot> <.vushu> the other part of the library seems to work fine :), and other callbacks seems to work to. Thanks for pointing that out I did fix it for converting unsigned int to uint32, but still getting the error :cameliathink:

[12:10] *** stanrifkin joined
[12:46] <ab5tract_> Very cool that the rest is working

[12:47] <ab5tract_> Are you using `(Pointer, uint32)` or `(Pointer[void], uint32)`?

[13:13] <discord-raku-bot> <.vushu> I tried both the result is sadly the same.

[13:39] <discord-raku-bot> <.vushu> how would you translate this in raku, // Opaque structs declaration // NOTE: Actual structs are defined internally in raudio module typedef struct rAudioBuffer rAudioBuffer; typedef struct rAudioProcessor rAudioProcessor;  // AudioStream, custom audio stream typedef struct AudioStream {     rAudioBuffer *buffer;       // Pointer to internal data used by the audio system     rAudioProcessor *processor; //

[13:39] <discord-raku-bot> Pointer to internal data processor, useful for audio effects      unsigned int sampleRate;    // Frequency (samples per second)     unsigned int sampleSize;    // Bit depth (bits per sample): 8, 16, 32 (24 not supported)     unsigned int channels;      // Number of channels (1-mono, 2-stereo, ...) } AudioStream;  Im not sure how to translate an forward declared struct in c to raku

[13:40] <discord-raku-bot> <.vushu> typedef struct rAudioBuffer rAudioBuffer; typedef struct rAudioProcessor rAudioProcessor; 

[14:13] <ab5tract_> yeah, I saw those forward declared structs in the C code and was also baffled as to how they are supposed to be translated

[15:07] <samebchase> When I try to install Linenoise, I get the error: 

[15:07] <samebchase> Enabled extracting backends [git path unzip] don't understand /tmp/.zef/1698592010.92934/1698592018.92934.4673.58247307469/182028fca2d81184bf6c6858d76c21be90e794b4.tar.gz

[15:07] <samebchase> You may need to configure one of the following backends, or install its underlying software - [tar psunzip]

[15:07] <samebchase> This is on OpenBSD by the way

[15:07] <samebchase> don't remember having an issue with installing Linenoise through zef

[15:07] <samebchase> I do have tar installed

[15:12] <stanrifkin> Is it for the repl?

[15:13] <samebchase> yes

[15:14] <stanrifkin> same with readline?

[15:15] <samebchase> let me try that

[15:17] <samebchase> I get the same error

[15:17] <samebchase> it's not able to handle .tar.gz files

[15:17] <samebchase> I do have tar and gzip installed

[15:17] <samebchase> , but tar is BSD tar and not GNU tar

[15:17] <stanrifkin> the error says something about psunzip

[15:18] <stanrifkin> maybe that is needed

[15:19] <stanrifkin> or better first look at the manpage of tar

[15:20] <stanrifkin> I can't image it doesn't support gzip

[15:39] <samebchase> https://github.com/ugexe/zef/commit/7a9ffd599a63babec4d841797f0192d3e21fa888

[15:39] <samebchase> it seems to be related to this

[15:46] <stanrifkin> How did you install Raku?

[15:50] <samebchase> rakubrew

[15:50] <samebchase> the problem is that the difference between gnu tar and bsd tar

[15:50] <samebchase> they require slightly different command line args

[15:50] <samebchase> got zef working, will submit a patch later

[15:51] <samebchase> to zef

[15:51] <stanrifkin> yep, I only wanted to know if you have the newest version. OK.

[15:52] <samebchase> stanrifkin: basically, we do `tar -t -f <tar.gz file.>` to show all the files in the archive, but on openbsd we need to do `tar -tz -f <tar.gz file>` the extra `-z` option needs to be added to specify it's a gzipped archive.

[15:52] <samebchase> I have an interview tomorrow for which I am planning to use raku

[15:52] <samebchase> for the hiring assignment

[15:52] <samebchase> so getting my setup working

[15:52] <samebchase> ðŸ˜‚

[16:50] <lizmat> samebchase: good luck!   keeping fingers crossed!

[18:05] <rantanplan> the GNU Tar version also supports an explicit (but optional, as it appears) -z! :-) 

[18:05] *** rantanplan is now known as snonux

[18:46] *** stanrifkin left
[23:08] *** hythm joined
[23:14] *** hythm left
