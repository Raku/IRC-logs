[00:32] *** Manifest0 left
[00:59] *** rf_ left
[00:59] *** rf joined
[01:53] *** MasterDuke joined
[03:05] *** deadmarshal_ left
[03:55] *** deadmarshal_ joined
[05:20] *** Heptite left
[08:33] *** stevied_test left
[08:34] *** stevied_test joined
[09:04] *** Manifest0 joined
[09:08] *** ab5tract joined
[09:10] *** dakkar joined
[12:15] <discord-raku-bot> <el gatito (** advocate)> how do i create a docstring

[12:16] <discord-raku-bot> <Nemokosch> what is a docstring?

[12:19] <discord-raku-bot> <el gatito (** advocate)>  sub my-func is export(:my-func) {   """documentation here...""" } 

[12:20] <discord-raku-bot> <el gatito (** advocate)> or #`(documentation here...)

[12:20] <discord-raku-bot> <Nemokosch> you'd use POD, I think

[12:20] <discord-raku-bot> <Nemokosch> also known as "plain old documentation"

[12:21] <discord-raku-bot> <Nemokosch> I think the discord library is a good example

[12:23] <discord-raku-bot> <Nemokosch> https://github.com/shuppet/raku-api-discord/blob/master/lib/API/Discord/Channel.rakumod

[12:28] <discord-raku-bot> <el gatito (** advocate)>  sub my-func is export(:my-func) {   =begin pod   documentation here...   =end pod } like this?

[12:30] <discord-raku-bot> <Nemokosch> That can also work

[12:31] <discord-raku-bot> <Nemokosch> https://docs.raku.org/language/pod#Declarator_blocks idk I like this

[12:31] <discord-raku-bot> <Nemokosch> for me, the semantics is a bigger question

[12:31] <discord-raku-bot> <p6steve> just to circle back on this - I have now had the time to review the implementation of role DataSlice in the Dan module and to check whether there is a simple fix to my code to get .<C> or $_<C> working .... without going into the details, the status is (i) I agree that the current, working example for sort is a (bit of a) hack, (ii) DataSlice employs delegation and overloads so that it can mix Positional and

[12:31] <discord-raku-bot> Associative as "cascading accessors", this has about 80% coverage of the use cases, (iii) the issue arises because sort seems to coerce a DataSlice to an Array  [which I guess is necessary to Iterate it] and this Array will not take <C>, (iv) it is beyond my skill to identify a quick fix to dehack sort, (v) as the use cases for Dan (and it's brethren) solidifies, I would like to circle back and refactor this area

[12:31] <discord-raku-bot> (likely employing something like Hash::Agnostic / Array::Agnostic) to get the non-hacky sort syntax working, (vi) but since the hack will continue to work alongside a future "non-hackified" example I think that it's good enough for now because (vii) I am focusing my time to get Dan::Polars to MLP per the TODO lists(s) over there --- I have made an issue for this over at GH Dan and, as ever, will be happy to adapt my

[12:31] <discord-raku-bot> priorities according to comments/issues from users of Dan over on GH ...

[12:33] <discord-raku-bot> <p6steve> üòé

[12:34] <lizmat> p6steve++

[12:35] <discord-raku-bot> <el gatito (** advocate)> also f.__doc__ is &f.WHY in raku

[12:36] <discord-raku-bot> <Nemokosch> I didn't know the former and haven't used the latter (yet) üòÖ

[12:37] <discord-raku-bot> <el gatito (** advocate)> the WHY and HOW names...

[12:37] <lizmat> m: say 'Life, the Universe and Everything'.WHY

[12:37] <camelia> rakudo-moar 34cf82aa1: OUTPUT: ¬´42‚ê§¬ª

[12:37] <lizmat> :-)

[12:39] <discord-raku-bot> <Nemokosch> xddddd

[12:39] <discord-raku-bot> <el gatito (** advocate)> it is very obvious that python __doc__ is something related to documentation but when i looked at WHY i don't know what it is supposed to mean

[12:39] <discord-raku-bot> <el gatito (** advocate)> lmao

[12:43] <discord-raku-bot> <p6steve> did anyone try Jupyter::Kernel with MathJax?

[12:44] <discord-raku-bot> <Nemokosch> @Anton Antonov ping

[12:44] <discord-raku-bot> <Nemokosch> I didn't use it either way üôä

[12:46] <discord-raku-bot> <p6steve> just a wild idea...

[12:48] <discord-raku-bot> <Nemokosch> it's okay, need to tighten the userbase, I'd say

[12:51] <discord-raku-bot> <el gatito (** advocate)> the naming makes the language feels like its designed to be a meme lol

[12:52] <discord-raku-bot> <p6steve> ... I really like that we can do Jupyter D3 (thanks to @anton) ... just occurred to me that MathJax (and no doubt other JS plugins) would be cool too (yes for different user needs --- such as authoring an interactive scientific paper)

[13:05] <discord-raku-bot> <Anton Antonov> Incidentally, I am currently working on an article titled ‚ÄúLiterate programming with Raku and D3.js‚Äù. I am trying to show how LT documents can be created using CLI scripts and not using Jupyter. I find Jupyter too heavy and hard to install. (Raku-Jupyter especially, and Jupyter in general.)

[13:07] <discord-raku-bot> <p6steve> I'm all for a raku native replacement for Jupyter - for me the key would be alternating code / md cells with a web frontend

[13:08] <discord-raku-bot> <p6steve> but that could be just a thin layer on a cli basis

[13:10] <discord-raku-bot> <Anton Antonov> A nice thing about Brian Duggan‚Äôs Jupyter implementation, though, is that it is relatively easy to add new functionalities for the code cells. That is how I made my first D3.js demos. (Brian productized that hack later.) For example, for a client I am making a Jupyter-based prototype with special DSL cells that evaluate natural language specs into data results. (I did that with Mathematica 2 years

[13:10] <discord-raku-bot> ago.)

[13:12] <lizmat> argh... someone teach the discord bot to *not* just break up lines without mentioning the nick again!!

[13:12] <lizmat> like ^^

[13:12] <lizmat> it's unambiguous in this case, but something else *could* get inbetween

[13:15] <discord-raku-bot> <Nemokosch> I think the discord bot is used as a product, for all intents and purposes. Either it can be configured that way  - or well, someone will have to fork and modify it, I guess.

[13:16] <lizmat> I thought gfldex was running it?

[13:16] <discord-raku-bot> <p6steve> Well I think we will need to live with / support Jupyter for a long time (but noticing that it is becoming less Python centric) like EVCXR https://depth-first.com/articles/2020/09/21/interactive-rust-in-a-repl-and-jupyter-notebook-with-evcxr/

[13:22] <discord-raku-bot> <Anton Antonov> Yeah, sure the investment in Jupyter by some ‚Äúserious players‚Äù is huge. For example, Jupyter + Raku + VS Code is cool, and would say, it is a nicer combination than the typical Jupyter-in-the-web-browser.

[13:22] <discord-raku-bot> <Anton Antonov> But again, Jupyter + Raku + VSCode is hard to get consistently work (and look the same) on the few different machines I have tried it‚Ä¶

[13:22] <discord-raku-bot> <Nemokosch> lizmat: seems like you've been missing out on these news, perhaps it could be a good moment for a DM...

[13:23] <discord-raku-bot> <Anton Antonov> Not that interested in Rust, but I was looking into notebook solutions for Swift.

[13:25] <discord-raku-bot> <Anton Antonov> @p6steve In general ‚Äî to paraphrase Rowan Atkinson ‚Äî I find your Python and Rust obssessions disturbing.

[13:25] *** Nemokosch joined
[13:26] <discord-raku-bot> <Nemokosch> you have a tendency of talking about "obsession" pretty easily, good sir

[13:27] <discord-raku-bot> <Nemokosch> I, as somebody you also "accused" of Python obsession, can tell you for one: if automation scripts were that convenient in Python, I would have never thought about learning Raku in the first place

[13:28] <discord-raku-bot> <Nemokosch> and if my betting on Raku had turned out to be wrong, I would have come back a long time ago

[13:29] <discord-raku-bot> <Anton Antonov> I do not think anyone working seriously with Raku is possessed. Only obsessed ones‚Ä¶

[13:30] <discord-raku-bot> <p6steve> haha

[13:35] <discord-raku-bot> <Anton Antonov> @Nemokosch I like the packages of the ‚Äúdocopt‚Äù family (for making CLI scripts.) Both R and Python have an implementation, of ‚Äúdocopt‚Äù, so I can transfer CLI designs and/or showcase comparisons.

[13:35] <discord-raku-bot> <p6steve> I have made a rod for my own back with Dan::Polars which forces me to code 50% in Rust (which, after Raku, is like being made to work down a mine)

[13:36] <discord-raku-bot> <Nemokosch> oh, the one with the ugly site... not gonna lie, I don't like it a lot üòÑ

[13:37] <discord-raku-bot> <Nemokosch> "the description of a help message but formalized" quite a bruh moment. How would that compete with CLI generated straight from declarative code?

[13:38] <discord-raku-bot> <Anton Antonov> I think you are using a certain British idiom. Speaking of ‚ÄúDan::Polars‚Äù why are making a rod for your back and not a pole?

[13:38] <discord-raku-bot> <Nemokosch> help-message-as-a-DSL

[13:39] <discord-raku-bot> <Anton Antonov> Well, it is a ‚Äúremedy‚Äù solution, so it is good and workable, but not great.

[13:41] <discord-raku-bot> <p6steve> English has many words that mean almost the same - my favourite example is %(swine => 'pork', cow => 'beef', lamb => 'mutton') where the key is stolen from German and means the animal in the field and the value is stolen from French and means the meat on the plate

[13:45] <discord-raku-bot> <p6steve> for me, Raku is like English and Rust is like German

[13:49] *** Nemokosch left
[13:49] *** Nemokosch joined
[13:50] <discord-raku-bot> <Nemokosch> For me, Javascript is English

[13:50] <discord-raku-bot> <Nemokosch> except I like Javascript more actually, lol

[13:51] <discord-raku-bot> <Nemokosch> "a language popular for historical reasons, known for its simple fundamental structure, where everything is allowed"

[13:52] <discord-raku-bot> <Nemokosch> I'm not sure Hungarian is complex enough to be compared to Raku. Maybe some conlang. I liked the idea of Kotava, maybe that could be compared.

[13:52] <discord-raku-bot> <Nemokosch> Also regarding popularity, alas. Frankly, Kotava is insanely niche even compared to Raku

[13:54] <discord-raku-bot> <Nemokosch> German might be Pascal

[13:54] <discord-raku-bot> <Nemokosch> Created by a German native, too

[13:54] <discord-raku-bot> <Nemokosch> and the biggest living community of comtemporary Pascal is also tied to Germany in and out

[13:55] <discord-raku-bot> <Nemokosch> "a rigorous, yet reasonably clean language with many-many incompatible dialects - but there is a standard everybody should understand"

[14:00] *** Heptite joined
[14:13] *** Nemokosch left
[14:20] <discord-raku-bot> <Anton Antonov> @Nemokosch Interesting remarks on Pascal. I was taught programming rigorously with Pascal in high school...

[14:21] <discord-raku-bot> <p6steve> Raku & Javascript are quite similar capability-wise

[14:33] <discord-raku-bot> <Nemokosch> I'd say for completely different reasons, though

[14:34] <discord-raku-bot> <Nemokosch> In Javascript, this is because of the ridiculously simple model that is essentially its own metamodel

[14:34] <discord-raku-bot> <Nemokosch> even simpler than Python'

[14:35] <discord-raku-bot> <Nemokosch> in Raku, another route is taken: "there is one for each (...)"

[14:38] <discord-raku-bot> <Nemokosch> even though you may reach a point where the model is it's own metamodel - but that language is not Raku anymore

[14:39] <discord-raku-bot> <Nemokosch> or phrased the other way around: Raku is much more than a self-hosted system

[14:39] <discord-raku-bot> <Nemokosch> it's extended in all crazy ways that JS isn't

[15:17] <discord-raku-bot> <el gatito (** advocate)> is that python (minus the popular for historical reasons part)?

[15:18] <discord-raku-bot> <el gatito (** advocate)> lua's is probably even simpler

[15:19] <discord-raku-bot> <Nemokosch> Python has what you would call rules

[15:19] <discord-raku-bot> <Nemokosch> English not really

[15:20] <discord-raku-bot> <Nemokosch> Javascript also not really - anything you can syntactically form, will probably do something

[15:20] *** jgaz joined
[15:20] <discord-raku-bot> <Nemokosch> in Python, half of the things you can form are invalid and will throw immediately

[15:30] <discord-raku-bot> <el gatito (** advocate)> i thought you mean in terms of semantics in that respect python allows you to do any kind of crazy shit you can imagine

[15:33] <discord-raku-bot> <Nemokosch> that's exactly what I wouldn't say when the reference is Javascript

[15:33] <discord-raku-bot> <Nemokosch> Python clearly doesn't allow you "to be wrong"

[15:34] <discord-raku-bot> <Nemokosch> while Javascript embraces faults, even its own faults. That's much more like English üòõ

[15:39] <discord-raku-bot> <el gatito (** advocate)> true

[15:40] <discord-raku-bot> <el gatito (** advocate)> exactly why it is one of the worst languages on earth

[15:41] *** zashi joined
[15:41] <discord-raku-bot> <Nemokosch> I don't know, I empathize with it, kinda

[15:41] <discord-raku-bot> <Nemokosch> the positives overweigh the negatives for me

[15:42] <discord-raku-bot> <el gatito (** advocate)> when i am talking abt how python allows anything i mean its amazing introspection features lol turns out thats not what you mean

[15:43] <discord-raku-bot> <el gatito (** advocate)> then what would php be?

[15:43] <discord-raku-bot> <el gatito (** advocate)> a fractal of bad design

[15:43] <rf> PHP isn't necesarrily bad, I think its far more usable than JavaScript

[15:45] <discord-raku-bot> <Nemokosch> Call me a charlatan but I think neither of these languages are bad, lol

[15:45] <discord-raku-bot> <el gatito (** advocate)> rf: really? most people would agree that js is the better language

[15:45] <discord-raku-bot> <Nemokosch> I still say: no language is bad, unless it's Shell. If it's Shell, then it's not only bad but also evil.

[15:45] <discord-raku-bot> <el gatito (** advocate)> how about cobol

[15:46] <discord-raku-bot> <Nemokosch> I've never used Cobol, or even looked at it for a remotely longer period of time

[15:46] <discord-raku-bot> <Nemokosch> so I have no opinion about that

[15:46] <rf> JS is trying to be PHP nowadays anyways, look at NextJS and TSX

[15:46] <discord-raku-bot> <Nemokosch> I think programming languages are generally much better than programmers anyway

[15:47] <discord-raku-bot> <Nemokosch> these "hate trends" are more about people being stupid and easy to buy with superficial stuff

[15:47] <rf> Lisp is by far the most sound language design, but it isn't necesarrily sound for developers

[15:48] <rf> I don't know how to spell necessarily apparently lol

[15:48] <discord-raku-bot> <el gatito (** advocate)> this is a fibonacci sequence calculator in cobol https://rosettacode.org/wiki/Fibonacci_sequence#COBOL

[15:49] <rf> I think a good language is a language that gets stuff done, and doesn't get in the way of the developer. OCaml, Raku and Perl are my gotos for those reasons

[15:49] <discord-raku-bot> <Nemokosch> rf: see, English is forgiving xD

[15:49] <discord-raku-bot> <Nemokosch> nobody even noticed probably

[15:50] <discord-raku-bot> <el gatito (** advocate)> now rewrite that in any other language

[15:53] <discord-raku-bot> <Nemokosch> what are the numbers for? üòÑ

[15:54] <discord-raku-bot> <Nemokosch> I mean... okay, it is verbose. Verbose like hell, even. But there have been trends to return to "literate programming", right?

[15:55] <discord-raku-bot> <el gatito (** advocate)> the authors of this language take "literate programming" a little too far

[15:58] <discord-raku-bot> <Nemokosch> I get the intention at least - same as Java

[15:58] <discord-raku-bot> <Nemokosch> bit of a "code monkey" mentality

[15:58] <discord-raku-bot> <Nemokosch> write more - but it should really be self-explanatory and rigid

[15:59] <discord-raku-bot> <Nemokosch> something that might work for 50 years without ever modifying

[15:59] <discord-raku-bot> <Nemokosch> you wouldn't feel like modifying it anyway üòÜ

[16:01] <discord-raku-bot> <el gatito (** advocate)> it is also designed by a literal commitee

[16:23] <discord-raku-bot> <el gatito (** advocate)> m: my \hi¬†there = 1;  say(hi¬†there); 

[16:23] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Term definition requires an initializer at /home/glot/main.raku:1 ------> my \hi‚èè¬†there = 1;  

[16:23] <discord-raku-bot> <el gatito (** advocate)> m: my \hi there = 1;  say(hi there); 

[16:23] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Term definition requires an initializer at /home/glot/main.raku:1 ------> my \hi‚èè there = 1;  

[16:24] <discord-raku-bot> <Nemokosch> why would this work, though

[16:24] <discord-raku-bot> <el gatito (** advocate)> im trying to put a no break space

[16:24] <discord-raku-bot> <el gatito (** advocate)> in between

[16:25] <discord-raku-bot> <el gatito (** advocate)> turns out they convert it to normal space

[16:26] <discord-raku-bot> <Nemokosch> ohhhh

[16:26] <discord-raku-bot> <Nemokosch> come to think of it: related issue

[16:26] <discord-raku-bot> <Nemokosch> https://github.com/Raku/problem-solving/issues/357

[16:27] <discord-raku-bot> <Nemokosch> that is, indeed it isn't clear, in strings at least, how that would be interpreted

[16:27] <discord-raku-bot> <el gatito (** advocate)> m: my \ùöãùöõùöûùöë = 1;  say bruh; 

[16:27] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Undeclared routine:     bruh used at line 3   

[16:27] <discord-raku-bot> <el gatito (** advocate)> real

[16:28] <discord-raku-bot> <el gatito (** advocate)> nbsp are converted to normal space but mathematical monospace aren't converted into their respective ascii forms

[16:29] <discord-raku-bot> <Nemokosch> I'm fairly certain this falls into the "nobody thought of it" territory...

[16:29] <discord-raku-bot> <Nemokosch> the disadvantages of designing an arbitrarily complex language

[16:29] <discord-raku-bot> <Nemokosch> everything is allowed, unless explicitly forbidden

[16:32] <discord-raku-bot> <el gatito (** advocate)> meanwhile python...python ùöãùöõùöûùöë = 1  print(bruh) # 1 

[16:34] *** camelia left
[16:34] *** m_athias left
[16:35] *** m_athias joined
[16:35] <discord-raku-bot> <Nemokosch> the funny thing is

[16:35] <discord-raku-bot> <Nemokosch> it breaks the REPL in both

[16:35] <discord-raku-bot> <Nemokosch> although both say it has a length of 4

[16:37] <discord-raku-bot> <Nemokosch> by the way, not gonna lie, Raku's version seems saner again üòÜ

[16:38] <discord-raku-bot> <Nemokosch> if you're gonna allow Unicode weirdness like that, why on earth would you map that to something completely different under the hood?

[16:38] *** m_athias left
[16:38] *** m_athias_ joined
[16:38] <discord-raku-bot> <Nemokosch> m:  my \ùöãùöõùöûùöë = 1; say ùöãùöõùöûùöë  

[16:38] <discord-raku-bot> <Raku eval>  1  

[16:40] *** camelia joined
[16:40] *** zashi left
[16:43] <discord-raku-bot> <el gatito (** advocate)> its called nfkc normalization

[16:43] *** m_athias_ is now known as m_athias

[16:46] <discord-raku-bot> <el gatito (** advocate)> the point is that ùöãùöõùöûùöë and bruh represent the same abstract characters just in different fonts

[16:49] <discord-raku-bot> <Nemokosch> from this spaghetti abbreviation, I can't say for sure but Raku strings undergo a certain normalization

[16:50] <discord-raku-bot> <Nemokosch> and it's certainly not this one because these strings are not equal

[16:53] <discord-raku-bot> <Nemokosch> found this https://unicode.org/reports/tr15/#Canon_Compat_Equivalence

[16:58] <discord-raku-bot> <Nemokosch> so for example

[16:59] <discord-raku-bot> <Nemokosch> m:  "LATIN SMALL LETTER A WITH ACUTE".uniparse eq "LATIN SMALL LETTER A, COMBINING ACUTE ACCENT".uniparse andthen .say; 

[16:59] <discord-raku-bot> <Raku eval>  True  

[17:01] <discord-raku-bot> <Nemokosch> I think this is a difference between NFKC and NFC (that MoarVM uses)

[17:38] *** dakkar left
[18:09] *** m_athias left
[18:28] *** Monalika9 joined
[18:29] *** jgaz left
[19:27] *** jgaz joined
[19:59] <discord-raku-bot> <Nemokosch> thanks to thundergnat, I noticed this snippet of mine was incorrect

[19:59] <discord-raku-bot> <Nemokosch> so I made it even crazier

[20:01] *** NemokoschKiwi joined
[20:02] <lizmat> you've just shown the power of NFG  :-)

[20:03] <NemokoschKiwi> m: what is that?

[20:03] <camelia> rakudo-moar 34cf82aa1: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Bogus postfix‚ê§at <tmp>:1‚ê§------> what is that‚èè?‚ê§    expecting any of:‚ê§        infix‚ê§        infix stopper‚ê§        postfix‚ê§        statement end‚ê§        statement modifier‚ê§    ‚Ä¶¬ª

[20:03] <NemokoschKiwi> oops

[20:03] <NemokoschKiwi> lizmat: what is that? ^^

[20:03] <NemokoschKiwi> m: https://gist.github.com/2colours/d4d247d98fa2d6071069387aaad4844a

[20:03] <camelia> rakudo-moar 34cf82aa1: OUTPUT: ¬´((abcd) (a bcd) (ab cd) (abc d) (a b cd) (a bc d) (ab c d) (a b c d))‚ê§¬ª

[20:04] <lizmat> https://docs.raku.org/language/unicode#Normalization

[20:05] <lizmat> https://andrewshitov.com/2018/10/31/unicode-in-perl-6/

[20:06] <NemokoschKiwi> after today, I was ready for "no fucks given", to be honest üòÖ

[20:08] <lizmat> m: dd "\r\n".chars   # most common form of NFG

[20:08] <camelia> rakudo-moar 34cf82aa1: OUTPUT: ¬´1‚ê§¬ª

[20:11] <NemokoschKiwi> so C in NFC stands for codepoints

[20:11] <NemokoschKiwi> substitute that for G and graphemes

[20:11] <lizmat> no, I think Composed ?

[20:11] <NemokoschKiwi> oof

[20:12] <NemokoschKiwi> "Characters are decomposed and then re-composed by canonical equivalence "

[20:12] <NemokoschKiwi> this is the working of NFC apparently

[20:16] <NemokoschKiwi> https://6guts.wordpress.com/2015/04/20/this-week-digging-into-nfg-fixing-use-fatal-and-more/

[20:20] <NemokoschKiwi> This article is good

[20:21] <NemokoschKiwi> I'd add it to the glossary entry of NFG

[20:37] *** Monalika9 left
[21:05] *** NemokoschKiwi left
[21:16] *** deoac joined
[21:19] <deoac> Is it possible to use Perl source filtering in a Raku program?  I've tried ```use Filter::Simple:from<Perl5>;``` without success.

[22:14] *** deoac left
[22:19] <discord-raku-bot> <p6steve> hi deoac - my reply is over on #raku-irc

[23:35] *** ab5tract left
[23:46] *** nachtvlinder joined
[23:48] *** nachtvlinder left
