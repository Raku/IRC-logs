[00:04] <disbot3> <jubilatious1_98524> m: my $a = 42 but role MyRole { method tag { "the_answer" } }; say $a.tag => $a;

[00:04] <disbot3> <Raku eval>  the_answer => 42 

[00:18] *** deoac joined
[01:15] *** deoac left
[01:17] <SmokeMachine> m: say 'Life, the Universe and Everything'.WHY

[01:17] <camelia> rakudo-moar f52cc9284: OUTPUT: «42␤»

[02:24] *** kjp left
[02:26] *** kjp joined
[06:12] <disbot3> <librasteve> @stu002 that looks very interesting … there are several areas where raku was deigned (imo) to be compatible with math concepts … for example the Int and Real types

[06:13] <disbot3> <librasteve> one starting point is the type graphs https://docs.raku.org/type/Real#typegraphrelations

[06:13] <disbot3> <stu002> The use of rationals for fractions and decimals fits very well with the learning exercises I’d like to try

[06:14] <disbot3> <librasteve> i think that jubilations example should be a good mechanism

[06:14] <disbot3> <stu002> Should I follow the docs at https://docs.raku.org/reference or one of the published books?

[06:16] <disbot3> <librasteve> yes … there is good partitioning between rationals Rat and irrationals Num and a set of stickiness rules so Rat op Num => Num for example

[06:18] <disbot3> <librasteve> i like the raku.guide to get started… quick conversion from another language, then make sure you read the https://docs.raku.org/language/objects

[06:20] <disbot3> <librasteve> https://docs.raku.org/language/numerics#Numeric_infectiousness  oh i should have said infectious ness

[06:20] <disbot3> <stu002> Thanks!

[06:24] <disbot3> <librasteve> final thought … https://rakujourney.wordpress.com/2023/11/11/junctions-for-interval-arithmetic/ this was my foray into pushing raku Ranges a bit further to Intervals … this main point here is please do consider making a raku module of your work even as a stub for others to improve … the docs section on how to make a module is pretty easy and the App::Mi6 module helper is great

[06:25] <disbot3> <librasteve> have fun!

[06:26] <disbot3> <stu002> That’s neat. Raku seems like a very programmable programming language

[07:51] *** dakkar joined
[13:18] <disbot3> <antononcube> ... by design, AFAIK.

[13:19] <disbot3> <antononcube> And somewhat opinionated. (Meaning, a lot.)

[16:35] *** dakkar left
[17:19] *** deoac joined
[17:21] *** deoac left
[17:51] *** deoac joined
[17:56] *** librasteve_ joined
[18:07] *** poisNada joined
[18:13] <disbot3> <drudgesentinel> last time I was poking around with Raku, I feel I remember there were performance advantages to using module files. Is this still the case?

[18:37] <lizmat> yes

[18:46] *** Sussy joined
[18:46] *** poisNada left
[18:48] *** poisNada joined
[18:51] *** poisNada left
[18:53] *** Sussy left
[18:54] <librasteve_> https://rakudoweekly.blog/2025/07/14/2025-28/

[19:01] *** Some-body_ joined
[19:02] *** DarthGandalf left
[19:05] *** Some-body_ is now known as DarthGandalf

[19:23] <lizmat> librasteve_++

[19:27] <deoac> I find the keyword 'but' misleading.  Wouldn't 'butalso' more clearly describe its effect?

[19:39] <lizmat> not necessarily

[19:39] <lizmat> m: my $a = 42 but False; say "never printed" if $a

[19:39] <camelia> rakudo-moar f52cc9284: ( no output )

[19:50] *** human-blip left
[19:51] *** human-blip joined
[20:51] <disbot3> <librasteve> I would support a keyword butalso along with notonly

[20:51] <disbot3> <librasteve> ttps://en.wikipedia.org/wiki/Not_Only..._But_Also

[20:51] <disbot3> <librasteve> :-)

[23:36] *** librasteve_ left
