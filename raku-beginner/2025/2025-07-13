[07:04] *** habere-et-disper joined
[07:47] *** habere-et-disper left
[11:10] *** Guest41 joined
[13:34] *** Guest41 left
[15:25] *** Guest41 joined
[16:02] *** Guest41 is now known as poisNada

[16:11] <poisNada> disbot3 Yesterday, we discussed contributing to the documentation.  I opened some merge requests for issues labeled "good first issue,"but now I intend to tackle other “more relevant” issues

[16:24] *** poisNada27 joined
[16:25] *** poisNada27 left
[16:36] *** poisNada left
[16:51] *** cliviafreak joined
[17:09] <disbot3> <librasteve> cool … thanks for your contribution… please share link to the PRs and i will review

[17:36] *** cliviafreak left
[17:47] *** Guest41 joined
[17:49] *** Guest41 is now known as poisNada

[19:11] *** poisNada left
[19:46] *** habere-et-disper joined
[19:57] *** habere-et-disper left
[20:29] *** Guest41 joined
[21:51] *** Guest41 left
[22:00] <disbot3> <stu002> Possibly a silly question: is there any way for built-in types like integers to comply with a custom role?

[22:06] <SmokeMachine> augment?

[22:10] <disbot3> <stu002> Will look that up, still going through the docs to understand what's possible

[22:15] <SmokeMachine> But you can also always do a bit or a does…

[22:16] <SmokeMachine> m: my $a = 42 but role MyRole { method bla { “it’s working!!!” } }; say $a.bla

[22:16] <camelia> rakudo-moar f52cc9284: OUTPUT: «it’s working!!!␤»

[22:17] <SmokeMachine> stu002: 👆

[22:18] <disbot3> <stu002> Very neat

[22:21] <SmokeMachine> stu002: I don’t know what you want to do… but maybe this can help: https://github.com/FCO/Protocol

[22:24] <disbot3> <stu002> That looks very promising. As a learning experiment I'd like to try and re-implement some of https://gitlab.com/ornamentist/un-algebra which uses Rust traits heavily for both custom types and built-in types

[23:11] <SmokeMachine> stu002: I confess I did not understand that lib… but on one of those examples, I saw something that looked like reimplementation of an addition method… for something like that, custom operators wouldn’t help?

[23:14] <disbot3> <stu002> I don't know enough Raku yet to be sure of that, will keep reading!

[23:33] <SmokeMachine> m: multi infix:<+>(Int, Int) is default { 42 }; say 1 + 1

[23:33] <camelia> rakudo-moar f52cc9284: OUTPUT: «42␤»

