[00:10] *** stanrifkin left
[05:09] <discord-raku-bot> <rcmlz> Can you append a â€š&â€˜ at the command?

[05:11] <discord-raku-bot> <rcmlz> like so  raku # (For example) my Str constant $DIFF-TOOL  = 'C:\Program Files\WinMerge\WinMergeU.exe &'; run $DIFF-TOOL, $full-file-path, $network-path; 

[05:42] *** sjn left
[05:43] *** sjn joined
[06:40] <discord-raku-bot> <Welemtam> I did the equivalent on windows which is  run 'cmd', '/c', 'start', '/B', 'WinMergeU.exe', 'my', 'arguments'; it works like this, it's specific to windows, but for now it'll be OK ðŸ™‚

[09:26] <discord-raku-bot> <Welemtam> For curious people ; the correct way on Windows is to pass an empty string to cmd /c start as a placeholder ; otherwise if you give a quoted program name (which is necessary if it has spaces), it doesn't interpret it as the program name, but as a window title. (which gives a completely absurd result since your 1st arg becomes the program name, ...) (but this is because the windows console is dreadful)   so

[09:26] <discord-raku-bot> this is works for me :   run 'cmd', '/c', 'start', '""', '/b', $DIFF-TOOL, $full-file-path, $network-path;  Sadly qx / qqx has the same blocking behavior that I saw with "run winmerge.exe"   I believe my question is item 5. in the following topic  https://github.com/Raku/problem-solving/issues/20#issuecomment-487715316  > I want to run a exe file via cmd.exe, but don't want any cmd.exe side effect > Why would one

[09:26] <discord-raku-bot> want to do such a thing and not just call the exe file directly? > Number 4. and 5. won't happen in any normal usage scenarios.  As my scenario is "run some application and go away" I'm still curious to know if there's a simpler way (just like a fork-exec in C or subprocess.Popen in python)

[10:38] <discord-raku-bot> <coranila> @Welemtam may I suggest trying to capture that insight in a module?

[10:39] <discord-raku-bot> <coranila> I'm pretty sure others will appreciate having a mature solution to fall back on, plus it's a great opportunity to dig a bit deeper into how Raku handles distribution across platforms - as you note yourself, this is explicitly OS dependent.

[10:39] <discord-raku-bot> <coranila> I'm failure sure you should have access to most, if not all, you need via dynamic variables during runtime.

[10:40] <discord-raku-bot> <coranila> Should it turn out that you don't that might very well be a compiler or even roast bug.

[10:41] <discord-raku-bot> <coranila> ...although maybe a note in the docs is enough ðŸ¤”  I have been away for a while and used to be deep in the backend... ðŸ˜‡

[10:47] <discord-raku-bot> <Welemtam> sure, I will

[10:48] <discord-raku-bot> <coranila> From the looks of it everything we have in the ecosystem does indeed insist on managing stuff longterm; there's no canonical way to say "just fire and forget"" as far as I can tell.

[11:11] <discord-raku-bot> <coranila> Maybe this means we need a wild-life extension of the adoption center... ðŸ¤”

[11:16] <lizmat> coranila are you referring to the Raku Ecosystem Archive (REA) ?

[11:18] <discord-raku-bot> <coranila> lizmat: I found https://github.com/Raku/ecosystem/blob/master/ADOPT-ME.md, which to me seems to imply strict ownership; I'm asking about a mechanism for maintanance fixes that doesn't require ownership; my last ownership did escalate to the JVM backend almost 10 years ago, hi :)

[11:19] <discord-raku-bot> <coranila> (that's to say I am Pepe/Nele Schwarz)

[11:19] <lizmat> aha... ok, I guess I will need to look at that list, as its outdated

[11:19] <lizmat> hi Pepe!

[11:19] <discord-raku-bot> <coranila> nele please!

[11:19] <lizmat> ah, Nele, sorry

[11:19] <discord-raku-bot> <coranila> cause ykno, ~gender~

[11:19] <discord-raku-bot> <coranila> :)

[11:20] <lizmat> Hi Nele, nice to see you (again)!

[11:20] <discord-raku-bot> <coranila> thank you! I am trying to get back into things but yeah, it's got to be loose hence the idea of some interface for an evolutionary drive, so to speak

[11:21] <discord-raku-bot> <coranila> as in, a means to allow "this is what community thinks should maybe change", a reflective testing stage maybe a la debian?

[11:21] <lizmat> many of my modules fall in that category... 

[11:21] <lizmat> some may be adopted into Raku at some point, most will not: but that's fine  :)

[11:22] <discord-raku-bot> <coranila> also glad to be around again and see you and others and a community; very cool!!

[11:24] <lizmat> yeah, although pretty small compared to other communities, it's pretty cool  :-)

[13:37] *** stanrifkin joined
[23:54] *** kjp left
[23:55] *** kjp joined
