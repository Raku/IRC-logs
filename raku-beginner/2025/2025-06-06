[12:08] *** stanrifkin joined
[13:02] *** lizmat left
[13:10] *** lizmat joined
[15:25] *** habere-et-disper joined
[16:08] *** habere-et-disper left
[16:13] *** habere-et-disper joined
[16:28] *** habere-et-disper left
[16:36] *** habere-et-disper joined
[16:49] *** habere-et-disper left
[16:55] *** habere-et-disper joined
[17:13] *** habere-et-disper left
[19:34] *** habere-et-disper joined
[19:49] <habere-et-disper> I know how to alias an argument, but not how to alias a sub/function ?

[19:56] <habere-et-disper> Aha -- & sigil.

[19:58] <lizmat> m: my &frobnicate = &max;   say frobnicate 1,2,3

[19:58] <camelia> rakudo-moar 94457945e: OUTPUT: «3␤»

[19:58] <lizmat> m: my constant &frobnicate = &max;   say frobnicate 1,2,3   # do the aliasing at compile time

[19:58] <camelia> rakudo-moar 94457945e: OUTPUT: «3␤»

[20:14] <habere-et-disper> i was trying to do that with a method, but i see it's easier to do just method alias { self.original }

[21:47] *** habere-et-disper left
[22:03] <disbot1> <nahita3882> i think there is Method::Also if you are okay with third party

[22:03] <disbot1> <nahita3882> https://raku.land/zef:lizmat/Method::Also

[23:23] *** human-blip left
[23:31] *** human-blip joined
