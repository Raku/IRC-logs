[00:24] *** arkiuat left
[00:53] *** arkiuat joined
[00:58] *** arkiuat left
[01:28] *** arkiuat joined
[01:32] *** arkiuat left
[01:55] *** arkiuat joined
[03:03] *** stanrifkin_ joined
[03:06] *** stanrifkin left
[03:27] *** arkiuat left
[03:48] <disbot> <simon_sibl> its probably not the best way to demonstrate this but what would be the equivalent in Raku regex ? https://termbin.com/zoro

[05:17] <disbot> <rcmlz> I really like to use Grammars (easy re-use and documentation). Hence I would first check if there is already something very close to what I need  https://raku.land/?q=Grammar  and the use/tune that to my needs.

[07:02] *** disbot7 joined
[07:02] *** disbot left
[07:03] *** disbot7 is now known as disbot

[08:06] *** lizmat_ left
[08:06] *** lizmat joined
[10:55] <disbot> <rcmlz> Is there way to sort characters such that special chars like ä etc. come right after a?  https://glot.io/snippets/hadb6sburl  m: say <a ä b>.sort eq <a ä b>

[10:56] <disbot> <rcmlz> m: say <a ä b>.sort eq <a ä b>

[10:56] <disbot> <Raku eval>  False 

[10:57] <disbot> <rcmlz> m: say <a ä b>.sort

[10:57] <disbot> <Raku eval>  (a b ä) 

[11:16] <disbot> <nahita3882> what about @input.sort(*.NFKD)?

[11:18] <disbot> <nahita3882> https://www.unicode.org/reports/tr15/#Compatibility_Composite_Figure demonstrates how the normalizations NF* differ

[11:29] <lizmat> https://docs.raku.org/type/Any#method_collate

[11:33] *** camelia joined
[12:09] <lizmat> m: say <a ä b>.collate

[12:09] <camelia> rakudo-moar f56482941: OUTPUT: «(a ä b)␤»

[12:10] <lizmat> rcmlz ^^

[12:11] <disbot> <jubilatious1_98524> Maybe some ideas here (please leave an upvote): https://unix.stackexchange.com/search?q=user%3A227738+NFKD

[14:17] <disbot> <nahita3882> .collate doesn't respect case, maybe there is a way via $*COLLATION but I'm not sure

[15:02] *** topnep joined
[15:19] <lizmat> nahita3882   wouldn't that be a case of calling .lc on the string?

[15:27] <disbot> <nahita3882> i don't follow. given <a ä b c A Ä Ö S T>;, they expect <A Ä Ö S T a ä b c>;

[15:27] <disbot> <nahita3882> m: say <a ä b c A Ä Ö S T>.collate

[15:27] <disbot> <Raku eval>  (a A ä Ä b c Ö S T) 

[15:46] <lizmat> I guess .collate isn't the solution then

[15:50] <lizmat> use String::Utils <nomark>; dd <a ä b c A Ä Ö S T>.sort(&nomark)

[15:50] <lizmat> ("A", "Ä", "Ö", "S", "T", "a", "ä", "b", "c").Seq

[15:50] <lizmat> https://raku.land/zef:lizmat/String::Utils

[15:51] <lizmat> nahita3882 ^^

[15:54] <disbot> <nahita3882> yes thanks i suggested something similar with @input.sort(*.NFKD) although i'm not sure if there exist examples where the outputs would differ, but yours seems to address the problem more directly

[18:15] *** librasteve_ joined
[18:35] <disbot> <rcmlz> Thank you very much.  Booth @input.sort(*.NFKD) as well as String::Utils worked in my case.

[18:37] <disbot> <librasteve> feels the need for an adverb on collate

[18:48] *** topnep left
[18:49] *** topnep joined
[23:30] *** stanrifkin_ left
[23:31] *** librasteve_ left
