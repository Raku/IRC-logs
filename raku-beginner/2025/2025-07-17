[00:09] <disbot3> <stu002> I'll try rakubrew next but for now:  ❭ brew list -1 | grep rakudo rakudo-star ❭ brew list -1 | grep mimalloc mimalloc  ❭ zef install Linenoise ===> Searching for: Linenoise ===> Building: Linenoise:ver<0.1.2>:auth<zef:raku-community-modules> [Linenoise] ld: warning: search path '/opt/homebrew/Cellar/mimalloc/3.0.3/lib' not found [Linenoise] ld: library 'mimalloc' not found [Linenoise] clang: error: linker

[00:09] <disbot3> command failed with exit code 1 (use -v to see invocation) [Linenoise] make: *** [/var/folders/hb/l7hw72rs3c7862_h260b9mtr0000gn/T/.zef.1752710675.87611/182028fca2d81184bf6c6858d76c21be90e794b4.tar.gz/Linenoise-0.1.2/resources/libraries/liblinenoise.dylib] Error 1 ===> Building [FAIL]: Linenoise:ver<0.1.2>:auth<zef:raku-community-modules> Aborting due to build failure: Linenoise:ver<0.1.2>:auth<zef:raku-community-modules> (use

[00:09] <disbot3> --force-build to override)  ❭ ls /opt/homebrew/Cellar/mimalloc/  3.1.5/  (It seems to be looking for 3.0.3 and not 3.1.5)?

[00:17] <disbot3> <stu002> Is it worth submitting a bug report for this or is it (most likely) something in my setup?  I tried both bash and fish shells and removing and reinstalling readline, mimalloc, rakudo-star

[00:34] <disbot3> <stu002> Thanks everyone but I've run out of time to experiment with Raku, will definitely return to it soon.

[03:27] *** ACfromTX left
[03:53] <disbot3> <jubilatious1_98524> @stu002 I'm on MacOS. I have a few Rakudo versions installed: an older one that has its path exported in my bash/zshrc files, and a newer one that I've begun playing with.

[03:54] <disbot3> <jubilatious1_98524> @stu002 I just fired up the newer Rakudo and it gave me the  error:  You may want to zef install Readline, zef install Linenoise, or zef install Terminal::LineEditor or use rlwrap for a line editor

[03:57] <disbot3> <jubilatious1_98524> @stu002 @uxege Funny thing is, when I try zef install Linenoise the program responds arm64-clang/share/perl6/site/bin/zef install Linenoise All candidates are currently installed. Not using RakudoBrew, so maybe an issue with different versions/installs?

[04:55] *** ACfromTX joined
[05:49] *** deoac left
[08:06] *** dakkar joined
[10:07] *** swaggboi left
[10:08] *** swaggboi joined
[11:03] *** human-blip left
[11:05] *** human-blip joined
[11:28] <disbot3> <rcmlz> In case someone like to use rake via Nix-Shells, I just made a nix shell for jupyter-chatbook.  https://github.com/rcmlz/Raku-Nix-Shells/blob/main/jupyter-chatbook.nix

[11:29] <disbot3> <rcmlz>  git clone https://github.com/rcmlz/Raku-Nix-Shells cd Raku-Nix-Shells nix-shell jupyter-chatbook.nix  should do the trick

[11:30] <disbot3> <rcmlz> My biggest learning was how to enhance LD_LIBRARY_PATH

[11:35] <disbot3> <antononcube> Great work — thank you!

[11:36] <disbot3> <antononcube> I will look into it over the weekend.

[14:33] *** librasteve_ joined
[16:17] *** human-blip left
[16:19] *** human-blip joined
[16:21] *** deoac joined
[16:33] *** dakkar left
[17:58] *** human-blip left
[17:59] *** human-blip joined
[18:51] *** human-blip left
[18:52] *** human-blip joined
[19:55] *** msiism joined
[19:57] <msiism> Ist there any way to get a random number in Raku in the form of `routine(min, max)`?

[20:02] <SmokeMachine> m: say (10 .. 20).pick

[20:02] <camelia> rakudo-moar f52cc9284: OUTPUT: «11␤»

[20:04] <msiism> Okay, I was looking for somehting like `pick(10 .. 20)` then. But I could just write that.

[20:05] <lizmat> m: say pick(11..20)

[20:05] <camelia> rakudo-moar f52cc9284: OUTPUT: «()␤»

[20:05] <lizmat> hmmm

[20:05] <lizmat> m: say pick(11..20,1)

[20:05] <camelia> rakudo-moar f52cc9284: OUTPUT: «(1)␤»

[20:05] <lizmat> m: say pick(11..20,1\)

[20:05] <camelia> rakudo-moar f52cc9284: OUTPUT: «===SORRY!=== Error while compiling <tmp>␤Unable to parse expression in argument list; couldn't find final ')' (corresponding starter was at line 1)␤at <tmp>:1␤------> say pick(11..20,1\<HERE>)␤»

[20:05] <lizmat> m: say pick(11..20,1)

[20:05] <camelia> rakudo-moar f52cc9284: OUTPUT: «(1)␤»

[20:05] <lizmat> hmm

[20:05] <msiism> Yeah, I already learned a while back that not all methods are also implemented as subroutines.

[20:06] <lizmat> but the odd thing is that it doesn't complain... it's not doing the right thing

[20:07] <lizmat> m: say pick(1,11..20)

[20:07] <camelia> rakudo-moar f52cc9284: OUTPUT: «(14)␤»

[20:07] <lizmat> m: say pick(1,11..20)

[20:07] <camelia> rakudo-moar f52cc9284: OUTPUT: «(13)␤»

[20:07] <lizmat> m: say pick(1,11..20)

[20:07] <camelia> rakudo-moar f52cc9284: OUTPUT: «(20)␤»

[20:08] <lizmat> wonder if that would be fixable

[20:20] <lizmat> msiism: https://github.com/rakudo/rakudo/commit/e87d3aa9ad

[20:21] <msiism> Great! Thanks!

[21:29] *** deoac left
[21:37] <SmokeMachine> m: say pick |(1 .. 10)

[21:37] <camelia> rakudo-moar e87d3aa9a: OUTPUT: «(2)␤»

[21:47] <lizmat> m: say pick |(3..10)

[21:47] <camelia> rakudo-moar e87d3aa9a: OUTPUT: «(9 8 4)␤»

[21:48] <lizmat> so that's *not* exactly what you meant, is it?

[22:14] <msiism> No, I was looking for a way to put it like a simple subroutine.

[22:15] <SmokeMachine> lizmat: yeah… not what I was expecting…

[22:17] * msiism gets it now.

[22:17] <SmokeMachine> m: my &pick-one = &pick.assume: 1; say pick-one 3..10

[22:17] <camelia> rakudo-moar e87d3aa9a: OUTPUT: «No such method 'assume' for invocant of type 'Sub'␤  in block <unit> at <tmp> line 1␤␤»

[22:17] <SmokeMachine> m: my &pick-one = &pick.assuming: 1; say pick-one 3..10

[22:17] <camelia> rakudo-moar e87d3aa9a: OUTPUT: «(3)␤»

[22:19] <lizmat> m: say pick 3..10

[22:19] <camelia> rakudo-moar e87d3aa9a: OUTPUT: «3␤»

[22:19] <lizmat> m: say pick 3..10

[22:19] <camelia> rakudo-moar e87d3aa9a: OUTPUT: «10␤»

[22:19] <lizmat> m: say pick 3..10

[22:19] <camelia> rakudo-moar e87d3aa9a: OUTPUT: «5␤»

[22:19] <lizmat> .oO( the magic of https://github.com/rakudo/rakudo/commit/e87d3aa9ad )

[22:20] <SmokeMachine> lizmat++

[23:02] *** msiism left
[23:30] *** deoac joined
