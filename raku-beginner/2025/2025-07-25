[03:27] *** deoac joined
[04:14] *** deoac left
[08:05] *** dakkar joined
[08:43] *** msiism joined
[08:47] <msiism> Okay, I get now that in `lines(IO('wordlist')`, IO() is a type coercion.

[09:57] *** msiism left
[12:52] *** lizmat left
[15:13] *** human_blip left
[15:15] *** human_blip joined
[15:48] *** human_blip left
[15:50] *** human_blip joined
[16:27] *** cliviafreak joined
[16:32] *** dakkar left
[16:44] *** cliviafreak left
[17:16] *** human_blip left
[17:18] *** human_blip joined
[17:29] *** cliviafreak joined
[17:42] <cliviafreak> Is there the best (only?) way to restructure the list here? `for $line.split(/\s/).map(+*).combinations(2) -> ($a, $b) {`

[17:53] *** lizmat joined
[18:40] <cliviafreak> Is there a way to compile to byte code once and run the byte code on next runs?

[18:42] <lizmat> if you put your code in a module, and -use- that module, the bytecode will be run (barring changes in the search paths,code, etc.)

[18:43] <lizmat> that's why most CLI scripts are generally very small and use a module for the most of the logic to be performed

[18:49] <cliviafreak> Thanks. I take it the command line argument '-I' can be used during development of modules?

[18:50] <lizmat> yes

[18:50] <lizmat> preferably -I. in a directory with a META6.json file: that mimics the installed module behaviour the best

[18:53] <cliviafreak> ðŸ‘Œ wonderful

[19:02] *** cliviafreak left
[21:02] *** librasteve_ joined
