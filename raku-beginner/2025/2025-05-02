[03:11] *** stanrifkin_ joined
[03:14] *** stanrifkin left
[05:37] *** lizmat_ joined
[05:41] *** lizmat left
[11:46] <discord-raku-bot> <antononcube> @Welemtam How easy or hard was to install Raku on Windows?

[13:13] <discord-raku-bot> <rcmlz> @antononcube - did you hear the news? The year of the Linux-Desktop has finally come! After this YouTubeer with 110Mio follower was promoting it â€¦ ðŸ˜€ðŸ˜€ðŸ˜€ðŸ˜€

[13:13] <discord-raku-bot> <rcmlz> https://youtu.be/pVI_smLgTY0?feature=shared

[13:13] <discord-raku-bot> <rcmlz> So no need to bother about Windows anymore! LOL

[13:14] <discord-raku-bot> <rcmlz> Maybe he can also talk about Raku sone day â€¦

[13:16] <discord-raku-bot> <antononcube> @rcmlz Yeah, I keep hearing this. I and many others are skeptical â€¦.

[13:34] <discord-raku-bot> <rcmlz> Fun on Friday - comment not taken too seriously. I watched the 20min video and was well entertained.

[15:18] <discord-raku-bot> <Welemtam> At first I installed rakudo-moar which was the first link on the website,  it was fine, except when I tried to use 'prove6' (which was in my PATH but it was no-op). I didn't really understand why, but I then installed rakudo-star which is more complete, and it was OK.  So I never tried to stress-test it, but the installation process was as easy as with Ruby, Perl or so.

[15:18] *** human-blip left
[15:20] <discord-raku-bot> <antononcube> Ok. Good to know. (I have to remotely help someone to install "Raku for Data Science" environment on Windows.)

[15:20] *** human-blip joined
[15:21] <discord-raku-bot> <antononcube> @Welemtam I have request, feel free to refuse.  Can you try to install "Jupyter::Chatbook" ?

[15:24] <discord-raku-bot> <Welemtam> sure, I'll try

[15:24] <discord-raku-bot> <antononcube> Good luck!!

[15:43] <discord-raku-bot> <coranila> @antononcube maybe WSL2 is an option?

[15:44] <discord-raku-bot> <coranila> in case you should run into issues on windows; although ISTR that tooling on windows should be fine, especially if you use Comma (or its successor if there is one by now)

[15:45] <discord-raku-bot> <coranila> ah, but i suspect you're behind the data science in raku youtube channel, so i might be just sharing outdated anecdata, whoops :-)

[15:55] <discord-raku-bot> <antononcube> Well, I do not use Windows, and two years ago when I tried to help someone install Raku & co. on Windows we met some insurmountable obstacles. So, any Raku-on-Windows information is welcome.

[15:56] <discord-raku-bot> <antononcube> @coranila Are you using Raku on Windows?

[15:56] <discord-raku-bot> <coranila> fair! I did use it on windows via Rakudo* but with rather light workloads, and I moved back to linux ~2 months ago

[15:56] <discord-raku-bot> <antononcube> Damn! (I.e. ok, fine.)

[15:56] <discord-raku-bot> <coranila> didn't notice any problems with those light work loads, but that was mostly just oneliners and a few lines repl maybe

[15:57] <discord-raku-bot> <coranila> in general specific problems that are encountered are easier to diagnose than wide-reaching "anything I should look out for?" though, as you probbably know!

[15:57] <discord-raku-bot> <antononcube> Yes, of course.

[15:59] <discord-raku-bot> <antononcube> But I am at stage to decide -- should I suggest using LLM-backed apps via (1) Jupyter-&-Raku, or (2) Python-&-Raku.

[16:00] <discord-raku-bot> <antononcube> My assumptions are that 1/Raku is harder to install but having more LLM tools available, and 2/Python easy to install, but LLM-tooling needs additional work.

[16:01] <discord-raku-bot> <antononcube> As I mentioned, two years ago 1/Raku was simply not an option since the other party could not install it on their Windows machine.

[16:02] <discord-raku-bot> <coranila> huh, i'm not sure i'd agree with those assumptions - ime LLMs prefer python, which means the feedback loop is easier; but also, rakudo* installs very well  that aside, that sounds to me like you should punt this downstream - as in, suggest both with the associated caveats - which include python being, well, python

[16:03] <discord-raku-bot> <coranila> as in, since i know even less about the target of your advice, it seems obvious to me that you too do not know enough to cleanly decide, and the fact that you ask for advice about how to decide reveals that you dont want to fall prey to your own biases

[16:04] <discord-raku-bot> <coranila> this in turn suggests that you should mention your biases to the target of your advice and include why you get stuck between the two options

[16:04] <discord-raku-bot> <coranila> and well, list the options as you see them

[16:04] <discord-raku-bot> <coranila> plus you can suggest the raku community and its capacity for giving advice as well!

[16:05] <discord-raku-bot> <coranila> but i suspect that's where my biases start leaking now.. :-)

[16:06] <discord-raku-bot> <antononcube> Ok, sounds about right.

[16:08] <discord-raku-bot> <antononcube> That is interesting -- what feedback loop do you have in mind here? > [...] LLMs prefer python, which means the feedback loop is easier.

[16:09] <discord-raku-bot> <coranila> iterating on code; in my experience, LLMs reach for python first, and struggle with some nuance in Raku's grammar

[16:09] <discord-raku-bot> <coranila> like getting confused about twigils or adverbs especially seems to happen a lot

[16:10] <discord-raku-bot> <antononcube> Yeah, absolutely -- working Python code is generated much more reliably by LLMs (than any other language.)

[16:11] <discord-raku-bot> <coranila> yeah, a lot of that is probably just amount of data though, but there is interesting arguments to be made about homoiconicity - although that does get esoteric pretty quickly, obviously

[16:12] <discord-raku-bot> <coranila> as in, because many LLMs are essentially implemented in python, and transformers are learning about transformers a lot because that's the easiest "lol i wonder what will happen" humans think of...

[16:13] <discord-raku-bot> <antononcube> I very much doubt LLMs are implemented in Python. But the interfaces to them, most likely.

[16:14] <discord-raku-bot> <antononcube> And in general Python is not that good for interacting with LLMs, it is too wordy and spread out. As I mentioned I find certain Python LLM tooling to be missing or underdeveloped.

[16:14] <discord-raku-bot> <antononcube> Anyway, I have my biases, of course.

[16:14] <discord-raku-bot> <coranila> oh, many of the highest-level abstractions are a few lines of python; definitions of NNs and attention layers and such are usually implemented in HLL FFI libraries that dispatch to precompiled tensor units

[16:15] <discord-raku-bot> <coranila> whether that means "truly implemented in" is a really complicated question in my opinion, but I see your point; the machine code that's executed is definitely not python

[16:16] <discord-raku-bot> <coranila> i personally think english is great for interacting with LLMs, but context windows mean one needs to do a lot of semantic compression work depending on available hardware

[16:17] <discord-raku-bot> <coranila> something about "natural languages are the most powerful system because they are what let chomsky define his hierarchy in the first place", which may or may not be rigorous ;-)

[16:22] <discord-raku-bot> <antononcube> I think English is a very confused and confusing language. It took me some time to figure out why it is popular or convenient to many. (Besides, the former empire argument.)

[16:24] <discord-raku-bot> <antononcube> For LLMs is actually very helpful to not have grammatical restrications like cases and faces. And the idiomatic nature of English makes certain frequency-based generation more correct quicker.

[16:27] <discord-raku-bot> <antononcube> But the biggest advantage of English (related to previously mentioned "features") is that one can mangle it a lot and still be understood. Again, that is a good property to have for LLMs.

[16:47] <discord-raku-bot> <coranila> yes, that aligns with my perspective as well, thank you for sharing!

[20:03] <discord-raku-bot> <Welemtam> @antononcube Jupyter::Chatbook installation stopped at that point :   ===> Building: Digest::SHA256::Native:ver<1.0.0> ===> Building [FAIL]: Digest::SHA256::Native:ver<1.0.0> Aborting due to build failure: Digest::SHA256::Native:ver<1.0.0> (use --force-build to override)  Is it what you expected?

[20:58] <discord-raku-bot> <antononcube> @Welemtam Yeah, unfortunately. Can you manually install that package? (It might not be possible.)

[20:59] <discord-raku-bot> <antononcube> When I imply that is expected, I mean that I have to install manually that package on macOS arm64.

[21:01] <discord-raku-bot> <Welemtam> What do you mean by "manually" ?

[21:03] <discord-raku-bot> <antononcube> 1. Clone the repository 2. Run Configure.raku 3. Run make

[21:03] <discord-raku-bot> <antononcube> This repository: https://github.com/bduggan/raku-digest-sha256-native/

[21:04] <discord-raku-bot> <Welemtam> ok ðŸ™‚

[21:04] <discord-raku-bot> <antononcube> If you have difficulties, look at the closed issues of the repository, some might help.

[21:08] <discord-raku-bot> <Welemtam> it says I don't have nmake in my path .. makes sense. I wonder why it doesnt appear with zef install

[21:37] <discord-raku-bot> <Welemtam> the generated makefile has the following link command  cl /dll /nologo /LTCG  /out:./resources/libraries/sha256.dll sha256.obj   So I believe it wants me to use MSVC but the command is invalid, it would be OK with link.exe, I think ..

[21:40] <discord-raku-bot> <Welemtam> since it looks LibraryMake directly fetches the values of the templates (like %CC%) in the VM config ( https://github.com/retupmoca/P6-LibraryMake/blob/master/lib/LibraryMake.rakumod ) I don't know if there's a way to tell it to translate them to MINGW (?)

[21:58] <discord-raku-bot> <antononcube> @Welemtam  Please file an issue (in that repository) with your observations above.

[21:59] <discord-raku-bot> <antononcube> @Welemtam thank you for your efforts!

[22:24] <discord-raku-bot> <Welemtam> https://github.com/bduggan/raku-digest-sha256-native/issues/10

[22:25] <discord-raku-bot> <Welemtam> I don't know about those templatized variables  %CC%, %LD%, etc. but it seems difficult to keep a perfect abstraction over both gcc and msvc

[22:28] <discord-raku-bot> <Welemtam> There must be a way to use mingw though

[22:28] <discord-raku-bot> <coranila> doesn't mingw require you run inside their provided environment?

[22:29] <discord-raku-bot> <coranila> ISTR they specifically provide cmd.exe/PowerShell shortcuts

[22:31] <discord-raku-bot> <Welemtam> Here it's the P6-LibraryMake tool that parses Makefile.in and generates a makefile with MSVC commands

