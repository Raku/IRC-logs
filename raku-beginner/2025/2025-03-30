[03:07] *** stanrifkin joined
[03:08] *** stanrifkin_ left
[14:02] *** dano left
[14:02] *** dano joined
[17:39] <discord-raku-bot> <nahita3882> m: sub fun(*@args, Str :$s) { dd }; fun s => 3

[17:39] <discord-raku-bot> <Raku eval>  sub fun(*@args, Str :$s) 

[17:40] <discord-raku-bot> <nahita3882> m: sub fun(Str :$s) { dd }; fun s => 3

[17:40] <discord-raku-bot> <Raku eval>  Exit code: 1 Type check failed in binding to parameter '$s'; expected Str but got Int (3)   in sub fun at main.raku line 1   in block <unit> at main.raku line 1  

[17:40] <discord-raku-bot> <nahita3882> this is unexpected right? namely the fact that it doesn't error with a type check failure in the first case

[17:41] <discord-raku-bot> <nahita3882> difference in two snippets is only *@args existing

[18:28] <discord-raku-bot> <librasteve> Nahita: looks like a bug to me

[18:29] <discord-raku-bot> <librasteve> (maybe I have missed something ... so suggest we wait for someone wiser to pass opinion and, if they also agree, then file as an issue)

[18:30] <discord-raku-bot> <librasteve> m sub fun(Int :$s, *@args) { dd }; fun s => 1

[18:31] <discord-raku-bot> <librasteve> m sub fun(Int :$s, *@args) { $s.say }; fun s => 1 

[18:32] <discord-raku-bot> <librasteve> m: sub fun(Int :$s, *@args) { $s.say }; fun s => 1

[18:32] <discord-raku-bot> <Raku eval>  1 

[18:32] <discord-raku-bot> <librasteve> m: sub fun(Int :$s, *@args) { $s.say }; fun s => "a"

[18:32] <discord-raku-bot> <Raku eval>  Exit code: 1 Type check failed in binding to parameter '$s'; expected Int but got Str ("a")   in sub fun at main.raku line 1   in block <unit> at main.raku line 1  

[18:33] <discord-raku-bot> <librasteve> seems to be fine with the *@args after the named

[20:19] <discord-raku-bot> <nahita3882> oh thanks

[22:20] *** stanrifkin left
