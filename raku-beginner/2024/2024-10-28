[08:50] *** dakkar joined
[11:03] *** teatime joined
[14:24] *** Heptite joined
[14:57] <discord-raku-bot> <winfredraj> hello all, do we have any string functions which will remove line breaks inside the string. I have a XML payload which has a line break or 0x0A which could be causing a problem

[15:03] <discord-raku-bot> <nahita3882> hi, there is the generic subst method on Strings for substitution so that might help

[15:04] <discord-raku-bot> <nahita3882> important to note is that it by default only substitutes the 1st occurence (if any); you need an "adverb" to change them all, i.e., :g

[15:04] <discord-raku-bot> <nahita3882> (for "g"lobal)

[15:04] <discord-raku-bot> <winfredraj> ok thanks

[15:23] <discord-raku-bot> <antononcube> Maybe, there is named-regex for line breaks.

[16:24] <discord-raku-bot> <rcmlz> you mean like the unicode category ‚Äû<: Line_Separator>‚Äú

[16:24] <discord-raku-bot> <rcmlz> https://docs.raku.org/language/regexes#Unicode_properties

[16:27] <discord-raku-bot> <rcmlz> maybe these unicode categories make the code slower than a single hard‚Äîcoded ‚Äû\n‚Äú, but to me it still feels superior ‚Ä¶ üòÄ

[16:40] <discord-raku-bot> <antononcube> @rcmlz Thanks for looking that up!

[16:53] *** Heptite left
[16:56] <discord-raku-bot> <timemelon> what are the rules around $_ in quoted code blocks?

[16:56] <discord-raku-bot> <timemelon> for context:

[16:57] <discord-raku-bot> <timemelon> bash printf 'foo\ngoo\n' | raku -ne 'say "$_"'  prints foo then goo as I expected

[16:57] <discord-raku-bot> <timemelon> but bash printf 'foo\ngoo\n' | raku -ne 'say "{$_}"'  tells me Use of uninitialized value $_ of type Any in string context.

[17:03] *** Heptite joined
[17:11] <ab5tract> timemelon: the second example should be resolved by adding xargs

[17:11] <ab5tract> Oh, sorry

[17:12] <ab5tract> The second version creates a new block, which creates a new lexical $_

[17:12] <discord-raku-bot> <librasteve> @timemelon ... here is the way I would model this - every block has a topic $_, in your working example, the topic is a $ scalar and gets interpolated by the quotes ... so the value of the topic of this code (ie the MAIN block) is printed BUT in the second example you now have a new inner block inside the double quotes and the inner block (the closure) has it's own topic that is uninitialized - so to get

[17:12] <discord-raku-bot> this to work you will need to pass the topic from the outer block into the inner closure.

[17:12] <discord-raku-bot> <librasteve> ha!

[17:12] <ab5tract> librasteve ++

[17:13] <discord-raku-bot> <librasteve> printf 'foo\ngoo\n' | raku -ne 'my $x = $_; say "{$x}"'

[17:14] <discord-raku-bot> <timemelon> oh right, I didn't realise $_ was per-block, thank you!

[17:14] <discord-raku-bot> <librasteve> you're welcome

[17:17] <discord-raku-bot> <librasteve> @winfredraj you may want to look at \v which matches vertical whitespace https://docs.raku.org/language/regexes#\v_and_\V

[17:18] <discord-raku-bot> <librasteve> maybe something like .subst( /\v/, '', :g);

[17:35] *** dakkar left
[17:45] <discord-raku-bot> <winfredraj> @librasteve thanks for the tip.

[17:45] <discord-raku-bot> <winfredraj> Got my TCP server in Raku working - now I am able to simulate my PLC inputs from the Raku application

[17:46] <discord-raku-bot> <winfredraj> lets see how far I go with my simulation suite in Raku

[18:05] <discord-raku-bot> <librasteve> üç¨

[18:12] <lizmat> And yet another Rakudo Weekly News hits the Net: https://rakudoweekly.blog/2024/10/28/2024-44-issues-fallen/

[18:56] <discord-raku-bot> <librasteve> yay

[19:07] *** Heptite left
[20:17] *** Chanakan left
[20:17] *** Heptite joined
[20:20] *** Chanakan joined
[21:06] <ab5tract> timemelon: keep in mind that declaring a signature for a block will stop the automatic creation of a topic variable

[21:06] <ab5tract> m: { -> { say $_ }() }(42)

[21:06] <camelia> rakudo-moar 76f62fe7b: OUTPUT: ¬´42‚ê§¬ª

[21:07] <ab5tract> m: { -> $s = ‚Äúignored‚Äù { say $_ }() }(42)

[21:07] <camelia> rakudo-moar 76f62fe7b: OUTPUT: ¬´42‚ê§¬ª

[21:10] <discord-raku-bot> <timemelon> oh interesting

[21:16] <ab5tract> m: sub f { say $_ }; sub x() { try say $_ }; f(42); x(); $_ = 666; x()

[21:16] <camelia> rakudo-moar 76f62fe7b: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Calling f(Int) will never work with declared signature ()‚ê§at <tmp>:1‚ê§------> b f { say $_ }; sub x() { try say $_ }; ‚èèf(42); x(); $_ = 666; x()‚ê§¬ª

[21:17] <ab5tract> Oops, miscalculated there, one second

[21:19] <ab5tract> Subs act according to slightly different rules, so please ignore the last example

[21:20] <ab5tract> (With subs you gut @_ when you don‚Äôt specify a signature)

[21:20] <ab5tract> *get

[22:20] *** Heptite left
[22:31] *** Manifest0 left
