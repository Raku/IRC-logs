[06:22] *** CIAvash joined
[07:25] <discord-raku-bot> <briandouglas_71953> Go ahead, I intend to package it as a module.

[07:56] *** CIAvash left
[09:59] *** jaguart joined
[09:59] *** jaguart left
[11:23] *** habere-et-disper joined
[11:48] *** habere-et-disper left
[12:35] *** CIAvash joined
[13:11] *** CIAvash left
[15:04] *** CIAvash joined
[16:06] *** CIAvash left
[16:48] <lucs> Is there a shortcut to declare an enum that holds geometrically increasing values, (1, 2, 4, 8, ...) for example?

[17:04] <lucs> Looking for a shortcut for something like  enum Baz (a => 1, b => 2, c => 4, ...), but during development, I may want to change the order of the letters (for readability/understanding), and if I could avoid having fix the associated number, that would be great.

[18:33] <MasterDuke> m: enum A (("a".."d") Z=> (1, 2, 4 ... *)); say d.value  # lucs

[18:33] <camelia> rakudo-moar 0bdd27db8: OUTPUT: «8␤»

[19:00] <lucs> MasterDuke: Aha, beautiful. Thanks.

[20:36] <discord-raku-bot> <briandouglas_71953> Can I make multiple files under a module? For example can multiple files use unit module MyModule;?  Use case is to have classes in seperate files. So ClassA.raku and ClassB.raku are both in unit moduls MyModule and can be accessed like so MyModule::ClassB.new.

[21:59] <discord-raku-bot> <roguerakudev> @briandouglas_71953 you can do two separate files and  unit class MyModule::ClassA and unit class MyModule::ClassB respectively if you want them referenced like MyModule::ClassA/B

[22:00] <discord-raku-bot> <roguerakudev> you'd want both files to live in a MyModule directory and be named as you said, although the convention for module files is .rakumod rather than just .raku although the latter will work fine

[22:02] <discord-raku-bot> <roguerakudev> I've found that generally one has to declare things in the same way you ultimately want them referenced, so take this for example unit module Foo; class Bar { ... }

[22:02] <discord-raku-bot> <roguerakudev> you'd import that with use Foo::Bar but then use it with just Bar

[22:11] <discord-raku-bot> <briandouglas_71953> Thanks for this. How would I import classes with in the same module. So both ClassA and ClassB are in unit module MyModule. Now I want to use ClassA inside ClassB? Currently if I try to do MyModule::ClassA it isn't found.

[22:12] <discord-raku-bot> <briandouglas_71953> All files are located in the same directory lib.

[22:34] <discord-raku-bot> <briandouglas_71953> Actually I think I've got it. I have a NotFoundException.rakumod with a NotFoundException class. I can just write use NotFoundException; in side the lib and it works...

[22:56] <discord-raku-bot> <briandouglas_71953> Nah, doesn't work. Specifically I can't understand why these two imports are not found:  https://github.com/BrianDouglasIE/MothTrap/blob/main/lib/MothTrap/Container.rakumod#L3-L4

