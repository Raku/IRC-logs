[00:43] *** MasterDuke joined
[03:58] *** MasterDuke left
[05:00] *** lizmat__ joined
[05:03] *** lizmat left
[05:53] *** lizmat joined
[05:57] *** lizmat__ left
[06:53] *** lizmat_ joined
[06:56] *** lizmat left
[08:14] *** dakkar joined
[08:30] *** lizmat_ left
[08:31] *** lizmat joined
[12:46] *** lizmat_ joined
[12:49] *** lizmat left
[12:50] *** lizmat_ left
[12:50] *** lizmat joined
[13:58] *** discord-raku-bot left
[13:59] *** lizmat_ joined
[14:01] *** discord-raku-bot joined
[14:03] *** lizmat left
[16:10] <greenfork> Can I execute a file and start a REPL after that, so that I have all the variables available?

[16:11] <greenfork> I tried --repl-mode=interactive, doesn't seem to work

[16:27] <discord-raku-bot> <antononcube> @greenfork There are/were recently a couple of discussions with similar requests / wants in the main IRC channel.

[16:27] <greenfork> @antononcube thank you!

[16:28] <discord-raku-bot> <antononcube> @greenfork Basically, the conlcusion I got is to have a small Raku module with those variables and import it with require.

[16:29] <discord-raku-bot> <antononcube> BTW, I have a very similar request or wanted feature for the Jupyter kernel -- to have cells that automatically evaluated.

[16:31] <discord-raku-bot> <antononcube> @greenfork Here is a relevant answer by @ugexe: > <ugexe> require WHATEVER:file</Users/nlogan/repos/Foo.rakumod> <$x>; say $x > <ugexe> you can use something like that too which might be better for you since you don't need to add a library path

[16:32] <greenfork> Interesting, thank you!

[16:32] *** dakkar left
[17:32] <lizmat_> greenfork: there's a repl sub since 2022.x I believe

[17:32] *** lizmat_ left
[17:32] *** lizmat joined
[17:32] <lizmat> m: repl

[17:32] <camelia> rakudo-moar c053144ab: OUTPUT: «You may want to `zef install Readline`, `zef install Linenoise`, or `zef install Terminal::LineEditor` or use rlwrap for a line editor␤␤Type 'exit' to leave␤[0] > ===SORRY!=== Error while compiling <tmp>␤Missing infix inside hyper␤at <…»

[17:33] <lizmat> heh

[17:33] <greenfork> lizmat: Oh wow! I didn't know it exists, it is a perfect debugging tool too!

[17:34] <lizmat> yeah, it was intended as such  :-)

[17:34] <lizmat> https://docs.raku.org/type/independent-routines#sub_repl

[17:40] <greenfork> @antononcube ^^^ this is awesome

[20:53] <discord-raku-bot> <antononcube> @greenfork Well, I cannot make that advice by ugexe work for me. How did you apply it?

[21:41] <discord-raku-bot> <.ohnowendigo> m: say (/[\w\d]+/, /[\w\d]*/).map: {"xa5".match($_)}

[21:41] <discord-raku-bot> <Raku eval>  (｢a5｣ ｢｣) 

[21:42] <discord-raku-bot> <.ohnowendigo> Why is the + able to match the a5 while * cannot? Aren't both supposed to be greedy?

[21:45] <discord-raku-bot> <antononcube> Because matching nothing with * is a match.

[21:46] <discord-raku-bot> <antononcube> @.ohnowendigo Try it with the adverb :ex .

[21:47] <discord-raku-bot> <antononcube>  say (/[\w\d]+/, /[\w\d]*/).map: {"xa5".match($_):ex}  # ((｢a5｣) (｢｣ ｢a5｣ ｢｣ ｢｣ ｢｣)) 

[22:03] *** lizmat_ joined
[22:06] *** lizmat left
[22:56] *** lizmat joined
[23:00] *** lizmat_ left
[23:31] *** lizmat_ joined
[23:34] *** lizmat__ joined
[23:35] *** lizmat left
[23:38] *** lizmat_ left
[23:38] *** lizmat joined
[23:42] *** lizmat_ joined
[23:42] *** lizmat__ left
[23:45] *** lizmat__ joined
[23:46] *** lizmat left
[23:48] *** lizmat joined
[23:49] *** lizmat_ left
[23:51] *** lizmat_ joined
[23:52] *** lizmat__ left
[23:55] *** lizmat left
