[00:05] *** librasteve_ left
[05:25] *** kjp left
[05:27] *** kjp joined
[05:36] *** kjp left
[05:37] *** kjp joined
[05:46] *** kjp left
[05:47] *** kjp joined
[05:49] *** kjp left
[05:50] *** kjp joined
[05:50] *** kjp left
[05:51] *** kjp joined
[05:51] *** kjp left
[05:51] *** kjp joined
[08:00] *** jaguart joined
[08:01] *** jaguart left
[08:01] *** jaguart joined
[11:38] <discord-raku-bot> <winfredraj> Hello all

[11:38] <discord-raku-bot> <winfredraj> What does the *% stand for in function arguments??

[11:39] <discord-raku-bot> <winfredraj> *%_ to be exact

[11:40] <discord-raku-bot> <winfredraj> I'm trying to use the from-xml function in   XML::Class and it seems like this argument is also required

[11:42] <discord-raku-bot> <winfredraj> multi method from-xml(XML::Class:U: Str $xml) returns XML::Class multi method from-xml(XML::Class:U: XML::Document:D $xml) returns XML::Class multi method from-xml(XML::Class:U: XML::Element:D $xml) returns XML::Class

[11:42] <discord-raku-bot> <winfredraj> https://cdn.discordapp.com/attachments/768511641758466088/1279768428206493707/Screenshot_2024-09-01-13-41-01-722_com.termux-edit.jpg?ex=66d5a4ba&is=66d4533a&hm=9cd243d95b67e1a5b7a124426bf98aee5a3a99fcdef9207b7b42138c22a20222&

[11:42] <jaguart> the docs are here: https://docs.raku.org/type/Method#index-entry-*%___(extra_named_arguments)

[11:43] <discord-raku-bot> <winfredraj> Thanks jaguart

[11:44] <jaguart> effectively a sig of *%_ means the sub only has optional named args - no positionals

[11:58] <jaguart> looks like you need to pass in a Str, an XML::Document, or an XML::Element and method dispatch will call the appropriate method

[12:04] <discord-raku-bot> <winfredraj> I did pass a string (XML string)

[12:05] <discord-raku-bot> <winfredraj> In fact I passed the same string that was created by the to-xml sub for the class

[12:11] <jaguart> weird - if you `say $xml.^name;` can you confirm the type of the XML String?

[12:30] <discord-raku-bot> <winfredraj> It seems to expect the filename as string

[12:31] <discord-raku-bot> <winfredraj> But that did not help as the parse failed by XML::Grammar.parse

[12:32] <discord-raku-bot> <winfredraj> So rummaging in XML::Grammar in repl, but the parse is not working

[12:33] <discord-raku-bot> <winfredraj> https://cdn.discordapp.com/attachments/768511641758466088/1279781112838619166/Screenshot_2024-09-01-14-32-34-488_com.termux-edit.jpg?ex=66d5b08a&is=66d45f0a&hm=03063c74fb8aa995e82f157bc7288e20be98583b5b1e5ac307bae7028396a963&

[12:33] <discord-raku-bot> <winfredraj> This was created by to-xml sub from the class

[12:39] <discord-raku-bot> <winfredraj> Can't check with LibXML::Class as I am working on Android

[12:40] <jaguart> Haven't used XML::Class - are you doing something like: `my $str = $foo.to-xml(); my $bar = $foo->from-xml($str)` to get a copy of Foo in $bar?

[12:45] <discord-raku-bot> <winfredraj> Ja something like that but saving it in file and reading it

[12:46] <discord-raku-bot> <winfredraj> from-xml($str) seems to expect a filename for $str and not a string with XML

[12:48] <discord-raku-bot> <winfredraj> https://cdn.discordapp.com/attachments/768511641758466088/1279784977365729350/Screenshot_2024-09-01-14-46-49-249_com.termux-edit.jpg?ex=66d5b423&is=66d462a3&hm=3f2585ead8cf4b37cb226ce0d9856cc480582489c30100a9562f680a909f9b74&

[12:49] <discord-raku-bot> <winfredraj> I'll check in Linux with LibXML once I land, in a flight now and don't have a lot of options

[12:51] <jaguart> XML::Document will accept a Str or IO::Path - why don't you just `dd`` the actual input you are sending in

[12:53] <discord-raku-bot> <winfredraj> Let me give it a shot

[12:59] <discord-raku-bot> <winfredraj> I'll get the IO:Path out as the data member in the class, that looks suspect to me

[14:01] *** jgaz joined
[16:23] <greenfork> m: unit sub MAIN (); CATCH { default { .payload.say } }; die "Dead";

[16:23] <camelia> rakudo-moar cd0e6ee60: OUTPUT: «Dead␤  in sub MAIN at <tmp> line 1␤  in block <unit> at <tmp> line 1␤␤»

[16:24] <greenfork> Do you know why I can't use CATCH in unit sub MAIN?

[16:24] <greenfork> Here the output should have been just "Dead"

[16:28] <jaguart> is it because the CATCH / die are not within a block?

[16:28] <jaguart> m: sub MAIN () { CATCH { default { "Oops".say ; } }; die "Dead"; }

[16:28] <camelia> rakudo-moar cd0e6ee60: OUTPUT: «Oops␤»

[16:33] <greenfork> So how do I put it in a block? Or I can't use "unit sub" in this case?

[16:34] <greenfork> Top-level example also works without any blocks

[16:34] <greenfork> m: CATCH { default { "Oops".say ; } }; die "Dead";

[16:34] <camelia> rakudo-moar cd0e6ee60: OUTPUT: «Oops␤»

[16:36] <jaguart> m: unit sub MAIN() { CATCH { default { "Oops".say ; } }; die "Dead"; }

[16:36] <camelia> rakudo-moar cd0e6ee60: OUTPUT: «Oops␤»

[16:37] <jaguart> its inconsistent - but if you just make your sub body a block it seems to do what you want. 

[16:38] <greenfork> Yep, works for me, thank you!

[17:04] *** jgaz left
[18:06] *** jaguart left
[22:00] *** teatime joined
