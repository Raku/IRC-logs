[01:50] *** jgaz left
[05:05] *** sivoais left
[05:05] *** gfldex left
[05:05] *** camelia left
[05:06] *** sivoais joined
[05:06] *** gfldex joined
[05:06] *** camelia joined
[05:06] *** cleo left
[05:06] *** snonux left
[05:06] *** cleo joined
[05:06] *** snonux joined
[06:27] *** Chanakan left
[06:37] *** Chanakan joined
[06:52] <discord-raku-bot> <rcmlz> My next Raku project will be a command line tool that uses the API of „nextcloud forms“ to create/update/download questionaires for measuring learning progress of my classes - I intend to keep the master questions bank in markdown files. Currently I use MS Forms with a lot of copy/paste …

[08:24] <discord-raku-bot> <librasteve> I have used raku for XML mapping for data migration, extracting and collating (contact & address) data from PDFs - to/from Google Sheets, deploy of Wordpress sites to AWS (so auto build of WP + nginx + wp-cli + database) and lately backup and restore of WP sites (since I got to the end of my tether with Updraft), a little bit of lightweight dabbling with LLMs (using Anton's modules) - a lot of this is as

[08:24] <discord-raku-bot> cli helper scripts in my business. I just learned how to build a raku Cro website using markdown as the page content - so that is now high on my list for static sites (and would be v. cool to get that working with GH+netlify). My current focus is to combine HTMX and Cro since I think that they are soulmates.

[08:58] *** alaziz joined
[09:24] *** alaziz left
[11:13] *** MasterDuke left
[11:42] <discord-raku-bot> <antononcube> Well, many advanced Raku programmers use Raku develop Raku. That is both core language development and ecosystem modules. That is why a fair amount of Raku packages / modules can be characterized as “intramural.”

[11:44] <discord-raku-bot> <antononcube> From an applied mathematician or  “data scientist” perspective — or, just mine — there are plenty of functionalities Raku is missing, or if not missing, they not streamlined enough.

[11:49] <discord-raku-bot> <antononcube> I rationale this as “normal” given the Raku’s development and adoption stage — it attracts people mostly interested in programming and programming technologies as such, not necessarily in “advanced” applications.

[11:53] <discord-raku-bot> <antononcube> In case you wonder — I do not consider “Cro”, “Humming-bird”, or “Jupyter::Kernel” advanced applications. They are infrastructural, and their streamlined functionalities are expected (and taken for granted) by engineers, researchers, or data scientists and analysts.

[11:55] <discord-raku-bot> <antononcube> That said, of course, “Jupyter::Chatbook” is absolutely advanced and can be absolutely a “gateway drug” to Raku!

[12:03] <discord-raku-bot> <antononcube> To be more concrete on my target Raku applications here are few movies: - “Exploratory data analysis with Raku”, (23 min), https://www.youtube.com/watch?v=YCnjMVSfT8w  - “Geographics data in Raku demo”, (37 min), https://www.youtube.com/watch?v=Rkk_MeqLj_k - “Graph demo in Raku teaser”, (5 min), https://www.youtube.com/watch?v=0uJl9q7jIf8

[12:13] <discord-raku-bot> <librasteve> @antononcube I agree with most of your points, however as an exception, I would say that Cro is advanced (over other web frameworks) in its deep use of raku concurrency and communications primitives and the examples around https://cro.raku.org/docs/reference/cro-http-middleware

[12:16] <discord-raku-bot> <antononcube> @librasteve Yeah, sure I exagerated. But after using Mathematica and R (RStudio's R ecosystem, actually) all these advanced features of Raku

[12:20] <discord-raku-bot> <antononcube> This is not just "my opinion" -- some of the "old" scientists and statisticians (say, in USA healthcare or governmental institutions, like, EPA) might find the functionalities of "Cro" (and RStudio's "shinyapps") advanced, but anyone "young" who uses Mathematica, Python, or R just expect those "kind of things" to be present and work very well.

[12:22] <discord-raku-bot> <antononcube> For exampl, RStudio's "shiny" and "flexdashboard" have been creating interactinve web interfaces from Markdown files since more 8+ years ago.

[13:07] *** jgaz joined
[15:02] <discord-raku-bot> <librasteve> errr - well I defer to your knowledge on shiny and so on ... my point is rather deeper. here is the entire source code of the cro transform role... use Cro::Message;  role Cro::Transform {     method consumes() { ... }     method produces() { ... }     method transformer(Supply:D $pipeline) returns Supply:D { ... } } 

[15:12] <discord-raku-bot> <librasteve> as you can see this is leveraging the raku language Supply type ... so imo, this illustrates that raku concurrency is designed to support HTTP pipeline style of development - which makes decomposing a web server across a distributed set of processors for example a natural built in language feature and also means that any raku module that can consume / emit a Supply can be easily adapted into a Cro

[15:12] <discord-raku-bot> orchestrated web service ... please can you point to where the R language has such language level Supply concurrency capabilities (with taps, concurrency, end to end laziness, etc) - but honestly I think that the R parallel package whcih is not a first class language feature is focused on map reduce or vector style disaggregation of analytic algorithms, not on scalable web apps

[15:13] <discord-raku-bot> <librasteve> and of course, Cro was written by the guy who wrote much of the raku concurrency features - so not surprising that there is such a good fit for the distributed web framework application

[15:14] <discord-raku-bot> <librasteve> [PS. while I am impressed with the ease with which Cro can handle markdown authored static sites, I am entirely not suprised that this has been done elsewhere ;-) ]

[16:11] <discord-raku-bot> <antononcube> @librasteve  "I defer to your knowledge on shiny and so on [...]" -- Sure, but let me try to "convince you" or be more transparent. Please go to this link/page/interface and click on "Source Code" button placed top-right. You will see the RMarkdown code used to make that app. https://antononcube.shinyapps.io/DSL-evaluations/

[16:13] <discord-raku-bot> <antononcube> Yeah, R is parallelizing over loops (CRAN packages) and on vector computation level (Microsoft)

[16:16] <discord-raku-bot> <antononcube> R is very arcane (and "confused") language "from statisticians to statisticians." So, certain performance and nice programming model considerations are simply not it. That is elevated by RStudio's / Posit's saturation of the R-ecosystem with packages for more convenient use and some of them a very performant.

[16:19] <discord-raku-bot> <antononcube> Now one of the founders of RStudio / Posit is an established "web programmer" and strongly suspect that some the features of "Cro" you mentioned are available in the corresponding Posit products. And am not sure how elegant those are language-wise, but they are simple to wizzard and/or configure in "shinyapps.io".

[16:32] <discord-raku-bot> <librasteve> tx!

[20:03] *** swaggboi left
[20:08] *** swaggboi joined
[20:47] *** swaggboi left
[20:56] *** swaggboi joined
[21:05] *** swaggboi left
[21:17] *** swaggboi joined
[21:21] *** jgaz left
[21:25] *** swaggboi left
[21:30] *** swaggboi joined
[23:13] *** MasterDuke joined
