[01:01] *** Manifest0 left
[01:23] *** librasteve_ left
[08:27] *** Manifest0 joined
[10:22] *** habere-et-disper joined
[10:22] <habere-et-disper> m: 2 == 999.say

[10:22] <camelia> rakudo-moar 73e1c7162: OUTPUT: «WARNINGS for <tmp>:␤999␤Useless use of "==" in expression "2 == 999.say" in sink context (line 1)␤»

[10:22] <habere-et-disper> m: say 2 == 999.say

[10:22] <camelia> rakudo-moar 73e1c7162: OUTPUT: «999␤False␤»

[10:23] <habere-et-disper> m: say( 2 == 999.say )

[10:23] <camelia> rakudo-moar 73e1c7162: OUTPUT: «999␤False␤»

[10:23] <lizmat> m: say 2 == True

[10:23] <camelia> rakudo-moar 73e1c7162: OUTPUT: «False␤»

[10:24] <lizmat> m: say 1 == True

[10:24] <camelia> rakudo-moar 73e1c7162: OUTPUT: «True␤»

[10:24] <lizmat> m: say 1 == 999.say

[10:24] <camelia> rakudo-moar 73e1c7162: OUTPUT: «999␤True␤»

[10:28] <habere-et-disper> So == is operating in boolean and not numeric context if one of the operands is a string ?

[10:29] <lizmat> no, == coerces to numeric

[10:29] <lizmat> m: say +True

[10:29] <camelia> rakudo-moar 73e1c7162: OUTPUT: «1␤»

[10:29] <lizmat> and say() returns True

[10:29] <lizmat> m: say say "foo"

[10:29] <camelia> rakudo-moar 73e1c7162: OUTPUT: «foo␤True␤»

[10:40] <habere-et-disper> Can we say cast instead of coerce ? Are they roughly equivalent ?

[10:46] <habere-et-disper> I got confused in the REPL as "2 == 999.say" gives 999 without False at the end. As does "?( 2 == 999.say )".

[10:55] <lizmat> the reason the REPL doesn't say False, is because the statement already output something: in that case the REPL does *NOT* show the value of the statemennt

[10:56] <habere-et-disper> (y)

[11:05] <lizmat> re cast vs coerce: in the case of casting, the actual value doesn't change, does it?  You e.g. cast a 16bit int into a 32bit int, but not to a string, right?

[11:10] <habere-et-disper> Hmm... I've not made that distinction -- interesting.

[11:39] *** habere-et-disper left
[14:35] <Tirifto> m: say 6 ~~ (3 > 2); given 6 { when (3 > 2) { say 1 }; default { say 0 }; }

[14:35] <camelia> rakudo-moar aa02c8b89: OUTPUT: «True␤0␤»

[14:40] <Tirifto> Does someone know why ‘given 6 { when (3 > 2) … }’ does not amount to ‘6 ~~ (3 > 2)’, or perhaps rather ‘6 ~~ True’?

[14:40] <discord-raku-bot> <antononcube> Is there an easier or shorter way to convert an list of two numbers @pos into a Range object than this one:  Range.new(|@pos) 

[14:41] <ab5tract> you could make a local sub called range (or shorter) that does this

[14:42] <ab5tract> but nothing built-in AFAIK

[14:42] <discord-raku-bot> <antononcube> 👍

[14:44] <Tirifto> I suppose @pos[0]..@pos[1] is not really shorter or easier. xP

[15:08] <discord-raku-bot> <antononcube> @Trifto No, it is not. And that is the answer ChatGPT gave me...

[15:37] *** habere-et-disper joined
[15:44] <habere-et-disper> Maybe this could work for antononcube ?

[15:44] <habere-et-disper> m: my @pos=[2,9]; @pos.minmax.WHICH.say

[15:44] <camelia> rakudo-moar aa02c8b89: OUTPUT: «Range|2..9␤»

[15:47] <ab5tract> ah, nice! I had forgotten that minmax makes a range

[15:49] <discord-raku-bot> <antononcube> Hmm.. more precisely "minmax gives a range" ?

[15:50] <discord-raku-bot> <antononcube> @habere-et-disper Thanks -- works nicely!

[15:50] <habere-et-disper> :]

[15:52] <discord-raku-bot> <antononcube> @habere-et-disper Did you ever use "Text::CodeProcessing" ?

[15:53] <Tirifto> (The range will always start with the smaller coordinate, though.)

[15:54] <discord-raku-bot> <antononcube> Good point. But my use case (so far, today) is getting sub-strings from indices.

[16:01] <habere-et-disper> Can I message from here to a specific user behind discord-raku-bot ?

[16:01] <habere-et-disper> If so, pray tell the invocation !

[16:09] <discord-raku-bot> <antononcube> @habere-et-disper I think so -- you have to mention their handle prefixed with '@'.

[16:10] <discord-raku-bot> <antononcube> @habere-et-disper Alternatively, just get a Discord account.

[16:13] <habere-et-disper> @antononcube Hi antononcube. Do only you see this ? I don't want to spam the channel.

[16:15] <discord-raku-bot> <antononcube> Hm... I think the whole channel sees it.

[16:16] <discord-raku-bot> <antononcube> I defiintely see it, though! 🙂

[16:18] <Tirifto> Or invite them over to IRC. ;P

[16:22] <discord-raku-bot> <antononcube> @Trifto Are you saying that if log in to IRC someone can message me privately. (If yes, then I will do it.)

[16:26] <Tirifto> @antoncube, I think that if you’re connected to the IRC server directly, people can send you a private message (using the command “/msg $nickname $message”).

[16:29] <Tirifto> (And many clients will probably let you start a conversation with a user through the context menu.)

[16:30] <Tirifto> @antononcube ↑ Sorry, got your name wrong the first time.

[16:34] *** DarthGandalf left
[16:35] <discord-raku-bot> <antononcube> Ok, thanks!

[18:24] *** MasterDuke joined
[19:16] *** librasteve_ joined
[19:29] *** DarthGandalf joined
[20:00] *** habere-et-disper left
[20:01] <ab5tract> antononcube: 'Hmm.. more precisely "minmax gives a range" ?' ... I believe true precision lies in 'minmax constructs a Range'

[20:04] <ab5tract> And yes, private messaging is a core feature of IRC. That's how we would interact with pirate bots to get into queues for transferring DiVX files 

[20:04] <ab5tract> *DivX

[20:08] <ab5tract> (IRC also provides several options for initiating direct transfers between users, which is how the bots transferred thoe files)

[21:57] *** Manifest0 left
[23:58] *** librasteve_ left
