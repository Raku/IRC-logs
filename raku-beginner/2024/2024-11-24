[01:53] *** habere-et-disper left
[01:57] *** Manifest0 left
[03:30] *** librasteve_ left
[04:44] *** deadmarshal_ left
[05:49] *** deadmarshal_ joined
[11:49] *** Manifest0 joined
[12:30] *** habere-et-disper joined
[12:36] <habere-et-disper> What's the logic behind array indexing appearing to autovivify an array, but hash indexing doesn't ?

[12:36] <habere-et-disper> Contrast

[12:36] <habere-et-disper> m: say ('foo' => 42, 'bar' => 24).[ 0 ]

[12:36] <camelia> rakudo-moar 6c088c8cf: OUTPUT: «foo => 42␤»

[12:36] <habere-et-disper> with

[12:36] <habere-et-disper> m: say ('foo' => 42, 'bar' => 24).{ 'foo' }

[12:36] <camelia> rakudo-moar 6c088c8cf: OUTPUT: «Type List does not support associative indexing.␤  in block <unit> at <tmp> line 1␤␤»

[12:36] <habere-et-disper> I know `('foo' => 42, 'bar' => 24).Hash{ 'foo' } works.

[12:44] <lizmat> ('foo' => 42, 'bar' => 24) is a List of Pairs

[12:44] <lizmat> *not* a hash

[12:44] <lizmat> dd %('foo' => 42, 'bar' => 24)<foo>

[12:44] <lizmat> m: dd %('foo' => 42, 'bar' => 24)<foo>

[12:44] <camelia> rakudo-moar 6c088c8cf: OUTPUT: «42␤»

[12:45] <lizmat> %() creates a hash

[12:46] <habere-et-disper> It's not an array -- yes -- but you can array index it -- why does hash indexing not do the same magic ?

[12:52] <ab5tract> Because List and Hash are very different implementations.. in JavaScript they are (or at least were) the same (arrays were just numerically keyed hashes)

[12:52] <ab5tract> But that’s never been the case in Raku

[13:07] <habere-et-disper> Thanks ab5tract

[13:08] <ab5tract> Now, theoretically we could do something like define an AT-KEY in List that calls self.Hash.AT-KEY

[13:09] <ab5tract> but that's probably a lot more complicated than it sounds at first

[13:10] <ab5tract> I believe that RakuAST and/or macros will make implementing this in user space relatively trivial

[15:12] *** habere-et-disper left
[18:00] *** librasteve_ joined
[21:42] <tbrowder> habere-et-disper: if you are interested in the PDF version of a calendar let me know. i have paused active development at the momoent

[21:44] <tbrowder> *moment, but my wife loves my old PostScript version so i will be working on it again soon.

