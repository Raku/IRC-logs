[01:23] *** MasterDuke joined
[05:45] *** MasterDuke left
[12:21] <discord-raku-bot> <a12l> Someone here that have done the Exercism exercises for Raku? I'm looking at the Bob exercise there I should define the role Bob, but I don't understand how the tests want me to write the hey method.

[12:22] <discord-raku-bot> <a12l> And no explanation in the instructions

[12:59] <discord-raku-bot> <antononcube> Link(s)>

[14:05] <discord-raku-bot> <wambash> The following satisfies some tests > unit role Bob; > multi method hey  (Str $ : )  { 'Sure.' };`

[15:11] <discord-raku-bot> <a12l> Thanks! Didn't realise that I should use multiple dispatch on that method.

[17:41] <discord-raku-bot> <rcmlz> https://exercism.org/tracks/raku/exercises/bob

[17:43] <discord-raku-bot> <rcmlz> https://github.com/exercism/raku/tree/main/exercises/practice/bob

[18:41] <discord-raku-bot> <a12l> Hmm, that doesn't seem to work for me. I still have 25 failing tests after adding it  raku unit role Bob;  multi method hey () {     return self; }  multi method hey  (Str $ : )  { 'Sure.' }; 

[18:43] <discord-raku-bot> <a12l> This is my initial huggly solution to the exercise, and I still have 25 failing tests raku unit role Bob;  multi method hey () {     return self; }  multi method hey (Str $say) {     if $say eq $say.uc && $say.index($say.chars - 1) eq "?" {     } elsif $say eq $say.uc {         return "Whoa, chill out!";     } elsif $say eq "" {         return "Fine. Be that way!";     } else {         return "Whatever.";     }

[18:43] <discord-raku-bot> }  #`[ multi method hey  (Str $ : )  { 'Sure.' }; ] 

[18:45] <discord-raku-bot> <a12l> Thank you! Didn't know they had solutions hidden in the git repo. I guess that you only see it if you are reviewing someones submission?  https://github.com/exercism/raku/blob/main/exercises/practice/bob/.meta/solutions/lib/Bob.rakumod

[18:46] <discord-raku-bot> <a12l> That solution seems to be a bit advances for an third exercise in the language

[21:02] <discord-raku-bot> <wambash> > $say.index($say.chars - 1) index  vs substr https://docs.raku.org/routine/substr

[22:20] <ab5tract> That does seem a bit advanced for a third question

[22:21] <ab5tract> Feels like you should be introduced to regex character classes and given/when beforehand

[22:22] <ab5tract> Or subsets/where clauses and multis so that you can move the given/when logic out into multi method dispatch

