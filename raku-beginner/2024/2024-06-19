[00:53] *** teatwo left
[00:54] *** teatwo joined
[01:47] *** teatwo left
[01:47] *** teatwo joined
[05:38] *** discord-raku-bot left
[05:39] *** discord-raku-bot joined
[08:07] *** dakkar joined
[10:17] *** Chanakan left
[13:05] *** Chanakan joined
[13:53] <discord-raku-bot> <librasteve> @pelevesque - sorry for jacking up the detail level ... next time we should find somewhere more suitable for this kind of discussion

[13:53] <discord-raku-bot> <librasteve> and thanks for a thought provoking question!

[14:12] *** lizmat left
[14:15] *** lizmat joined
[14:40] <discord-raku-bot> <librasteve> @gfldex I really like 2 of your last 3 answers (I think finding a Whatever in the wild would be a head scratcher tho') ... based on the fair point that @pelevesque made, I will raise a document issue to include one of these examples.

[14:41] <discord-raku-bot> <librasteve> here goes ... https://github.com/Raku/doc/issues/4493 ... feel free to improve

[16:34] *** dakkar left
[17:23] <discord-raku-bot> <pelevesque> @pelevesque Thanks all.

[17:31] <discord-raku-bot> <pelevesque> @librasteve: I don't get:   constant NaA = Array.new; # Not an Array

[17:55] <discord-raku-bot> <librasteve> Yes - that's right. The constant declarator binds a name to an object. So, in the first case, we get a new Array and bind it to NaA. The key to the mystery is that NaA is a particular Array (ie. it's the Array stored at a particular memory location) which can be checked by going NaA.WHICH...

[17:55] <discord-raku-bot> <librasteve> m: constant NaA = Array.new; say NaA.WHICH;

[17:55] <discord-raku-bot> <Raku eval>  Array|5299052779024 

[18:00] <discord-raku-bot> <librasteve> So, now when we test with =:= (the 'Container Identity Comparison Operator)' https://docs.raku.org/language/operators#infix_=:=, we are checking if the thing inside the sub body is the identical same Array as the default Array which we have named NaA and not any other Array - even an Empty one - that was passed in as an argument. [That's why I loke to hang out with the folks in the raku community ... they

[18:00] <discord-raku-bot> are soooo smart!]

[18:17] <discord-raku-bot> <librasteve> oh, and using an Array.new (or List.new) for this means that it is the right type if a check is done later

[19:33] <discord-raku-bot> <scullucs> Cool solution. Maybe the name "NaA" is a bit misleading, I'd go for something like "DfltA", YMMV.

[19:40] <discord-raku-bot> <pelevesque> Ah, ya, really nice. I agree with @lucs that NaA and NaH as names are a big misleading.  Not sure what DfltA is though.

[19:41] <discord-raku-bot> <pelevesque> Maybe?   constant refA = Array.new # reference Array constant refH = Hash.new # reference Hash 

[19:42] <discord-raku-bot> <librasteve> @pelevesque happy to ping pong ideas here on Discord - don't forget to add your thoughts to the docs issue I opened also

[19:43] <discord-raku-bot> <scullucs> (Maybe I should have spelled out "DefaultA".)

[19:43] <discord-raku-bot> <pelevesque> Ok, I'll think about it more and might add a comment in the docs on github if I come up with a stronger idea.

[19:45] <discord-raku-bot> <librasteve> btw I was thinking: constant NaA = []; # Not an Array constant NaH = {}; # Not an Hash 

[19:45] <discord-raku-bot> <pelevesque> maybe dummyA?

[19:46] <discord-raku-bot> <pelevesque> The problem I have with NaA is that you are assigning an array to it... It makes my tiny brain go ouch. Like constant NaN = 42; I see what you want to do though.

[19:46] <discord-raku-bot> <librasteve> good point

[19:51] <discord-raku-bot> <pelevesque> Your solution is uber elegant though. I really like it.

[19:51] <discord-raku-bot> <pelevesque> Crips and clean. No fluff.

[19:51] <discord-raku-bot> <librasteve> (kudos to @gfldex , not me)

[19:52] <discord-raku-bot> <pelevesque> Electronic spiritual karma point dispatched to @gfldex. Thanks!

[20:08] <discord-raku-bot> <librasteve> how about:  constant ArrayAt = []; # a specific Array constant HashAt = {};  # a specific Hash 

[20:08] <discord-raku-bot> <librasteve> https://docs.raku.org/type/ObjAt

[21:01] <discord-raku-bot> <pelevesque> Much better. Formally correct.

[21:01] <discord-raku-bot> <librasteve> I have edited my docs issue accordingly

[21:02] <discord-raku-bot> <pelevesque> Thanks for doing all this great work.

[22:44] *** teatwo left
[22:44] *** teatwo joined
[23:58] *** tea3po joined
