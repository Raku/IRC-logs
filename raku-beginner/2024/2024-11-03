[01:26] *** human-blip joined
[01:44] *** Manifest0 left
[02:19] <ab5tract>  m: my $x=9; my $y=10; say ($x cmp $y ~~ Same|Less) ?? "ordered" !! "unordered";

[02:19] <camelia> rakudo-moar ba526e30d: OUTPUT: «ordered␤»

[02:19] <ab5tract> renormalist: ^^

[02:20] <ab5tract> == is for numeric operations, but ~~ (smartmatch) does what you mean here

[02:21] <ab5tract> m: my $x=10; my $y=10; say ($x cmp $y ~~ Same|Less) ?? "ordered" !! "unordered";

[02:21] <camelia> rakudo-moar ba526e30d: OUTPUT: «ordered␤»

[02:21] <ab5tract> m: my $x=11; my $y=10; say ($x cmp $y ~~ Same|Less) ?? "ordered" !! "unordered";

[02:21] <camelia> rakudo-moar ba526e30d: OUTPUT: «unordered␤»

[02:25] <ab5tract> Regarding the last test case you linked to, I think ‘is’ cascades through a variety of equality check options, though I would have to check the source to be sure

[02:25] <ab5tract> Switching to ok and smartmatch works fine though

[02:25] <ab5tract> m: use Test; ok [Nil] ~~ [Nil], “no warnings allowed”

[02:25] <camelia> rakudo-moar ba526e30d: OUTPUT: «ok 1 - no warnings allowed␤»

[02:26] <ab5tract> Hope it helps!

[02:35] <renormalist> ab5tract: yes, it helps, thanks. For some reason I was staring only at the module, not the test is(). Switching to ok/~~. Thanks.

[02:35] <ab5tract> My pleasure!

[02:36] <ab5tract> Nice idea with the type junctions btw

[02:40] <ab5tract> You can also put them into a subset. Maybe not really useful in this case but if you ever end up with more junction candidates it might come in handy

[02:40] <ab5tract> m: subset LessOrEqual where Same|Less; say (9 cmp 10 ~~ LessOrEqual) ?? "ordered" !! "unordered";

[02:40] <camelia> rakudo-moar ba526e30d: OUTPUT: «ordered␤»

[02:42] <renormalist> m: my $x="9"; my $y="10"; say ($x cmp $y ~~ Same|More) ?? "ordered" !! "unordered";

[02:42] <camelia> rakudo-moar ba526e30d: OUTPUT: «ordered␤»

[02:43] <renormalist> m: my $x; my $y="10"; say ($x cmp $y ~~ Same|More) ?? "ordered" !! "unordered";

[02:43] <camelia> rakudo-moar ba526e30d: OUTPUT: «Use of uninitialized value $x of type Any in string context.␤Methods .^name, .raku, .gist, or .say can be used to stringify it to something meaningful.␤unordered␤  in block <unit> at <tmp> line 1␤»

[02:43] <renormalist> though this uninitialized warning - can ~~ also handle that without warning?

[02:45] <renormalist> I think it does everything as long as there is a value and therefore a type. Having nothing does the right thing, not sure why it insists on the warning.

[02:48] <renormalist> (Ok, the warning is important as it does NOT do the right thing.)

[02:51] <renormalist> I guess I need to decide the semantics. Like here use a copy $xcopy and //= assign it to $y.

[02:52] <renormalist> m: my $x; my $y="10"; my $xcopy = $x; $xcopy//=$y; say ($xcopy cmp $y ~~ Same|More) ?? "ordered" !! "unordered";

[02:52] <camelia> rakudo-moar ba526e30d: OUTPUT: «ordered␤»

[02:53] <ab5tract> m: my $x; my $y="10"; say (($x // “0”) cmp $y ~~ Same|More) ?? "ordered" !! "unordered";

[02:53] <camelia> rakudo-moar ba526e30d: OUTPUT: «unordered␤»

[02:54] <renormalist> (m: my $x; my $y=10; say (($x // “0”) cmp $y ~~ Same|More) ?? "ordered" !! "unordered";

[02:54] <renormalist> m: my $x; my $y=10; say (($x // “0”) cmp $y ~~ Same|More) ?? "ordered" !! "unordered";

[02:54] <camelia> rakudo-moar ba526e30d: OUTPUT: «unordered␤»

[02:55] <renormalist> m: my $x; my $y=10; say (($x // 0) cmp $y ~~ Same|More) ?? "ordered" !! "unordered";

[02:55] <camelia> rakudo-moar ba526e30d: OUTPUT: «unordered␤»

[02:55] <renormalist> hm

[02:57] <ab5tract> It makes sense, no? The condition is false, so we get “unordered”

[02:57] <ab5tract> m: my $x //= my $y="10"; say ($x cmp $y ~~ Same|More) ?? "ordered" !! "unordered";

[02:57] <camelia> rakudo-moar ba526e30d: OUTPUT: «ordered␤»

[02:58] <renormalist> yeah, I'm probably confusing things while also looking at my actual sort module code

[02:58] <ab5tract> Gotcha

[02:59] <renormalist> Ok, anyway, I think I got it. Will get some sleep now. Thanks.

[02:59] <ab5tract> I’m heading to sleep as well. Till next time!

[02:59] <renormalist> good night

[04:34] *** human-blip left
[04:48] *** stanrifkin_ joined
[04:51] *** stanrifkin left
[09:35] *** lizmat_ joined
[09:38] *** lizmat left
[09:42] *** lizmat_ left
[09:42] *** lizmat joined
[11:29] *** Manifest0 joined
[14:33] *** deadmarshal_ left
[14:54] *** stanrifkin_ left
[16:20] *** stanrifkin joined
[17:02] *** deadmarshal_ joined
[17:21] *** MasterDuke left
[18:09] *** swaggboi left
[18:23] *** swaggboi joined
[18:30] *** swaggboi left
[18:44] *** swaggboi joined
[22:20] *** stanrifkin left
