[00:23] *** guifa_ joined
[00:26] *** guifa left
[01:27] <tonyo> great, can you upload whatever is in sdist somewhere so i can inspect locally?

[01:45] <discord-raku-bot> <antononcube> @tonyo Ok, let me see / think where.

[03:35] <tonyo> you can email to me at the email i have listed on here https://github.com/tony-o/

[09:12] *** dakkar joined
[12:08] *** CIAvash joined
[13:37] <tbrowder__> antononcube: have you considered contributing bulgarian lang for module Date::Names?

[13:56] <discord-raku-bot> <antononcube> @tbrowder I browsed that and related modules of your on Monday... Yeah, I will see what I can do.

[14:10] <discord-raku-bot> <antononcube> @tbrowder BTW, I have done similar locations for Bulgarian, English, Portuguese, and Russian. For example, https://github.com/antononcube/Raku-DSL-Shared/blob/master/lib/DSL/Shared/Roles/Portuguese/TimeIntervalSpeechParts.rakumod

[14:14] <tbrowder__> ah, looks like data are there--maybe use llm magic to populate my contstructs??

[14:16] *** hudo joined
[14:16] *** jgaz joined
[14:24] <discord-raku-bot> <antononcube> Haha -- I will most likely do it by hand. But it is an interesting use case for LLM utilization.

[14:25] <discord-raku-bot> <antononcube> Most likely, actually, LLMs can be applied directly from your xx.rakumod files and produce the corresponding ones for multiple languages.

[14:28] *** habere-et-disper joined
[14:29] <habere-et-disper> m: say 64 ** ⅓

[14:29] <camelia> rakudo-moar d4468a417: OUTPUT: «3.9999999999999996␤»

[14:35] *** habere-et-disper left
[14:39] *** CIAvash left
[14:57] <discord-raku-bot> <antononcube> @habere-et-disper Yeah, nice.

[15:05] <discord-raku-bot> <librasteve> m: '(64 * ⅓).nude.join("/").say'

[15:05] <discord-raku-bot> <Raku eval>  WARNINGS for /home/glot/main.raku: Useless use of constant string "(64 * ⅓).nude.join(\"/\").say" in sink context (line 1) 

[15:06] <discord-raku-bot> <librasteve> m: (64 * ⅓).nude.join("/").say

[15:06] <discord-raku-bot> <Raku eval>  64/3 

[15:07] <discord-raku-bot> <librasteve> (doesn't work for power '**' operator of course since (cube) roots produce irrational numbers)

[16:06] *** habere-et-disper joined
[16:11] *** habere-et-disper left
[16:20] <tbrowder__>  antoncube: does yr lang data include rules for handling date names like abbreviation, capitalisztion, use of periods, etc.? if so i can use yr module to proceed on my own.

[16:20] <tbrowder__> antononcube: ^^^

[16:22] <discord-raku-bot> <antononcube> @tbrowder Yes, at least to a point. Please, look at these tests: https://github.com/antononcube/Raku-DSL-Shared/blob/master/t/Time-interval-specs-parsing.rakutest

[16:25] <discord-raku-bot> <antononcube> The grammar itself should be more capable that just those tests. Also, because of time interval parsing I made "DateTime::Grammar" (which is a refactored version "DateTime::Parse".)

[16:44] <tbrowder__> ok, btw, thnx for reminder of eric raymond's rules. i also try to heed Dr Donald Knuth's rules

[16:46] <tbrowder__> i think i need the hand crafter version of the language since i'm trying for precise output. i see in yr methods words ro that effect.

[16:47] <tbrowder__> s/crafter/crafted/ 

[16:47] <tbrowder__> s/ro/to/

[16:52] <tbrowder__> actually i probably could get more language translations by (1) showing a template table for requirement and (2) provide a raku executable asking for specific user input.

[16:52] <tbrowder__> on my TODO list

[16:54] <discord-raku-bot> <antononcube> I can make LLM translations tonight. It should not be that hard to set up to generate files for multiple languages using as examples one or two of already existing files. (In "Date::Names".)

[17:52] *** dakkar left
[17:56] <discord-raku-bot> <librasteve> use Rat::Power; say 64 ** ⅔; #16

[18:14] <discord-raku-bot> <librasteve> ^^ announcing the new Rat::Power raku module

[18:17] <lizmat> m: say 64 ** ⅔;

[18:17] <camelia> rakudo-moar d4468a417: OUTPUT: «15.999999999999998␤»

[18:18] <lizmat> m: dd 64 ** ⅔

[18:18] <camelia> rakudo-moar d4468a417: OUTPUT: «15.999999999999998e0␤»

[18:36] <discord-raku-bot> <librasteve> lizmat: try zef install Rat::Power

[18:37] <discord-raku-bot> <librasteve> ;-)

[18:39] <discord-raku-bot> <librasteve> extracting a root will almost always make an irrational number ... this module is to catch the rare exceptions

[18:40] <lizmat> looks like the META is missing a URL to the repo

[18:40] <lizmat> ah, you just fixed that ?

[18:40] <discord-raku-bot> <librasteve> yep

[18:40] <discord-raku-bot> <librasteve> gettimg used to App::Mi6 finally

[18:42] <discord-raku-bot> <librasteve> i'm toying with the idea to make a Rat::Pretty module to format Rats as unicode fractions where ppossible .... or is that work in hand already?

[18:43] <lizmat> that already is in RakuAST

[18:43] <lizmat> m: Q|dd 22/7|.AST.EVAL

[18:43] <camelia> rakudo-moar d4468a417: OUTPUT: «<22/7>␤»

[18:43] <lizmat> hmmm

[18:44] <lizmat> m: Q|use v6.*; dd 22/7|.AST.EVAL

[18:44] <camelia> rakudo-moar d4468a417: OUTPUT: «<22/7>␤»

[18:44] <discord-raku-bot> <librasteve> ah the "demo effect"

[18:44] <lizmat> yeah  :-(

[18:44] <lizmat> m: Q|use v6.*; dd +22/7|.AST.EVAL

[18:44] <camelia> rakudo-moar d4468a417: OUTPUT: «<22/7>␤»

[18:44] <lizmat> m: Q|use v6.*; dd +(22/7)|.AST.EVAL

[18:44] <camelia> rakudo-moar d4468a417: OUTPUT: «<22/7>␤»

[18:44] <lizmat> meh

[18:45] <discord-raku-bot> <librasteve> is i tin preview?

[18:47] <lizmat> f5e9b2dcadd013050c9

[18:47] <lizmat> https://github.com/rakudo/rakudo/commit/f5e9b2dcad

[18:50] <lizmat> ah, I see what the problem is

[18:50] <lizmat> cannot show it in camelia

[18:50] <lizmat> % RAKUDO_RAKUAST=1 raku -e 'dd 22/3'

[18:50] <lizmat> 7¹/₃

[18:54] <discord-raku-bot> <librasteve> aha!

[18:54] <discord-raku-bot> <librasteve> very nice

[19:58] <tbrowder__> antononcube: in my grandson’s words: that would be awesome! thnx

[20:37] <discord-raku-bot> <antononcube> @tbrowder Ok, thanks for the motivation.

