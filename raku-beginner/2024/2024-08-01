[02:07] *** MasterDuke joined
[05:52] *** kjp left
[05:54] *** kjp joined
[06:02] *** kjp left
[06:02] *** kjp joined
[06:39] *** Tirifto left
[06:40] *** Tirifto joined
[08:15] *** dakkar joined
[11:47] *** az45 joined
[12:01] *** greenfork left
[12:01] *** KOTP left
[12:02] *** greenfork joined
[12:02] *** KOTP joined
[12:07] <az45> Rakudo 2024.07 on NetBSD 10 Stable; feedback, the "./bin/rstar install" method fails, temporary log says "failed to load library 'dynext/libperl6_ops_moar.so'", the git checkout tags/2024.07 "perl Configure.pl ...; make ; make install" method succeeds.

[12:10] <lizmat> should probably make an issue for that in https://github.com/rakudo/star

[12:20] <az45> can someone with github.com logon issue a notice, thanks in advance

[12:24] *** jgaz left
[12:28] <lizmat> az45: could you create a gist somewhere with the "rstar sysinfo" and "RSTAR_DEBUG=1 rstar install" logs?

[12:33] <discord-raku-bot> <antononcube> @lizmat It seems @az45 does not have GitHub or not want / cannot use it.

[12:34] <lizmat> "gist somewhere" is not Github only  :-)

[12:35] <az45> ./rstar sysinfo ␤ fatal: not in a git directory ␤ make            make ␤ version         10.0_stable ␤ term            dumb ␤ key             netbsd os            ␤  netbsd arch            amd64

[12:37] <discord-raku-bot> <antononcube> Fine! Here is my revised comment: > It seems that @az45 wants to "outsource" the reporting effort (for whatever reasons.)

[12:37] <discord-raku-bot> <antononcube> @az45 Nice catch, BTW.

[12:40] <discord-raku-bot> <antononcube> Since we are on this topic -- and sorry if this question has been asked before -- why we have (proclaimed) distributions of 2024.07 on GitHub, but we do not see the corresponding 2024.07 distributions for Linux, macOS, Windows in rakudo.org ?

[12:52] <az45> 769 lines listed at https://pastebin.com/EEJuTE5d

[12:52] <lizmat> good question, maybe jdv forgot a step?

[12:52] <lizmat> or patrickb ?

[12:56] <lizmat> az45: thanks, https://github.com/rakudo/star/issues/202

[13:05] <az45> succcessful "perl Configure.pl ..." run looks as follows in 824 lines https://pastebin.com/GcLfxLGH

[13:09] <az45> thanks and bye

[13:09] *** az45 left
[13:29] *** jgaz joined
[13:43] *** alaziz joined
[13:44] <alaziz> hi guys, is it a good place to ask about code errors?

[13:46] <sjn> yes

[13:46] <lizmat> well, if they're in Raku  :-)

[13:47] <sjn> what, no legal code errors? how about dress code errors? o_O

[13:47] * sjn is deeply, deeply, _deeply_ disappointed

[13:48] <alaziz> So, I have the following code using NativeCall

[13:48] <alaziz> use NativeCall;

[13:48] <alaziz> constant LIBPATH = "$*CWD/smath";

[13:48] <alaziz> class SVector is repr('CStruct'){

[13:48] <alaziz>     has CArray[int32] $.data is rw;

[13:48] <alaziz>     has size_t $.nelems;

[13:48] <alaziz>     our sub vector_zeros(size_t) returns SVector is native(LIBPATH){*}

[13:48] <alaziz>     our sub vector_sum(SVector, SVector) returns SVector is native(LIBPATH){*}

[13:48] <alaziz>     our sub vector_free(SVector) is native(LIBPATH) {*}

[13:48] <alaziz>     multi method new (@arr) {

[13:48] <alaziz>         self.bless(data => @arr, nelems => @arr.elems)

[13:48] <alaziz>     }

[13:48] <alaziz>     method zeros(Int $n){

[13:48] <alaziz>         vector_zeros($n);

[13:48] <alaziz>     }

[13:48] <alaziz>     method vector_sum(SVector $b) {

[13:48] <alaziz>         vector_sum(self, $b);

[13:48] <alaziz>     }

[13:49] <alaziz>     submethod DESTROY {

[13:49] <alaziz> and this fails with:

[13:49] <alaziz> assign requires a concrete object (got a NativeCall::Types::CArray[int32] type object instead)

[13:49] <alaziz>   in method new at prova1.raku line 16

[13:49] <alaziz>   in block <unit> at prova1.raku line 38

[13:49] <alaziz> ok, the lines may be wrong because I deleted code that is irrelevant here

[13:50] <alaziz> the error is when I try to construct my SVector, but I don't understand from the error what I should do

[13:53] <lizmat> alaziz: please, use a gist for code listings

[13:54] <sjn> yeah, that error is LTA (less than awesome) for me too. searching got "concrete object" in the docs yields no results too

[13:54] <discord-raku-bot> <antononcube> @sjn Also, no fire code errors, blue code errors, and objection errors.

[13:56] <discord-raku-bot> <antononcube> @sjn Since your deeply disappointed : have you tried using Markdeep (instead of Markdown) ?

[13:56] <sjn> #Markdownunder

[13:57] <discord-raku-bot> <antononcube> https://casual-effects.com/markdeep/

[13:57] * sjn can't help alaziz, and hope someone who knows NativeCall shows up eventually

[13:57] <sjn> hopes*

[13:58] <discord-raku-bot> <antononcube> @sjn hopes deeply (FTFY.)

[13:59] * sjn reaches down to the bottomless depths of his hopeium reserves, to see if he can find some more

[13:59] <alaziz> does it make sense to ask in #raku?

[14:00] <sjn> alaziz: wouldn't hurt. it's not exactly a beginner question you asked, maybe? :-D

[14:00] <discord-raku-bot> <antononcube> @alaziz It is fine to ask here -- just use pastebin, or something...

[14:01] <sjn> yeah google gists or pastebin helps a lot with reproducing and helping

[14:02] <discord-raku-bot> <antononcube> @sjn Consider stocking up with rakunium.

[14:04] <alaziz> @sjn maybe yes, maybe not, but I wrote my first raku line less than 2 hours ago

[14:04] <sjn> rakudonium! #atomicTypes

[14:05] <sjn> alaziz: nice! jumping right into the deep end! well done :-D

[14:05] <alaziz> I'm now thinking that since a CStruct represents a pointer to a struct in C, it cannot really be initialized in raku, and new should just delegate to a C function

[14:07] <discord-raku-bot> <antononcube> @sjn Ok, also with rakudontium.

[14:18] <alaziz> yes, it seems that we are not allowed to initialize CStruct from raku code

[14:22] *** alaziz left
[14:42] <discord-raku-bot> <antononcube> rakudontium it is, then.

[16:16] <discord-raku-bot> <librasteve> alaziz: I guess you have looked at this doc ? https://docs.raku.org/language/nativecall#Structs

[16:26] <discord-raku-bot> <librasteve> had a play - seems to me that your .new method implicitly uses assign (likely to get list assignment semantics) but that nativecall requires binding with := so as in the example NativeCall currently doesn't put object members in containers, so assigning new values to them (with =) doesn't work. Instead, you have to bind (with :=) new values to the private members: you will need to provide a method TWEAK

[16:26] <discord-raku-bot> or similar

[16:27] <lizmat> is built(:bind) perhaps ?

[16:31] <discord-raku-bot> <librasteve> SVector.new(data => NativeCall::Types::CArray[int32].new, nelems => 3) with has CArray[int32] $!data is built(:bind);

[16:33] *** dakkar left
[20:45] *** alaziz joined
[20:47] <alaziz> thank you @librasteve, I will try using BUILD and TWEAK

[20:52] <alaziz> what do you guys use raku for?

[21:36] *** alaziz left
[22:06] <ab5tract> alaziz: Mostly glue, as I don’t have a lot of free time for big projects at the moment. It’s my first stop for any integration or analysis work

[22:07] <ab5tract> I did have a lot of fun writing a Tetris clone and a blizzard simulator last year too

[22:24] <discord-raku-bot> <antononcube> @alaziz I use Raku in three major project groups: 1. DSL translation and conversational agents 2. Advanced LLM interactions 3. Increasingly, for exploratory data analysis and certain type of scientific research

[22:25] <discord-raku-bot> <antononcube> The DSL translation and conversational agents often require hooking to sime "serious" data that can be both "public" and "private." That is why, for example, I work on certain geography-related features of Raku.

