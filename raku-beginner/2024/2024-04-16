[00:15] *** Manifest0 left
[02:55] *** deadmarshal_ left
[03:02] *** deadmarshal_ joined
[04:27] *** lizmat left
[06:55] *** Manifest0 joined
[08:14] *** dakkar joined
[08:26] *** deadmarshal_ left
[08:40] *** camelia left
[08:47] *** camelia joined
[08:52] *** deadmarshal_ joined
[09:00] *** camelia left
[09:03] *** camelia joined
[09:04] *** deadmarshal_ left
[09:05] *** lizmat joined
[09:06] *** camelia left
[09:14] *** camelia joined
[09:17] *** deadmarshal_ joined
[10:07] *** hudo left
[11:52] *** dakkar left
[11:53] *** dakkar joined
[14:56] *** swaggboi left
[15:08] *** avuserow left
[15:09] *** avuserow joined
[15:12] <discord-raku-bot> <antononcube> I know I can use <A B>.any in code like sq 'C' eq <A B>.any . But what is the point / how can I use the expression any("A", "B")  .

[15:18] <discord-raku-bot> <librasteve> Junctions are largely intended to be used in logical operations

[15:18] <discord-raku-bot> <librasteve> - I mean in the logical test part

[15:23] <discord-raku-bot> <antononcube> ok, and how is any('A', 'B') is used in those?

[15:32] <discord-raku-bot> <nahita3882> any("A", "B") is the same as ("A", "B").any is the same as "A" | "B" (also is the same as any(("A", "B")))

[15:33] <discord-raku-bot> <nahita3882> there is a subroutine any which calls .any on its invocant (and its signature is +values, so last one is the same for that reason)

[15:35] <discord-raku-bot> <nahita3882> https://github.com/rakudo/rakudo/blob/cee25a7c08725b4f0f913e2905d1b066979c6b39/src/core.c/Junction.rakumod#L487

[15:35] <discord-raku-bot> <antononcube> Thanks1

[15:49] <discord-raku-bot> <librasteve> m: sub fn($x) {if <A B>.any eq $x {say 'ok'}}; say fn:<A>; say fn<C>;

[15:49] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Undeclared routine:     fn:<A> used at line 1  

[15:49] <discord-raku-bot> <librasteve> m: sub fn($x) {if <A B>.any eq $x {say 'ok'}}; say fn <A>; say fn <C>;

[15:49] <discord-raku-bot> <Raku eval>  ok True () 

[15:50] <discord-raku-bot> <librasteve> hopfully you get the idea

[16:39] *** dakkar left
[17:06] <discord-raku-bot> <.ohnowendigo> I really value that experts like @antononcube are willing to ask questions about parts of Raku they don't fully understand. It's a really big and complex language

[17:09] <discord-raku-bot> <antononcube> I do not consider myself an expert in Raku -- I use it 70% of the time, but it is the slowest language I program with. Mostly because of my implicit assumptions about Raku based on too much programming with LISP-like languages.

[19:24] <discord-raku-bot> <librasteve> ++

