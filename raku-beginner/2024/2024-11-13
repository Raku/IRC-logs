[00:36] *** Heptite left
[01:35] *** Heptite joined
[02:39] *** Heptite left
[12:36] *** Manifest0 joined
[12:44] *** Manifest0 left
[12:55] *** Manifest0 joined
[13:06] *** Manifest0 left
[13:20] *** Todd270 joined
[13:21] <Todd270> How do I do a binary write to the STDOUT?

[13:30] <discord-raku-bot> <yabobay> Todd270: $*OUT.write(blob8.new(65))

[13:31] <discord-raku-bot> <yabobay> write accepts a Blob which contains binary data

[13:40] *** Manifest0 joined
[13:41] <discord-raku-bot> <yabobay> anyone know how to set a Hash as a key in a Hash or Pair? it always seems to stringify whenever i try to do it

[13:43] <discord-raku-bot> <yabobay> oh i see in the docs you literally can't. something else i could do instead?

[13:50] <lizmat> m: my %h{Hash} = { a => 42, b => 666 } => "foobar"; dd %h

[13:50] <camelia> rakudo-moar 02910e431: OUTPUT: «Any  = (my Any %{Hash} = {:a(42), :b(666)} => "foobar")␤»

[13:51] <lizmat> https://docs.raku.org/language/hashmap#Non-string_keys_(object_hash)

[13:51] <lizmat> yabobay ^^

[13:52] <discord-raku-bot> <yabobay> thank you!

[14:26] *** lizmat_ left
[14:26] *** lizmat joined
[14:55] *** Manifest1 joined
[14:55] *** Manifest1 left
[15:23] *** Manifest0 left
[16:46] <discord-raku-bot> <.ohnowendigo> Something fun I discovered yesterday: you can use := to give multiple hash keys the same value, which will be useful for giving a value multiple ids

[16:47] <discord-raku-bot> <.ohnowendigo> m: my %h = :5a; %h<b> := %h<a>; %h<b>++; say %h

[16:47] <discord-raku-bot> <Raku eval>  {a => 6, b => 6} 

[16:48] <lizmat> ohnowendigo  that has nothing to do with hashes, but everything about containers

[16:49] <lizmat> m: my $a = 42; my $b := $a; $b = 666; say $a

[16:49] <camelia> rakudo-moar 2053ea988: OUTPUT: «666␤»

[16:49] <discord-raku-bot> <.ohnowendigo> Use case I'm thinking of: have an internal id for something, but get a temporary autogenerated id when I call an API. So now I can do %h{apicall($id)} := %h{$id} and refer to it either by the internal id or the generated id

[16:50] <lizmat> yes, that is a use case!

[17:36] *** tea3po left
[17:36] *** teatime joined
[18:12] *** Manifest0 joined
[18:18] *** Manifest0 left
