[00:08] <discord-raku-bot> <aruniecrisps> I figured out what happened, i just forced linked the pg lib to /usr/local

[00:35] <discord-raku-bot> <aruniecrisps> @SmokeMachine so here's what I'm doing, i'm making an PR to the Moneys library that handles currency more properly

[00:50] <discord-raku-bot> <aruniecrisps> I'm making a separate currency enum type

[01:08] <SmokeMachine> Is there a link for the mr? I got curious

[01:18] <discord-raku-bot> <aruniecrisps> It's preliminary work right now, I'm making changes as we speak https://github.com/arunvickram/Moneys/pull/2

[02:10] *** Manifest0 left
[04:43] *** CIAvash joined
[08:25] *** hudo_ joined
[08:26] *** CIAvash left
[08:28] *** teatwo left
[09:01] <discord-raku-bot> <librasteve> SmokeMachine:  yes ‚Ä¶ your example shows the case where you inflate/deflate a column of objects eg with amount + currency and store as json (i think). that‚Äôs ok  if there is a mix of currencies. my question is can you show an example where the class has currency attribute but this is always (eg) USD so then only the amount values are stored (eg) as a decimal

[09:04] <discord-raku-bot> <librasteve> i‚Äôm curious because i imagine a list (or maybe a time series) of Physics::Measure objects where i have  class Measure { has Real $.value; has Unit $.unit ‚Ä¶ }

[09:05] <discord-raku-bot> <librasteve> but typically I want to store a column of measurements all with the same Unit

[09:06] <discord-raku-bot> <librasteve> like a list of daily weights all in kg

[09:52] *** teatime joined
[10:25] *** teatime left
[10:59] *** Manifest0 joined
[12:21] *** hudo_ left
[12:48] *** habere-et-disper joined
[12:52] <SmokeMachine> librasteve: Do you mean something like this? https://www.irccloud.com/pastebin/EqJEdyeE/

[12:55] <habere-et-disper> m: 1..* ==> grep *.is-prime ==> head(10)

[12:55] <camelia> rakudo-moar aa1b89daf: ( no output )

[12:56] <habere-et-disper> ¬†m: 1..* ==> grep *.is-prime ==> head(10) ==> say()

[12:56] <camelia> rakudo-moar aa1b89daf: OUTPUT: ¬´(2 3 5 7 11 13 17 19 23 29)‚ê§¬ª

[12:56] <habere-et-disper> ¬†m: 1..* ==> grep *.is-prime ==> head: 10 ==> say()

[12:56] <camelia> rakudo-moar aa1b89daf: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Confused‚ê§at <tmp>:1‚ê§------> 31..* ==> grep *.is-prime ==> head:‚èè 10 ==> say()‚ê§    expecting any of:‚ê§        colon pair‚ê§¬ª

[12:57] <habere-et-disper> Why is it that the shortcut form using colon is problematic here ?

[13:06] <habere-et-disper> I see that just deleting it works !

[13:06] <habere-et-disper> m: 1..* ==> grep *.is-prime ==> head 10 ==> say()

[13:06] <camelia> rakudo-moar aa1b89daf: OUTPUT: ¬´(2 3 5 7 11 13 17 19 23 29)‚ê§¬ª

[13:10] <discord-raku-bot> <librasteve> smokemachine: oh yes, perfect! thanks ‚Ä¶

[13:11] <SmokeMachine> :)

[13:14] <SmokeMachine> librasteve: Are you planing to use something like that somewhere?

[13:14] <discord-raku-bot> <librasteve> habere: the colon form head: 10 is a method call syntax

[13:15] <discord-raku-bot> <librasteve> maybe you need to add a *.head ‚Ä¶?

[13:17] <habere-et-disper> Interesting, thanks. I think of head(10) and head: 10 as forming an equivalence when there is but one passed parameter but I guess that's just with method chains.

[13:21] <discord-raku-bot> <librasteve> SmokeMachine: i am considering the challenge from anton to make a time series of Measures ‚Ä¶ in my head, there are two parts, one is to do the inflate / deflate thing (where you can hold the units constant) and then there‚Äôs the storage layer ‚Ä¶ so now i am wondering if there‚Äôs an angle to use a raku Dan data frame as a column store under Red ‚Ä¶ as a parallel to various Sql to eg Pandas mapping tools

[13:21] <discord-raku-bot> in the Python world

[13:26] <SmokeMachine> librasteve: That sounds interesting...

[13:26] <SmokeMachine> please let me know if I can help somehow

[13:27] <discord-raku-bot> <librasteve> so I see that Red is possibly a good approach for a common inflate / deflate model since anyway I need somtpething like

[13:30] <discord-raku-bot> <librasteve>  class TimeSeries {   has Time @.t-series is column;   has Mass @.m-series is column ... inflate/deflate blah; } 

[13:30] <discord-raku-bot> <librasteve> anyway just at the inception stage right now ... too many things!

[13:31] <discord-raku-bot> <librasteve> thanks!

[13:32] <SmokeMachine> :+1

[13:32] <SmokeMachine> üëç

[13:34] <discord-raku-bot> <librasteve> another question - can Red use a non-SQL store like a csv?

[13:34] <SmokeMachine> not yet... :(

[13:36] <SmokeMachine> but it's kinda possible to implement a Red::Driver that could do that

[13:37] <discord-raku-bot> <librasteve> is that thoroughly documented?

[13:37] <discord-raku-bot> <librasteve> ;-)

[13:39] <discord-raku-bot> <librasteve> I guess for a csv there are SQL libs out there you can make a new Red::Driver from

[13:41] <SmokeMachine> https://fco.github.io/Red/api/Red/Driver :)

[13:42] <SmokeMachine> I suppose you can... :)

[13:43] <SmokeMachine> Not sure if it cem help, but I've been working on this custom Driver for MySQL: https://fco.github.io/Red/api/Red/Driver

[13:44] <discord-raku-bot> <librasteve> Similarly to Spark, Polars uses the SQLContext to manage SQL queries ...  https://wolliq.medium.com/polars-is-all-you-need-sql-chapter-2e4385dd75c2

[13:45] <discord-raku-bot> <librasteve> ^^ this

[13:46] <discord-raku-bot> <librasteve> that'll give me a big goal for the rest of 2024 then

[13:47] <SmokeMachine> please, let me know if I can help somehow

[13:48] <discord-raku-bot> <librasteve> will do!

[14:02] *** habere-et-disper left
[15:10] <discord-raku-bot> <librasteve> habere: I just tried your example

[15:10] <discord-raku-bot> <librasteve> m: 1..* ==> grep *.is-prime ==> *.head: 10 ==> say()

[15:10] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Only routine calls or variables that can '.push' may appear on either side of feed operators. at /home/glot/main.raku:1 ------> 1..* ==> grep *.is-prime ==> *‚èè.head: 10 ==> say() 

[15:10] <discord-raku-bot> <librasteve> [looks like Discord swallowed the (*)]

[15:11] <discord-raku-bot> <librasteve> I think the error msg says it pretty clearly

[15:40] <ab5tract> m: 1..* ==> grep *.is-prime ==> map *.head: 10 ==> say()

[15:40] <camelia> rakudo-moar aa1b89daf: OUTPUT: ¬´(...)‚ê§¬ª

[15:41] <ab5tract> m: 1..* ==> grep *.is-prime ==> with *.head(10) ==> say()

[15:41] <camelia> rakudo-moar aa1b89daf: OUTPUT: ¬´===SORRY!=== Error while compiling <tmp>‚ê§Undeclared routine:‚ê§    with used at line 1‚ê§‚ê§¬ª

[15:41] * ab5tract moves to repl

[15:42] <ab5tract> anyway, the colon argument dispatch syntax is indeed reserved for method calls

[16:09] <discord-raku-bot> <antononcube> Can someone point out to me a repository or file with a Windows GitHub actions with testing. (For a Raku package/module.)

[17:10] *** Tirifto left
[17:14] *** Tirifto joined
[18:11] *** hudo_ joined
[18:38] <discord-raku-bot> <librasteve> m: say(head 10, (grep .is-prime, (1..)))

[18:38] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Undeclared routine:     head used at line 1  

[18:39] <discord-raku-bot> <librasteve> m: say(head(10, (grep .is-prime, (1..))))

[18:39] <discord-raku-bot> <Raku eval>  Exit code: 1 ===SORRY!=== Error while compiling /home/glot/main.raku Undeclared routine:     head used at line 1  

[18:41] <discord-raku-bot> <librasteve> hmph - works in my repl (anyway I was just hoping to illustrate that pipes ==> are sugar for backwards call chains)

[21:42] <discord-raku-bot> <aruniecrisps> Started work on a tree-sitter-raku project: https://github.com/arunvickram/tree-sitter-raku

[21:57] <gfldex> m: 1..* ==> grep(*.is-prime) ==> head(10) ==> say();

[21:57] <camelia> rakudo-moar aa1b89daf: OUTPUT: ¬´(2 3 5 7 11 13 17 19 23 29)‚ê§¬ª

[22:05] *** hudo_ left
[22:19] *** habere-et-disper joined
[22:19] <habere-et-disper> Can I ask raku programmatically how many operators it has? There seem to be 150+.

[23:05] *** habere-et-disper left
[23:19] <discord-raku-bot> <antononcube> @habere-et-disper I had a similar question recently, (about Raku's keywords), and I was told to look into the localization "L10N" or similar.

