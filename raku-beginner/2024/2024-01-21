[01:27] <discord-raku-bot> <antononcube> @arun Could be. I still use "Cro", but many people claim successful / pleasant migration to "HummingBird".

[01:29] <discord-raku-bot> <antononcube> Well, by "many" and I mean "two or three" -- I am rounding up...

[02:10] *** Manifest0 left
[06:34] *** teatime joined
[10:35] *** Manifest0 joined
[11:38] *** lizmat_ joined
[11:42] *** lizmat left
[11:42] *** lizmat_ left
[11:42] *** lizmat joined
[17:05] <discord-raku-bot> <librasteve> i like literate programming a lot  … often (in personal stuff) i use markdown and then i have a raku script that runs the stuff within (raku) MD code fences .., also kudos to Jupyter

[19:22] <discord-raku-bot> <antononcube> > and then i have a raku script that runs the stuff within (raku) MD code fences  This what "Text::CodeProcessing" does. Please make a gist or a package of your code.

[19:22] <discord-raku-bot> <antononcube> (And share)

[20:23] <discord-raku-bot> <librasteve> oh - haha - my script is very minimal … please let me take a look at Text::CodeProcessing when i get a chance and let you know if it’s the same idea

[20:32] <discord-raku-bot> <antononcube> "Text::CodeProcessing" has two main features: 1) the literate programming documents -- or computational documents -- can be in the formats Markdown, Org-mode, and POD6, 2) different code blocks in a computational document are evaluated in the same context.

