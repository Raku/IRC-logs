[01:35] *** lizmat_ joined
[01:38] *** lizmat left
[02:14] *** MasterDuke joined
[03:00] *** DarthGandalf left
[07:39] *** lizmat_ left
[07:39] *** lizmat joined
[08:08] *** dakkar joined
[08:54] *** DarthGandalf joined
[09:59] *** Manifest0 joined
[10:50] *** hudo joined
[12:45] *** tea3po joined
[12:48] *** teatwo left
[14:47] *** soverysour joined
[14:48] *** soverysour left
[14:48] *** soverysour joined
[15:05] <discord-raku-bot> <ay0ks> Hello, could you help me to write QAST nodes to use a module? I really couldn't find any examples for that perl make QAST::Stmts.new(     # use Pretty::Debug;     QAST::Op.new(         :op('bind'),         QAST::Var.new( :name('$*LOGGER'), :scope('lexical'), :decl('var') ),         QAST::WVal.new( :value('replace this') ),         # call Logger.new     ), ); 

[15:05] <discord-raku-bot> <ay0ks> The assignment works but I need to assign an initialized class to it

[15:05] <discord-raku-bot> <ay0ks> https://cdn.discordapp.com/attachments/768511641758466088/1239956765077012520/image.png?ex=6644cf3a&is=66437dba&hm=9f7c87ccd30d7c6bb30bb099560efc5220b10da39170f0ef6dee31249f11b860&

[15:06] <discord-raku-bot> <ay0ks> Doing QAST::WVal.new( :value(Logger.new) ) gives an error

[15:32] <discord-raku-bot> <librasteve> sorry - I have no experience in using RakuAST - hopefully others can help, but as lizmat mentioned, this is at the raw bleeding edge - so it maybe that there is no real way to answer this outside of descending into the rakudo source code

[15:48] <lizmat> ayoks at this point in time: what librasteve said

[15:50] * ab5tract wonders what a Slang::Roman ported to Slangify would look like

[15:51] <discord-raku-bot> <librasteve> "depends": [     "Slangify:ver<0.0.1+>:auth<zef:lizmat>"   ],

[15:52] <discord-raku-bot> <librasteve> ^^ err I thought it was implemented on Slagify already, but maybe that's wrong

[15:52] <lizmat> Last line in the code of Slang::Roman: use Slangify Grammar, Actions;

[15:55] <discord-raku-bot> <librasteve> lizmat: I am thinking about writing a slang using Slangify ... would Slang::Roman be a good starting point to adapt? if not, is there one you can suggest?

[15:56] <lizmat> I guess any of the Slang:: modules that use Slangify could be inspiration, depending on what you want to do

[16:00] <discord-raku-bot> <librasteve> great - I see that Slangify has 6 reverse dependencies, including Slang::Roman - so I can ape that then (I was thrown off by ab5tract's remark ^^)

[16:00] <discord-raku-bot> <librasteve> cool

[16:04] <ab5tract> Huhâ€¦ Slang::Roman uses QAST.. I would have expected Slangify to be above and beyond that requirement

[16:04] <ab5tract> Sorry for the misdirection librasteve

[16:06] <lizmat> Slang::Roman uses QAST only when using the legacy grammar, in the Raku grammar it uses RakuAST

[16:06] <lizmat> the former is basically a leftover from the original implementation by DrForr

[16:07] <lizmat> the late DrFor have to say  :-(

[16:24] <ab5tract> I miss him

[16:40] <discord-raku-bot> <librasteve> ah - that explains ...

[16:42] *** dakkar left
[17:43] <lizmat> https://github.com/rakudo/rakudo/blob/main/IN-MEMORIAM.md#jeff-goff-drforr   # for the people who don't know about DrForr

[20:45] *** hankache joined
[20:47] *** hankache left
[21:01] *** soverysour left
[23:43] *** Manifest0 left
