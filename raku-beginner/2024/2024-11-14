[00:32] *** Manifest0 joined
[01:32] *** swaggboi left
[01:36] *** Manifest0 left
[01:45] *** swaggboi joined
[03:46] *** Chanakan5591 joined
[03:46] *** Chanakan left
[06:39] *** Tirifto left
[06:54] *** Tirifto joined
[08:58] *** Manifest0 joined
[09:58] *** teatwo joined
[09:59] *** tea3po joined
[10:00] *** teatime left
[10:01] *** teatime joined
[10:02] *** teatwo left
[10:04] *** tea3po left
[11:26] *** Chanakan5591 left
[14:36] *** snonux left
[14:37] *** snonux joined
[19:57] *** teatwo joined
[19:59] *** teatime left
[20:16] <discord-raku-bot> <dwinkley> thought id quickly pick up raku as another fp language by doing aoc problems but ive literally been stuck for an hour on day 1 part 2. this is the problematic part of my code: @inp.map({     my $parsed = %replace.pairs.reduce( -> $acc, $pair {         $acc.subst($pair.key, $pair.value, :g);     }, $_); }); the compiler is saying this: Cannot resolve caller reduce(Seq:D: Block:D, Str:D); none of these

[20:16] <discord-raku-bot> signatures matches:     (Any:U: &, *%_ --> Nil)     (Any:D: &with, *%_)   in block <unit> at main.raku line 19 and i havent been able to find very great documentation on the reduce function for this use case. can anyone help me?

[20:17] <discord-raku-bot> <dwinkley> thanks in advance for the help

[20:56] <discord-raku-bot> <antononcube> Most likely you have to use |$_ .

[20:57] <discord-raku-bot> <antononcube> Actually that ($_) is a string -- make sure $_ is a list.

[21:07] <discord-raku-bot> <dwinkley> so $_.comb?

[21:08] <discord-raku-bot> <dwinkley> both of these suggestions still give the same error

[21:16] <ab5tract> I would first suggest pulling the operations apart, if possible

[21:17] <ab5tract> Also,explicitly naming the argument to map instead of using the topic variable can help clarify things

[21:20] <ab5tract> It might be easier to help if the full code was shared

[21:23] <ab5tract> Anyway, the error message is stating that the only signature for reduce is a single callable

[21:25] <discord-raku-bot> <librasteve> @dwinkley could you provide a gist so that we have some context ...?

[21:26] <ab5tract> *%_ is a bit hard to read but that is a default parameter in (almost) all signatures

[21:39] <discord-raku-bot> <antononcube> The first suggestion -- using a slip -- works if $_  is a list/array.

[21:40] <discord-raku-bot> <antononcube> So, you have/had to use |$_.comb .

[21:40] <discord-raku-bot> <dwinkley> of course https://gist.github.com/dwinkley2/ba2f74aa958bf1dd1a34f14c5cea9d99

[21:40] <discord-raku-bot> <librasteve> tx!

[21:47] <discord-raku-bot> <librasteve> @dwinkley I am struggling a bit to understand what you are aiming to do - please can you provide an example result maybe?

[21:49] <discord-raku-bot> <dwinkley> I want to execute every predefined 'replace' on $_

[21:49] <discord-raku-bot> <dwinkley> And preferably without mutation

[21:50] <discord-raku-bot> <dwinkley> You can ignore the check_str parts

[21:50] <discord-raku-bot> <librasteve> oh, ok

[22:01] <discord-raku-bot> <librasteve> i think you need .trans just chacking...

[22:24] <discord-raku-bot> <librasteve>  my %replace2 = %replace.map( { [.key] => [.value] } ); say @inp>>.trans(%replace2); 

[22:26] <discord-raku-bot> <librasteve> this does the job - it seems that .trans needs the key and value of Pairs to be lists to do multicharacter insertions https://docs.raku.org/routine/trans#(Str)_method_trans

[22:56] <discord-raku-bot> <librasteve>  for @inp -> $inp is rw {     for %replace {         $inp .= subst( .key, .value );     }        say $inp } 

[22:56] <discord-raku-bot> <librasteve> this works too ... best I can come up with at 11pm ... must sleep

